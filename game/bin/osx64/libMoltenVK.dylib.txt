0     p
0   0@@@@``@@@PPP00 0
0 && "DetachThread(): Unable to clear init flag
0 && "InitProcess(): Failed to allocate TLS area for init flag
0 && "InitProcess(): Failed to initialize global pool
0 && "InitThread(): Process hasn't been initalised
0 && "InitThread(): Unable to set init flag
0 && "OS_AllocTLSIndex(): Unable to allocate Thread Local Storage
0 && "OS_SetTLSValue(): Invalid TLS Index
0 && "Unhandled subgroup operation
0 && "Unreachable
0 && "unexpected behavior
0 PPPP`@0@0
0 PPTTX8<P8
0 and upH
0)), extract_bits(0xFFFFFFFF, (uint)max((int
0.0 / 0.0
0.0f / 0.0f
0.0lf / 0.0lf
00 0@0     `000
00000000
000000000
0000000000
000000000000000000000000000
0000000000000000000000000000
00000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000P00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000PPPPPPPPPPPPPPPP0000000000000000000000 p@000@0000000@0000000000@0@0
000000QQQQQQQQQ
000@@@@000000000P  00000`0000000@00000
0123456789
0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz
0123456789ABCDEF
01234567H
016MVKDescriptorSet
022MVKCommandEncoderState
03256:;89=>@BDFHJ
07h(87n
0; SPIRV_Cross_Dummy
0@0P0@ 0P 0
0@@ pP@P0
0@y*0@yI
0GLSLToSPIRVConverter
0H+{0H
0I+~(tXL
0I;]8tvL
0N7glslang9TIoMapperE
0StepFunctionFromVkVertexInputRate
0[A\A^A
0`0 00
0`P000000
0`` `  0p
0iewportFromVkViewport
0u, 0u
0x%08x, Revision %d
0x%llx%s
1 - 32, 0)), uint2(0
1 - 32, 0), (uint)max((int
1, 0)), extract_bits(0xFFFFFFFF, (uint)max((int
1, 32u)), extract_bits(0xFFFFFFFF, 0, (uint)max((int
1, 32u), (uint)max(min((int
1, 32u), 0)), uint2(0
1.#INF
1.0 / 0.0
1.0f / 0.0f
1.0lf / 0.0lf
1.1110
1/4 stride is too large
10 requiH
10MVKCmdDraw
10MVKCommand
10MVKSampler
10MVKSurface
111111111111111111
11MVKCmdQuery
11MVKInstance
11MVKPipeline
11MVKResource
11TIntermNode
11TUniformMap
128 lanes in an SIMD-group
12MVKDXTnCodec
12MVKImageView
12MVKQueryPool
12MVKSemaphore
12MVKSwapchain
12MVKWatermark
13MVKBaseObject
13MVKBufferView
13MVKDescriptor
13MVKImagePlane
13MVKObjectPoolI10MVKCmdDrawE
13MVKObjectPoolI14MVKCmdDispatchE
13MVKObjectPoolI14MVKCmdEndQueryE
13MVKObjectPoolI14MVKCmdSetEventE
13MVKObjectPoolI15MVKCmdBlitImageILm1EEE
13MVKObjectPoolI15MVKCmdBlitImageILm4EEE
13MVKObjectPoolI15MVKCmdCopyImageILm1EEE
13MVKObjectPoolI15MVKCmdCopyImageILm4EEE
13MVKObjectPoolI16MVKCmdBeginQueryE
13MVKObjectPoolI16MVKCmdCopyBufferILm1EEE
13MVKObjectPoolI16MVKCmdCopyBufferILm4EEE
13MVKObjectPoolI16MVKCmdFillBufferE
13MVKObjectPoolI16MVKCmdResetEventE
13MVKObjectPoolI16MVKCmdSetScissorILm16EEE
13MVKObjectPoolI16MVKCmdSetScissorILm1EEE
13MVKObjectPoolI16MVKCmdWaitEventsILm1EEE
13MVKObjectPoolI16MVKCmdWaitEventsILm8EEE
13MVKObjectPoolI16MVKCommandBufferE
13MVKObjectPoolI17MVKCmdDrawIndexedE
13MVKObjectPoolI17MVKCmdNextSubpassE
13MVKObjectPoolI17MVKCmdSetViewportILm16EEE
13MVKObjectPoolI17MVKCmdSetViewportILm1EEE
13MVKObjectPoolI18MVKCmdDrawIndirectE
13MVKObjectPoolI18MVKCmdResolveImageILm1EEE
13MVKObjectPoolI18MVKCmdResolveImageILm4EEE
13MVKObjectPoolI18MVKCmdSetDepthBiasE
13MVKObjectPoolI18MVKCmdSetLineWidthE
13MVKObjectPoolI18MVKCmdUpdateBufferE
13MVKObjectPoolI19MVKCmdEndRenderPassE
13MVKObjectPoolI19MVKCmdPushConstantsILm128EEE
13MVKObjectPoolI19MVKCmdPushConstantsILm512EEE
13MVKObjectPoolI19MVKCmdPushConstantsILm64EEE
13MVKObjectPoolI20MVKCmdDebugMarkerEndE
13MVKObjectPoolI20MVKCmdResetQueryPoolE
13MVKObjectPoolI20MVKCmdSetDepthBoundsE
13MVKObjectPoolI20MVKCmdWriteTimestampE
13MVKObjectPoolI21MVKCmdBeginRenderPassILm1EEE
13MVKObjectPoolI21MVKCmdBeginRenderPassILm2EEE
13MVKObjectPoolI21MVKCmdBeginRenderPassILm9EEE
13MVKObjectPoolI21MVKCmdBindIndexBufferE
13MVKObjectPoolI21MVKCmdBufferImageCopyILm16EEE
13MVKObjectPoolI21MVKCmdBufferImageCopyILm1EEE
13MVKObjectPoolI21MVKCmdBufferImageCopyILm4EEE
13MVKObjectPoolI21MVKCmdBufferImageCopyILm8EEE
13MVKObjectPoolI21MVKCmdClearColorImageILm1EEE
13MVKObjectPoolI21MVKCmdClearColorImageILm4EEE
13MVKObjectPoolI21MVKCmdExecuteCommandsILm16EEE
13MVKObjectPoolI21MVKCmdExecuteCommandsILm1EEE
13MVKObjectPoolI21MVKCmdPipelineBarrierILm1EEE
13MVKObjectPoolI21MVKCmdPipelineBarrierILm32EEE
13MVKObjectPoolI21MVKCmdPipelineBarrierILm4EEE
13MVKObjectPoolI22MVKCmdDebugMarkerBeginE
13MVKObjectPoolI22MVKCmdDispatchIndirectE
13MVKObjectPoolI22MVKMTLBufferAllocationE
13MVKObjectPoolI23MVKCmdBindVertexBuffersILm1EEE
13MVKObjectPoolI23MVKCmdBindVertexBuffersILm2EEE
13MVKObjectPoolI23MVKCmdBindVertexBuffersILm8EEE
13MVKObjectPoolI23MVKCmdDebugMarkerInsertE
13MVKObjectPoolI23MVKCmdPushDescriptorSetE
13MVKObjectPoolI23MVKCmdSetBlendConstantsE
13MVKObjectPoolI25MVKCmdBindComputePipelineE
13MVKObjectPoolI25MVKCmdDrawIndexedIndirectE
13MVKObjectPoolI25MVKCmdSetStencilReferenceE
13MVKObjectPoolI25MVKCmdSetStencilWriteMaskE
13MVKObjectPoolI26MVKCmdBindGraphicsPipelineE
13MVKObjectPoolI26MVKCmdCopyQueryPoolResultsE
13MVKObjectPoolI27MVKCmdClearMultiAttachmentsILm1EEE
13MVKObjectPoolI27MVKCmdClearMultiAttachmentsILm4EEE
13MVKObjectPoolI27MVKCmdClearSingleAttachmentILm1EEE
13MVKObjectPoolI27MVKCmdClearSingleAttachmentILm4EEE
13MVKObjectPoolI27MVKCmdSetStencilCompareMaskE
13MVKObjectPoolI28MVKCmdClearDepthStencilImageILm1EEE
13MVKObjectPoolI28MVKCmdClearDepthStencilImageILm4EEE
13MVKObjectPoolI30MVKCmdBindDescriptorSetsStaticILm1EEE
13MVKObjectPoolI30MVKCmdBindDescriptorSetsStaticILm4EEE
13MVKObjectPoolI30MVKCmdBindDescriptorSetsStaticILm8EEE
13MVKObjectPoolI31MVKCmdBindDescriptorSetsDynamicILm4EEE
13MVKObjectPoolI31MVKCmdBindDescriptorSetsDynamicILm8EEE
13MVKObjectPoolI35MVKCmdPushDescriptorSetWithTemplateE
13MVKRenderPass
13TShHandleBase
147<?ACEGIK
14MVKCmdDispatch
14MVKCmdEndQuery
14MVKCmdSetEvent
14MVKCommandPool
14MVKEventNative
14MVKFenceSitter
14MVKFramebuffer
14MVKQueueFamily
14TGenericLinker
15MVKCmdBlitImageILm1EE
15MVKCmdBlitImageILm4EE
15MVKCmdCopyImageILm1EE
15MVKCmdCopyImageILm4EE
15MVKDeviceMemory
15MVKLayerManager
15MVKPixelFormats
15MVKShaderModule
15printMSLVersionEjb
16) | (uint
16-bit  literal
16-bit arrays not supported
16-bit hexadecimal literal
16-bit integer literal
16-bit literal
16-bit octal literal
16-bit signed integer
16-bit signed integer vector
16-bit unsigned integer
16-bit unsigned integer literal
16-bit unsigned integer vector
16-bit vectors only take vector types
16;@EL
16MVKCmdBeginQuery
16MVKCmdClearImageILm1EE
16MVKCmdClearImageILm4EE
16MVKCmdCopyBufferILm1EE
16MVKCmdCopyBufferILm4EE
16MVKCmdFillBuffer
16MVKCmdResetEvent
16MVKCmdSetScissorILm16EE
16MVKCmdSetScissorILm1EE
16MVKCmdWaitEventsILm1EE
16MVKCmdWaitEventsILm8EE
16MVKCommandBuffer
16MVKDescriptorSet
16MVKEventEmulated
16MVKExtensionList
16MVKLinkableMixinI10MVKCommandE
16MVKLinkableMixinI16MVKCommandBufferE
16MVKLinkableMixinI22MVKMTLBufferAllocationE
16MVKMetalCompiler
16MVKPipelineCache
16MVKRenderSubpass
16MVKSemaphoreImpl
16MVKShaderLibrary
16TGenericCompiler
17MVKCmdDebugMarker
17MVKCmdDrawIndexed
17MVKCmdNextSubpass
17MVKCmdSetViewportILm16EE
17MVKCmdSetViewportILm1EE
17MVKCommandEncoder
17MVKDescriptorPool
17MVKImageViewPlane
17MVKPhysicalDevice
17MVKPipelineLayout
17MVKSwapchainImage
17TUniformLinkedMap
18MVKCmdBindPipeline
18MVKCmdDrawIndirect
18MVKCmdResolveImageILm1EE
18MVKCmdResolveImageILm4EE
18MVKCmdSetDepthBias
18MVKCmdSetLineWidth
18MVKCmdUpdateBuffer
18MVKCommandTypePoolI10MVKCmdDrawE
18MVKCommandTypePoolI14MVKCmdDispatchE
18MVKCommandTypePoolI14MVKCmdEndQueryE
18MVKCommandTypePoolI14MVKCmdSetEventE
18MVKCommandTypePoolI15MVKCmdBlitImageILm1EEE
18MVKCommandTypePoolI15MVKCmdBlitImageILm4EEE
18MVKCommandTypePoolI15MVKCmdCopyImageILm1EEE
18MVKCommandTypePoolI15MVKCmdCopyImageILm4EEE
18MVKCommandTypePoolI16MVKCmdBeginQueryE
18MVKCommandTypePoolI16MVKCmdCopyBufferILm1EEE
18MVKCommandTypePoolI16MVKCmdCopyBufferILm4EEE
18MVKCommandTypePoolI16MVKCmdFillBufferE
18MVKCommandTypePoolI16MVKCmdResetEventE
18MVKCommandTypePoolI16MVKCmdSetScissorILm16EEE
18MVKCommandTypePoolI16MVKCmdSetScissorILm1EEE
18MVKCommandTypePoolI16MVKCmdWaitEventsILm1EEE
18MVKCommandTypePoolI16MVKCmdWaitEventsILm8EEE
18MVKCommandTypePoolI17MVKCmdDrawIndexedE
18MVKCommandTypePoolI17MVKCmdNextSubpassE
18MVKCommandTypePoolI17MVKCmdSetViewportILm16EEE
18MVKCommandTypePoolI17MVKCmdSetViewportILm1EEE
18MVKCommandTypePoolI18MVKCmdDrawIndirectE
18MVKCommandTypePoolI18MVKCmdResolveImageILm1EEE
18MVKCommandTypePoolI18MVKCmdResolveImageILm4EEE
18MVKCommandTypePoolI18MVKCmdSetDepthBiasE
18MVKCommandTypePoolI18MVKCmdSetLineWidthE
18MVKCommandTypePoolI18MVKCmdUpdateBufferE
18MVKCommandTypePoolI19MVKCmdEndRenderPassE
18MVKCommandTypePoolI19MVKCmdPushConstantsILm128EEE
18MVKCommandTypePoolI19MVKCmdPushConstantsILm512EEE
18MVKCommandTypePoolI19MVKCmdPushConstantsILm64EEE
18MVKCommandTypePoolI20MVKCmdDebugMarkerEndE
18MVKCommandTypePoolI20MVKCmdResetQueryPoolE
18MVKCommandTypePoolI20MVKCmdSetDepthBoundsE
18MVKCommandTypePoolI20MVKCmdWriteTimestampE
18MVKCommandTypePoolI21MVKCmdBeginRenderPassILm1EEE
18MVKCommandTypePoolI21MVKCmdBeginRenderPassILm2EEE
18MVKCommandTypePoolI21MVKCmdBeginRenderPassILm9EEE
18MVKCommandTypePoolI21MVKCmdBindIndexBufferE
18MVKCommandTypePoolI21MVKCmdBufferImageCopyILm16EEE
18MVKCommandTypePoolI21MVKCmdBufferImageCopyILm1EEE
18MVKCommandTypePoolI21MVKCmdBufferImageCopyILm4EEE
18MVKCommandTypePoolI21MVKCmdBufferImageCopyILm8EEE
18MVKCommandTypePoolI21MVKCmdClearColorImageILm1EEE
18MVKCommandTypePoolI21MVKCmdClearColorImageILm4EEE
18MVKCommandTypePoolI21MVKCmdExecuteCommandsILm16EEE
18MVKCommandTypePoolI21MVKCmdExecuteCommandsILm1EEE
18MVKCommandTypePoolI21MVKCmdPipelineBarrierILm1EEE
18MVKCommandTypePoolI21MVKCmdPipelineBarrierILm32EEE
18MVKCommandTypePoolI21MVKCmdPipelineBarrierILm4EEE
18MVKCommandTypePoolI22MVKCmdDebugMarkerBeginE
18MVKCommandTypePoolI22MVKCmdDispatchIndirectE
18MVKCommandTypePoolI23MVKCmdBindVertexBuffersILm1EEE
18MVKCommandTypePoolI23MVKCmdBindVertexBuffersILm2EEE
18MVKCommandTypePoolI23MVKCmdBindVertexBuffersILm8EEE
18MVKCommandTypePoolI23MVKCmdDebugMarkerInsertE
18MVKCommandTypePoolI23MVKCmdPushDescriptorSetE
18MVKCommandTypePoolI23MVKCmdSetBlendConstantsE
18MVKCommandTypePoolI25MVKCmdBindComputePipelineE
18MVKCommandTypePoolI25MVKCmdDrawIndexedIndirectE
18MVKCommandTypePoolI25MVKCmdSetStencilReferenceE
18MVKCommandTypePoolI25MVKCmdSetStencilWriteMaskE
18MVKCommandTypePoolI26MVKCmdBindGraphicsPipelineE
18MVKCommandTypePoolI26MVKCmdCopyQueryPoolResultsE
18MVKCommandTypePoolI27MVKCmdClearMultiAttachmentsILm1EEE
18MVKCommandTypePoolI27MVKCmdClearMultiAttachmentsILm4EEE
18MVKCommandTypePoolI27MVKCmdClearSingleAttachmentILm1EEE
18MVKCommandTypePoolI27MVKCmdClearSingleAttachmentILm4EEE
18MVKCommandTypePoolI27MVKCmdSetStencilCompareMaskE
18MVKCommandTypePoolI28MVKCmdClearDepthStencilImageILm1EEE
18MVKCommandTypePoolI28MVKCmdClearDepthStencilImageILm4EEE
18MVKCommandTypePoolI30MVKCmdBindDescriptorSetsStaticILm1EEE
18MVKCommandTypePoolI30MVKCmdBindDescriptorSetsStaticILm4EEE
18MVKCommandTypePoolI30MVKCmdBindDescriptorSetsStaticILm8EEE
18MVKCommandTypePoolI31MVKCmdBindDescriptorSetsDynamicILm4EEE
18MVKCommandTypePoolI31MVKCmdBindDescriptorSetsDynamicILm8EEE
18MVKCommandTypePoolI35MVKCmdPushDescriptorSetWithTemplateE
18MVKComputePipeline
18MVKGPUCaptureScope
18MVKImageDescriptor
18MVKQueueSubmission
18MVKVulkanAPIObject
18MVKWatermarkRandom
19MVKBaseDeviceObject
19MVKBufferDescriptor
19MVKCmdEndRenderPass
19MVKCmdPushConstantsILm128EE
19MVKCmdPushConstantsILm512EE
19MVKCmdPushConstantsILm64EE
19MVKCmdSetResetEvent
19MVKDeviceObjectPoolI16MVKCommandBufferE
19MVKGraphicsPipeline
1; SPIRV_Cross_Dummy
1DArray
1DShadowL
1DepthFromVkClearValue
1PVRTCFormat
1StencilFromVkClearValue
1VrsG&iqN
1d_array
2 and aH
2 and uH
2&12MVKSwapchain
2.1 on H
2.2+ anH
20MVKCmdDebugMarkerEnd
20MVKCmdResetQueryPool
20MVKCmdSetDepthBounds
20MVKCmdWriteTimestamp
20MVKSamplerDescriptor
20MVKSemaphoreEmulated
20MVKSemaphoreMTLEvent
20MVKSemaphoreMTLFence
21MVKCmdBeginRenderPassILm1EE
21MVKCmdBeginRenderPassILm2EE
21MVKCmdBeginRenderPassILm9EE
21MVKCmdBindIndexBuffer
21MVKCmdBufferImageCopyILm16EE
21MVKCmdBufferImageCopyILm1EE
21MVKCmdBufferImageCopyILm4EE
21MVKCmdBufferImageCopyILm8EE
21MVKCmdClearColorImageILm1EE
21MVKCmdClearColorImageILm4EE
21MVKCmdExecuteCommandsILm16EE
21MVKCmdExecuteCommandsILm1EE
21MVKCmdPipelineBarrierILm1EE
21MVKCmdPipelineBarrierILm32EE
21MVKCmdPipelineBarrierILm4EE
21MVKConfigurableObject
21MVKImageMemoryBinding
21MVKMTLBufferAllocator
21MVKOcclusionQueryPool
21MVKPeerSwapchainImage
21MVKShaderLibraryCache
21MVKTimestampQueryPool
22222222
22222222222
22222222;22222222222222222>2222222222222
22MVKCmdClearAttachmentsILm1EE
22MVKCmdClearAttachmentsILm4EE
22MVKCmdDebugMarkerBegin
22MVKCmdDispatchIndirect
22MVKCommandEncoderState
22MVKCommandEncodingPool
22MVKDebugReportCallback
22MVKDebugUtilsMessenger
22MVKDescriptorSetLayout
22MVKDeviceTrackingMixin
22MVKFunctionSpecializer
22MVKMTLBufferAllocation
23456789H
23MVKCmdBindVertexBuffersILm1EE
23MVKCmdBindVertexBuffersILm2EE
23MVKCmdBindVertexBuffersILm8EE
23MVKCmdDebugMarkerInsert
23MVKCmdPushDescriptorSet
23MVKCmdSetBlendConstants
23MVKRenderPassAttachment
23MVKUnsupportedQueryPool
24) | (uint
24@0:8@?16
24MVKShaderLibraryCompiler
24MVKTexelBufferDescriptor
24MVKVulkanAPIDeviceObject
25MVKCmdBeginRenderPassBase
25MVKCmdBindComputePipeline
25MVKCmdDrawIndexedIndirect
25MVKCmdSetStencilReference
25MVKCmdSetStencilWriteMask
25MVKCommandResourceFactory
25MVKRenderPipelineCompiler
25MVKSampledImageDescriptor
25MVKSamplerDescriptorMixin
25MVKSamplerYcbcrConversion
25MVKStorageImageDescriptor
26MVKCmdBindGraphicsPipeline
26MVKCmdCopyQueryPoolResults
26MVKComputePipelineCompiler
26MVKMTLBufferAllocationPool
26MVKPreallocatedDescriptors
26MVKStorageBufferDescriptor
26MVKUniformBufferDescriptor
27<AFKPUZ
27<AFKPUZ_dinsx
27MVKCmdClearMultiAttachmentsILm1EE
27MVKCmdClearMultiAttachmentsILm4EE
27MVKCmdClearSingleAttachmentILm1EE
27MVKCmdClearSingleAttachmentILm4EE
27MVKCmdSetStencilCompareMask
27MVKDescriptorUpdateTemplate
27SPIRVToMSLConversionOptions7matchesERKS0
28MVKCmdClearDepthStencilImageILm1EE
28MVKCmdClearDepthStencilImageILm4EE
28MVKInputAttachmentDescriptor
28MVKPresentableSwapchainImage
29MVKDescriptorSetLayoutBinding
29MVKScissorCommandEncoderState
29markAllInputsAndResourcesUsedEv
2B9i2B9
2DArray
2DMSArraH
2DShadowH
2Dibbbbbb]bbbbbb
2d_array
2riangleFillModeFromVkPolygonMode
2ssellationPartitionModeFromSpvExecutionMode
3 and 4 H
300 andH
30MVKCmdBindDescriptorSetsStaticILm1EE
30MVKCmdBindDescriptorSetsStaticILm4EE
30MVKCmdBindDescriptorSetsStaticILm8EE
30MVKDescriptorTypePreallocationI20MVKSamplerDescriptorE
30MVKDescriptorTypePreallocationI25MVKSampledImageDescriptorE
30MVKDescriptorTypePreallocationI25MVKStorageImageDescriptorE
30MVKDescriptorTypePreallocationI26MVKStorageBufferDescriptorE
30MVKDescriptorTypePreallocationI26MVKUniformBufferDescriptorE
30MVKDescriptorTypePreallocationI28MVKInputAttachmentDescriptorE
30MVKDescriptorTypePreallocationI31MVKInlineUniformBlockDescriptorE
30MVKDescriptorTypePreallocationI31MVKStorageTexelBufferDescriptorE
30MVKDescriptorTypePreallocationI31MVKUniformTexelBufferDescriptorE
30MVKDescriptorTypePreallocationI33MVKCombinedImageSamplerDescriptorE
30MVKDescriptorTypePreallocationI33MVKStorageBufferDynamicDescriptorE
30MVKDescriptorTypePreallocationI33MVKUniformBufferDynamicDescriptorE
30MVKDispatchableVulkanAPIObject
30MVKPipelineCommandEncoderState
30MVKPipelineStatisticsQueryPool
30MVKViewportCommandEncoderState
31MVKCmdBindDescriptorSetsDynamicILm4EE
31MVKCmdBindDescriptorSetsDynamicILm8EE
31MVKDepthBiasCommandEncoderState
31MVKInlineUniformBlockDescriptor
31MVKQueueCommandBufferSubmission
31MVKResourcesCommandEncoderState
31MVKStorageTexelBufferDescriptor
31MVKUniformTexelBufferDescriptor
32 ? uint4(0, (1
32) - (int
32)), uint2(0)) : uint4(1
32, 0)), uint2(0
32, 0), (uint)max((int
32-bit signed integer
32-bit signed integer vector
32-bit signed literal
32-bit unsigned integer
32-bit unsigned integer vector
32-bit vH
32MVKBlendColorCommandEncoderState
32MVKQueuePresentSurfaceSubmission
32u)), extract_bits(0xFFFFFFFF, 0, (uint)max((int
32u), (uint)max(min((int
32u), 0)), uint2(0
3333333
33333333
33333333!'33
33333333H
33333333I
33333333L
33MVKCombinedImageSamplerDescriptor
33MVKStorageBufferDynamicDescriptor
33MVKUniformBufferDynamicDescriptor
34MVKDepthStencilCommandEncoderState
35MVKCmdPushDescriptorSetWithTemplate
35MVKPushConstantsCommandEncoderState
35MVKQueueFullCommandBufferSubmissionILm128EE
35MVKQueueFullCommandBufferSubmissionILm16EE
35MVKQueueFullCommandBufferSubmissionILm1EE
35MVKQueueFullCommandBufferSubmissionILm256EE
35MVKQueueFullCommandBufferSubmissionILm32EE
35MVKQueueFullCommandBufferSubmissionILm512EE
35MVKQueueFullCommandBufferSubmissionILm64EE
36MVKOcclusionQueryCommandEncoderState
38MVKComputeResourcesCommandEncoderState
39MVKGraphicsResourcesCommandEncoderState
3Swizzle
3UsageFlagsFromMTLTextureUsage
3UsageFromVkImageUsageFlags
3ViewType
4 color%u [[color(%u
4 elemenH
4.60 glslang Khronos. 11.0.0
40@0:8@?16@24@32
420packH
422CositedEven
422Midpoint
43MVKStencilReferenceValueCommandEncoderState
444 = 0
44444444
444444444
4444444444444444
444444444444444444
4@y+4@yj
4MSLShaderInput7matchesERKS0
4Swizzle
4basic
4haderStageFromVkShaderStageFlagBits
53526609H
555(/Vertex stage pipeline for tessellation
555555555
555555555!555555555
555555555#555555555
55555555555
5ChannelsFromVkComponentMapping
5d1eb17068167c85b1edda29c8567b1853526609
5d1eb170H
5haderStageFlagBitsFromMVKShaderStage
5wB.;2C
64-bit hexadecimal literal
64-bit iH
64-bit integer
64-bit integer literal
64-bit integer vector
64-bit integers are only supported in MSL 2.2 and above
64-bit integers not supported in ES profile
64-bit integers/float not supported in ES profile
64-bit literal
64-bit octal literal
64-bit unsigned integer
64-bit unsigned integer literal
64-bit unsigned integer vector
68167c85H
6BaseSizeFromLevelSize
6SizeFromBaseSize
6]$glK
6bit_stoH
7BorderColorFromVkBorderColor
7TLinker
7VeKUEE3
7tu&PlqDt
8) | uint
8-bit arrays not supported
8-bit signed integer
8-bit signed integer vector
8-bit unsigned integer
8-bit unsigned integer vector
8-bit vectors only take vector types
888888888
888888888888888888
89ABCDEFH
8<@ENI
8<@ENISS%%K
8@y,8@y
8MVKCodec
8MVKEvent
8MVKFence
8MVKImage
8MVKLayer
8MVKQueue
8[A\A]A^A
8mpareFunctionFromVkCompareOp
8pFilterFromVkSamplerMipmapMode
8setSPIRVEPKjm
8ullModeFromVkCullModeFlags
9+ hardwH
9FactorFromVkBlendFactor
9LoadActionFromVkAttachmentLoadOp
9MVKBuffer
9MVKDevice
9TCompiler
9arrierScopeFromVkAccessFlags
9cissorRectFromVkRect2D
9mpareFunctionFromVkCompareOp
9stageSupportsVertexAttributesEv
A 3D texture used a compressed format that MoltenVK does not yet support
A class corresponding to metal::sampler which holds sampler
A class which can hold up to three textures and a sampler, including
A struct is used with different array strides. Cannot express this in MSL
A9+ harH
A9FXrJH
A9GLroH
A9WHr}H
A9_0u(M
A9iB'9i
A;Etv'A
A;F8u$A
A;Glv*A
AAAAAAAAAAA
ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz
ACCSTRUCTEXT
ACCSTRUCTNV
ACEPOINTH
ADD_ASSIGN
AD_ORDERH
ALIZED_QH
AMPERSAND
AND_ASSIGN
AND_BUFFH
ANGE_FAIH
ANGLE Shader Compiler
AN_CALLSH
APTURE_SL
AQQRSPAP
ARARAYARARAWAp
ARASAVAWAUATL
ARASA`+Ap
ARA\ARARA\A\A
ARA\ARARA\A\AUAYARASAp
ARA\ARA\Ap
ARA`/AUE
ARA`1ARA`3ARA`1ARA`4ARARA`3ARA`8ARA`2ARA` ARBSBWKp
ARBTAp
ARB_enhaH
ARE_EXCHH
ARQRAPPAQ
ARRAPQPAQ
ARSAUASAVPAT
ASARARASAp
ASASASDRAp
ATAUARASS
ATAVATA[ATA[ATA[ATARARARARARARARARARARA[ATARAp
ATAWAVAU
ATAYAYATARARARARARAZARARAZARAZARBp
ATA_TRACH
ATBSBVARARARARARARARARARAUARATAp
ATOMIC_UINT
ATTRIBUTE
AUARAWAWARAVAZBp
AVAILABLH
AWAVATS
AWAVATS1
AWAVATSA
AWAVATSD
AWAVATSE
AWAVATSH
AWAVATSI
AWAVATSL
AWAVAUATSH
AWAVAUATSI
AWAVAUATSL
AWAVAUATSP
AWAVAUATSPA
AWAVAUATSPD
AWAVAUATSPE
AWAVAUATSPE1
AWAVAUATSPH
AWAVAUATSPI
AWAVAUATSPL
AWAVAUATSPM
AWAVSP1
AWAVSPA
AWAVSPE
AWAVSPH
AWAVSPI
AWAVSPL
AWAVSPM
AY_WATERH
A\ARA\A
A\ARA\ARA\ARA\A
A\ARA\ARA\A`!A`+E
A\ARA\ASA
A\A]A^A
A_CGColorSpaceGetName
A_OBJC_CLASS_$_CAEDRMetadata
A_OBJC_CLASS_$_MTLCaptureDescriptor
A_OBJC_CLASS_$_MTLCaptureManager
A_OBJC_CLASS_$_MTLFunctionConstantValues
A_OBJC_CLASS_$_MTLHeapDescriptor
A_OBJC_CLASS_$_MTLStageInputOutputDescriptor
A_kCGColorSpaceDisplayP3
A_kCGColorSpaceExtendedLinearDisplayP3
A_kCGColorSpaceExtendedLinearITUR_2020
A_kCGColorSpaceExtendedLinearSRGB
A_kCGColorSpaceExtendedSRGB
AbsISubINTEL
AbsUSubINTEL
Absolute value
Access MTLCommandQueue
Access cH
Access chains have no default expression representation
Access chains that result in an array can not be flattened
AccessChain
Acquire
AcquireRelease
Address
AddressModeFromVkSamplerAddressMode
Addresses
AddressingModelPhysicalStorageBuffer64EXT must be used for PhysicalStorageBufferEXT
Adjust value of kMVKQueueFamilyCount
Aliased
AliasedPointer
AliasedPointerEXT
Aligned
Alignment
AlignmentId
All basiH
All basic types in a flattened block must be the same
AllMemoryBarrierWithGroupSync
AllowRecip
AnyHitKHR
AnyHitNV
Apple AH
Argument buffers can only be used with MSL 2.0 and up
ArgumentH
ArgumentInfo
ArgumentPodPushConstant
ArgumentPodStorageBuffer
ArgumentPodUniform
ArgumentSampledImage
ArgumentSampler
ArgumentStorageBuffer
ArgumentStorageImage
ArgumentUniform
ArgumentWorkgroup
Array of varying structs cannot be flattened to legacy-compatible varyings
Array siH
Array size for ClipDistance must be a literal
Array size for ClipDistance must not be unsized
Array size for CullDistance must be a literal
Array size for CullDistance must not be unsized
Array size of OpConstantNull must be a literal
Array stride for dynamic indexing must be divisible by the size of a 4-component vector. Likely culprit here is a float or vec2 array inside a push constant block which is std430. This cannot be flattened. Try using std140 layout instead
Array-of-array output variable used. This cannot be implemented in legacy GLSL
ArrayLength
ArrayStride
Arrayed output variable used, but location is not 0. This is unimplemented in SPIRV-Cross
Arrays oH
Arrays of arrays not supported before ESSL version 310
Arrays of arrays not supported before ESSL version 310. Try using --flatten-multidimensional-arrays or set options.flatten_multidimensional_arrays to true
Arrays of arrays of buffers are not supported
Arrays of arrays of samplers are not supported in MSL
Arrays of arrays of textures are not supported in MSL
At least ESSL 3.10 required for compute shaders
At least ESSL 3.10 required for fragment shader interlock
At least ESSL 3.10 required for shader image load store
At least one shader must specify a layout(max_primitives = value
At least one shader must specify a layout(max_vertices = value
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify an output layout(vertices
At leastH
AtomicAdd
AtomicAnd
AtomicCompSwap
AtomicCompareExchange
AtomicCompareExchangeWeak
AtomicCounter
AtomicCounterAdd
AtomicCounterAnd
AtomicCounterCompSwap
AtomicCounterDecrement
AtomicCounterExchange
AtomicCounterIncrement
AtomicCounterMax
AtomicCounterMemory
AtomicCounterMin
AtomicCounterOr
AtomicCounterSubtract
AtomicCounterXor
AtomicExchange
AtomicFAddEXT
AtomicFlagClear
AtomicFlagTestAndSet
AtomicFloat32AddEXT
AtomicFloat64AddEXT
AtomicIAdd
AtomicIDecrement
AtomicIIncrement
AtomicISub
AtomicLoad
AtomicMax
AtomicMin
AtomicOr
AtomicOrH
AtomicSMax
AtomicSMin
AtomicStorage
AtomicStorageOps
AtomicStore
AtomicType
AtomicUMax
AtomicUMin
AtomicXor
Attachments
AttemptiH
Attempting to use arrays or structs of separate samplers. This is not possible to statically remap to plain GLSL
Attempting to use image format not supported in ES profile
Attributes
AttributesPos
AttributesPosTex
Automatically generated. Do not edit
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
Available
B(H;B`uXH
B16@0:8
BEHKNQTWZ]`cfilo
BEHKNj
BOOLCONSTANT
BUARA`#Ap
BUFFERSH
BackColor
BackSecondaryColor
Backend does not support native pointers and does not support OpPtrAccessChain
Bad aggregation op
Bad castH
Bad shader stage provided for GLSL to SPIR-V conversion
Bad unary op
BankBitsINTEL
BankwidthINTEL
Barrier
BaryCoordNV
BaryCoordNoPersp
BaryCoordNoPerspAMD
BaryCoordNoPerspCentroid
BaryCoordNoPerspCentroidAMD
BaryCoordNoPerspNV
BaryCoordNoPerspSample
BaryCoordNoPerspSampleAMD
BaryCoordPullModel
BaryCoordPullModelAMD
BaryCoordSmooth
BaryCoordSmoothAMD
BaryCoordSmoothCentroid
BaryCoordSmoothCentroidAMD
BaryCoordSmoothSample
BaryCoordSmoothSampleAMD
BarycentH
Barycentrics are only supported in MSL 2.2 and above on macOS
Barycentrics not supported on iOS
BaseInstH
BaseInstance
BaseInstance not supported in ES profile
BaseInstance requires Metal 1.1 and Mac or Apple A9+ hardware
BaseVertH
BaseVertex
BaseVertex not supported in ES profile
BaseVertex requires Metal 1.1 and Mac or Apple A9+ hardware
Basic tyH
Basic types in a flattened UBO must be float, int or uint
BeginEXT
BeginEXTH
BeginInvocationInterlockEXT
Binding
BitCount
BitCountH
BitFieldInsert
BitFieldSExtract
BitFieldUExtract
BitPiece
BitReverse
Bitcast
Bitwise not
BitwiseAnd
BitwiseOr
BitwiseXor
BlendConH
BlendConstants
Block waH
Block was not terminated
Block_object_assign
Block_object_dispose
BlockingPipesINTEL
Blocks cH
Blocks cannot exist outside functions
Boolean
BoundingBox
Branch: Break
Branch: Continue
Branch: Kill
Branch: Return
Branch: Unknown Branch
BranchConditional
Buffer block cannot be expressed as any of std430, std140, scalar, even with enhanced layouts. You can try flattening this block to support a more flexible layout
Buffer block reflection
Buffer variable reflection
BufferBlock
BufferEXH
BufferMVH
BufferMVK
BufferMemory
BufferMemoryRequirements
BufferProperties
BufferSiH
BufferSize
BufferViH
BuildNDRange
BuiltIn
BuiltinSymbolTable
Byte-aligned buffer copy region offsets and size must each fit into a 32-bit unsigned integer
C(H9K0v"H
C0H+C(L
C0H;C(H
C3pathExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
C=GIEM?PKO
CALLDATAEXT
CALLDATAINEXT
CALLDATAINNV
CALLDATANV
CAMetalDrawable could not be acquired
CENTROID
CFArrayAppendValue
CFArrayCreateMutable
CFConstantStringClassReference
CFDataGetBytePtr
CFDictionaryAddValue
CFDictionaryCreateMutableCopy
CFRelease
CFRetain
CFString=}16@0:8
CGColorSpaceCreateWithName
CGColorSpaceGetName
CGColorSpaceRelease
CGSize=dd}16@0:8
CHAR_BITH
COHERENT
COMMANDH
COMMAND_H
COMPAREH
COMPILEH
CONTINUE
COPE_QUEH
CPU Emulation
CPacked
CTIVE_MEH
Calculate cache size required to write MSL to pipeline cache
Calculate the determinant as a combination of the cofactors of the first row
CallableDataKHR
CallableDataNV
CallableKHR
CallableNV
Can not H
Can not remap array of samplers
Can only remap SampledImage and Sampler type
Can only use GL_EXT_shader_framebuffer_fetch in fragment shaders
Can only use GL_EXT_shader_pixel_local_storage in fragment shaders
Can only use in and target variables for PLS inputs
Can only use one of gl_ClipDistance or gl_ClipDistancePerViewNV
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred
Can only use one of gl_CullDistance or gl_CullDistancePerViewNV
Can only use one of gl_Layer or gl_LayerPerViewNV
Can only use one of gl_Position or gl_PositionPerViewNV
Can only use one of gl_ViewportMask or gl_ViewportMaskPerViewNV
Can only use out variables for PLS outputs
Can only use subgroup operations in Vulkan semantics
Can onlyH
Cannot aH
Cannot add typed ID while looping over it
Cannot apply scalar layout workaround with spec constant array size
Cannot attach multiple ES shaders of the same type to a single program
Cannot cross link ES and desktop profiles
Cannot dH
Cannot declare both BaryCoordNV and BaryCoordNoPerspNV in same shader in MSL
Cannot declare pointer-to-pointer types
Cannot eH
Cannot emit a packed struct currently
Cannot end a function before ending the current block
Cannot express an array stride smaller than size of struct type
Cannot fH
Cannot find dummy sampler ID. Was build_dummy_sampler_for_combined_images() called
Cannot find mapping for combined sampler parameter, was build_combined_image_samplers() used before compile() was called
Cannot find mapping for combined sampler, was build_combined_image_samplers() used before compile() was called
Cannot flatten array of structs in I/O blocks
Cannot flatten constructors of multidimensional array constructors, e.g. float
Cannot implement gl_InstanceID in Vulkan GLSL. This shader was created with GL semantics
Cannot implement gl_VertexID in Vulkan GLSL. This shader was created with GL semantics
Cannot lH
Cannot load array-of-array of composite type in tessellation IO
Cannot load tessellation IO variables with more than 2 dimensions
Cannot mix ES profile with non-ES profile shaders
Cannot oH
Cannot override IDs when loop is soft locked
Cannot pH
Cannot pad with negative bytes
Cannot perform any repacking for structs when it is used as a member of another struct
Cannot put a negative number in an unsigned literal
Cannot rH
Cannot represent buffer block correctly in MSL
Cannot represent non-finite floating point constant
Cannot represent vectors with more than 4 elements in MSL
Cannot resolve expression type
Cannot reuse block name within the same interface
Cannot sH
Cannot set ID
Cannot start a block before ending the current block
Cannot subdivide a scalar value
Cannot support this many dimensions for arrays of arrays
Cannot uH
Cannot unroll an array copy from unsized array
Cannot use 64-bit switch selectors
Cannot use ArrayStride of 3 elements in remapping scenarios
Cannot use EXT_shader_framebuffer_fetch in Vulkan GLSL
Cannot use GL_EXT_shader_framebuffer_fetch with arrays of color outputs
Cannot use both gl_FragColor and gl_FragData
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Cannot use more than one builtin I/O block
Cannot use texel buffers with multisampling or array layers
Cannot write to file
Capabilities
Capability
CaptureEventProfilingInfo
Capturing GPU traces to a file requires macOS 10.15 or iOS 13.0. Falling back to Xcode GPU capture
Ceiling
Centroid
CentroidH
ClampToEdge
Clay Clay Shader Compiler
Clay Shader Compiler
Cleanup: discarding lookahead
Cleanup: popping
ClearColorsIn
ClearColorsOut
ClearColorsOut ccOut
ClipDistance
ClipDistancePerViewNV
ClipVertex
ClosestHitKHR
ClosestHitNV
ClusterH
ClusteredReduce
CmdBlitImage
CmdClearAttachments
CmdCopyBufferToImageInfo
CmdExecTime
CodeSectionINTEL
Codeplay
Coherent
ColMajor
ColorEXTH
ColorFromVkClearValue
ColorImage
Combined image samplers have no default expression representation
Command
Command buffer cannot accept commands before vkBeginCommandBuffer() is called
Command buffer does not support concurrent execution
Command buffer does not support execution more that once
CommandBuffer-Submission
CommandBuffers
CommandPH
CommandPool
CommitReadPipe
CommitWritePipe
CompMultH
CompSwapH
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
CompareEH
CompareMask
Compile MSL source code into a MTLLibrary
Compile MTLFunctions into a pipeline
Compiled shader module creation
Compiler::stream() out of range
CompilerH
Complete MTLCommandBuffer
ComponenH
Component
Component decoration is not supported in ES targets
Component decoration is not supported in targets below GLSL 1.40
Component decoration is not supported in tessellation shaders
CompositeConstruct
CompositeExtract
CompositeInsert
Compute pipeline
Compute shader function could not be compiled into pipeline. See previous logged error
Compute shader requires buffer size buffer, but there is no free slot to pass it
Compute shader requires dispatch base buffer, but there is no free slot to pass it
Compute shader requires swizzle buffer, but there is no free slot to pass it
ComputeDerivativeGroupLinearNV
ComputeDerivativeGroupQuadsNV
ComputePH
Condition
ConstOffset
ConstOffsets
ConstType
Constant
ConstantComposite
ConstantDataStorageBuffer
ConstantDataUniform
ConstantFalse
ConstantH
ConstantNull
ConstantPipeStorage
ConstantSampler
ConstantTrue
Constants
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3
Construct bmat3x2
Construct bmat3x4
Construct bmat4
Construct bmat4x2
Construct bmat4x3
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct combined texture-sampler
Construct cooperative matrix
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3
Construct dmat3x2
Construct dmat3x4
Construct dmat4
Construct dmat4x2
Construct dmat4x3
Construct double
Construct dvec2
Construct dvec3
Construct dvec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3
Construct f16mat3x2
Construct f16mat3x4
Construct f16mat4
Construct f16mat4x2
Construct f16mat4x3
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct float
Construct float16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3
Construct imat3x2
Construct imat3x4
Construct imat4
Construct imat4x2
Construct imat4x3
Construct int
Construct int16_t
Construct int64
Construct int8_t
Construct ivec2
Construct ivec3
Construct ivec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3
Construct mat3x2
Construct mat3x4
Construct mat4
Construct mat4x2
Construct mat4x3
Construct reference
Construct reference type
Construct structure
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uint16_t
Construct uint64
Construct uint8_t
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3
Construct umat3x2
Construct umat3x4
Construct umat4
Construct umat4x2
Construct umat4x3
Construct uvec2
Construct uvec3
Construct uvec4
Construct vec2
Construct vec3
Construct vec4
ContractionOff
Contradictory depth layouts
Contradictory input layout primitives
Contradictory input vertex spacing
Contradictory layout max_primitives values
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory local size
Contradictory local size specialization ids
Contradictory output layout primitives
Contradictory triangle ordering
Contradictory xfb_stride
ControlBarrier
Convert SPIR-V to MSL source code
Convert bool to double
Convert bool to float
Convert bool to float16_t
Convert bool to in16t_t
Convert bool to int
Convert bool to int64
Convert bool to int8_t
Convert bool to uint
Convert bool to uint16_t
Convert bool to uint64
Convert bool to uint8_t
Convert double to bool
Convert double to float
Convert double to float16_t
Convert double to int
Convert double to int16_t
Convert double to int64
Convert double to int8_t
Convert double to uint
Convert double to uint16_t
Convert double to uint64
Convert double to uint8_t
Convert float to bool
Convert float to double
Convert float to float16_t
Convert float to int
Convert float to int16_t
Convert float to int64
Convert float to int8_t
Convert float to uint
Convert float to uint16_t
Convert float to uint64
Convert float to uint8_t
Convert float16_t to bool
Convert float16_t to double
Convert float16_t to float
Convert float16_t to int
Convert float16_t to int16_t
Convert float16_t to int64
Convert float16_t to int8_t
Convert float16_t to uint
Convert float16_t to uint16_t
Convert float16_t to uint64
Convert float16_t to uint8_t
Convert int to bool
Convert int to double
Convert int to float
Convert int to float16_t
Convert int to int16_t
Convert int to int64
Convert int to int8_t
Convert int to uint
Convert int to uint16_t
Convert int to uint64
Convert int to uint8_t
Convert int16_t to bool
Convert int16_t to double
Convert int16_t to float
Convert int16_t to float16_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to int8_t
Convert int16_t to uint
Convert int16_t to uint16_t
Convert int16_t to uint64
Convert int16_t to uint8_t
Convert int64 to bool
Convert int64 to double
Convert int64 to float
Convert int64 to float16_t
Convert int64 to int
Convert int64 to int16_t
Convert int64 to int8_t
Convert int64 to uint
Convert int64 to uint16_t
Convert int64 to uint64
Convert int64 to uint8_t
Convert int8_t to bool
Convert int8_t to double
Convert int8_t to float
Convert int8_t to float16_t
Convert int8_t to int
Convert int8_t to int16_t
Convert int8_t to int64
Convert int8_t to uint
Convert int8_t to uint16_t
Convert int8_t to uint64
Convert int8_t to uint8_t
Convert pointer to uint64_t
Convert uint to bool
Convert uint to double
Convert uint to float
Convert uint to float16_t
Convert uint to int
Convert uint to int16_t
Convert uint to int64
Convert uint to int8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to uint8_t
Convert uint16_t to bool
Convert uint16_t to double
Convert uint16_t to float
Convert uint16_t to float16_t
Convert uint16_t to int
Convert uint16_t to int16_t
Convert uint16_t to int64
Convert uint16_t to int8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to uint8_t
Convert uint64 to bool
Convert uint64 to double
Convert uint64 to float
Convert uint64 to float16_t
Convert uint64 to int
Convert uint64 to int16_t
Convert uint64 to int64
Convert uint64 to int8_t
Convert uint64 to uint
Convert uint64 to uint16
Convert uint64 to uint8_t
Convert uint64_t to pointer
Convert uint8_t to bool
Convert uint8_t to double
Convert uint8_t to float
Convert uint8_t to float16_t
Convert uint8_t to int
Convert uint8_t to int16_t
Convert uint8_t to int64
Convert uint8_t to int8_t
Convert uint8_t to uint
Convert uint8_t to uint16_t
Convert uint8_t to uint64
ConvertFToS
ConvertFToU
ConvertPtrToU
ConvertSToF
ConvertUToF
ConvertUToPtr
Converted
Converting
Cooperative matrix constructor argument must be scalar or cooperative matrix
Cooperative matrix types must not be used in shared memory
CooperativeMatrixLengthNV
CooperativeMatrixLoadNV
CooperativeMatrixMulAddNV
CooperativeMatrixNV
CooperativeMatrixStoreNV
CopyInfo
CopyLogical
CopyMemory
CopyMemorySized
CopyObject
Could noH
Could not allocate %llu bytes of host-accessible device memory
Could not allocate VkDeviceMemory of size %llu bytes
Could not allocate a host-coherent VkDeviceMemory of size %llu bytes. The maximum memory-aligned size of a host-coherent VkDeviceMemory is %llu bytes
Could not bind VkBuffer %p to a VkDeviceMemory dedicated to resource %p. A dedicated allocation may only be used with the resource it was dedicated to
Could not bind VkImage %p to a VkDeviceMemory dedicated to resource %p. A dedicated allocation may only be used with the resource it was dedicated to
Could not bind a VkBuffer to a VkDeviceMemory of size %llu bytes. The maximum memory-aligned size of a VkDeviceMemory that supports a VkBuffer is %llu bytes
Could not compile command shaders (Error code %li
Could not compile support shader from MSL source (Error code %li
Could not compile watermark shaders (Error code %li
Could not create an MTLBuffer for an image that requires a buffer backing store. Images that can be used for atomic accesses must have a texel buffer backing them
Could not create watermark pipeline state (Error code %li
Could not find memory type corresponding to VkMemoryPropertyFlags %d
Could not open file for reading
Could not open file for writing
Could not process include directive
Could not read entire contents of file
Could not write SPIR-V file
Could not write entire contents of file
Couldn't translate unknown extended instruction name
CounterBuffer
Create the transpose of the cofactors, as the classical adjoint of the matrix
CreateInvocationsVectorOperation
CreatePipeFromPipeStorage
CreateUserEvent
Created %d swapchain images with initial size (%d, %d
Created VkDevice to run on GPU %s with the following %d Vulkan extensions enabled:%s
Created VkInstance with the following %d Vulkan extensions enabled:%s
CrossDevice
CrossWorkgroup
CrossWorkgroupMemory
CubeArraL
CubeFace = P.x >= 0 ? 0 : 1
CubeFace = P.y >= 0 ? 2 : 3
CubeFace = P.z >= 0 ? 4 : 5
CubeFaceCoordAMD
CubeFaceIndexAMD
CullBackFacingTrianglesKHR
CullDistance
CullDistancePerViewNV
CullFrontFacingTrianglesKHR
CullNoOpaqueKHR
CullOpaqueKHR
CurrentlH
Currently no block to insert opcode
D'LC+D'@A9
D9writeFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_6vectorIcS5_EERS6
DATA_CONST
DArrayShH
DBL_DIG
DBL_EPSIH
DBL_EPSILON
DBL_MANTH
DBL_MANT_DIG
DBL_MAX
DBL_MAX_10_EXP
DBL_MAX_EXP
DBL_MAX_H
DBL_MIN
DBL_MIN_10_EXP
DBL_MIN_EXP
DBL_MIN_H
DBL_RADIH
DBL_RADIX
DEFAULT
DEVICECOHERENT
DISCARD
DIV_ASSIGN
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4X2
DMAT4X3
DMAT4X4
DMSArrayL
DOUBLECONSTANT
DPdxCoarse
DPdxFine
DPdyCoarse
DPdyFine
DRectShaH
D_BUFFERH
DcanWriteFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
Debug printf
DebugCompilationUnit
DebugDeclare
DebugExpression
DebugFunction
DebugFunctionDeclaration
DebugGlobalVariable
DebugImportedEntity
DebugInfo
DebugInfoNone
DebugInlinedAt
DebugInlinedVariable
DebugLexicalBlock
DebugLexicalBlockDiscriminator
DebugLocalVariable
DebugMacroDef
DebugMacroUndef
DebugNoScope
DebugOperation
DebugRepH
DebugScope
DebugSource
DebugTypeArray
DebugTypeBasic
DebugTypeComposite
DebugTypeEnum
DebugTypeFunction
DebugTypeInheritance
DebugTypeMember
DebugTypePointer
DebugTypePtrToMember
DebugTypeQualifier
DebugTypeTemplate
DebugTypeTemplateParameter
DebugTypeTemplateParameterPack
DebugTypeTemplateTemplateParameter
DebugTypeVector
DebugTypedef
DebugUtiL
DebugUtilsLabelEXT
DebugUtilsObject
DebugValue
Declared struct in block cannot be empty
DeclaredH
Decorate
DecorateId
DecorateString
DecorateStringGOOGLE
DecoratiH
DecorationComponent on matrices and arrays make little sense
DecorationGroup
Default case label fallthrough to other case label is not supported in ESSL 1.0
DefaultRuneLocale
Degrees
DemoteToHelperInvocationEXT
DenormFlushToZero
DenormPreserve
Dependency
DependencyArrayINTEL
DependencyInfinite
DependencyLength
DepthBiaH
DepthBouH
DepthEXTH
DepthFormat
DepthGreater
DepthLess
DepthReplacing
DepthResolveFilterFromVkResolveModeFlagBits
DepthStencil
DepthStencilImage
DepthUnchanged
DerivativeControl
DerivativeGroupLinearNV
DerivativeGroupQuadsNV
DescriptH
DescriptorPool
DescriptorSet
DescriptorSets
DetachThread
Determinant
Device %s does not support arrays of samplers
Device %s does not support arrays of textures
DeviceAvailable
DeviceEnqueue
DeviceEvH
DeviceEvent
DeviceGroup
DeviceIndex
DeviceMVH
DeviceMVK
DeviceMaH
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
Did not H
Did not find suitable rule for type. Bogus decorations
Did you mean gl_InstanceIndex
Did you mean gl_VertexIndex
DisassembleHeader
DisassembleInstruction
DisassembleTargetHeader
DisassembleTargetInstruction
Discrete
Dispatch
DispatchH
Distance
DistanceH
DistanceI
Divide the classical adjoint matrix by the determinant
DontFlatten
DontInline
DontUnroll
DoublepumpINTEL
DrawIndeH
DrawIndex
DrawIndex is not supported in MSL
DrawIndex not supported in ES profile
DrawParameters
E(I9]0vQH
E9writeFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_6vectorIcS5_EERS6
EJ@EJ@EJ
EPOINT_VH
ERROR: Failed to open file: %s
ERS_PER_H
ER_QUEUEH
ER_TARGEH
ES profH
ES profiH
ES targH
ESCRIPTOH
ESSL 3.H
ESSL 320H
ESSL 32H
EVEL_ARGH
EW_SWIZZH
EXCHANGH
EXPLICITH
EXPLICITINTERPAMD
E_ORDERSH
E_cpp_stH
E_displaH
E_includH
E`tARATAVARATARAZCRESASASDRAp
EarlyFragmentTests
EcanWriteFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
Either rH
Either row-major or column-major must be declared for matrices
EmitMaskOperand
EmitOperand
EmitStreH
EmitStreamVertex
EmitVertH
EmitVertex
End GLSL
End SPIR-V
End of input in comment
End of input in macro
End of input reached while decoding Op
End of line in macro substitution
End of line in string
EndDebugUtilsLabelEXT
EndEXT
EndInvocationInterlockEXT
EndPrimiH
EndPrimitive
EndQueryH
EndStreaH
EndStreamPrimitive
EnqueueKernel
EnqueueMarker
EnqueuedH
EnqueuedWorkgroupSize
Entering state %d
Entry poH
Entry point does not exist
EntryPoint
EqMaskKHH
Error compiling GLSL when converting GLSL to SPIR-V
Error creating GLSL program when converting GLSL to SPIR-V
Error reading pipeline cache data: %s
Error writing pipeline cache data: %s
Error: Result Id is 0
Error: Type Id is 0
Error: discarding
Error: popping
Estimated original
EventStatus
ExchangeH
ExclusiveScan
ExecuteCallableKHR
ExecuteCallableNV
ExecutionMode
ExecutionModeId
Expected '=', found end of stream
Expected <opcode> or <result-id> at the beginning of an instruction, found
Expected <result-id> at the beginning of an instruction, found
Expected hex value in escape sequence
Expected id to start with
Expected literal string, found literal number
Expected opcode, found end of stream
Expected operand, found end of stream
Expected operand, found next instruction instead
Explicit lod not allowed in legacy ES non-fragment shaders
ExplicitH
ExplicitInterpAMD
ExtInst
ExtInstImport
Extended arithmetic is only available from ESSL 310
Extended arithmetic is only available from GLSL 400
Extended arithmetic is only available from GLSL 4000
ExtendedH
Extension
ExtensionProperties
External
External2DY2YEXT
ExternalOES
F [A\A^A
F(H;F`u
F16IMAGE1D
F16IMAGE1DARRAY
F16IMAGE2D
F16IMAGE2DARRAY
F16IMAGE2DMS
F16IMAGE2DMSARRAY
F16IMAGE2DRECT
F16IMAGE3D
F16IMAGEBUFFER
F16IMAGECUBE
F16IMAGECUBEARRAY
F16MAT2
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3
F16MAT3X2
F16MAT3X3
F16MAT3X4
F16MAT4
F16MAT4X2
F16MAT4X3
F16MAT4X4
F16SAMPLER1D
F16SAMPLER1DARRAY
F16SAMPLER1DARRAYSHADOW
F16SAMPLER1DSHADOW
F16SAMPLER2D
F16SAMPLER2DARRAY
F16SAMPLER2DARRAYSHADOW
F16SAMPLER2DMS
F16SAMPLER2DMSARRAY
F16SAMPLER2DRECT
F16SAMPLER2DRECTSHADOW
F16SAMPLER2DSHADOW
F16SAMPLER3D
F16SAMPLERBUFFER
F16SAMPLERCUBE
F16SAMPLERCUBEARRAY
F16SAMPLERCUBEARRAYSHADOW
F16SAMPLERCUBESHADOW
F16SUBPASSINPUT
F16SUBPASSINPUTMS
F16TEXTURE1D
F16TEXTURE1DARRAY
F16TEXTURE2D
F16TEXTURE2DARRAY
F16TEXTURE2DMS
F16TEXTURE2DMSARRAY
F16TEXTURE2DRECT
F16TEXTURE3D
F16TEXTUREBUFFER
F16TEXTURECUBE
F16TEXTURECUBEARRAY
F16VEC2
F16VEC3
F16VEC4
F1canReadFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
F32MAT2
F32MAT2X2
F32MAT2X3
F32MAT2X4
F32MAT3
F32MAT3X2
F32MAT3X3
F32MAT3X4
F32MAT4
F32MAT4X2
F32MAT4X3
F32MAT4X4
F32VEC2
F32VEC3
F32VEC4
F33SPIRVToMSLConversionConfiguration
F64MAT2
F64MAT2X2
F64MAT2X3
F64MAT2X4
F64MAT3
F64MAT3X2
F64MAT3X3
F64MAT3X4
F64MAT4
F64MAT4X2
F64MAT4X3
F64MAT4X4
F64VEC2
F64VEC3
F64VEC4
F7pathWithExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_bS6
F9SPIRVToMSLConverter
FAMILIESH
FCOOPMATNV
FConvert
FILTER_H
FIXME: This won't include higher bits if Apple ever supports
FLOAT16CONSTANT
FLOAT16_T
FLOAT32_T
FLOAT64_T
FLOATCONSTANT
FLT_DIG
FLT_EPSIH
FLT_EPSILON
FLT_MANTH
FLT_MANT_DIG
FLT_MAX
FLT_MAX_10_EXP
FLT_MAX_EXP
FLT_MAX_H
FLT_MIN
FLT_MIN_10_EXP
FLT_MIN_EXP
FLT_MIN_H
FLT_RADIH
FLT_RADIX
FMax3AMD
FMid3AMD
FMin3AMD
FNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
FNegate
FOrdEqual
FOrdGreaterThan
FOrdGreaterThanEqual
FOrdLessThan
FOrdLessThanEqual
FOrdNotEqual
FP64 not supported in ES profile
FP64 notH
FPFastMathMode
FPGAKernelAttributesINTEL
FPGALoopControlsINTEL
FPGAMemoryAttributesINTEL
FPGARegINTEL
FPRoundingMode
FP_ILOGB0
FP_ILOGBH
FP_ILOGBNAN
FUnordEqual
FUnordGreaterThan
FUnordGreaterThanEqual
FUnordLessThan
FUnordLessThanEqual
FUnordNotEqual
FaceForward
Failed to get tessellation control outputs: %s
Failed to get tessellation evaluation outputs: %s
Failed to get vertex outputs: %s
Failed to read
Failed to reflect tessellation shaders: %s
Failed to start GPU capture session to %s (Error code %li): %s
Failed to write
FamilyPrH
FeaturesH
FenceProperties
FenceStatus
FillBuffer
Finalizer
FindILsb
FindSMsb
FindUMsb
Finished testing formats
FlagArtificial
FlagExplicit
FlagFwdDecl
FlagIndirectVariable
FlagIsDefinition
FlagIsEnumClass
FlagIsLocal
FlagIsOptimized
FlagIsPrivate
FlagIsProtected
FlagIsPublic
FlagLValueReference
FlagObjectPointer
FlagPrototyped
FlagRValueReference
FlagStaticMember
FlagTypePassByReference
FlagTypePassByValue
Flat, Centroid, Sample, NoPerspective decorations are not supported for BaryCoord inputs
Flatten
Flattening of multidimensional arrays were enabled, but the access chain was terminated in the middle of a multidimensional array. This is not supported
Float -> Int bitcast not supported on legacy ESSL
Float -> Uint bitcast not supported on legacy ESSL
Float ->H
Float biH
Float16
Float16Buffer
Float16ImageAMD
Float64
FogFragCoord
ForcePow2DepthINTEL
Format type %u is not supported for clearing with a compute shader
FormatFromVkFormat
FormatPrH
FormatTypeFrom
Formats
Found a H
Found a buffer packing case which we cannot represent in MSL
Fraction
FragColor
FragCoord
FragData
FragDepth
FragFullyCoveredNV
FragInvocationCountEXT
FragSizeEXT
FragStencilRef
FragStencilRefEXT
Fragment
Fragment shader function could not be compiled into pipeline. See previous logged error
FragmentBarycentricNV
FragmentDensityEXT
FragmentFetchAMD
FragmentFullyCoveredEXT
FragmentH3z
FragmentMaskAMD
FragmentMaskFetchAMD
FragmentShaderPixelInterlockEXT
FragmentShaderSampleInterlockEXT
FragmentShaderShadingRateInterlockEXT
FragmentSizeNV
Frame interval
FramebufH
FreadFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERNS0_6vectorIcS5_EERS6
FrexpStruct
FromConstantToDevice
FromConstantToStack
FromConstantToThreadGroup
FromDeviceToDevice
FromDeviceToStack
FromDeviceToThreadGroup
FromMTLPixelFormat
FromStackToDevice
FromStackToStack
FromStackToThreadGroup
FromThreadGroupToDevice
FromThreadGroupToStack
FromThreadGroupToThreadGroup
FromVkComponentSwizzle
FromVkFormat
FromVkIndexType
FrontColor
FrontFacing
FrontSecondaryColor
FullyCoveredEXT
FuncParamAttr
Function
Function Call
Function Definition
Function Parameters
Function specialization
Function was not terminated
FunctionCall
FunctionEnd
FunctionH
FunctionParameter
FunctionPointerCallINTEL
FunctionPointerINTEL
FunctionPointersINTEL
FwidthCoarse
FwidthFine
G(H9O0v
G0H+G(H
G0I;G(t
G7SPIRVToMSLConversionOptions
G@H;G8thI
GGGGGGGGGGG
GGGMMMWWW```SSS
GH;FHu
GHIJKLMNH
GJMPSVY\_be|hknqt
GL;FLut
GLCompute
GLSL 13H
GLSL 400H
GLSL 40H
GLSL 450H
GLSL 45H
GLSL exH
GLSL.std.450
GLSL450
GLSLPacked
GLSLShared
GL_3DL_aH
GL_3DL_array_objects
GL_AMD_gH
GL_AMD_gL
GL_AMD_gcn_shader
GL_AMD_gpu_shader_half_float
GL_AMD_gpu_shader_half_float_fetch
GL_AMD_gpu_shader_int16
GL_AMD_sH
GL_AMD_sL
GL_AMD_shader_ballot
GL_AMD_shader_explicit_vertex_parameter
GL_AMD_shader_fragment_mask
GL_AMD_shader_image_load_store_lod
GL_AMD_shader_trinary_minmax
GL_AMD_tH
GL_AMD_texture_gather_bias_lod
GL_ANDROH
GL_ANDROID_extension_pack_es31a
GL_ARB_aH
GL_ARB_arrays_of_arrays
GL_ARB_cH
GL_ARB_compute_shader
GL_ARB_dH
GL_ARB_derivative_control
GL_ARB_derivative_control is unavailable in OpenGL ES
GL_ARB_draw_instanced
GL_ARB_eH
GL_ARB_enhanced_layouts
GL_ARB_enhanced_layouts is not supported in ESSL
GL_ARB_enhanced_layouts is not supported in targets below GLSL 1.40
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fH
GL_ARB_fragment_shader_interlock
GL_ARB_gH
GL_ARB_gI
GL_ARB_geometry_shader4
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_gpu_shader_int64
GL_ARB_pH
GL_ARB_post_depth_coverage
GL_ARB_sH
GL_ARB_sample_shading
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_bit_encoding
GL_ARB_shader_clock
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_image_size
GL_ARB_shader_stencil_export
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_420pack
GL_ARB_shading_language_packing
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_tH
GL_ARB_tL
GL_ARB_tessellation_shader
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_multisample
GL_ARB_texture_query_levels
GL_ARB_texture_query_lod
GL_ARB_texture_rectangle
GL_ARB_uH
GL_ARB_uniform_buffer_object
GL_ARB_vH
GL_ARB_vertex_attrib_64bit
GL_ARB_viewport_array
GL_EXT_YH
GL_EXT_YUV_target
GL_EXT_bH
GL_EXT_blend_func_extended
GL_EXT_buffer_reference
GL_EXT_buffer_reference is only supported in Vulkan GLSL
GL_EXT_buffer_reference requires ESSL 320
GL_EXT_buffer_reference requires GLSL 450
GL_EXT_buffer_reference2
GL_EXT_buffer_reference_uvec2
GL_EXT_cH
GL_EXT_control_flow_attributes
GL_EXT_dH
GL_EXT_dL
GL_EXT_debug_printf
GL_EXT_demote_to_helper_invocation
GL_EXT_demote_to_helper_invocation is only supported in Vulkan GLSL
GL_EXT_device_group
GL_EXT_draw_buffers
GL_EXT_fH
GL_EXT_frag_depth
GL_EXT_fragment_invocation_density
GL_EXT_gH
GL_EXT_gL
GL_EXT_geometry_point_size
GL_EXT_geometry_shader
GL_EXT_gpu_shader4
GL_EXT_gpu_shader5
GL_EXT_mH
GL_EXT_multiview
GL_EXT_nH
GL_EXT_nonuniform_qualifier
GL_EXT_nonuniform_qualifier is only supported in Vulkan GLSL
GL_EXT_pH
GL_EXT_pI
GL_EXT_post_depth_coverage
GL_EXT_primitive_bounding_box
GL_EXT_rH
GL_EXT_rI
GL_EXT_ray_flags_primitive_culling
GL_EXT_ray_query
GL_EXT_ray_tracing
GL_EXT_sH
GL_EXT_samplerless_texture_functions
GL_EXT_scalar_block_layout
GL_EXT_shader_16bit_storage
GL_EXT_shader_8bit_storage
GL_EXT_shader_atomic_float
GL_EXT_shader_atomic_int64
GL_EXT_shader_explicit_arithmetic_types
GL_EXT_shader_explicit_arithmetic_types_float16
GL_EXT_shader_explicit_arithmetic_types_float32
GL_EXT_shader_explicit_arithmetic_types_float64
GL_EXT_shader_explicit_arithmetic_types_int16
GL_EXT_shader_explicit_arithmetic_types_int32
GL_EXT_shader_explicit_arithmetic_types_int64
GL_EXT_shader_explicit_arithmetic_types_int8
GL_EXT_shader_framebuffer_fetch
GL_EXT_shader_image_load_formatted
GL_EXT_shader_implicit_conversions
GL_EXT_shader_integer_mix
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_pixel_local_storage
GL_EXT_shader_realtime_clock
GL_EXT_shader_subgroup_extended_types_float16
GL_EXT_shader_subgroup_extended_types_int16
GL_EXT_shader_subgroup_extended_types_int64
GL_EXT_shader_subgroup_extended_types_int8
GL_EXT_shader_texture_lod
GL_EXT_shadow_samplers
GL_EXT_tH
GL_EXT_tL
GL_EXT_tessellation_point_size
GL_EXT_tessellation_shader
GL_EXT_texture_array
GL_EXT_texture_buffer
GL_EXT_texture_buffer_object
GL_EXT_texture_cube_map_array
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
GL_GOOGLH
GL_GOOGLL
GL_INTELH
GL_INTEL_shader_integer_functions2
GL_KHR_bH
GL_KHR_blend_equation_advanced
GL_KHR_mH
GL_KHR_memory_scope_semantics
GL_KHR_sH
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_vote
GL_NVX_mH
GL_NVX_multiview_per_view_attributes
GL_NV_coH
GL_NV_compute_shader_derivatives
GL_NV_conservative_raster_underestimation
GL_NV_cooperative_matrix
GL_NV_frH
GL_NV_fragment_shader_barycentric
GL_NV_fragment_shader_interlock
GL_NV_geH
GL_NV_geometry_shader_passthrough
GL_NV_gpH
GL_NV_gpu_shader5
GL_NV_inH
GL_NV_integer_cooperative_matrix
GL_NV_meH
GL_NV_mesh_shader
GL_NV_raH
GL_NV_ray_tracing
GL_NV_saH
GL_NV_sample_mask_override_coverage
GL_NV_shL
GL_NV_shader_atomic_int64
GL_NV_shader_noperspective_interpolation
GL_NV_shader_sm_builtins
GL_NV_shader_subgroup_partitioned
GL_NV_shader_texture_footprint
GL_NV_shading_rate_image
GL_NV_stH
GL_NV_stereo_view_rendering
GL_NV_viH
GL_NV_viewport_array2
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_EL
GL_OES_gL
GL_OES_geometry_point_size
GL_OES_geometry_shader
GL_OES_gpu_shader5
GL_OES_pH
GL_OES_primitive_bounding_box
GL_OES_sH
GL_OES_sI
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_standard_derivatives
GL_OES_tH
GL_OES_tessellation_point_size
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_buffer
GL_OES_texture_cube_map_array
GL_OES_texture_storage_multisample_2d_array
GL_OVR_mH
GL_OVR_mL
GL_OVR_multiview
GL_OVR_multiview2
GL_imageH
GP;FPul
GPU Family Apple 1
GPU Family Apple 2
GPU Family Apple 3
GPU Family Apple 4
GPU Family Apple 5
GPU Family Common 1
GPU Family Common 2
GPU Family Common 3
GPU Family Mac 1
GPU Family Mac 2
GPU Family Mac Catalyst 1
GPU Family Mac Catalyst 2
GPU deviH
GPU device
GPU_CAPTL
GT;FTud
GX;FXu
G[A\A^A
G\;F\uT
G_INLINEH
G_UNIFORH
G`;F`uL
Gd;FduD
GeMaskKHH
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
Generator
Generic
GenericCastToPtr
GenericCastToPtrExplicit
GenericPointer
GenericPtrMemSemantics
Geometry
GeometryIndexEXT
GeometryPointSize
GeometryShaderPassthroughNV
GeometryStreams
GetDefaultQueue
GetKernelLocalSizeForSubgroupCount
GetKernelMaxNumSubgroups
GetKernelNDrangeMaxSubGroupSize
GetKernelNDrangeSubGroupCount
GetKernelPreferredWorkGroupSizeMultiple
GetKernelWorkGroupSize
GetMaxPipePackets
GetNumPipePackets
Gh;Fhu
Gh[A\A^A
Gl;Flu4
GlobalInvocationID
GlobalInvocationId
GlobalLiH
GlobalLinearId
GlobalOfH
GlobalOffset
GlobalSiH
GlobalSize
Glslang Reference Front End
Google ANGLE Shader Compiler
Google Clspv
Google MLIR SPIR-V Serializer
Google Shaderc over Glslang
Google Tint Compiler
Google rspirv
Google spiregg
Gp;Fpu
GradARB
GradEXT
GraphicsH
GraphicsPipelines
GroupAll
GroupAny
GroupAsyncCopy
GroupBroadcast
GroupCommitReadPipe
GroupCommitWritePipe
GroupDecorate
GroupFAdd
GroupFAddNonUniformAMD
GroupFMax
GroupFMaxNonUniformAMD
GroupFMin
GroupFMinNonUniformAMD
GroupIAdd
GroupIAddNonUniformAMD
GroupMemberDecorate
GroupMemoryBarrier
GroupNonUniform
GroupNonUniformAll
GroupNonUniformAllEqual
GroupNonUniformAny
GroupNonUniformArithmetic
GroupNonUniformBallot
GroupNonUniformBallotBitCount
GroupNonUniformBallotBitExtract
GroupNonUniformBallotFindLSB
GroupNonUniformBallotFindMSB
GroupNonUniformBitwiseAnd
GroupNonUniformBitwiseOr
GroupNonUniformBitwiseXor
GroupNonUniformBroadcast
GroupNonUniformBroadcastFirst
GroupNonUniformClustered
GroupNonUniformElect
GroupNonUniformFAdd
GroupNonUniformFMax
GroupNonUniformFMin
GroupNonUniformFMul
GroupNonUniformIAdd
GroupNonUniformIMul
GroupNonUniformInverseBallot
GroupNonUniformLogicalAnd
GroupNonUniformLogicalOr
GroupNonUniformLogicalXor
GroupNonUniformPartitionNV
GroupNonUniformPartitionedNV
GroupNonUniformQuad
GroupNonUniformQuadBroadcast
GroupNonUniformQuadSwap
GroupNonUniformSMax
GroupNonUniformSMin
GroupNonUniformShuffle
GroupNonUniformShuffleDown
GroupNonUniformShuffleRelative
GroupNonUniformShuffleUp
GroupNonUniformShuffleXor
GroupNonUniformUMax
GroupNonUniformUMin
GroupNonUniformVote
GroupReserveReadPipePackets
GroupReserveWritePipePackets
GroupSMax
GroupSMaxNonUniformAMD
GroupSMin
GroupSMinNonUniformAMD
GroupUMax
GroupUMaxNonUniformAMD
GroupUMin
GroupUMinNonUniformAMD
GroupWaitEvents
Gt;Ftu
GtMaskKHH
H i]5wAEr
H(H+H H
H5SizeH
H5epthH
H5icesH
H8I+O(H
H8setGLSLsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE
H9A0v!H
H9A0v.H
H9C0v!H
H9C0v#H
H9C0v$H
H9C0v&H
H9C0v'H
H9C0v)H
H9C0v/H
H9C0v~H
H9F0v I
H9F0v!H
H9F0v!I
H9F0v$I
H9G0v!H
H9G0v$H
H9G0v(H
H9G0v+H
H9G0v.H
H9G0v1H
H9H0v2H
H9H0v7H
H9H0vtH
H9N0v6I
H9O`v;H
H9X0v(H
H9X0v5H
H9X0v_H
H9_0v%H
H9_0v'H
H9_0v-H
H9_0v3H
H9_0vaI
H;K8u\E1
H;y u]H
HAIN_MAGH
HALF_DIGH
HALF_EPSH
HALF_EPSILON
HALF_MANH
HALF_MANT_DIG
HALF_MAXH
HALF_MAX_10_EXP
HALF_MAX_EXP
HALF_MINH
HALF_MIN_10_EXP
HALF_MIN_EXP
HALF_RADH
HALF_RADIX
HDR10MetadataWithDisplayInfo:contentInfo:opticalOutputScale
HI;]PtvL
HIGH_PRECISION
HITATTREXT
HITATTRNV
HUGE_VALF
HUGE_VALH
HUGE_VALL
H[A\A]A^A
H_SYSTEMH
Half2x16H
HalfFloat
HandleInstruction
Hash shader SPIR-V code
HconvertE28MVKGLSLConversionShaderStagebb
HdrMetadataEXT
HelperInvocation
HitAttributeKHR
HitAttributeNV
HitKindKHR
HitKindNV
HitTKHR
HlslCounterBufferGOOGLE
HlslSemanticGOOGLE
Host-coherent VkDeviceMemory objects cannot be associated with optimal-tiling images
H|pHtxPT88d
I'Wfk:x
I/O bloH
I16VEC2
I16VEC3
I16VEC4
I32VEC2
I32VEC3
I32VEC4
I64VEC2
I64VEC3
I64VEC4
I9D$0v.I
I9D$0v7I
I9D$0vzI
I9D$`v'I
I9E0v!I
I9E0v&I
I9E0vGI
I9E0vZI
I9F0v!I
I9F0v&I
I9F0v'I
I9G0v!I
I9G0v&I
I9G0vCI
I9L$0v[I
I9M0v(I
I9U0v2I
I9V0v)I
I9\$0v"I
I9\$0v*I
I9]0v!I
I9]0v#I
I9]0v&I
I9]0v)I
I9^0v&I
I9^0v1I
I9^0vAI
I9_0v?I
I9_0vJI
I;P8ubH
I;] tvL
IAddCarry
IAddSatINTEL
IAverageINTEL
IAverageRoundedINTEL
ICOOPMATNV
ID bound exceeds limit of 0x3fffff
ID boundH
ID whilH
IDENTIFIER
ID_extenH
IDs whenH
IG_AUTO_L
IG_DEFAUL
IG_DISPLH
IG_FORCEH
IG_FULL_H
IG_LOG_LH
IG_MAX_AH
IG_METALH
IG_PERFOH
IG_PERFOL
IG_PREALH
IG_PREFIH
IG_PRESEH
IG_SHADEH
IG_SPECIH
IG_SUPPOH
IG_SWAPCH
IG_SWITCH
IG_SYNCHH
IG_TEXTUH
IG_TRACEH
IG_USE_CH
IG_USE_MH
IIMAGE1D
IIMAGE1DARRAY
IIMAGE2D
IIMAGE2DARRAY
IIMAGE2DMS
IIMAGE2DMSARRAY
IIMAGE2DRECT
IIMAGE3D
IIMAGEBUFFER
IIMAGECUBE
IIMAGECUBEARRAY
IMAGE1D
IMAGE1DARRAY
IMAGE2D
IMAGE2DARRAY
IMAGE2DMS
IMAGE2DMSARRAY
IMAGE2DRECT
IMAGE3D
IMAGEBUFFER
IMAGECUBE
IMAGECUBEARRAY
IMAGE_VIH
IMPLICITH
IMul32x16INTEL
INFINITYH
INT16CONSTANT
INT16_T
INT32CONSTANT
INT32_T
INT64CONSTANT
INT64_T
INTCONSTANT
INTERNAL ERROR
INTERNALH
INT_MAX
INT_MIN
INVARIANT
INotEqual
IO block member XfbBuffer mismatch
IO block member XfbStride mismatch
IO blockH
IOIteratorNext
IOObjectRelease
IOPCIDevice
IORegistryEntryGetParentEntry
IORegistryEntryIDMatching
IORegistryEntrySearchCFProperty
IOService
IOServiceGetMatchingService
IOServiceGetMatchingServices
IOServiceMatching
IOSurfaceCreate
IOSurfaceGetBytesPerElement
IOSurfaceGetBytesPerElementOfPlane
IOSurfaceGetElementHeight
IOSurfaceGetElementHeightOfPlane
IOSurfaceGetElementWidth
IOSurfaceGetElementWidthOfPlane
IOSurfaceGetHeight
IOSurfaceGetHeightOfPlane
IOSurfaceGetPlaneCount
IOSurfaceGetWidth
IOSurfaceGetWidthOfPlane
ISAMPLER1D
ISAMPLER1DARRAY
ISAMPLER2D
ISAMPLER2DARRAY
ISAMPLER2DMS
ISAMPLER2DMSARRAY
ISAMPLER2DRECT
ISAMPLER3D
ISAMPLERBUFFER
ISAMPLERCUBE
ISAMPLERCUBEARRAY
ISUBPASSINPUT
ISUBPASSINPUTMS
ISubBorrow
ISubSatINTEL
ITEXTURE1D
ITEXTURE1DARRAY
ITEXTURE2D
ITEXTURE2DARRAY
ITEXTURE2DMS
ITEXTURE2DMSARRAY
ITEXTURE2DRECT
ITEXTURE3D
ITEXTUREBUFFER
ITEXTURECUBE
ITEXTURECUBEARRAY
Id is 0
If determinant is zero, matrix is not invertable, so leave it unchanged
IgnoreIntersectionKHR
IgnoreIntersectionNV
Illegal H
Illegal argument to OpQuantizeToF16
Illegal to have non-comment, non-whitespace tokens before #version
Image view swizzling for multi planar formats is not supported
Image1D
ImageBasic
ImageBuffer
ImageCubeArray
ImageDrefGather
ImageFetch
ImageFootprintNV
ImageFormatProperties
ImageGather
ImageGatherBiasLodAMD
ImageGatherExtended
ImageKHRH
ImageMSArray
ImageMemory
ImageMipmap
ImageQueH
ImageQuery
ImageQueryFormat
ImageQueryLevels
ImageQueryLod
ImageQueryLod is only supported on MSL 2.2 and up
ImageQueryOrder
ImageQuerySamples
ImageQuerySize
ImageQuerySizeLod
ImageRead
ImageReadWrite
ImageReadWriteLodAMD
ImageRect
ImageSampleDrefExplicitLod
ImageSampleDrefImplicitLod
ImageSampleExplicitLod
ImageSampleFootprintNV
ImageSampleImplicitLod
ImageSampleProjDrefExplicitLod
ImageSampleProjDrefImplicitLod
ImageSampleProjExplicitLod
ImageSampleProjImplicitLod
ImageSparseDrefGather
ImageSparseFetch
ImageSparseGather
ImageSparseRead
ImageSparseSampleDrefExplicitLod
ImageSparseSampleDrefImplicitLod
ImageSparseSampleExplicitLod
ImageSparseSampleImplicitLod
ImageSparseSampleProjDrefExplicitLod
ImageSparseSampleProjDrefImplicitLod
ImageSparseSampleProjExplicitLod
ImageSparseSampleProjImplicitLod
ImageSparseTexelsResident
ImageTexelPointer
ImageVieH
ImageWrite
Imagination
Implementation of the GLSL degrees() function
Implementation of the GLSL findLSB() function
Implementation of the GLSL mod() function, which is slightly different than Metal fmod
Implementation of the GLSL radians() function
Implementation of the GLSL sign() function for integer types
Implementation of the signed GLSL findMSB() function
Implementation of the unsigned GLSL findMSB() function
Import Id is being defined a second time
ImportedDeclaration
ImportedModule
InBoundsAccessChain
InBoundsPtrAccessChain
InclusiveScan
IncomingCallableDataKHR
IncomingCallableDataNV
IncomingRayFlagsKHR
IncomingRayFlagsNV
IncomingRayPayloadKHR
IncomingRayPayloadNV
Index reH
IndexBuffer
IndexType
Indirect
IndirectL
IndirectReferencesINTEL
InitProcess
InitThread
Initial
Initializer
Initializers must match
InitiationIntervalINTEL
InputAttachment
InputAttachmentArrayDynamicIndexing
InputAttachmentArrayDynamicIndexingEXT
InputAttachmentArrayNonUniformIndexing
InputAttachmentArrayNonUniformIndexingEXT
InputAttachmentIndex
InputLines
InputLinesAdjacency
InputPoints
InputSizH
InputTrianglesAdjacency
InsertDebugUtilsLabelEXT
InsertEXH
InsertEXT
Instance
InstanceCustomIndexKHR
InstanceCustomIndexNV
InstanceH
InstanceI
InstanceId
InstanceIndex
InstanceProcAddr
Instruction too long
Instruction too long: more than
Int -> FH
Int -> Float bitcast not supported on legacy ESSL
Int bitH
Int64Atomics
Integer
IntegerFunctions2INTEL
Integrated
Intensity
InterfacH
Interface index is unknown. Cannot continue
Interlocks were used in a way not compatible with GLSL, this is very slow
Internal Error
Internal error: Unhandled operand type
Internal error: unhandled header parse failure
InterpolateAtCentroid
InterpolateAtOffset
InterpolateAtSample
InterpolateAtVertexAMD
Interpolation and auxiliary storage qualifiers must match
InterpolationFunction
IntersectionKHR
IntersectionNV
Invalid
Invalid 16-bit float literal
Invalid 32-bit float literal
Invalid 64-bit float literal
Invalid BitCount operation
Invalid H
Invalid ID
Invalid In/Out variable type
Invalid JSON state
Invalid OpSwitch: selector id
Invalid OpTypeFloat instruction
Invalid OpTypeInt instruction
Invalid Opcode name
Invalid Opcode prefix
Invalid SPIR-V magic number
Invalid SPIRV format
Invalid Uniform variable type
Invalid X chroma location
Invalid Y chroma location
Invalid Y'CbCr model conversion
Invalid Y'CbCr range
Invalid binding
Invalid bit width
Invalid chroma location
Invalid component swizzle
Invalid constant expression basetype
Invalid continue block detected
Invalid escape sequence
Invalid extended instruction import
Invalid extended instruction import Id
Invalid extended instruction name
Invalid extended instruction number
Invalid format resolution
Invalid group operation
Invalid immediate integer
Invalid instruction Op
Invalid instruction word count
Invalid literal string
Invalid location
Invalid mip filter
Invalid opcode
Invalid opcode for subgroup
Invalid quad swap direction
Invalid return type for sparse feedback
Invalid sampler addressing mode
Invalid sampler border color
Invalid sampler compare function
Invalid semantics value
Invalid shader In/Out variable
Invalid shader In/Out variable semantic
Invalid shader stage: %u
Invalid signed integer literal
Invalid storage class semantics value
Invalid type for OpImageQuerySize
Invalid type for textureProj with shadow
Invalid unsigned integer literal
Invalid word count: Op
Invalid word following !<integer
InvalidateMappedMemoryRanges
InvarianH
Invariant
Invariant position is only supported on MSL 2.1 and up
InverseSqrt
Invert Y-axis for Metal
InvocatiH
InvocatiI
Invocation
InvocationID
InvocationId
InvocationId is computed manually with multi-patch workgroups in MSL
Invocations
InvocationsPerPixelNV
IsFinite
IsHelperInvocation
IsHelperInvocationEXT
IsMultipleOfPow2
IsNormal
IsPow2(powerOf2
IsSupported
IsValidEvent
IsValidReserveId
Isolines
IterationMultiple
J33SPIRVToMSLConversionConfiguration
JE@9+ki8
JE@9kki8
JIb8!Yb
JSON staH
K19countShaderInputsAtEj
K8MSLResourceBinding7matchesERKS0
KKKKKK44
KKKKKKKK
KKKKKKKKKKKKKKKK
KKKKKKKKKKKKKKKKKKKKK
Kc13MVKImagePlane
KcD&(H
Kernel cH
Kernel capability not supported
KernelAttributesINTEL
Khronos
Khronos Glslang Reference Front End
Khronos LLVM/SPIR-V Translator
Khronos SPIR-V Tools Assembler
Khronos SPIR-V Tools Linker
L 2.2 anH
L' C+L
L5isShaderInputLocationUsedEj
L7matchesERKS0
L9alignWithERKS0
L9c0v!H
L9c0v*H
L9c0v-H
L9k0v0H
L9r0v(H
L9r0v-H
L9s0v!H
L9x0vzH
L9{0v!H
L9{0v-H
LEFT_ANGLE
LEFT_ASSIGN
LEFT_BRACE
LEFT_BRACKET
LEFT_OP
LEFT_PAREN
LI9F0v!I
LID_COMPH
LID_LEVEH
LID_LOADH
LID_LOD_H
LID_RENDH
LID_STORH
LINKEDIT
LLVM/SPIR-V Translator
LL_METALH
LOCATE_DH
LOW_POWH
LOW_PRECISION
LS outpuH
LSL 400.H
LSL 450.H
LT_GPU_CL
LURE_ORDH
LY_INDEXH
L_EVENTSH
L_FENCESH
L_RETURNH
LabelEXTL
LaunchIdKHR
LaunchIdNV
LaunchSizeKHR
LaunchSizeNV
LayerPerViewNV
LayerProperties
Layout qualification must match
LeMaskKHH
LessOrGreater
License Watermark
License Watermark RenderEncoder
LifetimeStart
LifetimeStop
Likely cause: If this SPIR-V was created from glslang HLSL, make sure the entry point is valid
LineWidtH
LineWidth
LinearIdH
Linkage
LinkageAttributes
Linked
Linker Objects
Linking
Literal string is longer than
LiteralSampler
Load cooperative matrix
Load pre-compiled MSL code into a MTLLibrary
Loading an array-of-array must be loaded directly from an IO variable
Loading array of matrix from IO variable must come directly from IO variable
Loading array of struct from IO variable must come directly from IO variable
Local size %s: %u
LocalInvH
LocalInvocationID
LocalInvocationId
LocalInvocationIndex
LocalSize
LocalSizeHint
LocalSizeHintId
LocalSizeId
Location
LodOffset
Logical
LogicalAnd
LogicalEqual
LogicalNot
LogicalNotEqual
LogicalOr
Loop Body
Loop Condition
Loop Terminal Expression
Loop with condition
LoopCoalesceINTEL
LoopControlINTEL
LoopMerge
LtMaskKHH
Luminance
M7convertERNS_33SPIRVToMSLConversionConfigurationEbbb
M9V0v^I
M9o0v+I
M9v t[H
MANT_DIGH
MAXFLOATH
MAXHALF
MEDIUM_PRECISION
METAL_ALH
METAL_ALIGN
METAL_ARG_UNIFORM
METAL_ARH
METAL_ASH
METAL_ASM
METAL_COL
METAL_COMPATIBLE_COMPARE_EXCHANGE_ORDERS
METAL_CONST
METAL_CONST_ARG
METAL_DEH
METAL_DEPRECATED
METAL_ENABLE_IF
METAL_ENH
METAL_EXH
METAL_EXPLICIT
METAL_FUH
METAL_FUNC
METAL_IMH
METAL_IMPLICIT
METAL_INH
METAL_INTERNAL
METAL_NOH
METAL_NON_NULL_RETURN
METAL_NORETURN
METAL_NOTHROW
METAL_PUH
METAL_PURE
METAL_UNAVAILABLE
METAL_UNH
METAL_VAH
METAL_VALID_COMPARE_EXCHANGE_FAILURE_ORDER
METAL_VALID_LEVEL_ARG
METAL_VALID_LOAD_ORDER
METAL_VALID_LOD_ARG
METAL_VALID_RENDER_TARGET
METAL_VALID_STORE_ORDER
METAL_ZEH
METAL_ZERO_ARG
MLIR SPIR-V Serializer
MMMMMMMMMM
MOD_ASSIGN
MPATIBLEH
MSL 1.2 H
MSL 1.2 or greater is required for arrays of textures
MSL 2.0 H
MSL 2.0 or greater is required for arrays of samplers
MSL 2.0 or greater is required for arrays of textures
MSL 2.1 H
MSL 2.1.H
MSL 2.1H
MSL 2.2.H
MSL cannH
MSL cannot emit arrays-of-arrays in input and output variables
MSL cannot emit arrays-of-matrices in input and output variables
MSL convH
MSL conversion error
MTLCopyAllDevices
MTLCreateSystemDefaultDevice
MTLEvent
MTLFence
MTLHEAPH
MTLPixelFormat
MTLPixelFormatA1BGR5Unorm
MTLPixelFormatA8Unorm
MTLPixelFormatABGR4Unorm
MTLPixelFormatASTC_10x10_LDR
MTLPixelFormatASTC_10x10_sRGB
MTLPixelFormatASTC_10x5_LDR
MTLPixelFormatASTC_10x5_sRGB
MTLPixelFormatASTC_10x6_LDR
MTLPixelFormatASTC_10x6_sRGB
MTLPixelFormatASTC_10x8_LDR
MTLPixelFormatASTC_10x8_sRGB
MTLPixelFormatASTC_12x10_LDR
MTLPixelFormatASTC_12x10_sRGB
MTLPixelFormatASTC_12x12_LDR
MTLPixelFormatASTC_12x12_sRGB
MTLPixelFormatASTC_4x4_LDR
MTLPixelFormatASTC_4x4_sRGB
MTLPixelFormatASTC_5x4_LDR
MTLPixelFormatASTC_5x4_sRGB
MTLPixelFormatASTC_5x5_LDR
MTLPixelFormatASTC_5x5_sRGB
MTLPixelFormatASTC_6x5_LDR
MTLPixelFormatASTC_6x5_sRGB
MTLPixelFormatASTC_6x6_LDR
MTLPixelFormatASTC_6x6_sRGB
MTLPixelFormatASTC_8x5_LDR
MTLPixelFormatASTC_8x5_sRGB
MTLPixelFormatASTC_8x6_LDR
MTLPixelFormatASTC_8x6_sRGB
MTLPixelFormatASTC_8x8_LDR
MTLPixelFormatASTC_8x8_sRGB
MTLPixelFormatB5G6R5Unorm
MTLPixelFormatBC1_RGBA
MTLPixelFormatBC1_RGBA_sRGB
MTLPixelFormatBC2_RGBA
MTLPixelFormatBC2_RGBA_sRGB
MTLPixelFormatBC3_RGBA
MTLPixelFormatBC3_RGBA_sRGB
MTLPixelFormatBC4_RSnorm
MTLPixelFormatBC4_RUnorm
MTLPixelFormatBC5_RGSnorm
MTLPixelFormatBC5_RGUnorm
MTLPixelFormatBC6H_RGBFloat
MTLPixelFormatBC6H_RGBUfloat
MTLPixelFormatBC7_RGBAUnorm
MTLPixelFormatBC7_RGBAUnorm_sRGB
MTLPixelFormatBGR10A2Unorm
MTLPixelFormatBGR10_XR
MTLPixelFormatBGR10_XR_sRGB
MTLPixelFormatBGR5A1Unorm
MTLPixelFormatBGRA10_XR
MTLPixelFormatBGRA10_XR_sRGB
MTLPixelFormatBGRA8Unorm
MTLPixelFormatBGRA8Unorm_sRGB
MTLPixelFormatBGRG422
MTLPixelFormatDepth16Unorm
MTLPixelFormatDepth24Unorm_Stencil8
MTLPixelFormatDepth32Float
MTLPixelFormatDepth32Float_Stencil8
MTLPixelFormatEAC_R11Snorm
MTLPixelFormatEAC_R11Unorm
MTLPixelFormatEAC_RG11Snorm
MTLPixelFormatEAC_RG11Unorm
MTLPixelFormatEAC_RGBA8
MTLPixelFormatEAC_RGBA8_sRGB
MTLPixelFormatETC2_RGB8
MTLPixelFormatETC2_RGB8A1
MTLPixelFormatETC2_RGB8A1_sRGB
MTLPixelFormatETC2_RGB8_sRGB
MTLPixelFormatGBGR422
MTLPixelFormatInvalid
MTLPixelFormatPVRTC_RGBA_2BPP
MTLPixelFormatPVRTC_RGBA_2BPP_sRGB
MTLPixelFormatPVRTC_RGBA_4BPP
MTLPixelFormatPVRTC_RGBA_4BPP_sRGB
MTLPixelFormatR16Float
MTLPixelFormatR16Sint
MTLPixelFormatR16Snorm
MTLPixelFormatR16Uint
MTLPixelFormatR16Unorm
MTLPixelFormatR32Float
MTLPixelFormatR32Sint
MTLPixelFormatR32Uint
MTLPixelFormatR8Sint
MTLPixelFormatR8Snorm
MTLPixelFormatR8Uint
MTLPixelFormatR8Unorm
MTLPixelFormatR8Unorm_sRGB
MTLPixelFormatRG11B10Float
MTLPixelFormatRG16Float
MTLPixelFormatRG16Sint
MTLPixelFormatRG16Snorm
MTLPixelFormatRG16Uint
MTLPixelFormatRG16Unorm
MTLPixelFormatRG32Float
MTLPixelFormatRG32Sint
MTLPixelFormatRG32Uint
MTLPixelFormatRG8Sint
MTLPixelFormatRG8Snorm
MTLPixelFormatRG8Uint
MTLPixelFormatRG8Unorm
MTLPixelFormatRG8Unorm_sRGB
MTLPixelFormatRGB10A2Uint
MTLPixelFormatRGB10A2Unorm
MTLPixelFormatRGB9E5Float
MTLPixelFormatRGBA16Float
MTLPixelFormatRGBA16Sint
MTLPixelFormatRGBA16Snorm
MTLPixelFormatRGBA16Uint
MTLPixelFormatRGBA16Unorm
MTLPixelFormatRGBA32Float
MTLPixelFormatRGBA32Sint
MTLPixelFormatRGBA32Uint
MTLPixelFormatRGBA8Sint
MTLPixelFormatRGBA8Snorm
MTLPixelFormatRGBA8Uint
MTLPixelFormatRGBA8Unorm
MTLPixelFormatRGBA8Unorm_sRGB
MTLPixelFormatStencil8
MTLPixelFormatX24_Stencil8
MTLPixelFormatX32_Stencil8
MTLQuadTH
MTLQuadTessellationFactorsHalf
MTLTrianH
MTLTriangleTessellationFactorsHalf
MTLVertexFormatChar
MTLVertexFormatChar2
MTLVertexFormatChar2Normalized
MTLVertexFormatChar3
MTLVertexFormatChar3Normalized
MTLVertexFormatChar4
MTLVertexFormatChar4Normalized
MTLVertexFormatCharNormalized
MTLVertexFormatFloat
MTLVertexFormatFloat2
MTLVertexFormatFloat3
MTLVertexFormatFloat4
MTLVertexFormatHalf
MTLVertexFormatHalf2
MTLVertexFormatHalf3
MTLVertexFormatHalf4
MTLVertexFormatInt
MTLVertexFormatInt1010102Normalized
MTLVertexFormatInt2
MTLVertexFormatInt3
MTLVertexFormatInt4
MTLVertexFormatInvalid
MTLVertexFormatShort
MTLVertexFormatShort2
MTLVertexFormatShort2Normalized
MTLVertexFormatShort3
MTLVertexFormatShort3Normalized
MTLVertexFormatShort4
MTLVertexFormatShort4Normalized
MTLVertexFormatShortNormalized
MTLVertexFormatUChar
MTLVertexFormatUChar2
MTLVertexFormatUChar2Normalized
MTLVertexFormatUChar3
MTLVertexFormatUChar3Normalized
MTLVertexFormatUChar4
MTLVertexFormatUChar4Normalized
MTLVertexFormatUChar4Normalized_BGRA
MTLVertexFormatUCharNormalized
MTLVertexFormatUInt
MTLVertexFormatUInt1010102Normalized
MTLVertexFormatUInt2
MTLVertexFormatUInt3
MTLVertexFormatUInt4
MTLVertexFormatUShort
MTLVertexFormatUShort2
MTLVertexFormatUShort2Normalized
MTLVertexFormatUShort3
MTLVertexFormatUShort3Normalized
MTLVertexFormatUShort4
MTLVertexFormatUShort4Normalized
MTLVertexFormatUShortNormalized
MUL_ASSIGN
MVKBlockObserver
MVKDeviceTrackingMixin
MVK_ALLOI
MVK_ALLOW_METAL_EVENTS
MVK_ALLOW_METAL_FENCES
MVK_CONFH
MVK_CONFIG_AUTO_GPU_CAPTURE_OUTPUT_FILE
MVK_CONFIG_AUTO_GPU_CAPTURE_SCOPE
MVK_CONFIG_DEFAULT_GPU_CAPTURE_SCOPE_QUEUE_FAMILY_INDEX
MVK_CONFIG_DEFAULT_GPU_CAPTURE_SCOPE_QUEUE_INDEX
MVK_CONFIG_DISPLAY_WATERMARK
MVK_CONFIG_FORCE_LOW_POWER_GPU
MVK_CONFIG_FULL_IMAGE_VIEW_SWIZZLE
MVK_CONFIG_LOG_LEVEL
MVK_CONFIG_MAX_ACTIVE_METAL_COMMAND_BUFFERS_PER_QUEUE
MVK_CONFIG_METAL_COMPILE_TIMEOUT
MVK_CONFIG_PERFORMANCE_LOGGING_FRAME_COUNT
MVK_CONFIG_PERFORMANCE_LOGGING_INLINE
MVK_CONFIG_PERFORMANCE_TRACKING
MVK_CONFIG_PREALLOCATE_DESCRIPTORS
MVK_CONFIG_PREFILL_METAL_COMMAND_BUFFERS
MVK_CONFIG_PRESENT_WITH_COMMAND_BUFFER
MVK_CONFIG_SHADER_CONVERSION_FLIP_VERTEX_Y
MVK_CONFIG_SPECIALIZED_QUEUE_FAMILIES
MVK_CONFIG_SUPPORT_LARGE_QUERY_POOLS
MVK_CONFIG_SWAPCHAIN_MAG_FILTER_USE_NEAREST
MVK_CONFIG_SWITCH_SYSTEM_GPU
MVK_CONFIG_SYNCHRONOUS_QUEUE_SUBMITS
MVK_CONFIG_TEXTURE_1D_AS_2D
MVK_CONFIG_TRACE_VULKAN_CALLS
MVK_CONFIG_USE_COMMAND_POOLING
MVK_CONFIG_USE_MTLHEAP
MVK_CONFL
MVK_DEBUG
MVK_DEBUH
M_1_PI_FH
M_1_PI_HH
M_2_SQRTL
M_2_SQRTPI
M_2_SQRTPI_F
M_2_SQRTPI_H
M_LN10_FH
M_LN10_HH
M_LN2_F
M_LN2_H
M_LOG10EL
M_LOG10E_F
M_LOG10E_H
M_LOG2E
M_LOG2E_F
M_LOG2E_H
M_PI_2_FH
M_PI_2_HH
M_PI_4_FH
M_PI_4_HH
M_SQRT1_2
M_SQRT1_2_F
M_SQRT1_2_H
M_SQRT1_H
M_SQRT2
M_SQRT2_F
M_SQRT2_H
MacOSSurH
Macro redefined; different argument names
Macro redefined; different number of arguments
Macro redefined; different substitutions
Macro redefined; function-like versus object-like
MakeAvailable
MakeAvailableKHR
MakePointerAvailable
MakePointerAvailableKHR
MakePointerVisible
MakePointerVisibleKHR
MakeTexelAvailable
MakeTexelAvailableKHR
MakeTexelVisible
MakeTexelVisibleKHR
MakeVisible
MakeVisibleKHR
MapVersionToIndex
MarkerSetObject
Matched Uniform or Storage blocks must all be anonymous, or all be named
Matched shader interfaces are using different instance names
Matrix stride for dynamic indexing must be divisible by the size of a 4-component vector. Likely culprit here is a row-major matrix being accessed dynamically. This cannot be flattened. Try using std140 layout instead
MatrixInverse
MatrixStride
MatrixTimesMatrix
MatrixTimesScalar
MatrixTimesVector
MaxByteOffset
MaxByteOffsetId
MaxConcurrencyINTEL
MaxInterleavingINTEL
MaxIterations
MaxPrivateCopiesINTEL
MaxReplicatesINTEL
MaxWorkDimINTEL
MaxWorkgroupSizeINTEL
MbcntAMD
Member iH
Member index is out of bounds
MemberDecorate
MemberDecorateString
MemberDecorateStringGOOGLE
MemberName
Memory is already mapped. Call vkUnmapMemory() first
Memory is not mapped. Call vkMapMemory() first
Memory qualifiers must match
MemoryBarrier
MemoryBarrierAtomicCounter
MemoryBarrierBuffer
MemoryBarrierImage
MemoryBarrierShared
MemoryCommitment
MemoryINTEL
MemoryModel
MemoryNamedBarrier
MemoryReH
MemoryRequirements
MergeINTEL
Mesa-IR/SPIR-V Translator
MeshShadingNV
MeshViewCountNV
MeshViewIndicesNV
MetadataH
Metal 2.H
Metal Shading Language %s
Metal doH
Metal does not support isoline tessellation
Metal does not support triangle fans
Metal doesn't support ExclusiveScan for OpGroupNonUniformBitwiseAnd
Metal doesn't support ExclusiveScan for OpGroupNonUniformBitwiseOr
Metal doesn't support ExclusiveScan for OpGroupNonUniformBitwiseXor
Metal doesn't support ExclusiveScan for OpGroupNonUniformFMax
Metal doesn't support ExclusiveScan for OpGroupNonUniformFMin
Metal doesn't support ExclusiveScan for OpGroupNonUniformLogicalAnd
Metal doesn't support ExclusiveScan for OpGroupNonUniformLogicalOr
Metal doesn't support ExclusiveScan for OpGroupNonUniformLogicalXor
Metal doesn't support ExclusiveScan for OpGroupNonUniformSMax
Metal doesn't support ExclusiveScan for OpGroupNonUniformSMin
Metal doesn't support ExclusiveScan for OpGroupNonUniformUMax
Metal doesn't support ExclusiveScan for OpGroupNonUniformUMin
Metal doesn't support InclusiveScan for OpGroupNonUniformBitwiseAnd
Metal doesn't support InclusiveScan for OpGroupNonUniformBitwiseOr
Metal doesn't support InclusiveScan for OpGroupNonUniformBitwiseXor
Metal doesn't support InclusiveScan for OpGroupNonUniformFMax
Metal doesn't support InclusiveScan for OpGroupNonUniformFMin
Metal doesn't support InclusiveScan for OpGroupNonUniformLogicalAnd
Metal doesn't support InclusiveScan for OpGroupNonUniformLogicalOr
Metal doesn't support InclusiveScan for OpGroupNonUniformLogicalXor
Metal doesn't support InclusiveScan for OpGroupNonUniformSMax
Metal doesn't support InclusiveScan for OpGroupNonUniformSMin
Metal doesn't support InclusiveScan for OpGroupNonUniformUMax
Metal doesn't support InclusiveScan for OpGroupNonUniformUMin
Metal onH
Metal only supports quad ClusteredReduce
MetalSurH
MinIterations
MissKHR
Missing assembly text
Missing entry point: Each stage requires one entry point
Missing functionality
Missing module
ModelConH
ModesKHRH
ModfStruct
Module has incomplete header: only
ModuleProcessed
MoltenVK
MoltenVK driver layer
MoltenVK version %s. Vulkan version %s
MoltenVKH
MoltenVKL
MoltenVKM
MoltenVKQueue-%d-%d-%.1f
MulAdd cooperative matrices
Multi-stH
Multi-stream geometry shaders not supported in ES
Multi-stream geometry shaders only supported in GLSL 400
MultiTexCoord0
MultiTexCoord1
MultiTexCoord2
MultiTexCoord3
MultiTexCoord4
MultiTexCoord5
MultiTexCoord6
MultiTexCoord7
MultiView
MultiViewport
Multiple function bodies in multiple compilation units for the same signature in the same stage
MultisamH
Multisample
Multisampled array textures are supported from 2.1
Multisampled image used in OpImageRead, but unexpected operand mask was used
Multisampled image used in OpImageWrite, but unexpected operand mask was used
Must be H
Must be in a function
Must end a function before starting a new one
Must endH
N-uZT9
N12_GLOBAL__N_122TGlslangToSpvTraverserE
N12_GLOBAL__N_124TNoContractionPropagatorE
N12_GLOBAL__N_136TSymbolDefinitionCollectingTraverserE
N12_GLOBAL__N_139TNoContractionAssigneeCheckingTraverserE
N15MVK_spirv_cross10ObjectPoolINS_10SPIRStringEEE
N15MVK_spirv_cross10ObjectPoolINS_12SPIRConstantEEE
N15MVK_spirv_cross10ObjectPoolINS_12SPIRFunctionEEE
N15MVK_spirv_cross10ObjectPoolINS_12SPIRVariableEEE
N15MVK_spirv_cross10ObjectPoolINS_13SPIRExtensionEEE
N15MVK_spirv_cross10ObjectPoolINS_14SPIRConstantOpEEE
N15MVK_spirv_cross10ObjectPoolINS_14SPIRExpressionEEE
N15MVK_spirv_cross10ObjectPoolINS_15SPIRAccessChainEEE
N15MVK_spirv_cross10ObjectPoolINS_21SPIRFunctionPrototypeEEE
N15MVK_spirv_cross10ObjectPoolINS_24SPIRCombinedImageSamplerEEE
N15MVK_spirv_cross10ObjectPoolINS_8SPIRTypeEEE
N15MVK_spirv_cross10ObjectPoolINS_9SPIRBlockEEE
N15MVK_spirv_cross10ObjectPoolINS_9SPIRUndefEEE
N15MVK_spirv_cross10SPIRStringE
N15MVK_spirv_cross11CompilerMSL18OpCodePreprocessorE
N15MVK_spirv_cross11CompilerMSL19SampledImageScannerE
N15MVK_spirv_cross11CompilerMSLE
N15MVK_spirv_cross12CompilerGLSLE
N15MVK_spirv_cross12SPIRConstantE
N15MVK_spirv_cross12SPIRFunctionE
N15MVK_spirv_cross12SPIRVariableE
N15MVK_spirv_cross13CompilerErrorE
N15MVK_spirv_cross13SPIRExtensionE
N15MVK_spirv_cross14ObjectPoolBaseE
N15MVK_spirv_cross14SPIRConstantOpE
N15MVK_spirv_cross14SPIRExpressionE
N15MVK_spirv_cross15SPIRAccessChainE
N15MVK_spirv_cross18CompilerReflectionE
N15MVK_spirv_cross21SPIRFunctionPrototypeE
N15MVK_spirv_cross24SPIRCombinedImageSamplerE
N15MVK_spirv_cross8Compiler10CFGBuilderE
N15MVK_spirv_cross8Compiler13OpcodeHandlerE
N15MVK_spirv_cross8Compiler19BufferAccessHandlerE
N15MVK_spirv_cross8Compiler20ActiveBuiltinHandlerE
N15MVK_spirv_cross8Compiler27CombinedImageSamplerHandlerE
N15MVK_spirv_cross8Compiler29StaticExpressionAccessHandlerE
N15MVK_spirv_cross8Compiler30InterfaceVariableAccessHandlerE
N15MVK_spirv_cross8Compiler31CombinedImageSamplerDrefHandlerE
N15MVK_spirv_cross8Compiler32CombinedImageSamplerUsageHandlerE
N15MVK_spirv_cross8Compiler32InterlockedResourceAccessHandlerE
N15MVK_spirv_cross8Compiler33AnalyzeVariableScopeAccessHandlerE
N15MVK_spirv_cross8Compiler35DummySamplerForCombinedImageHandlerE
N15MVK_spirv_cross8Compiler35PhysicalStorageBufferPointerHandlerE
N15MVK_spirv_cross8Compiler39InterlockedResourceAccessPrepassHandlerE
N15MVK_spirv_cross8CompilerE
N15MVK_spirv_cross8IVariantE
N15MVK_spirv_cross8SPIRTypeE
N15MVK_spirv_cross9SPIRBlockE
N15MVK_spirv_cross9SPIRUndefE
N3mvk13charvectorbufE
N3mvk6membufE
N3mvk8countbufE
N3spv11InstructionE
N3spv5BlockE
N3spv6ModuleE
N3spv7BuilderE
N3spv8FunctionE
N6cereal12InputArchiveINS_18BinaryInputArchiveELj1EEE
N6cereal13OutputArchiveINS_19BinaryOutputArchiveELj1EEE
N6cereal18BinaryInputArchiveE
N6cereal19BinaryOutputArchiveE
N6cereal6detail16InputArchiveBaseE
N6cereal6detail17OutputArchiveBaseE
N6cereal9ExceptionE
N7glslang10TPpContext10tZeroInputE
N7glslang10TPpContext11tMacroInputE
N7glslang10TPpContext11tTokenInputE
N7glslang10TPpContext12tMarkerInputE
N7glslang10TPpContext12tStringInputE
N7glslang10TPpContext16tUngotTokenInputE
N7glslang10TPpContext22TokenizableIncludeFileE
N7glslang10TPpContext6tInputE
N7glslang10TPpContextE
N7glslang11TAnonMemberE
N7glslang11TIntermLoopE
N7glslang11TReflectionE
N7glslang12TIntermTypedE
N7glslang12TIntermUnaryE
N7glslang12TScanContextE
N7glslang13TGlslIoMapperE
N7glslang13TInputScannerE
N7glslang13TIntermBinaryE
N7glslang13TIntermBranchE
N7glslang13TIntermMethodE
N7glslang13TIntermSwitchE
N7glslang13TIntermSymbolE
N7glslang13TParseContextE
N7glslang14TIoMapResolverE
N7glslang14TLiveTraverserE
N7glslang14TParseVersionsE
N7glslang15TConstTraverserE
N7glslang15TIndexTraverserE
N7glslang15TIntermOperatorE
N7glslang16TConstUnionArrayE
N7glslang16TIntermAggregateE
N7glslang16TIntermSelectionE
N7glslang16TIntermTraverserE
N7glslang16TOutputTraverserE
N7glslang16TRemoveTraverserE
N7glslang16TUserIdTraverserE
N7glslang16TVarSetTraverserE
N7glslang17TDeferredCompilerE
N7glslang17TParseContextBaseE
N7glslang17TPrecisionManagerE
N7glslang17TRemapIdTraverserE
N7glslang17TSmallArrayVectorE
N7glslang18TBuiltInParseablesE
N7glslang18TDefaultIoResolverE
N7glslang19TBuiltInIdTraverserE
N7glslang19TInductiveTraverserE
N7glslang19TVarGatherTraverserE
N7glslang20TIntermConstantUnionE
N7glslang20TReflectionTraverserE
N7glslang22TDefaultGlslIoResolverE
N7glslang22TDefaultIoResolverBaseE
N7glslang40TextureUpgradeAndSamplerRemovalTransformE
N7glslang5TTypeE
N7glslang7TShader14ForbidIncluderE
N7glslang7TShader8IncluderE
N7glslang7TShaderE
N7glslang7TSymbolE
N7glslang8TProgramE
N7glslang9TBuiltInsE
N7glslang9TFunctionE
N7glslang9TIoMapperE
N7glslang9TVariableE
N94(u~H
NABLE_IFH
NONPRIVATE
NONUNIFORM
NOPERSPECTIVE
NORETURNH
NOTHROWH
NPFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
NSConcreteGlobalBlock
NSConcreteStackBlock
NSLocalizedDescriptionKey
NSString
NSt3__11
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEEE
NSt3__110__function6__baseIFb8VkFormatEEE
NSt3__110__function6__baseIFbRKN7glslang5TTypeES5_NS2_9TOperatorEiEEE
NSt3__110__function6__baseIFbRKN7glslang5TTypeES5_S5_EEE
NSt3__110__function6__baseIFbjEEE
NSt3__110__function6__baseIFivEEE
NSt3__110__function6__baseIFv19spv_message_level_tPKcRK14spv_position_tS4_EEE
NSt3__110__function6__baseIFvP17MVKCommandEncoderR19MVKMTLBufferBindingEEE
NSt3__110__function6__baseIFvP17MVKCommandEncoderR19MVKMTLBufferBindingRK11MVKArrayRefIjEEEE
NSt3__110__function6__baseIFvP17MVKCommandEncoderR20MVKMTLTextureBindingEEE
NSt3__110__function6__baseIFvP17MVKCommandEncoderR25MVKMTLSamplerStateBindingEEE
NSt3__110__function6__baseIFvPN3spv5BlockENS2_11ReachReasonES4_EEE
NSt3__110__function6__baseIFviPKcEEE
NSt3__110__function6__baseIFviPKcS3_EEE
NSt3__110__function6__baseIFviRKN7glslang7TVectorINS_12basic_stringIcNS_11char_traitsIcEENS2_14pool_allocatorIcEEEEEEEEE
NSt3__110__function6__baseIFviiPKcEEE
NSt3__110__function6__baseIFviibiPKcEEE
NSt3__110__function6__baseIFvjEEE
NSt3__110__function6__baseIFvvEEE
NSt3__110__function6__funcINS_6__bindIMN7glslang13TInputScannerEKFivEJPS4_EEENS_9allocatorIS8_EEFivEEE
NSt3__110__function6__funcIPFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjENS5_IS9_EES8_EE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_1NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_2NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_3NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_4NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_5NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_6NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_7NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_8NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_9NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ38spvOperandCanBeForwardDeclaredFunction6SpvOp_E4$_10NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_11NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_12NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_13NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_14NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_15NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZ48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_16NS_9allocatorIS3_EEFbjEEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS4_10TPpContextERNS4_13TInputScannerEbRNS4_12TSymbolTableERNS4_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliPKcE_NS_9allocatorISJ_EEFviSI_EEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS4_10TPpContextERNS4_13TInputScannerEbRNS4_12TSymbolTableERNS4_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliPKcSI_E_NS_9allocatorISJ_EEFviSI_SI_EEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS4_10TPpContextERNS4_13TInputScannerEbRNS4_12TSymbolTableERNS4_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliRKNS4_7TVectorINS_12basic_stringIcNS_11char_traitsIcEENS4_14pool_allocatorIcEEEEEEE_NS_9allocatorISR_EEFviSQ_EEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS4_10TPpContextERNS4_13TInputScannerEbRNS4_12TSymbolTableERNS4_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliiPKcE_NS_9allocatorISJ_EEFviiSI_EEE
NSt3__110__function6__funcIZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS4_10TPpContextERNS4_13TInputScannerEbRNS4_12TSymbolTableERNS4_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliibiPKcE_NS_9allocatorISJ_EEFviibiSI_EEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_18NS_9allocatorIS6_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_19NS_9allocatorIS6_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_20NS_9allocatorIS6_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_21NS_9allocatorIS6_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_22NS_9allocatorIS6_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_23NS_9allocatorIS6_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvE4$_32NS_9allocatorIS4_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE3$_3NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE3$_4NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE3$_5NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE3$_6NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE3$_7NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE3$_8NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL39add_tess_level_input_to_interface_blockERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableEE4$_15NS7_ISG_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL39add_tess_level_input_to_interface_blockERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableEE4$_16NS7_ISG_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL41add_composite_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE3$_9NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL41add_composite_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableERNS3_18InterfaceBlockMetaEE4$_10NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL44add_plain_member_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableEjRNS3_18InterfaceBlockMetaEE4$_13NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL44add_plain_member_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableEjRNS3_18InterfaceBlockMetaEE4$_14NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL48add_composite_member_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableEjRNS3_18InterfaceBlockMetaEE4$_11NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross11CompilerMSL48add_composite_member_variable_to_interface_blockEN3spv12StorageClassERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS2_8SPIRTypeERNS2_12SPIRVariableEjRNS3_18InterfaceBlockMetaEE4$_12NS9_ISK_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross12CompilerGLSL20emit_interface_blockERKNS2_12SPIRVariableEE3$_3NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZN15MVK_spirv_cross12CompilerGLSL50emit_inout_fragment_outputs_copy_to_subpass_inputsEvE4$_36NS_9allocatorIS4_EEFvvEEE
NSt3__110__function6__funcIZN17MVKPhysicalDevice14initPropertiesEvE3$_0NS_9allocatorIS3_EEFb8VkFormatEEE
NSt3__110__function6__funcIZN38MVKComputeResourcesCommandEncoderState10encodeImplEjE4$_21NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingEEE
NSt3__110__function6__funcIZN38MVKComputeResourcesCommandEncoderState10encodeImplEjE4$_22NS_9allocatorIS3_EEFvP17MVKCommandEncoderR20MVKMTLTextureBindingEEE
NSt3__110__function6__funcIZN38MVKComputeResourcesCommandEncoderState10encodeImplEjE4$_23NS_9allocatorIS3_EEFvP17MVKCommandEncoderR25MVKMTLSamplerStateBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_1NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_2NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingRK11MVKArrayRefIjEEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_3NS_9allocatorIS3_EEFvP17MVKCommandEncoderR20MVKMTLTextureBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_4NS_9allocatorIS3_EEFvP17MVKCommandEncoderR25MVKMTLSamplerStateBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_5NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_6NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingRK11MVKArrayRefIjEEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_7NS_9allocatorIS3_EEFvP17MVKCommandEncoderR20MVKMTLTextureBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_8NS_9allocatorIS3_EEFvP17MVKCommandEncoderR25MVKMTLSamplerStateBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_9NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_10NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingRK11MVKArrayRefIjEEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_11NS_9allocatorIS3_EEFvP17MVKCommandEncoderR20MVKMTLTextureBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_12NS_9allocatorIS3_EEFvP17MVKCommandEncoderR25MVKMTLSamplerStateBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_13NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_14NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingRK11MVKArrayRefIjEEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_15NS_9allocatorIS3_EEFvP17MVKCommandEncoderR20MVKMTLTextureBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_16NS_9allocatorIS3_EEFvP17MVKCommandEncoderR25MVKMTLSamplerStateBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_17NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_18NS_9allocatorIS3_EEFvP17MVKCommandEncoderR19MVKMTLBufferBindingRK11MVKArrayRefIjEEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_19NS_9allocatorIS3_EEFvP17MVKCommandEncoderR20MVKMTLTextureBindingEEE
NSt3__110__function6__funcIZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_20NS_9allocatorIS3_EEFvP17MVKCommandEncoderR25MVKMTLSamplerStateBindingEEE
NSt3__110__function6__funcIZN3spv7Builder14postProcessCFGEvE3$_2NS_9allocatorIS4_EEFvPNS2_5BlockENS2_11ReachReasonES8_EEE
NSt3__110__function6__funcIZN7glslang13TParseContext15findFunction400ERKNS2_10TSourceLocERKNS2_9TFunctionERbE3$_0NS_9allocatorISB_EEFbRKNS2_5TTypeESG_NS2_9TOperatorEiEEE
NSt3__110__function6__funcIZN7glslang13TParseContext15findFunction400ERKNS2_10TSourceLocERKNS2_9TFunctionERbE3$_1NS_9allocatorISB_EEFbRKNS2_5TTypeESG_SG_EEE
NSt3__110__function6__funcIZN7glslang13TParseContext25findFunctionExplicitTypesERKNS2_10TSourceLocERKNS2_9TFunctionERbE3$_2NS_9allocatorISB_EEFbRKNS2_5TTypeESG_NS2_9TOperatorEiEEE
NSt3__110__function6__funcIZN7glslang13TParseContext25findFunctionExplicitTypesERKNS2_10TSourceLocERKNS2_9TFunctionERbE3$_3NS_9allocatorISB_EEFbRKNS2_5TTypeESG_SG_EEE
NSt3__110__function6__funcIZN8spvtools15AssemblyContext26binaryEncodeNumericLiteralEPKc12spv_result_tRKNS2_6IdTypeEP17spv_instruction_tE3$_0NS_9allocatorISC_EEFvjEEE
NSt3__110__function6__funcIZN8spvtools18FriendlyNameMapper13GetNameMapperEvEUljE_NS_9allocatorIS4_EEFNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEEjEEE
NSt3__110__function6__funcIZN8spvtools30UseDiagnosticAsMessageConsumerEP13spv_context_tPP16spv_diagnostic_tE3$_0NS_9allocatorIS8_EEFv19spv_message_level_tPKcRK14spv_position_tSD_EEE
NSt3__110__function6__funcIZNK3spv8Function4dumpERNS_6vectorIjNS_9allocatorIjEEEEEUlPKNS2_5BlockENS2_11ReachReasonEPS9_E_NS5_ISE_EEFvSD_SC_SD_EEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_33clEjRNS2_12SPIRVariableEEUlvE0_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_33clEjRNS2_12SPIRVariableEEUlvE_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE0_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE10_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE11_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE12_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE13_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE14_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE15_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE16_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE17_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE18_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE19_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE1_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE20_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE21_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE22_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE23_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE24_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE25_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE26_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE27_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE2_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE3_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE4_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE5_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE6_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE7_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE8_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE9_NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS2_12SPIRVariableEEUlvE_NS_9allocatorIS7_EEFvvEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__114unary_functionIPKN7glslang13TInputScannerEiEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__117bad_function_callE
NSt3__118__weak_result_typeIMN7glslang13TInputScannerEKFivEEE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN11simple_json6StreamENS_9allocatorIS2_EEEE
NSt3__16__bindIMN7glslang13TInputScannerEKFivEJPS2_EEE
NT_WITH_H
N_10_EXPL
N_NULL_RH
NameEXT
NamedBarH
NamedBarrier
NamedBarrierInitialize
Native tH
Native texture_buffer type is only supported in MSL 2.1
Nearest
Need GL_ARB_enhanced_layouts for xfb_stride or xfb_buffer
Need GL_H
Need VulH
Need Vulkan semantics for device group support
Need Vulkan semantics for subgroup
Need to declare the corresponding fragment output variable to be able to read from it
Need to transpose right-side expression of a store to row-major matrix, but it is not a SPIRExpression
Negate conditional
Negate value
NegotiateLoaderICDInterfaceVersion
Neither H
Neither a front-end constant nor a spec constant
Neither tessellation shader specifies a partition mode (SpacingEqual, SpacingFractionalOdd, or SpacingFractionalEven
Neither tessellation shader specifies a patch input mode (Triangles, Quads, or Isolines
Neither tessellation shader specifies a winding order mode (VertexOrderCw or VertexOrderCcw
Neither tessellation shader specifies the number of output control points
Next token is
NextSubpass
No backiH
No backing variable for atomic operation
No block currently in scope
No blockH
No errors.  No code generation or linking was requested
No functH
No function currently in scope
No function definition (body) found
No loop body
No loop condition
NoAlias
NoCapture
NoContraction
NoGlobalOffsetINTEL
NoOpaqueKHR
NoPerspective
NoReadWrite
NoSignedWrap
NoUnsignedWrap
NoWrite
Non-L-value cannot be passed for 'out' or 'inout' parameters
Non-constant-index-expression
NonPrivatePointer
NonPrivatePointerKHR
NonPrivateTexel
NonPrivateTexelKHR
NonReadable
NonSemantic
NonSemantic.ClspvReflection
NonSemantic.DebugPrintf
NonUniform
NonUniformEXT
NonWritable
NoneKHR
Nontemporal
Normalize
Not all shaders have valid object code
Not enouH
Not enough arguments to OpSpecConstantOp
NotEqual
Now at end of input
Null musH
NumEnqueH
NumEnqueuedSubgroups
NumSIMDWorkitemsINTEL
NumSubgrH
NumSubgroups
NumWorkGroups
NumWorkgroups
NumbanksINTEL
Number of constructor parameters does not match the number of structure fields
NumberOfClients >= 0
O$A;O$s
OBJC_CLASS_$_CAEDRMetadata
OBJC_CLASS_$_CAMetalLayer
OBJC_CLASS_$_MTLCaptureDescriptor
OBJC_CLASS_$_MTLCaptureManager
OBJC_CLASS_$_MTLCompileOptions
OBJC_CLASS_$_MTLComputePipelineDescriptor
OBJC_CLASS_$_MTLDepthStencilDescriptor
OBJC_CLASS_$_MTLFunctionConstantValues
OBJC_CLASS_$_MTLHeapDescriptor
OBJC_CLASS_$_MTLRenderPassDepthAttachmentDescriptor
OBJC_CLASS_$_MTLRenderPassDescriptor
OBJC_CLASS_$_MTLRenderPassStencilAttachmentDescriptor
OBJC_CLASS_$_MTLRenderPipelineDescriptor
OBJC_CLASS_$_MTLSamplerDescriptor
OBJC_CLASS_$_MTLStageInputOutputDescriptor
OBJC_CLASS_$_MTLStencilDescriptor
OBJC_CLASS_$_MTLTextureDescriptor
OBJC_CLASS_$_MTLVertexDescriptor
OBJC_CLASS_$_NSData
OBJC_CLASS_$_NSDictionary
OBJC_CLASS_$_NSError
OBJC_CLASS_$_NSFileManager
OBJC_CLASS_$_NSMutableArray
OBJC_CLASS_$_NSMutableString
OBJC_CLASS_$_NSNumber
OBJC_CLASS_$_NSObject
OBJC_CLASS_$_NSProcessInfo
OBJC_CLASS_$_NSString
OBJC_CLASS_$_NSThread
OBJC_CLASS_$_NSURL
OBJC_CLASS_$_NSUUID
OBJC_CLASS_$_NSView
OBJC_METACLASS_$_NSObject
OGGING_FH
OGGING_IH
OMMAND_PH
ONST_ARGH
OOOOOOOO
OPQRSTUVH
OR_ASSIGN
OS_AllocTLSIndex
OS_FreeTLSIndex
OS_GetTLSValue
OS_SetTLSValue
OSurfaceMVK
OWER_GPUH
ObjectNaH
ObjectRayDirectionKHR
ObjectRayDirectionNV
ObjectRayOriginKHR
ObjectRayOriginNV
ObjectRayTmaxNV
ObjectRayTminNV
ObjectTaH
ObjectToWorldKHR
ObjectToWorldNV
Offsets
Only 1D, 2D, 2DRect, 3D, Buffer, InputTarget and Cube textures supported
Only 32-bit integers and booleans are currently supported when evaluating specialization constants
Only Input, Output variables and Uniform constants are part of a shader linking interface
Only Logical and PhysicalStorageBuffer64EXT addressing models are supported
Only StorageClassPhysicalStorageBufferEXT is supported by OpConvertPtrToU
Only StorageClassPhysicalStorageBufferEXT is supported by OpConvertUToPtr
Only one push_constant block is allowed per stage
Only one shaderRecordNV buffer block is allowed per stage
Only one taskNV interface block is allowed per shader
Only subH
Only subgroup scope is supported
OpAtomicCompareExchangeWeak is only supported in kernel profile
OpAtomicH
OpComposH
OpCompositeInsert spec constant op is not supported
OpConstaH
OpConstantComposite only supports 1, 2, 3 and 4 elements
OpExtInst set Id
OpFRem requires trunc() and is only supported on non-legacy targets. A workaround is needed for legacy
OpGroupNH
OpImageH
OpModuleProcessed
OpSpecCoH
OpSpecConstant opcode table out of sync
OpSpecConstantOp not enough arguments
OpSpecConstantOp opcode
Opaque
OpaqueKHR
OpenCL.DebugInfo.100
OpenCL.DebugInfo.100 debug base type encoding
OpenCL.DebugInfo.100 debug composite type
OpenCL.DebugInfo.100 debug imported entity
OpenCL.DebugInfo.100 debug info flags
OpenCL.DebugInfo.100 debug operation
OpenCL.DebugInfo.100 debug type qualifier
OpenCL.std
OpenCL_C
OpenCL_CPP
OpenGL EH
OpenGL ES GLSL 3.20 glslang Khronos. 11.0.0
OperationFromVkBlendOp
Ordered
OriginLowerLeft
OriginUpperLeft
Original GLSL extraction error
OriginalH
Out of mH
Out of memory
OuterProduct
OutputDouble
OutputLineStrip
OutputLinesNV
OutputMemory
OutputMemoryKHR
OutputPoints
OutputPrimitivesNV
OutputTriangleStrip
OutputTrianglesNV
OutputVertices
Over 3 cH
Over 3 compilation loops detected. Must be a bug
OverrideCoverageNV
OverwritH
Overwriting a variant with new type
P P P P PP
P0P0P0P0P0d
P8basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
P9basic
P@P   @0
PARASAVAWATAU
PAYLOADEXT
PAYLOADINEXT
PAYLOADINNV
PAYLOADNV
PERCENT
PERPRIMITIVENV
PERTASKNV
PERVERTEXNV
PERVIEWNV
PFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
PLS inpH
POOLINGH
PP 0P`P0
PP00@     00 0
PP00TTL
PPPPPPP00
PPPPPPPP
PPPP`0
PPPTT@t
PP```P0
PQAPAQARAVAS
PRAQARQAPL
PRAQSQAP
PRAQSQAPA
PRECATEDH
PRECISE
PRECISION
PUCacheModeFromVkMemoryPropertyFlags
PUT_FILEH
P[A\A^A
P_VERTEXH
PackDouble2x32
PackHalf2x16
PackSnorm2x16
PackSnorm4x8
PackUnorm2x16
PackUnorm4x8
ParseInstruction
PartialCount
Partially converted
PartitionedExclusiveScanNV
PartitionedInclusiveScanNV
PartitionedReduceNV
Pass2KHRL
PassthroughNV
PatchVerH
PatchVertices
PatchVertices is derived from the auxiliary buffer in MSL
PeelCount
PeerMemoH
PerPrimitiveNV
PerTaskNV
PerVertexNV
PerViewAttributesNV
PerViewNH
PerViewNV
Performance statistics reporting every: %d frames, avg FPS: %.2f, elapsed time: %.3f seconds
PhysicaH
Physical32
Physical64
PhysicalDevice
PhysicalDeviceProcAddr
PhysicalStorageBuffer
PhysicalStorageBuffer64
PhysicalStorageBuffer64EXT
PhysicalStorageBufferAddresses
PhysicalStorageBufferAddressesEXT
PhysicalStorageBufferEXT
PipeStorH
PipeStorage
Pipeline
Pipeline does not support component swizzle (%s, %s, %s, %s) required by a VkImageView used in the %s shader. Full VkImageView component swizzling will be supported by a pipeline if the MVKConfiguration::fullImageViewSwizzle config parameter or MVK_CONFIG_FULL_IMAGE_VIEW_SWIZZLE environment variable was enabled when the pipeline is compiled
Pipeline input reflection
Pipeline output reflection
PipelineEnableINTEL
PipelineL
Pixel loH
Pixel local storage only supported in ESSL 3.0 and above
Pixel local storage only supported in OpenGL ES
Pixel local storage only supported in fragment shaders
PixelCenterInteger
PixelInterlockOrderedEXT
PixelInterlockUnorderedEXT
PlusUconst
PofstreamIcNS_11char_traitsIcEEEE
PointCoord
PointMode
PointSize
Pointer
Popping H
Popping empty indent stack
Position
PositionH3P
PositionPerViewNV
Possible extensions include
Post-Decrement
Post-Increment
Post-depH
Post-depth coverage is only supported on iOS
Post-depth coverage requires Metal 2.0
PostDepthCoverage
PpXZARA
PpXpPpPpX
PppP00
Pre-Decrement
Pre-Increment
Precision qualifiers must match
Presence of invariant qualifier must match
Presence of precise qualifier must match
PresentCH
PresentKHR
PresentModesKHR
PrimitivH
PrimitiveCountNV
PrimitiveID
PrimitiveId
PrimitiveId is computed manually with multi-patch workgroups in MSL
PrimitiveId is not supported in fragment on iOS
PrimitiveId is not supported in this execution model
PrimitiveId on macOS requires MSL 2.2
PrimitiveIndicesNV
Private
Private GPU-only memory cannot be mapped to host memory
ProcAddr
ProcAddrH
Proj witH
ProjEXT
ProjGrad
ProjGradARB
ProjGradEXT
ProjGradH
ProjLod
ProjLodEXT
ProjLodOffset
ProjOffset
ProjectionAxis = Coords.x
ProjectionAxis = Coords.y
ProjectionAxis = Coords.z
PropertiH
Properties
Properties not equal for format %s
PropertyRequiredWorkgroupSize
PtrAccessChain
PtrCastToGeneric
PtrDiff
PtrEqual
PtrNotEqual
PureOperatorBuiltins == false
Push constant block cannot be expressed as neither std430 nor std140. ES-targets do not support GL_ARB_enhanced_layouts
PushConstant
PushConstantEnqueuedLocalSize
PushConstantGlobalOffset
PushConstantGlobalSize
PushConstantNumWorkgroups
PushConstantRegionGroupOffset
PushConstantRegionOffset
Q16@0:8
Q5basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
Q7bad_function_callE
QRTSVWXYZUP
QUERY_PH
QUESTION
QUEUEFAMILYCOHERENT
QXXFW#M
QostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
Qualcomm
QuantizeToF16
QueryLodH
QueryPooH
QueryPool
QueryPoolEXT
QueryPoolResults
QuerySizH
QueryStatus
Querying alignment of opaque object
Querying size for object with opaque size
Querying size of opaque object
QueryingH
QueueFamily
QueueFamilyKHR
QueueFamilyProperties
R11fG11fB10f
R16Snorm
R3basic_filebufIcNS_11char_traitsIcEEEE
R8Snorm
RAME_COUH
RARARARARASBSMp
RARARARA`<ARATAp
RARARAWARAWARAWARAWARAWARAWARAWARAUAUA[ATARARARBSBWARAWARAWARARAWARAWARAWARAWARA[ATARAYAWCRAYARAYARAYARAYARAYARAYARAYARAYARAYARARAYARARAZAp
RARARAp
RARASBUARAUARAUARAUARAUARAUARAUARAUARAUARAUARAUARA[ARAUDRARA[ARA[ARA[ARA[ARA[ARA[ARA[ARA[ARAUARAVERARAVATAp
RARATATAp
RARATAp
RARATBSBSBUBRA[ATAUCRAWAVARAp
RARAUARAUARAUARAUARAUARAUARAUARAUARAUARAUARAUARA[ARAUDRARA[ARA[ARA[ARA[ARA[ARA[ARA[ARA[ARAUARAVERARAVATAp
RARAWAZAp
RARAZAp
RATARATARATARATARATARATARATARATARATARATARATARATARASASAp
RATARAZAp
RAUARA[ATARBRAUA]ATA^ATA^BTBp

RAWARAWARAWARAWARAWARAWARAWARAWARAWARA]ATA[ATARAYAUARASBZAZARARA[ATARAZAp
RAWARAWARAWARAWARAWARAWARAWARAWARAWARA]ATA[ATARAYAUARAp
RAWAWAXARARAXARARARAWARARAWARAUAUARARA[ATARAVAVATAUA
RAYARAYARAYARAYARAYARAYARAYARAYARAp
RAYQUERYEXT
RA[ATA[ATAUA[ATA[ATARARARAp
RA\ARA\ARA\ARA\AYA`|ARASAp
RA\ARA\ARA\ARA\AYB`JA
RA\ASAp
RA\AXA\ARA\ARA\A
RBRATARAZARAp
RBTARA[ATA[ATAUA[ATA[ATARARARAp
READONLY
RESERVED_IDENTIFIER_FIXUP
RESOURCE
RESTRICT
RE_1D_ASH
RE_ORDERH
RFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
RIGHT_ANGLE
RIGHT_ASSIGN
RIGHT_BRACE
RIGHT_BRACKET
RIGHT_OP
RIGHT_PAREN
RKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
RMANCE_LH
RMANCE_TH
RONOUS_QH
RRRRRRR
RRRRRRRRRRRRRRRRRRRRRR
RTVXZ\^`bdfhjl
RT_LARGEH
R_CONVERH
Radians
Range::iH
Raster oH
Raster order groups require MSL 2.0
Ray tracing shaders require non-es profile with version 460 or above
RayDirecI
RayGenerationKHR
RayGenerationNV
RayGeometryIndexKHR
RayOrigiI
RayPayloadKHR
RayPayloadNV
RayQueryCandidateIntersectionAABBKHR
RayQueryCandidateIntersectionKHR
RayQueryCandidateIntersectionTriangleKHR
RayQueryCommittedIntersectionGeneratedKHR
RayQueryCommittedIntersectionKHR
RayQueryCommittedIntersectionNoneKHR
RayQueryCommittedIntersectionTriangleKHR
RayQueryConfirmIntersectionKHR
RayQueryGenerateIntersectionKHR
RayQueryGetIntersectionBarycentricsKHR
RayQueryGetIntersectionCandidateAABBOpaqueKHR
RayQueryGetIntersectionFrontFaceKHR
RayQueryGetIntersectionGeometryIndexKHR
RayQueryGetIntersectionInstanceCustomIndexKHR
RayQueryGetIntersectionInstanceIdKHR
RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR
RayQueryGetIntersectionObjectRayDirectionKHR
RayQueryGetIntersectionObjectRayOriginKHR
RayQueryGetIntersectionObjectToWorldKHR
RayQueryGetIntersectionPrimitiveIndexKHR
RayQueryGetIntersectionTKHR
RayQueryGetIntersectionTypeKHR
RayQueryGetIntersectionWorldToObjectKHR
RayQueryGetRayFlagsKHR
RayQueryGetRayTMinKHR
RayQueryGetWorldRayDirectionKHR
RayQueryGetWorldRayOriginKHR
RayQueryInitializeKHR
RayQueryProceedKHR
RayQueryProvisionalKHR
RayQueryTerminateKHR
RayTmaxKHR
RayTmaxNV
RayTminKHR
RayTminNV
RayTracingNV
RayTracingProvisionalKHR
RayTraversalPrimitiveCullingProvisionalKHR
Read MSL from pipeline cache
ReadClockKHR
ReadOnly
ReadPipe
ReadPipeBlockingINTEL
ReadWrite
Reading a token
Recompile with DUMP_COUNTERS defined to see counters
RecordNVH
RectanglH
Rectangle textures are not supported on OpenGL ES
Recursion detected
Reducing stack by rule %d (line %lu
Reference
ReferencedIndirectlyINTEL
Reflect
Refract
RegisterINTEL
Relaxed
RelaxedPrecision
Release
ReleaseEvent
Render pipeline
RenderPaH
RenderPass
RepeatMirrored
ReportCallbackEXT
ReportIntersectionKHR
ReportIntersectionNV
ReportMessageEXT
Requested
RequiremH
ResType
ReserveIH
ReserveId
ReserveReadPipePackets
ReserveWritePipePackets
Reserved word
ReservedReadPipe
ReservedWritePipe
Restrict
RestrictPointer
RestrictPointerEXT
RestrictType
Results not equal for format %s on test %s
RetainEvent
Retrieve a CAMetalDrawable from CAMetalLayer
Retrieve a MTLFunction from a MTLLibrary
Retrieve shader library from the cache
ReturnValue
Returns 2D texture coords corresponding to 1D texel buffer coords
Returns buffer coords corresponding to 2D texture coords for emulating 2D texture atomics
Returns the determinant of a 2x2 matrix
Returns the determinant of a 3x3 matrix
Returns the inverse of a matrix, by using the algorithm of calculating the classical
Rg16Snorm
Rg8Snorm
Rgb10A2
Rgb10a2ui
Rgba16Snorm
Rgba16f
Rgba16i
Rgba16ui
Rgba32f
Rgba32i
Rgba32ui
Rgba8Snorm
Rgba8ui
Rhj)8tn
RoundEven
RoundToPow2
RoundingModeRTE
RoundingModeRTZ
Row-majoH
Row-major matrices must be square on this platform
RowMajor
Runtime H
Runtime arrays with dynamic offsets are not supported yet
RuntimeDescriptorArray
RuntimeDescriptorArrayEXT
S profilH
SAMPLER
SAMPLER1D
SAMPLER1DARRAY
SAMPLER1DARRAYSHADOW
SAMPLER1DSHADOW
SAMPLER2D
SAMPLER2DARRAY
SAMPLER2DARRAYSHADOW
SAMPLER2DMS
SAMPLER2DMSARRAY
SAMPLER2DRECT
SAMPLER2DRECTSHADOW
SAMPLER2DSHADOW
SAMPLER3D
SAMPLERBUFFER
SAMPLERCUBE
SAMPLERCUBEARRAY
SAMPLERCUBEARRAYSHADOW
SAMPLERCUBESHADOW
SAMPLEREXTERNAL2DY2YEXT
SAMPLEREXTERNALOES
SAMPLERSHADOW
SARASAVAWAUL
SASASASASASASASASASASASASASASASASASASASASASASASASARN
SAUATAWAVASAR
SAYASB
SAYA\ARA\ARA\AWA[ASAWAUA`+E
SBRAVARAVEVARAWA
SBSBUBRA[ATAUCRAWAVARAp
SBVARARARARARAUA^ATA^ATA^ATA
SBWARAWARAUCRAWARAWARAWARBSBWKp
SBZAZARARA[ATARAZAp
SCHAR_MAH
SCHAR_MAX
SCHAR_MIH
SCHAR_MIN
SConvert
SEMICOLON
SFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
SGreaterThan
SGreaterThanEqual
SHADERCALLCOHERENT
SION_FLIH
SL 2.0 aH
SL 3.0 aH
SL 4000.H
SL targeH
SL versiH
SLcG HcW
SLessThan
SLessThanEqual
SMCountNV
SMax3AMD
SMid3AMD
SMin3AMD
SMulExtended
SNegate
SPASARATAWAV
SPIR-V
SPIR-V 1.0
SPIR-V 1.0 (under OpenCL 1.2 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 1.2 Full Profile semantics
SPIR-V 1.0 (under OpenCL 2.0 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 2.0 Full Profile semantics
SPIR-V 1.0 (under OpenCL 2.1 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 2.1 Full Profile semantics
SPIR-V 1.0 (under OpenGL 4.0 semantics
SPIR-V 1.0 (under OpenGL 4.1 semantics
SPIR-V 1.0 (under OpenGL 4.2 semantics
SPIR-V 1.0 (under OpenGL 4.3 semantics
SPIR-V 1.0 (under OpenGL 4.5 semantics
SPIR-V 1.0 (under Vulkan 1.0 semantics
SPIR-V 1.1
SPIR-V 1.2
SPIR-V 1.2 (under OpenCL 2.2 Embedded Profile semantics
SPIR-V 1.2 (under OpenCL 2.2 Full Profile semantics
SPIR-V 1.3
SPIR-V 1.3 (under Vulkan 1.1 semantics
SPIR-V 1.3 (under WIP WebGPU semantics
SPIR-V 1.4
SPIR-V 1.4 (under Vulkan 1.1 semantics
SPIR-V 1.5
SPIR-V 1.5 (under Vulkan 1.2 semantics
SPIR-V Tools Assembler
SPIR-V Tools Linker
SPIR-V callers expect a uint4. We must convert
SPIR-V dH
SPIR-V does not define ArrayStride for buffer block
SPIR-V iH
SPIR-V instruction goes out of bounds
SPIR-V instructions cannot consume 0 words. Invalid SPIR-V file
SPIR-V requires location for user input/output
SPIRV fiH
SPIRV file too small
SPIRV foH
SPIRV_CH
SPIRV_CROSS_CONSTANT_ID
SPIRV_CrH
SPIRV_CrI
SPIRV_Cross_BaseInstance
SPIRV_Cross_BaseVertex
SPIRV_Cross_Combined
SPIRV_Cross_DummySampler
SPIRV_Cross_return_value
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_gpu_shader_half_float_fetch
SPV_AMD_gpu_shader_int16
SPV_AMD_shader_ballot
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_AMD_shader_trinary_minmax
SPV_AMD_texture_gather_bias_lod
SPV_END_OF_STREAM
SPV_ERROR_INTERNAL
SPV_ERROR_INVALID_BINARY
SPV_ERROR_INVALID_CFG
SPV_ERROR_INVALID_DIAGNOSTIC
SPV_ERROR_INVALID_ID
SPV_ERROR_INVALID_LAYOUT
SPV_ERROR_INVALID_LOOKUP
SPV_ERROR_INVALID_POINTER
SPV_ERROR_INVALID_TABLE
SPV_ERROR_INVALID_TEXT
SPV_ERROR_INVALID_VALUE
SPV_ERROR_OUT_OF_MEMORY
SPV_EXT_demote_to_helper_invocation
SPV_EXT_descriptor_indexing
SPV_EXT_fragment_fully_covered
SPV_EXT_fragment_invocation_density
SPV_EXT_fragment_shader_interlock
SPV_EXT_physical_storage_buffer
SPV_EXT_shader_atomic_float_add
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_FAILED_MATCH
SPV_INTEL_shader_integer_functions2
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_device_group
SPV_KHR_multiview
SPV_KHR_non_semantic_info
SPV_KHR_physical_storage_buffer
SPV_KHR_post_depth_coverage
SPV_KHR_ray_query
SPV_KHR_ray_tracing
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_clock
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_vote
SPV_KHR_vulkan_memory_model
SPV_NVX_multiview_per_view_attributes
SPV_NV_compute_shader_derivatives
SPV_NV_cooperative_matrix
SPV_NV_fragment_shader_barycentric
SPV_NV_geometry_shader_passthrough
SPV_NV_mesh_shader
SPV_NV_ray_tracing
SPV_NV_sample_mask_override_coverage
SPV_NV_shader_image_footprint
SPV_NV_shader_sm_builtins
SPV_NV_shader_subgroup_partitioned
SPV_NV_shading_rate
SPV_NV_stereo_view_rendering
SPV_NV_viewport_array2
SPV_REQUESTED_TERMINATION
SPV_SUCCESS
SPV_UNSUPPORTED
SPV_WARNING
SSBOs noH
SSBOs not supported in legacy targets
SSL 320.H
SSSS<>SSS@SSSSSSSSSSSSSSSSSSBDFHJLNPSRSSST
SSSSSSS
SSSSSSSSSSSS
SSSSSSSSSSSSSSSSSS
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
STATIC_DATA_TRACEPOINT
STATIC_DATA_TRACEPOINT_V
STATIC_DL
STRING_LITERAL
SUBGROUPCOHERENT
SUBPASSINPUT
SUBPASSINPUTMS
SUBROUTINE
SUB_ASSIGN
Sample pH
Sample position is retrieved by a function in MSL
SampleId
SampleInterlockOrderedEXT
SampleInterlockUnorderedEXT
SampleMH
SampleMask
SampleMaskIn
SampleMaskOverrideCoverageNV
SampleMaskPostDepthCoverage
SamplePosition
SampleRateShading
Sampled1D
SampledBuffer
SampledCubeArray
SampledImage
SampledImageArrayDynamicIndexing
SampledImageArrayNonUniformIndexing
SampledImageArrayNonUniformIndexingEXT
SampledRect
Sampler H
Sampler arrays contaning multi planar samplers are not supported
SamplerYH
SatConvertSToU
SatConvertUToS
SaturatedConversion
Saved SPIR-V to file
Schema
Secondary command buffers may not be submitted directly to a queue
SecondaryColor
SecondaryFragColorEXT
SecondaryFragDataEXT
SecondaryPositionNV
SecondaryViewportMaskNV
SecondaryViewportRelativeNV
See previous logged error
SelectionMerge
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
SemaphorH
SemaphoreProperties
Sequence
SequentiallyConsistent
SetEventH
SetLayout
SetUserEventStatus
ShFinalize
Shader library
Shader module does not contain an entry point named '%s
Shader version
ShaderCallKHR
ShaderClockKHR
ShaderLayer
ShaderMoH
ShaderNonUniform
ShaderNonUniformEXT
ShaderRecordBufferKHR
ShaderRecordBufferNV
ShaderSMBuiltinsNV
ShaderStereoViewNV
ShaderViewportIndex
ShaderViewportIndexLayerEXT
ShaderViewportIndexLayerNV
ShaderViewportMaskNV
Shaderc over Glslang
ShadingRateInterlockOrderedEXT
ShadingRateInterlockUnorderedEXT
ShadingRateNV
ShiftLeftLogical
ShiftRightArithmetic
ShiftRightLogical
Shifting
ShuffleXor
SignBitSet
SignExtend
SignedChar
SignedInt16
SignedInt32
SignedInt8
SignedZeroInfNanPreserve
SimpleDualPortINTEL
SinglepumpINTEL
Size canH
SizeInBytes
SkipAABBsKHR
SkipClosestHitShaderKHR
SkipTrianglesKHR
SmoothStep
Snorm4x8H
SnormInt16
SnormInt8
Source entry point must be "main
SourceContinued
SourceExtension
SpacingEqual
SpacingFractionalEven
SpacingFractionalOdd
Sparse fH
Sparse feedback is not supported in GLSL
Sparse feedback not yet supported in MSL
Sparse rH
Sparse residency is not supported in ESSL
Sparse tH
Sparse texture feedback is not supported on ESSL
SparseResidency
Spec conH
Spec constant evaluation must be a scalar
SpecConstant
SpecConstantComposite
SpecConstantFalse
SpecConstantGlobalOffset
SpecConstantOp
SpecConstantTrue
SpecConstantWorkDim
SpecConstantWorkgroupSize
SpecialiH
Specialization constant operation used in OpConstantComposite
Specialize a retrieved MTLFunction
SpeculatedIterationsINTEL
SpvExecutionMode
SpvOpExtInst == opcode
SpvOpSpecConstantOp == opcode
Stack now
Stack size increased to %lu
StackValue
Starting parse
Starting testing formats
StatistiH
Stencil H
Stencil export not supported in GLES
Stencil export only supported in MSL 2.1 and up
StencilCH
StencilExportEXT
StencilRH
StencilRefReplacingEXT
StencilResolveFilterFromVkResolveModeFlagBits
StencilWH
Storage class semantics must not be zero
Storage qualifiers must match
StorageBuffer
StorageBuffer16BitAccess
StorageBuffer8BitAccess
StorageBufferArrayDynamicIndexing
StorageBufferArrayNonUniformIndexing
StorageBufferArrayNonUniformIndexingEXT
StorageCH
StorageClass
StorageImageArrayDynamicIndexing
StorageImageArrayNonUniformIndexing
StorageImageArrayNonUniformIndexingEXT
StorageImageExtendedFormats
StorageImageMultisample
StorageImageReadWithoutFormat
StorageImageWriteWithoutFormat
StorageInputOutput16
StoragePushConstant16
StoragePushConstant8
StorageTexelBufferArrayDynamicIndexing
StorageTexelBufferArrayDynamicIndexingEXT
StorageTexelBufferArrayNonUniformIndexing
StorageTexelBufferArrayNonUniformIndexingEXT
StorageUniform16
StorageUniformBufferBlock16
Store cooperative matrix
Stride for dynamic vector indexing must be divisible by the size of a 4-component vector. This cannot be flattened in legacy targets
Stride oH
String wH
String was not terminated before EOF
Struct mH
Struct member does not have ArrayStride set
Struct member does not have MatrixStride set
Struct member does not have Offset set
Structure
SubGroupEqMask
SubGroupGeMask
SubGroupGtMask
SubGroupInvocation
SubGroupLeMask
SubGroupLtMask
SubGroupSize
Subgroup
Subgroup ballot functionality is unavailable on iOS
Subgroup ballot functionality requires Metal 2.1
Subgroup ballot masks are handled specially in MSL
Subgroup builtins require Metal 2.0
Subgroup ops beyond broadcast and shuffle on macOS require Metal 2.1 and up
SubgroupAllEqualKHR
SubgroupAllKHR
SubgroupAnyKHR
SubgroupAvcBmeInitializeINTEL
SubgroupAvcFmeInitializeINTEL
SubgroupAvcImeAdjustRefOffsetINTEL
SubgroupAvcImeConvertToMcePayloadINTEL
SubgroupAvcImeConvertToMceResultINTEL
SubgroupAvcImeEvaluateWithDualReferenceINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL
SubgroupAvcImeGetBorderReachedINTEL
SubgroupAvcImeGetDualReferenceStreaminINTEL
SubgroupAvcImeGetSingleReferenceStreaminINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetTruncatedSearchIndicationINTEL
SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL
SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL
SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL
SubgroupAvcImeInitializeINTEL
SubgroupAvcImeRefWindowSizeINTEL
SubgroupAvcImeSetDualReferenceINTEL
SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL
SubgroupAvcImeSetMaxMotionVectorCountINTEL
SubgroupAvcImeSetSingleReferenceINTEL
SubgroupAvcImeSetUnidirectionalMixDisableINTEL
SubgroupAvcImeSetWeightedSadINTEL
SubgroupAvcImeStripDualReferenceStreamoutINTEL
SubgroupAvcImeStripSingleReferenceStreamoutINTEL
SubgroupAvcMceConvertToImePayloadINTEL
SubgroupAvcMceConvertToImeResultINTEL
SubgroupAvcMceConvertToRefPayloadINTEL
SubgroupAvcMceConvertToRefResultINTEL
SubgroupAvcMceConvertToSicPayloadINTEL
SubgroupAvcMceConvertToSicResultINTEL
SubgroupAvcMceGetBestInterDistortionsINTEL
SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL
SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL
SubgroupAvcMceGetDefaultInterShapePenaltyINTEL
SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL
SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL
SubgroupAvcMceGetInterDirectionsINTEL
SubgroupAvcMceGetInterDistortionsINTEL
SubgroupAvcMceGetInterMajorShapeINTEL
SubgroupAvcMceGetInterMinorShapeINTEL
SubgroupAvcMceGetInterMotionVectorCountINTEL
SubgroupAvcMceGetInterReferenceIdsINTEL
SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceGetMotionVectorsINTEL
SubgroupAvcMceSetAcOnlyHaarINTEL
SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceSetInterDirectionPenaltyINTEL
SubgroupAvcMceSetInterShapePenaltyINTEL
SubgroupAvcMceSetMotionVectorCostFunctionINTEL
SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL
SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL
SubgroupAvcMotionEstimationChromaINTEL
SubgroupAvcMotionEstimationINTEL
SubgroupAvcMotionEstimationIntraINTEL
SubgroupAvcRefConvertToMcePayloadINTEL
SubgroupAvcRefConvertToMceResultINTEL
SubgroupAvcRefEvaluateWithDualReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcRefEvaluateWithSingleReferenceINTEL
SubgroupAvcRefSetBidirectionalMixDisableINTEL
SubgroupAvcRefSetBilinearFilterEnableINTEL
SubgroupAvcSicConfigureIpeLumaChromaINTEL
SubgroupAvcSicConfigureIpeLumaINTEL
SubgroupAvcSicConfigureSkcINTEL
SubgroupAvcSicConvertToMcePayloadINTEL
SubgroupAvcSicConvertToMceResultINTEL
SubgroupAvcSicEvaluateIpeINTEL
SubgroupAvcSicEvaluateWithDualReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcSicEvaluateWithSingleReferenceINTEL
SubgroupAvcSicGetBestIpeChromaDistortionINTEL
SubgroupAvcSicGetBestIpeLumaDistortionINTEL
SubgroupAvcSicGetInterRawSadsINTEL
SubgroupAvcSicGetIpeChromaModeINTEL
SubgroupAvcSicGetIpeLumaShapeINTEL
SubgroupAvcSicGetMotionVectorMaskINTEL
SubgroupAvcSicGetPackedIpeLumaModesINTEL
SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL
SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL
SubgroupAvcSicInitializeINTEL
SubgroupAvcSicSetBilinearFilterEnableINTEL
SubgroupAvcSicSetBlockBasedRawSkipSadINTEL
SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaShapePenaltyINTEL
SubgroupAvcSicSetSkcForwardTransformEnableINTEL
SubgroupBallotKHR
SubgroupBlockReadINTEL
SubgroupBlockWriteINTEL
SubgroupBufferBlockIOINTEL
SubgroupDispatch
SubgroupEqMask
SubgroupEqMaskKHR
SubgroupFirstInvocationKHR
SubgroupGeMask
SubgroupGeMaskKHR
SubgroupGtMask
SubgroupGtMaskKHR
SubgroupH
SubgroupID
SubgroupId
SubgroupImageBlockIOINTEL
SubgroupImageBlockReadINTEL
SubgroupImageBlockWriteINTEL
SubgroupImageMediaBlockIOINTEL
SubgroupImageMediaBlockReadINTEL
SubgroupImageMediaBlockWriteINTEL
SubgroupInvocationID
SubgroupLeMask
SubgroupLeMaskKHR
SubgroupLocalInvocationId
SubgroupLocalInvocationId cannot be used outside of compute shaders before MSL 2.1
SubgroupLocalInvocationId cannot be used outside of compute shaders before MSL 2.2 on iOS
SubgroupLtMask
SubgroupLtMaskKHR
SubgroupMaxSize
SubgroupMemory
SubgroupReadInvocationKHR
SubgroupShuffleDownINTEL
SubgroupShuffleINTEL
SubgroupShuffleUpINTEL
SubgroupShuffleXorINTEL
SubgroupSize
SubgroupSize cannot be used outside of compute shaders before Metal 2.1
SubgroupSize cannot be used outside of compute shaders on iOS
SubgroupVoteKHR
Subgroups are only supported in Metal 2.0 and up
SubgroupsPerWorkgroup
SubgroupsPerWorkgroupId
SubpassData
SupportKH
SupportKHR
Surface-Presentation
SurfacePH
SurfacePresentModesKHR
SwapchaiH
SwapchainImagesKHR
Switch sH
Switch statement is not structured
Swizzle H
Swizzle index out of range
SwizzleInvocationsAMD
SwizzleInvocationsMaskedAMD
System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
System/Library/Frameworks/Metal.framework/Versions/A/Metal
System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
T (&dst
T (&src
T NoI = n * i
T NoI2 = NoI * NoI
T elements[Num ? Num : 1
T k = T(1) - eta * eta * (T(1) - NoI2
T must bH
T spvFAdd(T l, T r
T spvFMul(T l, T r
T v = select(x, T(-1) - x, x < T(0
TAL_COMMH
TARATARATARATARATARATARATARATARAXAYAYAYAYAYAp
TARATARATARATARATATARATARATARAXAYAYAYAYAYAp
TARATARAZARA`,ATAp
TARAZARAp
TBD functionality
TBTARAZARA`,ATAp
TEXTURE1D
TEXTURE1DARRAY
TEXTURE2D
TEXTURE2DARRAY
TEXTURE2DMS
TEXTURE2DMSARRAY
TEXTURE2DRECT
TEXTURE3D
TEXTUREBUFFER
TEXTURECUBE
TEXTURECUBEARRAY
TIMEOUTH
TLTextureMVK
TLii8mii8
TRACEPOH
TRACKINGH
TTllTT`ddd
TVariable
TYPE_NAME
T^{__CFString=},N
TagEXT
TaskCountNV
TemplateH
Templatet
TerminateInvocation
TerminateOnFirstHitKHR
TerminateRayKHR
TerminateRayNV
TessCoord
TessLevelInner
TessLevelOuter
TessellaH
Tessellation
Tessellation control
Tessellation control shader function could not be compiled into pipeline. See previous logged error
Tessellation control shader requires per-patch output buffer, but there is no free slot to pass it
Tessellation control shader requires tessellation level output buffer, but there is no free slot to pass it
Tessellation evaluation
Tessellation evaluation shader function could not be compiled into pipeline. See previous logged error
Tessellation levels are handled specially in MSL
Tessellation requires Metal 1.2
TessellationControl
TessellationEvaluation
TessellationPointSize
Test condition and select
Testing %s
TexCoord
TexCoordH
TexCoordH3P
TexCoordI3L
TexSubrez
Texel buffers are not supported on this device
TexelFetch
Texture
TextureML
TextureMVK
The adjoint matrix (inverse after dividing by determinant
The expected type is not a float type
The expected type is not a integer or float type
The expected type is not a integer type
The following %d Vulkan extensions are supported:%s
The following extension must be enabled to use this feature
The given text is a nullptr
The maximum number of descriptor sets that can be allocated by this descriptor pool is %d
The pixel components are in BGRA order, but texture::write wants them
The selector operand for OpSwitch must be the result of an instruction that generates an integer scalar
The value
The value of %s::components) (%s, %s, %s, %s), when applied to a VkImageView, requires full component swizzling to be enabled both at the time when the VkImageView is created and at the time any pipeline that uses that VkImageView is compiled. Full component swizzling can be enabled via the MVKConfiguration::fullImageViewSwizzle config parameter or MVK_CONFIG_FULL_IMAGE_VIEW_SWIZZLE environment variable
This MVKMTLBufferAllocator has been configured to dispense MVKMTLBufferRegions no larger than %lu bytes
This device does not support depth clamping
This function should never be called with kMVKShaderStageMax
This method should only be called on dedicated allocations
This structure is missing from the MSL headers
TimeAMD
Timeout after %.3f milliseconds. Likely internal Metal compiler error
Tint Compiler
ToBuffer
ToBufferH
ToImage
ToObjectI
Too few args in Macro
Too many args in macro
TraceNV
TraceRayKHR
TransformFeedback
TranslateBlockDecoration
TranslateDimensionality
TranslateEnvironment
TranslateExecutionModel
TranslateImageFormat
TranslateLayoutDecoration
TranslateStorageClass
Transpose
Triangles
Tried passing a remapped subpassInput variable to a function. This will not work correctly because type-remapping information is lost. To workaround, please consider not passing the subpass input as a function parameter, or use in/out variables instead which do not need type remapping information
Tried to convert uint literal into int, but this made the literal negative
TrimCommandPool
Trinary H
Trinary min/max functions require MSL 2.1
Trying tH
Trying to dynamically index into an array interface variable in tessellation. This is currently unsupported
Trying to end a non-existing block
Trying to modify a non-existing block
Trying to remap multisampled image to variable, this is not possible
Tu^@9t
Type Id
Type for
TypeAccelerationStructureKHR
TypeAccelerationStructureNV
TypeArray
TypeAvcImeDualReferenceStreaminINTEL
TypeAvcImePayloadINTEL
TypeAvcImeResultDualReferenceStreamoutINTEL
TypeAvcImeResultINTEL
TypeAvcImeResultSingleReferenceStreamoutINTEL
TypeAvcImeSingleReferenceStreaminINTEL
TypeAvcMcePayloadINTEL
TypeAvcMceResultINTEL
TypeAvcRefPayloadINTEL
TypeAvcRefResultINTEL
TypeAvcSicPayloadINTEL
TypeAvcSicResultINTEL
TypeBool
TypeCooperativeMatrixNV
TypeDeviceEvent
TypeEvent
TypeFloat
TypeForwardPointer
TypeFromMTLTextureType
TypeFromVkImage
TypeFunction
TypeImage
TypeInt
TypeMatrix
TypeNamedBarrier
TypeOpaque
TypePipe
TypePipeStorage
TypePointer
TypeQueue
TypeRayQueryProvisionalKHR
TypeReserveId
TypeRuntimeArray
TypeSampledImage
TypeSampler
TypeStruct
TypeVector
TypeVmeImageINTEL
TypeVoid
Types in PhysicalStorageBufferEXT must be pointers
Types inH
Types must match
T{CGSize=dd},R,N
U16VEC2
U16VEC3
U16VEC4
U32VEC2
U32VEC3
U32VEC4
U3basic_filebufIcNS_11char_traitsIcEEEE
U64VEC2
U64VEC3
U64VEC4
U7bad_function_callE
U8basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
UARAUAUA[ATBp
UAUARARA[ATA[BTA\AXA\ATAp
UAUARARB[ATA[BTA\ATATA\ATAp
UAddSatINTEL
UAverageINTEL
UAverageRoundedINTEL
UCHAR_MAH
UCHAR_MAX
UCOOPMATNV
UConvert
UCountLeadingZerosINTEL
UCountTrailingZerosINTEL
UEUE_FAMH
UEUE_SUBH
UE_FAMILH
UE_INDEXH
UGreaterThan
UGreaterThanEqual
UIMAGE1D
UIMAGE1DARRAY
UIMAGE2D
UIMAGE2DARRAY
UIMAGE2DMS
UIMAGE2DMSARRAY
UIMAGE2DRECT
UIMAGE3D
UIMAGEBUFFER
UIMAGECUBE
UIMAGECUBEARRAY
UINT16CONSTANT
UINT16_T
UINT32CONSTANT
UINT32_T
UINT64CONSTANT
UINT64_T
UINT8_T
UINTCONSTANT
ULessThan
ULessThanEqual
UMax3AMD
UMid3AMD
UMin3AMD
UMul32x16INTEL
UMulExtended
UNIFORM
UNIMPLEMENTED
UNKNOWN ERROR
UPFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
URE_OUTPH
URE_SCOPH
USAMPLER1D
USAMPLER1DARRAY
USAMPLER2D
USAMPLER2DARRAY
USAMPLER2DMS
USAMPLER2DMSARRAY
USAMPLER2DRECT
USAMPLER3D
USAMPLERBUFFER
USAMPLERCUBE
USAMPLERCUBEARRAY
USE_NEARH
USHRT_MAH
USHRT_MAX
USUBPASSINPUT
USUBPASSINPUTMS
USubSatINTEL
UTEXTURE1D
UTEXTURE1DARRAY
UTEXTURE2D
UTEXTURE2DARRAY
UTEXTURE2DMS
UTEXTURE2DMSARRAY
UTEXTURE2DRECT
UTEXTURE3D
UTEXTUREBUFFER
UTEXTURECUBE
UTEXTURECUBEARRAY
UTF8String
UUIDString
UUUUUUU
UUUUUUUU
UUUUUUUUH
UUUUUUUUI
UUUUUUUUL
UUUUUUUUf
UUUUw&L
UV_targeH
UX+-XlI6
Uint -> Float bitcast not supported on legacy ESSL
Uint -> H
Uint biH
Uint2x16
Uint2x16H
Uint2x32
Uint4x16
Uint4x16H
Unable to convert GLSL to SPIR-V
Unable to convert SPIR-V to MSL
Unable to parse built-ins
Unable to remove packed decoration as entire struct must be fully packed. Do not mix scalar and std140 layout rules
UndefineH
Undefined behavior in SDiv, b == 0
Undefined behavior in SMod, b == 0
Undefined behavior in SRem, b == 0
Undefined behavior in UDiv, b == 0
Undefined behavior in UMod, b == 0
Under Metal, vertex attribute binding strides must be aligned to %llu bytes
Unexpected numeric literal type
Unexpected result code from ParseAndEncodeNumber
UnhandleH
Unhandled number of color image planes
Uniform
Uniform block reflection
Uniform reflection
UniformAndStorageBuffer16BitAccess
UniformAndStorageBuffer8BitAccess
UniformBufferArrayDynamicIndexing
UniformBufferArrayNonUniformIndexing
UniformBufferArrayNonUniformIndexingEXT
UniformConstant
UniformId
UniformMemory
UniformTexelBufferArrayDynamicIndexing
UniformTexelBufferArrayDynamicIndexingEXT
UniformTexelBufferArrayNonUniformIndexing
UniformTexelBufferArrayNonUniformIndexingEXT
Uniforms
UnimplemH
Unimplemented block terminator
Unimplemented spec constant op
UniversaH
Universal
Unknown
Unknown Error
Unknown H
Unknown Stage
Unknown Use BlitEncoder
Unknown Use ComputeEncoder
Unknown Use RenderEncoder
Unknown constant
Unknown glslang keyword
Unknown performance activity
Unknown storage class used for copying arrays
Unordered
Unorm4x8H
UnormInt101010
UnormInt101010_2
UnormInt16
UnormInt24
UnormInt8
UnormShort555
UnormShort565
UnpackDouble2x32
UnpackHalf2x16
UnpackSnorm2x16
UnpackSnorm4x8
UnpackUnorm2x16
UnpackUnorm4x8
Unreachable
UnrecognH
Unrecognized VkDescriptorType %d
Unrecognized bit-width of floating point type
Unrecognized type in type_to_packed_base_size
Unroll
Unsigned
Unsigned integers are not supported on legacy GLSL targets
Unsigned integers are not supported on legacy targets
UnsignedChar
UnsignedH
UnsignedInt16
UnsignedInt32
UnsignedInt8
Unsized H
Unsized array of images is not supported in MSL
Unsized array of samplers is not supported in MSL
Unsized arrays of buffers are not supported in MSL
Unspecified
UnstructuredLoopControlsINTEL
UnsupporH
Unsupported
Unsupported format
Unsupported legacy texture op
Unsupported shader stage: %d
Unsupported spec constant opcode for evaluation
Unwind_Resume
UofstreamIcNS_11char_traitsIcEEEE
UpdateBuffer
UpdateTemplate
UseDiagnosticAsMessageConsumer
UserSemantic
UserTypeGOOGLE
Users/dang/src/MoltenVK/External/SPIRV-Cross/spirv_cfg.cpp
Users/dang/src/MoltenVK/External/SPIRV-Cross/spirv_cfg.hpp
Users/dang/src/MoltenVK/External/SPIRV-Cross/spirv_cross.cpp
Users/dang/src/MoltenVK/External/SPIRV-Cross/spirv_cross_parsed_ir.cpp
Users/dang/src/MoltenVK/External/SPIRV-Cross/spirv_glsl.cpp
Users/dang/src/MoltenVK/External/SPIRV-Cross/spirv_msl.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/binary.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/diagnostic.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/disassemble.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/name_mapper.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/opcode.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/operand.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/text.cpp
Users/dang/src/MoltenVK/External/glslang/External/spirv-tools/source/util/hex_float.h
Users/dang/src/MoltenVK/External/glslang/OGLCompilersDLL/InitializeDll.cpp
Users/dang/src/MoltenVK/External/glslang/SPIRV/GlslangToSpv.cpp
Users/dang/src/MoltenVK/External/glslang/SPIRV/InReadableOrder.cpp
Users/dang/src/MoltenVK/External/glslang/SPIRV/SpvBuilder.cpp
Users/dang/src/MoltenVK/External/glslang/SPIRV/SpvBuilder.h
Users/dang/src/MoltenVK/External/glslang/SPIRV/SpvPostProcess.cpp
Users/dang/src/MoltenVK/External/glslang/SPIRV/hex_float.h
Users/dang/src/MoltenVK/External/glslang/SPIRV/spvIR.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Include/../Include/BaseTypes.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Include/../Include/Common.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Include/../Include/ConstantUnion.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Include/../Include/Types.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Include/Types.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Include/arrays.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Public/../Include/../Include/Common.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Public/../Include/../Include/Types.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/../Public/../Include/arrays.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/Constant.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/Initialize.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/Intermediate.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/ParseContextBase.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/ParseHelper.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/ShaderLang.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/SymbolTable.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/SymbolTable.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/Versions.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/intermOut.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/iomapper.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/linkValidate.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/localintermediate.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/preprocessor/Pp.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/preprocessor/PpContext.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/preprocessor/PpContext.h
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/preprocessor/PpScanner.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/MachineIndependent/propagateNoContraction.cpp
Users/dang/src/MoltenVK/External/glslang/glslang/OSDependent/Unix/ossource.cpp
Users/dang/src/MoltenVK/MoltenVK/MoltenVK/Commands/MVKCmdTransfer.mm
Users/dang/src/MoltenVK/MoltenVK/MoltenVK/Commands/MVKCommandEncoderState.mm
Users/dang/src/MoltenVK/MoltenVK/MoltenVK/GPUObjects/MVKDevice.h
Users/dang/src/MoltenVK/MoltenVK/MoltenVK/GPUObjects/MVKRenderPass.mm
Users/dang/src/MoltenVK/MoltenVK/MoltenVK/Utility/MVKFoundation.h
Users/dang/src/MoltenVK/MoltenVK/MoltenVK/Vulkan/mvk_datatypes.mm
Using %s for Vulkan semaphores
Using VkFormat
Using non-constant 0.0 bias() qualifier for sample_compare. This is not supported in MSL macOS
Using non-constant 0.0 gradient() qualifier for sample_compare. This is not supported in MSL macOS
UtilsLabH
UtilsMessengerEXT
Uvp5O!j
V file.H
V5basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
V9basic
VARARARARARARARASMp
VARIABLEH
VARIABLE_TRACEPOINT
VARYING
VATAUAUARA[ARAUAUARA[A
VERSION
VERTICAL_BAR
VKD3D Shader Compiler
VK_AMD_gH
VK_AMD_gpu_shader_half_float
VK_AMD_nH
VK_AMD_negative_viewport_height
VK_AMD_sH
VK_AMD_shader_image_load_store_lod
VK_AMD_shader_trinary_minmax
VK_COMPONENT_SWIZZLE_A
VK_COMPONENT_SWIZZLE_B
VK_COMPONENT_SWIZZLE_G
VK_COMPONENT_SWIZZLE_IDENTITY
VK_COMPONENT_SWIZZLE_ONE
VK_COMPONENT_SWIZZLE_R
VK_COMPONENT_SWIZZLE_ZERO
VK_ERROR_DEVICE_LOST
VK_ERROR_EXTENSION_NOT_PRESENT
VK_ERROR_FEATURE_NOT_PRESENT
VK_ERROR_FORMAT_NOT_SUPPORTED
VK_ERROR_FRAGMENTED_POOL
VK_ERROR_INCOMPATIBLE_DISPLAY_KHR
VK_ERROR_INCOMPATIBLE_DRIVER
VK_ERROR_INITIALIZATION_FAILED
VK_ERROR_INVALID_EXTERNAL_HANDLE
VK_ERROR_INVALID_SHADER_NV
VK_ERROR_LAYER_NOT_PRESENT
VK_ERROR_MEMORY_MAP_FAILED
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
VK_ERROR_OUT_OF_DATE_KHR
VK_ERROR_OUT_OF_DEVICE_MEMORY
VK_ERROR_OUT_OF_HOST_MEMORY
VK_ERROR_OUT_OF_POOL_MEMORY
VK_ERROR_SURFACE_LOST_KHR
VK_ERROR_TOO_MANY_OBJECTS
VK_ERROR_VALIDATION_FAILED_EXT
VK_EVENT_RESET
VK_EVENT_SET
VK_EXT_dH
VK_EXT_debug_marker
VK_EXT_debug_report
VK_EXT_debug_utils
VK_EXT_fH
VK_EXT_fragment_shader_interlock
VK_EXT_hH
VK_EXT_hdr_metadata
VK_EXT_host_query_reset
VK_EXT_iH
VK_EXT_image_robustness
VK_EXT_inline_uniform_block
VK_EXT_mH
VK_EXT_memory_budget
VK_EXT_metal_surface
VK_EXT_pH
VK_EXT_post_depth_coverage
VK_EXT_rH
VK_EXT_robustness2
VK_EXT_sH
VK_EXT_scalar_block_layout
VK_EXT_shader_stencil_export
VK_EXT_shader_viewport_index_layer
VK_EXT_swapchain_colorspace
VK_EXT_tH
VK_EXT_texel_buffer_alignment
VK_EXT_vH
VK_EXT_vertex_attribute_divisor
VK_FORMAT_A1R5G5B5_UNORM_PACK16
VK_FORMAT_A2B10G10R10_SINT_PACK32
VK_FORMAT_A2B10G10R10_SNORM_PACK32
VK_FORMAT_A2B10G10R10_SSCALED_PACK32
VK_FORMAT_A2B10G10R10_UINT_PACK32
VK_FORMAT_A2B10G10R10_UNORM_PACK32
VK_FORMAT_A2B10G10R10_USCALED_PACK32
VK_FORMAT_A2R10G10B10_SINT_PACK32
VK_FORMAT_A2R10G10B10_SNORM_PACK32
VK_FORMAT_A2R10G10B10_SSCALED_PACK32
VK_FORMAT_A2R10G10B10_UINT_PACK32
VK_FORMAT_A2R10G10B10_UNORM_PACK32
VK_FORMAT_A2R10G10B10_USCALED_PACK32
VK_FORMAT_A8B8G8R8_SINT_PACK32
VK_FORMAT_A8B8G8R8_SNORM_PACK32
VK_FORMAT_A8B8G8R8_SRGB_PACK32
VK_FORMAT_A8B8G8R8_SSCALED_PACK32
VK_FORMAT_A8B8G8R8_UINT_PACK32
VK_FORMAT_A8B8G8R8_UNORM_PACK32
VK_FORMAT_A8B8G8R8_USCALED_PACK32
VK_FORMAT_ASTC_10x10_SRGB_BLOCK
VK_FORMAT_ASTC_10x10_UNORM_BLOCK
VK_FORMAT_ASTC_10x5_SRGB_BLOCK
VK_FORMAT_ASTC_10x5_UNORM_BLOCK
VK_FORMAT_ASTC_10x6_SRGB_BLOCK
VK_FORMAT_ASTC_10x6_UNORM_BLOCK
VK_FORMAT_ASTC_10x8_SRGB_BLOCK
VK_FORMAT_ASTC_10x8_UNORM_BLOCK
VK_FORMAT_ASTC_12x10_SRGB_BLOCK
VK_FORMAT_ASTC_12x10_UNORM_BLOCK
VK_FORMAT_ASTC_12x12_SRGB_BLOCK
VK_FORMAT_ASTC_12x12_UNORM_BLOCK
VK_FORMAT_ASTC_4x4_SRGB_BLOCK
VK_FORMAT_ASTC_4x4_UNORM_BLOCK
VK_FORMAT_ASTC_5x4_SRGB_BLOCK
VK_FORMAT_ASTC_5x4_UNORM_BLOCK
VK_FORMAT_ASTC_5x5_SRGB_BLOCK
VK_FORMAT_ASTC_5x5_UNORM_BLOCK
VK_FORMAT_ASTC_6x5_SRGB_BLOCK
VK_FORMAT_ASTC_6x5_UNORM_BLOCK
VK_FORMAT_ASTC_6x6_SRGB_BLOCK
VK_FORMAT_ASTC_6x6_UNORM_BLOCK
VK_FORMAT_ASTC_8x5_SRGB_BLOCK
VK_FORMAT_ASTC_8x5_UNORM_BLOCK
VK_FORMAT_ASTC_8x6_SRGB_BLOCK
VK_FORMAT_ASTC_8x6_UNORM_BLOCK
VK_FORMAT_ASTC_8x8_SRGB_BLOCK
VK_FORMAT_ASTC_8x8_UNORM_BLOCK
VK_FORMAT_B10G11R11_UFLOAT_PACK32
VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16
VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16
VK_FORMAT_B16G16R16G16_422_UNORM
VK_FORMAT_B4G4R4A4_UNORM_PACK16
VK_FORMAT_B5G5R5A1_UNORM_PACK16
VK_FORMAT_B5G6R5_UNORM_PACK16
VK_FORMAT_B8G8R8A8_SINT
VK_FORMAT_B8G8R8A8_SNORM
VK_FORMAT_B8G8R8A8_SRGB
VK_FORMAT_B8G8R8A8_SSCALED
VK_FORMAT_B8G8R8A8_UINT
VK_FORMAT_B8G8R8A8_UNORM
VK_FORMAT_B8G8R8A8_USCALED
VK_FORMAT_B8G8R8G8_422_UNORM
VK_FORMAT_B8G8R8_SINT
VK_FORMAT_B8G8R8_SNORM
VK_FORMAT_B8G8R8_SRGB
VK_FORMAT_B8G8R8_SSCALED
VK_FORMAT_B8G8R8_UINT
VK_FORMAT_B8G8R8_UNORM
VK_FORMAT_B8G8R8_USCALED
VK_FORMAT_BC1_RGBA_SRGB_BLOCK
VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134
VK_FORMAT_BC1_RGBA_UNORM_BLOCK
VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133
VK_FORMAT_BC1_RGB_SRGB_BLOCK
VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132
VK_FORMAT_BC1_RGB_UNORM_BLOCK
VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131
VK_FORMAT_BC2_SRGB_BLOCK
VK_FORMAT_BC2_SRGB_BLOCK = 136
VK_FORMAT_BC2_UNORM_BLOCK
VK_FORMAT_BC2_UNORM_BLOCK = 135
VK_FORMAT_BC3_SRGB_BLOCK
VK_FORMAT_BC3_SRGB_BLOCK = 138
VK_FORMAT_BC3_UNORM_BLOCK
VK_FORMAT_BC3_UNORM_BLOCK = 137
VK_FORMAT_BC4_SNORM_BLOCK
VK_FORMAT_BC4_UNORM_BLOCK
VK_FORMAT_BC5_SNORM_BLOCK
VK_FORMAT_BC5_UNORM_BLOCK
VK_FORMAT_BC6H_SFLOAT_BLOCK
VK_FORMAT_BC6H_UFLOAT_BLOCK
VK_FORMAT_BC7_SRGB_BLOCK
VK_FORMAT_BC7_UNORM_BLOCK
VK_FORMAT_D16_UNORM
VK_FORMAT_D16_UNORM_S8_UINT
VK_FORMAT_D24_UNORM_S8_UINT
VK_FORMAT_D32_SFLOAT
VK_FORMAT_D32_SFLOAT_S8_UINT
VK_FORMAT_E5B9G9R9_UFLOAT_PACK32
VK_FORMAT_EAC_R11G11_SNORM_BLOCK
VK_FORMAT_EAC_R11G11_UNORM_BLOCK
VK_FORMAT_EAC_R11_SNORM_BLOCK
VK_FORMAT_EAC_R11_UNORM_BLOCK
VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK
VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK
VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK
VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK
VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK
VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK
VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16
VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16
VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16
VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16
VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16
VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16
VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16
VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16
VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16
VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16
VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16
VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16
VK_FORMAT_G16B16G16R16_422_UNORM
VK_FORMAT_G16_B16R16_2PLANE_420_UNORM
VK_FORMAT_G16_B16R16_2PLANE_422_UNORM
VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM
VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM
VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM
VK_FORMAT_G8B8G8R8_422_UNORM
VK_FORMAT_G8_B8R8_2PLANE_420_UNORM
VK_FORMAT_G8_B8R8_2PLANE_422_UNORM
VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM
VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM
VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM
VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG
VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG
VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG
VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG
VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG
VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG
VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG
VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG
VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16
VK_FORMAT_R10X6G10X6_UNORM_2PACK16
VK_FORMAT_R10X6_UNORM_PACK16
VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16
VK_FORMAT_R12X4G12X4_UNORM_2PACK16
VK_FORMAT_R12X4_UNORM_PACK16
VK_FORMAT_R16G16B16A16_SFLOAT
VK_FORMAT_R16G16B16A16_SINT
VK_FORMAT_R16G16B16A16_SNORM
VK_FORMAT_R16G16B16A16_SSCALED
VK_FORMAT_R16G16B16A16_UINT
VK_FORMAT_R16G16B16A16_UNORM
VK_FORMAT_R16G16B16A16_USCALED
VK_FORMAT_R16G16B16_SFLOAT
VK_FORMAT_R16G16B16_SINT
VK_FORMAT_R16G16B16_SNORM
VK_FORMAT_R16G16B16_SSCALED
VK_FORMAT_R16G16B16_UINT
VK_FORMAT_R16G16B16_UNORM
VK_FORMAT_R16G16B16_USCALED
VK_FORMAT_R16G16_SFLOAT
VK_FORMAT_R16G16_SINT
VK_FORMAT_R16G16_SNORM
VK_FORMAT_R16G16_SSCALED
VK_FORMAT_R16G16_UINT
VK_FORMAT_R16G16_UNORM
VK_FORMAT_R16G16_USCALED
VK_FORMAT_R16_SFLOAT
VK_FORMAT_R16_SINT
VK_FORMAT_R16_SNORM
VK_FORMAT_R16_SSCALED
VK_FORMAT_R16_UINT
VK_FORMAT_R16_UNORM
VK_FORMAT_R16_USCALED
VK_FORMAT_R32G32B32A32_SFLOAT
VK_FORMAT_R32G32B32A32_SINT
VK_FORMAT_R32G32B32A32_UINT
VK_FORMAT_R32G32B32_SFLOAT
VK_FORMAT_R32G32B32_SINT
VK_FORMAT_R32G32B32_UINT
VK_FORMAT_R32G32_SFLOAT
VK_FORMAT_R32G32_SINT
VK_FORMAT_R32G32_UINT
VK_FORMAT_R32_SFLOAT
VK_FORMAT_R32_SINT
VK_FORMAT_R32_UINT
VK_FORMAT_R4G4B4A4_UNORM_PACK16
VK_FORMAT_R4G4_UNORM_PACK8
VK_FORMAT_R5G5B5A1_UNORM_PACK16
VK_FORMAT_R5G6B5_UNORM_PACK16
VK_FORMAT_R64G64B64A64_SFLOAT
VK_FORMAT_R64G64B64A64_SINT
VK_FORMAT_R64G64B64A64_UINT
VK_FORMAT_R64G64B64_SFLOAT
VK_FORMAT_R64G64B64_SINT
VK_FORMAT_R64G64B64_UINT
VK_FORMAT_R64G64_SFLOAT
VK_FORMAT_R64G64_SINT
VK_FORMAT_R64G64_UINT
VK_FORMAT_R64_SFLOAT
VK_FORMAT_R64_SINT
VK_FORMAT_R64_UINT
VK_FORMAT_R8G8B8A8_SINT
VK_FORMAT_R8G8B8A8_SNORM
VK_FORMAT_R8G8B8A8_SRGB
VK_FORMAT_R8G8B8A8_SSCALED
VK_FORMAT_R8G8B8A8_UINT
VK_FORMAT_R8G8B8A8_UNORM
VK_FORMAT_R8G8B8A8_USCALED
VK_FORMAT_R8G8B8_SINT
VK_FORMAT_R8G8B8_SNORM
VK_FORMAT_R8G8B8_SRGB
VK_FORMAT_R8G8B8_SSCALED
VK_FORMAT_R8G8B8_UINT
VK_FORMAT_R8G8B8_UNORM
VK_FORMAT_R8G8B8_USCALED
VK_FORMAT_R8G8_SINT
VK_FORMAT_R8G8_SNORM
VK_FORMAT_R8G8_SRGB
VK_FORMAT_R8G8_SSCALED
VK_FORMAT_R8G8_UINT
VK_FORMAT_R8G8_UNORM
VK_FORMAT_R8G8_USCALED
VK_FORMAT_R8_SINT
VK_FORMAT_R8_SNORM
VK_FORMAT_R8_SRGB
VK_FORMAT_R8_SSCALED
VK_FORMAT_R8_UINT
VK_FORMAT_R8_UNORM
VK_FORMAT_R8_USCALED
VK_FORMAT_S8_UINT
VK_FORMAT_UNDEFINED
VK_FORMAT_X8_D24_UNORM_PACK32
VK_GOOGLE_display_timing
VK_GOOGLH
VK_IMG_fH
VK_IMG_format_pvrtc
VK_INCOMPLETE
VK_INTELH
VK_INTEL_shader_integer_functions2
VK_KHR_16bit_storage
VK_KHR_1H
VK_KHR_8H
VK_KHR_8bit_storage
VK_KHR_bH
VK_KHR_bind_memory2
VK_KHR_cH
VK_KHR_create_renderpass2
VK_KHR_dL
VK_KHR_dedicated_allocation
VK_KHR_depth_stencil_resolve
VK_KHR_descriptor_update_template
VK_KHR_device_group
VK_KHR_device_group_creation
VK_KHR_driver_properties
VK_KHR_eH
VK_KHR_external_fence
VK_KHR_external_fence_capabilities
VK_KHR_external_memory
VK_KHR_external_memory_capabilities
VK_KHR_external_semaphore
VK_KHR_external_semaphore_capabilities
VK_KHR_gH
VK_KHR_get_memory_requirements2
VK_KHR_get_physical_device_properties2
VK_KHR_get_surface_capabilities2
VK_KHR_iH
VK_KHR_image_format_list
VK_KHR_mH
VK_KHR_maintenance1
VK_KHR_maintenance2
VK_KHR_maintenance3
VK_KHR_multiview
VK_KHR_pH
VK_KHR_portability_subset
VK_KHR_push_descriptor
VK_KHR_rH
VK_KHR_relaxed_block_layout
VK_KHR_sH
VK_KHR_sampler_mirror_clamp_to_edge
VK_KHR_sampler_ycbcr_conversion
VK_KHR_shader_draw_parameters
VK_KHR_shader_float16_int8
VK_KHR_shader_subgroup_extended_types
VK_KHR_storage_buffer_storage_class
VK_KHR_surface
VK_KHR_swapchain
VK_KHR_swapchain_mutable_format
VK_KHR_uH
VK_KHR_uniform_buffer_standard_layout
VK_KHR_vH
VK_KHR_variable_pointers
VK_MVK_iH
VK_MVK_ios_surface
VK_MVK_mH
VK_MVK_macos_surface
VK_MVK_moltenvk
VK_NOT_READY
VK_NV_glH
VK_NV_glsl_shader
VK_QUERY_RESULT_64_BIT                = 0x00000001
VK_QUERY_RESULT_PARTIAL_BIT           = 0x00000008
VK_QUERY_RESULT_WAIT_BIT              = 0x00000002
VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = 0x00000004
VK_SUBOPTIMAL_KHR
VK_SUCCESS
VK_TIMEOUT
VK_UNKNOWN_VKComponentSwizzle
VK_UNKNOWN_VK_Result
VOLATILE
VULKAN_H
Value is being defined a second time
Variable
VariablePointers
VariablePointersStorageBuffer
Varyings
Varyings varyings
VaryingsPos
VaryingsPos varyings
VaryingsPosTex
VaryingsPosTex varyings
VecTypeHint
Vector16
VectorExtractDynamic
VectorInsertDynamic
VectorShuffle
VectorTimesMatrix
VectorTimesScalar
Version
VersionStringsMVK
Vertex aH
Vertex attribute type mismatch between host and shader
Vertex shader function could not be compiled into pipeline. See previous logged error
Vertex stage pipeline for tessellation
VertexBuffers
VertexIDH3P
VertexId
VertexIndex
VertexOrderCcw
VertexOrderCw
VerticesH
ViewIndeH
ViewIndex
ViewIndex is handled specially outside fragment shaders
Viewport
ViewportH
ViewportIndex
ViewportIndex requires Metal 2.0
ViewportMaskNV
ViewportMaskPerViewNV
ViewportRelativeNV
Virtual
VisibilityBuffer
VkAttachmentLoadOp value %d is not supported
VkAttachmentStoreOp value %d is not supported
VkDeviceSize blockByteCount = isBC1Format(info.format) ? 8 : 16
VkExtent2D
VkExtent2D blockExtent
VkExtent3D extent
VkFormat
VkFormat format
VkFrontFace
VkMacOSSurfaceCreateInfoMVK
VkOffset3D offset
VkPolygonMode value %d is not supported for render pipelines
VkPolygonMode value VK_POLYGON_MODE_POINT is not supported for render pipelines
VkPresentTimesInfoGOOGLE swapchainCount must match VkPresentInfo swapchainCount
VkPrimitiveTopology value %d is not supported for render pipelines
VkPrimitiveTopology value %d is not supported for rendering
VkQueryResultFlagBits
VkResolveModeFlagBits value %d is not supported
VkShaderStage %x is not supported
VmeImageINTEL
Volatile
VolatileTexel
VolatileTexelKHR
VolatileType
VostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
Vulkan H
Vulkan extension %s is not supported
Vulkan is not supported on this device. MoltenVK requires Metal, which is not available on this device
Vulkan layer %s is not supported
VulkanKHR
VulkanMemoryModel
VulkanMemoryModelDeviceScope
VulkanMemoryModelDeviceScopeKHR
VulkanMemoryModelKHR
W3C WebGPU Group
W3C WebGPU Group WHLSL Shader Translator
W@HcN$H
WARBp `<ARATAp
WARBp p
WARNING
WAp0VASAp
WHLSL Shader Translator
WORKGROUPCOHERENT
WRITEONLY
WXYZ_012H
W_METAL
WaitForFences
WaitIdle
WaitIdleL
WaitKernel
WaitWorkGroup
Warning, (version, profile) forced to be
WarpIDNV
WarpsPerSMNV
WindingFrom
Wine VKD3D Shader Compiler
WithTemplate
WithTemplateKHR
WorkDim
WorkGroupID
WorkGroupSize
WorkgrouH
Workgroup
WorkgroupId
WorkgroupMemory
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
WorkgroupSize
WorkgroupSizeMVK
WorldRayDirectionKHR
WorldRayDirectionNV
WorldRayOriginKHR
WorldRayOriginNV
WorldToObjectKHR
WorldToObjectNV
Wrapper function that swizzles depth texture gathers
Wrapper function that swizzles texture gathers
Wrapper function that swizzles texture samples and fetches
Writable images are not allowed in argument buffers on iOS
WritableH
Write MSL to pipeline cache
WriteInvocationAMD
WriteMask
WriteOnly
WritePackedPrimitiveIndices4x8NV
WritePipe
WritePipeBlockingINTEL
WunusH
X chromaH
X-LEGEND
X-LEGEND Mesa-IR/SPIR-V Translator
XCositedEvenYCositedEven
XCositedEvenYMidpoint
XL+s0H
XM+e0H
XMidpointYCositedEven
XMidpointYMidpoint
XOR_ASSIGN
XTTXX<0
XXXXXXX
X[A\A]A^A
X_10_EXPL
XfbBuffeH
XfbBuffer
XfbStridH
XfbStride
Y chromaH
Y'CbCr conversion info
Y'CbCr conversion info, used to pass combined image-samplers
Y'CbCr mH
Y'CbCr rH
YBVCRE
YcbcrConH
YcbcrConversion
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_1
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_2
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_3
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_4
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_5
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_6
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_7
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_8
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E3$_9
Z38spvOperandCanBeForwardDeclaredFunction6SpvOp_E4$_10
Z48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_11
Z48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_12
Z48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_13
Z48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_14
Z48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_15
Z48spvDbgInfoExtOperandCanBeForwardDeclaredFunction19spv_ext_inst_type_tjE4$_16
ZARAZARAp
ZARA`DA`?AYARAYARARAZARAp
ZARA`DB`<ASAYARAYARARARAZAp
ZERO_ARGH
ZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS1_10TPpContextERNS1_13TInputScannerEbRNS1_12TSymbolTableERNS1_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliPKcE
ZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS1_10TPpContextERNS1_13TInputScannerEbRNS1_12TSymbolTableERNS1_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliPKcSF_E
ZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS1_10TPpContextERNS1_13TInputScannerEbRNS1_12TSymbolTableERNS1_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliRKNS1_7TVectorINSt3__112basic_stringIcNSF_11char_traitsIcEENS1_14pool_allocatorIcEEEEEEE
ZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS1_10TPpContextERNS1_13TInputScannerEbRNS1_12TSymbolTableERNS1_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliiPKcE
ZN12_GLOBAL__N_115DoPreprocessingclERN7glslang17TParseContextBaseERNS1_10TPpContextERNS1_13TInputScannerEbRNS1_12TSymbolTableERNS1_13TIntermediateE20EShOptimizationLevel11EShMessagesEUliibiPKcE
ZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_18
ZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_19
ZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_20
ZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_21
ZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_22
ZN15MVK_spirv_cross11CompilerMSL19add_interface_blockEN3spv12StorageClassEbE4$_23
ZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvE4$_32
ZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE3$_3
ZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE3$_4
ZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE3$_5
ZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE3$_6
ZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE3$_7
ZN15MVK_spirv_cross11CompilerMSL37add_plain_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE3$_8
ZN15MVK_spirv_cross11CompilerMSL39add_tess_level_input_to_interface_blockERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableEE4$_15
ZN15MVK_spirv_cross11CompilerMSL39add_tess_level_input_to_interface_blockERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableEE4$_16
ZN15MVK_spirv_cross11CompilerMSL41add_composite_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE3$_9
ZN15MVK_spirv_cross11CompilerMSL41add_composite_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableERNS0_18InterfaceBlockMetaEE4$_10
ZN15MVK_spirv_cross11CompilerMSL44add_plain_member_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableEjRNS0_18InterfaceBlockMetaEE4$_13
ZN15MVK_spirv_cross11CompilerMSL44add_plain_member_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableEjRNS0_18InterfaceBlockMetaEE4$_14
ZN15MVK_spirv_cross11CompilerMSL48add_composite_member_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableEjRNS0_18InterfaceBlockMetaEE4$_11
ZN15MVK_spirv_cross11CompilerMSL48add_composite_member_variable_to_interface_blockEN3spv12StorageClassERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS_8SPIRTypeERNS_12SPIRVariableEjRNS0_18InterfaceBlockMetaEE4$_12
ZN15MVK_spirv_cross12CompilerGLSL20emit_interface_blockERKNS_12SPIRVariableEE3$_3
ZN15MVK_spirv_cross12CompilerGLSL50emit_inout_fragment_outputs_copy_to_subpass_inputsEvE4$_36
ZN17MVKPhysicalDevice14initPropertiesEvE3$_0
ZN38MVKComputeResourcesCommandEncoderState10encodeImplEjE4$_21
ZN38MVKComputeResourcesCommandEncoderState10encodeImplEjE4$_22
ZN38MVKComputeResourcesCommandEncoderState10encodeImplEjE4$_23
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_1
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_2
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_3
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_4
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_5
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_6
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_7
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_8
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE3$_9
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_10
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_11
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_12
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_13
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_14
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_15
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_16
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_17
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_18
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_19
ZN39MVKGraphicsResourcesCommandEncoderState10encodeImplEjE4$_20
ZN3mvk11canReadFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
ZN3mvk12absolutePathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
ZN3mvk12canWriteFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
ZN3mvk13pathExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
ZN3mvk17pathWithExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_bS6
ZN3mvk19SPIRVToMSLConverter7convertERNS_33SPIRVToMSLConversionConfigurationEbbb
ZN3mvk19SPIRVToMSLConverter8setSPIRVEPKjm
ZN3mvk20GLSLToSPIRVConverter7convertE28MVKGLSLConversionShaderStagebb
ZN3mvk20GLSLToSPIRVConverter7setGLSLEPKcm
ZN3mvk20GLSLToSPIRVConverter7setGLSLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
ZN3mvk20GLSLToSPIRVConverter8setGLSLsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE
ZN3mvk27SPIRVToMSLConversionOptions15printMSLVersionEjb
ZN3mvk27SPIRVToMSLConversionOptionsC1Ev
ZN3mvk27SPIRVToMSLConversionOptionsC2Ev
ZN3mvk33SPIRVToMSLConversionConfiguration29markAllInputsAndResourcesUsedEv
ZN3mvk33SPIRVToMSLConversionConfiguration9alignWithERKS0
ZN3mvk8fileNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb
ZN3mvk8readFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERNS0_6vectorIcS5_EERS6
ZN3mvk9writeFileERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_6vectorIcS5_EERS6
ZN3spv7Builder14postProcessCFGEvE3$_2
ZN7glslang13TIntermediate10finalCheckER9TInfoSinkbE19TFinalLinkTraverser
ZN7glslang13TParseContext15findFunction400ERKNS_10TSourceLocERKNS_9TFunctionERbE3$_0
ZN7glslang13TParseContext15findFunction400ERKNS_10TSourceLocERKNS_9TFunctionERbE3$_1
ZN7glslang13TParseContext25findFunctionExplicitTypesERKNS_10TSourceLocERKNS_9TFunctionERbE3$_2
ZN7glslang13TParseContext25findFunctionExplicitTypesERKNS_10TSourceLocERKNS_9TFunctionERbE3$_3
ZN8spvtools15AssemblyContext26binaryEncodeNumericLiteralEPKc12spv_result_tRKNS_6IdTypeEP17spv_instruction_tE3$_0
ZN8spvtools18FriendlyNameMapper13GetNameMapperEvEUljE
ZN8spvtools30UseDiagnosticAsMessageConsumerEP13spv_context_tPP16spv_diagnostic_tE3$_0
ZNK3mvk14MSLShaderInput7matchesERKS0
ZNK3mvk18MSLResourceBinding7matchesERKS0
ZNK3mvk27SPIRVToMSLConversionOptions7matchesERKS0
ZNK3mvk33SPIRVToMSLConversionConfiguration19countShaderInputsAtEj
ZNK3mvk33SPIRVToMSLConversionConfiguration25isShaderInputLocationUsedEj
ZNK3mvk33SPIRVToMSLConversionConfiguration29stageSupportsVertexAttributesEv
ZNK3mvk33SPIRVToMSLConversionConfiguration7matchesERKS0
ZNK3spv8Function4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEEEUlPKNS_5BlockENS_11ReachReasonEPS7_E
ZNKSt13runtime_error4whatEv
ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4copyEPcmm
ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm
ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc
ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv
ZNKSt3__16locale9has_facetERNS0_2idE
ZNKSt3__16locale9use_facetERNS0_2idE
ZNKSt3__18ios_base6getlocEv
ZNKSt9exception4whatEv
ZNSt11logic_errorC2EPKc
ZNSt12length_errorD1Ev
ZNSt12out_of_rangeD1Ev
ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
ZNSt13runtime_errorD2Ev
ZNSt3__112__next_primeEm
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEmm
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEmc
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE3getEv
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4peekEv
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5tellgEv
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5ungetEv
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERd
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERf
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERj
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERx
ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERy
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEs
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy
ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
ZNSt3__118condition_variable10notify_allEv
ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE
ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
ZNSt3__118condition_variableD1Ev
ZNSt3__119__shared_weak_count14__release_weakEv
ZNSt3__119__shared_weak_countD2Ev
ZNSt3__14cerrE
ZNSt3__14coutE
ZNSt3__15ctypeIcE2idE
ZNSt3__15mutex4lockEv
ZNSt3__15mutex6unlockEv
ZNSt3__15mutexD1Ev
ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T
ZNSt3__16chrono12steady_clock3nowEv
ZNSt3__16chrono12system_clock3nowEv
ZNSt3__16locale7classicEv
ZNSt3__16localeC1ERKS0
ZNSt3__16localeD1Ev
ZNSt3__16localeaSERKS0
ZNSt3__17codecvtIcc11__mbstate_tE2idE
ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
ZNSt3__18ios_base4initEPv
ZNSt3__18ios_base5clearEj
ZNSt3__18ios_base5imbueERKNS_6localeE
ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
ZNSt3__19to_stringEi
ZNSt3__19to_stringEj
ZNSt3__19to_stringEm
ZNSt3__19to_stringEx
ZNSt3__19to_stringEy
ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9
ZNSt8bad_castC1Ev
ZNSt8bad_castD1Ev
ZNSt9exceptionD2Ev
ZNTH`fN7glslang13TParseContextE
ZNTH`fN7glslang16TOutputTraverserE
ZNTH`fN7glslang9TVariableE
ZSt7nothrow
ZSt9terminatev
ZTIFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
ZTINSt3__113basic_filebufIcNS_11char_traitsIcEEEE
ZTINSt3__113basic_istreamIcNS_11char_traitsIcEEEE
ZTINSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
ZTINSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
ZTINSt3__114basic_iostreamIcNS_11char_traitsIcEEEE
ZTINSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
ZTINSt3__115basic_streambufIcNS_11char_traitsIcEEEE
ZTINSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTINSt3__117bad_function_callE
ZTINSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTINSt3__119__shared_weak_countE
ZTINSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTINSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTIPFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
ZTISt12length_error
ZTISt12out_of_range
ZTISt13runtime_error
ZTISt8bad_cast
ZTISt9exception
ZTSFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
ZTSNSt3__113basic_filebufIcNS_11char_traitsIcEEEE
ZTSNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
ZTSNSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
ZTSNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTSNSt3__117bad_function_callE
ZTSNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTSNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTSNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
ZTSPFNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE
ZTVN10__cxxabiv117__class_type_infoE
ZTVN10__cxxabiv119__pointer_type_infoE
ZTVN10__cxxabiv120__function_type_infoE
ZTVN10__cxxabiv120__si_class_type_infoE
ZTVN10__cxxabiv121__vmi_class_type_infoE
ZTVNSt3__113basic_istreamIcNS_11char_traitsIcEEEE
ZTVNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
ZTVSt12length_error
ZTVSt12out_of_range
ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_33clEjRNS_12SPIRVariableEEUlvE
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_33clEjRNS_12SPIRVariableEEUlvE0
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE0
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE1
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE10
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE11
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE12
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE13
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE14
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE15
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE16
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE17
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE18
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE19
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE2
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE20
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE21
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE22
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE23
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE24
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE25
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE26
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE27
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE3
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE4
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE5
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE6
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE7
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE8
ZZN15MVK_spirv_cross11CompilerMSL28fix_up_shader_inputs_outputsEvENK4$_34clEjRNS_12SPIRVariableEEUlvE9
ZeroExtend
ZnwmRKSt9nothrow_t
a front-H
a functH
a functiH
a non-eH
a scalaH
a spec H
aFilter:H
aPpXZARA
abcdefghH
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
able on H
absdiff
absoluteDifference
absolutePathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
acOS reqH
acOSSurfaceMVK
acceleraH
accelerationStructureEXT
accelerationStructureNV
accelerationStructureNV can only be used in uniform variables or function parameters
acceleration_structures
accept
access
access qualifier
access::read
access::read_write
access::write
accessChain.component == NoResult
accessChain.isRValue == false
accessChain.swizzle.size() == 0
accessChainGetLValue
accessChainPushSwizzle
accessChainStore
access_chain_internal
accesschain_mapping_.count(BN->getLeft
accesschain_mapping_.count(UN->getOperand
accesschain_mapping_.count(node
acheDataH
achmentsH
acking cH
acos_surH
active_builtins != nullptr
actorsHaH
ad with H
adOffsetH
ad_storeH
add second child into first child
addCarry
addCompletedHandler
addConstantUnion
addInvocations
addInvocationsAMD
addInvocationsExclusiveScan
addInvocationsExclusiveScanAMD
addInvocationsExclusiveScanNonUniform
addInvocationsExclusiveScanNonUniformAMD
addInvocationsInclusiveScan
addInvocationsInclusiveScanAMD
addInvocationsInclusiveScanNonUniform
addInvocationsInclusiveScanNonUniformAMD
addInvocationsNonUniform
addInvocationsNonUniformAMD
addObject
addObserver:forKeyPath:options:context
addParameter
addPresentedHandler
addSamplingFunctions
addSaturate
addXfbBufferOffset
add_tess_level_input_to_interface_block
additive_expression
address::clamp_to_border
address::clamp_to_edge
address::clamp_to_zero
address::mirrored_repeat
address::repeat
addressiH
addressing model
ader_atoH
ader_derH
ader_nopH
ader_sm_H
ader_subH
ader_texH
aders noH
aders onH
ading_raH
adj[0][0] =  m[1][1
adj[0][0] =  spvDet2x2(m[1][1], m[1][2], m[2][1], m[2][2
adj[0][1] = -spvDet2x2(m[0][1], m[0][2], m[2][1], m[2][2
adj[0][2] =  spvDet2x2(m[0][1], m[0][2], m[1][1], m[1][2
adj[1][0] = -spvDet2x2(m[1][0], m[1][2], m[2][0], m[2][2
adj[1][1] =  m[0][0
adj[1][1] =  spvDet2x2(m[0][0], m[0][2], m[2][0], m[2][2
adj[1][2] = -spvDet2x2(m[0][0], m[0][2], m[1][0], m[1][2
adj[2][0] =  spvDet2x2(m[1][0], m[1][1], m[2][0], m[2][1
adj[2][1] = -spvDet2x2(m[0][0], m[0][1], m[2][0], m[2][1
adj[2][2] =  spvDet2x2(m[0][0], m[0][1], m[1][0], m[1][1
adjoint and dividing by the determinant. The contents of the matrix are changed
adoptedLevels == copyOf.adoptedLevels
advancedH
agJTskK
age and H
age is oH
age onlyH
age requH
ageMemorH
ageModeFromVkMemoryPropertyFlags
age_atomH
age_loadH
age_sampH
age_sizeH
aggregatH
agment sH
agment_mH
agment_sH
agment_tH
agnosticH
aintenanL
aitEvents
al_countH3N
al_essl3H
al_even_H
al_odd_sH
align_struct
aligned_msl_offset == spirv_mbr_offset
alignmeH
ality isH
ality reH
all default precisions are highp; use precision statements to quiet warning, e.g
all redeclarations must use the same depth layout on
all stride settings must match for xfb buffer
allInvocations
allInvocationsARB
allInvocationsEqual
allInvocationsEqualARB
allValues
allocatH
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
allowed H
allowedH
alt_alias_itr != end(joined_types
alt_master_itr != end(joined_types
altime_cH
aluationH
amVertexH
ambiguous best function under implicit type conversion
ambiguous function signature match: multiple signatures match under implicit type conversion
amebuffeH
ameters
amp_to_eH
ampleCountFlagBitsFromSampleCount
ampleCountFromVkSampleCountFlagBits
ample_shH
ample_vaH
ampledImH
ampler_mH
ampler_yH
amplerleH
amplers.H
an GLSL.H
an semanH
analyze_argument_buffers
analyze_variable_scope
ance notH
ance reqH
anceID +H
anceID -H
anceIndeH
and -= on a buffer reference
and Mac H
and arraH
and second child into first child
and targH
and up.H
and_expression
andard_lH
anguage_H
annot exH
anonymous member
ansparenH
antizeToH
any-hit
anyInvocation
anyInvocationARB
apMemory
apMemoryH
ap_arrayH
apabilitH
appedMemH
appendFormat
appendLineMVK
appendString
append_global_func_args
aque objH
aque sizH
aque_blaH
aque_whiH
arAttachH
arColorIH
arDepthSH
arameterH
arc cosine
arc hyp. cosine
arc hyp. sine
arc hyp. tangent
arc sine
arc tangent
arc4random
ardware.H
are not H
are onlyH
areRasterOrderGroupsSupported
arg.alias_global_variable
arget_arH
argument cannot drop memory qualifier when passed to formal parameter
argument must be a power of 2
argument must be at least 1
argument must be compile-time constant
argument must be qualified as __explicitInterpAMD in
argumentH
ariable_H
ariablesH
arithmeH
arkerSetL
array argument must be sized
array assignment
array cH
array caH
array comparison
array constructor argument not correct type to construct array element
array constructor must have at least one argument
array constructor needs one argument per array element
array in function return type
array index out of range '%d
array initializer
array initializer must be sized
array length
array must be declared with a size before using this method
array must be explicitly sized
array must be redeclared with a size before being indexed with a variable
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must first be sized by a redeclaration or layout qualifier
array ofH
array size
array size required
array variable name expected
array-of-array of block
arrayLength
arraySizes
arraySizes != nullptr
arraySizes != nullptr && right.arraySizes != nullptr
arraySizes.getNumDims() == 2
arraySizesCheck
arrayStride %d
array_copy
array_iI
array_siH
array_size_is_literal
array_specifier
array_stH
array_stride
arrayed constructor
arrayed type
arrays oH
arrays of arrays
arrays wH
arrays-oH
arrays.H
ary buffH
as not tH
as_type
as_type<uint>(half2
ase whicH
aseInstaH
asetype.H
askIn noH
assert_rtn
assignment_expression
assignment_operator
assuming binding count of one for compile-time checking of binding numbers for unsized array
astPresentationTimingGOOGLE
at resulH
atan2pi
atch thaH
atchBaseH
ateAtCenH
ateAtOffH
ateAtSamH
ateBuffeH
ateDevicL
ateEventH
ateFenceH
ateImageH
atePhysiH
atherOffH
ather_biH
ation shH
ationMVKL
ationTimH
ation_adH
atomic
atomic counter types
atomic counters can only be highp
atomic counters offset should align based on 4
atomic counters sharing the same offset
atomic oH
atomic>H
atomicAdH
atomicAdd
atomicAnd
atomicCoH
atomicCompSwap
atomicCounter
atomicCounterAdd
atomicCounterAnd
atomicCounterCompSwap
atomicCounterDecrement
atomicCounterExchange
atomicCounterIncrement
atomicCounterMax
atomicCounterMin
atomicCounterOr
atomicCounterSubtract
atomicCounterXor
atomicExH
atomicExchange
atomicLoad
atomicMaH
atomicMax
atomicMiH
atomicMin
atomicOr
atomicOrH
atomicStore
atomicXoH
atomicXor
atomic_compare_exchange_weak_explicit
atomic_exchange_explicit
atomic_fetch_add_explicit
atomic_fetch_and_explicit
atomic_fetch_max_explicit
atomic_fetch_min_explicit
atomic_fetch_or_explicit
atomic_fetch_sub_explicit
atomic_fetch_xor_explicit
atomic_load_explicit
atomic_store_explicit
atomic_uH
atomic_uI
atomic_uint
atomic_uint binding is too large
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
atomic_uints can only be used in uniform variables or function parameters
atrices H
atrices.H
attachment index is too large
attriH
attrib_lH
attributH
attribute
attribute does not apply to a loop
attribute does not apply to a selection
attribute does not apply to a switch
attribute requires a SPIR-V 1.4 target-env
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord
attribute with arguments not recognized, skipping
attribute(0
attribute(1
attribute__((packed)) VkExtent3D
attribute__((packed)) VkOffset3D
attribute_list
attributes
auto-map-bindings
auto-map-locations
ave ArraH
ave MatrH
ave OffsH
average
averageRounded
aw_paramH
ay of coH
ay textuH
ayShadowH
ay_flagsH
ay_queryH
ay_traciH
ayer_arrH
b1edda29H
bad argument
bad character in float exponent
bad digit in hexadecimal literal
bad expression
bad profile name; use es, core, or compatibility
bad token
bad tokens following profile -- expected newline
ballot H
ballotARB
barrier
barycentH
barycentric_coord, center_no_perspective
barycentric_coord, center_perspective
baseType == EbtFloat || baseType == EbtDouble || baseType == EbtFloat16
base_insI
base_instance
base_verI
base_vertex
bbbbbbbbbbbb
bbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
be a bugH
be a liH
be emptyH
be squarH
because
before GH
beginInvocationInterlockARB
beginInvocationInterlockARB() cannot be placed after a return from main
beginInvocationInterlockARB() cannot be placed within flow control
beginInvocationInterlockARB() must be called before endInvocationInterlockARB
beginInvocationInterlockARB() must be in a fragment shader
beginInvocationInterlockARB() must be in main
beginInvocationInterlockARB() must only be called once
beginInvocationInterlockNV
beginScope
behavior for extension not specified
behavior not supported
bgroupID
bgroup_aH
bgroup_bH
bgroup_cH
bgroup_eH
bgroup_qH
bgroup_sH
bgroup_sL
bgroup_vH
bias_lodH
binary oH
binding
binding is too large
binding_stride != 0
bit float literals
bit integer literals
bit shift left
bit shift right
bit widtH
bit-shift left assign
bit-shift right assign
bitCount
bitCountH
bitFieldReverse
bit_storH
bitcast_glsl_op
bitfieldExtract
bitfieldH
bitfieldInsert
bitfieldReverse
bitselect
bitwise and
bitwise exclusive or
bitwise inclusive or
bitwise not
bitwise-and assign
bitwise-or assign
bitwise-xor assign
bjectNamH
bjectTagH
ble for H
blend equation
blend_support
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_screen
blend_support_softlight
bles forH
blitCommandEncoder
block coH
block dH
block declaration
block instance name redefinition
block name cannot be redefined
block name cannot redefine a non-block name
block redeclaration has extra members
block.false_block == block.continue_block
block.merge == SPIRBlock::MergeSelection
block.true_block == block.continue_block
blockExtent.height = min(info.extent.height - y, 4u
blockExtent.width = min(info.extent.width - x, 4u
block_siH
block_size
block_structure
blocks.H
bool   subgroupAllEqual(%s
bool   subgroupAny(bool
bool   subgroupBallotBitExtract(uvec4, uint
bool   subgroupInverseBallot(uvec4
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer
bool helperInvocationEXT
bool reportIntersectionNV(float, uint);bool reportIntersectionEXT(float, uint
bool sparseTexelsResidentARB(int code
boolean expression expected
border cH
borderColor
borderColorMVK
border_cH
border_color::opaque_black
border_color::opaque_white
border_color::transparent_black
boundinH
bounds!H
bounds.H
bove on H
branch_to_continue
break statement only allowed in switch and loops
bt_2020H
budget
buffer
buffer H
buffer block
buffer is too large
buffer pH
buffer reference indexing
buffer reference math
buffer size
bufferBytesPerRow
bufferOffset
buffer_reference
buffer_reference_align
buffer_referenceonal_odd_spacingfractional_odd_snal_even_spacingfractional_even_e_group_linearnvderivative_group_quadsnv
buffers H
buffers can be declared only as blocks
buffersH
buildStorageKey
build_composite_combiner
build_immediate_dominators
builder.isArrayType(rType
builder.isCooperativeMatrixType(typeId
builder.isMatrix(left
builder.isMatrix(right
builder.isPointerType(objectTypeId
builder.isPointerType(typeId1
builder.isScalar(right
builder.isStructType(resultStructType
builder.isVector(left
builder.isVector(right
built in unary operator function.  Type: %s
built-in
built-in block redeclaration
built-in function
builtInOpCheck
builtinH
builtin_frag_coord_id != 0
builtin_layer_id != 0
builtin_view_idx_id != 0
builtinsH
bytes from input stream! Read
bytes to output stream! Wrote
c types H
c16@0:8
c8567b18H
cCounterH
c_extendH
c_types_H
c_types_L
cal storH
calDevicH
cal_deviH
calar_blH
calculate_clamped_lod
calculate_unclamped_lod
call argument
callNode.getAsUnaryNode
callable
callable data number
callableDataEXT
callableDataInEXT
callableDataInNV
callableDataInNV block
callableDataNV
callableDataNV block
calling
calling user function from global scope
can for H
can onlH
can only apply depth layout to gl_FragDepth
can only apply highp to atomic_uint
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply to 'in
can only apply to 'out
can only apply to a standalone qualifier
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage
can only apply to uniform, buffer, in, or out storage qualifiers
can only be applied as standalone
can only be applied to 'const'-qualified scalar
can only be applied to a scalar
can only be applied to a standalone 'out
can only be followed by a single macro name
can only be used on an output
can only be used on variable declaration
can only be used with a block
can only be used with a buffer
can only be used with a subpass
can only be used with a uniform
can only be used with an explicit location
can only be used with buffer
can only be used with std140, std430, or scalar layout packing
can only change layout qualification of
can only have one auxiliary qualifier (centroid, patch, and sample
can only have one interpolation qualifier (flat, smooth, noperspective, __explicitInterpAMD
can only redeclare a built-in block once, and before any use
can only specify on a buffer block
can only specify on a uniform block
can only use in an in/out block
can only use on input blocks in mesh shader
can only use on input in tessellation-evaluation shader
can only use on output in tessellation-control shader
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
can't convert
can't evaluate expression
can't find function
can't handle multiple entry points per stage
can't modify a const
can't modify a readonly buffer
can't modify a sampler
can't modify a shaderrecordnv qualified buffer
can't modify a uniform
can't modify accelerationStructureNV
can't modify an atomic_uint
can't modify gl_FragCoord
can't modify gl_FragDepth if using early_fragment_tests
can't modify gl_FrontFace
can't modify gl_InstanceID
can't modify gl_PointCoord
can't modify gl_VertexID
can't modify rayQueryEXT
can't modify shader input
can't modify void
can't read from explicitly-interpolated object
can't read from writeonly object
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
can't swizzle types containing float16
can't use auxiliary qualifier on a fragment output
can't use function syntax on variable
can't use interpolation qualifier on a fragment output
can't use with arrays containing float16
can't use with arrays containing int16
can't use with arrays containing int8
can't use with arrays containing uint16
can't use with arrays containing uint8
can't use with reference types
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with structs containing int16
can't use with structs containing int8
can't use with structs containing uint16
can't use with structs containing uint8
can't use with types containing arrays sized with a specialization constant
canSignedIntTypeRepresentAllUnsignedValues
cannot H
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
cannot add perprimitiveNV qualifier to redeclared block member
cannot add perviewNV qualifier to redeclared block member
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot appear outside switch statement
cannot apply layout qualifier to
cannot apply layout qualifiers to a shared variable
cannot apply layout qualifiers to hitAttributeNV variable
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
cannot apply to
cannot apply to 'out
cannot apply to a block
cannot apply to a cooperative matrix type
cannot apply to a matrix, structure, or block
cannot apply to an array
cannot apply to input
cannot apply to taskNV in/out blocks
cannot apply to uniform or buffer block
cannot be a matrix
cannot be a structure
cannot be a structure or array
cannot be an argument type except for '(void
cannot be applied to this type
cannot be bool
cannot be both specified
cannot be greater than 3 for pervertexNV
cannot be negative
cannot be nested inside control flow
cannot be used (maybe an instance name is needed
cannot be used with push_constant
cannot be used with shaderRecordNV
cannot change array size of redeclared block
cannot change array size of redeclared block member
cannot change arrayness of redeclared block
cannot change arrayness of redeclared block member
cannot change input storage qualification of
cannot change interpolation qualification of
cannot change output storage qualification of
cannot change previously set fragment shader interlock ordering
cannot change previously set input primitive
cannot change previously set layout value
cannot change previously set output primitive
cannot change previously set size
cannot change previously set vertex order
cannot change previously set vertex spacing
cannot change qualification after use
cannot change qualification of
cannot change storage, memory, or auxiliary qualification of
cannot change the type of
cannot construct this type
cannot construct with these arguments
cannot contain a double, int64, or uint64
cannot convert a sampler
cannot convert a void
cannot convert an atomic_uint
cannot convert from '%s' to '%s
cannot convert parameter %d from '%s' to '%s
cannot convert return value to function return type
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot declare a default, include a type or full declaration
cannot declare a default, use a full declaration
cannot have statements before first case/default label
cannot index buffer reference
cannot index reference to buffer containing an unsized array
cannot initialize this type of qualifier
cannot lie in previous members
cannot modify hitAttributeNV in this stage
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
cannot re-qualify a function name
cannot redeclare a built-in block with a user name
cannot redeclare a non block as a block
cannot redeclare a user-block member array
cannot redeclare after use
cannot redeclare block
cannot redeclare block member with a different type
cannot redeclare with different qualification
cannot specify matrix layout on a variable declaration
cannot specify on a variable declaration
cannot specify packing on a variable declaration
cannot use 'inout' at global scope
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type
cannot use centroid qualifier on an interface block
cannot use in a block array where new locations are needed for each block element
cannot use in preprocessor expression when expanded from macros
cannot use interpolation qualifiers on an interface block
cannot use interpolation qualifiers with patch
cannot use invariant qualifier on a function parameter
cannot use invariant qualifier on an interface block
cannot use invariant qualifier on structure members
cannot use layout qualifiers on a function parameter
cannot use layout qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type
cannot use sample qualifier on an interface block
cannot use storage or interpolation qualifiers on structure members
capability
case component::w
case component::x
case component::y
case component::z
case spvFormatResolution::_420
case spvFormatResolution::_422
case spvFormatResolution::_444: break
case spvSwizzle::alpha
case spvSwizzle::blue
case spvSwizzle::green
case spvSwizzle::none
case spvSwizzle::one
case spvSwizzle::red
case spvSwizzle::zero
case spvXChromaLocation::cosited_even
case spvXChromaLocation::midpoint
case spvYCbCrModelConversion::rgb_identity
case spvYCbCrModelConversion::ycbcr_bt_2020
case spvYCbCrModelConversion::ycbcr_bt_601
case spvYCbCrModelConversion::ycbcr_bt_709
case spvYCbCrModelConversion::ycbcr_identity
case spvYCbCrRange::itu_full
case spvYCbCrRange::itu_narrow
case spvYChromaLocation::cosited_even
case spvYChromaLocation::midpoint
case_label
cast notH
cationID
cationIDH
cbcrConvH
cbcr_conH
ccOut.color%u = %@4(ccIn.colors[%u
ceCapabiL
ceFormatL
ceGroupsH
cePresenH
ceStatusH
ceSupporH
ce_capabH
ce_propeH
ce_uvec2H
center_no_perspective
centroid
centroid/sample/patch
centroidH
centroid_no_perspective
centroid_perspective
cf. Khronos Data Format Specification, section 15.1.1
cf. Khronos Data Format Specification, section 15.1.2
cf. Khronos Data Format Specification, section 15.1.3
cfg_itr != end(function_cfgs
cfg_itr->second
cfstring
chOffsetH
chSizeNV
chainKHRH
changeFront
char _m
char _m0_final_padding
character literals not supported
checkIoArrayConsistency
checkNoShaderLayouts
chkstk_darwin
chroma lH
cially oH
cissorRectFromVkRect2D
ck to inH
ck_es31aH
cked strH
clamp() H
clang diH
class usH
class-code
client opengl100
client vulkan100
clip_disI
clip_distance
clock2x32ARB
clockARB
clockRealtime2x32EXT
clockRealtimeEXT
closest-hit
clusiveSH
cluster size
cmdClearColorImage2DFloat
cmdClearColorImage2DInt
cmdClearColorImage2DUInt
cmdCopyBufferBytes
cmdCopyBufferToImage3DDecompressDXTn
cmdCopyBufferToImage3DDecompressTempBufferDXTn
cmdCopyQueryPoolResultsToBuffer
cmdDrawIndexedCopyIndex16Buffer
cmdDrawIndexedCopyIndex32Buffer
cmdDrawIndexedIndirectMultiviewConvertBuffers
cmdDrawIndexedIndirectTessConvertBuffers
cmdDrawIndirectMultiviewConvertBuffers
cmdDrawIndirectTessConvertBuffers
cmdFillBuffer
cn_shadeH
coherent
coherent volatile
coherentH
collapseAccessChain
colorAttachments
colorspH
colorspace
colorspaceNameMVK
cols <= maxMatrixSize && rows <= maxMatrixSize
column_mH
column_mH3
column_major
combined token is invalid
combined tokens are too long
commandBuffer
commandBufferWithUnretainedReferences
comment
committed
common
compare
compare H
compareFunction
compareFunctionMVK
compare_H
compare_func::always
compare_func::equal
compare_func::greater
compare_func::greater_equal
compare_func::less
compare_func::less_equal
compare_func::never
compare_func::not_equal
compatibH3E
compatibility
compilation errors.  No code generated
compilation terminated
componenH
componenH3
component
component argument
component is too large
component vector of
component-wise multiply
component::w
component::x
component::y
component::z
componentWise
component_offset % (target_type.width / 8) == 0
components (1/4 stride) needed are
components must be in the range [0, 3
components must be in the range [0, 31
compound_statement
compound_statement_no_new_scope
compute
compute H
compute shader derivatives
compute shaders
computeBufferReferenceTypeSize
computeCommandEncoder
computeSamplerTypeIndex
computeTypeLocationSize
computeTypeXfbSize
condition
condition must be a scalar integer expression
conditional_expression
conditionopt
const (read only
const array
const bool
const device
const device MTLDrawIndexedPrimitivesIndirectArguments& params [[buffer(2
const device auto& src = *reinterpret_cast<const device MTLDrawIndexedPrimitivesIndirectArguments*>(srcBuff + idx * srcStride
const device auto& src = *reinterpret_cast<const device MTLDrawPrimitivesIndirectArguments*>(srcBuff + idx * srcStride
const device uint
const device ushort
const int
const int  gl_MaxClipPlanes = %d
const int  gl_MaxCombinedTextureImageUnits = %d
const int  gl_MaxDrawBuffers = %d
const int  gl_MaxFragmentUniformComponents = %d
const int  gl_MaxFragmentUniformVectors = %d
const int  gl_MaxLights = %d
const int  gl_MaxTextureCoords = %d
const int  gl_MaxTextureImageUnits = %d
const int  gl_MaxTextureUnits = %d
const int  gl_MaxVaryingFloats = %d
const int  gl_MaxVertexAttribs = %d
const int  gl_MaxVertexTextureImageUnits = %d
const int  gl_MaxVertexUniformComponents = %d
const int  gl_MaxVertexUniformVectors = %d
const int gl_MaxAtomicCounterBindings = %d
const int gl_MaxAtomicCounterBufferSize = %d
const int gl_MaxClipDistances = %d
const int gl_MaxCombinedAtomicCounterBuffers = %d
const int gl_MaxCombinedAtomicCounters = %d
const int gl_MaxCombinedClipAndCullDistances = %d
const int gl_MaxCombinedImageUniforms = %d
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d
const int gl_MaxCombinedShaderOutputResources = %d
const int gl_MaxComputeAtomicCounterBuffers = %d
const int gl_MaxComputeAtomicCounters = %d
const int gl_MaxComputeImageUniforms = %d
const int gl_MaxComputeTextureImageUnits = %d
const int gl_MaxComputeUniformComponents = %d
const int gl_MaxCullDistances = %d
const int gl_MaxFragmentAtomicCounterBuffers = %d
const int gl_MaxFragmentAtomicCounters = %d
const int gl_MaxFragmentImageUniforms = %d
const int gl_MaxFragmentInputComponents = %d
const int gl_MaxGeometryAtomicCounterBuffers = %d
const int gl_MaxGeometryAtomicCounters = %d
const int gl_MaxGeometryImageUniforms = %d
const int gl_MaxGeometryInputComponents = %d
const int gl_MaxGeometryOutputComponents = %d
const int gl_MaxGeometryOutputVertices = %d
const int gl_MaxGeometryTextureImageUnits = %d
const int gl_MaxGeometryTotalOutputComponents = %d
const int gl_MaxGeometryUniformComponents = %d
const int gl_MaxGeometryVaryingComponents = %d
const int gl_MaxImageSamples = %d
const int gl_MaxImageUnits = %d
const int gl_MaxMeshOutputPrimitivesNV = %d
const int gl_MaxMeshOutputVerticesNV = %d
const int gl_MaxMeshViewCountNV = %d
const int gl_MaxPatchVertices = %d
const int gl_MaxSamples = %d
const int gl_MaxTessControlAtomicCounterBuffers = %d
const int gl_MaxTessControlAtomicCounters = %d
const int gl_MaxTessControlImageUniforms = %d
const int gl_MaxTessControlInputComponents = %d
const int gl_MaxTessControlOutputComponents = %d
const int gl_MaxTessControlTextureImageUnits = %d
const int gl_MaxTessControlTotalOutputComponents = %d
const int gl_MaxTessControlUniformComponents = %d
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d
const int gl_MaxTessEvaluationAtomicCounters = %d
const int gl_MaxTessEvaluationImageUniforms = %d
const int gl_MaxTessEvaluationInputComponents = %d
const int gl_MaxTessEvaluationOutputComponents = %d
const int gl_MaxTessEvaluationTextureImageUnits = %d
const int gl_MaxTessEvaluationUniformComponents = %d
const int gl_MaxTessGenLevel = %d
const int gl_MaxTessPatchComponents = %d
const int gl_MaxTransformFeedbackBuffers = %d
const int gl_MaxTransformFeedbackInterleavedComponents = %d
const int gl_MaxVaryingComponents = %d
const int gl_MaxVertexAtomicCounterBuffers = %d
const int gl_MaxVertexAtomicCounters = %d
const int gl_MaxVertexImageUniforms = %d
const int gl_MaxVertexOutputComponents = %d
const int gl_MaxViewports = %d
const int gl_ScopeDevice      = 1
const int gl_ScopeInvocation  = 4
const int gl_ScopeQueueFamily = 5
const int gl_ScopeShaderCallEXT = 6
const int gl_ScopeSubgroup    = 3
const int gl_ScopeWorkgroup   = 2
const int gl_SemanticsAcquire         = 0x2
const int gl_SemanticsAcquireRelease  = 0x8
const int gl_SemanticsMakeAvailable   = 0x2000
const int gl_SemanticsMakeVisible     = 0x4000
const int gl_SemanticsRelaxed         = 0x0
const int gl_SemanticsRelease         = 0x4
const int gl_SemanticsVolatile        = 0x8000
const int gl_StorageSemanticsBuffer   = 0x40
const int gl_StorageSemanticsImage    = 0x800
const int gl_StorageSemanticsNone     = 0x0
const int gl_StorageSemanticsOutput   = 0x1000
const int gl_StorageSemanticsShared   = 0x100
const int16_t
const int64_t
const int8_t
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d
const ivec3 gl_MaxMeshWorkGroupSizeNV = ivec3(%d,%d,%d
const ivec3 gl_MaxTaskWorkGroupSizeNV = ivec3(%d,%d,%d
const mediump int  gl_MaxCombinedTextureImageUnits = %d
const mediump int  gl_MaxDrawBuffers = %d
const mediump int  gl_MaxFragmentInputVectors = %d
const mediump int  gl_MaxFragmentUniformVectors = %d
const mediump int  gl_MaxProgramTexelOffset = %d
const mediump int  gl_MaxTextureImageUnits = %d
const mediump int  gl_MaxVaryingVectors = %d
const mediump int  gl_MaxVertexAttribs = %d
const mediump int  gl_MaxVertexOutputVectors = %d
const mediump int  gl_MaxVertexTextureImageUnits = %d
const mediump int  gl_MaxVertexUniformVectors = %d
const mediump int  gl_MinProgramTexelOffset = %d
const mediump int gl_MaxDualSourceDrawBuffersEXT = %d
const uint
const uint gl_RayFlagsNoneNV = 0U;const uint gl_RayFlagsNoneEXT = 0U;const uint gl_RayFlagsOpaqueNV = 1U;const uint gl_RayFlagsOpaqueEXT = 1U;const uint gl_RayFlagsNoOpaqueNV = 2U;const uint gl_RayFlagsNoOpaqueEXT = 2U;const uint gl_RayFlagsTerminateOnFirstHitNV = 4U;const uint gl_RayFlagsTerminateOnFirstHitEXT = 4U;const uint gl_RayFlagsSkipClosestHitShaderNV = 8U;const uint gl_RayFlagsSkipClosestHitShaderEXT = 8U;const uint gl_RayFlagsCullBackFacingTrianglesNV = 16U;const uint gl_RayFlagsCullBackFacingTrianglesEXT = 16U;const uint gl_RayFlagsCullFrontFacingTrianglesNV = 32U;const uint gl_RayFlagsCullFrontFacingTrianglesEXT = 32U;const uint gl_RayFlagsCullOpaqueNV = 64U;const uint gl_RayFlagsCullOpaqueEXT = 64U;const uint gl_RayFlagsCullNoOpaqueNV = 128U;const uint gl_RayFlagsCullNoOpaqueEXT = 128U;const uint gl_RayFlagsSkipTrianglesEXT = 256U;const uint gl_RayFlagsSkipAABBEXT = 512U;const uint gl_HitKindFrontFacingTriangleEXT = 254U;const uint gl_HitKindBackFacingTriangleEXT = 255U
const uint gl_RayQueryCandidateIntersectionEXT = 0U;const uint gl_RayQueryCommittedIntersectionEXT = 1U;const uint gl_RayQueryCommittedIntersectionNoneEXT = 0U;const uint gl_RayQueryCommittedIntersectionTriangleEXT = 1U;const uint gl_RayQueryCommittedIntersectionGeneratedEXT = 2U;const uint gl_RayQueryCandidateIntersectionTriangleEXT = 0U;const uint gl_RayQueryCandidateIntersectionAABBEXT = 1U
const uint16_t
const uint32_t
const uint64_t
const uint8_t
constArray.empty
constanH
constant
constant CmdCopyBufferToImageInfo& info [[buffer(2
constant CopyInfo& info [[ buffer(2
constant QueryStatus* availability [[buffer(5
constant TexSubrez& subRez [[buffer(0
constant Uniforms& uniforms [[ buffer(0
constant expression required
constant float3x3 spvBT2020Factors = {{1, 1, 1}, {0, -0.11156702/0.6780, 1.8814}, {1.4746, -0.38737742/0.6780, 0
constant float3x3 spvBT601Factors = {{1, 1, 1}, {0, -0.202008/0.587, 1.772}, {1.402, -0.419198/0.587, 0
constant float3x3 spvBT709Factors = {{1, 1, 1}, {0, -0.13397432/0.7152, 1.8556}, {1.5748, -0.33480248/0.7152, 0
constant float4& clearValue [[ buffer(0
constant int4& clearValue [[ buffer(0
constant uint
constant uint& flags [[buffer(4
constant uint& numQueries [[buffer(3
constant uint& stride [[buffer(2
constant uint* spvIndirectParams [[buffer
constant uint3
constant uint32_t& drawCount [[buffer(3
constant uint32_t& drawCount [[buffer(6
constant uint32_t& fillValue [[ buffer(1
constant uint32_t& inControlPointCount [[buffer(4
constant uint32_t& outControlPointCount [[buffer(5
constant uint32_t& srcStride [[buffer(2
constant uint32_t& srcStride [[buffer(3
constant uint32_t& tcWorkgroupSize [[buffer(8
constant uint32_t& viewCount [[buffer(4
constant uint32_t& vtxThreadExecWidth [[buffer(7
constant uint4& clearValue [[ buffer(0
constantH
constantH3
constantH3K
constant_expression
constant_id
constant_type.parent_type
constexpr const constant T& operator [] (size_t pos) const constant
constexpr const device T& operator [] (size_t pos) const device
constexpr const thread T& operator [] (size_t pos) const thread
constexpr const threadgroup T& operator [] (size_t pos) const threadgroup
constexpr explicit spvComponentBits(int v) thread : value(v
constexpr sampler
constexpr sampler ce_sampler(mip_filter::nearest, filter
constexpr spvDynamicImageSampler(texture2d<T> plane0, texture2d<T> plane1
constexpr spvDynamicImageSampler(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2
constexpr spvDynamicImageSampler(texture2d<T> tex, sampler samp) thread
constexpr spvDynamicImageSampler(texture2d<T> tex, sampler samp, spvYCbCrSampler ycbcr_samp, uint sw) thread
constexpr spvDynamicImageSampler(texture2d<T> tex, sampler samp, uint sw) thread
constexpr spvYCbCrSampler() thread : val(build
constexpr spvYCbCrSampler(Ts... t) thread : val(build(t
constexpr spvYCbCrSampler(const thread spvYCbCrSampler& s) thread = default
constexpr static constant ushort bpc_base = 10
constexpr static constant ushort bpc_bits = 6
constexpr static constant ushort bpc_mask = ((1 << bpc_bits) - 1) << bpc_base
constexpr static constant ushort chroma_filter_base = 2
constexpr static constant ushort chroma_filter_bits = 2
constexpr static constant ushort chroma_filter_mask = ((1 << chroma_filter_bits) - 1) << chroma_filter_base
constexpr static constant ushort resolution_base = 0
constexpr static constant ushort resolution_bits = 2
constexpr static constant ushort resolution_mask = ((1 << resolution_bits) - 1) << resolution_base
constexpr static constant ushort x_chroma_off_base = 4
constexpr static constant ushort x_chroma_off_bit = 1
constexpr static constant ushort x_chroma_off_mask = ((1 << x_chroma_off_bit) - 1) << x_chroma_off_base
constexpr static constant ushort y_chroma_off_base = 5
constexpr static constant ushort y_chroma_off_bit = 1
constexpr static constant ushort y_chroma_off_mask = ((1 << y_chroma_off_bit) - 1) << y_chroma_off_base
constexpr static constant ushort ycbcr_model_base = 6
constexpr static constant ushort ycbcr_model_bits = 3
constexpr static constant ushort ycbcr_model_mask = ((1 << ycbcr_model_bits) - 1) << ycbcr_model_base
constexpr static constant ushort ycbcr_range_base = 9
constexpr static constant ushort ycbcr_range_bit = 1
constexpr static constant ushort ycbcr_range_mask = ((1 << ycbcr_range_bit) - 1) << ycbcr_range_base
constructBuiltIn
constructing matrix from matrix
constructing non-array constituent from array argument
constructor
constructor argument does not have a type
consumedOperands == operands.size
contents
contentsScale
context-insensitive value
continue
continue statement only allowed in loops
continueH
controlBarrier
convertGlslangToSpvType
coopMatLoadNV
coopMatMulAddNV
coopMatStoreNV
coord, spvForward<LodOptions>(options
coord::pH
coord::pixel
copy object
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount
copyNonFront
copyOf.type.isStruct
copyTable
copyUpDeferredInsert
copysign
coreu7H
cosited_even = 0
countByEnumeratingWithState:objects:count
countLeadingZeros
countTrailingZeros
counter %d
counters
countersH
cpuCacheMode
cquireNextImage
createAccessChain
createAtomicOperation
createBinaryMatrixOperation
createBinaryOperation
createCompositeCompare
createCompositeConstruct
createConstructor
createConversion
createImageTextureFunctionCall
createIntWidthConversion
createLvalueSwizzle
createMiscOperation
createRvalueSwizzle
createSpvConstant
createSpvConstantFromConstUnionArray
createSubgroupOperation
createTextureQueryCall
criptor
criptorSH
cross-product
cstring
ct type.H
ction; lH
cubeFaceCoord
cubeFaceCoordAMD
cubeFaceIndex
cubeFaceIndexAMD
currentAllocatedSize
currentDirectoryPath
currentH
current_emitting_block
current_function
current_object_.empty
cuteCommH
cution mH
cxa_allocate_exception
cxa_atexit
cxa_bad_typeid
cxa_begin_catch
cxa_demangle
cxa_end_catch
cxa_free_exception
cxa_guard_abort
cxa_guard_acquire
cxa_guard_release
cxa_pure_virtual
cxa_rethrow
cxa_throw
cy ES noH
d Mac orH
d above.H
d array.H
d beforeH
d behaviH
d const H
d for maH
d from 2H
d in ESSH
d in MSLH
d in VulH
d numberH
d on macH
d shaderH
d speciaH
d store.H
d up on H
d with MH
d, centeH
d-errorsH
d. Must H
dBuffersH
dCommandBuffer
dDescripH
dExtractH
dFdxCoarH
dFdxCoarse
dFdxFine
dFdxFineH
dFdyCoarH
dFdyCoarse
dFdyFine
dIndexBuH
dPdxCoarse
dPdxFine
dPdyCoarse
dPdyFine
dPipelinH
dReverseH
dVertexBH
d\``hXh
d_types
daryFragH
dataWithBytes:length
dateMappH
dd typedH
de for bH
de_coverH
dealloc
debug base type encoding
debug composite type
debug info flags
debug operation
debug pragma syntax is incorrect
debug type qualifier
debugPriH
debugPrintfEXT
declaration
declaration_statement
declareH
decompressDXTnBlock(src, pixels, blockExtent, 4 * sizeof(uint), info.format
decoration
default
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
defaultManager
default_H
default_value
define
define AH
define GL_AMD_gcn_shader 1
define GL_AMD_gpu_shader_half_float 1
define GL_AMD_gpu_shader_half_float_fetch 1
define GL_AMD_gpu_shader_int16 1
define GL_AMD_shader_ballot 1
define GL_AMD_shader_explicit_vertex_parameter 1
define GL_AMD_shader_fragment_mask 1
define GL_AMD_shader_image_load_store_lod 1
define GL_AMD_shader_trinary_minmax 1
define GL_AMD_texture_gather_bias_lod 1
define GL_ANDROID_extension_pack_es31a 1
define GL_ARB_compute_shader 1
define GL_ARB_derivative_control 1
define GL_ARB_enhanced_layouts 1
define GL_ARB_explicit_attrib_location 1
define GL_ARB_explicit_uniform_location 1
define GL_ARB_fragment_shader_interlock 1
define GL_ARB_gpu_shader5 1
define GL_ARB_gpu_shader_fp64 1
define GL_ARB_gpu_shader_int64 1
define GL_ARB_post_depth_coverage 1
define GL_ARB_sample_shading 1
define GL_ARB_separate_shader_objects 1
define GL_ARB_shader_atomic_counters 1
define GL_ARB_shader_ballot 1
define GL_ARB_shader_bit_encoding 1
define GL_ARB_shader_draw_parameters 1
define GL_ARB_shader_group_vote 1
define GL_ARB_shader_image_load_store 1
define GL_ARB_shader_image_size 1
define GL_ARB_shader_stencil_export 1
define GL_ARB_shader_storage_buffer_object 1
define GL_ARB_shader_texture_image_samples 1
define GL_ARB_shader_texture_lod 1
define GL_ARB_shading_language_420pack 1
define GL_ARB_shading_language_packing 1
define GL_ARB_sparse_texture2 1
define GL_ARB_sparse_texture_clamp 1
define GL_ARB_tessellation_shader 1
define GL_ARB_texture_cube_map_array 1
define GL_ARB_texture_gather 1
define GL_ARB_texture_multisample 1
define GL_ARB_texture_query_lod 1
define GL_ARB_texture_rectangle 1
define GL_ARB_uniform_buffer_object 1
define GL_ARB_vertex_attrib_64bit 1
define GL_ARB_viewport_array 1
define GL_ES 1
define GL_EXT_YUV_target 1
define GL_EXT_blend_func_extended 1
define GL_EXT_buffer_reference 1
define GL_EXT_buffer_reference2 1
define GL_EXT_buffer_reference_uvec2 1
define GL_EXT_control_flow_attributes 1
define GL_EXT_debug_printf 1
define GL_EXT_demote_to_helper_invocation 1
define GL_EXT_device_group 1
define GL_EXT_frag_depth 1
define GL_EXT_fragment_invocation_density 1
define GL_EXT_geometry_point_size 1
define GL_EXT_geometry_shader 1
define GL_EXT_gpu_shader5 1
define GL_EXT_multiview 1
define GL_EXT_nonuniform_qualifier 1
define GL_EXT_post_depth_coverage 1
define GL_EXT_primitive_bounding_box 1
define GL_EXT_ray_flags_primitive_culling 1
define GL_EXT_ray_query 1
define GL_EXT_ray_tracing 1
define GL_EXT_samplerless_texture_functions 1
define GL_EXT_scalar_block_layout 1
define GL_EXT_shader_16bit_storage 1
define GL_EXT_shader_8bit_storage 1
define GL_EXT_shader_atomic_float 1
define GL_EXT_shader_atomic_int64 1
define GL_EXT_shader_explicit_arithmetic_types 1
define GL_EXT_shader_explicit_arithmetic_types_float16 1
define GL_EXT_shader_explicit_arithmetic_types_float32 1
define GL_EXT_shader_explicit_arithmetic_types_float64 1
define GL_EXT_shader_explicit_arithmetic_types_int16 1
define GL_EXT_shader_explicit_arithmetic_types_int32 1
define GL_EXT_shader_explicit_arithmetic_types_int64 1
define GL_EXT_shader_explicit_arithmetic_types_int8 1
define GL_EXT_shader_image_load_formatted 1
define GL_EXT_shader_implicit_conversions 1
define GL_EXT_shader_integer_mix 1
define GL_EXT_shader_io_blocks 1
define GL_EXT_shader_non_constant_global_initializers 1
define GL_EXT_shader_realtime_clock 1
define GL_EXT_shader_subgroup_extended_types_float16 1
define GL_EXT_shader_subgroup_extended_types_int16 1
define GL_EXT_shader_subgroup_extended_types_int64 1
define GL_EXT_shader_subgroup_extended_types_int8 1
define GL_EXT_shader_texture_lod 1
define GL_EXT_shadow_samplers 1
define GL_EXT_tessellation_point_size 1
define GL_EXT_tessellation_shader 1
define GL_EXT_texture_buffer 1
define GL_EXT_texture_cube_map_array 1
define GL_FRAGMENT_PRECISION_HIGH 1
define GL_GOOGLE_cpp_style_line_directive 1
define GL_GOOGLE_include_directive 1
define GL_INTEL_shader_integer_functions2 1
define GL_KHR_blend_equation_advanced 1
define GL_KHR_shader_subgroup_arithmetic 1
define GL_KHR_shader_subgroup_ballot 1
define GL_KHR_shader_subgroup_basic 1
define GL_KHR_shader_subgroup_clustered 1
define GL_KHR_shader_subgroup_quad 1
define GL_KHR_shader_subgroup_shuffle 1
define GL_KHR_shader_subgroup_shuffle_relative 1
define GL_KHR_shader_subgroup_vote 1
define GL_NV_compute_shader_derivatives 1
define GL_NV_conservative_raster_underestimation 1
define GL_NV_cooperative_matrix 1
define GL_NV_fragment_shader_barycentric 1
define GL_NV_geometry_shader_passthrough 1
define GL_NV_integer_cooperative_matrix 1
define GL_NV_mesh_shader 1
define GL_NV_ray_tracing 1
define GL_NV_sample_mask_override_coverage 1
define GL_NV_shader_atomic_int64 1
define GL_NV_shader_noperspective_interpolation 1
define GL_NV_shader_sm_builtins 1
define GL_NV_shader_subgroup_partitioned 1
define GL_NV_shader_texture_footprint 1
define GL_NV_shading_rate_image 1
define GL_NV_viewport_array2 1
define GL_OES_EGL_image_external 1
define GL_OES_EGL_image_external_essl3 1
define GL_OES_geometry_point_size 1
define GL_OES_geometry_shader 1
define GL_OES_gpu_shader5 1
define GL_OES_primitive_bounding_box 1
define GL_OES_sample_variables 1
define GL_OES_shader_image_atomic 1
define GL_OES_shader_io_blocks 1
define GL_OES_shader_multisample_interpolation 1
define GL_OES_standard_derivatives 1
define GL_OES_tessellation_point_size 1
define GL_OES_tessellation_shader 1
define GL_OES_texture_3D 1
define GL_OES_texture_buffer 1
define GL_OES_texture_cube_map_array 1
define GL_OES_texture_storage_multisample_2d_array 1
define GL_OVR_multiview 1
define GL_OVR_multiview2 1
define GL_SPIRV
define GL_compatibility_profile 1
define GL_core_profile 1
define SPIRV_Cross_BaseInstance gl_BaseInstanceARB
define SPIRV_Cross_BaseVertex gl_BaseVertexARB
define VULKAN
define spvImage2DAtomicCoord(tc, tex) (((tex).get_width() * (tc).x) + (tc).y
define spvTexelBufferCoord(tc, tex) uint2((tc) % (tex).get_width(), (tc) / (tex).get_width
defined
defined" can't be (un)defined
defined" is (un)defined
degrees
delegate
demote_statement
dent staH
dependency_infinite
dependency_lengtendency_infinitedependency_infinMeshPrimitivesNVgl_MeshPrimitivegl_MeshVerticesNfARB
dependency_length
deprecated in version
deprecated, may be removed in future release
depth layout qualifier
depth(anI
depth(any
depth(grI
depth(greater
depth(leI
depth(less
depth1d_unsupported_by_metal
depth2d
depth2d_array
depth2d_ms
depth2d_ms_array
depth3d_unsupported_by_metal
depthAttachment
depthPlane
depthResolveFilter
depthResolveFilterMVK
depth_any
depth_greater
depth_less
depth_unchanged
depthcube
depthcube_array
derAreaGH
der_fp64H
derivatiH
derivative_group
derivative_group_linearNV
derivative_group_linearnv
derivative_group_quadsNV
derivative_group_quadsNV and derivative_group_linearNV
derivative_group_quadsnv
derivedH
descriptor set
descriptor_set_is_argument_buffer(desc_set
dest += sizeof(MTLStageInRegionIndirectArguments
dest += z * info.destDepthStride + y * info.destRowStride + x * sizeof(uint
dest = destBuff + idx * (sizeof(MTLDispatchThreadgroupsIndirectArguments) * 2 + sizeof(MTLDrawPatchIndirectArguments
dest = destBuff + idx * (sizeof(MTLStageInRegionIndirectArguments) + sizeof(MTLDispatchThreadgroupsIndirectArguments) * 2 + sizeof(MTLDrawPatchIndirectArguments
dest.write(unpack_unorm4x8_to_float(pixels[j * 4 + i]).bgra
destBuff[i] = srcBuff[params.indexStart + i
destBuff[idx] = src
destBuff[idx].instanceCount *= viewCount
destCount[0] = src[query].count
destCount[1] = availability[query] != Initial ? 1 : 0
destCount[2] = availability[query] != Initial ? 1 : 0
destCount[3] = 0
destPixel[j * info.destRowStride / sizeof(uint) + i] = pixels[j * 4 + i
destSI.stageInOrigin[0] = src.baseVertex
destSI.stageInOrigin[0] = src.vertexStart
destSI.stageInOrigin[1] = src.baseInstance
destSI.stageInOrigin[2] = 0
destSI.stageInSize[0] = src.indexCount
destSI.stageInSize[0] = src.vertexCount
destSI.stageInSize[1] = src.instanceCount
destSI.stageInSize[2] = 1
destTC.threadgroupsPerGrid[0] = (patchCount * outControlPointCount + tcWorkgroupSize - 1) / tcWorkgroupSize
destTC.threadgroupsPerGrid[1] = destTC.threadgroupsPerGrid[2] = 1
destTE.instanceCount = 1
destTE.patchCount = patchCount
destTE.patchStart = destTE.baseInstance = 0
destVtx.threadgroupsPerGrid[0] = (src.indexCount + vtxThreadExecWidth - 1) / vtxThreadExecWidth
destVtx.threadgroupsPerGrid[0] = (src.vertexCount + vtxThreadExecWidth - 1) / vtxThreadExecWidth
destVtx.threadgroupsPerGrid[1] = src.instanceCount
destVtx.threadgroupsPerGrid[2] = 1
detecteH
determinant
device
device MTLDrawIndexedPrimitivesIndirectArguments* destBuff [[buffer(1
device MTLDrawPrimitivesIndirectArguments* destBuff [[buffer(1
device T& operator [] (size_t pos) device
device atomic
device auto& destSI = *(device MTLStageInRegionIndirectArguments*)dest
device auto& destTC = *(device MTLDispatchThreadgroupsIndirectArguments*)(dest + sizeof(MTLDispatchThreadgroupsIndirectArguments
device auto& destTE = *(device MTLDrawPatchIndirectArguments*)(dest + sizeof(MTLDispatchThreadgroupsIndirectArguments) * 2
device auto& destVtx = *(device MTLDispatchThreadgroupsIndirectArguments*)dest
device auto* params = reinterpret_cast<device uint32_t*>(paramsBuff + idx * 256
device char* dest
device char* destBuff [[buffer(1
device char* paramsBuff [[buffer(2
device const
device uint* destPixel = (device uint*)dest
device uint* spvIndirectParams [[buffer
device uint16_t* destBuff [[buffer(1
device uint32_t* destBuff [[buffer(1
device uint32_t* destCount = (device uint32_t*)(dest + stride * query
device uint8_t* dest [[buffer(1
device uint8_t* dst [[ buffer(1
device-id
deviceID: %#06x
devicecoherent
diagnostic && *diagnostic == nullptr
dictionaryWithObjects:forKeys:count
didModifyRange
difference: linear %d, optimal %d, buffer %d
dimensiH
dimensionality
dimensions > 0
ding_boxH
direct index
direct index for structure
directiH
directive must end with a newline
disable
discard
discard_fragment
dispatchThreadgroups:threadsPerThreadgroup
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup
dispatchThreads:threadsPerThreadgroup
dispatch_async
dispatch_data_create
dispatch_get_global_queue
dispatch_main_q
dispatch_queue_attr_make_with_qos_class
dispatch_queue_create
dispatch_release
dispatch_sync
displaySyncEnabled
displaySyncEnabledMVK
distance
distanceH
distanceI
divide second child into first child
division by 0
divisor
djacencyH
djacencyH3K
dled speH
dmat2x2
dmat2x3
dmat2x4
dmat3x2
dmat3x3
dmat3x4
dmat4x2
dmat4x3
dmat4x4
do-while loops not available
does not apply to floating point images
does not apply to signed integer images
does not apply to this type
does not apply to unsigned integer images
does not fit in a
does not operate on this type
does not operate on types containing (u)int16
does not operate on types containing (u)int8
does not operate on types containing float16
does not produce a result ID
does not reference an OpExtInstImport result Id
dont_flaH3
dont_flatten
dont_unrH3
dont_unroll
dot-product
double floating-point suffix
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double
double literal
double matrix
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   outerProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4
double tH
double types are not supported in buffers in MSL
double vector
doubleBiI
doubleBitsToInt64
doubleBitsToUint64
doubles cannot start on an odd-numbered component
dr_metadH
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance
drawPrimitives:indirectBuffer:indirectBufferOffset
drawPrimitives:vertexStart:vertexCount
drawPrimitives:vertexStart:vertexCount:instanceCount
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance
drawableSize
driver H
driver I
ds. InvaH
dst.write(clearValue, pos
dstImage->getMTLTextureType() == MTLTextureType3D
dst[i + info.dstOffset] = src[i + info.srcOffset
dst[i] = src[i
dst[i], src[i
dst[pos] = fillValue
duplicate label
duplicate macro parameter
duplicate member name
duplicated value
dyld_stub_binder
dynamically to functions
e MSL 2.H
e Metal H
e auxiliH
e bytes.H
e directH
e handleH
e image H
e in typH
e index H
e loopinH
e mismatH
e on thiH
e pointeH
e sense.H
e texturH
e->expression.empty() && e->expression.front
e1DArrayH
e2DArrayH
eActionFromVkAttachmentStoreOp
eDuratioH
eExtensiH
eGroupsKH
eID not H
eId is nH
eId on mH
eImageFoH
eInstancH
eLayerPrH
eMask/glH
eMaskKHRH
eNextImaL
ePositioH
ePositioI
eProjLodH
eSamplesH
eTemplatH
eVertex)H
e_bufferH
e_capabiH
e_controH
e_directH
e_gatherH
e_interpH
e_matrixH
e_shaderH
e_to_pacH
eadgroupH
eak is oH
early_frH
early_fragment_tests
early_fragment_tests ]] fragment
early_fragment_torigin_upper_lefoverride_coveragviewport_relativangles_adjacencytriangles_adjaceprimitive_cullinattachment_indexinput_attachment_reference_aligndary_view_offsetsecondary_view_o
eater_eqH
eatures
ebugMarker
ebug_marH
ebug_priH
ebug_repH
ebug_utiH
ec constH
eclare pH
ecordextH3K
ecrementH
ectangleH
ectionNV
ectionNVH
ector tyH
ed UBO mH
ed for cH
ed in ESH
ed in MSH
ed in OpH
ed in frH
ed on iOH
ed on leH
ed-variaH
edMemoryH
edReduceH
edgeTessellationFactor
edicatedH
eds to cH
eedback H
eedback.H
eeeeeeeee
eerMemoryFeatures
eferenceH
efore ESH
egacy ESH
egacy GLH
egacy taH
egative_H
eginCommandBuffer
eginDebuH
eginDebugUtilsLabelEXT
eh_frame
either the block needs a location, or all members need a location, or no members have a location
elaxed_bH
element array of
elements
elementsH
elems[i] != 0xffffffffu
elif after #else
elif defined(GL_EXT_shader_explicit_arithmetic_types_float16
elif defined(GL_NV_gpu_shader5
elineBarH
elineCacH
els are H
else after #else
else if (Coords.y >= Coords.x && Coords.y >= Coords.z
em, b ==H
emanticsH
emaphore
ember doH
ements2
emit_atomic_func_op
emit_barrier
emit_block_chain
emit_flattened_io_block_member
emit_flattened_io_block_struct
emit_instruction
emit_interface_block
emit_store_statement
emit_tessellation_access_chain
emit_tessellation_io_load
emory_buH
emory_scH
emote_toH
empty inH
emulation
enGL ES.H
enable
encil_exH
enclose_expression
encodeImmediate
encodeSignalEvent:value
encodeWaitForEvent:value
end consH
endEncoding
endInvocationInterlockARB
endInvocationInterlockARB() cannot be placed after a return from main
endInvocationInterlockARB() cannot be placed within flow control
endInvocationInterlockARB() must be in a fragment shader
endInvocationInterlockARB() must be in main
endInvocationInterlockARB() must only be called once
endInvocationInterlockNV
endScope
engerEXTL
enqueue
ensure_member_packing_rules_msl
ent buffH
ent on mH
ented blH
ented spH
ently inH
entry point cannot return a value
entry-point
entryPoiH
entryPointFunction
entryPoints
ents in H
ents to H
ents2KHRL
enum class spvChromaFilter
enum class spvFormatResolution
enum class spvSwizzle : uint
enum class spvXChromaLocation
enum class spvYCbCrModelConversion
enum class spvYCbCrRange
enum class spvYChromaLocation
environment
eometry_H
eparate_H
eportMesH
epresentH
epth_steH
equal_spH
equal_spH3
equal_spacing
equality_expression
equires H
er in MSH
er is reH
er type.H
er2DRectL
er3DRectH
er::lineH
er::nearH
erBufferL
erEndEXTH
erModuleH
erViewNVI
er_fetchH
er_int16H
er_int64H
eration.H
erationsH
ereo_vieH
erformanceStatisticsMVK
ergePipelineCaches
erivativH
erminateH
error == SPV_SUCCESS && "Somebody added another way to fail
error GL_ARB_shader_draw_parameters is not supported
error No extension available for FP16
error No extension available for Int16
error: H
ers are H
ers on iH
ersion eH
ersionKHH
erspectiH
ertDebugH
ertexARBI
ertex_atH
ertex_paH
erties2
erties2KH
ertiesKHH
es are nH
es for PH
es must H
es not hH
es not sH
es_int16H
es_int32H
es_int64H
escriptoH
esent inH
esentRectanglesKHR
esidencyH
esn't suH
esolutioH
esolve eH
essellatH
et variaH
etFencesH
etLayoutH
etQueryPH
et_memorH
et_physiH
et_surfaH
etal 2.0H
etal 2.1H
etal 2.2H
etalSurfaceEXT
etal_surH
etected!H
ets are H
etween hH
eved by H
evelInne
evelInneH
evelOuteH
evelOuteI
evice_grH
ewID_OVR
ewport_aH
ewport_iH
ewport_lH
ex not sH
ex requiH
exID - gH
exIndex H
exceedsH
exclusive or second child into first child
exclusive-or
exclusive_or_expression
executeCallableEXT
executeCallableNV
executeInitializer
execution mode
execution model
exel_bufH
expected
expected 16, 32, or 64 bits for first type parameter
expected 8 or 32 bits for first type parameter
expected a single integer argument
expected after 'debug' keyword
expected after 'optimize' keyword
expected after result id
expected four type parameters
expected more operands after
expected newline after header name
expected no arguments
expected no more operands after
expected to end 'debug' pragma
expected to end 'optimize' pragma
expected type name
explicit interpolation
explicitInterpAMD
exponent >= 0
export
export nH
export oH
expressH
expression
expression_statement
extension
extension 'all' cannot have 'require' or 'enable' behavior
extension GL_AMD_gpu_shader_half_float : require
extension GL_AMD_gpu_shader_int16 : require
extension GL_ARB_post_depth_coverage : require
extension GL_ARB_shading_language_420pack : require
extension GL_EXT_post_depth_coverage : require
extension GL_EXT_shader_explicit_arithmetic_types_float16 : require
extension GL_EXT_shader_explicit_arithmetic_types_int16 : require
extension GL_NV_gpu_shader5 : require
extension GL_NV_mesh_shader
extension instruction number
extension is only partially supported
extension name expected
extension name not specified
extension not supported
extensions == 0
externaH
external
externalH
external_declaration
extra content after header name
extra tokens
extra tokens -- expected newline
extract_bits
extract_global_variables_from_function
extraneous semicolon
exture fH
exture_3H
exture_aH
exture_bH
exture_cH
exture_gH
exture_mH
exture_qH
exture_rH
exture_sH
extures.H
f 0x3fffH
f 3 elemH
f arraysH
f bufferH
f floatiH
f range.H
f-arraysH
f16image1D
f16image1DArray
f16image2D
f16image2DArray
f16image2DMS
f16image2DMSArray
f16image2DRect
f16image3D
f16imageBuffer
f16imageCube
f16imageCubeArray
f16mat2
f16mat2x2
f16mat2x3
f16mat2x4
f16mat3
f16mat3x2
f16mat3x3
f16mat3x4
f16mat4
f16mat4x2
f16mat4x3
f16mat4x4
f16sampler1D
f16sampler1DArray
f16sampler1DArrayShadow
f16sampler1DShadow
f16sampler2D
f16sampler2DArray
f16sampler2DArrayShadow
f16sampler2DMS
f16sampler2DMSArray
f16sampler2DRect
f16sampler2DRectShadow
f16sampler2DShadow
f16sampler3D
f16samplerBuffer
f16samplerCube
f16samplerCubeArray
f16samplerCubeArrayShadow
f16samplerCubeShadow
f16subpassInput
f16subpassInputMS
f16texture1D
f16texture1DArray
f16texture2D
f16texture2DArray
f16texture2DMS
f16texture2DMSArray
f16texture2DRect
f16texture3D
f16textureBuffer
f16textureCube
f16textureCubeArray
f16vec
f16vec2
f16vec3
f16vec4
f32mat2
f32mat2x2
f32mat2x3
f32mat2x4
f32mat3
f32mat3x2
f32mat3x3
f32mat3x4
f32mat4
f32mat4x2
f32mat4x3
f32mat4x4
f32vec2
f32vec3
f32vec4
f64mat2
f64mat2x2
f64mat2x3
f64mat2x4
f64mat3
f64mat3x2
f64mat3x3
f64mat3x4
f64mat4
f64mat4x2
f64mat4x3
f64mat4x4
f64vec2
f64vec3
f64vec4
f_arraysH
f_float
face-forward
faceforwH
faceforward
false && "<result-id> is not supposed to be handled here
false && "Default missing
false && "Language not supported
false && "This was called with a non-hex character
false && "should have caught this earlier
false && "unhandled or invalid case
false case
fast::clamp
fast::max
fast::min
fast_distance
fast_length
fast_normalize
fault exH
fb_buffeH
fclose
fcoopmatNV
fcoopmatNV coopMatMulAddNV(fcoopmatNV A, fcoopmatNV B, fcoopmatNV C
feature not yet implemented
fence_caH
ferMemorH
fer_aligH
ference H
ference2H
ference_H
fferMemoH
ffer_objH
fffffff
fflush
fhG]xXj
fieldName
figuratiL
fileExistsAtPath:isDirectory
fileNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb
fileURLWithPath
filename-based #line
filename-based __FILE
fillBuffer:range:value
filter::H
filter::linear
find suiH
findLSB
findLinkerObjects
findMSB
first argument must be an interpolant, or interpolant-array element
first()H
fixBlockUniformLayoutMatrix
fixBlockUniformLayoutPacking
fixIoArraySize
fkmN7glslang20TReflectionTraverserE
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;     out int  gl_SampleMask
flat in  int  gl_SampleMaskIn
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex
flat in highp uint gl_ViewID_OVR
flat in int gl_Layer;flat in int gl_ViewportIndex
flat in int gl_PrimitiveID
flat in ivec2 gl_FragSizeEXT;flat in int   gl_FragInvocationCountEXT
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV;in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;flat in highp   uint  gl_WarpsPerSMNV;flat in highp   uint  gl_SMCountNV;flat in highp   uint  gl_WarpIDNV;flat in highp   uint  gl_SMIDNV
flat/smooth/noperspective
flatten
flattenH
flattened < maxSamplerIndex
flattened_access_chain_matrix
flattened_access_chain_vector
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4
float CubeFace = 0
float ProjectionAxis = 0
float cubeFaceIndexAMD(vec3);vec2  cubeFaceCoordAMD(vec3);uint64_t timeAMD();in int gl_SIMDGroupSizeAMD
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p
float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0
float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0]) + (adj[0][2] * m[2][0
float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0]) + (adj[0][2] * m[2][0]) + (adj[0][3] * m[3][0
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4
float gl_ClipDistance
float gl_CullDistance
float gl_CullDistance[];int  gl_ViewportMask[];vec4 gl_SecondaryPositionNV;int  gl_SecondaryViewportMaskNV[];vec4 gl_PositionPerViewNV[];int  gl_ViewportMaskPerViewNV
float gl_CullDistance[];vec4 gl_SecondaryPositionNV;vec4 gl_PositionPerViewNV
float gl_PointSize
float imageAtomicAdd(volatile coherent
float imageAtomicExchange(volatile coherent
float imageAtomicLoad(readonly volatile coherent
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2
float interpolateAtVertexAMD(float, uint);vec2  interpolateAtVertexAMD(vec2,  uint);vec3  interpolateAtVertexAMD(vec3,  uint);vec4  interpolateAtVertexAMD(vec4,  uint);int   interpolateAtVertexAMD(int,   uint);ivec2 interpolateAtVertexAMD(ivec2, uint);ivec3 interpolateAtVertexAMD(ivec3, uint);ivec4 interpolateAtVertexAMD(ivec4, uint);uint  interpolateAtVertexAMD(uint,  uint);uvec2 interpolateAtVertexAMD(uvec2, uint);uvec3 interpolateAtVertexAMD(uvec3, uint);uvec4 interpolateAtVertexAMD(uvec4, uint);float16_t interpolateAtVertexAMD(float16_t, uint);f16vec2   interpolateAtVertexAMD(f16vec2,   uint);f16vec3   interpolateAtVertexAMD(f16vec3,   uint);f16vec4   interpolateAtVertexAMD(f16vec4,   uint
float literal needs a decimal point or exponent
float literal too long
float lod
float min3(float, float, float);vec2  min3(vec2,  vec2,  vec2);vec3  min3(vec3,  vec3,  vec3);vec4  min3(vec4,  vec4,  vec4);int   min3(int,   int,   int);ivec2 min3(ivec2, ivec2, ivec2);ivec3 min3(ivec3, ivec3, ivec3);ivec4 min3(ivec4, ivec4, ivec4);uint  min3(uint,  uint,  uint);uvec2 min3(uvec2, uvec2, uvec2);uvec3 min3(uvec3, uvec3, uvec3);uvec4 min3(uvec4, uvec4, uvec4);float max3(float, float, float);vec2  max3(vec2,  vec2,  vec2);vec3  max3(vec3,  vec3,  vec3);vec4  max3(vec4,  vec4,  vec4);int   max3(int,   int,   int);ivec2 max3(ivec2, ivec2, ivec2);ivec3 max3(ivec3, ivec3, ivec3);ivec4 max3(ivec4, ivec4, ivec4);uint  max3(uint,  uint,  uint);uvec2 max3(uvec2, uvec2, uvec2);uvec3 max3(uvec3, uvec3, uvec3);uvec4 max3(uvec4, uvec4, uvec4);float mid3(float, float, float);vec2  mid3(vec2,  vec2,  vec2);vec3  mid3(vec3,  vec3,  vec3);vec4  mid3(vec4,  vec4,  vec4);int   mid3(int,   int,   int);ivec2 mid3(ivec2, ivec2, ivec2);ivec3 mid3(ivec3, ivec3, ivec3);ivec4 mid3(ivec4, ivec4, ivec4);uint  mid3(uint,  uint,  uint);uvec2 mid3(uvec2, uvec2, uvec2);uvec3 mid3(uvec3, uvec3, uvec3);uvec4 mid3(uvec4, uvec4, uvec4);float16_t min3(float16_t, float16_t, float16_t);f16vec2   min3(f16vec2,   f16vec2,   f16vec2);f16vec3   min3(f16vec3,   f16vec3,   f16vec3);f16vec4   min3(f16vec4,   f16vec4,   f16vec4);float16_t max3(float16_t, float16_t, float16_t);f16vec2   max3(f16vec2,   f16vec2,   f16vec2);f16vec3   max3(f16vec3,   f16vec3,   f16vec3);f16vec4   max3(f16vec4,   f16vec4,   f16vec4);float16_t mid3(float16_t, float16_t, float16_t);f16vec2   mid3(f16vec2,   f16vec2,   f16vec2);f16vec3   mid3(f16vec3,   f16vec3,   f16vec3);f16vec4   mid3(f16vec4,   f16vec4,   f16vec4);int16_t   min3(int16_t,   int16_t,   int16_t);i16vec2   min3(i16vec2,   i16vec2,   i16vec2);i16vec3   min3(i16vec3,   i16vec3,   i16vec3);i16vec4   min3(i16vec4,   i16vec4,   i16vec4);int16_t   max3(int16_t,   int16_t,   int16_t);i16vec2   max3(i16vec2,   i16vec2,   i16vec2);i16vec3   max3(i16vec3,   i16vec3,   i16vec3);i16vec4   max3(i16vec4,   i16vec4,   i16vec4);int16_t   mid3(int16_t,   int16_t,   int16_t);i16vec2   mid3(i16vec2,   i16vec2,   i16vec2);i16vec3   mid3(i16vec3,   i16vec3,   i16vec3);i16vec4   mid3(i16vec4,   i16vec4,   i16vec4);uint16_t  min3(uint16_t,  uint16_t,  uint16_t);u16vec2   min3(u16vec2,   u16vec2,   u16vec2);u16vec3   min3(u16vec3,   u16vec3,   u16vec3);u16vec4   min3(u16vec4,   u16vec4,   u16vec4);uint16_t  max3(uint16_t,  uint16_t,  uint16_t);u16vec2   max3(u16vec2,   u16vec2,   u16vec2);u16vec3   max3(u16vec3,   u16vec3,   u16vec3);u16vec4   max3(u16vec4,   u16vec4,   u16vec4);uint16_t  mid3(uint16_t,  uint16_t,  uint16_t);u16vec2   mid3(u16vec2,   u16vec2,   u16vec2);u16vec3   mid3(u16vec3,   u16vec3,   u16vec3);u16vec4   mid3(u16vec4,   u16vec4,   u16vec4
float minInvocationsAMD(float);vec2  minInvocationsAMD(vec2);vec3  minInvocationsAMD(vec3);vec4  minInvocationsAMD(vec4);int   minInvocationsAMD(int);ivec2 minInvocationsAMD(ivec2);ivec3 minInvocationsAMD(ivec3);ivec4 minInvocationsAMD(ivec4);uint  minInvocationsAMD(uint);uvec2 minInvocationsAMD(uvec2);uvec3 minInvocationsAMD(uvec3);uvec4 minInvocationsAMD(uvec4);double minInvocationsAMD(double);dvec2  minInvocationsAMD(dvec2);dvec3  minInvocationsAMD(dvec3);dvec4  minInvocationsAMD(dvec4);int64_t minInvocationsAMD(int64_t);i64vec2 minInvocationsAMD(i64vec2);i64vec3 minInvocationsAMD(i64vec3);i64vec4 minInvocationsAMD(i64vec4);uint64_t minInvocationsAMD(uint64_t);u64vec2  minInvocationsAMD(u64vec2);u64vec3  minInvocationsAMD(u64vec3);u64vec4  minInvocationsAMD(u64vec4);float16_t minInvocationsAMD(float16_t);f16vec2   minInvocationsAMD(f16vec2);f16vec3   minInvocationsAMD(f16vec3);f16vec4   minInvocationsAMD(f16vec4);int16_t minInvocationsAMD(int16_t);i16vec2 minInvocationsAMD(i16vec2);i16vec3 minInvocationsAMD(i16vec3);i16vec4 minInvocationsAMD(i16vec4);uint16_t minInvocationsAMD(uint16_t);u16vec2  minInvocationsAMD(u16vec2);u16vec3  minInvocationsAMD(u16vec3);u16vec4  minInvocationsAMD(u16vec4);float minInvocationsInclusiveScanAMD(float);vec2  minInvocationsInclusiveScanAMD(vec2);vec3  minInvocationsInclusiveScanAMD(vec3);vec4  minInvocationsInclusiveScanAMD(vec4);int   minInvocationsInclusiveScanAMD(int);ivec2 minInvocationsInclusiveScanAMD(ivec2);ivec3 minInvocationsInclusiveScanAMD(ivec3);ivec4 minInvocationsInclusiveScanAMD(ivec4);uint  minInvocationsInclusiveScanAMD(uint);uvec2 minInvocationsInclusiveScanAMD(uvec2);uvec3 minInvocationsInclusiveScanAMD(uvec3);uvec4 minInvocationsInclusiveScanAMD(uvec4);double minInvocationsInclusiveScanAMD(double);dvec2  minInvocationsInclusiveScanAMD(dvec2);dvec3  minInvocationsInclusiveScanAMD(dvec3);dvec4  minInvocationsInclusiveScanAMD(dvec4);int64_t minInvocationsInclusiveScanAMD(int64_t);i64vec2 minInvocationsInclusiveScanAMD(i64vec2);i64vec3 minInvocationsInclusiveScanAMD(i64vec3);i64vec4 minInvocationsInclusiveScanAMD(i64vec4);uint64_t minInvocationsInclusiveScanAMD(uint64_t);u64vec2  minInvocationsInclusiveScanAMD(u64vec2);u64vec3  minInvocationsInclusiveScanAMD(u64vec3);u64vec4  minInvocationsInclusiveScanAMD(u64vec4);float16_t minInvocationsInclusiveScanAMD(float16_t);f16vec2   minInvocationsInclusiveScanAMD(f16vec2);f16vec3   minInvocationsInclusiveScanAMD(f16vec3);f16vec4   minInvocationsInclusiveScanAMD(f16vec4);int16_t minInvocationsInclusiveScanAMD(int16_t);i16vec2 minInvocationsInclusiveScanAMD(i16vec2);i16vec3 minInvocationsInclusiveScanAMD(i16vec3);i16vec4 minInvocationsInclusiveScanAMD(i16vec4);uint16_t minInvocationsInclusiveScanAMD(uint16_t);u16vec2  minInvocationsInclusiveScanAMD(u16vec2);u16vec3  minInvocationsInclusiveScanAMD(u16vec3);u16vec4  minInvocationsInclusiveScanAMD(u16vec4);float minInvocationsExclusiveScanAMD(float);vec2  minInvocationsExclusiveScanAMD(vec2);vec3  minInvocationsExclusiveScanAMD(vec3);vec4  minInvocationsExclusiveScanAMD(vec4);int   minInvocationsExclusiveScanAMD(int);ivec2 minInvocationsExclusiveScanAMD(ivec2);ivec3 minInvocationsExclusiveScanAMD(ivec3);ivec4 minInvocationsExclusiveScanAMD(ivec4);uint  minInvocationsExclusiveScanAMD(uint);uvec2 minInvocationsExclusiveScanAMD(uvec2);uvec3 minInvocationsExclusiveScanAMD(uvec3);uvec4 minInvocationsExclusiveScanAMD(uvec4);double minInvocationsExclusiveScanAMD(double);dvec2  minInvocationsExclusiveScanAMD(dvec2);dvec3  minInvocationsExclusiveScanAMD(dvec3);dvec4  minInvocationsExclusiveScanAMD(dvec4);int64_t minInvocationsExclusiveScanAMD(int64_t);i64vec2 minInvocationsExclusiveScanAMD(i64vec2);i64vec3 minInvocationsExclusiveScanAMD(i64vec3);i64vec4 minInvocationsExclusiveScanAMD(i64vec4);uint64_t minInvocationsExclusiveScanAMD(uint64_t);u64vec2  minInvocationsExclusiveScanAMD(u64vec2);u64vec3  minInvocationsExclusiveScanAMD(u64vec3);u64vec4  minInvocationsExclusiveScanAMD(u64vec4);float16_t minInvocationsExclusiveScanAMD(float16_t);f16vec2   minInvocationsExclusiveScanAMD(f16vec2);f16vec3   minInvocationsExclusiveScanAMD(f16vec3);f16vec4   minInvocationsExclusiveScanAMD(f16vec4);int16_t minInvocationsExclusiveScanAMD(int16_t);i16vec2 minInvocationsExclusiveScanAMD(i16vec2);i16vec3 minInvocationsExclusiveScanAMD(i16vec3);i16vec4 minInvocationsExclusiveScanAMD(i16vec4);uint16_t minInvocationsExclusiveScanAMD(uint16_t);u16vec2  minInvocationsExclusiveScanAMD(u16vec2);u16vec3  minInvocationsExclusiveScanAMD(u16vec3);u16vec4  minInvocationsExclusiveScanAMD(u16vec4);float maxInvocationsAMD(float);vec2  maxInvocationsAMD(vec2);vec3  maxInvocationsAMD(vec3);vec4  maxInvocationsAMD(vec4);int   maxInvocationsAMD(int);ivec2 maxInvocationsAMD(ivec2);ivec3 maxInvocationsAMD(ivec3);ivec4 maxInvocationsAMD(ivec4);uint  maxInvocationsAMD(uint);uvec2 maxInvocationsAMD(uvec2);uvec3 maxInvocationsAMD(uvec3);uvec4 maxInvocationsAMD(uvec4);double maxInvocationsAMD(double);dvec2  maxInvocationsAMD(dvec2);dvec3  maxInvocationsAMD(dvec3);dvec4  maxInvocationsAMD(dvec4);int64_t maxInvocationsAMD(int64_t);i64vec2 maxInvocationsAMD(i64vec2);i64vec3 maxInvocationsAMD(i64vec3);i64vec4 maxInvocationsAMD(i64vec4);uint64_t maxInvocationsAMD(uint64_t);u64vec2  maxInvocationsAMD(u64vec2);u64vec3  maxInvocationsAMD(u64vec3);u64vec4  maxInvocationsAMD(u64vec4);float16_t maxInvocationsAMD(float16_t);f16vec2   maxInvocationsAMD(f16vec2);f16vec3   maxInvocationsAMD(f16vec3);f16vec4   maxInvocationsAMD(f16vec4);int16_t maxInvocationsAMD(int16_t);i16vec2 maxInvocationsAMD(i16vec2);i16vec3 maxInvocationsAMD(i16vec3);i16vec4 maxInvocationsAMD(i16vec4);uint16_t maxInvocationsAMD(uint16_t);u16vec2  maxInvocationsAMD(u16vec2);u16vec3  maxInvocationsAMD(u16vec3);u16vec4  maxInvocationsAMD(u16vec4);float maxInvocationsInclusiveScanAMD(float);vec2  maxInvocationsInclusiveScanAMD(vec2);vec3  maxInvocationsInclusiveScanAMD(vec3);vec4  maxInvocationsInclusiveScanAMD(vec4);int   maxInvocationsInclusiveScanAMD(int);ivec2 maxInvocationsInclusiveScanAMD(ivec2);ivec3 maxInvocationsInclusiveScanAMD(ivec3);ivec4 maxInvocationsInclusiveScanAMD(ivec4);uint  maxInvocationsInclusiveScanAMD(uint);uvec2 maxInvocationsInclusiveScanAMD(uvec2);uvec3 maxInvocationsInclusiveScanAMD(uvec3);uvec4 maxInvocationsInclusiveScanAMD(uvec4);double maxInvocationsInclusiveScanAMD(double);dvec2  maxInvocationsInclusiveScanAMD(dvec2);dvec3  maxInvocationsInclusiveScanAMD(dvec3);dvec4  maxInvocationsInclusiveScanAMD(dvec4);int64_t maxInvocationsInclusiveScanAMD(int64_t);i64vec2 maxInvocationsInclusiveScanAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanAMD(i64vec4);uint64_t maxInvocationsInclusiveScanAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanAMD(u64vec4);float16_t maxInvocationsInclusiveScanAMD(float16_t);f16vec2   maxInvocationsInclusiveScanAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanAMD(f16vec4);int16_t maxInvocationsInclusiveScanAMD(int16_t);i16vec2 maxInvocationsInclusiveScanAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanAMD(i16vec4);uint16_t maxInvocationsInclusiveScanAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanAMD(u16vec4);float maxInvocationsExclusiveScanAMD(float);vec2  maxInvocationsExclusiveScanAMD(vec2);vec3  maxInvocationsExclusiveScanAMD(vec3);vec4  maxInvocationsExclusiveScanAMD(vec4);int   maxInvocationsExclusiveScanAMD(int);ivec2 maxInvocationsExclusiveScanAMD(ivec2);ivec3 maxInvocationsExclusiveScanAMD(ivec3);ivec4 maxInvocationsExclusiveScanAMD(ivec4);uint  maxInvocationsExclusiveScanAMD(uint);uvec2 maxInvocationsExclusiveScanAMD(uvec2);uvec3 maxInvocationsExclusiveScanAMD(uvec3);uvec4 maxInvocationsExclusiveScanAMD(uvec4);double maxInvocationsExclusiveScanAMD(double);dvec2  maxInvocationsExclusiveScanAMD(dvec2);dvec3  maxInvocationsExclusiveScanAMD(dvec3);dvec4  maxInvocationsExclusiveScanAMD(dvec4);int64_t maxInvocationsExclusiveScanAMD(int64_t);i64vec2 maxInvocationsExclusiveScanAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanAMD(i64vec4);uint64_t maxInvocationsExclusiveScanAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanAMD(u64vec4);float16_t maxInvocationsExclusiveScanAMD(float16_t);f16vec2   maxInvocationsExclusiveScanAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanAMD(f16vec4);int16_t maxInvocationsExclusiveScanAMD(int16_t);i16vec2 maxInvocationsExclusiveScanAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanAMD(i16vec4);uint16_t maxInvocationsExclusiveScanAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanAMD(u16vec4);float addInvocationsAMD(float);vec2  addInvocationsAMD(vec2);vec3  addInvocationsAMD(vec3);vec4  addInvocationsAMD(vec4);int   addInvocationsAMD(int);ivec2 addInvocationsAMD(ivec2);ivec3 addInvocationsAMD(ivec3);ivec4 addInvocationsAMD(ivec4);uint  addInvocationsAMD(uint);uvec2 addInvocationsAMD(uvec2);uvec3 addInvocationsAMD(uvec3);uvec4 addInvocationsAMD(uvec4);double  addInvocationsAMD(double);dvec2   addInvocationsAMD(dvec2);dvec3   addInvocationsAMD(dvec3);dvec4   addInvocationsAMD(dvec4);int64_t addInvocationsAMD(int64_t);i64vec2 addInvocationsAMD(i64vec2);i64vec3 addInvocationsAMD(i64vec3);i64vec4 addInvocationsAMD(i64vec4);uint64_t addInvocationsAMD(uint64_t);u64vec2  addInvocationsAMD(u64vec2);u64vec3  addInvocationsAMD(u64vec3);u64vec4  addInvocationsAMD(u64vec4);float16_t addInvocationsAMD(float16_t);f16vec2   addInvocationsAMD(f16vec2);f16vec3   addInvocationsAMD(f16vec3);f16vec4   addInvocationsAMD(f16vec4);int16_t addInvocationsAMD(int16_t);i16vec2 addInvocationsAMD(i16vec2);i16vec3 addInvocationsAMD(i16vec3);i16vec4 addInvocationsAMD(i16vec4);uint16_t addInvocationsAMD(uint16_t);u16vec2  addInvocationsAMD(u16vec2);u16vec3  addInvocationsAMD(u16vec3);u16vec4  addInvocationsAMD(u16vec4);float addInvocationsInclusiveScanAMD(float);vec2  addInvocationsInclusiveScanAMD(vec2);vec3  addInvocationsInclusiveScanAMD(vec3);vec4  addInvocationsInclusiveScanAMD(vec4);int   addInvocationsInclusiveScanAMD(int);ivec2 addInvocationsInclusiveScanAMD(ivec2);ivec3 addInvocationsInclusiveScanAMD(ivec3);ivec4 addInvocationsInclusiveScanAMD(ivec4);uint  addInvocationsInclusiveScanAMD(uint);uvec2 addInvocationsInclusiveScanAMD(uvec2);uvec3 addInvocationsInclusiveScanAMD(uvec3);uvec4 addInvocationsInclusiveScanAMD(uvec4);double  addInvocationsInclusiveScanAMD(double);dvec2   addInvocationsInclusiveScanAMD(dvec2);dvec3   addInvocationsInclusiveScanAMD(dvec3);dvec4   addInvocationsInclusiveScanAMD(dvec4);int64_t addInvocationsInclusiveScanAMD(int64_t);i64vec2 addInvocationsInclusiveScanAMD(i64vec2);i64vec3 addInvocationsInclusiveScanAMD(i64vec3);i64vec4 addInvocationsInclusiveScanAMD(i64vec4);uint64_t addInvocationsInclusiveScanAMD(uint64_t);u64vec2  addInvocationsInclusiveScanAMD(u64vec2);u64vec3  addInvocationsInclusiveScanAMD(u64vec3);u64vec4  addInvocationsInclusiveScanAMD(u64vec4);float16_t addInvocationsInclusiveScanAMD(float16_t);f16vec2   addInvocationsInclusiveScanAMD(f16vec2);f16vec3   addInvocationsInclusiveScanAMD(f16vec3);f16vec4   addInvocationsInclusiveScanAMD(f16vec4);int16_t addInvocationsInclusiveScanAMD(int16_t);i16vec2 addInvocationsInclusiveScanAMD(i16vec2);i16vec3 addInvocationsInclusiveScanAMD(i16vec3);i16vec4 addInvocationsInclusiveScanAMD(i16vec4);uint16_t addInvocationsInclusiveScanAMD(uint16_t);u16vec2  addInvocationsInclusiveScanAMD(u16vec2);u16vec3  addInvocationsInclusiveScanAMD(u16vec3);u16vec4  addInvocationsInclusiveScanAMD(u16vec4);float addInvocationsExclusiveScanAMD(float);vec2  addInvocationsExclusiveScanAMD(vec2);vec3  addInvocationsExclusiveScanAMD(vec3);vec4  addInvocationsExclusiveScanAMD(vec4);int   addInvocationsExclusiveScanAMD(int);ivec2 addInvocationsExclusiveScanAMD(ivec2);ivec3 addInvocationsExclusiveScanAMD(ivec3);ivec4 addInvocationsExclusiveScanAMD(ivec4);uint  addInvocationsExclusiveScanAMD(uint);uvec2 addInvocationsExclusiveScanAMD(uvec2);uvec3 addInvocationsExclusiveScanAMD(uvec3);uvec4 addInvocationsExclusiveScanAMD(uvec4);double  addInvocationsExclusiveScanAMD(double);dvec2   addInvocationsExclusiveScanAMD(dvec2);dvec3   addInvocationsExclusiveScanAMD(dvec3);dvec4   addInvocationsExclusiveScanAMD(dvec4);int64_t addInvocationsExclusiveScanAMD(int64_t);i64vec2 addInvocationsExclusiveScanAMD(i64vec2);i64vec3 addInvocationsExclusiveScanAMD(i64vec3);i64vec4 addInvocationsExclusiveScanAMD(i64vec4);uint64_t addInvocationsExclusiveScanAMD(uint64_t);u64vec2  addInvocationsExclusiveScanAMD(u64vec2);u64vec3  addInvocationsExclusiveScanAMD(u64vec3);u64vec4  addInvocationsExclusiveScanAMD(u64vec4);float16_t addInvocationsExclusiveScanAMD(float16_t);f16vec2   addInvocationsExclusiveScanAMD(f16vec2);f16vec3   addInvocationsExclusiveScanAMD(f16vec3);f16vec4   addInvocationsExclusiveScanAMD(f16vec4);int16_t addInvocationsExclusiveScanAMD(int16_t);i16vec2 addInvocationsExclusiveScanAMD(i16vec2);i16vec3 addInvocationsExclusiveScanAMD(i16vec3);i16vec4 addInvocationsExclusiveScanAMD(i16vec4);uint16_t addInvocationsExclusiveScanAMD(uint16_t);u16vec2  addInvocationsExclusiveScanAMD(u16vec2);u16vec3  addInvocationsExclusiveScanAMD(u16vec3);u16vec4  addInvocationsExclusiveScanAMD(u16vec4);float minInvocationsNonUniformAMD(float);vec2  minInvocationsNonUniformAMD(vec2);vec3  minInvocationsNonUniformAMD(vec3);vec4  minInvocationsNonUniformAMD(vec4);int   minInvocationsNonUniformAMD(int);ivec2 minInvocationsNonUniformAMD(ivec2);ivec3 minInvocationsNonUniformAMD(ivec3);ivec4 minInvocationsNonUniformAMD(ivec4);uint  minInvocationsNonUniformAMD(uint);uvec2 minInvocationsNonUniformAMD(uvec2);uvec3 minInvocationsNonUniformAMD(uvec3);uvec4 minInvocationsNonUniformAMD(uvec4);double minInvocationsNonUniformAMD(double);dvec2  minInvocationsNonUniformAMD(dvec2);dvec3  minInvocationsNonUniformAMD(dvec3);dvec4  minInvocationsNonUniformAMD(dvec4);int64_t minInvocationsNonUniformAMD(int64_t);i64vec2 minInvocationsNonUniformAMD(i64vec2);i64vec3 minInvocationsNonUniformAMD(i64vec3);i64vec4 minInvocationsNonUniformAMD(i64vec4);uint64_t minInvocationsNonUniformAMD(uint64_t);u64vec2  minInvocationsNonUniformAMD(u64vec2);u64vec3  minInvocationsNonUniformAMD(u64vec3);u64vec4  minInvocationsNonUniformAMD(u64vec4);float16_t minInvocationsNonUniformAMD(float16_t);f16vec2   minInvocationsNonUniformAMD(f16vec2);f16vec3   minInvocationsNonUniformAMD(f16vec3);f16vec4   minInvocationsNonUniformAMD(f16vec4);int16_t minInvocationsNonUniformAMD(int16_t);i16vec2 minInvocationsNonUniformAMD(i16vec2);i16vec3 minInvocationsNonUniformAMD(i16vec3);i16vec4 minInvocationsNonUniformAMD(i16vec4);uint16_t minInvocationsNonUniformAMD(uint16_t);u16vec2  minInvocationsNonUniformAMD(u16vec2);u16vec3  minInvocationsNonUniformAMD(u16vec3);u16vec4  minInvocationsNonUniformAMD(u16vec4);float minInvocationsInclusiveScanNonUniformAMD(float);vec2  minInvocationsInclusiveScanNonUniformAMD(vec2);vec3  minInvocationsInclusiveScanNonUniformAMD(vec3);vec4  minInvocationsInclusiveScanNonUniformAMD(vec4);int   minInvocationsInclusiveScanNonUniformAMD(int);ivec2 minInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsInclusiveScanNonUniformAMD(ivec4);uint  minInvocationsInclusiveScanNonUniformAMD(uint);uvec2 minInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsInclusiveScanNonUniformAMD(uvec4);double minInvocationsInclusiveScanNonUniformAMD(double);dvec2  minInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsInclusiveScanNonUniformAMD(u16vec4);float minInvocationsExclusiveScanNonUniformAMD(float);vec2  minInvocationsExclusiveScanNonUniformAMD(vec2);vec3  minInvocationsExclusiveScanNonUniformAMD(vec3);vec4  minInvocationsExclusiveScanNonUniformAMD(vec4);int   minInvocationsExclusiveScanNonUniformAMD(int);ivec2 minInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsExclusiveScanNonUniformAMD(ivec4);uint  minInvocationsExclusiveScanNonUniformAMD(uint);uvec2 minInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsExclusiveScanNonUniformAMD(uvec4);double minInvocationsExclusiveScanNonUniformAMD(double);dvec2  minInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsExclusiveScanNonUniformAMD(u16vec4);float maxInvocationsNonUniformAMD(float);vec2  maxInvocationsNonUniformAMD(vec2);vec3  maxInvocationsNonUniformAMD(vec3);vec4  maxInvocationsNonUniformAMD(vec4);int   maxInvocationsNonUniformAMD(int);ivec2 maxInvocationsNonUniformAMD(ivec2);ivec3 maxInvocationsNonUniformAMD(ivec3);ivec4 maxInvocationsNonUniformAMD(ivec4);uint  maxInvocationsNonUniformAMD(uint);uvec2 maxInvocationsNonUniformAMD(uvec2);uvec3 maxInvocationsNonUniformAMD(uvec3);uvec4 maxInvocationsNonUniformAMD(uvec4);double maxInvocationsNonUniformAMD(double);dvec2  maxInvocationsNonUniformAMD(dvec2);dvec3  maxInvocationsNonUniformAMD(dvec3);dvec4  maxInvocationsNonUniformAMD(dvec4);int64_t maxInvocationsNonUniformAMD(int64_t);i64vec2 maxInvocationsNonUniformAMD(i64vec2);i64vec3 maxInvocationsNonUniformAMD(i64vec3);i64vec4 maxInvocationsNonUniformAMD(i64vec4);uint64_t maxInvocationsNonUniformAMD(uint64_t);u64vec2  maxInvocationsNonUniformAMD(u64vec2);u64vec3  maxInvocationsNonUniformAMD(u64vec3);u64vec4  maxInvocationsNonUniformAMD(u64vec4);float16_t maxInvocationsNonUniformAMD(float16_t);f16vec2   maxInvocationsNonUniformAMD(f16vec2);f16vec3   maxInvocationsNonUniformAMD(f16vec3);f16vec4   maxInvocationsNonUniformAMD(f16vec4);int16_t maxInvocationsNonUniformAMD(int16_t);i16vec2 maxInvocationsNonUniformAMD(i16vec2);i16vec3 maxInvocationsNonUniformAMD(i16vec3);i16vec4 maxInvocationsNonUniformAMD(i16vec4);uint16_t maxInvocationsNonUniformAMD(uint16_t);u16vec2  maxInvocationsNonUniformAMD(u16vec2);u16vec3  maxInvocationsNonUniformAMD(u16vec3);u16vec4  maxInvocationsNonUniformAMD(u16vec4);float maxInvocationsInclusiveScanNonUniformAMD(float);vec2  maxInvocationsInclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsInclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsInclusiveScanNonUniformAMD(vec4);int   maxInvocationsInclusiveScanNonUniformAMD(int);ivec2 maxInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsInclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsInclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsInclusiveScanNonUniformAMD(uvec4);double maxInvocationsInclusiveScanNonUniformAMD(double);dvec2  maxInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanNonUniformAMD(u16vec4);float maxInvocationsExclusiveScanNonUniformAMD(float);vec2  maxInvocationsExclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsExclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsExclusiveScanNonUniformAMD(vec4);int   maxInvocationsExclusiveScanNonUniformAMD(int);ivec2 maxInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsExclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsExclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsExclusiveScanNonUniformAMD(uvec4);double maxInvocationsExclusiveScanNonUniformAMD(double);dvec2  maxInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanNonUniformAMD(u16vec4);float addInvocationsNonUniformAMD(float);vec2  addInvocationsNonUniformAMD(vec2);vec3  addInvocationsNonUniformAMD(vec3);vec4  addInvocationsNonUniformAMD(vec4);int   addInvocationsNonUniformAMD(int);ivec2 addInvocationsNonUniformAMD(ivec2);ivec3 addInvocationsNonUniformAMD(ivec3);ivec4 addInvocationsNonUniformAMD(ivec4);uint  addInvocationsNonUniformAMD(uint);uvec2 addInvocationsNonUniformAMD(uvec2);uvec3 addInvocationsNonUniformAMD(uvec3);uvec4 addInvocationsNonUniformAMD(uvec4);double addInvocationsNonUniformAMD(double);dvec2  addInvocationsNonUniformAMD(dvec2);dvec3  addInvocationsNonUniformAMD(dvec3);dvec4  addInvocationsNonUniformAMD(dvec4);int64_t addInvocationsNonUniformAMD(int64_t);i64vec2 addInvocationsNonUniformAMD(i64vec2);i64vec3 addInvocationsNonUniformAMD(i64vec3);i64vec4 addInvocationsNonUniformAMD(i64vec4);uint64_t addInvocationsNonUniformAMD(uint64_t);u64vec2  addInvocationsNonUniformAMD(u64vec2);u64vec3  addInvocationsNonUniformAMD(u64vec3);u64vec4  addInvocationsNonUniformAMD(u64vec4);float16_t addInvocationsNonUniformAMD(float16_t);f16vec2   addInvocationsNonUniformAMD(f16vec2);f16vec3   addInvocationsNonUniformAMD(f16vec3);f16vec4   addInvocationsNonUniformAMD(f16vec4);int16_t addInvocationsNonUniformAMD(int16_t);i16vec2 addInvocationsNonUniformAMD(i16vec2);i16vec3 addInvocationsNonUniformAMD(i16vec3);i16vec4 addInvocationsNonUniformAMD(i16vec4);uint16_t addInvocationsNonUniformAMD(uint16_t);u16vec2  addInvocationsNonUniformAMD(u16vec2);u16vec3  addInvocationsNonUniformAMD(u16vec3);u16vec4  addInvocationsNonUniformAMD(u16vec4);float addInvocationsInclusiveScanNonUniformAMD(float);vec2  addInvocationsInclusiveScanNonUniformAMD(vec2);vec3  addInvocationsInclusiveScanNonUniformAMD(vec3);vec4  addInvocationsInclusiveScanNonUniformAMD(vec4);int   addInvocationsInclusiveScanNonUniformAMD(int);ivec2 addInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsInclusiveScanNonUniformAMD(ivec4);uint  addInvocationsInclusiveScanNonUniformAMD(uint);uvec2 addInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsInclusiveScanNonUniformAMD(uvec4);double addInvocationsInclusiveScanNonUniformAMD(double);dvec2  addInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsInclusiveScanNonUniformAMD(u16vec4);float addInvocationsExclusiveScanNonUniformAMD(float);vec2  addInvocationsExclusiveScanNonUniformAMD(vec2);vec3  addInvocationsExclusiveScanNonUniformAMD(vec3);vec4  addInvocationsExclusiveScanNonUniformAMD(vec4);int   addInvocationsExclusiveScanNonUniformAMD(int);ivec2 addInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsExclusiveScanNonUniformAMD(ivec4);uint  addInvocationsExclusiveScanNonUniformAMD(uint);uvec2 addInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsExclusiveScanNonUniformAMD(uvec4);double addInvocationsExclusiveScanNonUniformAMD(double);dvec2  addInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsExclusiveScanNonUniformAMD(u16vec4);float swizzleInvocationsAMD(float, uvec4);vec2  swizzleInvocationsAMD(vec2,  uvec4);vec3  swizzleInvocationsAMD(vec3,  uvec4);vec4  swizzleInvocationsAMD(vec4,  uvec4);int   swizzleInvocationsAMD(int,   uvec4);ivec2 swizzleInvocationsAMD(ivec2, uvec4);ivec3 swizzleInvocationsAMD(ivec3, uvec4);ivec4 swizzleInvocationsAMD(ivec4, uvec4);uint  swizzleInvocationsAMD(uint,  uvec4);uvec2 swizzleInvocationsAMD(uvec2, uvec4);uvec3 swizzleInvocationsAMD(uvec3, uvec4);uvec4 swizzleInvocationsAMD(uvec4, uvec4);float swizzleInvocationsMaskedAMD(float, uvec3);vec2  swizzleInvocationsMaskedAMD(vec2,  uvec3);vec3  swizzleInvocationsMaskedAMD(vec3,  uvec3);vec4  swizzleInvocationsMaskedAMD(vec4,  uvec3);int   swizzleInvocationsMaskedAMD(int,   uvec3);ivec2 swizzleInvocationsMaskedAMD(ivec2, uvec3);ivec3 swizzleInvocationsMaskedAMD(ivec3, uvec3);ivec4 swizzleInvocationsMaskedAMD(ivec4, uvec3);uint  swizzleInvocationsMaskedAMD(uint,  uvec3);uvec2 swizzleInvocationsMaskedAMD(uvec2, uvec3);uvec3 swizzleInvocationsMaskedAMD(uvec3, uvec3);uvec4 swizzleInvocationsMaskedAMD(uvec4, uvec3);float writeInvocationAMD(float, float, uint);vec2  writeInvocationAMD(vec2,  vec2,  uint);vec3  writeInvocationAMD(vec3,  vec3,  uint);vec4  writeInvocationAMD(vec4,  vec4,  uint);int   writeInvocationAMD(int,   int,   uint);ivec2 writeInvocationAMD(ivec2, ivec2, uint);ivec3 writeInvocationAMD(ivec3, ivec3, uint);ivec4 writeInvocationAMD(ivec4, ivec4, uint);uint  writeInvocationAMD(uint,  uint,  uint);uvec2 writeInvocationAMD(uvec2, uvec2, uint);uvec3 writeInvocationAMD(uvec3, uvec3, uint);uvec4 writeInvocationAMD(uvec4, uvec4, uint);uint mbcntAMD(uint64_t
float near;float far;float diff
float noH
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x
float spvDet2x2(float a1, float a2, float b1, float b2
float spvDet3x3(float a1, float a2, float a3, float b1, float b2, float b3, float c1, float c2, float c3
float u = 0
float v = 0
float(half
float,float
float16 types can only be in uniform block or buffer storage
float16BH
float16BI
float16BitsToInt16
float16BitsToUint16
float16H
float16_I
float16_t
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4
float16_t interpolateAtCentroid(float16_t);f16vec2   interpolateAtCentroid(f16vec2);f16vec3   interpolateAtCentroid(f16vec3);f16vec4   interpolateAtCentroid(f16vec4);float16_t interpolateAtSample(float16_t, int);f16vec2   interpolateAtSample(f16vec2,   int);f16vec3   interpolateAtSample(f16vec3,   int);f16vec4   interpolateAtSample(f16vec4,   int);float16_t interpolateAtOffset(float16_t, f16vec2);f16vec2   interpolateAtOffset(f16vec2,   f16vec2);f16vec3   interpolateAtOffset(f16vec3,   f16vec2);f16vec4   interpolateAtOffset(f16vec4,   f16vec2
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f16vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 transpose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4
float16_t,float16_t
float2
float2 a_position
float2 a_position [[attribute(0
float2 a_texCoord
float2 ab = fract((round(coord * float2(plane0.get_width(), plane0.get_height())) - float2(0, 0.5)) * 0.5
float2 ab = fract((round(coord * float2(plane0.get_width(), plane0.get_height())) - float2(0.5, 0)) * 0.5
float2 ab = fract((round(coord * float2(plane0.get_width(), plane0.get_height())) - float2(0.5, 0.5)) * 0.5
float2 ab = fract(round(coord * float2(plane0.get_width(), plane0.get_height())) * 0.5
float2 v_texCoord
float2(as_type<half2
float2(half2
float2x2 adj
float2x2 spvInverse2x2(float2x2 m
float3
float3 Coords = abs(P.xyz
float3 a_texCoord [[attribute(1
float3 spvCubemapTo2DArrayFace(float3 P
float3 v_texCoord
float3(half3
float32H
float32_t
float32_t matrix
float32_t vector
float3x3 adj
float3x3 spvInverse3x3(float3x3 m
float4 a_position [[attribute(0
float4 color
float4 colors[9
float4 v_fragColor
float4 v_position [[position
float4(half4
float4x4 adj
float4x4 mvpMtx
float4x4 spvInverse4x4(float4x4 m
float64H
float64_t
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2
float64_t matrix
float64_t vector
floatBitH
floatBitI
floatBitsToInt
floatBitsToUint
floating-point fast math mode
floating-point rounding mode
floating-point suffix
fmax_common
fmin_common
fnCandidate->getBuiltInOp() == EOpCooperativeMatrixMulAdd
foldDereference
for (int SPIRV_Cross_Dummy
for (int i = 0; i < int
for (size_t i = 0; i < info.size; i
for (uint i = 0; i < A; i
for (uint i = 0; i < RCols; i
for (uint i = 0; i < blockExtent.width; ++i
for (uint i = Cols; i > 0; --i
for (uint i = Rows; i > 0; --i
for (uint j = 0; j < Cols; ++j
for (uint j = 0; j < LCols; j
for (uint j = 0; j < blockExtent.height; ++j
for evaH
for header name: %s
for non-parameter, can only apply to 'in' or no storage qualifier
for_init_statement
for_rest_statement
forcing 32-bit vector type to non 64-bit scalar
forcing H
forcing non 32-bit vector type
formanceH
format
format nH
format rH
format requires readonly or writeonly memory qualifier
format.H
formattH
fpclassifyd
fpclassifyf
fprintf
fractionH
fractional_even_spacing
fractional_odd_spacing
fragClear
fragCmdBlitImage
fragColor
fragment
fragment %@4 %@(VaryingsPosTex varyings [[stage_in
fragment ClearColorsOut %@(VaryingsPos varyings [[stage_in]], constant ClearColorsIn& ccIn [[buffer(0
fragment float4 watermarkFragment(Varyings varyings [[stage_in
fragment input block
fragment outputs sharing the same location must be the same basic type
fragment shader barycentric
fragment shader interlock layout qualifier
fragment shader output
fragment-shader array-of-array input
fragment-shader array-of-array output
fragment-shader array-of-struct input
fragment-shader struct input
fragment-shader struct input containing an array
fragment-shader struct input containing structure
fragmentFetchAMD
fragmentH
fragmentMaskFetchAMD
freshCycleDurationGOOGLE
from thH
frontNode
frontSize
front_faI
front_facing
fseeko
ftello
ftransform
fully_specified_type
func::alH
func::eqH
func::grH
func::leH
func::neH
func::noH
function already has a body
function call, method, or subroutine call expected
function cannot take any parameter(s
function control
function does not return a value
function name is redeclaration of existing name
function parameter attribute
functionConstantsDictionary
functionH
function_call
function_call_generic
function_call_header
function_call_header_no_parameters
function_call_header_with_parameters
function_call_or_method
function_constant
function_declarator
function_definition
function_header
function_header_with_parameters
function_identifier
function_prototype
future reserved word in ES 300 and keyword in GLSL
fwidthCoH
fwidthCoarse
fwidthFiH
fwidthFine
fwrite
g block.H
g over iH
g scenarH
gDataEXTH
gUtilsLaH
gacy ESSH
gcc_except_tab__TEXT
geMemoryH
geSparseH
geSubresH
geometry
geometry shader passthrough
geometry shaders
getBaseAlignment
getBlockTexelSize(mtlFmt
getBlockTexelSize(vkFmt
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice
getBytesPerBlock(mtlFmt
getBytesPerBlock(vkFmt
getBytesPerLayer(mtlFmt, 256, 4
getBytesPerLayer(vkFmt, 256, 4
getBytesPerRow(mtlFmt, 4
getBytesPerRow(vkFmt, 4
getBytesPerTexel(mtlFmt
getBytesPerTexel(vkFmt
getContainedTypeId
getCorrespondingUnsignedType
getCumulativeSize
getDerefTypeId
getDimNode
getDimSize
getEditableVariable
getFieldName
getFirstViewIndexInMetalPass
getFormatType(mtlFmt
getFormatType(vkFmt
getIdOperand
getImageType
getImmediateOperand
getMTLClearColor(VkClearValue(), vkFmt
getMTLPixelFormat(vkFmt
getMTLTextureUsage(vkUsage, mtlFmt
getMTLVertexFormat(vkFmt
getNumComponents(scalar) == 1
getNumComponents(source) == (int)channels.size
getNumOperands
getNumTypeConstituents
getPrecisenessAndRemainedAccessChain
getResourceName
getSampledType
getScalarAlignment
getScalarTypeId
getScalarTypeWidth
getStorageClass
getStruct
getStructIndexFromConstantUnion
getTypeClass(scalarTypeId) == OpTypeInt || getTypeClass(scalarTypeId) == OpTypeFloat
getTypeDimensionality
getTypeId(scalar) == getScalarTypeId(vectorType
getTypeName
getTypeNumColumns
getTypeNumRows
getTypeRank
getViewCountInMetalPass
getViewMaskGroupForMetalPass
getVkFormat(mtlFmt
getVkFormatProperties() linear %d, optimal %d, buffer %d
getVkImageUsageFlags(MTLTextureUsagePixelFormatView, mtlFmt
getVkImageUsageFlags(MTLTextureUsageRenderTarget, mtlFmt
getVkImageUsageFlags(MTLTextureUsageShaderRead, mtlFmt
getVkImageUsageFlags(MTLTextureUsageShaderWrite, mtlFmt
getVkImageUsageFlags(MTLTextureUsageUnknown, mtlFmt
getWritableConstArray
getWritableStruct
getWritableType
get_array_size
get_buffer_block_flags
get_cfg_for_current_function
get_cfg_for_function
get_declared_type_array_stride_msl
get_depth
get_height
get_metal_resource_index
get_nibble_from_character
get_num_mip_levels
get_num_samples
get_pointee_type
get_pointee_type_id
get_sample_position
get_visit_order
get_width
gh argumH
ginQueryH
gl_BackCH3
gl_BackCI3
gl_BackColor
gl_BackSecondaryColor
gl_BaryCH
gl_BaryCI
gl_BaryCoordNV
gl_BaryCoordNV requires ESSL 320
gl_BaryCoordNV requires GLSL 450
gl_BaryCoordNoPerspAMD
gl_BaryCoordNoPerspCentroidAMD
gl_BaryCoordNoPerspNV
gl_BaryCoordNoPerspNV requires ESSL 320
gl_BaryCoordNoPerspNV requires GLSL 450
gl_BaryCoordNoPerspSampleAMD
gl_BaryCoordPullModelAMD
gl_BaryCoordSmoothAMD
gl_BaryCoordSmoothCentroidAMD
gl_BaryCoordSmoothSampleAMD
gl_BasH
gl_BaseH
gl_BaseIH
gl_BaseII
gl_BaseInstance
gl_BaseInstanceARB
gl_BaseVI
gl_BaseVertex
gl_BaseVertexARB
gl_BoundingBox
gl_BoundingBoxEXT
gl_BoundingBoxOES
gl_BuiltIn
gl_ClipDH
gl_ClipDH3
gl_ClipDI
gl_ClipDI3
gl_ClipDistance
gl_ClipDistance array size
gl_ClipDistancePerViewNV
gl_ClipDistancePerViewNV array size
gl_ClipVH
gl_ClipVH3
gl_ClipVI
gl_ClipVertex
gl_Color
gl_ColorH
gl_ColorH9
gl_ColorI9
gl_CullD
gl_CullDH
gl_CullDH3
gl_CullDI3
gl_CullDistance
gl_CullDistance array size
gl_CullDistancePerViewNV
gl_CullDistancePerViewNV array size
gl_DevicI
gl_DeviceIndex
gl_DrawID
gl_DrawIDARB
gl_DrawII
gl_FogCoord
gl_FogFrH3
gl_FogFragCoord
gl_FragC
gl_FragCH
gl_FragCH3
gl_FragCH32
gl_FragCI
gl_FragCL
gl_FragColor
gl_FragCoord
gl_FragCoord origin is upper left
gl_FragCoord pixel center is integer
gl_FragCoord redeclarations must match across shaders
gl_FragDH
gl_FragDH3
gl_FragDH32
gl_FragDI
gl_FragDL
gl_FragData
gl_FragDepth
gl_FragDepthEXT
gl_FragFullyCoveredNV
gl_FragInvocationCountEXT
gl_FragSI
gl_FragSizeEXT
gl_FragStencilRefARB
gl_FragStencilRegl_SecondaryColockSecondaryColorgl_BackSecondaryimitiveIndicesNVgl_PrimitiveIndintSecondaryColorgl_FrontSecondarshPerPrimitiveNVgl_MeshPerPrimitgl_MeshPerVertexNV
gl_FragmentSizeNV
gl_FrontColor
gl_FrontFacing
gl_FrontH
gl_FrontH3
gl_FrontI
gl_FrontI3
gl_FrontSecondaryColor
gl_GeometryIndexEXT
gl_GlobaH
gl_GlobaI
gl_GlobalInvocationID
gl_HelpeH
gl_HelpeI
gl_HelperInvocation
gl_HitKiI
gl_HitKindEXT
gl_HitKindNV
gl_HitTEXT
gl_HitTNI
gl_HitTNV
gl_IncomI
gl_IncomingRayFlagsEXT
gl_IncomingRayFlagsNV
gl_InstH
gl_Insta
gl_InstaH
gl_InstaH3
gl_InstaI
gl_InstanceCustomIndexEXT
gl_InstanceCustomIndexNV
gl_InstanceID
gl_InstanceID + SPIRV_Cross_BaseInstance
gl_InstanceID - gl_BaseInstance
gl_InstanceId
gl_InstanceIndex
gl_InstanceIndex - gl_BaseInstance
gl_InvocH
gl_InvocI
gl_InvocationID
gl_InvocationsPerPixelNV
gl_LastFragData
gl_LauncI
gl_LaunchIDEXT
gl_LaunchIDNV
gl_LaunchSizeEXT
gl_LaunchSizeNV
gl_Layer
gl_LayerH
gl_LayerH9
gl_LayerI
gl_LayerI9
gl_LayerPerViewNV
gl_Local
gl_LocalH
gl_LocalI
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_MaxClipDistances
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxComputeWorkGroupSize
gl_MaxCullDistances
gl_MaxDualSourceDrawBuffersEXT
gl_MaxMeshOutputPrimitivesNV
gl_MaxMeshOutputVerticesNV
gl_MaxMeshViewCountNV
gl_MaxMeshWorkGroupSizeNV
gl_MaxProgramTexelOffset
gl_MaxTaskWorkGroupSizeNV
gl_MaxTextureCoords
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackBuffers is %d
gl_MaxTransformFeedbackInterleavedComponents
gl_MaxTransformFeedbackInterleavedComponents is
gl_MaxTransformFeedbackInterleavedComponents is %d
gl_MaxViewports
gl_MeshPerPrimitiveNV
gl_MeshPerVertexNV
gl_MeshPrimitivesNV
gl_MeshVerticesNV
gl_MeshViewCountNV
gl_MeshViewIndicesNV
gl_MinProgramTexelOffset
gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_Normal
gl_NumSamples
gl_NumSuI
gl_NumSubgroups
gl_NumWoH
gl_NumWoI
gl_NumWorkGroups
gl_Objec
gl_ObjecI
gl_ObjectRayDirectionEXT
gl_ObjectRayDirectionNV
gl_ObjectRayOriginEXT
gl_ObjectRayOriginNV
gl_ObjectToWorld3x4EXT
gl_ObjectToWorldEXT
gl_ObjectToWorldNV
gl_PatchH
gl_PatchVertices
gl_PatchVerticesIn
gl_PerFrH32H
gl_PerFragment
gl_PerVeH3
gl_PerVeH32
gl_PerVertex
gl_PointCoord
gl_PointH
gl_PointH3
gl_PointI
gl_PointSize
gl_PositH
gl_PositH3
gl_PositI
gl_Position
gl_Position.y = -gl_Position.y
gl_Position.z - gl_Position.w
gl_Position.z = 2.0
gl_PositionPerVierViewNV
gl_PositionPerViewNV
gl_PrimiH
gl_PrimiI
gl_PrimitiveCountNV
gl_PrimitiveID
gl_PrimitiveIDIn
gl_PrimitiveIndicesNV
gl_RayFlagsSkipAABBEXT
gl_RayFlagsSkipTrianglesEXT
gl_RayTmI
gl_RayTmaxEXT
gl_RayTmaxNV
gl_RayTminEXT
gl_RayTminNV
gl_SIMDGH
gl_SIMDGroupSizeAMD
gl_SMCountNV
gl_SMIDNV
gl_SamplH
gl_SamplH3
gl_SamplI
gl_SamplI3
gl_SampleID
gl_SampleID not supported before GLSL 400
gl_SampleMask
gl_SampleMask/gl_SampleMaskIn not supported before GLSL 400
gl_SampleMaskIn
gl_SamplePosition
gl_SamplePosition not supported before GLSL 400
gl_ScopeDevice
gl_ScopeInvocation
gl_ScopeSubgroup
gl_ScopeWorkgroup
gl_SeconL
gl_SecondaryColor
gl_SecondaryFragColorEXT
gl_SecondaryFragDataEXT
gl_SecondaryPositionNV
gl_SecondaryViewportMaskNV
gl_SemanticsAcquire
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsAcquireRelease
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
gl_SemanticsMakeAvailable
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
gl_SemanticsRelaxed
gl_SemanticsRelease
gl_SemanticsRelease must not be used with (image) atomic load
gl_SemanticsVolatile
gl_SemanticsVolatile must not be used with memoryBarrier or controlBarrier
gl_StorageSemanticsBuffer
gl_StorageSemanticsImage
gl_StorageSemanticsNone
gl_StorageSemanticsOutput
gl_StorageSemanticsShared
gl_SubGrH
gl_SubGroupEqMaskARB
gl_SubGroupGeMaskARB
gl_SubGroupGtMaskARB
gl_SubGroupInvocationARB
gl_SubGroupLeMaskARB
gl_SubGroupLtMaskARB
gl_SubGroupSizeARB
gl_SubgrH
gl_SubgrI
gl_SubgroupEqMask
gl_SubgroupGeMask
gl_SubgroupGtMask
gl_SubgroupID
gl_SubgroupInvocationID
gl_SubgroupLeMask
gl_SubgroupLtMask
gl_SubgroupSize
gl_TaskCountNV
gl_TessC
gl_TessCH
gl_TessCoord
gl_TessLH
gl_TessLI
gl_TessLevel
gl_TessLevelInner
gl_TessLevelOuter
gl_TexCoH3
gl_TexCoI3
gl_TexCoord
gl_TexCoord array size
gl_VertH
gl_VerteH
gl_VerteH3
gl_VerteI
gl_Vertex
gl_VertexID
gl_VertexID - gl_BaseVertex
gl_VertexId
gl_VertexIndex
gl_VertexIndex - gl_BaseVertex
gl_ViewID_OVR
gl_ViewII
gl_ViewIndex
gl_ViewpH
gl_ViewpH3
gl_ViewpI
gl_ViewportIndex
gl_ViewportMask
gl_ViewportMaskP
gl_ViewportMaskPerViewNV
gl_WarpIDNV
gl_WarpsPerSMNV
gl_WorkGH
gl_WorkGI
gl_WorkGroupID
gl_WorkGroupSize
gl_WorldI
gl_WorldRayDirectionEXT
gl_WorldRayDirectionNV
gl_WorldRayOriginEXT
gl_WorldRayOriginNV
gl_WorldToObject3x4EXT
gl_WorldToObjectEXT
gl_WorldToObjectNV
gl_in.size
gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
gl_in[gl_MaxPatchVertices
gl_out
gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2
gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];patch out highp vec4 gl_BoundingBoxEXT[2
gleTesseH
global const initializers must be constant
global storage input qualifier cannot be used in a compute shader
global storage output qualifier cannot be used in a compute shader
globals.back()->getAsAggregate()->getOp() == EOpLinkerObjects
glslang H
glslang_binary_double_output
gradient
greater)I
greaterH
greaterTH
greaterThan
greaterThanEqual
grid_origin
grid_size
group opH
group operation
group reH
group sH
group scH
groupMemH
groupMemoryBarrier
group_paH
guments.H
gxx_personality_v0
h shadowH
h we canH
hConstanH
hDescripL
hTemplatH
hWCVBW0
h[A\A]A^A
h_coveraH
haderModule
hader_16H
hader_8bH
hader_atH
hader_baH
hader_biH
hader_clH
hader_drH
hader_exH
hader_flH
hader_frH
hader_grH
hader_imH
hader_inH
hader_ioH
hader_muH
hader_noH
hader_paH
hader_piH
hader_reH
hader_stH
hader_stI
hader_suH
hader_suL
hader_teH
hader_trH
hader_viH
haders oH
hading_lH
hadow_saH
hains haH
hains thH
half float image
half float literal
half float matrix
half float sampler
half float subpass input
half float texture
half float vector
half floating-point suffix
halfBitsToInt16
halfBitsToUint16
half_cos
half_divide
half_exp
half_exp10
half_exp2
half_log
half_log10
half_log2
half_powr
half_recip
half_rsqrt
half_sin
half_sqrt
half_tan
han sizeH
hanEqualH
handleBracketDereference
handleFunctionCall
handleIoResizeArrayAccess
handled H
has already been used to generate a type
has invalid mask component
has no type
hasUnifiedMemory
has_mem_order_2
he same.H
header != nullptr
header name too long
heapBufferSizeAndAlignWithLength:options
heapTextureSizeAndAlignWithDescriptor
height
helperInH
helperInvocationEXT
helper_H
helper_tH
hexadecimal literal too big
hexadecimal literal too long
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth
highp   vec4  gl_Position;mediump float gl_PointSize
highp float gl_FragDepthEXT
highp float near;highp float far;highp float diff
highp int
highp ivec2 textureSize(__samplerExternal2DY2YEXT, int lod);vec4 texture(__samplerExternal2DY2YEXT, vec2);vec4 texture(__samplerExternal2DY2YEXT, vec2, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec3);vec4 textureProj(__samplerExternal2DY2YEXT, vec3, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec4);vec4 textureProj(__samplerExternal2DY2YEXT, vec4, float bias);vec4 texelFetch(__samplerExternal2DY2YEXT sampler, ivec2, int lod
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod
highp precision qualifier
highp uint
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint
highp vec4  gl_Position;highp float gl_PointSize
his manyH
hitAttributeEXT
hitAttributeNV
hitAttributeNV block
ho4g9lbL6
horePropH
horePropt
host_info
host_page_size
host_statistics
hread() H
huffle_rH
hyp. cosine
hyp. sine
hyp. tangent
hysicalDevice
i < MaxSwizzleSelectors
i16vec2
i16vec3
i16vec4
i32vec2
i32vec3
i32vec4
i64vec2
i64vec3
i64vec4
i78)_@9
iMulExtended
iOS only supports quad-group operations
iOS onlyH
i] = gl_in[i
ializersH
ib_type.basetype == SPIRType::Struct && !ib_type.member_types.empty
icOffsetH
ic_typesH
iceExterH
iceExterL
iceFeatuL
iceFeatut
iceFormaH
iceGroupH
iceImageH
iceIndex
iceMemorH
iceMetalH
icePreseH
iceProcAH
icePropeH
iceQueueH
iceSparsH
iceSurfaL
icoopmatNV
icoopmatNV coopMatMulAddNV(icoopmatNV A, icoopmatNV B, icoopmatNV C
idOperand[idx
idOperand[op
idToInstruction[typeId]->getOpCode() == spv::OpTypePointer
ide funcH
ide of cH
ide or xH
ide set.H
identifier not previously declared
identifier_list
identifiers containing consecutive underscores ("__") are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version < 300
identifiers starting with "gl_" are reserved
identifyBuiltIns
identityH
idx->getOpCode() == OpConstant
ier is oH
iewportFromVkViewport
iewport_H
if (!is_null_texture(plane1
if (!is_null_texture(plane2
if (!s
if (Coords.x >= Coords.y && Coords.x >= Coords.z
if (any
if (availability[query] != Initial || flags & VK_QUERY_RESULT_PARTIAL_BIT
if (flags & VK_QUERY_RESULT_64_BIT
if (flags & VK_QUERY_RESULT_64_BIT) { destCount[1] = src[query].countHigh
if (flags & VK_QUERY_RESULT_WITH_AVAILABILITY_BIT
if (fract(coord.x * plane1.get_width()) != 0.0
if (idx >= drawCount) { return
if (k < T(0
if (query >= numQueries) { return
if (sw
if (x >= info.extent.width || y >= info.extent.height || z >= info.extent.depth) { return
if (ycbcr_samp.get_resolution() == spvFormatResolution::_444
if (ycbcr_samp.get_ycbcr_model() == spvYCbCrModelConversion::rgb_identity
if __HAVE_MIN_LOD_CLAMP
if __METAL_VERSION__ >= 120
if __METAL_VERSION__ >= 210
if defined(GL_AMD_gpu_shader_half_float
if defined(GL_AMD_gpu_shader_int16
if defined(GL_ARB_post_depth_coverge
if/#ifdef/#ifndef
ifdef GL_ARB_shader_draw_parameters
ifdef GL_ARB_shading_language_420pack
ifndef
ifndef GL_ARB_shader_draw_parameters
iform_blH
ifstreamIcNS_11char_traitsIcEEEE
ignment
ignoreIntersectionEXT
ignoreIntersectionNV
ignoredH
iimage1D
iimage1DArray
iimage1DH
iimage2D
iimage2DArray
iimage2DH
iimage2DMS
iimage2DMSArray
iimage2DRect
iimage3D
iimage3DL
iimageBuH
iimageBuffer
iimageCuL
iimageCube
iimageCubeArray
ijklmnopH
il8.h,8
il8Nil8
ilities
ilities2H
illegal use of escape character
illegal use of type 'void
ilsMesseH
image channel data type
image channel order
image format
image formats must match
image load store
image load-store format
image variables not declared 'writeonly' and without a format layout qualifier
image1D
image1DAH
image1DArray
image2D
image2DAH
image2DArray
image2DMH
image2DMS
image2DMSArray
image2DRH
image2DRect
image3D
imageAtoH
imageAtomic
imageAtomicAdd
imageAtomicAdd(volatile coherent
imageAtomicAnd
imageAtomicAnd(volatile coherent
imageAtomicCompSwap
imageAtomicCompSwap(volatile coherent
imageAtomicExchange
imageAtomicExchange(volatile coherent
imageAtomicLoad
imageAtomicLoad(volatile coherent
imageAtomicMax
imageAtomicMax(volatile coherent
imageAtomicMin
imageAtomicMin(volatile coherent
imageAtomicOr
imageAtomicOr(volatile coherent
imageAtomicStore
imageAtomicXor
imageAtomicXor(volatile coherent
imageBufH
imageBuffer
imageCubH
imageCube
imageCubeArray
imageLoaH
imageLoad
imageLoadLod
imageLoadLodAMD
imageQuerySamples
imageQuerySize
imageSamH
imageSampleFootprintClampNV
imageSampleFootprintGradNV
imageSampleFootprintLodNV
imageSampleFootprintNV
imageSamples
imageSamples(readonly writeonly volatile coherent
imageSizH
imageSize
imageSize(readonly writeonly volatile coherent
imageStoH
imageStore
imageStoreLod
imageStoreLodAMD
images H
imdgroup
imitivesH3P
immediate_dominators[edge
imulExteH
imulExtended
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in     int   gl_InstanceCustomIndexEXT;in     int   gl_GeometryIndexEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayOriginEXT;in    vec3   gl_ObjectRayDirectionNV;in    vec3   gl_ObjectRayDirectionEXT;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    float  gl_HitTNV;in    float  gl_HitTEXT;in    uint   gl_HitKindNV;in    uint   gl_HitKindEXT;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_ObjectToWorldEXT;in    mat3x4 gl_ObjectToWorld3x4EXT;in    mat4x3 gl_WorldToObjectNV;in    mat4x3 gl_WorldToObjectEXT;in    mat3x4 gl_WorldToObject3x4EXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in     int   gl_InstanceCustomIndexEXT;in     int   gl_GeometryIndexEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayOriginEXT;in    vec3   gl_ObjectRayDirectionNV;in    vec3   gl_ObjectRayDirectionEXT;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_ObjectToWorldEXT;in    mat3x4 gl_ObjectToWorld3x4EXT;in    mat4x3 gl_WorldToObjectNV;in    mat4x3 gl_WorldToObjectEXT;in    mat3x4 gl_WorldToObject3x4EXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT
in ES pH
in ES prH
in ESSLH
in GLES.H
in GLSLH
in I/O bH
in MSL 2H
in MSL.H
in OpenH
in RGBA order. We can fix that (ironically) with a BGRA swizzle
in VulkH
in VulkaH
in a flaH
in a funH
in argumH
in blockH
in bool gl_FragFullyCoveredNV
in buffer %d
in float gl_ClipDistance
in float gl_CullDistance[];bool gl_HelperInvocation
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor
in for stage inputs
in fragH
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor
in gl_PerVertex
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;highp vec4 gl_SecondaryPositionNV;highp vec4 gl_PositionPerViewNV[];} gl_in[gl_MaxPatchVertices
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in highp   uint  gl_NumSubgroups;in highp   uint  gl_SubgroupID
in highp int gl_DeviceIndex
in highp int gl_DeviceIndex;in highp int gl_ViewIndex
in highp int gl_DeviceIndex;in int gl_DrawIDARB
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
in highp int gl_PrimitiveIDIn;in highp int gl_InvocationID
in highp int gl_VertexID;in highp int gl_InstanceID
in highp int gl_VertexIndex;in highp int gl_InstanceIndex
in highp uint gl_ViewID_OVR
in inpuH
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB
in int gl_DrawID
in int gl_InvocationID
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in int gl_VertexIndex;in int gl_InstanceIndex
in legaH
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;in highp   uint  gl_WarpsPerSMNV;in highp   uint  gl_SMCountNV;in highp   uint  gl_WarpIDNV;in highp   uint  gl_SMIDNV
in scopeH
in vec2 gl_BaryCoordNoPerspAMD;in vec2 gl_BaryCoordNoPerspCentroidAMD;in vec2 gl_BaryCoordNoPerspSampleAMD;in vec2 gl_BaryCoordSmoothAMD;in vec2 gl_BaryCoordSmoothCentroidAMD;in vec2 gl_BaryCoordSmoothSampleAMD;in vec3 gl_BaryCoordPullModelAMD
in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord
in xfb mode
in/out must appear before const
inDebugUH
inRenderH
in_gridH
in_patcI
in_threaH
in_type.basetype != SPIRType::Boolean
inary_miH
include
include <metal_atomic
include <metal_stdlib
include <simd/simd.h
include <stdint.h
includeH
inclusive-or
inclusive_or_expression
incomplete method syntax
inconsistent input primitive for array size of
inconsistent output array size of
inconsistent output number of vertices for array size of
incorrect directive, expected identifier
indSparsH
indSparse
ind_memoH
index != uint32_t(-1
index < _.num_words
index >= 0 && index < 4
index layout qualifier on fragment output
index ouH
index out of range '%d
indexable
indirect index
indirect parameters
inductive loop index modified
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression
ineCacheL
ing a neH
ing a vaH
ing or aH
ingGOOGLH
ingRayFlI
initWithBlock
initWithBlock:forObject:atKeyPath
initWithDomain:code:userInfo
initWithFormat
initWithUTF8String
initWithUUIDBytes
init_declarator_list
initializer
initializer list
initializer requires a variable, not a member
initializer->getAsConstantUnion() || initializer->getType().getQualifier().isSpecConstant
initializer_list
inker neH
inline T degrees(T r
inline T radians(T d
inline T sign(T x
inline T spvFaceForward(T n, T i, T nref
inline T spvFindLSB(T x
inline T spvFindSMSB(T x
inline T spvFindUMSB(T x
inline T spvGetSwizzle(vec<T, 4> x, T c, spvSwizzle s
inline T spvReflect(T i, T n
inline T spvRefract(T i, T n, T eta
inline T spvTextureSwizzle(T x, uint s
inline Tx mod(Tx x, Ty y
inline bool spvSubgroupAllEqual(T value
inline bool spvSubgroupAllEqual(bool value
inline bool spvSubgroupBallotBitExtract(uint4 ballot, uint bit
inline uint spvSubgroupBallotBitCount(uint4 ballot
inline uint spvSubgroupBallotExclusiveBitCount(uint4 ballot, uint gl_SubgroupInvocationID
inline uint spvSubgroupBallotFindLSB(uint4 ballot
inline uint spvSubgroupBallotFindMSB(uint4 ballot
inline uint spvSubgroupBallotInclusiveBitCount(uint4 ballot, uint gl_SubgroupInvocationID
inline uint4 spvSubgroupBallot(bool value
inline vec<T, 4> spvChromaReconstructLinear420XCositedEvenYCositedEven(texture2d<T> plane0, texture2d<T> plane1, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear420XCositedEvenYCositedEven(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear420XCositedEvenYMidpoint(texture2d<T> plane0, texture2d<T> plane1, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear420XCositedEvenYMidpoint(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear420XMidpointYCositedEven(texture2d<T> plane0, texture2d<T> plane1, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear420XMidpointYCositedEven(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear420XMidpointYMidpoint(texture2d<T> plane0, texture2d<T> plane1, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear420XMidpointYMidpoint(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear422CositedEven(texture2d<T> plane0, texture2d<T> plane1, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear422CositedEven(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear422Midpoint(texture2d<T> plane0, texture2d<T> plane1, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructLinear422Midpoint(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructNearest(texture2d<T> plane0, texture2d<T> plane1, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvChromaReconstructNearest(texture2d<T> plane0, texture2d<T> plane1, texture2d<T> plane2, sampler samp, float2 coord, LodOptions... options
inline vec<T, 4> spvConvertYCbCrBT2020(vec<T, 4> ycbcr
inline vec<T, 4> spvConvertYCbCrBT601(vec<T, 4> ycbcr
inline vec<T, 4> spvConvertYCbCrBT709(vec<T, 4> ycbcr
inline vec<T, 4> spvExpandITUFullRange(vec<T, 4> ycbcr, int n
inline vec<T, 4> spvExpandITUNarrowRange(vec<T, 4> ycbcr, int n
inline vec<T, 4> spvGatherCompareSwizzle(const thread Tex<T>& t, sampler s, uint sw, Ts... params
inline vec<T, 4> spvGatherSwizzle(const thread Tex<T>& t, sampler s, uint sw, component c, Ts... params) METAL_CONST_ARG(c
inline vec<T, 4> spvTextureSwizzle(vec<T, 4> x, uint s
inline void spvArrayCopy
input block
input blocks cannot be used in a mesh shader
input primitive
inputPrimitiveTopology
inputPrimitiveTopologyMVK
inputStack.size() == 0
input_atH
input_attachment_index
insertDebugCaptureBoundary
insertDebugSignpost
insert_bits
insideTessellationFactor
inst->ext_inst_type != SPV_EXT_INST_TYPE_NONE
inst->result_id
inst->type_id
inst.getNumOperands() >= 3
inst.num_words > 3
instance
instanceI
instance_id
instead
instructions.size() > 0
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value
int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4
int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int
int doesH
int empty_struct_member
int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4
int get_bpc() const thread { return (val & bpc_mask) >> bpc_base
int gl_InstanceID
int gl_VertexID
int mix(int, int, bool);ivec2 mix(ivec2, ivec2, bvec2);ivec3 mix(ivec3, ivec3, bvec3);ivec4 mix(ivec4, ivec4, bvec4);uint  mix(uint,  uint,  bool );uvec2 mix(uvec2, uvec2, bvec2);uvec3 mix(uvec3, uvec3, bvec3);uvec4 mix(uvec4, uvec4, bvec4);bool  mix(bool,  bool,  bool );bvec2 mix(bvec2, bvec2, bvec2);bvec3 mix(bvec3, bvec3, bvec3);bvec4 mix(bvec4, bvec4, bvec4
int sparseImageLoadARB(readonly volatile coherent
int sparseImageLoadLodAMD(readonly volatile coherent
int textureQueryLevels
int(1u
int(short
int)max
int, int, int
int, int, int, int, int
int16BitH
int16BitI
int16BitsToFloat16
int16BitsToHalf
int16_t
int2 offs = int2(fract(coord.x * plane1.get_width()) != 0.0 ? 1 : -1, 0
int2(0
int32_t
int32_t x
int32_t y
int32_t z
int64BitI
int64BitsToDouble
int64_t
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(double);i64vec2 doubleBitsToInt64(dvec2);i64vec3 doubleBitsToInt64(dvec3);i64vec4 doubleBitsToInt64(dvec4);uint64_t doubleBitsToUint64(double);u64vec2  doubleBitsToUint64(dvec2);u64vec3  doubleBitsToUint64(dvec3);u64vec4  doubleBitsToUint64(dvec4);double int64BitsToDouble(int64_t);dvec2  int64BitsToDouble(i64vec2);dvec3  int64BitsToDouble(i64vec3);dvec4  int64BitsToDouble(i64vec4);double uint64BitsToDouble(uint64_t);dvec2  uint64BitsToDouble(u64vec2);dvec3  uint64BitsToDouble(u64vec3);dvec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int64_t findLSB(int64_t);i64vec2 findLSB(i64vec2);i64vec3 findLSB(i64vec3);i64vec4 findLSB(i64vec4);int64_t findLSB(uint64_t);i64vec2 findLSB(u64vec2);i64vec3 findLSB(u64vec3);i64vec4 findLSB(u64vec4);int64_t findMSB(int64_t);i64vec2 findMSB(i64vec2);i64vec3 findMSB(i64vec3);i64vec4 findMSB(i64vec4);int64_t findMSB(uint64_t);i64vec2 findMSB(u64vec2);i64vec3 findMSB(u64vec3);i64vec4 findMSB(u64vec4
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3   uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);float64_t radians(float64_t);f64vec2   radians(f64vec2);f64vec3   radians(f64vec3);f64vec4   radians(f64vec4);float64_t degrees(float64_t);f64vec2   degrees(f64vec2);f64vec3   degrees(f64vec3);f64vec4   degrees(f64vec4);float64_t sin(float64_t);f64vec2   sin(f64vec2);f64vec3   sin(f64vec3);f64vec4   sin(f64vec4);float64_t cos(float64_t);f64vec2   cos(f64vec2);f64vec3   cos(f64vec3);f64vec4   cos(f64vec4);float64_t tan(float64_t);f64vec2   tan(f64vec2);f64vec3   tan(f64vec3);f64vec4   tan(f64vec4);float64_t asin(float64_t);f64vec2   asin(f64vec2);f64vec3   asin(f64vec3);f64vec4   asin(f64vec4);float64_t acos(float64_t);f64vec2   acos(f64vec2);f64vec3   acos(f64vec3);f64vec4   acos(f64vec4);float64_t atan(float64_t, float64_t);f64vec2   atan(f64vec2,   f64vec2);f64vec3   atan(f64vec3,   f64vec3);f64vec4   atan(f64vec4,   f64vec4);float64_t atan(float64_t);f64vec2   atan(f64vec2);f64vec3   atan(f64vec3);f64vec4   atan(f64vec4);float64_t sinh(float64_t);f64vec2   sinh(f64vec2);f64vec3   sinh(f64vec3);f64vec4   sinh(f64vec4);float64_t cosh(float64_t);f64vec2   cosh(f64vec2);f64vec3   cosh(f64vec3);f64vec4   cosh(f64vec4);float64_t tanh(float64_t);f64vec2   tanh(f64vec2);f64vec3   tanh(f64vec3);f64vec4   tanh(f64vec4);float64_t asinh(float64_t);f64vec2   asinh(f64vec2);f64vec3   asinh(f64vec3);f64vec4   asinh(f64vec4);float64_t acosh(float64_t);f64vec2   acosh(f64vec2);f64vec3   acosh(f64vec3);f64vec4   acosh(f64vec4);float64_t atanh(float64_t);f64vec2   atanh(f64vec2);f64vec3   atanh(f64vec3);f64vec4   atanh(f64vec4);float64_t pow(float64_t, float64_t);f64vec2   pow(f64vec2,   f64vec2);f64vec3   pow(f64vec3,   f64vec3);f64vec4   pow(f64vec4,   f64vec4);float64_t exp(float64_t);f64vec2   exp(f64vec2);f64vec3   exp(f64vec3);f64vec4   exp(f64vec4);float64_t log(float64_t);f64vec2   log(f64vec2);f64vec3   log(f64vec3);f64vec4   log(f64vec4);float64_t exp2(float64_t);f64vec2   exp2(f64vec2);f64vec3   exp2(f64vec3);f64vec4   exp2(f64vec4);float64_t log2(float64_t);f64vec2   log2(f64vec2);f64vec3   log2(f64vec3);f64vec4   log2(f64vec4
intBitsTH
intBitsTI
intBitsToFloat
intCoord
intCoordH
int_sizeH
integer
integerH
integer_H
integer_expression
interfacH
interface
interlocH
interlock ordering
internal max is %d
interpolH
interpolant
interpolateAtCentroid
interpolateAtOffset
interpolateAtSample
interpolateAtVertex
interpolateAtVertexAMD
interpolation qualifiers must appear before storage and precision qualifiers
interpolation_qualifier
intersection
intfEXT(H
invalid directive
invariI
invarianH
invariant
invariant gl_Position
invariant qualifier must appear before interpolation, storage, and precision qualifiers
invariant_qualifier
inverse
inverse sqrt
inversesH
inversesqrt
invert-y
invocatiH
invocatiH3
invocation operation
invocations
ion 310.H
ion baseH
ion befoH
ion currH
ion::_42H
ionEXT()H
ionFactoH
ionIndexH
ionPerViH
ion_consH
ion_poinH
ion_shadH
iosurface
ipVertexH
ipVertexH3P
ipelineBarrier
ipelineCH
ipelineCacheData
ipelinesH
ire MSL H
irementsH
ires MetH
irror_clH
is a type, not a value
is an array of UBOs
is an empty struct
is being used for
is defined more than once
is not H
is not a block
is not a readable file
is not a scalar integer
is not a scalar numeric type
is not a struct
is not a type
is not a valid Component index, which must be one of 0, 1, 2, or 3
is not sH
is not supported for vertex buffers on this device
is not supported on this device
is only H
is retriH
is unknoH
isAbsolutePath
isAggregateType(typeId) || (getNumTypeConstituents(typeId) > 1 && getNumTypeConstituents(typeId) == (int)constituents.size
isAggregateType(valueType) || isMatrixType(valueType
isArray
isArrayVariablyIndexed
isArrayedImageType
isAssignOperation(BN->getOp
isAssignOperation(UN->getOp
isAssignOperation(node->getOp
isConstantScalar(offsets[i
isDepth24Stencil8PixelFormatSupported
isDepthFormat(mtlFmt
isDereferenceOperation(node->getOp
isEqualToString
isFloat
isFloatType(type
isHeadless
isImageType(typeId
isImageType(typeId) || isSampledImageType(typeId
isIoResizeArray(type
isKindOfClass
isLowPower
isMainThread
isMatrix() && vectorSize != 0
isMatrixType(typeId
isPVRTCFormat(mtlFmt
isPointer(lValue
isPointerType(typeId
isPointerType(typeId) && offsets.size() > 0
isReadableFileAtPath
isStencilFormat(mtlFmt
isStruct
isSupported(mtlFmt
isSupported(vkFmt
isVector(source
isVector(target
isWritableFileAtPath
is_array(result_type
is_continue(to
is_functH
is_function_constant_defined
isampler1D
isampler1DArray
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler2DRect
isampler3D
isamplerBuffer
isamplerCube
isamplerCubeArray
isamplerL
isfinite
isinfd
isinff
isnand
isnanf
isolines
isolinesH
isolinesH9
ispatch
ist outsH
istancePH;E
istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
isubpassInput
isubpassInputMS
isunordered
it vectoH
itEventsH
it_storaH
ite floaH
ite onlyH
iteInserH
iteration_multiple
iteration_statement
iteration_statement_nonattributed
itexture1D
itexture1DArray
itexture2D
itexture2DArray
itexture2DMS
itexture2DMSArray
itexture2DRect
itexture3D
itextureBuffer
itextureCube
itextureCubeArray
ith dynaH
itiesKHRH
itr != std::end(visit_order
itsToIntH
itsToIntI
itsToUinH
itsToUinI
itu_full = 0
itu_narrow
iv, b ==H
ivativesH
ivec2(gl_FragCoord.xy
ivec2(gl_FragCoord.xy), 0
ivx?!@q
ixStrideH
ixelFormat
ize_x_idH3q
ize_y_idH3q
ize_z_idH3Q
ized bitH
ized typH
j(8h^@9
jB@9i!O)a
jjjjjjjjjjjjjjjjjjjjjjj
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjHHHH
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj
jump_statement
kCAFilterLinear
kCAFilterNearest
kCFAllocatorDefault
kCGColorSpaceAdobeRGB1998
kCGColorSpaceDCIP3
kCGColorSpaceDisplayP3
kCGColorSpaceExtendedLinearDisplayP3
kCGColorSpaceExtendedLinearITUR_2020
kCGColorSpaceExtendedLinearSRGB
kCGColorSpaceExtendedSRGB
kCGColorSpaceITUR_709
kCGColorSpaceSRGB
kE@9Lii8
kGroupID
kGroupIDH
kIOMasterPortDefault
kIOSurfaceBytesPerElement
kIOSurfaceElementHeight
kIOSurfaceElementWidth
kIOSurfaceHeight
kIOSurfaceIsGlobal
kIOSurfacePlaneBytesPerElement
kIOSurfacePlaneElementHeight
kIOSurfacePlaneElementWidth
kIOSurfacePlaneHeight
kIOSurfacePlaneInfo
kIOSurfacePlaneWidth
kIOSurfaceWidth
kInt2x16
kInt2x16H
kInt4x16H
kInt4x16I
k_overriH
kan GLSLH
kan semaH
ked_baseH
keep-uncH
keep-uncalled
kernel H
kernel enqeue flags
kernel profiling info
kernel void cmdClearColorImage2DFloat(texture2d<float, access::write> dst [[ texture(0
kernel void cmdClearColorImage2DInt(texture2d<int, access::write> dst [[ texture(0
kernel void cmdClearColorImage2DUInt(texture2d<uint, access::write> dst [[ texture(0
kernel void cmdCopyBufferBytes(device uint8_t* src [[ buffer(0
kernel void cmdCopyBufferToImage3DDecompressDXTn(const device uint8_t* src [[buffer(0
kernel void cmdCopyBufferToImage3DDecompressTempBufferDXTn(const device uint8_t* src [[buffer(0
kernel void cmdCopyQueryPoolResultsToBuffer(const device VisibilityBuffer* src [[buffer(0
kernel void cmdDrawIndexedCopyIndex16Buffer(const device uint16_t* srcBuff [[buffer(0
kernel void cmdDrawIndexedCopyIndex32Buffer(const device uint32_t* srcBuff [[buffer(0
kernel void cmdDrawIndexedIndirectConvertBuffers(const device char* srcBuff [[buffer(0
kernel void cmdDrawIndexedIndirectMultiviewConvertBuffers(const device char* srcBuff [[buffer(0
kernel void cmdDrawIndirectMultiviewConvertBuffers(const device char* srcBuff [[buffer(0
kernel void cmdDrawIndirectTessConvertBuffers(const device char* srcBuff [[buffer(0
kernel void cmdFillBuffer(device uint32_t* dst [[ buffer(0
keyPath
kkkkkkkkAI
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
l 1.1 anH
l is unaH
l-value of swizzle cannot have duplicate components
l-value required
lInvocatH
lInvocatI
lResultsH
lStorageH
l_BaseVeH
l_fence
l_initiaH
l_storagH
la_symbol_ptr
lable frH
ladder_break
ladder_break = false
ladder_break = true
language == EShLangMeshNV
language == EShLangTessControl || language == EShLangGeometry || language == EShLangMeshNV
language == EShLangTessEvaluation
last case/default label not followed by statements
lastPathComponent
latten aH
layout
layout qualifier
layout qualifier can not have storage qualifiers
layout(binding=X) is required
layout(buffer_reference
layout(buffer_reference) buffer
layout(constant_id
layout(depth_greater) out float gl_FragDepth
layout(depth_less) out float gl_FragDepth
layout(passthrough) in gl_PerVertex
layout(r11f_g11f_b10f
layout(r32f
layout(r32ui
layout(rg16
layout(rg16f
layout(rg16i
layout(rg16ui
layout(rgb10_a2
layout(rgb10_a2ui
layout(rgba8
layout(rgba8i
layout(rgba8ui
layout(xfb_buffer
layout(xfb_offset
layout-id value
layoutSecondaryViewportRelativeOffset
layoutViewportRelative
layout_qualifier
layout_qualifier_id
layout_qualifier_id_list
layouts
layouts H
layoutsH
layoutsL
lbackEXTL
ldInsertH
le for tH
le too sH
le::alphH
le::blueH
le::greeH
le::none
le::zero
leConstaH
leMaskIn
le_2d_arH
le_stripH
le_stripH3K
leaveFunction
left && right
left of '[' is not of type array, matrix, or vector
left shift second child into first child
left-shift
len < maxSize
lend_equH
lend_funH
length
length() on vectors and matrices
lers areH
lessThan
lessThanEqual
lessThanH
level(0
lgamma_r
lhs_packed_type
libMoltenVK.dylib
lid SPIRH
limit oH
limitCheck
limitation
limitations
line 1
line continuation
line_strH
line_strH3
line_strip
linearH
lines_adH
lines_adH3
lines_adjacency
linkage type
lipDistaH
litImage
litImageH
literal number
literal string
literal.H
literalH
lities2KH
litiesKHH
little sH
ll,0,,4
llBufferH
llationFH
lld (%s
llocate
llu (%s
lly in MH
loat bitH
loat, inH
loat2x16
loat_fetH
local function declaration
localVariables.empty
local_siL
local_size
local_size id
local_size ids
local_size_x
local_size_x_id
local_size_y
local_size_y_id
local_size_z
local_size_z_id
localizedDescription
locatioH
location
location is too large
location on block member
location qualifier on in/out block
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
location/component/index
locationA
locationH
lock befH
lock musH
lockTexelSize
lock_layH
locked.H
lod notH
lod_clamp
logical-and
logical-or
logical-xor
logical_and_expression
logical_or_expression
logical_xor_expression
long typH
long types are not supported in buffers in MSL
loop control
loop isH
loop_header_block.merge == SPIRBlock::MergeLoop
lorWriteMaskFromVkChannelFlags
low_attrH
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4
lowp precision qualifier
ls not sH
lsLabelEH
lsMessagH
lsMessenH
lt_valueH
ltisamplH
luation.H
lushMappedMemoryRanges
lusteredH
ly in scH
ly suppoH
m @yi$@y
mIndexNVH
mPrimitiH
m_qualifH
maLocati
maLocatiu4
macOS GPU Family 1 v1
macOS GPU Family 1 v2
macOS GPU Family 1 v3
macOS GPU Family 1 v4
macOS GPU Family 2 v1
macOS Read-Write Texture Tier 2
mach_absolute_time
mach_host_self
mach_task_self
mach_timebase_info
macro expansion
mag_filtH
mag_filter::linear
mage loaH
mage2KHRH
mageSampleFootprintGradClampNV
mage_forH
mage_robH
magesKHRH
maint0H
makeAliasable
makeArraySizeId
makeCompositeConstant
makeEntryPoint
makeFpConstant
makeImageType
makeMatrixType
make_constant_null
maller tH
malloc
mandBuffH
mandPool
mangledName.compare(0, prefix.size(), prefix) == 0
mantics.H
map::at:  key not found
mapped binding out of range
mapped set out of range
mark_implicit_builtin
mark_used_as_array_length
maskrune
masks arH
master_itr != end(type_ids
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y
mat_listH
matrix constructed from matrix can only have one argument
matrix index out of range '%d
matrix mult second child into first child
matrix of
matrix or packing qualifiers can only be used on a uniform or buffer
matrix sH
matrix scale second child into first child
matrix swizzle
matrix-multiply
matrix-scale
matrix-times-vector
matrix<T, RCols, LRows> res
matrix<T, RCols, LRows> spvFMulMatrixMatrix(matrix<T, LCols, LRows> l, matrix<T, RCols, RRows> r
matrixCoH
matrixCompMult
matrix_sH
matrix_stride
mats2KHRH
maxBufferLength
maxInvocations
maxInvocationsAMD
maxInvocationsExclusiveScan
maxInvocationsExclusiveScanAMD
maxInvocationsExclusiveScanNonUniform
maxInvocationsExclusiveScanNonUniformAMD
maxInvocationsInclusiveScan
maxInvocationsInclusiveScanAMD
maxInvocationsInclusiveScanNonUniform
maxInvocationsInclusiveScanNonUniformAMD
maxInvocationsNonUniform
maxInvocationsNonUniformAMD
maxThreadgroupMemoryLength
maxThreadsPerThreadgroup
maxTotalThreadsPerThreadgroup
max_anisotropy
max_iterations
max_primH3
max_primitives
max_vertH3
max_vertices
maximum nesting depth exceeded
maximumDrawableCount
maximumDrawableCountMVK
may be removed in future release
maybe_unused
mbcntAMD
me 0 worH
median3
mediump
mediump precision qualifier
mediump vec2 unpackHalf2x16(highp uint
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord
mediump vec4 gl_SecondaryFragColorEXT;mediump vec4 gl_SecondaryFragDataEXT[gl_MaxDualSourceDrawBuffersEXT
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint
mem_flags::mem_device
mem_flags::mem_device_and_threadgroup
mem_flags::mem_none
mem_flags::mem_texture
mem_flags::mem_threadgroup
member H
member cannot contradict block
member cannot contradict block (or what block inherited from global
member of block cannot be or contain a cooperative matrix type
member of block cannot be or contain a sampler, image, or atomic_uint type
member of block cannot have a packing layout qualifier
member of nameless block was not redeclared
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
member storage qualifier cannot contradict block storage qualifier
member_type->basetype != SPIRType::Struct
member_type->basetype == SPIRType::Struct
members
memchr
memcmp
memcpy
memmove
memory
memory access
memory exhausted
memory model
memory qualifiers cannot be used on this type
memory semantics ID
memory.H
memoryAccess & MemoryAccessAlignedMask
memoryBaL
memoryBarrier
memoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
memoryBarrierWithResources:count:afterStages:beforeStages
memoryBarrierWithScope:afterStages:beforeStages
memory_cH
memory_order_relaxed
memset
memset_pattern16
ment shaH
ments2KHH
mergeLinkerObjects
mergeModes
mesh shaders
mesh view output array size must be gl_MaxMeshViewCountNV or implicitly sized
metal_H
method does not accept any arguments
metry shH
mic offsH
micCompSH
micCountH
micExchaH
mic_int6H
midpoint
min/max H
minInvocations
minInvocationsAMD
minInvocationsExclusiveScan
minInvocationsExclusiveScanAMD
minInvocationsExclusiveScanNonUniform
minInvocationsExclusiveScanNonUniformAMD
minInvocationsInclusiveScan
minInvocationsInclusiveScanAMD
minInvocationsInclusiveScanNonUniform
minInvocationsInclusiveScanNonUniformAMD
minInvocationsNonUniform
minInvocationsNonUniformAMD
min_filtH
min_filter::linear
min_iter
min_iterations
min_lod_H
min_lod_clamp
min_lod_clamp() is not supported on iOS
min_lod_clamp() is only supported in MSL 2.2+ and up on macOS
minator.H
minimum stride needed
minimumLinearTextureAlignmentForPixelFormat
minimumTextureBufferAlignmentForPixelFormat
minmax
mip filtH
mip_filtH
mip_filter::linear
mip_filter::nearest
mipmapLevelCount
mismatched statements
missing
missing #endif
missing H
missing after extension name
missing parenthesis
missing perprimitiveNV qualifier to redeclared block member
missing perviewNV qualifier to redeclared block member
missing space after macro name
missing user function; linker needs to catch that
mit a paH
mitiveID
mitiveIDH
mmandBufH
mmandPooH
mn-majorH
mod second child into first child
mod_init_func
model: %s
mory2KHRL
moryProperties
move second child to first child
mpleMask
mpleMaskH
mpleMaskH3P
mpleMaskI3L
mple_masH
mposite H
mposite.H
mpute_shH
msl_options.supports_msl_version(1, 2
multiTypeStore
multiple prototypes for same function
multiplicative_expression
multiply second child into first child
multiply32x16
must be 0, 1, 2, or 3
must be a compile-time constant
must be a constant integer expression
must be a multiple of size of first component
must be a multiple of the member's alignment
must be a positive integer
must be a power of 2
must be a scalar floating point or integer type
must be at least 1
must be followed by a header name
must be followed by macro name
must be followed by version number
must be greater than 0
must be greater than or equal to 1
must be in the range [0, 2
must be less than or equal to
must be positive
must be qualified as flat
must beH
must by followed by an integral literal
must occur first in shader
must specify 'location' to use 'component
mutableH
mvk-debug
mvk-error
mvk-info
mvk-trace] %s()%s [%llu/%llu/%s
mvk-trace] } %s
mvk-trace] } %s [%.4f ms
mvk-warn
mvkAlignByteRef
mvkFormatTypeFromMTLPixelFormat
mvkFormatTypeFromVkFormat
mvkIsPowerOfTwo(byteAlignment
mvkMTLBarrierScopeFromVkAccessFlags
mvkMTLBlendFactorFromVkBlendFactor
mvkMTLBlendOperationFromVkBlendOp
mvkMTLCPUCacheModeFromVkMemoryPropertyFlags
mvkMTLClearColorFromVkClearValue
mvkMTLClearDepthFromVkClearValue
mvkMTLClearStencilFromVkClearValue
mvkMTLColorWriteMaskFromVkChannelFlags
mvkMTLCompareFunctionFromVkCompareOp
mvkMTLCullModeFromVkCullModeFlags
mvkMTLIndexTypeFromVkIndexType
mvkMTLIndexTypeSizeInBytes
mvkMTLLoadActionFromVkAttachmentLoadOp
mvkMTLMultisampleDepthResolveFilterFromVkResolveModeFlagBits
mvkMTLMultisampleStencilResolveFilterFromVkResolveModeFlagBits
mvkMTLPixelFormatBlockTexelSize
mvkMTLPixelFormatBytesPerBlock
mvkMTLPixelFormatBytesPerLayer
mvkMTLPixelFormatBytesPerRow
mvkMTLPixelFormatBytesPerTexel
mvkMTLPixelFormatFromVkFormat
mvkMTLPixelFormatIsDepthFormat
mvkMTLPixelFormatIsPVRTCFormat
mvkMTLPixelFormatIsStencilFormat
mvkMTLPixelFormatIsSupported
mvkMTLPixelFormatName
mvkMTLPrimitiveTopologyClassFromVkPrimitiveTopology
mvkMTLPrimitiveTypeFromVkPrimitiveTopology
mvkMTLRenderStagesFromVkPipelineStageFlags
mvkMTLResourceOptions
mvkMTLSamplerAddressModeFromVkSamplerAddressMode
mvkMTLSamplerBorderColorFromVkBorderColor
mvkMTLSamplerMinMagFilterFromVkFilter
mvkMTLSamplerMipFilterFromVkSamplerMipmapMode
mvkMTLScissorRectFromVkRect2D
mvkMTLStencilOperationFromVkStencilOp
mvkMTLStepFunctionFromVkVertexInputRate
mvkMTLStorageModeFromVkMemoryPropertyFlags
mvkMTLStoreActionFromVkAttachmentStoreOp
mvkMTLTessellationPartitionModeFromSpvExecutionMode
mvkMTLTextureSwizzleChannelsFromVkComponentMapping
mvkMTLTextureSwizzleFromVkComponentSwizzle
mvkMTLTextureTypeFromVkImageType
mvkMTLTextureTypeFromVkImageViewType
mvkMTLTextureUsageFromVkImageUsageFlags
mvkMTLTriangleFillModeFromVkPolygonMode
mvkMTLVertexFormatFromVkFormat
mvkMTLVertexStepFunctionFromVkVertexInputRate
mvkMTLViewportFromVkViewport
mvkMTLWindingFromSpvExecutionMode
mvkMTLWindingFromVkFrontFace
mvkMipmapBaseSizeFromLevelSize2D
mvkMipmapBaseSizeFromLevelSize3D
mvkMipmapLevelSizeFromBaseSize2D
mvkMipmapLevelSizeFromBaseSize3D
mvkMipmapLevels
mvkMipmapLevels2D
mvkMipmapLevels3D
mvkSampleCountFromVkSampleCountFlagBits
mvkShaderStageFromVkShaderStageFlagBits
mvkVkFormatBlockTexelSize
mvkVkFormatBytesPerBlock
mvkVkFormatBytesPerLayer
mvkVkFormatBytesPerRow
mvkVkFormatBytesPerTexel
mvkVkFormatFromMTLPixelFormat
mvkVkFormatIsSupported
mvkVkFormatName
mvkVkFormatProperties
mvkVkFormatProperties(): linear %d, optimal %d, buffer %d
mvkVkImageTypeFromMTLTextureType
mvkVkImageUsageFlagsFromMTLTextureUsage
mvkVkSampleCountFlagBitsFromSampleCount
mvkVkShaderStageFlagBitsFromMVKShaderStage
n 64-bitH
n OpConsH
n array H
n bufferH
n macOS.H
n model.H
n not beH
n not suH
n supporH
n used iH
n with nH
n-fragmeH
n:l_jI
nIndex != OS_INVALID_TLS_INDEX
nMagFilterFromVkFilter
n_constaH
nalBuffeH
nalFenceH
nalSemapH
name too long
nameless block contains a member that already has a name at global scope
names beginning with "GL_" can't be (un)defined
names containing consecutive underscores are reserved
names containing consecutive underscores are reserved, and an error if version < 300
namespacH
namespace
native_cos
native_divide
native_exp
native_exp10
native_exp2
native_log
native_log10
native_log2
native_powr
native_recip
native_rsqrt
native_sin
native_sqrt
native_tan
naturalDrawableSizeMVK
nce mustH
nceCustoH
nceIndex
nceIndexH
nceIndexI
nced_layH
ncilOperationFromVkStencilOp
ncil_resH
ncrementH
nctions!H
nd aboveH
ndDebugUH
nderAreaGranularity
nderStagesFromVkPipelineStageFlags
nderpassH
ndex is H
ndex_in_H
ndex_layH
neCachesH
neLayoutL
nearest
nearest = 0
needs a literal integer
negativeH
new one!H
newBufferWithBytes:length:options
newBufferWithLength:options
newBufferWithLength:options:offset
newCaptureScopeWithCommandQueue
newCommandQueueWithMaxCommandBufferCount
newComputePipelineStateWithDescriptor:options:completionHandler
newComputePipelineStateWithFunction:completionHandler
newDepthStencilStateWithDescriptor
newEvent
newFence
newFunctionWithName
newFunctionWithName:constantValues:completionHandler
newHeapWithDescriptor
newLibraryWithData:error
newLibraryWithSource:options:completionHandler
newLibraryWithSource:options:error
newRenderPipelineStateWithDescriptor:completionHandler
newRenderPipelineStateWithDescriptor:error
newSamplerStateWithDescriptor
newSharedEvent
newTextureViewWithPixelFormat
newTextureViewWithPixelFormat:textureType:levels:slices
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle
newTextureWithDescriptor
newTextureWithDescriptor:iosurface:plane
newTextureWithDescriptor:offset
newTextureWithDescriptor:offset:bytesPerRow
nextDrawable
nextafter
ng mode.H
ng pointH
ng the cH
ng to usH
ng unaryH
ng variaH
nglesKHRH
nhanced_H
nhanced_L
niform_bH
nl_langinfo
nl_symbol_ptr
nline_unH
nly avaiH
nly suppH
nmapMemory
no declaration found for redeclaration
no longer supported in
no matching overloaded function found
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion
no qualifiers allowed for function return
no shortcircuit
no such field in structure
no-storage-format
noContraction
node is still EOpNull
node->getAsConstantUnion() && node->getAsConstantUnion()->isScalar
node->getOp
node->getType() == node->getTrueBlock() ->getAsTyped()->getType() && node->getType() == node->getFalseBlock()->getAsTyped()->getType
node->isStruct
node.getAsConstantUnion() != nullptr || node.getAsSymbolNode() != nullptr
node.getQualifier().isConstant
noinline
noinlineH
non 32-bH
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers
non-constant initializer
non-constant offset argument
non-exisH
non-finH
non-literal layout-id value
non-matching or non-convertible constant type for const initializer
non-opaque uniform variables need a layout(location=L
non-opaque uniforms outside a block
non-uniform struct contains a sampler or image
non-uniform struct contains an accelerationStructureNV
non-uniform struct contains an atomic_uint
non-void function must return a value
nonOpBuiltInCheck
non_uniform_qualifier
none = 0
nonportable when expanded from macros for preprocessor expression
nonprivate
nonuniform
nonuniformEXT
noperspeH
noperspective
norm2x16H
normalizH
normalize
not allowed before
not allowed in legacy ES
not allowed in nested scope
not allowed in this version
not allowed on block or structure members
not allowed on depth samplers in legacy ES
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
not be H
not be uH
not enoH
not enough data provided for construction
not exiH
not implemented
not reprH
not supH
not suppH
not supported
not supported for current targeted SPIR-V version
not supported for these tokens
not supported for this version or the enabled extensions
not supported in this stage
not supported with this profile
not yet H
notEqual
notEqualH
nroll anH
nsertDebH
nservatiH
nstance
nstanceAI
nstanceProcAddr
nstancedH
nstantOpH
nstructiH
nt constH
nt of opH
nt shadeH
nt type.H
ntComposH
ntFacing
ntFacingH
ntRectanH
ntStatusH
nt_blackH
nt_globaH
nt_indexH
ntation.H
ntegers H
ntegers/H
nterlockH
ntics foH
ntrypoinH
nullptr
numExts > 0
numMembers %d
num_viewH3
num_views
number of invocations must match between compilation units
numberWithBool
numberWithUnsignedInt
numeric literal too big
numeric literal too long
nversionL
o argumeH
o end a H
o modifyH
o small.H
o-pointeH
oPerspNVI
o_blocksH
oad arraH
oat16_inH
objc_alloc
objc_autorelease
objc_autoreleasePoolPop
objc_autoreleasePoolPush
objc_catlist
objc_classlist__DATA
objc_classlist__DATA_CONST
objc_classname__TEXT
objc_classrefs__DATA
objc_const
objc_data
objc_empty_cache
objc_enumerationMutation
objc_imageinfo__DATA
objc_imageinfo__DATA_CONST
objc_ivar
objc_methlist
objc_methname
objc_methtype
objc_msgSend
objc_msgSendSuper2
objc_msgSend_stret
objc_release
objc_retain
objc_selrefs
objc_superrefs__DATA
objc_sync_enter
objc_sync_exit
object.H
objectAtIndexedSubscript
objectForKeyedSubscript
objectsH
observeValueForKeyPath:ofObject:change:context
observerWithBlock
observerWithBlock:forObject:atKeyPath
obustnesH
ocation.H
ocationIH
ocationsH3P
ock termH
ock_layoH
octal literal digit too large
octal literal too big
od, b ==H
odOffsetH
odel conH
oes not H
of OpConstant ID
of buffH
of coloH
of sampH
of struH
of textH
offset
offset %d in buffer %d
offset is too large
offset" on block member
offset/align
offset/align can only be used on a uniform or buffer
offsetZeroDivisorVertexBuffers
offsets argument
ointer-tH
olResultH
olor::opH
olor::trH
oltenVKConfigurationMVK
oltenvk
olveImagH
olveImage
om ESSL H
om GLSL H
ometry_sH
omic_couH
omic_floH
omic_intH
ommandBuL
ommandPoH
ompareMaH
ompilatiH
ompute sH
ompute_sH
on ESSLH
on MSL 2H
on goes H
on iOS.H
on in MSH
on is onH
on loopsH
on operaH
on type.H
on" or "off" expected after '(' for 'debug' pragma
on" or "off" expected after '(' for 'optimize' pragma
on::midpI
onComponH
onGOOGLEH
onProperH
onUniforH
on_densiH
on_widthI
only allowed when generating SPIR-V
only allowed when using GLSL for Vulkan
only applies to block members, not blocks
only apply to images
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent/shadercallcoherent qualifier allowed
only one precision qualifier allowed
only outermost dimension of an array of arrays can be a specialization constant
only outermost dimension of an array of arrays can be implicitly sized
only suH
only supported on image with format r32f
only supported on image with format r32i or r32ui
only supported on integer images
only uniform, buffer, in, or out blocks are supported
ons cannH
ons for H
onstant H
onstant_H
onstantsH
ontrol_fH
onuniforH
onversioH
oordNV rH
oordNoPeH
oordNoPeI
ootprintH
op == spv::OpGroupFMin || op == spv::OpGroupUMin || op == spv::OpGroupSMin || op == spv::OpGroupFMax || op == spv::OpGroupUMax || op == spv::OpGroupSMax || op == spv::OpGroupFAdd || op == spv::OpGroupIAdd || op == spv::OpGroupBroadcast || op == spv::OpSubgroupReadInvocationKHR || op == spv::OpGroupFMinNonUniformAMD || op == spv::OpGroupUMinNonUniformAMD || op == spv::OpGroupSMinNonUniformAMD || op == spv::OpGroupFMaxNonUniformAMD || op == spv::OpGroupUMaxNonUniformAMD || op == spv::OpGroupSMaxNonUniformAMD || op == spv::OpGroupFAddNonUniformAMD || op == spv::OpGroupIAddNonUniformAMD
op is noH
opaque H
opcode == SpvOpConstant || opcode == SpvOpSpecConstant
opcode == static_cast<SpvOp>(thisOpcode) && wordCount == thisWordCount && "Endianness failed
opcode fH
opcodeEntry->hasResult
opcodeEntry->hasResult && "Unknown opcode: has a type but no result
opcodeEntry->hasType
opcodeEntry->numTypes >= 2
opcode_entry->hasResult
opcode_entry->hasType
opcode_entry->numTypes >= 2
ope is sH
ope_semaH
opencl1.2
opencl1.2embedded
opencl2.0
opencl2.0embedded
opencl2.1
opencl2.1embedded
opencl2.2
opencl2.2embedded
opengl4.0
opengl4.1
opengl4.2
opengl4.3
opengl4.5
operand
operand at word offset
operand_index < inst.num_operands
operands.size() == 2
operands.size() == 3
operands.size() == 4
operands.size() == idOperand.size
operatiH
operatingSystemVersion
operatioH
operation at
operativH
operator
operties
opertiesH
opertiesL
opologyClassFromVkPrimitiveTopology
optimize
optimize pragma syntax is incorrect
opy fromH
opyImageH
opying aH
or AppleH
or arrayH
or coluH
or greatH
or in SDH
or in SMH
or in SRH
or in UDH
or in UMH
or second child into first child
or subgrH
orFencesH
orSetLayH
orSetWitH
orUpdateH
orage_buH
orage_clH
orderedH
ore endiH
origin_upper_left
ormFMax.H
ormFMin.H
ormSMax.H
ormSMin.H
ormUMax.H
ormUMin.H
ormatProperties
ormat_pvH
ortCallbH
ortIndex
ortIndexH
ortMaskPH
ortabiliH
orted inH
orted onH
orted yeH
oryBarriH
oryRangeH
os_surfaH
osition H
osition_H
oss_BaseH
oss_BaseI
oss_DummH
oss_retuH
ost and H
ost_deptH
ost_querH
ot consuH
ot contiH
ot emit H
ot suppoH
ot_equalH
oupEqMas
oupGeMas
oupGtMas
oupInvocH
oupLeMas
oupLtMasI
oupSizeAH
oup_creaH
oup_posiH
oup_sizeH
oup_voteH
oups_perI
ourceLayH
out float gl_ClipDistance
out for stage outputs
out gl_MeshPerVertexNV {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];float gl_CullDistance[];perviewNV vec4 gl_PositionPerViewNV[];perviewNV float gl_ClipDistancePerViewNV[][];perviewNV float gl_CullDistancePerViewNV[][];} gl_MeshVerticesNV
out gl_PerVertex
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize
out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
out highp int gl_PrimitiveID;out highp int gl_Layer
out int  gl_ViewportMask[];out vec4 gl_SecondaryPositionNV;out int  gl_SecondaryViewportMaskNV[];out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV
out int gl_FragStencilRefARB
out int gl_PrimitiveID;out int gl_Layer
out int gl_ViewportIndex
out int gl_ViewportIndex;out int gl_Layer
out int gl_ViewportMask[];out int gl_SecondaryViewportMaskNV[];out vec4 gl_SecondaryPositionNV;out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV
out oH
out of bH
out uint gl_PrimitiveCountNV;out uint gl_PrimitiveIndicesNV[];in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex
out uint gl_TaskCountNV;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4
out vec4 gl_ClipVertex
out_type.basetype != SPIRType::Boolean
outer product
outerProH
outerProduct
output block
output blocks cannot be used in a task shader
output primitive
outputURL
outputs
outs forH
overlapping offsets at
overlapping use of location
overloaded functions must have the same parameter precision qualifiers for argument
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same return type
override_coverage
ow-majorH
oyBufferH
oyDeviceH
p >= EpqNone && p <= EpqHigh
p directH
p(SBRC
p(SBRCYA`=A`-AUA`'A
p0p p pH
p6ht@9h
p@pPpPpX
pElect()H
pFunctionFromVkVertexInputRate
pHphphp
pMaxSizeH
pXphphp
pYCWBW0
p[A\A^A
p\\dpd\8dddpx
p_ballotH
p_size_iH
p_type->parent_type
p`ppppp
p`ppppp`p
pabilitiH
packDoubH
packDouble2x32
packFloaI
packFloat2x16
packHalf2x16
packHalfH
packInt2H
packInt2I
packInt2x16
packInt2x32
packInt4H
packInt4I
packInt4x16
packSnorH
packSnorm2x16
packSnorm4x8
packUint2x16
packUint2x32
packUint4x16
packUintH
packUintI
packUnorH
packUnorm2x16
packUnorm4x8
pack_float_to_snorm2x16
pack_float_to_snorm4x8
pack_float_to_unorm2x16
pack_float_to_unorm4x8
packed
packed_rm
packingH
parameter_declaration
parameter_declarator
parameter_type_specifier
params[0] = inControlPointCount
params[1] = patchCount
paren_count
paren_count == 0
parentTexture
parseImageFormatProperties
parseInstruction
parseMemoryRequirements
parseModule
parseOperand
parse_teH
parse_teL
partial_H3
partial_count
partitioH
partition
passIdx < getMultiviewMetalPassCount
passthroH
passthroH3
passthrough
patch out highp vec4 gl_BoundingBox[2
patchBasH
patchBast
patchIn
patchIndH
patchOutH
patch_control_point
patch_id
pathExtension
pattern->empty
payload number
pchainImH
pdateDescriptorSet
pe is onH
pe to noH
peel_couH3
peel_count
per-vertex output
per_gridI
per_simdH
per_simdI
per_vieH
perationH
performance
perprimitiveNV
perprimitiveNV out gl_MeshPerPrimitiveNV {int gl_PrimitiveID;int gl_Layer;int gl_ViewportIndex;int gl_ViewportMask[];perviewNV int gl_LayerPerViewNV[];perviewNV int gl_ViewportMaskPerViewNV[][];} gl_MeshPrimitivesNV
perties2L
pervertexNV
perviewNV
pes are H
pes in aH
physicalH
physical_pointer
pipelineCacheUUID: %s
pixelFormat
pixel_center_integer
pixel_center_intests
pixel_inH
pixel_interlock_ordered
pixel_interlock_unordered
pixel_local_inEXT _PLSIn
pixel_local_outEXT _PLSOut
plane0
plane0(plane0), plane1(plane1), plane2(plane2), samp(samp), ycbcr_samp(ycbcr_samp), swizzle(sw
plane0(plane0), plane1(plane1), samp(samp), ycbcr_samp(ycbcr_samp), swizzle(sw
plane0(tex), samp(samp
plane0(tex), samp(samp), swizzle(sw
plane0(tex), samp(samp), ycbcr_samp(ycbcr_samp), swizzle(sw
plane0, plane1, plane2, samp
plane0, plane1, samp, coord
planes!H
plateKHRH
pled arrH
plicit_aH
plicit_cH
plicit_vH
point_coI
point_coord
point_moH
point_moH3
point_mode
point_siH
point_siI
point_size
pointerH
pointersH
polationH
popDebugGroup
pop_front
popcount
populateMultiviewClearRects
portCallH
portMaskH
portMaskH3P
ported bH
ported iH
position, invariant
positionI
position_in_patch
posix_memalign
possibly multi-word literal integer
possibly multi-word literal number
post depth coverage
postProcess
post_coverage_coverage
post_depH
post_depth_coverage
post_depth_coverage requires early_fragment_tests
postfix_expression
potential_precise_node
pport ExH
pport InH
pported H
pported.H
ppppPP
pragma
pragma H
pragma clang diagnostic ignored "-Wmissing-braces
pragma clang diagnostic ignored "-Wmissing-prototypes
pragma clang diagnostic ignored "-Wunused-variable
pragma once
pragma use_variable_pointers
pragmaTable == nullptr
precise
precise qualifier must appear first
precise::clamp
precise::max
precise::min
precise_qualifier
precisioH
precision
precision highp float
precision highp int
precision lowp float
precision lowp int
precision mediump float
precision mediump int
precision mediump int; precision highp float
precision qualifier must appear as last qualifier
precision statement
precision_qualifier
predefined names can't be (un)defined
prefetch
preprocessor directive cannot be preceded by another token
preprocessor evaluation
presentDrawable
presentDrawable:atTime
presentedTime
pressionH
primary_expression
primitiH
primitivI
primitive culling
primitive_culling
primitive_id
printf
private
processInfo
profile.H
profileH
propagateNoContractionInOneExpression
propagateNoContractionInReturnNode
pthread_getname_np
pthread_getspecific
pthread_key_create
pthread_key_delete
pthread_mach_thread_np
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_unlock
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_self
pthread_setcancelstate
pthread_setcanceltype
pthread_setspecific
pthread_threadid_np
ptorPoolL
ptorSetsL
pu_shadeH
pushDebugGroup
push_conH
push_conH3
push_constant
push_constants
putchar
putePipelines
pyBufferH
q24@?0@"<MTLDevice>"8@"<MTLDevice>"16
qIptASE23C
qrstuvwxH
quad swaH
quad_and
quad_broH
quad_broadcast
quad_max
quad_min
quad_or
quad_product
quad_shuffle
quad_shuffle_down
quad_shuffle_up
quad_shuffle_xor
quad_sum
quad_xor
quadgroup_index_in_threadgroup
quadgroups_per_threadgroup
qualifier
qualifier == glslang::EvqIn || qualifier == glslang::EvqOut || qualifier == glslang::EvqInOut || qualifier == glslang::EvqUniform || qualifier == glslang::EvqConstReadOnly
qualifier has no effect on non-output parameters
qualifier.hasXfbOffset() && qualifier.hasXfbBuffer
queuefamilycoherent
quired fH
quiremenH
quires EH
quires GH
quires MH
r color.H
r deviceH
r image H
r layer
r matricH
r mismatH
r objectH
r range.H
r subgroH
r types.H
r value!H
r11f_g11f_b10f
r16_snorm
r1DArrayL
r2DArrayL
r8_snorm
rInvocatH
rInvocatI
rPropertH
rSizeConH
rToImageH
rValue != spv::NoResult
r_bt_601H
r_bt_709
r_fetch H
r_half_fH
r_no_perH
r_perspeH
r_undereH
r_updateH
radOffseH
radians
radr://5614542
rag_deptH
ragment H
ragment_H
ramebuffer
rametersH
ranulariH
raster_order_group(0
rations.H
rations?H
raw_buffH
raw_instH
ray flags
ray of sH
ray queries can only be initialized by using the rayQueryInitializeEXT intrinsic
ray query candidate intersection type
ray query committed intersection type
ray query intersection
ray-generation
rayPayloadEXT
rayPayloadInEXT
rayPayloadInNV
rayPayloadInNV block
rayPayloadNV
rayPayloadNV block
rayQueryConfirmIntersectionEXT
rayQueryEXT
rayQueryGenerateIntersectionEXT
rayQueryGetIntersectionBarycentricsEXT
rayQueryGetIntersectionCandidateAABBOpaqueEXT
rayQueryGetIntersectionFrontFaceEXT
rayQueryGetIntersectionGeometryIndexEXT
rayQueryGetIntersectionInstanceCustomIndexEXT
rayQueryGetIntersectionInstanceIdEXT
rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT
rayQueryGetIntersectionObjectRayDirectionEXT
rayQueryGetIntersectionObjectRayOriginEXT
rayQueryGetIntersectionObjectToWorldEXT
rayQueryGetIntersectionPrimitiveIndexEXT
rayQueryGetIntersectionTEXT
rayQueryGetIntersectionTypeEXT
rayQueryGetIntersectionWorldToObjectEXT
rayQueryGetRayFlagsEXT
rayQueryGetRayTMinEXT
rayQueryGetWorldRayDirectionEXT
rayQueryGetWorldRayOriginEXT
rayQueryInitializeEXT
rayQueryProceedEXT
rayQueryTerminateEXT
ray_indeH
rder groH
re GLSL H
re startH
re than H
reGatherH
reOffsetH
re_functH
readFirstInvocation
readFirstInvocationARB
readInvocation
readInvocationARB
readonly
readonlyH
ream geoH
rearm_dominated_variables.size() == block.dominated_variables.size
reate_reH
reation
recommendedMaxWorkingSetSize
recordnvH3K
red for H
redeclaration
redeclaration of array with a different array dimensions or sizes
redeclaration of array with a different element type
redeclaration of array with size
redeclaration only allowed for override_coverage layout
redeclaration only allowed for viewport_relative or secondary_view_offset layout
redeclaring non-array as array
redefinition
redefinition of built-in function
reference
reference conversion to uvec2
referentType != nullptr
reflect
refract
register_control_dependent_expression
registryID
relateToOperator
relational_expression
relativeH
relaxed-H
relaxed-errors
remainder
remap SH
remap arH
remapper.size() > 0
remappinH
rements2L
removeObserver:forKeyPath:context
removePrefix
remove_unity_swizzle
renderCommandEncoderWithDescriptor
renderPassDescriptor
renderTargetArrayLength
renderTargetArrayLengthMVK
renderTargetHeight
renderTargetHeightMVK
renderTargetWidth
renderTargetWidthMVK
render_tH
render_target_array_index
reorder_type_alias
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage
replicated qualifiers
reportIntersectionEXT
reportIntersectionNV
represeH
require
required extension not requested
requires SPIR-V 1.3
requires a view array dimension
requires an input_attachment_index layout qualifier
requires block, or sampler/image, or atomic-counter type
requires local_size_x and local_size_y to be multiple of two
requires total group size to be multiple of four
requires uniform or buffer storage qualifier
requiresH
requires_endian_conversion || (_.endian_converted_words.size() == 1
requires_endian_conversion || (inst_word_count == _.endian_converted_words.size
res = fma(m[i - 1], vec<T, Rows>(v[i - 1]), res
res = fma(tmp, vec<T, Cols>(v[i - 1]), res
res MetaH
res are H
res[i] = tmp
resentCapabilitiesKHR
resentKHH
resentMoH
reshCyclH
resolve
resolveDepthPlane
resolveSlice
resolveTexture
resource
resource-set-binding
resourceH
respondsToSelector
restrict
restrictH
result != spv::NoResult
result ID
result.second % (target_type.width / 8) == 0
result_type.array.size() == 1
return
return !!extract_bits(ballot[bit / 32], bit % 32, 1
return (det != 0.0f) ? (adj * (1.0f / det)) : m
return (ushort(bpc.value) << bpc_base) | (build(t...) & ~bpc_mask
return (ushort(filt) << chroma_filter_base) | (build(t...) & ~chroma_filter_mask
return (ushort(loc) << x_chroma_off_base) | (build(t...) & ~x_chroma_off_mask
return (ushort(loc) << y_chroma_off_base) | (build(t...) & ~y_chroma_off_mask
return (ushort(model) << ycbcr_model_base) | (build(t...) & ~ycbcr_model_mask
return (ushort(range) << ycbcr_range_base) | (build(t...) & ~ycbcr_range_mask
return (ushort(res) << resolution_base) | (build(t...) & ~resolution_mask
return 0
return 1
return T(0
return a1 * b2 - b1 * a2
return a1 * spvDet2x2(b2, b3, c2, c3) - b1 * spvDet2x2(a2, a3, c2, c3) + c1 * spvDet2x2(a2, a3, b2, b3
return c
return ccOut
return d * T(0.01745329251
return elements[pos
return eta * i - (eta * NoI + sqrt(k)) * n
return float3(u, v, CubeFace
return fma(T(1), l, r
return fma(l, r, T(0
return i * nref < T(0) ? n : -n
return i - T(2) * i * n * n
return plane0.gather(samp, coord, offset, c
return plane0.read(coord, lod
return plane0.sample(samp, coord, b, min_lod, offset
return plane0.sample(samp, coord, grad, min_lod, offset
return plane0.sample(samp, coord, offset
return plane0.sample(samp, coord, options, offset
return plane0.sample(samp, coord, spvForward<LodOptions>(options
return popcount(ballot.x) + popcount(ballot.y) + popcount(ballot.z) + popcount(ballot.w
return r * T(57.2957795131
return res
return rgba
return s
return select(128 - (clz(ballot.w) + 1), select(96 - (clz(ballot.z) + 1), select(64 - (clz(ballot.y) + 1), select(32 - (clz(ballot.x) + 1), uint(-1), ballot.x == 0), ballot.y == 0), ballot.z == 0), ballot.w == 0
return select(clz(T(0)) - (clz(v) + T(1)), T(-1), v == T(0
return select(clz(T(0)) - (clz(x) + T(1)), T(-1), x == T(0
return select(ctz(ballot.x), select(32 + ctz(ballot.y), select(64 + ctz(ballot.z), select(96 + ctz(ballot.w), uint(-1), ballot.w == 0), ballot.z == 0), ballot.y == 0), ballot.x == 0
return select(ctz(x), T(-1), x == T(0
return select(select(select(x, T(0), x == T(0)), T(1), x > T(0)), T(-1), x < T(0
return simd_all(value == simd_broadcast_first(value
return simd_all(value) || !simd_any(value
return spvChromaFilter((val & chroma_filter_mask) >> chroma_filter_base
return spvChromaReconstructLinear420XCositedEvenYCositedEven
return spvChromaReconstructLinear420XCositedEvenYMidpoint
return spvChromaReconstructLinear420XMidpointYCositedEven
return spvChromaReconstructLinear420XMidpointYMidpoint
return spvChromaReconstructLinear422CositedEven
return spvChromaReconstructLinear422Midpoint
return spvChromaReconstructNearest(plane0, plane1, plane2, samp, coord
return spvChromaReconstructNearest(plane0, plane1, samp, coord, spvForward<LodOptions>(options
return spvConvertYCbCrBT2020(s
return spvConvertYCbCrBT601(s
return spvConvertYCbCrBT709(s
return spvFormatResolution((val & resolution_mask) >> resolution_base
return spvGatherSwizzle(plane0, samp, swizzle, c, coord, offset
return spvSubgroupBallotBitCount(ballot & mask
return spvTextureSwizzle(plane0.sample(samp, coord, offset), swizzle
return spvTextureSwizzle(plane0.sample(samp, coord, options, offset), swizzle
return spvTextureSwizzle(vec<T, 4>(x, 0, 0, 1), s).x
return spvXChromaLocation((val & x_chroma_off_mask) >> x_chroma_off_base
return spvYCbCrModelConversion((val & ycbcr_model_mask) >> ycbcr_model_base
return spvYCbCrRange((val & ycbcr_range_mask) >> ycbcr_range_base
return spvYChromaLocation((val & y_chroma_off_mask) >> y_chroma_off_base
return static_cast<thread T&&>(x
return t.gather(s, spvForward<Ts>(params)..., component::w
return t.gather(s, spvForward<Ts>(params)..., component::x
return t.gather(s, spvForward<Ts>(params)..., component::y
return t.gather(s, spvForward<Ts>(params)..., component::z
return t.gather_compare(s, spvForward<Ts>(params
return tH
return tex.sample(ce_sampler, varyings.v_texCoord%@%@, level(subRez.lod
return uint2(tc
return uint4((uint)((simd_vote::vote_t)vote & 0xFFFFFFFF), (uint)(((simd_vote::vote_t)vote >> 32) & 0xFFFFFFFF), 0, 0
return varyings
return varyings.v_fragColor * texture.sample(sampler, varyings.v_texCoord
return vec<T, 4>(0, 0, 0, 0
return vec<T, 4>(1, 1, 1, 1
return vec<T, 4>(spvGetSwizzle(x, x.r, spvSwizzle((s >> 0) & 0xFF)), spvGetSwizzle(x, x.g, spvSwizzle((s >> 8) & 0xFF)), spvGetSwizzle(x, x.b, spvSwizzle((s >> 16) & 0xFF)), spvGetSwizzle(x, x.a, spvSwizzle((s >> 24) & 0xFF
return x
return x - y * floor(x / y
return x.a
return x.b
return x.g
return x.r
return ycbcr
return_node->getFlowOp() == glslang::EOpReturn && return_node->getExpression
reverse_bits
rewriteAsCanonicalUnreachableContinue
rewriteAsCanonicalUnreachableMerge
rfaceEXTH
rfaceMVKH
rg16_snorm
rg8_snorm
rgb10_a2
rgb10_a2ui
rgb_identity = 0
rgba.a = ycbcr.a
rgba.rgb = vec<T, 3>(spvBT2020Factors * ycbcr.gbr
rgba.rgb = vec<T, 3>(spvBT601Factors * ycbcr.gbr
rgba.rgb = vec<T, 3>(spvBT709Factors * ycbcr.gbr
rgba16_snorm
rgba16f
rgba16i
rgba16ui
rgba32f
rgba32i
rgba32ui
rgba8_snorm
rgba8ui
rhY3n4TA5
rhs.unionArray->size() == unionArray->size
riables.H
riant wiH
ric_coorH
rics areH
rics notH
right shift second child into first child
right-shift
right.referentType != nullptr
rimitiveH
rimitiveT
ringsMVKH
rintfEXTH3P
riteMaskH
riteTimestamp
rithmetiH
river_prH
rkGroups
rkGroupsH
rmatPropH
rminatedH
rn_valueH
roadcastH
rojGradOH
rojLodOfH
rojOffseH
ross_BasH
roundEveH
roundEven
roundEven supported only in ESSL 300 and GLSL 130 and up
roup opeH
roupSize
roupSizeH
row_majoH
row_majoH3
row_major
royEventH
royFenceH
royImageH
rpath/libMoltenVK.dylib
rray layH
rray of H
rrayStriH
rray_objH
rrays_ofH
rrectly H
rrently.H
rrierAtoH
rrierBufH
rrierImaH
rrierShaH
rspNV reH
rt_arrayH
rted in H
rted on H
rties2KHH
rtiesKHRL
rtitioneH
rts quadH
runtime-sized array of
runtimeH
runtimearr
ryFeaturH
ryLod isH
ryPoolReH
ryRangesH
ryViewportMaskNVgl_SecondaryViewondaryPositionNVgl_SecondaryPosiewNV
rycentriH
s     subgroupAdd(%s
s     subgroupAnd(%s
s     subgroupBroadcast(%s, uint
s     subgroupBroadcastFirst(%s
s     subgroupClusteredAdd(%s, uint
s     subgroupClusteredAnd(%s, uint
s     subgroupClusteredMax(%s, uint
s     subgroupClusteredMin(%s, uint
s     subgroupClusteredMul(%s, uint
s     subgroupClusteredOr(%s, uint
s     subgroupClusteredXor(%s, uint
s     subgroupExclusiveAdd(%s
s     subgroupExclusiveAnd(%s
s     subgroupExclusiveMax(%s
s     subgroupExclusiveMin(%s
s     subgroupExclusiveMul(%s
s     subgroupExclusiveOr(%s
s     subgroupExclusiveXor(%s
s     subgroupInclusiveAdd(%s
s     subgroupInclusiveAnd(%s
s     subgroupInclusiveMax(%s
s     subgroupInclusiveMin(%s
s     subgroupInclusiveMul(%s
s     subgroupInclusiveOr(%s
s     subgroupInclusiveXor(%s
s     subgroupMax(%s
s     subgroupMin(%s
s     subgroupMul(%s
s     subgroupOr(%s
s     subgroupPartitionedAddNV(%s, uvec4 ballot
s     subgroupPartitionedAndNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveAddNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveAndNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveMaxNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveMinNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveMulNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveOrNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveXorNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveAddNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveAndNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveMaxNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveMinNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveMulNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveOrNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveXorNV(%s, uvec4 ballot
s     subgroupPartitionedMaxNV(%s, uvec4 ballot
s     subgroupPartitionedMinNV(%s, uvec4 ballot
s     subgroupPartitionedMulNV(%s, uvec4 ballot
s     subgroupPartitionedOrNV(%s, uvec4 ballot
s     subgroupPartitionedXorNV(%s, uvec4 ballot
s     subgroupQuadBroadcast(%s, uint
s     subgroupQuadSwapDiagonal(%s
s     subgroupQuadSwapHorizontal(%s
s     subgroupQuadSwapVertical(%s
s     subgroupShuffle(%s, uint
s     subgroupShuffleDown(%s, uint delta
s     subgroupShuffleUp(%s, uint delta
s     subgroupShuffleXor(%s, uint
s     subgroupXor(%s
s 1, 2, H
s <= size
s = spvExpandITUFullRange(s, ycbcr_samp.get_bpc
s = spvExpandITUNarrowRange(s, ycbcr_samp.get_bpc
s are noH
s are onH
s compilation succeeded with warnings (Error code %li
s compile failed (Error code %li
s compile occurred already in this instance. Instances of %s should only be used for a single compile activity
s failed (Error code %li
s in MSLH
s includH
s is notH
s not supported or substitutable on this device
s not teH
s of samH
s of texH
s platfoH
s profile; removed in version %d
s quad-gH
s requirH
s shader requires %s buffer, but there is no free slot to pass it
s succeeded with warnings (Error code %li
s%s%s avg: %.3f ms, latest: %.3f ms, min: %.3f ms, max: %.3f ms, count: %d
s(): On-screen rendering requires a layer of type CAMetalLayer
s(): The image is using Metal format %s as a substitute for Vulkan format %s. Since the pixel size is different, content for the image cannot be copied to or from a buffer
s(): You are not calling this function from the main thread. %s should only be accessed from the main thread. When using this function outside the main thread, consider passing the CAMetalLayer itself in %s::pView, instead of the %s
s8[A\A^A
s: offset %d, type %x, size %d, index %d, binding %d, stages %d
sToDoublI
sToFloat
sToFloatL
sYE;|$pr
s_abs_diff
s_add_sat
s_adjaceH
s_clamp
s_mad24
s_mad_hi
s_mad_sat
s_mul24
s_mul_hi
s_rhadd
s_spec_cH
s_sub_sat
s_upsample
sameInnerArrayness
sameReferenceType
sample
sample mask override coverage
sampleCount
sample_iH
sample_iI
sample_id
sample_interlock_ordered
sample_interlock_unordered
sample_mI
sample_mask
sample_no_perspective
sample_perspective
sampled == 1 || sampled == 2
sampler
sampler H
sampler addressing mode
sampler binding not less than gl_MaxCombinedTextureImageUnits
sampler constructor must appear at point of use
sampler filter mode
sampler samp
sampler samp, spvYCbCrSampler ycbcr_samp, uint sw) thread
sampler sampler  [[ sampler(0
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a *texture* type matching the dimensionality and sampled type of the constructor
sampler-constructor first argument must be a scalar *texture* type
sampler-constructor requires two arguments
sampler-constructor second argument must be a scalar sampler or samplerShadow
sampler.ms
sampler/image
sampler/image types can only be used in uniform variables or function parameters
sampler/texture/image requires layout(binding=X
sampler1D
sampler1DArray
sampler1DArrayShadow
sampler1DShadow
sampler1H
sampler2D
sampler2DArray
sampler2DArrayShadow
sampler2DMS
sampler2DMSArray
sampler2DRect
sampler2DRectShadow
sampler2DShadow
sampler2H
sampler3D
sampler3DRect
sampler3H
samplerBH
samplerBuffer
samplerCH
samplerCube
samplerCubeArray
samplerCubeArrayShadow
samplerCubeShadow
samplerExternal2DY2YEXT
samplerExternalOES
samplerH
samplerShadow
samplers and atomic_uints cannot be output parameters
samplersH
saturate
saturateH
says it has
scalar block layout
scalar integer expression required
scalar swizzle
scope ID
scriptor
scriptorH
scriptorSetLayoutSupport
se 64-biH
se ArrayH
se EXT_sH
se more H
se texelH
seIOSurfaceMVK
seVertex
seVertexI
se_size.H
secondary_view_offset
sed outsH
select
selecting output stream
selection control
selection_rest_statement
selection_statement
selection_statement_nonattributed
selectoH
semEqual and semUnequal must either both include gl_SemanticsVolatile or neither
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
semaphorL
separate_images
separate_samplers
seq.size() == qual.size() || qual.empty
sert opcH
set is too large
set set.H
setAccessChainLValue
setAlphaBlendOperation
setAlphaToCoverageEnabled
setAlphaToOneEnabled
setArrayLength
setArrayVariablyIndexed
setBackFaceStencil
setBlendColorRed:green:blue:alpha
setBlendingEnabled
setBorderColor
setBorderColorMVK
setBuffer:offset:atIndex
setBufferIndex
setBufferOffset:atIndex
setBytes:length:atIndex
setCaptureObject
setClearColor
setClearDepth
setClearStencil
setColorStoreAction:atIndex
setColorspace
setColorspaceNameMVK
setCompareFunction
setCompareFunctionMVK
setComputeFunction
setComputePipelineState
setConstantValue:type:atIndex
setCpuCacheMode
setCullMode
setDefaultCaptureScope
setDefaultRasterSampleCount
setDefined
setDepth
setDepthAttachmentPixelFormat
setDepthBias:slopeScale:clamp
setDepthClipMode
setDepthCompareFunction
setDepthFailureOperation
setDepthPlane
setDepthResolveFilter
setDepthResolveFilterMVK
setDepthStencilPassOperation
setDepthStencilState
setDepthStoreAction
setDepthWriteEnabled
setDestination
setDestinationAlphaBlendFactor
setDestinationRGBBlendFactor
setDevice
setDimSize
setDisplaySyncEnabled
setDisplaySyncEnabledMVK
setDrawableSize
setEDRMetadata
setEventH
setExtensions
setFormat
setFragmentBuffer:offset:atIndex
setFragmentBytes:length:atIndex
setFragmentFunction
setFragmentSamplerState:atIndex
setFragmentTexture:atIndex
setFramebufferOnly
setFromSignUnbiasedExponentAndNormalizedSignificand
setFrontFaceStencil
setFrontFacingWinding
setGLSLE
setHazardTrackingMode
setHeight
setIllegalImplicitThis
setImmediateOperand
setImplicitThis
setIndexBufferIndex
setIndexType
setInput
setInputPrimitiveTopology
setInputPrimitiveTopologyMVK
setLabel
setLanguageVersion
setLayoutQualifier
setLevel
setLoadAction
setLodMaxClamp
setLodMinClamp
setMagFilter
setMagnificationFilter
setMaxAnisotropy
setMaxTessellationFactor
setMaximumDrawableCount
setMaximumDrawableCountMVK
setMemberExtensions
setMinFilter
setMipFilter
setMipmapLevelCount
setNormalizedCoordinates
setNumericTypeInfoForType
setOffset
setOpaque
setOutputURL
setPixelFormat
setPragmaTable
setPrototyped
setPurgeableState
setRAddressMode
setRasterizationEnabled
setReadMask
setRenderPipelineState
setRenderTargetArrayLength
setRenderTargetArrayLengthMVK
setRenderTargetHeight
setRenderTargetHeightMVK
setRenderTargetWidth
setRenderTargetWidthMVK
setResolveDepthPlane
setResolveLevel
setResolveSlice
setResolveTexture
setRgbBlendOperation
setSAddressMode
setSampleCount
setSamplerState:atIndex
setScissorRect
setScissorRects:count
setSignaledValue
setSize
setSlice
setSourceAlphaBlendFactor
setSourceRGBBlendFactor
setStageInRegion
setStageInRegionWithIndirectBuffer:indirectBufferOffset
setStageInputDescriptor
setStencilAttachmentPixelFormat
setStencilCompareFunction
setStencilFailureOperation
setStencilFrontReferenceValue:backReferenceValue
setStencilReferenceValue
setStencilResolveFilter
setStencilResolveFilterMVK
setStencilStoreAction
setStepFunction
setStepRate
setStorageMode
setStorageModeMVK
setStoreAction
setStride
setStruct
setTAddressMode
setTessellationFactorBuffer:offset:instanceStride
setTessellationFactorFormat
setTessellationFactorStepFunction
setTessellationOutputWindingOrder
setTessellationPartitionMode
setTexture
setTexture:atIndex
setTextureType
setThreadGroupSizeIsMultipleOfThreadExecutionWidth
setTriangleFillMode
setType
setUsage
setUsageMVK
setVariableExtensions
setVertexBuffer:offset:atIndex
setVertexBufferOffset:atIndex
setVertexBytes:length:atIndex
setVertexDescriptor
setVertexFunction
setVertexSamplerState:atIndex
setVertexTexture:atIndex
setViewport
setViewports:count
setVisibilityResultBuffer
setVisibilityResultMode:offset
setWantsExtendedDynamicRangeContent
setWantsExtendedDynamicRangeContentMVK
setWidth
setWriteMask
sh_shadeH
shader H
shader iH
shader input/output
shader record EXT
shader record NV
shader4H
shaderReH
shaderRecordNV
shader_H
shader_iH
shader_oH
shadercallcoherent
shaderreH3
shaderrecordext
shaderrecordnv
shaders.H
shadingH
shading_rate_interlock_ordered
shading_rate_interlock_unordered
shadow1D
shadow1DGradARB
shadow1DLod
shadow1DProj
shadow1DProjGradARB
shadow1DProjLod
shadow2D
shadow2DEXT
shadow2DGradARB
shadow2DLod
shadow2DProj
shadow2DProjEXT
shadow2DProjGradARB
shadow2DProjLod
shadow2DRect
shadow2DRectGradARB
shadow2DRectProj
shadow2DRectProjGradARB
shared
sharedCaptureManager
shift-UBO-binding
shift-image-binding
shift-sampler-binding
shift-ssbo-binding
shift-texture-binding
shift-uav-binding
shift_expression
shuffle
shuffle2
shuffleH
sicalDevH
sicalDevI
sicalDevL
sicalDevt
signaledValue
simd_all
simd_and
simd_any
simd_ballot() returns a 64-bit integer-like object, but
simd_broadcast
simd_broadcast_first
simd_is_H
simd_is_first
simd_is_helper_thread
simd_is_helper_thread() is only supported on macOS
simd_is_helper_thread() requires version 2.1 on macOS
simd_max
simd_min
simd_or
simd_prefix_exclusive_product
simd_prefix_exclusive_sum
simd_prefix_exclusive_sum(1
simd_prefix_inclusive_product
simd_prefix_inclusive_sum
simd_product
simd_shuffle
simd_shuffle_down
simd_shuffle_up
simd_shuffle_xor
simd_sum
simd_sum(1
simd_vote vote = simd_ballot(value
simd_xor
simdgrouH
simdgroup_barrier
simdgroup_index_in_threadgroup
simdgroups_per_threadgroup
simple_statement
single_attribute
single_declaration
single_type_qualifier
sionStriH
sion_pacH
size > 0
size foH
size ofH
sizes != nullptr
sizes != nullptr && (int)sizes->size() > i
sizes != nullptr && sizes->size() > 0
sizes == nullptr
sizes)[i].node == nullptr
sizes->front().node == nullptr
sizes.getDimSize(d) != UnsizedArraySize
sl_shadeH
smatch bH
smearScalar
smooth
smoothstH
smoothstep
snprintf
soft loH
soline tH
sortUsingComparator
source language
source-eH
source-entrypoint
sourceOptions
spacingH
spacingH3K
sparse fH
sparseImageLoad
sparseImageLoadARB
sparseImageLoadLod
sparseImageLoadLodAMD
sparseTexel
sparseTexelFetch
sparseTexelFetchARB
sparseTexelFetchOffset
sparseTexelFetchOffsetARB
sparseTexelsResident
sparseTexelsResidentARB
sparseTexture
sparseTextureARB
sparseTextureClamp
sparseTextureClampARB
sparseTextureGather
sparseTextureGatherARB
sparseTextureGatherLod
sparseTextureGatherLodAMD
sparseTextureGatherLodOffset
sparseTextureGatherLodOffsetAMD
sparseTextureGatherLodOffsets
sparseTextureGatherLodOffsetsAMD
sparseTextureGatherOffset
sparseTextureGatherOffsetARB
sparseTextureGatherOffsets
sparseTextureGatherOffsetsARB
sparseTextureGrad
sparseTextureGradARB
sparseTextureGradClamp
sparseTextureGradClampARB
sparseTextureGradOffset
sparseTextureGradOffsetARB
sparseTextureGradOffsetClam
sparseTextureGradOffsetClampARB
sparseTextureLod
sparseTextureLodARB
sparseTextureLodOffset
sparseTextureLodOffsetARB
sparseTextureOffset
sparseTextureOffsetARB
sparseTextureOffsetClamp
sparseTextureOffsetClampARB
specialiH
specialization-constant
specialization-constant id already used
specialization-constant id is too large
specialization_constants
speciallH
specific signature of builtin mix
spectiveH
spiregg
spirv_offset_next >= spirv_offset
sprintf
spv::ExecutionMode %u is not a tessellation partition mode
spv::ExecutionMode %u is not a winding order mode
spvArrayCopy
spvBuffeH
spvBufferSizeConstants
spvChromH
spvChromaFilter get_chroma_filter() const thread
spvChromaFilter::linear
spvChromaReconstructLinear
spvChromaReconstructNearest
spvComponentBits
spvConvertYCbCrBT2020
spvConvertYCbCrBT601
spvConvertYCbCrBT709
spvCubemapTo2DArrayFace
spvDescriptorSet
spvDescriptorSetBuffer
spvDispaH
spvDispatchBase
spvDynamH
spvDynamicImageSampler
spvDynamicImageSampler requires default-constructible texture objects, which require MSL 2.0
spvDynamicOffsets
spvExpandITUFullRange
spvExpandITUNarrowRange
spvFAdd
spvFMul
spvFMulMatrixMatrix
spvFMulMatrixVector
spvFMulVectorMatrix
spvFaceForward
spvFindLSB
spvFindSMSB
spvFindUMSB
spvFormaH
spvFormatResolution get_resolution() const thread
spvFormatResolution::_420
spvFormatResolution::_422
spvForward<LodOptions>(options
spvGatherCompareSwizzle
spvGatherSwizzle
spvImage2DAtomicCoord
spvIndicH
spvIndices
spvIndirectParams[0
spvIndirectParams[1
spvIndirectParams[1] - 1) * spvIndirectParams[0
spvInstructionCopy
spvInverse2x2
spvInverse3x3
spvInverse4x4
spvMainInterlockedBody
spvOpcodeString
spvOperandIsConcrete(parsed_operand.type
spvPatchH
spvPatchOut
spvReflect
spvRefract
spvStageH
spvStageInputSize
spvSubgroupAllEqual
spvSubgroupBallot
spvSubgroupBallotBitCount
spvSubgroupBallotBitExtract
spvSubgroupBallotExclusiveBitCount
spvSubgroupBallotFindLSB
spvSubgroupBallotFindMSB
spvSubgroupBallotInclusiveBitCount
spvSwizzH
spvSwizzle::alpha
spvSwizzle::blue
spvSwizzle::green
spvSwizzle::none
spvSwizzle::one
spvSwizzle::red
spvSwizzle::zero
spvSwizzleConstants
spvTakeFirstMatchableOperand
spvTessLH
spvTessLevel
spvTexelBufferCoord
spvTextEncodeOpcode
spvTextEncodeOperand
spvTextureSwizzle
spvUnsafeArray
spvViewMH
spvViewMask
spvXChroH
spvXChromaLocation get_x_chroma_offset() const thread
spvXChromaLocation::midpoint
spvYCbCrH
spvYCbCrModelConversion get_ycbcr_model() const thread
spvYCbCrModelConversion::ycbcr_bt_2020
spvYCbCrModelConversion::ycbcr_bt_601
spvYCbCrModelConversion::ycbcr_bt_709
spvYCbCrModelConversion::ycbcr_identity
spvYCbCrRange get_ycbcr_range() const thread
spvYCbCrRange::itu_narrow
spvYCbCrSampler
spvYCbCrSampler ycbcr_samp
spvYChroH
spvYChromaLocation get_y_chroma_offset() const thread
spvYChromaLocation::midpoint
src += z * info.srcDepthStride + y * info.srcRowStride / 4 + x * blockByteCount / 4
srcImage->getMTLTextureType() == MTLTextureType3D) == (_dstImage->getMTLTextureType() == MTLTextureType3D
ss_equalH
ss_textuH
ssageEXTH
ssthrougH
stack_chk_fail
stack_chk_guard
stageInputDescriptor
stageInputOutputDescriptor
stage_in
stages must match when linking into a single stage
stanceID
stanceIDH
stanceIDH3P
stanceIDI
stant evH
stant_idH3P
startCaptureWithDescriptor:error
startCaptureWithDevice
startObservingObject:atKeyPath
starting at word
statement
statement_list
statement_no_new_scope
statement_scoped
static bool isBC1Format(VkFormat format) { return format == VK_FORMAT_BC1_RGB_UNORM_BLOCK || format == VK_FORMAT_BC1_RGB_SRGB_BLOCK || format == VK_FORMAT_BC1_RGBA_UNORM_BLOCK || format == VK_FORMAT_BC1_RGBA_SRGB_BLOCK; } static bool isBC2Format(VkFormat format) { return format == VK_FORMAT_BC2_UNORM_BLOCK || format == VK_FORMAT_BC2_SRGB_BLOCK; } static bool isBC3Format(VkFormat format) { return format == VK_FORMAT_BC3_UNORM_BLOCK || format == VK_FORMAT_BC3_SRGB_BLOCK; } static bool isSRGBFormat(VkFormat format) { return format == VK_FORMAT_BC1_RGB_SRGB_BLOCK || format == VK_FORMAT_BC1_RGBA_SRGB_BLOCK || format == VK_FORMAT_BC2_SRGB_BLOCK || format == VK_FORMAT_BC3_SRGB_BLOCK; } static void buildDXTnColourTable(uint16_t colour0, uint16_t colour1, thread float3* pColourTable, VkFormat format) { pColourTable[0] = unpack_unorm565_to_float(colour0); pColourTable[1] = unpack_unorm565_to_float(colour1); if (isBC1Format(format) && colour0 <= colour1) { pColourTable[2] = (pColourTable[0] + pColourTable[1]) / 2; pColourTable[3] = float3(0); } else { for (uint32_t i = 0; i < 2; ++i) { pColourTable[i + 2] = (2 * pColourTable[i] + pColourTable[1 - i]) / 3; } } } static void buildDXT5AlphaTable(uint8_t alpha0, uint8_t alpha1, thread float* pAlphaTable) { pAlphaTable[0] = alpha0 / 255.0f; pAlphaTable[1] = alpha1 / 255.0f; if (alpha0 > alpha1) { for (uint32_t i = 0; i < 6; ++i) { pAlphaTable[2 + i] = ((6 - i) * pAlphaTable[0] + (i + 1) * pAlphaTable[1]) / 7; } } else { for (uint32_t i = 0; i < 4; ++i) { pAlphaTable[2 + i] = ((4 - i) * pAlphaTable[0] + (i + 1) * pAlphaTable[1]) / 5; } pAlphaTable[6] = 0; pAlphaTable[7] = 1; } } static float3 sRGBCorrect(float3 colour) { return select(pow((colour + 0.055)/1.055, float3(2.4)), colour/12.92, colour <= 0.04045); } static void decompressDXTnBlock(const device void* pSrc, thread void* pDest, VkExtent2D extent, VkDeviceSize destRowPitch, VkFormat format) { const device uint32_t* pSrcBlock = (const device uint32_t *)pSrc; bool isBC1Alpha = false; float3 colourTable[4]; float alphaTable[8]; size_t alphaBits; uint32_t colourBits; if (isBC1Format(format)) { alphaBits = 0; uint16_t colour0 = pSrcBlock[0] & 0xffff; uint16_t colour1 = pSrcBlock[0] >> 16; colourBits = pSrcBlock[1]; buildDXTnColourTable(colour0, colour1, colourTable, format); if (colour0 <= colour1) { isBC1Alpha = true; } } else { alphaBits = pSrcBlock[0] | ((size_t)pSrcBlock[1] << 32); if (isBC3Format(format)) { buildDXT5AlphaTable(alphaBits & 0xff, (alphaBits >> 8) & 0xff, alphaTable); alphaBits >>= 16; } colourBits = pSrcBlock[3]; buildDXTnColourTable(pSrcBlock[2] & 0xffff, pSrcBlock[2] >> 16, colourTable, format); } for (uint32_t y = 0; y < extent.height; ++y) { thread uint32_t* pDestRow = (thread uint32_t *)((thread uint8_t *)pDest + y * destRowPitch); for (uint32_t x = 0; x < extent.width; ++x) { uint8_t colourIndex = (colourBits >> (y * 8 + x * 2)) & 0x3; float alpha; if (isBC1Format(format)) { alpha = (!isBC1Alpha || colourIndex != 3) ? 1.0f : 0.0f; } else if (isBC2Format(format)) { alpha = ((alphaBits >> (y * 16 + x * 4)) & 0xf) / 15.0f; } else { alpha = alphaTable[(alphaBits >> (y * 12 + x * 3)) & 0x7]; } float4 colour; colour.rgb = colourTable[colourIndex]; if (isSRGBFormat(format)) { colour.rgb = sRGBCorrect(colour.rgb); } colour.a = alpha; pDestRow[x] = pack_float_to_unorm4x8(colour
static const uint32_t
static constexpr ushort build
static constexpr ushort build(spvChromaFilter filt, Ts... t
static constexpr ushort build(spvComponentBits bpc, Ts... t
static constexpr ushort build(spvFormatResolution res, Ts... t
static constexpr ushort build(spvXChromaLocation loc, Ts... t
static constexpr ushort build(spvYCbCrModelConversion model, Ts... t
static constexpr ushort build(spvYCbCrRange range, Ts... t
static constexpr ushort build(spvYChromaLocation loc, Ts... t
static inline __attribute__((always_inline
static_cast<uint32_t>(stage) <= 0x0000ffff && static_cast<uint32_t>(type) <= 0x0000ffff
std430 requires the buffer storage qualifier
stderrp
stdoutp
stencil
stencilAttachment
stencilResolveFilter
stencilResolveFilterMVK
stepFunction
stepRate
stereo view rendering
sthroughH3K
sticsMVKH
stimatioH
stopCapture
stopObserving
storage
storage H
storage class
storage qualifier not allowed on function parameter
storageMode
storageModeMVK
storage_qualifier
store_lH
strchr
strcmp
strcmp(getName(mtlFmt), mvkMTLPixelFormatName(mtlFmt
strcmp(getName(vkFmt), mvkVkFormatName(vkFmt
strcmp(op, "atomic_compare_exchange_weak_explicit") != 0
strcmp(op, "atomic_compare_exchange_weak_explicit") == 0
strcpy
stream
streamH
stride is too large
stride sH
string literal
stringByAppendingPathComponent
stringByAppendingPathExtension
stringByAppendingString
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringWithCapacity
stringWithFormat
stringWithUTF8String
strlcpy
strlen
strncmp
strncpy
strstr
strtod
strtoll
strtoul
strtoull
struct
struct H
struct MTLStageInRegionIndirectArguments
struct gl_DepthRangeParameters
struct gl_TextureFootprint2DNV {uvec2 anchor;uvec2 offset;uvec2 mask;uint lod;uint granularity;};struct gl_TextureFootprint3DNV {uvec3 anchor;uvec3 offset;uvec2 mask;uint lod;uint granularity;};bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintLodNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintLodNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintGradNV(sampler2D, vec2, vec2, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintGradClampNV(sampler2D, vec2, vec2, vec2, float, int, bool, out gl_TextureFootprint2DNV
struct spvComponentBits
struct spvDynamicImageSampler
struct spvUnsafeArray
struct spvYCbCrSampler
struct_H
struct_declaration
struct_declaration_list
struct_declarator
struct_declarator_list
struct_specifier
struct_type.array.empty
structs H
structurH
structure
stub_helper
style initializers
subBorrow
subRez.slice
subgroup op
subgroupAdd
subgroupAll
subgroupAllEqual
subgroupAnd
subgroupAny
subgroupBallot
subgroupBallotBitCount
subgroupBallotBitExtract
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupBallotInclusiveBitCount
subgroupBarrier
subgroupBroadcast
subgroupBroadcastFirst
subgroupClusteredAdd
subgroupClusteredAnd
subgroupClusteredMax
subgroupClusteredMin
subgroupClusteredMul
subgroupClusteredOr
subgroupClusteredXor
subgroupElect
subgroupExclusiveAdd
subgroupExclusiveAnd
subgroupExclusiveMax
subgroupExclusiveMin
subgroupExclusiveMul
subgroupExclusiveOr
subgroupExclusiveXor
subgroupH
subgroupInclusiveAdd
subgroupInclusiveAnd
subgroupInclusiveMax
subgroupInclusiveMin
subgroupInclusiveMul
subgroupInclusiveOr
subgroupInclusiveXor
subgroupInverseBallot
subgroupMax
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
subgroupMin
subgroupMul
subgroupOr
subgroupPartitionNV
subgroupPartitionedAddNV
subgroupPartitionedAndNV
subgroupPartitionedExclusiveAddNV
subgroupPartitionedExclusiveAndNV
subgroupPartitionedExclusiveMaxNV
subgroupPartitionedExclusiveMinNV
subgroupPartitionedExclusiveMulNV
subgroupPartitionedExclusiveOrNV
subgroupPartitionedExclusiveXorNV
subgroupPartitionedInclusiveAddNV
subgroupPartitionedInclusiveAndNV
subgroupPartitionedInclusiveMaxNV
subgroupPartitionedInclusiveMinNV
subgroupPartitionedInclusiveMulNV
subgroupPartitionedInclusiveOrNV
subgroupPartitionedInclusiveXorNV
subgroupPartitionedMaxNV
subgroupPartitionedMinNV
subgroupPartitionedMulNV
subgroupPartitionedOrNV
subgroupPartitionedXorNV
subgroupQuadBroadcast
subgroupQuadSwapDiagonal
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
subgroupShuffle
subgroupShuffleDown
subgroupShuffleUp
subgroupShuffleXor
subgroupXor
subgroupcoherent
subpass
subpass input
subpassInput
subpassInput was remapped, but remap_components is not set correctly
subpassInputMS
subpassLoad
subpassLoadMS
subpass_inputs
subroutiH
subroutine
substituting 'mediump
subtract
subtract second child into first child
subtractSaturate
support.H
supportH
supporteH
supports the following Metal Versions, GPU's and Feature Sets
supportsDestination
supportsFamily
supportsFeatureSet
supportsTextureSampleCount
suppress-warnings
suppressH
surface
switch
switch (c
switch (s
switch (spvSwizzle((sw >> (uint(c) * 8)) & 0xFF
switch (spvSwizzle(sw & 0xFF
switch (ycbcr_samp.get_resolution
switch (ycbcr_samp.get_x_chroma_offset
switch (ycbcr_samp.get_y_chroma_offset
switch (ycbcr_samp.get_ycbcr_model
switch (ycbcr_samp.get_ycbcr_range
switch statements
switch_statement
switch_statement_list
switch_statement_nonattributed
swizzle
swizzleH
swizzleInvocations
swizzleInvocationsAMD
swizzleInvocationsMasked
swizzleInvocationsMaskedAMD
swizzleInvocationsWithPatternAMD
swizzleTemp
swizzle[i] < oldSwizzle.size
swizzle[vecsize - 1][index
symbol != nullptr
symbol && unitSymbol
symbol->getAsVariable
symbolNode
synchronizeResource
synchronizeTexture:slice:level
syntax error
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
t == EbtReference
t D9`@u
t and ouH
t be a lH
t be theH
t block.H
t decoraH
t in an H
t of ranH
t opcodeH
t or uinH
t positiH
t procesH
t scalarH
t spec cH
t supporH
t switchH
t swizzlH
t!I9F0v
t(IcG8H
t)I9F0v#I
t,H9G0v&H
t-in-typH
t2[A^A
t8[A^A
t@I9\$0v*I
tDL9c0v*H
tD[A\A^A
tG<-uCA
tGL9{0v-H
tM[A^A
tModesKHH
tNameEXTH
tPresentH
tPropertH
tRayDireH
tRayOrigI
tResolutH
tScissorH
tSubpassH
tSupportH
tToWorld
tZ[A\A^A
t_array2H
t_depth_coveragepost_depth_covereger
t_encodiH
t_unrollH3N
table ruH
tachmentH
tal 1.1 H
tal 1.2.H
tal 2.0.H
talFeaturesMVK
tanceProH
tandard_H
tangent
tant norH
tant op.H
tantCompH
tant_defH
target
target-env opengl
target-env spirv1.1
target-env spirv1.2
target-env spirv1.3
target-env spirv1.4
target-env spirv1.5
target-env spirvUnknown
target-env vulkan1.0
target-env vulkan1.1
target-env vulkan1.2
target-env vulkanUnknown
targets.H
tart a bH
task shaders
taskNV
taskNV variables can be declared only as blocks
task_info
tatementH
tcast noH
teBufferH
teCommanH
teDescriH
teDeviceH
teMemoryH
teTimestH
te_imageH
ted befoH
ted formH
ted in EH
ted in MH
ted in lH
ted on lH
ted onlyH
ted specH
ted-builH
ted-builI
teger_coH
teger_miH
tempArg
tempReturn
templatH
template
template <typename... LodOptions
template<typename T
template<typename T, int Cols, int Rows
template<typename T, int LCols, int LRows, int RCols, int RRows
template<typename T, size_t Num
template<typename T, template<typename, access = access::sample, typename = void> class Tex, typename... Ts
template<typename T, typename E = typename enable_if<is_integral<T>::value>::type
template<typename T, typename... LodOptions
template<typename T> inline constexpr thread T&& spvForward(thread typename spvRemoveReference<T>::type& x
template<typename T> inline constexpr thread T&& spvForward(thread typename spvRemoveReference<T>::type&& x
template<typename T> struct spvRemoveReference { typedef T type
template<typename T> struct spvRemoveReference<thread T&&> { typedef T type
template<typename T> struct spvRemoveReference<thread T&> { typedef T type
template<typename Tx, typename Ty
template<typename lod_options
template<typename... LodOptions
template<typename... Ts
templateH
templateI
tenVKConL
tencilFormat
tencilImH
tencilReI
terlock_H
terminaH
terminateRayEXT
terminateRayNV
tessellH
tessellaH
tessellation control
tessellation control barrier() cannot be placed after a return from main
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main
tessellation evaluation
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
tessellation shaders
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
tessellationOutputWindingOrder
tested first
texIndex
texIndexH
texIndexI
texel offset
texelFetH
texelFetch
texelFetch without sampler was found, but no dummy sampler has been created with build_dummy_sampler_for_combined_images
texelFetchOffset
texture
texture%@<%@> tex [[texture(0
texture-rectangle sampler keyword
texture1D
texture1DArray
texture1DGradARB
texture1DLod
texture1DProj
texture1DProjGradARB
texture1DProjLod
texture1d
texture1d_array
texture2D
texture2DArray
texture2DDescriptorWithPixelFormat:width:height:mipmapped
texture2DGradARB
texture2DGradEXT
texture2DLod
texture2DLodEXT
texture2DMS
texture2DMSArray
texture2DProj
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjLod
texture2DProjLodEXT
texture2DRect
texture2DRectGradARB
texture2DRectProj
texture2DRectProjGradARB
texture2H
texture2d
texture2d<T> plane0
texture2d<T> plane1
texture2d<T> plane2
texture2d<float> texture [[ texture(0
texture2d_array
texture2d_ms
texture2d_ms_array
texture3D
texture3DGradARB
texture3DLod
texture3DProj
texture3DProjGradARB
texture3DProjLod
texture3d
texture3d<float, access::write> dest [[texture(0
textureBarrier
textureBuffer
textureBufferDescriptorWithPixelFormat:width:resourceOptions:usage
textureClamp
textureClampARB
textureCube
textureCubeArray
textureCubeGradARB
textureCubeGradEXT
textureCubeLod
textureCubeLodEXT
textureFetch
textureFetchOffset
textureFootprintClampNV
textureFootprintGradClampNV
textureFootprintGradNV
textureFootprintLodNV
textureFootprintNV
textureGH
textureGather
textureGatherLod
textureGatherLodAMD
textureGatherLodOffset
textureGatherLodOffsetAMD
textureGatherLodOffsets
textureGatherLodOffsetsAMD
textureGatherOffset
textureGatherOffsets
textureGrad
textureGradClamp
textureGradClampARB
textureGradOffset
textureGradOffsetClamp
textureGradOffsetClampARB
textureH
textureLH
textureLod
textureLod on sampler2DArrayShadow is not constant 0.0. This cannot be expressed in GLSL
textureLodOffset
textureOH
textureOffset
textureOffsetClamp
textureOffsetClampARB
texturePH
textureProj
textureProjGrad
textureProjGradOffset
textureProjLod
textureProjLodOffset
textureProjOffset
textureQH
textureQueryLOD
textureQueryLevels
textureQueryLevels not supported in ES profile
textureQueryLod
textureQueryLod not supported in ES profile
textureSH
textureSamples
textureSamples and imageSamples
textureSize
textureType
texture_buffer
texturecube
texturecube_array
textures
th coverH
th new tH
th0000000000000000000000000000
thD9`@L
thTemplaH
th_coverH
than oneH
there is no such layout identifier for this stage taking an assigned value
this == cmdEncoder->getSubpass
this exeH
thread
thread T& operator [] (size_t pos) thread
thread cH
thread const
thread()H
threadExecutionWidth
thread_eI
thread_execution_width
thread_iH
thread_index_in_quadgroup
thread_index_in_simdgroup
thread_index_in_simdgroup requires Metal 2.2 in fragment shaders
thread_index_in_threadgroup
thread_pH
thread_position_in_grid
thread_position_in_threadgroup
threadgrH
threadgrI
threadgroup
threadgroup T& operator [] (size_t pos) threadgroup
threadgroup const
threadgroup_barrier
threadgroup_barrier(mem_flags::mem_threadgroup
threadgroup_position_in_grid
threadgroups_per_grid
threads_H
threads_I
threads_per_simdgroup
threads_per_simdgroup requires Metal 2.2 in fragment shaders
tibilityH3M
tic is oH
tices isH
ties2KHRL
tilsLabeL
timeAMD
timeAMD(H
ting bloH
ting poiH
tion IO.H
tion is H
tion levH
tion reqH
tionStruH
tion_in_H
tiveIDIn
tjA9G@L
tl[A^A
tmp = fma(vec<T, RCols>(r[i][j]), l[j], tmp
tmpTypeList == nullptr || originTypeList->size() == tmpTypeList->size
tmp[j] = m[j][i - 1
to OpQuH
to unsigned integer
to_array_size
to_array_size_literal
to_function_name
to_zero_initialized_expression
token == PpAtomPaste
token pasting
tokenPaste
tolower
tomicAddH
tomicAndH
tomicMaxH
tomicMinH
tomicXorH
too large for fragment output
too large, must be less than gl_MaxGeometryOutputVertices
too large, must be less than gl_MaxMeshOutputPrimitivesNV
too large, must be less than gl_MaxMeshOutputVerticesNV
too large; see gl_MaxComputeWorkGroupSize
too large; see gl_MaxMeshWorkGroupSizeNV
too large; see gl_MaxTaskWorkGroupSizeNV
too many arguments
too many storage qualifiers
topLevelArrayStride %d
tor typeH
torSetKHH
torSetLaH
torSetWiH
torUpdatH
torage_bH
torage_mH
torsHalfH
totalDims <= 4
toupper
tput varH
traceNV
traceRayEXT
tractionH
transferAccessChainSwizzle
transform feedback qualifier
translateForcedType
translation_unit
transposH
transpose
triangle
triangle order
triangleH
triangleH3
triangle_strip
triangles
triangles_adjacency
trib_64bH
tribute(H
tribute_H
tributesH
true case
true case is null
truncated
ts in MSH
tsToDoubI
tsToFloaH
tsToFloaI
tsToInt6I
tsToUintH
tsToUintI
ttened bH
ttributeH
tu_narroH
ture_fooH
turesKHRH
tv[A\A^A
ty_subseH
type != SPV_OPERAND_TYPE_NONE
type == constant.type
type ID
type cannot have precision qualifier
type contains double or 64-bit integer; xfb_offset must be a multiple of 8
type contains half float or 16-bit integer; xfb_offset must be a multiple of 2
type conversion on return values was not explicitly allowed until version 420
type does not match, or is not convertible to, the function's return type
type forH
type in H
type miH
type must be an array
type overflows the available 4 components
type parameter
type requires declaration of default precision qualifier
type->getOpCode() == OpTypePointer
type->parent_type
type.array.empty
type.array.size() == type.array_size_literal.size
type.arraySizes != nullptr
type.basetype == SPIRType::Struct
type.columns == 1 && type.array.empty
type.getBasicType() == glslang::EbtSampler
type.getQualifier().layoutPacking == glslang::ElpNone
type.isArray
type.isReference
type.isStruct
type.storage == StorageClassPrivate || type.storage == StorageClassFunction || type.storage == StorageClassGeneric
type.vecsize >= 1 && type.vecsize <= 3
type0.parent_type != ID(0
type: %s
typeName
type_id != 0
type_name_list
type_parameter_specifier
type_parameter_specifier_list
type_parameter_specifier_opt
type_qualifier
type_specifier
type_specifier_nonarray
type_to_packed_array_stride
typedef
typedef H
typedef enum
typedef enum : uint32_t
typedef size_t VkDeviceSize
typedef struct
typenamI
types_flH
types_inL
u = 0.5 * (u/ProjectionAxis + 1
u = P.x
u = P.x >= 0 ? -P.z : P.z
u = P.z >= 0 ? P.x : -P.x
u"A;W$u
u)int16 types can only be in uniform block or buffer storage
u)int8 types can only be in uniform block or buffer storage
u,A;W$u&A
u0AWSAT
u16vec2
u16vec3
u16vec4
u32vec2
u32vec3
u32vec4
u64vec2
u64vec3
u64vec4
u6A;V8u0
u8A;Epr
uMulExtended
uZC)wbD
u_abs_diff
u_add_sat
u_clamp
u_mad24
u_mad_hi
u_mad_sat
u_mul24
u_mul_hi
u_rhadd
u_shaderH
u_sub_sat
u_upsample
uaddCarrH
uaddCarry
ubdivideH
ubeArrayH
ubeShadoH
ube_map_H
ubgroups
uble2x32H
ubmitDebugUtilsMessageEXT
ubresourceLayout
uchar value : 6
ucoopmatNV
ucoopmatNV coopMatMulAddNV(ucoopmatNV A, ucoopmatNV B, ucoopmatNV C
uct currH
uctureNVH
ueSubmitH
uedSubgrH
ueryLeveH
ueryLod H
ueryPoolH
uery_levH
uery_lodH
uffer blH
uffer tyH
uffer_obH
uffer_reH
uffer_reL
uffer_stL
ugMarkerL
ugUtilsLH
ugUtilsOL
ugh arguH
uimage1D
uimage1DArray
uimage1DH
uimage2D
uimage2DArray
uimage2DH
uimage2DMS
uimage2DMSArray
uimage2DRect
uimage3D
uimageBuH
uimageBuffer
uimageCuH
uimageCube
uimageCubeArray
uint   subgroupBallotBitCount(uvec4
uint   subgroupBallotExclusiveBitCount(uvec4
uint   subgroupBallotFindLSB(uvec4
uint   subgroupBallotFindMSB(uvec4
uint   subgroupBallotInclusiveBitCount(uvec4
uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint
uint countLeadingZeros(uint);uvec2 countLeadingZeros(uvec2);uvec3 countLeadingZeros(uvec3);uvec4 countLeadingZeros(uvec4);uint countTrailingZeros(uint);uvec2 countTrailingZeros(uvec2);uvec3 countTrailingZeros(uvec3);uvec4 countTrailingZeros(uvec4);uint absoluteDifference(int, int);uvec2 absoluteDifference(ivec2, ivec2);uvec3 absoluteDifference(ivec3, ivec3);uvec4 absoluteDifference(ivec4, ivec4);uint16_t absoluteDifference(int16_t, int16_t);u16vec2 absoluteDifference(i16vec2, i16vec2);u16vec3 absoluteDifference(i16vec3, i16vec3);u16vec4 absoluteDifference(i16vec4, i16vec4);uint64_t absoluteDifference(int64_t, int64_t);u64vec2 absoluteDifference(i64vec2, i64vec2);u64vec3 absoluteDifference(i64vec3, i64vec3);u64vec4 absoluteDifference(i64vec4, i64vec4);uint absoluteDifference(uint, uint);uvec2 absoluteDifference(uvec2, uvec2);uvec3 absoluteDifference(uvec3, uvec3);uvec4 absoluteDifference(uvec4, uvec4);uint16_t absoluteDifference(uint16_t, uint16_t);u16vec2 absoluteDifference(u16vec2, u16vec2);u16vec3 absoluteDifference(u16vec3, u16vec3);u16vec4 absoluteDifference(u16vec4, u16vec4);uint64_t absoluteDifference(uint64_t, uint64_t);u64vec2 absoluteDifference(u64vec2, u64vec2);u64vec3 absoluteDifference(u64vec3, u64vec3);u64vec4 absoluteDifference(u64vec4, u64vec4);int addSaturate(int, int);ivec2 addSaturate(ivec2, ivec2);ivec3 addSaturate(ivec3, ivec3);ivec4 addSaturate(ivec4, ivec4);int16_t addSaturate(int16_t, int16_t);i16vec2 addSaturate(i16vec2, i16vec2);i16vec3 addSaturate(i16vec3, i16vec3);i16vec4 addSaturate(i16vec4, i16vec4);int64_t addSaturate(int64_t, int64_t);i64vec2 addSaturate(i64vec2, i64vec2);i64vec3 addSaturate(i64vec3, i64vec3);i64vec4 addSaturate(i64vec4, i64vec4);uint addSaturate(uint, uint);uvec2 addSaturate(uvec2, uvec2);uvec3 addSaturate(uvec3, uvec3);uvec4 addSaturate(uvec4, uvec4);uint16_t addSaturate(uint16_t, uint16_t);u16vec2 addSaturate(u16vec2, u16vec2);u16vec3 addSaturate(u16vec3, u16vec3);u16vec4 addSaturate(u16vec4, u16vec4);uint64_t addSaturate(uint64_t, uint64_t);u64vec2 addSaturate(u64vec2, u64vec2);u64vec3 addSaturate(u64vec3, u64vec3);u64vec4 addSaturate(u64vec4, u64vec4);int subtractSaturate(int, int);ivec2 subtractSaturate(ivec2, ivec2);ivec3 subtractSaturate(ivec3, ivec3);ivec4 subtractSaturate(ivec4, ivec4);int16_t subtractSaturate(int16_t, int16_t);i16vec2 subtractSaturate(i16vec2, i16vec2);i16vec3 subtractSaturate(i16vec3, i16vec3);i16vec4 subtractSaturate(i16vec4, i16vec4);int64_t subtractSaturate(int64_t, int64_t);i64vec2 subtractSaturate(i64vec2, i64vec2);i64vec3 subtractSaturate(i64vec3, i64vec3);i64vec4 subtractSaturate(i64vec4, i64vec4);uint subtractSaturate(uint, uint);uvec2 subtractSaturate(uvec2, uvec2);uvec3 subtractSaturate(uvec3, uvec3);uvec4 subtractSaturate(uvec4, uvec4);uint16_t subtractSaturate(uint16_t, uint16_t);u16vec2 subtractSaturate(u16vec2, u16vec2);u16vec3 subtractSaturate(u16vec3, u16vec3);u16vec4 subtractSaturate(u16vec4, u16vec4);uint64_t subtractSaturate(uint64_t, uint64_t);u64vec2 subtractSaturate(u64vec2, u64vec2);u64vec3 subtractSaturate(u64vec3, u64vec3);u64vec4 subtractSaturate(u64vec4, u64vec4);int average(int, int);ivec2 average(ivec2, ivec2);ivec3 average(ivec3, ivec3);ivec4 average(ivec4, ivec4);int16_t average(int16_t, int16_t);i16vec2 average(i16vec2, i16vec2);i16vec3 average(i16vec3, i16vec3);i16vec4 average(i16vec4, i16vec4);int64_t average(int64_t, int64_t);i64vec2 average(i64vec2, i64vec2);i64vec3 average(i64vec3, i64vec3);i64vec4 average(i64vec4, i64vec4);uint average(uint, uint);uvec2 average(uvec2, uvec2);uvec3 average(uvec3, uvec3);uvec4 average(uvec4, uvec4);uint16_t average(uint16_t, uint16_t);u16vec2 average(u16vec2, u16vec2);u16vec3 average(u16vec3, u16vec3);u16vec4 average(u16vec4, u16vec4);uint64_t average(uint64_t, uint64_t);u64vec2 average(u64vec2, u64vec2);u64vec3 average(u64vec3, u64vec3);u64vec4 average(u64vec4, u64vec4);int averageRounded(int, int);ivec2 averageRounded(ivec2, ivec2);ivec3 averageRounded(ivec3, ivec3);ivec4 averageRounded(ivec4, ivec4);int16_t averageRounded(int16_t, int16_t);i16vec2 averageRounded(i16vec2, i16vec2);i16vec3 averageRounded(i16vec3, i16vec3);i16vec4 averageRounded(i16vec4, i16vec4);int64_t averageRounded(int64_t, int64_t);i64vec2 averageRounded(i64vec2, i64vec2);i64vec3 averageRounded(i64vec3, i64vec3);i64vec4 averageRounded(i64vec4, i64vec4);uint averageRounded(uint, uint);uvec2 averageRounded(uvec2, uvec2);uvec3 averageRounded(uvec3, uvec3);uvec4 averageRounded(uvec4, uvec4);uint16_t averageRounded(uint16_t, uint16_t);u16vec2 averageRounded(u16vec2, u16vec2);u16vec3 averageRounded(u16vec3, u16vec3);u16vec4 averageRounded(u16vec4, u16vec4);uint64_t averageRounded(uint64_t, uint64_t);u64vec2 averageRounded(u64vec2, u64vec2);u64vec3 averageRounded(u64vec3, u64vec3);u64vec4 averageRounded(u64vec4, u64vec4);int multiply32x16(int, int);ivec2 multiply32x16(ivec2, ivec2);ivec3 multiply32x16(ivec3, ivec3);ivec4 multiply32x16(ivec4, ivec4);uint multiply32x16(uint, uint);uvec2 multiply32x16(uvec2, uvec2);uvec3 multiply32x16(uvec3, uvec3);uvec4 multiply32x16(uvec4, uvec4
uint fragmentMaskFetchAMD(sampler2DMS,       ivec2);uint fragmentMaskFetchAMD(isampler2DMS,      ivec2);uint fragmentMaskFetchAMD(usampler2DMS,      ivec2);uint fragmentMaskFetchAMD(sampler2DMSArray,  ivec3);uint fragmentMaskFetchAMD(isampler2DMSArray, ivec3);uint fragmentMaskFetchAMD(usampler2DMSArray, ivec3);vec4  fragmentFetchAMD(sampler2DMS,       ivec2, uint);ivec4 fragmentFetchAMD(isampler2DMS,      ivec2, uint);uvec4 fragmentFetchAMD(usampler2DMS,      ivec2, uint);vec4  fragmentFetchAMD(sampler2DMSArray,  ivec3, uint);ivec4 fragmentFetchAMD(isampler2DMSArray, ivec3, uint);uvec4 fragmentFetchAMD(usampler2DMSArray, ivec3, uint
uint fragmentMaskFetchAMD(subpassInputMS);uint fragmentMaskFetchAMD(isubpassInputMS);uint fragmentMaskFetchAMD(usubpassInputMS);vec4  fragmentFetchAMD(subpassInputMS,  uint);ivec4 fragmentFetchAMD(isubpassInputMS, uint);uvec4 fragmentFetchAMD(usubpassInputMS, uint
uint i [[thread_position_in_grid
uint idx [[thread_position_in_grid
uint layer%s
uint pixels[16] = {0
uint pos [[thread_position_in_grid
uint query [[thread_position_in_grid
uint slice
uint swizzle = 0
uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4
uint x = pos.x * 4, y = pos.y * 4, z = pos.z
uint(-1
uint(1
uint(spvCubemapTo2DArrayFace
uint(ushort
uint16BiH
uint16BiI
uint16BitsToFloat16
uint16BitsToHalf
uint16_t
uint2 pos [[thread_position_in_grid
uint2 spvTexelBufferCoord(uint tc
uint2(gl_FragCoord.xy
uint3 pos [[thread_position_in_grid
uint3(0
uint3(info.offset.x + x + i, info.offset.y + y + j, info.offset.z + z
uint32_t
uint32_t count
uint32_t countHigh
uint32_t depth
uint32_t destDepthStride
uint32_t destDepthStrideHigh
uint32_t destRowStride
uint32_t destRowStrideHigh
uint32_t dstOffset
uint32_t height
uint32_t patchCount = (src.indexCount * src.instanceCount + inControlPointCount - 1) / inControlPointCount
uint32_t patchCount = (src.vertexCount * src.instanceCount + inControlPointCount - 1) / inControlPointCount
uint32_t size
uint32_t srcDepthStride
uint32_t srcDepthStrideHigh
uint32_t srcOffset
uint32_t srcRowStride
uint32_t srcRowStrideHigh
uint32_t stageInOrigin[3
uint32_t stageInSize[3
uint32_t width
uint4 mask = uint4(extract_bits(0xFFFFFFFF, 0, min(gl_SubgroupInvocationID + 1, 32u)), extract_bits(0xFFFFFFFF, 0, (uint)max((int)gl_SubgroupInvocationID + 1 - 32, 0)), uint2(0
uint4 mask = uint4(extract_bits(0xFFFFFFFF, 0, min(gl_SubgroupInvocationID, 32u)), extract_bits(0xFFFFFFFF, 0, (uint)max((int)gl_SubgroupInvocationID - 32, 0)), uint2(0
uint4(extract_bits(0xFFFFFFFF, 0, min
uint4(extract_bits(0xFFFFFFFF, min
uint64BiI
uint64BitsToDouble
uint64_t
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);   float atomicAdd(coherent volatile inout float, float);   float atomicAdd(coherent volatile inout float, float, int, int, int);  double atomicAdd(coherent volatile inout double, double);  double atomicAdd(coherent volatile inout double, double, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);   float atomicExchange(coherent volatile inout float, float);   float atomicExchange(coherent volatile inout float, float, int, int, int);  double atomicExchange(coherent volatile inout double, double);  double atomicExchange(coherent volatile inout double, double, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t atomicLoad(coherent volatile in  int64_t, int, int, int);   float atomicLoad(coherent volatile in float, int, int, int);  double atomicLoad(coherent volatile in double, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int);void atomicStore(coherent volatile out float, float, int, int, int);void atomicStore(coherent volatile out double, double, int, int, int
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4
uint64_tI
uint8_t
uintBitsH
uintBitsI
uintBitsToFloat
uintBitsToFloat(packFloat2x16
uires MSH
uires MeH
ullDistaH
ulong tyH
ulong types are not supported in buffers in MSL
ultisampH
ultisampI
ultiviewH
umerate
umulExteH
umulExtended
unary_expression
unary_operator
unavailH
uncalledH
unchIDNV
unction!H
undeclared identifier
undefined
undefined macro in expression not allowed in es profile
unexpected
unexpected initializer-list type
unexpected location
unexpected location; end of argument
unexpected location; end of replacement list
unexpected token
unexpected tokens following #ifdef directive - expected a newline
unexpected tokens following directive
unexpected type parameters
unexpected use of .length
unexpected_type
ungetch
uniform
uniform block
uniform buffer-member align
uniform gl_DepthRangeParameters gl_DepthRange
uniform initializers must be constant
uniform int SPIRV_Cross_BaseInstance
uniform int SPIRV_Cross_BaseVertex
uniform int gl_NumSamples
uniform lowp int gl_NumSamples
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB
uniform/buffer blocks require layout(binding=X
uniform_H
unimplemented GLSL op
unimplemented SPV AMD gcn shader op
unimplemented SPV AMD shader ballot op
unimplemented SPV AMD shader explicit vertex parameter op
unimplemented SPV AMD shader trinary minmax op
unimplemented ext op
unimplemented op
unknown
unknown H
unknown blend equation
unknown built-in variable
unknown glslang aggregate
unknown glslang binary operation
unknown glslang unary
unknown op
unknown operation with no arguments
unknown precision qualifier
unknown profile
unknown qualifier
unknown requalification
unknown stage
unknown swizzle selection
unknown type
unknown_I
unknown_depth_texture_type
unknown_texture_type
unknown_type
unorderH
unordereH
unordered_map::at: key not found
unpack16
unpack32
unpack8
unpackDoH
unpackDouble2x32
unpackFlI
unpackFloat2x16
unpackFloat2x16(floatBitsToUint
unpackHaH
unpackHalf2x16
unpackHalf2x16(packHalf2x16
unpackHalf2x16(packHalf2x16(vec2
unpackInH
unpackInI
unpackInt2x16
unpackInt2x32
unpackInt4x16
unpackSnH
unpackSnorm2x16
unpackSnorm4x8
unpackUiH
unpackUiI
unpackUint2x16
unpackUint2x32
unpackUint4x16
unpackUnH
unpackUnorm2x16
unpackUnorm4x8
unpack_expression_type
unpack_snorm2x16_to_float
unpack_snorm4x8_to_float
unpack_unorm2x16_to_float
unpack_unorm4x8_to_float
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4
unrolled
unsigned
unsigned integer
unsigned integer vector
unsigned literal
unsignedH
unsized
unsized array
unsized.H
unsizedH
unsupporH
unsupporI
unsupported
unsupported construction
unsupported-built-in
unsupported-built-in-type
unsupported-demote
unsupported_GLSLstd450PackDouble2x32
unsupported_GLSLstd450UnpackDouble2x32
unsupported_gradient_dimension
unterDecH
unterIncH
unwind_info
updateArraySizes
updateExtensionBehavior
updateFence
updateImplicitArraySize
updateStandaloneQualifierDefaults
updatedDrawableSizeMVK
upport iH
upport tH
upported
upportedH
ups requH
ures areH
ures2KHRH
urfaceKHR
urfaceMVL
urrent bH
us decorH
usageMVK
usampler1D
usampler1DArray
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler2DRect
usampler3D
usamplerBuffer
usamplerCube
usamplerCubeArray
usamplerH
use in H
use outH
use subH
use-variable-pointers
use-vulkan-memory-model
use_storage_buffer
use_variable_pointers
use_vulkan_memory_model
used at end of comment, but this version does not provide line continuation
used at end of comment; the following line is still part of the comment
useless application of layout qualifier
user funH
user(clip
user(loc
user(locn
user_data
ush_descH
ushort val
using ES precision qualifier keyword
using array
using early_fragment_tests
using future keyword
using future non-square matrix type keyword
using future reserved keyword
using future type keyword
using namespace metal
using point mode
using post_depth_coverage
usr/lib/libSystem.B.dylib
usr/lib/libc++.1.dylib
usr/lib/libobjc.A.dylib
ust be fH
ustness
usubBorrH
usubBorrow
usubpassInput
usubpassInputMS
utexture1D
utexture1DArray
utexture2D
utexture2DArray
utexture2DMS
utexture2DMSArray
utexture2DRect
utexture3D
utextureBuffer
utextureCube
utextureCubeArray
utside fH
uvec2 clock2x32ARB();uint64_t clockARB();uvec2 clockRealtime2x32EXT();uint64_t clockRealtimeEXT
uvec2 conversion to reference
uvec4  subgroupBallot(bool
uvec4  subgroupPartitionNV(%s
uvec4(unpackUint2x32(ballotARB
v = -P.y
v = 0.5 * (v/ProjectionAxis + 1
v = P.y >= 0 ? P.z : -P.z
v16@0:8
v16@?0@"<MTLCommandBuffer>"8
v16@?0@"<MTLDrawable>"8
v20@0:8B16
v20@0:8c16
v24@0:8@16
v24@0:8Q16
v24@0:8^{__CFString=}16
v24@?0@"<MTLComputePipelineState>"8@"NSError"16
v24@?0@"<MTLFunction>"8@"NSError"16
v24@?0@"<MTLLibrary>"8@"NSError"16
v24@?0@"<MTLRenderPipelineState>"8@"NSError"16
v32@0:8@16@24
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
v40@?0@"NSString"8@16@"NSDictionary"24^v32
v48@0:8@16@24@32^v40
vailableH
validate_member_packing_rules_msl
value is out of range
value must be 0 or 1
valueType == getTypeId(value2
variablH
variable != nullptr
variable index
variable indexing buffer block array
variable indexing fragment shader output array
variable indexing sampler array
variable indexing uniform block array
variable name expected
variableH
variable_id
variable_identifier
variables with qualifier 'const' must be initialized
variables with reference type can't have qualifier 'const
varying
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord
varyings.layer = uint(attributes.a_position.w
varyings.v_fragColor = uniforms.color
varyings.v_position = float4(attributes.a_position, 0.0, 1.0
varyings.v_position = float4(attributes.a_position.x, -attributes.a_position.y, ccIn.colors[8].r, 1.0
varyings.v_position = uniforms.mvpMtx * float4(attributes.a_position, 0.0, 1.0
varyings.v_texCoord = attributes.a_texCoord
ve no deH
ve_culliH
ve_interH
ve_rasteH
vec2 gl_PointCoord
vec2 textureQueryLod
vec2 unpackHalf2x16(highp uint
vec2(0.0), vec2(0.0
vec3(0.0), vec3(0.0
vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord
vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth
vec4 ftransform
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord
vec4 gl_FragColor
vec4 gl_Position
vec4 gl_Position;float gl_PointSize
vec4 imageLoad(readonly volatile coherent
vec4 imageLoadLodAMD(readonly volatile coherent
vec4 subpassLoad
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint
vec<T, 4> do_sample(float2 coord, LodOptions... options) const thread
vec<T, 4> gather(float2 coord, int2 offset = int2(0), component c = component::x) const thread
vec<T, 4> read(uint2 coord, uint lod = 0) const thread
vec<T, 4> rgba
vec<T, 4> s = spvTextureSwizzle(do_sample(coord, spvForward<LodOptions>(options)...), swizzle
vec<T, 4> sample(float2 coord, LodOptions... options) const thread
vec<T, 4> sample(float2 coord, bias b, min_lod_clamp min_lod, int2 offset) const thread
vec<T, 4> sample(float2 coord, gradient2d grad, min_lod_clamp min_lod, int2 offset) const thread
vec<T, 4> sample(float2 coord, int2 offset) const thread
vec<T, 4> sample(float2 coord, lod_options options, int2 offset) const thread
vec<T, 4> ycbcr = vec<T, 4>(0, 0, 0, 1
vec<T, Cols> res = vec<T, Cols>(0
vec<T, Cols> spvFMulVectorMatrix(vec<T, Rows> v, matrix<T, Cols, Rows> m
vec<T, Cols> tmp(0
vec<T, RCols> tmp(0
vec<T, Rows> res = vec<T, Rows>(0
vec<T, Rows> spvFMulMatrixVector(matrix<T, Cols, Rows> m, vec<T, Cols> v
vecsize >= 1 && vecsize <= 4
vector index out of range '%d
vector scale second child into first child
vector swizzle
vector swizzle selection out of range
vector swizzle selectors not from the same set
vector swizzle too long
vector-scale
vector-times-matrix
vector_swizzle
vectorsH
vendor-id
vendorID: %#06x
verride H
version
version not supported
version.H
version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
version: ES shaders for SPIR-V require version 310 or higher
version: compilation for SPIR-V does not support the compatibility profile
version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
version: mesh/task shaders require es profile with version 320 or above, or non-es profile with version 450 or above
version: only version 300, 310, and 320 support the es profile
version: ray tracing shaders require non-es profile with version 460 or above
version: statement must appear first in es-profile shader; before comments or newlines
version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
version: versions 300, 310, and 320 require specifying the 'es' profile
version: versions 300, 310, and 320 support only the es profile
version: versions before 150 do not allow a profile token
version:H
versionH
versionKH
versus
vertClear
vertex
vertex Varyings watermarkVertex(Attributes attributes [[stage_in
vertex VaryingsPos %@(AttributesPos attributes [[stage_in]], constant ClearColorsIn& ccIn [[buffer(0
vertex VaryingsPosTex vtxCmdBlitImage(AttributesPosTex attributes [[stage_in
vertex index
vertex input arrays
vertex input cannot be further qualified
vertex output block
vertex spacing
vertex-shader `double` type
vertex-shader `double` type input
vertex-shader array-of-array output
vertex-shader array-of-struct output
vertex-shader struct output
vertex-shader struct output containing an array
vertex-shader struct output containing structure
vertexDescriptor
vertex_i
vertex_id
vertices
verticesH9
viceMask
viceWaitIdle
view port array2
view range
viewportH
viewportI
viewport_array_index
viewport_relative
visitAggregate
visitBinary
visitBranch
visitSymbol
visitUnary
vkAcquirL
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAllocaH
vkAllocateCommandBuffers
vkAllocateDescriptorSets
vkAllocateMemory
vkAllocateMemory(): External memory requires a dedicated VkBuffer or VkImage
vkAllocateMemory(): Only external memory handle types VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLBUFFER_BIT_KHR or VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLTEXTURE_BIT_KHR are supported
vkBeginCH
vkBeginCommandBuffer
vkBindBuH
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImH
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkCmdBegH
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginQuery(): Metal does not support using the same occlusion query more than once within a single Vulkan render subpass
vkCmdBeginQuery(): The query offset value %lu is larger than the maximum offset value %lu available on this device
vkCmdBeginRenderPass
vkCmdBeginRenderPass RenderEncoder
vkCmdBeginRenderPass2KHR
vkCmdBinL
vkCmdBindDescriptorSets
vkCmdBindIndexBuffer
vkCmdBindPipeline
vkCmdBindVertexBuffers
vkCmdBliH
vkCmdBlitImage
vkCmdBlitImage RenderEncoder
vkCmdBlitImage(): Scaling or inverting depth/stencil images is not supported
vkCmdBlitImage(): Scaling or inverting to a linear destination image is not supported
vkCmdCleL
vkCmdClear%sImage(): Format %s cannot be cleared on this device
vkCmdClear%sImage(): Native 1D images cannot be cleared on this device. Consider enabling MVK_CONFIG_TEXTURE_1D_AS_2D
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearColorImage ComputeEncoder
vkCmdClearColorImage RenderEncoder
vkCmdClearDepthStencilImage
vkCmdClearDepthStencilImage RenderEncoder
vkCmdCopL
vkCmdCopyBuffer
vkCmdCopyBuffer BlitEncoder
vkCmdCopyBuffer ComputeEncoder
vkCmdCopyBufferToImage
vkCmdCopyBufferToImage BlitEncoder
vkCmdCopyBufferToImage ComputeEncoder
vkCmdCopyImage
vkCmdCopyImage BlitEncoder
vkCmdCopyImage(): Cannot copy between incompatible formats, such as formats of different pixel sizes, or between images with different sample counts
vkCmdCopyImageToBuffer
vkCmdCopyImageToBuffer BlitEncoder
vkCmdCopyImageToBuffer ComputeEncoder
vkCmdCopyQueryPoolResults
vkCmdCopyQueryPoolResults BlitEncoder
vkCmdCopyQueryPoolResults ComputeEncoder
vkCmdDebL
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDisH
vkCmdDisL
vkCmdDispatch
vkCmdDispatch ComputeEncoder
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchIndirect
vkCmdDraL
vkCmdDraw
vkCmdDraw (multiview instance count adjustment) ComputeEncoder
vkCmdDraw (vertex and tess control stages) ComputeEncoder
vkCmdDraw(): The current device does not support drawing with a non-zero base instance
vkCmdDrawIndexed
vkCmdDrawIndexed(): The current device does not support drawing with a non-zero base instance
vkCmdDrawIndexed(): The current device does not support drawing with a non-zero base vertex
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirect(): The current device does not support indirect drawing
vkCmdDrawIndexedIndirect(): The current device does not support indirect tessellated drawing
vkCmdDrawIndirect
vkCmdDrawIndirect(): The current device does not support indirect drawing
vkCmdDrawIndirect(): The current device does not support indirect tessellated drawing
vkCmdEndDebugUtilsLabelEXT
vkCmdEndH
vkCmdEndL
vkCmdEndQuery
vkCmdEndRenderPass
vkCmdEndRenderPass2KHR
vkCmdExeH
vkCmdExecuteCommands
vkCmdFilH
vkCmdFillBuffer
vkCmdFillBuffer BlitEncoder
vkCmdFillBuffer ComputeEncoder
vkCmdFillBuffer(): Buffer fill size must fit into a 32-bit unsigned integer. Fill size %llu is too large
vkCmdInsH
vkCmdInsertDebugUtilsLabelEXT
vkCmdNexH
vkCmdNextSubpass
vkCmdNextSubpass RenderEncoder
vkCmdNextSubpass2KHR
vkCmdPipH
vkCmdPipelineBarrier
vkCmdPipelineBarrier BlitEncoder
vkCmdPusH
vkCmdPushConstants
vkCmdPushDescriptorSet/vkCmdPushDescriptorSetWithTemplate(): Tried to push an immutable sampler
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCmdResL
vkCmdResetEvent
vkCmdResetQueryPool
vkCmdResetQueryPool BlitEncoder
vkCmdResolveImage
vkCmdResolveImage (copy stage) RenderEncoder
vkCmdResolveImage (expand stage) RenderEncoder
vkCmdResolveImage (resolve stage) RenderEncoder
vkCmdResolveImage(): %s cannot be used as a resolve destination on this device
vkCmdSetBlendConstants
vkCmdSetDepthBias
vkCmdSetDepthBounds
vkCmdSetDepthBounds(): The current device does not support setting depth bounds
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetEvent
vkCmdSetL
vkCmdSetLineWidth
vkCmdSetLineWidth(): The current device does not support wide lines
vkCmdSetScissor
vkCmdSetStencilCompareMask
vkCmdSetStencilReference
vkCmdSetStencilWriteMask
vkCmdSetViewport
vkCmdSett
vkCmdUpdH
vkCmdUpdateBuffer
vkCmdUpdateBuffer BlitEncoder
vkCmdWaiH
vkCmdWaitEvents
vkCmdWriH
vkCmdWriteTimestamp
vkCreateBuffer
vkCreateBuffer(): Only external memory handle type VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLBUFFER_BIT_KHR is supported
vkCreateBufferView
vkCreateCommandPool
vkCreateComputePipelines
vkCreateDebugReportCallbackEXT
vkCreateDebugUtilsMessengerEXT
vkCreateDescriptorPool
vkCreateDescriptorSetLayout
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDevice
vkCreateDevice(): Requested feature is not available on this device
vkCreateEvent
vkCreateFence
vkCreateFramebuffer
vkCreateGraphicsPipelines
vkCreateH
vkCreateImage
vkCreateImage() : Chroma-subsampled formats may only have one array layer
vkCreateImage() : If tiling is VK_IMAGE_TILING_LINEAR, arrayLayers must be 1
vkCreateImage() : If tiling is VK_IMAGE_TILING_LINEAR, format must not be a compressed format
vkCreateImage() : If tiling is VK_IMAGE_TILING_LINEAR, format must not be a depth/stencil format
vkCreateImage() : If tiling is VK_IMAGE_TILING_LINEAR, format must not be a single-plane chroma subsampled format
vkCreateImage() : If tiling is VK_IMAGE_TILING_LINEAR, imageType must be VK_IMAGE_TYPE_2D
vkCreateImage() : If tiling is VK_IMAGE_TILING_LINEAR, mipLevels must be 1
vkCreateImage() : If tiling is VK_IMAGE_TILING_LINEAR, samples must be VK_SAMPLE_COUNT_1_BIT
vkCreateImage() : Metal does not allow uncompressed views of compressed images
vkCreateImage() : Metal does not support rendering to native 1D attachments. Consider enabling MVK_CONFIG_TEXTURE_1D_AS_2D
vkCreateImage() : Metal does not support split-instance memory binding
vkCreateImage() : This device does not support multisampled array textures. Setting sample count to 1
vkCreateImage() : This device does not support rendering to array (layered) attachments
vkCreateImage() : This device does not support rendering to linear (VK_IMAGE_TILING_LINEAR) images
vkCreateImage() : This device does not support rendering to multisampled array (layered) attachments. Setting sample count to 1
vkCreateImage() : Under Metal, GBGR and BGRG images cannot use mipmaps. Setting mip levels to 1
vkCreateImage() : Under Metal, chroma subsampled formats may not be used with cube images
vkCreateImage() : Under Metal, chroma subsampled formats may only be used with 2D images
vkCreateImage() : Under Metal, compressed formats may only be used with 2D or 3D images
vkCreateImage() : Under Metal, depth/stencil formats may only be used with 2D images
vkCreateImage() : Under Metal, multisampling can only be used with a 2D image type. Setting sample count to 1
vkCreateImage() : Under Metal, multisampling cannot be used with chroma subsampled images. Setting sample count to 1
vkCreateImage() : Under Metal, multisampling cannot be used with compressed images. Setting sample count to 1
vkCreateImage() : Under Metal, native 1D images cannot use mipmaps. Setting mip levels to 1. Consider enabling MVK_CONFIG_TEXTURE_1D_AS_2D
vkCreateImage() : Under Metal, the %s compressed format may only be used with 2D images
vkCreateImage(): Only external memory handle type VK_EXTERNAL_MEMORY_HANDLE_TYPE_MTLTEXTURE_BIT_KHR is supported
vkCreateImageView
vkCreateImageView(): 2D views on 3D images can only be used as color attachments
vkCreateImageView(VkImageViewCreateInfo
vkCreateInstance
vkCreateL
vkCreateMacOSSurfaceMVK
vkCreateMetalSurfaceEXT
vkCreatePipelineCache
vkCreatePipelineLayout
vkCreateQueryPool
vkCreateQueryPool(): A maximum of %d total queries are available on this device in its current configuration. See the API notes for the MVKConfiguration.supportLargeQueryPools configuration parameter for more info
vkCreateQueryPool(): Each query pool can support a maximum of %d queries
vkCreateQueryPool: Unsupported query pool type: %d
vkCreateQueryPool: VK_QUERY_TYPE_PIPELINE_STATISTICS is not supported
vkCreateRenderPass
vkCreateRenderPass(): Attachment format %s is not supported on this device
vkCreateRenderPass(): Attachment format %s on this device does not support the VkFormat attachment capabilities required by the subpass at index %d
vkCreateRenderPass2KHR
vkCreateSampler
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateShaderModule
vkCreateShaderModule(): Shader module contains no shader code
vkCreateShaderModule(): The SPIR-V contains an invalid magic number %x
vkCreateSwapchainKHR
vkCreatet
vkDebugML
vkDebugMarkerSetObjectNameEXT
vkDebugMarkerSetObjectTagEXT
vkDebugRH
vkDebugReportMessageEXT
vkDestroH
vkDestroI
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyDebugReportCallbackEXT
vkDestroyDebugUtilsMessengerEXT
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyInstance
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderModule
vkDestroySurfaceKHR
vkDestroySwapchainKHR
vkDeviceH
vkDeviceWaitIdle
vkEndComH
vkEndCommandBuffer
vkEnumerH
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDevices
vkFlushMH
vkFlushMappedMemoryRanges
vkFreeCoH
vkFreeCommandBuffers
vkFreeDeH
vkFreeDescriptorSets
vkFreeMeH
vkFreeMemory
vkGetBufH
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetDesH
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDevH
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceMemoryCommitment
vkGetDeviceProcAddr
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetEveH
vkGetEventStatus
vkGetFenH
vkGetFenceStatus
vkGetIOSH
vkGetIOSurfaceMVK
vkGetImaH
vkGetImaL
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetInsH
vkGetInstanceProcAddr
vkGetMTLBufferMVK
vkGetMTLDeviceMVK
vkGetMTLL
vkGetMTLTextureMVK
vkGetMolH
vkGetMoltenVKConfigurationMVK
vkGetPasH
vkGetPastPresentationTimingGOOGLE
vkGetPerH
vkGetPerformanceStatisticsMVK
vkGetPhyH
vkGetPhyI
vkGetPhyL
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceImageFormatProperties2KHR(VkPhysicalDeviceImageViewSupportEXTX
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceMetalFeaturesMVK
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhyt
vkGetPipH
vkGetPipelineCacheData
vkGetQueH
vkGetQueryPoolResults
vkGetRefH
vkGetRefreshCycleDurationGOOGLE
vkGetRenH
vkGetRenderAreaGranularity
vkGetSwaH
vkGetSwapchainImagesKHR
vkGetVerH
vkGetVersionStringsMVK
vkInvaliH
vkInvalidateMappedMemoryRanges
vkMapMemH
vkMapMemory
vkMergePH
vkMergePipelineCaches
vkQueueBH
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueBindSparse(): Sparse binding is not supported
vkQueueEH
vkQueueEndDebugUtilsLabelEXT
vkQueueIH
vkQueueInsertDebugUtilsLabelEXT
vkQueuePH
vkQueuePresentKHR
vkQueuePresentKHR CommandBuffer
vkQueueSH
vkQueueSubmit
vkQueueWH
vkQueueWaitIdle
vkResetCL
vkResetCommandBuffer
vkResetCommandPool
vkResetDH
vkResetDescriptorPool
vkResetEH
vkResetEvent
vkResetFH
vkResetFences
vkResetQH
vkResetQueryPoolEXT
vkSetDebL
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetEveH
vkSetEvent
vkSetHdrH
vkSetHdrMetadataEXT
vkSetMTLH
vkSetMTLTextureMVK
vkSetMolH
vkSetMoltenVKConfigurationMVK
vkSetWorkgroupSizeMVK
vkSubmitDebugUtilsMessageEXT
vkSubmitH
vkTrimCoH
vkTrimCommandPool
vkTrimCommandPoolKHR
vkUnmapMH
vkUnmapMemory
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
vkUpdateDescriptorSets
vkUpdateDescriptorSets(): Tried to push an immutable sampler
vkUpdateH
vkUseIOSH
vkUseIOSurfaceMVK
vkUseIOSurfaceMVK() : IOSurface bytes per element %zu does not match VkImage bytes per element %d
vkUseIOSurfaceMVK() : IOSurface bytes per element %zu of plane %d does not match VkImage bytes per element %d
vkUseIOSurfaceMVK() : IOSurface element height %zu does not match VkImage element height %d
vkUseIOSurfaceMVK() : IOSurface element height %zu of plane %d does not match VkImage element height %d
vkUseIOSurfaceMVK() : IOSurface element width %zu does not match VkImage element width %d
vkUseIOSurfaceMVK() : IOSurface element width %zu of plane %d does not match VkImage element width %d
vkUseIOSurfaceMVK() : IOSurface height %zu does not match VkImage height %d
vkUseIOSurfaceMVK() : IOSurface height %zu of plane %d does not match VkImage height %d
vkUseIOSurfaceMVK() : IOSurface plane count %zu does not match VkImage plane count %lu
vkUseIOSurfaceMVK() : IOSurface width %zu does not match VkImage width %d
vkUseIOSurfaceMVK() : IOSurface width %zu of plane %d does not match VkImage width %d
vkUseIOSurfaceMVK() : IOSurfaces are not supported on this platform
vkWaitFoH
vkWaitForFences
vk_icdGetInstanceProcAddr
vk_icdGetPhysicalDeviceProcAddr
vk_icdNegotiateLoaderICDInterfaceVersion
vload_half
vload_halfn
vloada_halfn
vocationH
void EmitStreamVertex(int);void EndStreamPrimitive(int
void EmitVertex();void EndPrimitive
void barrier
void beginInvocationInterlockARB(void);void endInvocationInterlockARB(void
void controlBarrier(int, int, int, int
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent float64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void debugPrintfEXT
void executeCallableNV(uint, int);void executeCallableEXT(uint, int
void function cannot return a value
void ignoreIntersectionNV();void ignoreIntersectionEXT();void terminateRayNV();void terminateRayEXT
void imageAtomicStore(volatile coherent
void imageAtomicStore(writeonly volatile coherent
void imageStore(writeonly volatile coherent
void imageStoreLodAMD(writeonly volatile coherent
void main
void memoryBarrier
void memoryBarrier(int, int, int
void memoryBarrierAtomicCounter
void memoryBarrierBuffer
void memoryBarrierImage
void memoryBarrierShared();void groupMemoryBarrier
void rayQueryInitializeEXT(rayQueryEXT, accelerationStructureEXT, uint, uint, vec3, float, vec3, float);void rayQueryTerminateEXT(rayQueryEXT);void rayQueryGenerateIntersectionEXT(rayQueryEXT, float);void rayQueryConfirmIntersectionEXT(rayQueryEXT);bool rayQueryProceedEXT(rayQueryEXT);uint rayQueryGetIntersectionTypeEXT(rayQueryEXT, bool);float rayQueryGetRayTMinEXT(rayQueryEXT);uint rayQueryGetRayFlagsEXT(rayQueryEXT);vec3 rayQueryGetWorldRayOriginEXT(rayQueryEXT);vec3 rayQueryGetWorldRayDirectionEXT(rayQueryEXT);float rayQueryGetIntersectionTEXT(rayQueryEXT, bool);int rayQueryGetIntersectionInstanceCustomIndexEXT(rayQueryEXT, bool);int rayQueryGetIntersectionInstanceIdEXT(rayQueryEXT, bool);uint rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT(rayQueryEXT, bool);int rayQueryGetIntersectionGeometryIndexEXT(rayQueryEXT, bool);int rayQueryGetIntersectionPrimitiveIndexEXT(rayQueryEXT, bool);vec2 rayQueryGetIntersectionBarycentricsEXT(rayQueryEXT, bool);bool rayQueryGetIntersectionFrontFaceEXT(rayQueryEXT, bool);bool rayQueryGetIntersectionCandidateAABBOpaqueEXT(rayQueryEXT);vec3 rayQueryGetIntersectionObjectRayDirectionEXT(rayQueryEXT, bool);vec3 rayQueryGetIntersectionObjectRayOriginEXT(rayQueryEXT, bool);mat4x3 rayQueryGetIntersectionObjectToWorldEXT(rayQueryEXT, bool);mat4x3 rayQueryGetIntersectionWorldToObjectEXT(rayQueryEXT, bool
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool
void subgroupMemoryBarrierShared
void traceNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void traceRayEXT(accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void executeCallableNV(uint, int);void executeCallableEXT(uint, int
void writePackedPrimitiveIndices4x8NV(uint, uint
volatile
volatileH
vsnprintf
vstore_half
vstore_half_r
vstore_halfn
vstore_halfn_r
vstorea_halfn
vstorea_halfn_r
vstoren
vtxCmdBlitImage
vulkan1.0
vulkan1.1
vulkan1.1spv1.4
vulkan1.2
w) * 0.5;       // Adjust clip-space for Metal
wIndexedL
wIndirecH
wP@9hT@9
w_attribH
w_renderH
waitForFence
waitUntilCompleted
wantsExtendedDynamicRangeContent
wantsExtendedDynamicRangeContentMVK
wapchainKHR
wapchainL
warning
warningH
was notH
watermarkFragment
watermarkVertex
webgpu0
when more than one fragment shader output, all must have location qualifiers
while in source code it is
while loops not available
while(faH
while(false
width oH
with bias argument
with expression
with moH
with muH
with opH
wn. CannH
word_index < _.num_words
word_index == _.num_words
words instead
words instead of
words long
words, but found
words, but stated word count is
words, but the limit is
workgrouH
workgroup_size
workgroup_size_is_spec_constant_id
workgroupcoherent
writable
writableParam
writeInvocation
writeInvocationAMD
writePackedPrimitiveIndices4x8NV
writeonlH
writeonly
wrong number of arguments
wrong number of matrix columns
wrong number of structure members
wrong operand type
wrong operand types
wrong vector size (or rows in a matrix column
x - gl_BH
x is hanH
x is notH
x not suH
x#xxxxVg
xBuffersH
xM;|$0r
x[A\A]A^A
x_strideH
xchangeWH
xecuteCommands
xecutionI
xel_locaH
xfb layout qualifier
xfb_buffH3
xfb_buffer
xfb_offsH3
xfb_offset
xfb_strH
xfb_stream
xfb_striH3
xfb_stride
xfb_stride is too large
xfb_stride is too small to hold all buffer entries
xfb_stride must be multiple of 2 for buffer holding a half float or 16-bit integer
xfb_stride must be multiple of 4
xfb_stride must be multiple of 8 for buffer holding a double or 64-bit integer
xisting H
xplicit_L
xpress aH
xpressioH
xtended_H
xternal_L
xture_clH
xture_imH
xture_loH
xture_loI
xyzwN15MVK_spirv_cross12CompilerGLSLE
y = 1.0
y be useH
y in MSLH
y no bloH
y not suH
y-of-arrH
yBarrierH
yBufferTH
yBufferVH
yCommandH
yCommitmH
yCoordNVI
yDebugReH
yDebugUtH
yDescripH
yDescripL
yFlagsNV
yFramebuH
yImageToH
yImageViH
yInstancH
yJ(@yI
yJ4@yI
yK @yj
yK,@yj
yK8@yj
yPipelinL
yPropertH
yQueryPoH
yRenderPH
yRequireH
ySamplerH
ySemaphoH
yShaderMH
yStride H
ySurfaceH
ySwapchaH
y_requirH
y_reset
y_shaderH
y_timingH
y_tracinH
ycbcr.b = T(mix(mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)...), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 0)), ab.x), mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(0, 1)), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 1)), ab.x), ab.y).r
ycbcr.b = T(mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)...), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 0)), 0.5).r
ycbcr.b = T(mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)...), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., offs), 0.25).r
ycbcr.b = plane1.sample(samp, coord, spvForward<LodOptions>(options)...).r
ycbcr.br -= exp2(T(n-1))/(exp2(T(n))-1
ycbcr.br = (ycbcr.br * (exp2(T(n)) - 1) - ldexp(T(128), n - 8))/ldexp(T(224), n - 8
ycbcr.br = plane1.sample(samp, coord, spvForward<LodOptions>(options)...).rg
ycbcr.br = vec<T, 2>(mix(mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)...), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 0)), ab.x), mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(0, 1)), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 1)), ab.x), ab.y).rg
ycbcr.br = vec<T, 2>(mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)...), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 0)), 0.5).rg
ycbcr.br = vec<T, 2>(mix(plane1.sample(samp, coord, spvForward<LodOptions>(options)...), plane1.sample(samp, coord, spvForward<LodOptions>(options)..., offs), 0.25).rg
ycbcr.g = (ycbcr.g * (exp2(T(n)) - 1) - ldexp(T(16), n - 8))/ldexp(T(219), n - 8
ycbcr.g = plane0.sample(samp, coord, spvForward<LodOptions>(options)...).r
ycbcr.r = T(mix(mix(plane2.sample(samp, coord, spvForward<LodOptions>(options)...), plane2.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 0)), ab.x), mix(plane2.sample(samp, coord, spvForward<LodOptions>(options)..., int2(0, 1)), plane2.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 1)), ab.x), ab.y).r
ycbcr.r = T(mix(plane2.sample(samp, coord, spvForward<LodOptions>(options)...), plane2.sample(samp, coord, spvForward<LodOptions>(options)..., int2(1, 0)), 0.5).r
ycbcr.r = T(mix(plane2.sample(samp, coord, spvForward<LodOptions>(options)...), plane2.sample(samp, coord, spvForward<LodOptions>(options)..., offs), 0.25).r
ycbcr.r = plane2.sample(samp, coord, spvForward<LodOptions>(options)...).r
ycbcr_bH
ycbcr_bt_2020
ycbcr_bt_601
ycbcr_bt_709
ycbcr_iH
ycbcr_identity
ycbcr_samp.get_chroma_filter() == spvChromaFilter::nearest
yle_lineH
ype for H
ype. BogH
ypeFromVkPrimitiveTopology
ypes areH
ys make H
ytesPer
yzABCDEFH
z) + (uint
z+?u05f
zation cH
zation_cH
ze for CH
ze of OpH
ze_is_liH
zle::one
zle::redH
