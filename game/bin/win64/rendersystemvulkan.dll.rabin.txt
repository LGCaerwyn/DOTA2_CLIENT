0 0 0 0
0 0 0 255
0$ \nHG\fH
0$4*h
0,b.v002b4v608b:v<0>zB\\DzBVF
00cfg
012345678801234567880123456788,,SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS9:;<=>?@AAAAAASBCDEFGHIJKLMNOSSSSSSSPQSSSAAAAAAAAAAAASSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSRRRRRRRRRSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
0123456789
0123456789-+Ee
0123456789:;<=>?@A
0123456789:;<=>?@ABCDEFGHIJKLLMNOPQRSTUVWXY[]_`bdefhjlnprtvz
0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz
0123456789:;<=>?@ABCDEFGHIJKLMNOQPqRSTUVYZ[\\]\\]]t^_`abdciefhijklmlsnoprsts~uvwxyz
0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz
0123456789:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtwz
0123456789:H
0123456789ABCDEFabcdef-+Xx
0123456789ABCDEFabcdef-+XxPp
0123456789abcdefghijklmnopqrstuvwxyz
016llx
03256:;89=>@BDFHJ
03H\b
048<@DHLPTX\\`dhlpt
08@HPX
08@P`p
08X,t
09A0s
09B0r
09C0u6H
09C0uh
09H0uMI
09uxu
0: Bilinear, 1: Trilinear, 2: Aniso 2x, 3: Aniso 4x, 4: Aniso 8x, 5: Aniso 16x
0<4H6Q
0><[cZUg
0@8z,t\v@8z-t
0A9A0r\rH
0A^A]A
0A_A]A
0A_A^A
0A_A^A]A
0B+\f0
0CMemoryStack@@QEAA@XZ
0CStringPool_CI@@QEAA@XZ
0CTSListBase@@QEAA@XZ
0CThreadEvent@@QEAA@_N@Z
0CThreadMutex@@QEAA@PEBD@Z
0CThreadRWLock_FastRead@@QEAA@XZ
0CThreadSemaphore@@QEAA@HHPEBD_N@Z
0CUtlBuffer@@QEAA@HHH@Z
0CUtlMemoryBlockAllocator@@QEAA@HIW4RawAllocatorType_t@@@Z
0CUtlMemoryPoolBase@@QEAA@HHHW4MemoryPoolGrowType_t@@PEBDW4MemAllocAttribute_t@@@Z
0D9eP
0H+E(H
0H9B0H
0H;O@t{H
0I;_8
0I;_8t"H
0KeyValues@@QEAA@PEBDPEAVIKeyValuesSystem@@_N@Z
0Lc?H
0P266Z8D6
0X8b?~\e
0\btOM
0\btRM
0_ÉD$HH
0_ÉL$ H
0b1\v0\t
0c1\v0\t
0e1\v0\t
0ffffff
0i1\v0\t
0t\bA
0t\rE3
0t\rM
0u\bH
0w0c1\v0\t
0}0i1\v0\t
1#QNAN
1#SNAN
1.#IND
1.#INF
1.2.11
1/4 stride is too large
100s: Can not read TIFF directory
1111111111
147<?ACEGIK
16-bit  literal
16-bit arrays not supported
16-bit binary literal
16-bit hexadecimal literal
16-bit integer literal
16-bit literal
16-bit octal literal
16-bit or 32-bit
16-bit signed integer
16-bit signed integer vector
16-bit unsigned integer
16-bit unsigned integer literal
16-bit unsigned integer vector
16-bit vectors only take vector types
1:1: Tokens : ( T__18 | T__19 | T__20 | T__21 | T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | BOOLLITERAL | ID | INTEGERLITERAL | HEXINTEGERLITERAL | FLOATLITERAL | COMMENT | WS
1CMemoryStack@@QEAA@XZ
1CStringPool_CI@@QEAA@XZ
1CTSListBase@@QEAA@XZ
1CThreadEvent@@QEAA@XZ
1CThreadMutex@@QEAA@XZ
1CThreadSemaphore@@QEAA@XZ
1CUtlMemoryBlockAllocator@@QEAA@XZ
1CUtlMemoryPoolBase@@QEAA@XZ
1KeyValues@@QEAA@XZ
1\aQ\aހ\tR
1\f=(4N
1\vIcG$E
1t}fff
2 Entry points cannot share the same name and ExecutionMode
2($F4
22222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
28;=#$019
2@ZB2D0FpH J
2D9~\bu
2DRect
2DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA
2DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA0
2GG>!B
2KeyValues@@SAPEAX_K@Z
2LcJ L
2LcQ\bH
2\aPlat_ReconfigureWindow
2\bD$@H
2\bD$BH
2\f>\fL\fN\fT\f`\fb\fT\f
2\fp\v`\nP!0\n
2\rU2h\a
2\rp\f`\vP
2\tV_roundf
2]fQ\t?5
2http://crl3.digicert.com/DigiCertTrustedRootG4.crl0
2kM\b
2ȈL$lH
2ۃx( uOI
3.fozH
32-bit
32-bit signed integer
32-bit signed integer vector
32-bit signed literal
32-bit unsigned integer
32-bit unsigned integer vector
3333333
33333333H
3333D
34-&.56
3;CScs
3>N;kU
3@8s,t\f3
3AЉB؋AԉB
3Hc\f\bH
3IE̋L
3KeyValues@@SAXPEAX@Z
3KȉG\b
3\tD$ H
3\tD$ L
3\tD$(L
3\tD$0H
3\tD$0L
3\tD$0M
3\tD$8H
3\tD$@H
3\tD$@L
3\tD$LE
3\tL$PH
3d %3d %3d %3d %3d %3d %3d %3d
3è\au\v3
3ɉC\bHcC A
3ɉD$8H
3ɉL$ I
3ɉl$0D
3ɋt$P
3҉D$ H
3҉T$ 9Q
3҉T$XH
3҉T$Xff
3҉l$ H
3҉t$ H
3ۉD$HM
3ۋt$xL
4 columns of 3-component vectors of 32-bit floats
4&D(0
49HoKC
4<>\v0A
4<\au\tH
4@628
4D8t$1u
4FlH>F
4H;t$8
4HcD$`H
4L;\r
4TԄWak>E
4Z6,82
4\aPlat_RegisterModule
4\bV_GetFileExtension
4\fU4t
4\rt-A
4http://crl3.digicert.com/DigiCertAssuredIDRootCA.crl0
4u %4u %4u %4u %4u %4u %4u %4u
4ȋ\fȉL$pE
5;FJ$,XEK4
5http://cacerts.digicert.com/DigiCertTrustedRootG4.crt0C
6$8d6f
64-bit atomics require the Int64Atomics capability
64-bit binary literal
64-bit hexadecimal literal
64-bit integer
64-bit integer literal
64-bit integer vector
64-bit literal
64-bit octal literal
64-bit unsigned integer
64-bit unsigned integer literal
64-bit unsigned integer vector
64-bits unsigned integer scalar type
6;U\v~1A
6D;y ~D
6NK>\e\r
6OB,n
6\b4,2
6\b@\n2\f
6\fXO>\ntA
6^N`6bNd<fXh<jXl<nNp<rTt<vNx6
6_t);f16vec2   maxInvocationsNonUniformAMD(f16vec2);f16vec3   maxInvocationsNonUniformAMD(f16vec3);f16vec4   maxInvocationsNonUniformAMD(f16vec4);int16_t maxInvocationsNonUniformAMD(int16_t);i16vec2 maxInvocationsNonUniformAMD(i16vec2);i16vec3 maxInvocationsNonUniformAMD(i16vec3);i16vec4 maxInvocationsNonUniformAMD(i16vec4);uint16_t maxInvocationsNonUniformAMD(uint16_t);u16vec2  maxInvocationsNonUniformAMD(u16vec2);u16vec3  maxInvocationsNonUniformAMD(u16vec3);u16vec4  maxInvocationsNonUniformAMD(u16vec4);float maxInvocationsInclusiveScanNonUniformAMD(float);vec2  maxInvocationsInclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsInclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsInclusiveScanNonUniformAMD(vec4);int   maxInvocationsInclusiveScanNonUniformAMD(int);ivec2 maxInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsInclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsInclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsInclusiveScanNonUniformAMD(uvec4);double maxInvocationsInclusiveScanNonUniformAMD(double);dvec2  maxInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanNonUniformAMD(u16vec4);float maxInvocationsExclusiveScanNonUniformAMD(float);vec2  maxInvocationsExclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsExclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsExclusiveScanNonUniformAMD(vec4);int   maxInvocationsExclusiveScanNonUniformAMD(int);ivec2 maxInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsExclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsExclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsExclusiveScanNonUniformAMD(uvec4);double maxInvocationsExclusiveScanNonUniformAMD(double);dvec2  maxInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsExcl
6vec2);i16vec3 averageRounded(i16vec3, i16vec3);i16vec4 averageRounded(i16vec4, i16vec4);int64_t averageRounded(int64_t, int64_t);i64vec2 averageRounded(i64vec2, i64vec2);i64vec3 averageRounded(i64vec3, i64vec3);i64vec4 averageRounded(i64vec4, i64vec4);uint averageRounded(uint, uint);uvec2 averageRounded(uvec2, uvec2);uvec3 averageRounded(uvec3, uvec3);uvec4 averageRounded(uvec4, uvec4);uint16_t averageRounded(uint16_t, uint16_t);u16vec2 averageRounded(u16vec2, u16vec2);u16vec3 averageRounded(u16vec3, u16vec3);u16vec4 averageRounded(u16vec4, u16vec4);uint64_t averageRounded(uint64_t, uint64_t);u64vec2 averageRounded(u64vec2, u64vec2);u64vec3 averageRounded(u64vec3, u64vec3);u64vec4 averageRounded(u64vec4, u64vec4);int multiply32x16(int, int);ivec2 multiply32x16(ivec2, ivec2);ivec3 multiply32x16(ivec3, ivec3);ivec4 multiply32x16(ivec4, ivec4);uint multiply32x16(uint, uint);uvec2 multiply32x16(uvec2, uvec2);uvec3 multiply32x16(uvec3, uvec3);uvec4 multiply32x16(uvec4, uvec4);\n
6vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 tra
7&F|If
701777723456
777777777777777777777777777
7777777777777777777777777777
777777777777777777777777777777777
7D8egu
7D8sLtLH
7D9sH~=H
7D;a ~G
7HcD$`H
7L9|$@t0I
7\fؘvOV
7http://cacerts.digicert.com/DigiCertAssuredIDRootCA.crt0E
7{KV\nU
8"3hrf
8- or 16-bit loads must be a scalar, vector or matrix type
8- or 16-bit stores must be a scalar, vector or matrix type
8- or 16-bit types can only be used with width-only conversions
8-bit arrays not supported
8-bit signed integer
8-bit signed integer vector
8-bit unsigned integer
8-bit unsigned integer vector
8-bit vectors only take vector types
848~\b
88wmH
88wuH
89{\b
8;\a^9X
8>c\eքBC?>6t9^\tc
8@HPX
8@HP^\f
8@HV\f
8@J@5\n
8@v`tR
8A-t\r8A
8A\bu!E3
8A_A]A
8A_A^A
8A_A^A]A
8A_A^ÐfC
8Appeu\bf
8C\buAH
8C\buGH
8C\tuTH
8Csinf
8D$@t\fH
8D$Xt\fH
8D9I s
8DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA1
8DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA10
8E3ɋT$@H
8E3ɋT$DH
8E3ɋT$HH
8E3ɋT$LH
8G,t\f8G-t
8G,t\n3
8G\buAH
8G\buEH
8G\buGH
8Gathu\ff
8GbthH
8H+~0H
8H;_@t\eH
8HcC\b
8Hcz(H
8Loadu
8Loadu\n
8Loadu\t
8PSIZu\v
8Q-t\r8Q
8SXt\eH
8Storu\ff
8Storu\n
8U)zj
8UUUUU
8VPOSA
8Y-t\r8Q
8\\$yt\fI
8\btYA
8_ ubH
8_,t\f3
8_\bu?H
8_\buCH
8_\buEH
8aliguJ
8b  16-May-2010
8bindu
8bindu8f
8branu
8branu\bf
8builu
8bunz8
8callu\b
8domau
8expou\ef
8fastu
8filtu(f
8flatu
8flatu f
8gl_iu
8gl_ou\bf
8h,t\f3
8inteu
8isolu
8j,t\t
8l$(u\a
8l\n t
8lineu\b
8loopt/H
8maint-H
8maxlu\bf
8minlu\bf
8n,t\r@8n-t
8o,t\t
8offsu
8onceu*I
8poinu
8quadu
8reflu
8refruJf
8s,t\f3
8s,t\t
8s,t\v@8s-t\v
8sYu\n3
8s\buQH
8sat\a
8sht\rH
8siuLH
8streugf
8struu\bf
8t$@tII
8t$@ucH
8t$At/H
8t$AtmD9m
8t$ht'I
8t\rE
8u,t\f3
8u\nfD9
8unrou\ef
8unrou\rf
8vtext
8w ujH
8w,t\f3
8w\buEH
8x,t\f3
8y,t\v@8y-t\r
8y-t\r8Q
8{LtFH
8{\bu5H
8|$Bu
8|$Ht\fH
8|\aD
8~,t\f3
8~\bu8H
8~\bu?H
94\bu7H
94\bu9H
993u,H
9;|\nHcC\bH
9>powf
9A\bt+I
9AhH\e
9Appeu\bf
9B(}\tA
9Bu\vD8a
9C }qM9
9Cu,fD9y
9D$@tMM
9D$@u\t
9D$LtMM
9D$Pu\tA
9D$Tt|M
9G(uFH
9GDr{L
9G\ft!I
9Gu\vD8a
9H$u/9
9H$uA9
9H(u!L
9H(u&9
9H\bt\vH
9K\bu\nA
9K\ft\t
9L$Pv fff
9Loadu
9RIFFL
9Ru\nD8a
9S8~"H
9S\btBH
9Sampu
9St~JD
9Sxv(L
9S||\fH
9\a|\bI
9\bu0D9p
9\tV_sinf
9]0v+fff
9^ t"H
9_8~Ufff
9_Xt\nH
9_Xt\tH
9_\bt\fH
9_\ft\fH
9i(~xH
9i8|AH
9i\bs.H
9i\bv8H
9i\bvKH
9i\b~0H
9k u9L
9k$u H
9k8v?L
9k8~QH
9kXt\tH
9p(t\aH
9p,t\aH
9p\bt=L
9p\b~eH
9q|~2H
9s |AH
9s8|AH
9sPt'9
9sXt\nH
9sXt\tH
9sx|AH
9t$Pu\t
9wH~7D
9w\bt'HcW\bH
9y s\nH
9{H~HL
9{\bu\b9
9{\fu\t9
9|$4tOM
A 9C }ZM9
A ;B u
A A+Q<H
A BuiltIn variable (id
A FunctionCall must happen within a function body
A I9Gps\\H
A block must end with a branch instruction
A function
A function must begin with a label
A module-scope OpVariable with initialization value cannot be marked with the Import Linkage Type
A per vertex structure containing an array is not allowed as input in ES
A s\bL
A structure containing an array is not allowed as input in ES
A structure containing an struct is not allowed as input in ES
A#R@u\r3
A#؈\fGH
A$+AX;A,w
A$HcY\bH
A(H;A t\rH
A(HcA H
A+A(y
A+C(y@A
A+D$$Hc
A+H<H
A+P<H
A+ʍ\fHA
A+ΉL$0E
A+ىD$pA
A-8Q,t
A-8Q,t\v
A-D8q,t\n
A0A9@0
A0A9@0s
A0BvfA
A0H9A(u
A2(\buC
A2h\buMA
A3AЉA\bA
A3IB\bE3
A89A@}C
A89A@}X
A8H90t
A8H98t!H
A8L9 t
A8L90t
A8L98t
A8L9\bt
A8M(u\rI
A8^8}SD
A8n,t\f3
A8p,t\t
A8u,t\t
A8}(u\bI
A94\ar\t
A97~1H
A97~2L
A9A(}\rA
A9A\bu
A9A\fu
A9F8vB
A9Y@|A
A9Z<~bL
A9\atNH
A9\br\rw\vH
A9nLu[H
A9v0t\vH
A9v\bv:H
A9y\b}LI
A9z@|A
A9~\b
A9~\b~2A8
A:8ucI
A:\at\vH
A;@ r\vwoA
A;@\fv1
A;B r:w4M
A;Exsff
A;H r\twmA
A;M8v#A
A;\es\vM
A;vx|\v
A@9B@tSH
A@H90t#H
ABCDEFGHIJKLMNOPQRSTUVWXYZ
ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz
ABDMNOPQRSTVWXYZ[\\]^_`abdefghjkmnopqrst
ABGR8888
ACCSTRUCTEXT
ACCSTRUCTNV
ACUtlString@@QEBADH@Z
ADD_ASSIGN
ADVAPI32.dll
ALIGN_TYPE is wrong, please fix
ALPHD
ALPHu
AM:am:PM:pm
AMD RADV
AMPERSAND
AND_ASSIGN
AND_OP
ANGLE Shader Compiler
ANTLR3_EXCEPTION number %d (%08X).\n
ANTLR3_EXCEPTION: %s\n
APD90
APD98
APD9\b
APH;AXH
APHc\bH
APL;AX
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n
AQQQQQQQQBC
ARGB8888
ATAUAVAW
ATAUAVAW3
ATAUAVAWD
ATAUAVAWH
ATAUAVAWL
ATAUAVH
ATAUAWH
ATAVAW
ATAVAWD
ATAVAWH
ATAVAWL
ATI_TC_CalculateBufferSize_Wrapper
ATI_TC_ConvertTexture_Wrapper
ATOMIC_UINT
ATTACHMENTEXT
ATTRIBUTE
AU?$_InitialTaskHandle@XV<lambda_5a9ef80d79df7873994019ff15dceae5>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency
AU?$_InitialTaskHandle@XV<lambda_60c5de84e69e46aa92419d47e2f3ad51>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency
AU?$_InitialTaskHandle@XV<lambda_85226a1ade6d27c19b16702c44b1a394>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency
AU?$_InitialTaskHandle@XV<lambda_e7905d7dbd7cab7f9b19199433c4f5d3>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency
AU?$_PPLTaskHandle@EU?$_InitialTaskHandle@XV<lambda_5a9ef80d79df7873994019ff15dceae5>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency@@U_TaskProcHandle@details@3@@details@Concurrency
AU?$_PPLTaskHandle@EU?$_InitialTaskHandle@XV<lambda_60c5de84e69e46aa92419d47e2f3ad51>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency@@U_TaskProcHandle@details@3@@details@Concurrency
AU?$_PPLTaskHandle@EU?$_InitialTaskHandle@XV<lambda_85226a1ade6d27c19b16702c44b1a394>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency@@U_TaskProcHandle@details@3@@details@Concurrency
AU?$_PPLTaskHandle@EU?$_InitialTaskHandle@XV<lambda_e7905d7dbd7cab7f9b19199433c4f5d3>@@U_TypeSelectorNoAsync@details@Concurrency@@@?$task@E@Concurrency@@U_TaskProcHandle@details@3@@details@Concurrency
AU?$_Task_impl@E@details@Concurrency
AUAVAWH
AUConcurrentDatabase@Fossilize
AUStreamArchive@Fossilize
AUUATAVAWH
AUUUUUU
AUUVWATAVAWH
AU_Anon@?$_Associated_state@I@std
AU_Crt_new_delete@std
AU_TaskProcHandle@details@Concurrency
AU_Task_impl_base@details@Concurrency
AUctype_base@std
AUmessages_base@std
AUmoney_base@std
AUscheduler_interface@Concurrency
AUtime_base@std
AV<lambda_002a012c53a9e2bf6b85b454618a9eca
AV<lambda_00be0e6540e7aaa32519c610b028f638
AV<lambda_00f624c0644b0ff0b1a7d984ca814cf7
AV<lambda_01ffc428251c6591efb952aeb1f1fe30
AV<lambda_024c53821f82cb55ffb9f8381b348289
AV<lambda_03b94b1c011dcbe9802c1df8e9a33c9d
AV<lambda_0503ff8393ee71d69aa5d1d706ab6f8b
AV<lambda_05f9bd4027382ebf40db2bd2119ed3cb
AV<lambda_06644935744bd796fd5105f114d91cf0
AV<lambda_0766d9c94a813ba372f21c4d75af3e53
AV<lambda_0776d736fdc54b0b8007edc76f2f8a15
AV<lambda_07b5c3fddb6e182cd183f736ae378547
AV<lambda_08bf45afb32fe79629d61b4c494ef9ff
AV<lambda_0984ec0b6499bfe7d8ddeb05cdce8d0c
AV<lambda_0ac16420d42f28deec72ad0636419141
AV<lambda_0bd63617d01dfc7dc77145c8a0a1c5ae
AV<lambda_0cde8836b2fc51e40fa8096be70a0164
AV<lambda_0deb3abbf969e53bb02ac7506598fb03
AV<lambda_0fc4f24b33e8226ff7c4e533d917b2c1
AV<lambda_100b48844dba851586c5c453f8539982
AV<lambda_10424e38a36895768ea31f458897a6a5
AV<lambda_112198b253127af83d96a8c4bb68ef9f
AV<lambda_1190ce55c6261b760bd7a54637a94b9a
AV<lambda_11ecdaca9f32b57d79ef5470edc81a62
AV<lambda_12eb6798e7067e2c93336b24e0efcfbb
AV<lambda_12edc9caac293b4eaac8c0e80c417c87
AV<lambda_13a18dc8520d14dcbe54d3c554185243
AV<lambda_149cd888ca445e7e1284a4d4cee97500
AV<lambda_14a8e4b1da73b50d03677c06872287d6
AV<lambda_150fa95f3164fb79e71456af53db21c1
AV<lambda_15c54aa77d2eda238710d4d556817868
AV<lambda_166522a1383a764775186f4f25601dfd
AV<lambda_16a5fecb83741fbdd26ec3995d0ec512
AV<lambda_17595836ec717d47a43999aea50b0960
AV<lambda_1793d408620b089ef41984fa6c6441f9
AV<lambda_17af366d94c7eed8c6675c221adaa855
AV<lambda_17fb572f14ad63af3fb868085ec62d38
AV<lambda_183088963db04bf15c907452db8189cf
AV<lambda_1915d56ca23c8f6b2ef98c74a2e2b139
AV<lambda_19a25895ee5d9fb3936e7e3d591f23ca
AV<lambda_19d0a8b589e03a3d631136ff1b4f1fa2
AV<lambda_19fc45ed1e8b942b7c0114d5a8ebd5cd
AV<lambda_1>@?1???$ConvertFromBC6h@UBGRA8888_t@@$00@ImageLoader@@YA_NPEBEPEAUBGRA8888_t@@HH@Z
AV<lambda_1>@?1???$ConvertFromBC6h@URGBA16161616F_t@@$0A@@ImageLoader@@YA_NPEBEPEAURGBA16161616F_t@@HH@Z
AV<lambda_1>@?1???$ConvertFromBC6h@URGBA32323232F_t@@$0A@@ImageLoader@@YA_NPEBEPEAURGBA32323232F_t@@HH@Z
AV<lambda_1>@?1???$ConvertFromBC6h@URGBA8888_t@@$00@ImageLoader@@YA_NPEBEPEAURGBA8888_t@@HH@Z
AV<lambda_1>@?1???$ConvertFromBC7@UBGRA8888_t@@@ImageLoader@@YA_NPEBEPEAUBGRA8888_t@@HH@Z
AV<lambda_1>@?1???$ConvertFromBC7@URGBA8888_t@@@ImageLoader@@YA_NPEBEPEAURGBA8888_t@@HH@Z
AV<lambda_1>@?1??CaptureRenderDocWindow@CRenderDocAPI@@SAXAEBVCCommandContext@@AEBVCCommand@@@Z
AV<lambda_1>@?1??IssueTextureLoadRequest@CTextureStreamingHelper@@IEAAXPEAVCTextureBase@@AEBUTextureSpecification_t@@@Z
AV<lambda_1>@?1??MN_AddAsyncTextureBitsHookupJob@CTextureManagerBase@@IEAAXPEAVCTextureBase@@AEBUAsyncTextureHookupData_t@2@@Z
AV<lambda_1>@?1??QueuePresent@CRenderContextVulkan@@UEAAXPEAUSwapChainHandle_t__@@HPEAVIRenderDevicePresentCallback@@@Z
AV<lambda_1>@?1??RenderDocCaptureWindowAutoComplete@@YAXAEBVCCommand@@AEAV?$CUtlVector@VCUtlString@@HV?$CUtlMemory@VCUtlString@@H@@@@@Z
AV<lambda_1>@?3??MN_CacheRequestedResources@CTextureManagerBase@@IEAAXAEAV?$CUtlVector@UToCacheHandle_t@CTextureManagerBase@@HV?$CUtlMemory@UToCacheHandle_t@CTextureManagerBase@@H@@@@@Z
AV<lambda_1>@?4??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@34@@Z
AV<lambda_1>@?7???R0?4??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@34@@Z@QEBA@XZ
AV<lambda_1>@?7??QueueShaderCompile@CAsyncCompileHelperVulkan@@QEAAXPEAVCShaderVulkanBase@@@Z
AV<lambda_1>@?BO@??LoadFromPath@CPipelineCacheManagerVulkan@@QEAAXPEAVCPipelineManagerVulkan@@AEBVCUtlString@@AEBVCUtlStringList@@1H@Z
AV<lambda_1>@?CC@??_CancelAndRunContinuations@?$_Task_impl@E@details@Concurrency@@UEAA_N_N00AEBV?$shared_ptr@U_ExceptionHolder@details@Concurrency@@@std@@@Z
AV<lambda_1>@?DK@??LinkPipelineLibrary@CPipelineManagerVulkan@@AEAA_NPEBVCPipelineVulkan@@PEAUPipelineObjectVulkan_t@@PEAUVkPipelineCache_T@@@Z
AV<lambda_1>@?L@??WriteToBufferBC6H_ispctexcomp@FloatBitMap_t@@IEBA_NPEAX_KAEBUFloatBitmapEncodeSettings_t@@@Z
AV<lambda_1>@?N@??FillAttr@CSOAContainer@@QEAAXHM@Z
AV<lambda_1>@?P@??ExecuteOustandingSWCommandStreamJobs@CRenderThreadVulkan@@AEAAXXZ
AV<lambda_1ac62b890c8265586dd91620ae40c22c
AV<lambda_1b3617e69b41eaa672e93c9e5b3b8b01
AV<lambda_1ba44d20c2086e8a69084c83a0d2c5f6
AV<lambda_1c67aa909925d93153870f1bf9499c4a
AV<lambda_1ccf2e36bd7525a713a5a981a55f66bd
AV<lambda_1d6e34c8fd901911b1428734f48add86
AV<lambda_1f611d712effe3b6398025872c7e2fc1
AV<lambda_1f6ad8bf0c5123bb9591ea7980b60cb5
AV<lambda_2160fa15ddeed0f8746f31dad136ff7b
AV<lambda_21c5e417740b5eb0ccc4c45821501481
AV<lambda_235ec16a373acc2c7d39f182158654de
AV<lambda_24d49e2023121e234443d7934b0ad15e
AV<lambda_25fca9fd8570c56c8bb6a44415401f25
AV<lambda_26d3bb973a4d3cfcf41759db620e70bc
AV<lambda_26e81213e9acb96dfd47fed5727e70e6
AV<lambda_277f32124b44386b2d4a1db1df7e3183
AV<lambda_28b95404f60df239bd747c7fbae74552
AV<lambda_2>@?1??QueuePresent@CRenderContextVulkan@@UEAAXPEAUSwapChainHandle_t__@@HPEAVIRenderDevicePresentCallback@@@Z
AV<lambda_2a79eb4847a013607747fcbb4a69db8a
AV<lambda_2aee58c02e7794a9e3f017e9a7ba7758
AV<lambda_2bc2589f26ead310f2d71d54f3d770e2
AV<lambda_2d6d6d974cbac77fe0875255382b3519
AV<lambda_2d85d216bbdc51472b5bffb5699fce81
AV<lambda_2eb8bb4eda452b2724498767021a0b67
AV<lambda_2ec0acf494a9c9085f8be6a63c5f2247
AV<lambda_2eed50de910468a2ba5dd24b6c55b95e
AV<lambda_2f50be54616fa3d51749201ba7a164ac
AV<lambda_2fb6722787d1db105000776cbf9acad7
AV<lambda_302d23ed0309ef191e9bb931824eadd5
AV<lambda_31cecc329b961f6b0a33eb2f9235ffe6
AV<lambda_334eaedf4df14531b3fd3a8ec606108c
AV<lambda_33bd922dfca825896a60c1810ba6cb69
AV<lambda_343381fb690cab06bcedcd0e903ff67f
AV<lambda_343eb728bd434940d770b6aab7059d44
AV<lambda_3490bb01f8cd1c756f671c034b3c8e6d
AV<lambda_34b1dfc3ca0a2b187b39391b5e25b12d
AV<lambda_34b741d09247c474a01a026e22213061
AV<lambda_34fb56f8a3ce6988f4a6cffe0b06327b
AV<lambda_3661e5d99fba800218ded5d504aa578e
AV<lambda_368e8e75261fb3174138120f3bd0e2b2
AV<lambda_36c822da39e07217ddda3468d22e7af8
AV<lambda_36f031ab63ab8369c348433b96d0b293
AV<lambda_36ffea83f965a408ae0912b23fbe2dea
AV<lambda_374bb322336e96e7d7ea8b9ba8e9f58a
AV<lambda_37f25054964d8cf32e94f12e5f53e3f5
AV<lambda_385792694ddfcb60714deb92a0a4e19b
AV<lambda_386235d5f387dd1db6c659a245f2e6e7
AV<lambda_39b5eb4839c76d0bf15541913ed5de88
AV<lambda_3a19ceebb143d031e8fd60f671f6bb19
AV<lambda_3a2d7c6535cbd4a2a51799c921a5b22c
AV<lambda_3b57ac5fb74fc7fc74ab19f74e11ef60
AV<lambda_3b5da112774f93e08d1aa61caeecbe4f
AV<lambda_3b6a197f65859bfd511e838a5b3cf887
AV<lambda_3bb44a1b3bbb108effe4afb4938ac392
AV<lambda_3c447b19f96b7b2121c441371968a838
AV<lambda_3c6ed6e7326710d84a0d4ad127faae21
AV<lambda_3d656e33b4b5aa6e82e46dedc2e722f3
AV<lambda_3de472c4302e94c4ca87c45b8a148f78
AV<lambda_3ed3cb5ede51c993d6fd084632cefbb4
AV<lambda_3f9f74a42afb69d2dd77b55075aa932b
AV<lambda_406b8d16ceb0d8a0e36cd0c6a0979c6e
AV<lambda_40c8c442f8dead6b0c41471017ba8c8e
AV<lambda_41aa39d77bd4032ae3db46edbb0683ad
AV<lambda_41b76a052c905a3764bb1a5dc00dc9af
AV<lambda_426a1a653046655c06bad2aa3be2003d
AV<lambda_426bd6049ff2515984be737cc224498f
AV<lambda_4273029d6096a6943f38e55d3d3ff2e1
AV<lambda_42749be7556d83f3832f362eccf64148
AV<lambda_429fed939b6237c2ffccd5172a339268
AV<lambda_435368e34a651ced155f29617c51f2aa
AV<lambda_43a3cde53f38fef1fc46f4a0027fd21e
AV<lambda_4482818b4ee06e2bdb585dfce3428ff3
AV<lambda_45aa5d88c2353ad1071c8db0ad7a2e01
AV<lambda_468a4fd79bdd0bf02afe77eedcd388cb
AV<lambda_46b7daaee30376e0c001a66f5d092ce5
AV<lambda_46bde0808f25d1098c6b8b29ee11a4fa
AV<lambda_477d6dc9f5db073226e24bf3420e5439
AV<lambda_482cebc8fcaae6a530ebfe51d643d658
AV<lambda_4872f362e34b459d40aea706abc9f275
AV<lambda_48df6ad57e9dba443dd249d99994b1ef
AV<lambda_4963a77cbfe91afc88bd358e3f1c51bf
AV<lambda_4a49bb9d7a4049809f2bc554c4c3c3e5
AV<lambda_4a4a73880e42e51ee9873d059e6c05fc
AV<lambda_4bafab967d297572137fc15939b499c1
AV<lambda_4c0581fd1f05f0daeb3815c91d3a9624
AV<lambda_4c4ec041f5972e0eda5501328a09c57a
AV<lambda_4c58cd9e00b2786a1ce0eb13c3620218
AV<lambda_4c8bcac8bf5c4dc0441c6d6764826bd4
AV<lambda_4d46ec8bf545dac625361e96eb2ae8ab
AV<lambda_4d9fbb299e9ac649b68fad72c3962b12
AV<lambda_5015eb8f8445feccab6b384b92e13489
AV<lambda_504568ec20920937242fdfd2dd7a020f
AV<lambda_50705e4bc3eda3c3c8838205c274949e
AV<lambda_513e98648f514aae94aacc3b9f3924c1
AV<lambda_52632f2dcf8c63347bcd15917a20bdb3
AV<lambda_52d37056daf94a78a5d4a37c07535689
AV<lambda_52f982cbbbfd807056a50a03c1552a53
AV<lambda_5556ce8cefb0b294534e6bdd35247b43
AV<lambda_555c9b244db3a0588ab7c95fc7e72cca
AV<lambda_561575aa138e0dd85167dbf549e45631
AV<lambda_561c55d081dbea16939b73846a326d8b
AV<lambda_56e3f3ef39e489ba297b0fefcdebe7db
AV<lambda_57b6c069a0b1176117ea70ec7c2db1c7
AV<lambda_5818078f2ed3ccabe60290d77535b527
AV<lambda_59879fd16e49f801b191283552f1e4b8
AV<lambda_5a4b74cc01c2d528e58599f1d4bfa970
AV<lambda_5a9ef80d79df7873994019ff15dceae5
AV<lambda_5ae77915c9f5a5e775fbeedeca03b605
AV<lambda_5b62aca8038060344a7754464176fd4e
AV<lambda_5b8a53a9f6b43a0c3e3819cf6e8e5d57
AV<lambda_5baa9c14ccf636ad6d4d7ab4aea307a7
AV<lambda_5c3330fefad583e143990b86522aeff8
AV<lambda_5d0919bb1e6a9f616dfba51db9bb3fb0
AV<lambda_5d7813ba3bbd676b797c772ca9baaab3
AV<lambda_5e6a9cd111fec14ab25b13364332bc9f
AV<lambda_5edf9ccc9823855225f1c4f0e156799b
AV<lambda_5ef8960c082b8a08447a64d7397a9f4d
AV<lambda_5f50c724157af3e9feb4a43a7838c3e3
AV<lambda_5f56f4fcca384409c456ac7d0a2ce854
AV<lambda_60b548568356ab42b73c2890028b8ad3
AV<lambda_60bc6dcd907e77ca22c4f8fd39b94324
AV<lambda_60c5de84e69e46aa92419d47e2f3ad51
AV<lambda_62308fe9838a57f64dc5b92589cfc4f8
AV<lambda_637bd0538ab6dc8aba8c441e38b875ff
AV<lambda_6514ac3ba67c5268de43e2da9062e7fd
AV<lambda_65cf23f6c5d75970d8e858261ef648f6
AV<lambda_661abbfbc0170f20ffc70e7331b8e395
AV<lambda_68202c2337345579f440a8b667550abe
AV<lambda_689aa5275afed121417db4cc245207d2
AV<lambda_68c36aaa0725a3308fd82db27e892613
AV<lambda_690857979258365f7d2a8645d99223a5
AV<lambda_6908682808afd58985c7c7f4846ef48a
AV<lambda_6935711fdbaac14d33a78669c19bb454
AV<lambda_697a374cfff356fe955ef9191eee86c8
AV<lambda_697ccdefd0e860098facafdd75ad87cc
AV<lambda_698c9b49652ae0a423efde13c1cce4ac
AV<lambda_69b191bb67af183d48323de730fd0c59
AV<lambda_69cf2512ec1d31cf461ac23e263cea3e
AV<lambda_6a2ff678ba3cc2eb30a139dbc4f8c953
AV<lambda_6a4d09d68dee4acc18d9f03101a8644c
AV<lambda_6bec59c90d09d8e477e6ac04b25f91f2
AV<lambda_6c7e3d741f275ee56da0787630eef4bc
AV<lambda_6cb4e0ceb476acecb52a8de747635237
AV<lambda_6d1d74883b852db8cff20b1ed91a0d6a
AV<lambda_6df9191dbfb2dbb25fce0d702e9717f1
AV<lambda_6eb1a695557d578f8d5652275c8fb766
AV<lambda_6edcd950b182f05a81bfdc8e4d1bce9f
AV<lambda_71076abb350d7f7701f4767e86f576c2
AV<lambda_710af9b5722316dd3a31b5135782bc2f
AV<lambda_710ff20f23aa36249ef8bcad81f5f5a7
AV<lambda_7288a49a0f2c79497acd2a78ee12497a
AV<lambda_729e8bdc5869adf59b1acd026b17b90d
AV<lambda_733585e1613a4fa1acc34054901f7d65
AV<lambda_736311db28f9dc546d2697742bbb82a2
AV<lambda_73904565e2f28f5d8bddbd7eaf4c5a8e
AV<lambda_7739b981b17d5c6e7b1bcf1aae31fff5
AV<lambda_77c673e4a3f31836b25db14c560c99c8
AV<lambda_782889b8cc3562c36790efad4a2207fc
AV<lambda_7839a73c76dccae61639e5c1f39c316b
AV<lambda_799c7996f051d8f0f75d86b2d58f9fa1
AV<lambda_7ad469d97cc393160a9494713750cd1e
AV<lambda_7ae678519b5db34efe43d943122e4146
AV<lambda_7bd8837d05ad10c21a5a9e82ebb97ca1
AV<lambda_7c2e89e83bd5aeed7ded72e022e8f41e
AV<lambda_7c6114878dda8f29c2a963b4e93285a2
AV<lambda_7c75f19d35dc15769e9d10f113aa6a27
AV<lambda_7e674cde2a282560ddf8497e93f39ead
AV<lambda_7fa5efa630b11900b41294c5722f0d75
AV<lambda_7ff3407c9814c5a803af1501bca43a29
AV<lambda_800288549f981604824e8e3f66723717
AV<lambda_805acaee61b1ce69a12ce5696310d6f3
AV<lambda_80892c68659ac2cb8e3a6ad746500ac1
AV<lambda_8111232f052d29434fde72e8dfd21b99
AV<lambda_82063d4c05cf4e3d5179f4785ed70872
AV<lambda_8299e4ed694826417c96073117e5f69c
AV<lambda_830dc7f729bf38115f213e2986a2e823
AV<lambda_85226a1ade6d27c19b16702c44b1a394
AV<lambda_8527ce881a698e0dc1b1013de55ffb8a
AV<lambda_855160a61d2e429e40166d012e04f073
AV<lambda_869e9e294ab837d8f8aab18ce77edce5
AV<lambda_87e98fcfcc23678ecff4169f250708ba
AV<lambda_881e477932c5d018270e0384195fa834
AV<lambda_882400f1c679fe7e54f89d9c10774421
AV<lambda_89c7706e211b5351573df64325f09a7e
AV<lambda_89c9f1357407def06d2b5fa73dde8959
AV<lambda_8a5f4ed861eccf5ffb9a27a1c22bdab6
AV<lambda_8b3bd07082e685ed39dd8313736aa419
AV<lambda_8bef2fe1ddb88cbccca8386c27bde6e9
AV<lambda_8c51a5b9c5b9d863e7e89318e4e7ca14
AV<lambda_8cb1225ab70e46ffb2468e5e374f5af7
AV<lambda_8dc07a0603dd59828fd9529ca6da1206
AV<lambda_8ddaf2ccc8a18938380eb700cf542cd8
AV<lambda_8e7a7d5c2721dcd9a525913659a11afd
AV<lambda_8edbc5a5ac1a3a535e2350a79c0403d9
AV<lambda_8f71352d287db0d1407cb64f950f193c
AV<lambda_9053bfb88e5a056a577b1627c80f195a
AV<lambda_9055052a4e8f8d822ea8c7252e0f0022
AV<lambda_92fbbba0715d09845caa0401598bcc69
AV<lambda_94b89cf2e8387b4856ff3e033111f400
AV<lambda_964933e8c18fde5e7659e68619cf293c
AV<lambda_969f71bb7fb192b5437acc9930ed11d3
AV<lambda_96f065302b4e019ae065c7e385fa3a08
AV<lambda_973a503012e0ee12ccb90c0179b491b6
AV<lambda_97c10da097dc246e45540f12187a6a9d
AV<lambda_97cdc58d8f8622369ca3d78d432143f0
AV<lambda_97f507f2699136ce031a8734a73821ee
AV<lambda_980dd7d55fe1f2e934fbcaef4e848e9d
AV<lambda_9b41e71aeaa5e9cf052e3bc8ab3fc42f
AV<lambda_9b5421fcaa58cb3bcc444b4306bce990
AV<lambda_9bd94e3be3ff3938f8c9a479299bcc39
AV<lambda_9c5438f8ef0af4f713f2e1adf78f7d97
AV<lambda_9c8d47a0cd5ae7c4121f90c152d7a189
AV<lambda_9d35fdc8641f88107ce7a9bb3140844e
AV<lambda_9d5f40a2ac9faf45c5d77e7c3febd09a
AV<lambda_9e5f7ef39f67170e4bc18b123f4a11fa
AV<lambda_9f4d7a431f5084d89c7be212aee2debf
AV<lambda_9fc7052f325aef5a7de9f2ed0047f273
AV<lambda_9fd082bb6df20806caf4fc4972e79e66
AV<lambda_a0886600484cc605841f1c99eb96f4bf
AV<lambda_a0c29bc66655cd113314afa48c23c0dc
AV<lambda_a0e9530821f5bc663cc685fba945cb92
AV<lambda_a123d2475a96ea26d773e24a14eee88d
AV<lambda_a27de5fdc5f3f55573cf51f262ed32be
AV<lambda_a2b396ab978c9e2d380796f541f4c362
AV<lambda_a2d719a2bdfc26725c8e7a7bc0e668da
AV<lambda_a4b59c81481a905dc909f8c6c86c1552
AV<lambda_a501aec30f589b31e7a8dc46e320369f
AV<lambda_a5b003cfc844474742a7bfd5bc66a9dd
AV<lambda_a66069a2cae75eb6196b5b90dd759c0c
AV<lambda_a67860ee49f345a2c691e0636253b8f1
AV<lambda_a6d8ef590e305110ca75f334c1975a66
AV<lambda_a7a69e29b15b881aa7799535edaf727e
AV<lambda_a7ec8fb6849d8c8e53694149a299f7bf
AV<lambda_aa7a07c9f0fca2dbf25755e77c13c866
AV<lambda_aa934b0b60eb0b19b84ee3ae9ee141c7
AV<lambda_ab11369c517d6e192ae9b1a07a9aa6e0
AV<lambda_ab8c6a6ed062f7d0c080caacc58d8744
AV<lambda_ae34c7888503b2594012e04b23aec424
AV<lambda_ae421fe24150290690e7b37539a1add7
AV<lambda_aec5603df051d1b064f0f4c54b658410
AV<lambda_b29989345a70fdeefaf17dcd66c34cdb
AV<lambda_b37f96c40e756271ef9ed6175bc12eff
AV<lambda_b3e332b63f865ca53a0afe1c246aa1a1
AV<lambda_b475553a12d831cfa4f6231633905074
AV<lambda_b522294996e2c97f9922f8403868f6f7
AV<lambda_b61727b5629d3f2904f12a33f98ec2aa
AV<lambda_b6c3cbb0349977124a40a90bc8879dd0
AV<lambda_b6caa1a1ddffe28233c2574230cfae41
AV<lambda_b77debf4353e319f811a60c0589594d4
AV<lambda_b7ecfd73dd291c3ad9ea0c46e181100f
AV<lambda_b842dd5fafffe5d2654b4ab402602367
AV<lambda_b87e527b4955318022429c7faaf1a08d
AV<lambda_b882db485ff73473a18c021ab2b4fbd8
AV<lambda_b9977d2c536da50c5d55e746c8a4d9da
AV<lambda_ba87c8f615e091d52ce9630eb8a73ae0
AV<lambda_bc4b961fdd84e52770c2905b13e15183
AV<lambda_bc9c150cb9b267eecd7f5b23cd57aa3e
AV<lambda_bcd837c93ad65270b8505940dd90929b
AV<lambda_bce60ecd9811a1e4ec5b16cd01690bea
AV<lambda_bd6f6dccf56318eaffdd0da070fde941
AV<lambda_be1b9b68576a68bdfd8a7fbd7e601e5f
AV<lambda_be623b3a6ae857f4327661a89ab11ff8
AV<lambda_bea97b95dae808d3daa002da841b7fea
AV<lambda_bee96182538f457e53bf34d5eed9ad69
AV<lambda_bfa1d5ad7d4f57983bada03825f13f74
AV<lambda_c1eea946de7690343fec7889d992a49b
AV<lambda_c20eb797a8e7b4bee76d4ad36889f61d
AV<lambda_c26137d83082850228f649875eb420b0
AV<lambda_c2f6b2ba4631e8d674051b9bd9c5047c
AV<lambda_c37f8ddb99744af8752f40175e6b5207
AV<lambda_c4741e00786012eae8cdf06136cc9866
AV<lambda_c679a0be65cbc4d6bb4f5081d2215341
AV<lambda_c71e659483601dea8a93e7792c152720
AV<lambda_c8320ee4f3749878690a96a8764b3afd
AV<lambda_c8cd95428d0914ab85712d272b4fb9bb
AV<lambda_c9812c12825ae28a4e013debadd8942a
AV<lambda_c9ffe3c5132425f5e36d75f7b0f5e84b
AV<lambda_cad2f68fd17da95f214394ac88507ed5
AV<lambda_cb2295e7305f5151f5c7f706d6b9e9da
AV<lambda_cd544b9055516e99b8f47bc833b87765
AV<lambda_cdd385dc618c85e6c1f4ea40fbb08d47
AV<lambda_ce4964b062fcd540a20316385c2c1ddd
AV<lambda_cee96e50ebd2ccfe9b4a886374be4c3c
AV<lambda_d037422f21fa5228f69726f60bf4053c
AV<lambda_d0d922fea1df8ce5ad2295c62e47d230
AV<lambda_d1372e96354f0f67c8c4b2fa690f9bd1
AV<lambda_d167e3d583ef668c58fd652f623562ae
AV<lambda_d3464c28a685cc4857e1dc7ae7d2ff08
AV<lambda_d3560d07a9f70058e67dae4f5b112d59
AV<lambda_d38c58a4ba11b0ddfb6efdff1d25afb8
AV<lambda_d3c335e1e628df2840217e43020d8b35
AV<lambda_d4282bc1c30d60c850c997232050960d
AV<lambda_d4c13c055296cc3f0f372cc07a6dd62a
AV<lambda_d509234876dccd10f61a9c90bcbc3024
AV<lambda_d5ed91c87dab26dead301cd56f036ea2
AV<lambda_d64266ea8151ecc84fb0f8b44cb0d039
AV<lambda_d6533818e0dfd204cdb5cef2a1981dc5
AV<lambda_d69d2837f6527dc89f277ecf9102b295
AV<lambda_d8fc16f5e31991cf01dada3d69129c65
AV<lambda_d92d075816230d7370a330f13ff8d946
AV<lambda_d9b9296a6f858d4cd9de9ab270c012c7
AV<lambda_da7376a42906a93590e09d6a61289d2a
AV<lambda_daa3bf1adbed79e9ffeaa4f9b2225c4d
AV<lambda_db8b3257dda4a6180359ce7af5b30405
AV<lambda_dc120468ed82ce396d71874176bf5b78
AV<lambda_dc7b3afda5a98c5d3e82b6013a827b22
AV<lambda_dc8226351eb96d12ff1a7752d03820fe
AV<lambda_dc9fc9840a03d1df10681b47a73268e0
AV<lambda_dcc99e0db608dc23fc72a9e2a32a50ce
AV<lambda_dd340354964b46b4cd098f61ffe77ccc
AV<lambda_de9c0a1cbcb489fcc524fb8a3ea9837b
AV<lambda_dfaa4191901394cf26fa2dee6298becd
AV<lambda_e01f92c37095c8b5c4c2e399c7d77047
AV<lambda_e062b110bed152260c6c726d0a432c5e
AV<lambda_e06c3caa4e25559799df9da580c536d9
AV<lambda_e08857fc5c845e9db064367802a95d3b
AV<lambda_e0b623a606acfd10554dbddbb0c1a7da
AV<lambda_e1fa440deae8e0efc0f71db938426600
AV<lambda_e2248afc31657074bece8197f495ecf7
AV<lambda_e386c3473880d30819e3e4da29b807df
AV<lambda_e594c4e380f7a7ebf720d79d1794a6e2
AV<lambda_e5aa4e12809b889a266e9c15ecea4349
AV<lambda_e5bcdcfed80262d434f867d659163b99
AV<lambda_e7905d7dbd7cab7f9b19199433c4f5d3
AV<lambda_e851670082cb2beabee5004dce16d985
AV<lambda_e9186a62722cae0d58f8baf269dd2da6
AV<lambda_eb42f6e3a42dbf5116739f5743e9a21a
AV<lambda_eb4baab764dfe8870159bc1fa828a0a7
AV<lambda_ebfd2a535494d443420b782f2de1971e
AV<lambda_ec8ea7a3f2259c9bb22210dc102fcf24
AV<lambda_ecc62d06246bd731e0a1f0b2914b77af
AV<lambda_ed786d7c8ce1a1ccb843ca6224d50afa
AV<lambda_eebd379a0f58684a1927f9b4f84ffa30
AV<lambda_eeced58669d843c1533f3304b72d6da7
AV<lambda_f0333d746f66c49d8c7cb5e785c935e6
AV<lambda_f06a0748ddaac02c3dca987bbd2f0a51
AV<lambda_f085be6385708b574f76b75238f496ad
AV<lambda_f193912706c9ff6de4add9efb6a6fd79
AV<lambda_f22b123cc92db1a759a8cdd451463f54
AV<lambda_f26ff537cf3e5ac2c268f26cf2368f66
AV<lambda_f2af632ff19a184de506d2a69c8222f6
AV<lambda_f3c83eb5e7972c27e84721fd80979af0
AV<lambda_f4041d05e8a570123fde84d4fe12706d
AV<lambda_f45ab56af0dc30b60d8a8aa5c6a2d1f7
AV<lambda_f4c36904511835a32d9ae11fb5e59326
AV<lambda_f550882f3894c785da4fc1b0c46aead2
AV<lambda_f55851c26cc012af29fea474eee6474c
AV<lambda_f5641bcf589f029c6ad27ddcd75364fc
AV<lambda_f5dbb626c29bb6fa497b9feb6439b1b4
AV<lambda_f758f82bc921fbe7c34a268c316d7457
AV<lambda_f7f164df2b93e481f61cba204d733dd4
AV<lambda_fa38b2d7e58f528a5f52adbe07c250a1
AV<lambda_fc44f4ff48ca1b53b4e6ae795a229358
AV<lambda_fe3b18bb94280d5bacce70ae6c732c1d
AV<lambda_feb28a8fc1d136f28c08dbfc9b18f561
AV<lambda_febccfbcc58b95efa7e80f2f3c87dcf4
AV<lambda_febfd70b75a718cae1f41a0ddf7af2d9
AV<lambda_feceb1053f713a97783cfd3cb35af1a9
AV<lambda_fed47b6adffccb47b9ead2f3bf022bf8
AV?$CBaseAppSystem@VIRenderDeviceMgr
AV?$CBaseAppSystem@VIRenderUtils
AV?$CConCommandMemberAccessor@VCFramebufferMgrVulkan
AV?$CConCommandMemberAccessor@VCMemoryManagerVulkan
AV?$CConCommandMemberAccessor@VCPipelineManagerVulkan
AV?$CConCommandMemberAccessor@VCRenderDeviceBase
AV?$CConCommandMemberAccessor@VCShaderTableVulkan
AV?$CConCommandMemberAccessor@VCTextureManagerBase
AV?$CInputLayoutDict@VCInputLayoutVulkan
AV?$CParallelLambdaJob@V<lambda_1>@?1??AssignVectorsToClusters@CKMeansClustering@@AEAAXXZ@@CParallelProcessLauncher
AV?$CParallelLambdaJob@V<lambda_1>@?8??WriteToBufferBC7_bc7e@FloatBitMap_t@@IEBA_NPEAX_KW4ImageFormat@@AEBUFloatBitmapEncodeSettings_t@@@Z@@CParallelProcessLauncher
AV?$CParallelLambdaJob@V<lambda_1>@?8??WriteToBufferBC7_ispctexcomp@FloatBitMap_t@@IEBA_NPEAX_KW4ImageFormat@@AEBUFloatBitmapEncodeSettings_t@@@Z@@CParallelProcessLauncher
AV?$CParallelLambdaJob@V<lambda_1>@?8??WriteToBufferETC@FloatBitMap_t@@IEBA_NPEAX_KW4ImageFormat@@AEBUFloatBitmapEncodeSettings_t@@@Z@@CParallelProcessLauncher
AV?$CParallelLambdaJob@V<lambda_1>@?M@???$ParallelFor@$00V<lambda_2>@?CG@???0CRayTracePipelineVulkan@@QEAA@PEAUVkDevice_T@@AEBURayTracePipelineStateCreateDesc_t@@@Z@@@YAXHHPEBDV<lambda_2>@?CG@???0CRayTracePipelineVulkan@@QEAA@PEAUVkDevice_T@@AEBURayTracePipelineStateCreateDesc_t@@@Z@HHHW4JobPriority_t@@@Z@@CParallelProcessLauncher
AV?$CParallelProcessorAbstract@V?$CParallelProcessor@HV?$CLambdaJobItemProcessor@H@@$00
AV?$CParallelProcessorAbstract@V?$CParallelProcessor@UPipelineWorkItem_t@CFossilizeStateCreator@@V?$CMemberFuncJobItemProcessor@UPipelineWorkItem_t@CFossilizeStateCreator@@V2@V2@@@$00
AV?$CRefCountServiceBase@VCRefMT
AV?$CRefCounted@V?$CRefCountServiceBase@VCRefMT
AV?$CTier0AppSystem@VIRenderDeviceMgr@@$0A
AV?$CTier0AppSystem@VIRenderUtils@@$0A
AV?$CTier1AppSystem@VIRenderDeviceMgr@@$0A
AV?$CTier1AppSystem@VIRenderUtils@@$0A
AV?$CTier2AppSystem@VIRenderDeviceMgr@@$0A
AV?$CTier2AppSystem@VIRenderUtils@@$0A
AV?$CVulkanObject@PEAUVkAccelerationStructureKHR_T@@$1?vkDestroyAccelerationStructureKHR@@3P6AXPEAUVkDevice_T@@PEAU1@PEBUVkAllocationCallbacks@@@ZEA
AV?$CVulkanObject@PEAUVkBufferView_T@@$1?vkDestroyBufferView@@3P6AXPEAUVkDevice_T@@PEAU1@PEBUVkAllocationCallbacks@@@ZEA
AV?$CVulkanObject@PEAUVkImageView_T@@$1?vkDestroyImageView@@3P6AXPEAUVkDevice_T@@PEAU1@PEBUVkAllocationCallbacks@@@ZEA
AV?$CVulkanObject@PEAUVkSampler_T@@$1?vkDestroySampler@@3P6AXPEAUVkDevice_T@@PEAU1@PEBUVkAllocationCallbacks@@@ZEA
AV?$IStreamBuilderCallback@VCCommandStream
AV?$ITSHashConstructor@PEAUInputLayoutVulkan_t
AV?$ITSHashConstructor@PEAX
AV?$ITSHashConstructor@VCSamplerStateBinding
AV?$ITSHashConstructor@VCTextureSequenceRecord_t
AV?$_Associated_state@H@std
AV?$_Associated_state@I@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@AEBVDecoration@56@AEBVInstruction@56@11@ZPEAV3456@AEBV856@AEBV956@AEBV956@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAHAEAPEBDAEAW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAIAEAY0IM@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAIAEAY0IN@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAIAEAY0IP@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAIAEAY0JF@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAIAEAY0JJ@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0HL@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0HM@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0IB@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0IC@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0IG@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0II@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0IM@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0IN@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0IP@$$CBDW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0xea86b806@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@HAEAY0LP@$$CBDAEBW489@AEBVDecoration@56@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8DefUseManager@analysis@opt@spvtools@@EAAXPEAVInstruction@56@@ZPEAV3456@AEBU?$_Ph@$00@2@@std
AV?$_CancellationTokenCallback@V<lambda_1>@?1??_RegisterCancellation@_Task_impl_base@details@Concurrency@@QEAAXV?$weak_ptr@U_Task_impl_base@details@Concurrency@@@std@@@Z@@details@Concurrency
AV?$_Deferred_async_state@I@std
AV?$_Deferred_async_state@X@std
AV?$_ExceptionPtr_static@Vbad_alloc@std@@@?A0x6e02efe5
AV?$_ExceptionPtr_static@Vbad_exception@std@@@?A0x6e02efe5
AV?$_Fake_no_copy_callable_adapter@P8Image@Etc@@EAAIIII@ZQEAV12@AEAIAEAHAEAI@std
AV?$_Fake_no_copy_callable_adapter@P8Image@Etc@@EAAXII@ZQEAV12@AEAHAEAI@std
AV?$_Func_base@E$$V@std
AV?$_Func_base@I$$V@std
AV?$_Func_base@X$$V@std
AV?$_Func_base@XAEAH@std
AV?$_Func_base@XPEAVCSwapChainBase@@@std
AV?$_Func_base@XPEAVIAsyncResourceDataRequest@@V?$unique_ptr@VIAsyncProcessedDataResult@@U?$default_delete@VIAsyncProcessedDataResult@@@std@@@std@@@std
AV?$_Func_impl@V<lambda_5a9ef80d79df7873994019ff15dceae5>@@V?$allocator@H@std@@X$$V@std
AV?$_Func_impl@V<lambda_60c5de84e69e46aa92419d47e2f3ad51>@@V?$allocator@H@std@@X$$V@std
AV?$_Func_impl@V<lambda_85226a1ade6d27c19b16702c44b1a394>@@V?$allocator@H@std@@X$$V@std
AV?$_Func_impl@V<lambda_e0b623a606acfd10554dbddbb0c1a7da>@@V?$allocator@H@std@@E$$V@std
AV?$_Func_impl@V<lambda_e7905d7dbd7cab7f9b19199433c4f5d3>@@V?$allocator@H@std@@X$$V@std
AV?$_Func_impl@V?$_Fake_no_copy_callable_adapter@P8Image@Etc@@EAAIIII@ZQEAV12@AEAIAEAHAEAI@std@@V?$allocator@H@2@I$$V@std
AV?$_Func_impl@V?$_Fake_no_copy_callable_adapter@P8Image@Etc@@EAAXII@ZQEAV12@AEAHAEAI@std@@V?$allocator@H@2@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1???$ConvertFromBC6h@UBGRA8888_t@@$00@ImageLoader@@YA_NPEBEPEAUBGRA8888_t@@HH@Z@XAEAH@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1???$ConvertFromBC6h@URGBA16161616F_t@@$0A@@ImageLoader@@YA_NPEBEPEAURGBA16161616F_t@@HH@Z@XAEAH@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1???$ConvertFromBC6h@URGBA32323232F_t@@$0A@@ImageLoader@@YA_NPEBEPEAURGBA32323232F_t@@HH@Z@XAEAH@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1???$ConvertFromBC6h@URGBA8888_t@@$00@ImageLoader@@YA_NPEBEPEAURGBA8888_t@@HH@Z@XAEAH@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1???$ConvertFromBC7@UBGRA8888_t@@@ImageLoader@@YA_NPEBEPEAUBGRA8888_t@@HH@Z@XAEAH@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1???$ConvertFromBC7@URGBA8888_t@@@ImageLoader@@YA_NPEBEPEAURGBA8888_t@@HH@Z@XAEAH@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1??CaptureRenderDocWindow@CRenderDocAPI@@SAXAEBVCCommandContext@@AEBVCCommand@@@Z@XPEAVCSwapChainBase@@@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1??IssueTextureLoadRequest@CTextureStreamingHelper@@IEAAXPEAVCTextureBase@@AEBUTextureSpecification_t@@@Z@XPEAVIAsyncResourceDataRequest@@V?$unique_ptr@VIAsyncProcessedDataResult@@U?$default_delete@VIAsyncProcessedDataResult@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1??MN_AddAsyncTextureBitsHookupJob@CTextureManagerBase@@IEAAXPEAVCTextureBase@@AEBUAsyncTextureHookupData_t@3@@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1??QueuePresent@CRenderContextVulkan@@UEAAXPEAUSwapChainHandle_t__@@HPEAVIRenderDevicePresentCallback@@@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?1??RenderDocCaptureWindowAutoComplete@@YAXAEBVCCommand@@AEAV?$CUtlVector@VCUtlString@@HV?$CUtlMemory@VCUtlString@@H@@@@@Z@XPEAVCSwapChainBase@@@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?3??MN_CacheRequestedResources@CTextureManagerBase@@IEAAXAEAV?$CUtlVector@UToCacheHandle_t@CTextureManagerBase@@HV?$CUtlMemory@UToCacheHandle_t@CTextureManagerBase@@H@@@@@Z@XPEAVIAsyncResourceDataRequest@@V?$unique_ptr@VIAsyncProcessedDataResult@@U?$default_delete@VIAsyncProcessedDataResult@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?4??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@45@@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?7???R1?4??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@45@@Z@QEBA@XZ@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?7??QueueShaderCompile@CAsyncCompileHelperVulkan@@QEAAXPEAVCShaderVulkanBase@@@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?BO@??LoadFromPath@CPipelineCacheManagerVulkan@@QEAAXPEAVCPipelineManagerVulkan@@AEBVCUtlString@@AEBVCUtlStringList@@1H@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?CC@??_CancelAndRunContinuations@?$_Task_impl@E@details@Concurrency@@UEAA_N_N00AEBV?$shared_ptr@U_ExceptionHolder@details@Concurrency@@@std@@@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?DK@??LinkPipelineLibrary@CPipelineManagerVulkan@@AEAA_NPEBVCPipelineVulkan@@PEAUPipelineObjectVulkan_t@@PEAUVkPipelineCache_T@@@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?L@??WriteToBufferBC6H_ispctexcomp@FloatBitMap_t@@IEBA_NPEAX_KAEBUFloatBitmapEncodeSettings_t@@@Z@XAEAH@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?N@??FillAttr@CSOAContainer@@QEAAXHM@Z@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_1>@?P@??ExecuteOustandingSWCommandStreamJobs@CRenderThreadVulkan@@AEAAXXZ@X$$V@std
AV?$_Func_impl_no_alloc@V<lambda_2>@?1??QueuePresent@CRenderContextVulkan@@UEAAXPEAUSwapChainHandle_t__@@HPEAVIRenderDevicePresentCallback@@@Z@X$$V@std
AV?$_Iosb@H@std
AV?$_Mpunct@D@std
AV?$_Mpunct@G@std
AV?$_Mpunct@_W@std
AV?$_Packaged_state@$$A6AIXZ@std
AV?$_Packaged_state@$$A6AXXZ@std
AV?$_Ref_count_obj2@U?$_Task_impl@E@details@Concurrency@@@std
AV?$_Ref_count_obj2@U_ExceptionHolder@details@Concurrency@@@std
AV?$_Task_async_state@I$00@std
AV?$_Task_async_state@I$0A@@std
AV?$_Task_async_state@X$00@std
AV?$_Task_async_state@X$0A@@std
AV?$basic_filebuf@DU?$char_traits@D@std@@@std
AV?$basic_ios@DU?$char_traits@D@std@@@std
AV?$basic_iostream@DU?$char_traits@D@std@@@std
AV?$basic_istream@DU?$char_traits@D@std@@@std
AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$basic_ostream@DU?$char_traits@D@std@@@std
AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$basic_streambuf@DU?$char_traits@D@std@@@std
AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$codecvt@DDU_Mbstatet@@@std
AV?$codecvt@GDU_Mbstatet@@@std
AV?$codecvt@_WDU_Mbstatet@@@std
AV?$codecvt_utf8_utf16@_W$0BAPPPP@$0A@@std
AV?$collate@D@std
AV?$collate@G@std
AV?$collate@_W@std
AV?$ctype@D@std
AV?$ctype@G@std
AV?$ctype@_W@std
AV?$messages@D@std
AV?$messages@G@std
AV?$messages@_W@std
AV?$money_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$money_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std
AV?$money_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std
AV?$money_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$money_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std
AV?$money_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std
AV?$moneypunct@D$00@std
AV?$moneypunct@D$0A@@std
AV?$moneypunct@G$00@std
AV?$moneypunct@G$0A@@std
AV?$moneypunct@_W$00@std
AV?$moneypunct@_W$0A@@std
AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$num_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std
AV?$num_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std
AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$num_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std
AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std
AV?$numpunct@D@std
AV?$numpunct@G@std
AV?$numpunct@_W@std
AV?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std
AV?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std
AV?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$time_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std
AV?$time_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std
AV?$wstring_convert@V?$codecvt_utf8_utf16@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std
AVAWH
AVAWI
AVAWL
AVBlock4x4Encoding@Etc
AVBlock4x4Encoding_ETC1@Etc
AVBlock4x4Encoding_R11@Etc
AVBlock4x4Encoding_RG11@Etc
AVBlock4x4Encoding_RGB8@Etc
AVBlock4x4Encoding_RGB8A1@Etc
AVBlock4x4Encoding_RGB8A1_Opaque@Etc
AVBlock4x4Encoding_RGB8A1_Transparent@Etc
AVBlock4x4Encoding_RGBA8@Etc
AVBlock4x4Encoding_RGBA8_Opaque@Etc
AVBlock4x4Encoding_RGBA8_Transparent@Etc
AVCAftermathVulkan
AVCAsyncCompileHelperVulkan
AVCBLASVulkan
AVCBarrierHelperEmpty@?1??GetBarrierHelper@CRenderContextBase@@UEAA?AV?$unique_ptr@VIBarrierHelper@@U?$default_delete@VIBarrierHelper@@@std@@@std@@XZ
AVCBarrierHelperVulkan
AVCBaseAccelerationStructureVulkan
AVCBlendStateCreator
AVCBufferBarrierTracker
AVCBufferMovedListenerDeferredDeletion
AVCBufferedDescriptorSetVulkan
AVCColorFormatBase
AVCColorFormatVulkan
AVCConstantBufferVulkan
AVCDepthStencilStateCreator
AVCDescriptorSetReferenced
AVCDescriptorSetVulkan
AVCDeviceFence
AVCDeviceFenceBase
AVCFallbackTextureVulkan
AVCFossilizeStateCreator
AVCFramebufferMgrVulkan
AVCGlslangIncluder
AVCImageLayoutTracker
AVCIndexBufferBase
AVCIndexBufferVulkan
AVCLayoutInsert
AVCMemoryManagerVulkan
AVCNVReflexVulkan
AVCParallelProcessorAbstract_Base
AVCPipelineCacheManagerVulkan
AVCPipelineManagerVulkan
AVCPipelineVulkan
AVCPooledIndexBuffer
AVCPostConnectCallback
AVCRasterizerStateCreator
AVCRayTracePipelineVulkan
AVCRayTraceShaderBindingTableVulkan
AVCReadGPUBuffer
AVCRenderContextBase
AVCRenderContextVulkan
AVCRenderContextVulkan_SoftwareCommandLists
AVCRenderDeviceBase
AVCRenderDeviceMgrBase
AVCRenderDeviceMgrVulkan
AVCRenderDeviceVulkan
AVCRenderDocAPI
AVCRenderHardwareConfig
AVCRenderResource
AVCRenderSystemVulkanDebugVisualizer
AVCRenderThreadBase
AVCRenderThreadVulkan
AVCRenderUtils
AVCSamplerStateCreator
AVCSchemaInstallCallback
AVCSchemaRegistration
AVCSchemaRegistration_rendersystemvulkan
AVCShaderTableVulkan
AVCShaderVulkanBase
AVCSheetHashConstructor
AVCSwapChainBase
AVCSwapChainVulkan
AVCTLASVulkan
AVCTextureBase
AVCTextureManagerBase
AVCTextureManagerVulkan
AVCTextureStreamingHelper
AVCTextureVulkan
AVCVertexBufferBase
AVCVertexBufferVulkan
AVCVertexShaderVulkan
AVCVfxShaderFile
AVCVfxShaderFileRenderShaderBuffer
AVCVfxShaderFileVulkan
AVCVkFsr2Upscaler
AVCVmaAllocationDeferredDeletion
AVCVulkanImage
AVCVulkanPooledFenceObject
AVCVulkanSamplerObject
AVCVulkanTextureObjectToDelete
AVConCommand
AVConCommandRef
AVDatabaseInterface@Fossilize
AVIAppSystem
AVIBarrierHelper
AVIBufferMovedListener
AVICommandCallback
AVICommandCompletionCallback
AVIMobileEventListener
AVIMultipleWorkerJob
AVIRaytraceShaderBindingTable
AVIReadBufferCallback
AVIRenderContext
AVIRenderDevice
AVIRenderDeviceMgr
AVIRenderHardwareConfig
AVIRenderReadCallback
AVIRenderShaderByteCode
AVIRenderUtils
AVIResourceTypeManager
AVITextureResidencyListener
AVIToolsResourceListener
AVIUpscaler
AVIVmaAllocationBase
AVIVmaAllocationBuffer
AVIVmaAllocationImage
AVIncluder@TShader@glslang
AVStateCreatorInterface@Fossilize
AVVmaBlockMetadata
AVVmaBlockMetadata_Linear
AVVmaBlockMetadata_TLSF
AV_CancellationTokenRegistration@details@Concurrency
AV_DefaultPPLTaskScheduler@details@Concurrency
AV_ExceptionPtr_normal@?A0x6e02efe5
AV_Facet_base@std
AV_Future_error_category2@std
AV_Future_error_category@std
AV_Generic_error_category@std
AV_Interruption_exception@details@Concurrency
AV_Iostream_error_category2@std
AV_Locimp@locale@std
AV_RefCounter@details@Concurrency
AV_Ref_count_base@std
AV_System_error@std
AV__non_rtti_object@std
AVbad_alloc@std
AVbad_array_new_length@std
AVbad_cast@std
AVbad_exception@std
AVbad_function_call@std
AVbad_typeid@std
AVcodecvt_base@std
AVerror_category@std
AVexception@std
AVfacet@locale@std
AVfailure@ios_base@std
AVfuture_error@std
AVinvalid_operation@Concurrency
AVios_base@std
AVlength_error@std
AVlogic_error@std
AVout_of_range@std
AVrange_error@std
AVruntime_error@std
AVstl_condition_variable_interface@details@Concurrency
AVstl_condition_variable_win7@details@Concurrency
AVstl_critical_section_interface@details@Concurrency
AVstl_critical_section_win7@details@Concurrency
AVsystem_error@std
AVtask_canceled@Concurrency
AVtype_info
AX3B\b
AXH;A`t\nH
AXH;A`u
AXHc\bH
AXHcz`H
A\a$ &8(D
A\b+B\b
A\b9B\bu6
A\b@88wdH
A\bA;ŋI\fA
A\bH99t\rH
A\bH;D$Ht\eH
A\bH;GPt
A\bH;G\bt
A\bH;\bu
A\bHcB H
A\bHcI\bIco4Mcw8McO0
A\bI;@ t
A\bI;@\bthH
A\bI;A\b
A\bI;A\bt
A\bI;B\b
A\bI;D$\bt
A\bI;D0Ht
A\bI;E\b
A\bI;E\bt
A\bI;E\bt!H
A\bI;G\b
A\b\bt,A
A\vIB\bA
A\v\tG(A
A\vƉD$8
A\vǉD
A\vЉ}wE
A\vՋ\f$A3
A^A]A
A^ËW0H
A_A]A
A_A^A
A_A^A]A
Aboring OnReadBuffer because of GPU memory allocation failure.\n
Aboring OnReadPixels because of GPU memory allocation failure.\n
AbsISubINTEL
AbsUSubINTEL
Absolute value
AccelStruct
AccelStructBuffer
AccelStructBuffer [Compact
AccelStructCompact
AccelStructScratch
Access violation - no RTTI data
AccessChain
AccessQualifier must be a 32-bit unsigned integer OpConstant
According to the
According to the Vulkan spec BuiltIn
According to the Vulkan spec BuiltIn HelperInvocation variable needs to be a bool scalar
According to the Vulkan spec BuiltIn InvocationId variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn PatchVertices variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn PointCoord variable needs to be a 2-component 32-bit float vector
According to the Vulkan spec BuiltIn PointSize variable needs to be a 32-bit float scalar
According to the Vulkan spec BuiltIn Position variable needs to be a 4-component 32-bit float vector
According to the Vulkan spec BuiltIn PrimitiveId variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn SampleId variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn SampleMask variable needs to be a 32-bit int array
According to the Vulkan spec BuiltIn SamplePosition variable needs to be a 2-component 32-bit float vector
According to the Vulkan spec BuiltIn TessCoord variable needs to be a 3-component 32-bit float vector
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 2-component 32-bit float array
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 4-component 32-bit float array
Acquire
AcquireRelease
AcquireSRWLockExclusive
AcquireVfxShaderFile: Failed to unserialize CVfxShaderFile.  Is your shadercache out-of-date?  Try deleting it.\n
AcquireVfxShaderFile: Failed to unserialize CVfxShaderFileVulkan.  Is your shadercache out-of-date?  Try deleting it.\n
ActiveArea
ActivityStoppedAutomatically
Actual Type
Actually dude, we didn't seem to be expecting anything here, or at least\n
Adapter: %d\nDriver Name:  %s\nDriver Version: %s\nVendorId / DeviceId:  0x%x / 0x%x\nSubSystem / Rev:  0x%x / 0x%x\n\n
AddDescriptorsToGlobalPerFrameDescriptorSet(): Trying to register descriptor with binding %d more than once!\n
AddNullTermination@CUtlBuffer@@IEAAXXZ
Additional fossilize database path: %s\n
Address
AddressQualifier must be a 32-bit unsigned integer OpConstant
Addresses
Addressing model must be Logical or PhysicalStorageBuffer64
Addressing model must be Physical32 or Physical64
Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d
AdobeDeflate
After failure, vkCreateGraphicsPipelines retry %d was successful.\n
After hitting throttling limits for streamout, allow it to continue up to this number of milliseconds
Ahd=<c]^7if1Rjg
AiG01
AiGH1
AiG`1
AiGx1
AiT$$\v0
AliasDomainDeclINTEL
AliasScopeDeclINTEL
AliasScopeINTEL
AliasScopeINTELMask
AliasScopeListDeclINTEL
Aliased
AliasedPointer
AliasedPointerEXT
Aligned
AlignedByteArray not properly aligned\n
Alignment
AlignmentId
All OpSampledImage instructions must be in the same block in which their Result <id> are consumed. OpSampledImage Result Type <id
All OpVariable instructions in a function must be the first instructions in the first block
AllMemoryBarrier
AllMemoryBarrierWithGroupSync
Alloc@CRawAllocator@@SAPEAXW4RawAllocatorType_t@@_KPEA_K@Z
Alloc@CUtlMemoryBlockAllocator@@QEAAII@Z
Alloc@CUtlMemoryPoolBase@@QEAAPEAXXZ
Allocate@COneTimeEvent@@SAPEAV1@XZ
Allocating a variable containing a 16-bit element in
Allocating a variable containing a 8-bit element in
Allocation falling back to non-device local heap failed.\n
AllocationBytes
AllocationCount
AllocationSizeMax
AllocationSizeMin
Allocations
Allocations: %llu / %s
Allow immediately loading mips of textures (when possible) when their headers are loaded, saving IO & reducing latency
AllowContract
AllowContractFastINTEL
AllowReassoc
AllowReassoc and AllowContract must be specified when AllowTransform is specified
AllowReassocINTEL
AllowRecip
AllowTransform
Alpha decoder initialization failed
AnalogBalance
AnimGraphEditorUtils001
AnimationSystemUtils_001
AnimationSystem_001
Annotations
Anonymous member name used for global variable or other anonymous member
AntiAliasStrength
AnyHitKHR
AnyHitNV
ApH9A@t\fH
ApLcA8
AppPolicyGetProcessTerminationMethod
AppPolicyGetShowDeveloperDiagnostic
AppPolicyGetWindowingModel
Append
Append@CUtlString@@QEAAXPEBD@Z
AppendComment@CMiniDumpComment@@QEAAXPEBD@Z
AppendFormat@CBufferString@@QEAAHPEBDZZ
AppendFormatV@CBufferString@@QEAAHPEBDPEAD@Z
AppendFormattedComment@CMiniDumpComment@@QEAAXPEBDZZ
AppendStructuredBuffer
Application transferred too few scanlines
Application transferred too many scanlines
ApËQ\b3
ArbitraryFloatACosINTEL
ArbitraryFloatACosPiINTEL
ArbitraryFloatASinINTEL
ArbitraryFloatASinPiINTEL
ArbitraryFloatATan2INTEL
ArbitraryFloatATanINTEL
ArbitraryFloatATanPiINTEL
ArbitraryFloatAddINTEL
ArbitraryFloatCastFromIntINTEL
ArbitraryFloatCastINTEL
ArbitraryFloatCastToIntINTEL
ArbitraryFloatCbrtINTEL
ArbitraryFloatCosINTEL
ArbitraryFloatCosPiINTEL
ArbitraryFloatDivINTEL
ArbitraryFloatEQINTEL
ArbitraryFloatExp10INTEL
ArbitraryFloatExp2INTEL
ArbitraryFloatExpINTEL
ArbitraryFloatExpm1INTEL
ArbitraryFloatGEINTEL
ArbitraryFloatGTINTEL
ArbitraryFloatHypotINTEL
ArbitraryFloatLEINTEL
ArbitraryFloatLTINTEL
ArbitraryFloatLog10INTEL
ArbitraryFloatLog1pINTEL
ArbitraryFloatLog2INTEL
ArbitraryFloatLogINTEL
ArbitraryFloatMulINTEL
ArbitraryFloatPowINTEL
ArbitraryFloatPowNINTEL
ArbitraryFloatPowRINTEL
ArbitraryFloatRSqrtINTEL
ArbitraryFloatRecipINTEL
ArbitraryFloatSinCosINTEL
ArbitraryFloatSinCosPiINTEL
ArbitraryFloatSinINTEL
ArbitraryFloatSinPiINTEL
ArbitraryFloatSqrtINTEL
ArbitraryFloatSubINTEL
ArbitraryPrecisionFixedPointINTEL
ArbitraryPrecisionFloatingPointINTEL
ArbitraryPrecisionIntegersINTEL
AreFileApisANSI
ArgInfo must be an ArgumentInfo extended instruction
ArgInfo must be from the same extended instruction import
ArgNumber
ArgumentInfo
ArgumentPodPushConstant
ArgumentPodStorageBuffer
ArgumentPodUniform
ArgumentPointerPushConstant
ArgumentPointerUniform
ArgumentSampledImage
ArgumentSampler
ArgumentSizes must be a 32-bit unsigned integer OpConstant
ArgumentStorageBuffer
ArgumentStorageImage
ArgumentStorageTexelBuffer
ArgumentUniform
ArgumentUniformTexelBuffer
ArgumentWorkgroup
Arithmetic table 0x%02x was not defined
Array access is out of bounds, array size is
Array sizes must be compatible
ArrayLength
ArrayStride
Arrays not supported in texture template types
Artist
AsShotICCProfile
AsShotNeutral
AsShotPreProfileMatrix
AsShotWhiteXY
Asking for 2d Texture Array with Cube map as input and no compatible view found when setting "%s" - returning error texture in CTextureManagerVK::GetImageView: "%s"\n
AsmCallINTEL
AsmINTEL
AsmTargetINTEL
AssertIsValidTextureSpec
Assert_ConditionFailed@@YA_NAEBU_AssertCompileTimeConstantStruct_t@@@Z
Assert_ConditionFailed@@YA_NAEBU_AssertCompileTimeConstantStruct_t@@PEBDZZ
Assertion failed
Assertion failed: %Ts, file %Ts, line %d\n
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetRenameSystem_001
AssetSystem001
AssetSystemTest001
AssumeTrueKHR
Async Link Time Optimize PSO
Async Pipeline Compile
Async Texture hookup uses its own threadpool instead of the global pool
Async shader compile
AsyncHookUpTextureBits
AsyncHookUpTextureBits Data
AsyncHookUpTextureBits Disk
AsyncTextureHookup
At least one shader must specify a layout(max_primitives = value
At least one shader must specify a layout(max_vertices = value
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify an output layout(vertices
At marker 0x%02x, recovery action %d
AtomicAdd
AtomicAnd
AtomicCompSwap
AtomicCompareExchange
AtomicCompareExchangeWeak
AtomicCounter
AtomicCounterAdd
AtomicCounterAnd
AtomicCounterCompSwap
AtomicCounterDecrement
AtomicCounterExchange
AtomicCounterIncrement
AtomicCounterMax
AtomicCounterMemory
AtomicCounterMin
AtomicCounterOr
AtomicCounterSubtract
AtomicCounterXor
AtomicExchange
AtomicFAddEXT
AtomicFMaxEXT
AtomicFMinEXT
AtomicFlagClear
AtomicFlagTestAndSet
AtomicFloat16AddEXT
AtomicFloat16MinMaxEXT
AtomicFloat16VectorNV
AtomicFloat32AddEXT
AtomicFloat32MinMaxEXT
AtomicFloat64AddEXT
AtomicFloat64MinMaxEXT
AtomicIAdd
AtomicIDecrement
AtomicIIncrement
AtomicISub
AtomicLoad
AtomicMax
AtomicMin
AtomicOr
AtomicSMax
AtomicSMin
AtomicStorage
AtomicStorageOps
AtomicStore
AtomicSubtract
AtomicType
AtomicUMax
AtomicUMin
AtomicXor
Attempted to get underlying data type via member index for non-struct type
Attempted to hook renderdoc using path '%s'.  Result: '%s'\n
Attempted to update an image layout for an image that was not transitioned in this command buffer.\n
Attempted to update invalid descriptor set.\n
Attempting to create UAV for compressed image.  This is not supported without VK_KHR_maintenance2.\n
Attempting to create a Vulkan compute pipeline without a compute shader bound, aborting pipeline creation.\n
Attempting to create a Vulkan pipeline with too many descriptors, aborting pipeline creation.\n
Attempting to create a Vulkan pipeline without a vertex shader bound, aborting pipeline creation.\n
Attempting to create a descriptor set with VK_EXT_descriptor_indexing, but it's not enabled.\n
Attempting to load Steam Shader Pre-Cache database from basePath: %s read-only: %s\n
Attempting to purge m_fencedResourceList.Count() = %d, m_pendingFencedResourceQueue.Count() = %d, nCurrentCmdBuffersAvailable = %d, nAllocatedCommandBuffers = %d\n
Attempting to release an invalid semaphore handle.\n
Attributes must be an OpString
August
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
B 9A uA
B 9C |>I
B A3A A
B A;@ |F
B A;\arLw:L
B D9p0s[H
B D;p0rvH
B$9A$u9
B(9A(u1
B(H9B u\r
B(I9A
B,9A,u
B09A0u
B09C0s
B09C0svI
B0;A0r#w$H
B0A9@0
B0A9@0r\fI
B0A9A0r#H
B0A;B0r?w
B49A4u
B49C4u
B88C8uW
B98C9uN
B:\f8u M
B<9C<uF
B?d!\vY
B@9C@u
B@I;BHs
B@L+B8H
BCDEFGHIJKLMNO
BD9CDu6H
BFloat16ConversionINTEL
BGR565
BGR888
BGRA1010102
BGRA4444
BGRA8888
BGRA8888_LINEAR
BGRX8888
BGRX8888_LINEAR
BH98t\f
BHcS8H
BI_Append
BI_CalculateLevelOfDetail
BI_CalculateLevelOfDetailUnclamped
BI_Consume
BI_DecrementCounter
BI_Gather
BI_GatherAlpha
BI_GatherBlue
BI_GatherCmp
BI_GatherCmpAlpha
BI_GatherCmpBlue
BI_GatherCmpGreen
BI_GatherCmpRed
BI_GatherGreen
BI_GatherRed
BI_GetDimensions
BI_GetSamplePosition
BI_IncrementCounter
BI_InterlockedAdd
BI_InterlockedAnd
BI_InterlockedCompareExchange
BI_InterlockedCompareStore
BI_InterlockedExchange
BI_InterlockedMax
BI_InterlockedMin
BI_InterlockedOr
BI_InterlockedXor
BI_Load
BI_Load2
BI_Load3
BI_Load4
BI_RestartStrip
BI_Sample
BI_SampleBias
BI_SampleCmp
BI_SampleCmpLevelZero
BI_SampleGrad
BI_SampleLevel
BI_Store
BI_Store2
BI_Store3
BI_Store4
BI_SubpassLoad
BI_SubpassLoadMS
BKbhTb~XBK
BOOLCONSTANT
BOOLLITERAL
BUFFER
BXHc\bI
B\bA3(\au\vA3
B\bHcEgH
B\bHcи\b
B\bI9@0
B\bI9A0
B\bI;A\bt$A
B\bI;A\bt'A
B\bI;A\bt)I
B\bI;A\bt,I
B\f t=H
B\fA9A
B\fD9A\b
B\tV_sscanf
B`D+ǈJCC
Back-edges
BackColor
BackSecondaryColor
Backing store not supported
Bad Fax Lines: %lu\n
Bad VTEX data for '%s'\n
Bad aggregation op
Bad code word
Bad dynamic_cast
Bad state seen for shader in compilation job
Bad texture dimension %i for texture "%s" when setting "%s" (wants %i) - returning error texture in CTextureManagerVK::GetImageView\n
Bad unary op
BadFaxLines
Bailing out of OnBlockForQuery after %.3f seconds\n
BakedLODBuilderMgr001
Ballot must be a 4-component integer vector
Ballot must be present when Operation is PartitionedReduceNV, PartitionedInclusiveScanNV, or PartitionedExclusiveScanNV
BankBitsINTEL
BankwidthINTEL
Barrier
Barrier Builder didn't submit barriers\n
BaryCoordKHR
BaryCoordNV
BaryCoordNoPersp
BaryCoordNoPerspAMD
BaryCoordNoPerspCentroid
BaryCoordNoPerspCentroidAMD
BaryCoordNoPerspKHR
BaryCoordNoPerspNV
BaryCoordNoPerspSample
BaryCoordNoPerspSampleAMD
BaryCoordPullModel
BaryCoordPullModelAMD
BaryCoordSmooth
BaryCoordSmoothAMD
BaryCoordSmoothCentroid
BaryCoordSmoothCentroidAMD
BaryCoordSmoothSample
BaryCoordSmoothSampleAMD
Base Class Array
Base Class Descriptor at
Base Type
Base pipeline
Base recognizer function 'alreadyParsedRule' called by unknown parser type - provide override for this function\n
Base recognizer function 'consumeUntil' called by unknown parser type - provide override for this function\n
Base recognizer function 'consumeUntilSet' called by unknown parser type - provide override for this function\n
Base recognizer function 'match' called by unknown parser type - provide override for this function\n
Base recognizer function 'matchAny' called by unknown parser type - provide override for this function\n
Base recognizer function 'mismatch' called by unknown parser type - provide override for this function\n
Base recognizer function 'synPred' called by unknown parser type - provide override for this function\n
Base recognizer function antlr3RecognitionExceptionNew called by unknown parser type - provide override for this function\n
Base recognizer function consumeUntilSet called by unknown parser type - provide override for this function\n
Base recognizer function displayRecognitionError called by unknown parser type - provide override for this function\n
Base recognizer function recover called by unknown parser type - provide override for this function\n
Base recognizer function recoverFromMismatchedSet called by unknown parser type - provide override for this function\n
Base recognizer function recoverFromMismatchedToken called by unknown parser type - provide override for this function\n
BaseInstance
BaseVertex
BaselineExposure
BaselineNoise
BaselineSharpness
BayerGreenSplit
Beehive SPIRV Toolkit
Before SPIR-V 1.5
BeginInvocationInterlockEXT
Behavior is undefined unless ClusterSize is at least 1 and a power of 2
BenchmarkService001
BestQualityScale
Biases the mip level the texture streaming system choses to stream for each texture
Binary Size
Binary varint buffer overflows payload.\n
Binding
Binding must be a 32-bit unsigned integer OpConstant
BindlessImageNV
BindlessSamplerNV
BindlessTextureNV
BitCount
BitFieldInsert
BitFieldSExtract
BitFieldUExtract
BitInstructions
BitPiece
BitReverse
Bitcast
Bits/sample must be 1 for Group 3/4 encoding/decoding
BitsPerSample
BitsPerSample tag is missing, assuming 8 bits per sample
Bitwise not
BitwiseAnd
BitwiseOr
BitwiseXor
BlackLevel
BlackLevelDeltaH
BlackLevelDeltaV
BlackLevelRepeatDim
Block
Block %s: %s, %i allocs, %s unused
Block(s
BlockBytes
BlockCount
BlockMatchSamplerQCOM
BlockMatchTextureQCOM
BlockingPipesINTEL
Blocks
Blocks: %llu / %s
Bogus DAC index %d
Bogus DAC value 0x%x
Bogus DHT index %d
Bogus DQT index %d
Bogus Huffman table definition
Bogus JPEG colorspace
Bogus buffer control mode
Bogus input colorspace
Bogus marker length
Bogus message code %d
Bogus sampling factors
Bogus virtual array access
Boolean
Border color not supported by VK (%x), defaulting to white.\n
Borderless Window
Bound
BoundImageNV
BoundSamplerNV
BoundingBox
Branch
Branch: Break
Branch: Continue
Branch: IgnoreIntersectionKHR
Branch: Kill
Branch: Return
Branch: TerminateInvocation
Branch: TerminateRayKHR
Branch: Unknown Branch
BranchConditional
Budget
Budget: %s
BudgetBytes
Buffer
Buffer allocation failed for DEVICE_LOCAL memory indicating video memory is full, trying again in system memory as a fallback.\n
Buffer passed to JPEG library is too small
BufferBlock
BufferLocationINTEL
BufferSize must be a 32-bit unsigned integer OpConstant
BuildNDRange
BuiltIn
BuiltIn (No allowed mixing of built-in variables and
BuiltIns can only target variables, structure members or constants
BuiltinSymbolTable {\n
BurstCoalesceINTEL
ByteAddressBuffer
C 9k(u.H9
C ;C$t
C H!)H
C L;K8u\nL
C v%L;k\bw
C$ t1H
C$+CX;C
C(+ICPA
C(@80u
C(D9x<t
C(E3\vC4A
C(HcK H
C(LcC H
C+\f1A
C,D9{(A
C-@8s
C-D8k,t
C-D8s,t
C-D8s,t\n
C098|\v
C09B0r\bL
C09p\btU
C0@88tGI
C0@u2H
C0D9x<t
C0H9K8u\vH
C0Hc\tH
C4McS,E
C898|\v
C8;C4s\n
C8;St
C8H9C0
C8H9C0tP
C8H9C0u\nA
C8H9C@u
C8H9C@u\n
C8H9C@u\t
C8H;T$8t3A
C8H;T$8t9A
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\_build_\\rendersystem\\_vpc_rendersystemvulkan\\default\\win64\\_msvc_\\Retail\\rendersystemvulkan.pdb
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\bitmap\\floatbitmap.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\mathlib\\kmeansclustering.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\public\\tier0\\memstack.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\public\\tier0\\threadtoolstypes.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\public\\tier0\\tslist.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\public\\tier0\\utlrbtree.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\public\\tier0\\utltshash.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\fallbacktexturehelper.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\inputlayoutbase.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\occlusionquerymgr.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\rendercontextbase.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\renderdevicebase.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\renderdocapi.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\renderresource.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\renderstatehelper.h
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\sheetcache.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(2438):Error loading texture: %s\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3455):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3487):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3507):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3525):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3544):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3565):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3576):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturebase.cpp(3587):ResourceHandleToData( %s ) failed! Falling back to error texture!\n
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\texturestreaminghelper.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\asynccompilehelpervulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\debug_rendersystemvulkan_visualizer.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\framebuffermgrvulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\fsr2upscaler.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\indexbuffervulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\memorymgrvulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\pipelinecachemgrvulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\pipelinemgrvulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\rendercontextvulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\renderdevicevulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\renderthreadvulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\shadertablevulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\texturevulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\vertexbuffervulkan.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\rendersystem\\vulkan\\vmaimpl.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\vfx\\compiletargetexpr.g
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\vfx\\vfx_shader_file.cpp
C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\vfx\\vfxexpr.g
C<;C4A
C@H9\bt
C@H;CHs
C@H;CHs\a
C@H;CHs\aD
CALLDATAEXT
CALLDATAINEXT
CALLDATAINNV
CALLDATANV
CB: %u buffers, %.2f MB\n
CBaseAccelerationStructureVulkan::Create(192
CCIR601 sampling not implemented yet
CCITT Group 3
CCITT Group 4
CCITT RLE
CCITT RLE/W
CCommandBufferChunk CUtlMemoryPool
CDescriptorSetVulkan::Rebake - could not allocate descriptor in new pool.\n
CE08\bu\b
CE0f9\bu\b
CENTROID
CEP8\bu
CEPf9\bu
CFALayout
CFAPlaneColor
CFossilizeStateCreator::RegisterShader
CHH9CXr
CHH;EH
CInputLayoutDict<class CInputLayoutVulkan>::ConcatentateInputLayouts
CKMeansClustering::AssignVectorsToClusters(), C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\mathlib\\kmeansclustering.cpp:155
CKeyValues3Context::Root
CL$(H
CL$@L;s
CLA;@\bv
CLargeCommandBufferChunk CUtlMemoryPool
CL}bIc
CMediumCommandBufferChunk CUtlMemoryPool
CMemAllocSystemInitialize
COHERENT
COMMENT
CONOUT
CONTINUE
COOPMAT
CPH9CH
CPHc\bI
CPP_for_OpenCL
CPacked
CPipelineManagerVulkan::LoadPipelineCache
CRC mismatch!\n
CRT$XCA
CRT$XCC
CRT$XCL
CRT$XCU
CRT$XCZ
CRT$XDA
CRT$XDU
CRT$XDZ
CRT$XIA
CRT$XIC
CRT$XIZ
CRT$XLA
CRT$XLC
CRT$XLD
CRT$XLZ
CRT$XPA
CRT$XPX
CRT$XPXA
CRT$XPZ
CRT$XTA
CRT$XTZ
CRayTracePipelineVulkan
CRenderContextBase::SetAssociatedThreadIndex
CRenderContextVulkan:: Trying to resolve from a rect that is outside of the src rendertarget\n
CRenderContextVulkan::BeginQuery - Issued a Begin on a non-occlusion/pipeline stats query\n
CRenderContextVulkan::BeginQuery - Issued on an in-progress query!\n
CRenderContextVulkan::ClearUnorderedAccessViewFloat could not get CVulkanImage for texture %s
CRenderContextVulkan::ClearUnorderedAccessViewUint could not get CVulkanImage for texture %s
CRenderContextVulkan::CopyFromVolumeTexture - Trying to copy from a rect that is outside of the src texture\n
CRenderContextVulkan::CopyFromVolumeTexture failed to get resource.\n
CRenderContextVulkan::CopyTexture - Trying to copy from a rect that is outside of the src texture\n
CRenderContextVulkan::CopyTexture failed to get resource.\n
CRenderContextVulkan::EndQuery - BeginQuery failed, aborting!\n
CRenderContextVulkan::EndQuery - Issued on an in-progress query!\n
CRenderContextVulkan::MarkIssuesCommands
CRenderContextVulkan::MarkIssuesCommands(399
CRenderContextVulkan::ReadBuffer - attempted to read invalid handle.\n
CRenderContextVulkan::SemaphoreWaitAtBegin - already set semaphore to wait on, can't set another one.\n
CRenderContextVulkan::SetConstantBufferDataInternal
CRenderContextVulkan_SoftwareCommandLists::SemaphoreWaitAtBegin - already set semaphore to wait on, can't set another one.\n
CRenderContextVulkan_SoftwareCommandLists::SetConstantBufferDataInternal
CRenderDeviceBase
CRenderDeviceBase::AllocatePooledIndexBuffer(3569
CRenderDeviceBase::AllocatePooledIndexBuffer(3605
CRenderDeviceBase::AsyncSetTextureData(3226
CRenderDeviceBase::BeginRenderingToSwapChain(3473
CRenderDeviceBase::CreateConstantBuffer(1568
CRenderDeviceBase::EndRenderDocCapture(3459
CRenderDeviceBase::FindOrCreateTexture(1748
CRenderDeviceBase::FindOrCreateTexture: Trying to load multiple mipmaps into 3d or array texture: %s\n
CRenderDeviceBase::Flush(897
CRenderDeviceBase::ForceFlushGPU(914
CRenderDeviceBase::FreeTextureGPUResources(2060
CRenderDeviceBase::FreeTextureGPUResources(2064
CRenderDeviceBase::InitPerFrameMemoryStack
CRenderDeviceBase::Present(620
CRenderDeviceBase::StartRenderDocCapture(3446
CRenderDeviceVulkan::BeginSubmittingDisplayLists(4171
CRenderDeviceVulkan::CreateDefaultBuffers(2359
CRenderDeviceVulkan::CreateDefaultShaders
CRenderDeviceVulkan::CreateDescriptorSet: Failed to create descriptor set.\n
CRenderDeviceVulkan::CreateGPUBufferFormatted(5278
CRenderDeviceVulkan::CreateTLAS(7341
CRenderDeviceVulkan::DeleteQueryObject(4344
CRenderDeviceVulkan::GetDeviceSpecificTexture
CRenderDeviceVulkan::GetDeviceSpecificTexture() failed to get texture data.\n
CRenderDeviceVulkan::InitDevice: failed to get queue properties\n
CRenderDeviceVulkan::InitDevice: no graphics queue found\n
CRenderDeviceVulkan::InitDevice: vkEnumerateDeviceExtensionProperties( ... ) failed.\n
CRenderDeviceVulkan::OnLowMemoryNotification - evicting all textures to reduce memory pressure.\n
CRenderDeviceVulkan::ReadTexturePixels(3968
CRenderDeviceVulkan::RebakeDescriptorSetsReferencing - could not allocate descriptor in new pool.\n
CRenderDeviceVulkan::SetHardwareGammaRamp failed to get swap chain.\n
CRenderDeviceVulkan::UpdateDescriptorSet: Failed to update descriptor set.\n
CRenderDeviceVulkan::m_hDefaultConstantBuffer
CRenderThreadVulkan::OnReadPixels not supported for MSAA depth.  Requires shader-based MSAA depth resolve to be implemented.\n
CRenderThreadVulkan::OnReadPixels(199): Error! NULL texture pointer sent to OnReadPixels()!\n
CSOAContainer::SetAttributeType - ERROR, trying to change type of previously-defined attribute %d!\n
CSemiAutoRWLockT<class CThreadRWLock_FastRead>::LockForWrite
CSemiAutoRWLockT<class CThreadRWLock_FastRead>::Unlock
CSheetDataTextureCache::AllocateAndUploadSequenceData(356
CSwapChainBase::QueuePresentAndWait() looped for %d iterations without a present event.\n
CSwapChainVulkan::CreateSwapChain
CSwapChainVulkan::CreateSwapChain(3070
CSwapChainVulkan::SwapBuffers
CSwapChainVulkan::SwapBuffers vkAcquireNextImageKHR - completed result = %s\n
CSwapChainVulkan::SwapBuffers(): the main thread is more than %d frames ahead which means no swap queue images are available.  Waiting for outstanding frames...\n
CSwapChainVulkan::SwapBuffers(): waited for %0.2f seconds\n
CSwapChainVulkan::SwapBuffersRecreateSwapchain
CTSQueue corruption
CTSQueue: Misaligned queue\n
CTSQueue<class CCommandStream *,0>::Push
CTSQueue<class std::function<void __cdecl(void)> *,0>::Push
CTSQueue<struct CFossilizeStateCreator::RegisteredShader_t,0>::Push
CTSQueue<struct CMemoryManagerVulkan::FencedResourceList_t,0>::Push
CTSQueue<struct CPipelineManagerVulkan::LinkTimeOptimizedPipeline_t,0>::Push
CTSQueue<struct CPipelineManagerVulkan::PreWarmPipeline_t,0>::Push
CTSQueue<struct DynamicIndexBufferHandle_t__ *,0>::Push
CTSQueue<struct DynamicVertexBufferHandle_t__ *,0>::Push
CTSQueue<struct PipelineObjectVulkan_t *,0>::Push
CTSQueue<struct VkCommandBuffer_T *,0>::Push
CTSQueue<struct VkFence_T *,0>::Push
CTSQueue<struct VkShaderModule_T *,0>::Push
CTextureManagerBase::AsyncHookUpTextureBits
CTextureManagerBase::LoadStreamingData
CTextureManagerBase::MN_BuildRequestedResourcesList
CTextureManagerBase::MN_DeallocateCacheableData
CTextureManagerBase::MN_OnResourceFileLoaded
CTextureManagerBase::MN_OnResourceLoadCompleted
CTextureManagerBase::MN_OnResourceLoadFailed
CTextureManagerBase::MarkAsyncUpdatedThisFrame - Invalid texture handle.\n
CTextureManagerBase::PreloadTextureBits
CTextureManagerBase::RemoveTextureFromAnyQueues
CTextureManagerBase::WasAsyncUpdatedThisFrame - Invalid texture handle.\n
CTextureManagerVulkan::ComputeTextureObject(1473
CTextureManagerVulkan::ComputeTextureObject: Tried to create a depth-stencil texture which is *not* a render target!\n
CTextureStreamingHelper::LoadExplicitlyRequestedTextures
CTextureStreamingHelper::RemoveMipLevelsForTextures
CTextureVulkan::SetInitialImageLayout(818
CTextureVulkan::SetInitialImageLayout(825
CUtlFixedMemory overflow!\n
CUtlLeanVectorFixedGrowableBase<class CCommandStream *,8,short>::EnsureCapacity
CUtlLeanVectorFixedGrowableBase<class CSmartPtr<class CThreadedJob,class CRefCountAccessor>,2,short>::EnsureCapacity
CUtlLeanVectorFixedGrowableBase<struct VkImageMemoryBarrier,16,short>::EnsureCapacity
CUtlLinkedList overflow! (exhausted index range)\n
CUtlLinkedList overflow! (exhausted memory allocator)\n
CUtlMemory_RawAllocator<class CUtlHashtableEntry<unsigned int,struct empty_t> >::EnsureCapacity
CUtlMemory_RawAllocator<unsigned int>::EnsureCapacity
CUtlMemory_RawAllocator<unsigned int>::Grow
CUtlRBTree overflow with %u elements!\n
CUtlRBTree<struct CUtlOrderedMapBase<class CShaderVulkanBase const *,class CUtlLinkedList<struct CFossilizeStateCreator::FossilizeShaderModule_t *,unsigned short,0,unsigned short,class CUtlMemory<struct UtlLinkedListElem_t<struct CFossilizeStateCreator::FossilizeShaderModule_t *,unsigned short>,unsigned short> > *,class CDefLess<class CShaderVulkanBase const *>,unsigned short>::Node_t,class CUtlOrderedMapBase<class CShaderVulkanBase const *,class CUtlLinkedList<struct CFossilizeStateCreator::FossilizeShaderModule_t *,unsigned short,0,unsigned short,class CUtlMemory<struct UtlLinkedListElem_t<struct CFossilizeStateCreator::FossilizeShaderModule_t *,unsigned short>,unsigned short> > *,class CDefLess<class CShaderVulkanBase const *>,unsigned short>::CKeyLess,unsigned short,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<class CShaderVulkanBase const *,class CUtlLinkedList<struct CFossilizeStateCreator::FossilizeShaderModule_t *,unsigned short,0,unsigned short,class CUtlMemory<struct UtlLinkedListElem_t<struct CFossilizeStateCreator::FossilizeShaderModule_t *,unsigned short>,unsigned short> > *,class CDefLess<class CShaderVulkanBase const *>,unsigned short>::Node_t,unsigned short>,unsigned short> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<class CWeakHandle<struct InfoForResourceTypeCTextureBase>,class CUtlHashtable<class CDescriptorSetVulkan *,struct empty_t,struct DefaultHashFunctor<class CDescriptorSetVulkan *>,struct DefaultEqualFunctor<class CDescriptorSetVulkan *>,struct undefined_t,class CUtlMemory<class CUtlHashtableEntry<class CDescriptorSetVulkan *,struct empty_t>,int>,1> *,class CDefLess<class CWeakHandle<struct InfoForResourceTypeCTextureBase> >,int>::Node_t,class CUtlOrderedMapBase<class CWeakHandle<struct InfoForResourceTypeCTextureBase>,class CUtlHashtable<class CDescriptorSetVulkan *,struct empty_t,struct DefaultHashFunctor<class CDescriptorSetVulkan *>,struct DefaultEqualFunctor<class CDescriptorSetVulkan *>,struct undefined_t,class CUtlMemory<class CUtlHashtableEntry<class CDescriptorSetVulkan *,struct empty_t>,int>,1> *,class CDefLess<class CWeakHandle<struct InfoForResourceTypeCTextureBase> >,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<class CWeakHandle<struct InfoForResourceTypeCTextureBase>,class CUtlHashtable<class CDescriptorSetVulkan *,struct empty_t,struct DefaultHashFunctor<class CDescriptorSetVulkan *>,struct DefaultEqualFunctor<class CDescriptorSetVulkan *>,struct undefined_t,class CUtlMemory<class CUtlHashtableEntry<class CDescriptorSetVulkan *,struct empty_t>,int>,1> *,class CDefLess<class CWeakHandle<struct InfoForResourceTypeCTextureBase> >,int>::Node_t,int>,int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<class CWeakHandle<struct InfoForResourceTypeCTextureBase>,struct VulkanDeviceSpecificTexture_t,class CDefLess<class CWeakHandle<struct InfoForResourceTypeCTextureBase> >,unsigned int>::Node_t,class CUtlOrderedMapBase<class CWeakHandle<struct InfoForResourceTypeCTextureBase>,struct VulkanDeviceSpecificTexture_t,class CDefLess<class CWeakHandle<struct InfoForResourceTypeCTextureBase> >,unsigned int>::CKeyLess,unsigned int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<class CWeakHandle<struct InfoForResourceTypeCTextureBase>,struct VulkanDeviceSpecificTexture_t,class CDefLess<class CWeakHandle<struct InfoForResourceTypeCTextureBase> >,unsigned int>::Node_t,unsigned int>,unsigned int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<enum KV3MetatextType_t,class CBufferString,class CDefLess<enum KV3MetatextType_t>,int>::Node_t,class CUtlOrderedMapBase<enum KV3MetatextType_t,class CBufferString,class CDefLess<enum KV3MetatextType_t>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<enum KV3MetatextType_t,class CBufferString,class CDefLess<enum KV3MetatextType_t>,int>::Node_t,int>,int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<struct RenderDescriptorSetHandle_t__ *,struct VulkanDeviceSpecificDescriptorSet_t,class CDefLess<struct RenderDescriptorSetHandle_t__ *>,unsigned int>::Node_t,class CUtlOrderedMapBase<struct RenderDescriptorSetHandle_t__ *,struct VulkanDeviceSpecificDescriptorSet_t,class CDefLess<struct RenderDescriptorSetHandle_t__ *>,unsigned int>::CKeyLess,unsigned int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<struct RenderDescriptorSetHandle_t__ *,struct VulkanDeviceSpecificDescriptorSet_t,class CDefLess<struct RenderDescriptorSetHandle_t__ *>,unsigned int>::Node_t,unsigned int>,unsigned int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<struct RenderRayTracePipelineHandle_t__ *,struct VulkanDeviceSpecificRayTracePipeline_t,class CDefLess<struct RenderRayTracePipelineHandle_t__ *>,unsigned int>::Node_t,class CUtlOrderedMapBase<struct RenderRayTracePipelineHandle_t__ *,struct VulkanDeviceSpecificRayTracePipeline_t,class CDefLess<struct RenderRayTracePipelineHandle_t__ *>,unsigned int>::CKeyLess,unsigned int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<struct RenderRayTracePipelineHandle_t__ *,struct VulkanDeviceSpecificRayTracePipeline_t,class CDefLess<struct RenderRayTracePipelineHandle_t__ *>,unsigned int>::Node_t,unsigned int>,unsigned int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<struct RenderResourceHandle_t__ *,struct VulkanDeviceSpecificBuffer_t,class CDefLess<struct RenderResourceHandle_t__ *>,unsigned int>::Node_t,class CUtlOrderedMapBase<struct RenderResourceHandle_t__ *,struct VulkanDeviceSpecificBuffer_t,class CDefLess<struct RenderResourceHandle_t__ *>,unsigned int>::CKeyLess,unsigned int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<struct RenderResourceHandle_t__ *,struct VulkanDeviceSpecificBuffer_t,class CDefLess<struct RenderResourceHandle_t__ *>,unsigned int>::Node_t,unsigned int>,unsigned int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned __int64,class CSamplerStateDesc *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,class CUtlOrderedMapBase<unsigned __int64,class CSamplerStateDesc *,class CDefLess<unsigned __int64>,unsigned short>::CKeyLess,unsigned short,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned __int64,class CSamplerStateDesc *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,unsigned short>,unsigned short> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeComputePipeline_t *,class CDefLess<unsigned __int64>,unsigned int>::Node_t,class CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeComputePipeline_t *,class CDefLess<unsigned __int64>,unsigned int>::CKeyLess,unsigned int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeComputePipeline_t *,class CDefLess<unsigned __int64>,unsigned int>::Node_t,unsigned int>,unsigned int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeDescriptorSetLayout_t *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,class CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeDescriptorSetLayout_t *,class CDefLess<unsigned __int64>,unsigned short>::CKeyLess,unsigned short,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeDescriptorSetLayout_t *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,unsigned short>,unsigned short> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeGraphicsPipeline_t *,class CDefLess<unsigned __int64>,unsigned int>::Node_t,class CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeGraphicsPipeline_t *,class CDefLess<unsigned __int64>,unsigned int>::CKeyLess,unsigned int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeGraphicsPipeline_t *,class CDefLess<unsigned __int64>,unsigned int>::Node_t,unsigned int>,unsigned int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizePipelineLayout_t *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,class CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizePipelineLayout_t *,class CDefLess<unsigned __int64>,unsigned short>::CKeyLess,unsigned short,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizePipelineLayout_t *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,unsigned short>,unsigned short> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeRenderPass_t *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,class CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeRenderPass_t *,class CDefLess<unsigned __int64>,unsigned short>::CKeyLess,unsigned short,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeRenderPass_t *,class CDefLess<unsigned __int64>,unsigned short>::Node_t,unsigned short>,unsigned short> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeShaderModule_t *,class CDefLess<unsigned __int64>,unsigned int>::Node_t,class CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeShaderModule_t *,class CDefLess<unsigned __int64>,unsigned int>::CKeyLess,unsigned int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned __int64,struct CFossilizeStateCreator::FossilizeShaderModule_t *,class CDefLess<unsigned __int64>,unsigned int>::Node_t,unsigned int>,unsigned int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,struct CommandBufferPool_t *,class CDefLess<unsigned int>,int>::Node_t,class CUtlOrderedMapBase<unsigned int,struct CommandBufferPool_t *,class CDefLess<unsigned int>,int>::CKeyLess,int,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct CommandBufferPool_t *,class CDefLess<unsigned int>,int>::Node_t,int>,int> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,struct VkCommandPool_T * *,class CDefLess<unsigned int>,unsigned short>::Node_t,class CUtlOrderedMapBase<unsigned int,struct VkCommandPool_T * *,class CDefLess<unsigned int>,unsigned short>::CKeyLess,unsigned short,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,struct VkCommandPool_T * *,class CDefLess<unsigned int>,unsigned short>::Node_t,unsigned short>,unsigned short> >::Insert
CUtlRBTree<struct CUtlOrderedMapBase<unsigned int,unsigned int,class CDefLess<unsigned int>,unsigned short>::Node_t,class CUtlOrderedMapBase<unsigned int,unsigned int,class CDefLess<unsigned int>,unsigned short>::CKeyLess,unsigned short,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlOrderedMapBase<unsigned int,unsigned int,class CDefLess<unsigned int>,unsigned short>::Node_t,unsigned short>,unsigned short> >::Insert
CUtlStreamBuffer does not support TEXT_BUFFER's use CUtlBuffer\n
CUtlVector
CVfxShaderFile::Unserialize
CWD>~3
CXH9CPu
C\b3\tC\fH
C\b98|\v
C\b9\au\aH
C\bD;G\bD
C\bE3ɋG
C\bHcV\fH
C\bHc\tH
C\bLc6Ic
C\bs:H
C\bt$D
C\bu\tD
C\nf;E\ttW
CacheControlLoadINTEL
CacheControlStoreINTEL
CacheControlsINTEL
CacheSizeINTEL
CachedINTEL
CalculateLevelOfDetail
CalculateLevelOfDetailUnclamped
CalibrationIlluminant1
CalibrationIlluminant2
Call to vkCreateSwapchainWSI returned a error %s.\n
Call to vkGetPhysicalDeviceSurfaceSupportKHR returned an error.\n
Callable Data must be the result of a OpVariable
Callable Data must have storage class CallableDataKHR or IncomingCallableDataKHR
CallableDataKHR
CallableDataKHR Storage Class is limited to RayGenerationKHR, ClosestHitKHR, CallableKHR, and MissKHR execution model
CallableDataNV
CallableKHR
CallableNV
CameraCalibration1
CameraCalibration2
CameraSerialNumber
Can not compute
Can not read scanlines from a tiled image
Can only use one of gl_ClipDistance or gl_ClipDistancePerViewNV
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred
Can only use one of gl_CullDistance or gl_CullDistancePerViewNV
Can only use one of gl_Layer or gl_LayerPerViewNV
Can only use one of gl_Position or gl_PositionPerViewNV
Can only use one of gl_ViewportMask or gl_ViewportMaskPerViewNV
Can't clear TEXTURE_WAITING_FOR_IO flag because of streaming request mismatch: %d in handle, %d in request\n
Can't clear TEXTURE_WAITING_FOR_IO flag because pTexture is NULL\n
Can't detect memory size on this platform!\n
Can't specify initial state of dynamic constant buffers at creation time!\n
Cannot allocate a variable containing a 16-bit type in
Cannot allocate a variable containing a 8-bit type in
Cannot attach multiple ES shaders of the same type to a single program
Cannot copy composites of 8- or 16-bit types
Cannot copy memory of objects containing 8- or 16-bit types
Cannot create a composite containing 8- or 16-bit types
Cannot create undefined values with 8- or 16-bit types
Cannot create undefined values with void type
Cannot cross link ES and desktop profiles
Cannot declare a function in a function body
Cannot extract from a composite of 8- or 16-bit types
Cannot extract from a vector of 8- or 16-bit types
Cannot form constants of 8- or 16-bit types
Cannot handle different per-sample values for field "%s
Cannot insert into a composite of 8- or 16-bit types
Cannot insert into a vector of 8- or 16-bit types
Cannot load a runtime-sized array
Cannot mix ES profile with non-ES profile shaders
Cannot quantize more than %d color components
Cannot quantize to fewer than %d colors
Cannot quantize to more than %d colors
Cannot read TIFF header
Cannot reconstruct lineOffset table in DecodeEXRImage
Cannot reuse block name within the same interface
Cannot shuffle a vector of 8- or 16-bit types
Cannot transcode due to multiple use of quantization table %d
Cannot transpose matrices of 16-bit floats
Cannot use a pointer in the PhysicalStorageBuffer storage class
Cannot use both gl_FragColor and gl_FragData
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Cannot use imported metadata together with whitelists.\n
Cannot write directory, out of space
Capability
Capability Image1D is required to access storage image
Capability ImageBuffer is required to access storage image
Capability ImageCubeArray is required to access
Capability ImageMSArray is required to access storage
Capability ImageRect is required to access storage image
Capability Int64ImageEXT is required when using Sampled Type of 64-bit int
Capability StorageImageMultisample is required when using multisampled storage image
Capability StorageImageReadWithoutFormat is required to
Capability StorageImageWriteWithoutFormat is required to write
CaptureEventProfilingInfo
Case construct that targets
Caution: quantization tables are too coarse for baseline JPEG
Ceiling
CellLength
CellWidth
Centroid
Ch;0u`L
ChHcP\b
CheckAccessFullyMapped
CheckArbitraryPeekGet@CUtlBuffer@@QEAA_NHAEAH@Z
CheckGet@CUtlBuffer@@IEAA_NH@Z
CheckPut@CUtlBuffer@@IEAA_NH@Z
Checked pending presents %s times; waited %s times; abandoned %s times\n
Checking for VK_NV_device_diagnostic_checkpoints indicating queue failure...\n
Checkpoint data: '%s' at pipeline stage %s\n
ChromaBlurRadius
ClampToEdge
Class Hierarchy Descriptor
Clay Shader Compiler
CleanFaxData
Cleanup: discarding lookahead
Cleanup: popping
ClearDestruct@CUtlMemoryPoolBase@@IEAAXP6AXPEAX@Z@Z
ClearLayout
Clearing TEXTURE_WAITING_FOR_IO flag because it's has no streaming request id anymore\n
ClientToolsInfo_001
ClipDistance
ClipDistancePerViewNV
ClipPath
ClipVertex
ClobberINTEL
CloseHandle
CloseThreadpoolWork
Closed temporary file %s
ClosestHitKHR
ClosestHitNV
ClusterSize must be a constant instruction
ClusterSize must be a scalar of integer type, whose Signedness operand is 0
ClusterSize must be an unsigned integer scalar
ClusterSize must be present when Operation is ClusteredReduce
ClusterSize must come from a constant instruction
ClusteredReduce
CmdExecTime
CoalescedInputCountAMDX
CoalescingAMDX
CodeSectionINTEL
Codeplay
Coherent
ColMajor
ColorAttachmentReadEXT
ColorMap
ColorMatrix1
ColorMatrix2
ColorResponseUnit
Colormap
Column
Column Major operand <id
Column type is not defined
ColumnMajorKHR
Columns in a matrix must be of type vector
Command stream pools: %s bytes in base, %s bytes in medium, %s bytes in large (%s extra data fallbacks)\n
CommandLine
CommitReadPipe
CommitTo@CMemoryStack@@AEIAA_NPEAE@Z
CommitWritePipe
Compacted: %llu buffers, %.2f MB (%.1f%% of %.2f MB uncompacted)\n
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
CompareStringEx
CompareStringW
Compilation failed.  Log string from glslang %s\n
Complete Object Locator
Component
Component %d: %dhx%dv q=%d
Component %d: dc=%d ac=%d
Component Count
Component Count must be
Component Count must be 32-bit integer OpConstant
Component Count must be positive
Component decoration only allowed on 64-bit scalar and 2-component vector
Component decoration specified for type
Component decoration value must not be 1 or 3 for 64-bit data types
Component decoration value must not be greater than 3
Component index
Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c
Component type is not defined
CompositeConstruct
CompositeConstructContinuedINTEL
CompositeExtract
CompositeInsert
CompressBlocksBC1
CompressBlocksBC3
CompressBlocksBC6H
CompressBlocksBC7
Compressed texture decoded in %.2f ms\n
Compression
Compression algorithm does not support random access
Compression scheme %u %s decoding is not implemented
Compression scheme %u %s encoding is not implemented
ComputeDerivativeGroupLinearNV
ComputeDerivativeGroupQuadsNV
ComputeTextureSpecificationFromMipDelta Adjusted
ComputeTextureSpecificationFromMipDelta Disk
Condition operand for OpBranchConditional must be of boolean type
Condition\n
ConduitKernelArgumentINTEL
Consecutive Bad Fax Lines: %lu\n
ConsecutiveBadFaxLines
ConstCachedINTEL
ConstOffset
ConstOffset image operand not allowed
ConstOffsets
ConstType
Constant
Constant:\n
ConstantBuffer
ConstantComposite
ConstantCompositeContinuedINTEL
ConstantDataPointerPushConstant
ConstantDataStorageBuffer
ConstantDataUniform
ConstantFalse
ConstantFunctionPointerINTEL
ConstantH
ConstantNull
ConstantPipeStorage
ConstantSampler
ConstantTrue
Constituent <id
Constituent <id> count does not match Result Type <id
Constituent count does not match Result Type <id
Construct
Construct acceleration structure
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3
Construct bmat3x2
Construct bmat3x4
Construct bmat4
Construct bmat4x2
Construct bmat4x3
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct combined texture-sampler
Construct cooperative matrix KHR
Construct cooperative matrix NV
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3
Construct dmat3x2
Construct dmat3x4
Construct dmat4
Construct dmat4x2
Construct dmat4x3
Construct double
Construct dvec2
Construct dvec3
Construct dvec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3
Construct f16mat3x2
Construct f16mat3x4
Construct f16mat4
Construct f16mat4x2
Construct f16mat4x3
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct float
Construct float16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3
Construct imat3x2
Construct imat3x4
Construct imat4
Construct imat4x2
Construct imat4x3
Construct int
Construct int16_t
Construct int64
Construct int8_t
Construct ivec2
Construct ivec3
Construct ivec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3
Construct mat3x2
Construct mat3x4
Construct mat4
Construct mat4x2
Construct mat4x3
Construct reference
Construct reference type
Construct structure
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uint16_t
Construct uint64
Construct uint8_t
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3
Construct umat3x2
Construct umat3x4
Construct umat4
Construct umat4x2
Construct umat4x3
Construct uvec2
Construct uvec3
Construct uvec4
Construct vec2
Construct vec3
Construct vec4
Constu
Consu
Consume
ConsumeStructuredBuffer
Continue Target
ContractionOff
Contradictory depth layouts
Contradictory input layout primitives
Contradictory input vertex spacing
Contradictory layout max_primitives values
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory local size
Contradictory local size specialization ids
Contradictory output layout primitives
Contradictory triangle ordering
Contradictory xfb_stride
ControlBarrier
ControlBarrierArriveINTEL
ControlBarrierWaitINTEL
Convert bool to double
Convert bool to float
Convert bool to float16_t
Convert bool to in16t_t
Convert bool to int
Convert bool to int64
Convert bool to int8_t
Convert bool to uint
Convert bool to uint16_t
Convert bool to uint64
Convert bool to uint8_t
Convert double to bool
Convert double to float
Convert double to float16_t
Convert double to int
Convert double to int16_t
Convert double to int64
Convert double to int8_t
Convert double to uint
Convert double to uint16_t
Convert double to uint64
Convert double to uint8_t
Convert float to bool
Convert float to double
Convert float to float16_t
Convert float to int
Convert float to int16_t
Convert float to int64
Convert float to int8_t
Convert float to uint
Convert float to uint16_t
Convert float to uint64
Convert float to uint8_t
Convert float16_t to bool
Convert float16_t to double
Convert float16_t to float
Convert float16_t to int
Convert float16_t to int16_t
Convert float16_t to int64
Convert float16_t to int8_t
Convert float16_t to uint
Convert float16_t to uint16_t
Convert float16_t to uint64
Convert float16_t to uint8_t
Convert int to bool
Convert int to double
Convert int to float
Convert int to float16_t
Convert int to int16_t
Convert int to int64
Convert int to int8_t
Convert int to uint
Convert int to uint16_t
Convert int to uint64
Convert int to uint8_t
Convert int16_t to bool
Convert int16_t to double
Convert int16_t to float
Convert int16_t to float16_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to int8_t
Convert int16_t to uint
Convert int16_t to uint16_t
Convert int16_t to uint64
Convert int16_t to uint8_t
Convert int64 to bool
Convert int64 to double
Convert int64 to float
Convert int64 to float16_t
Convert int64 to int
Convert int64 to int16_t
Convert int64 to int8_t
Convert int64 to uint
Convert int64 to uint16_t
Convert int64 to uint64
Convert int64 to uint8_t
Convert int8_t to bool
Convert int8_t to double
Convert int8_t to float
Convert int8_t to float16_t
Convert int8_t to int
Convert int8_t to int16_t
Convert int8_t to int64
Convert int8_t to uint
Convert int8_t to uint16_t
Convert int8_t to uint64
Convert int8_t to uint8_t
Convert pointer to uint64_t
Convert uint to bool
Convert uint to double
Convert uint to float
Convert uint to float16_t
Convert uint to int
Convert uint to int16_t
Convert uint to int64
Convert uint to int8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to uint8_t
Convert uint16_t to bool
Convert uint16_t to double
Convert uint16_t to float
Convert uint16_t to float16_t
Convert uint16_t to int
Convert uint16_t to int16_t
Convert uint16_t to int64
Convert uint16_t to int8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to uint8_t
Convert uint64 to bool
Convert uint64 to double
Convert uint64 to float
Convert uint64 to float16_t
Convert uint64 to int
Convert uint64 to int16_t
Convert uint64 to int64
Convert uint64 to int8_t
Convert uint64 to uint
Convert uint64 to uint16
Convert uint64 to uint8_t
Convert uint64_t to acceleration structure
Convert uint64_t to pointer
Convert uint8_t to bool
Convert uint8_t to double
Convert uint8_t to float
Convert uint8_t to float16_t
Convert uint8_t to int
Convert uint8_t to int16_t
Convert uint8_t to int64
Convert uint8_t to int8_t
Convert uint8_t to uint
Convert uint8_t to uint16_t
Convert uint8_t to uint64
Convert uvec2 to acceleration strucuture
ConvertBF16ToFINTEL
ConvertFToBF16INTEL
ConvertFToS
ConvertFToU
ConvertImageToUNV
ConvertPtrToU
ConvertSToF
ConvertSampledImageToUNV
ConvertSamplerToUNV
ConvertUToAccelerationStructureKHR
ConvertUToF
ConvertUToImageNV
ConvertUToPtr
ConvertUToSampledImageNV
ConvertUToSamplerNV
Cooperative matrix 'K' mismatch
Cooperative matrix 'M' mismatch
Cooperative matrix 'N' mismatch
Cooperative matrix can only be cast to another cooperative
Cooperative matrix constructor argument must be scalar or cooperative matrix
Cooperative matrix scopes must match
Cooperative matrix type must be A Type
Cooperative matrix type must be Accumulator Type
Cooperative matrix type must be B Type
Cooperative matrix type parameters mismatch
Cooperative matrix types (or types containing them) can only be allocated
Cooperative matrix types must not be used in shared memory
CooperativeMatrixKHR
CooperativeMatrixLengthKHR
CooperativeMatrixLengthNV
CooperativeMatrixLoadKHR
CooperativeMatrixLoadNV
CooperativeMatrixMulAddKHR
CooperativeMatrixMulAddNV
CooperativeMatrixNV
CooperativeMatrixNV capability is present
CooperativeMatrixStoreKHR
CooperativeMatrixStoreNV
CopyGPUBufferHiddenStructureCount failed - invalid destination buffer.\n
CopyGPUBufferHiddenStructureCount failed - invalid source buffer.\n
CopyLogical
CopyMemory
CopyMemorySized
CopyObject
Copyright
Copyright (C) 2010, Thomas G. Lane, Guido Vollbeding
CorExitProcess
CoreBuiltinsARM
CoreCountARM
CoreIDARM
CoreMaxIDARM
Corrupt JPEG data: %u extraneous bytes before marker 0x%02x
Corrupt JPEG data: bad Huffman code
Corrupt JPEG data: bad arithmetic code
Corrupt JPEG data: found marker 0x%02x instead of RST%d
Corrupt JPEG data: premature end of data segment
Corrupt image type definition
Could not decode alpha data
Could not perform requested binary operation
Could not process include directive
CounterBuffer
CpHcD$pD
CreateDirectoryA
CreateEventW
CreateFileA
CreateFileW
CreateNewThreadPool
CreatePipeFromPipeStorage
CreatePipeline
CreateSimpleThread
CreateThread
CreateThreadpoolWork
CreateUserEvent
CrossDevice
CrossWorkgroup
CrossWorkgroup or Function
CrossWorkgroupCastToPtrINTEL
CrossWorkgroupMemory
Ct-<D
CubeFaceCoordAMD
CubeFaceIndexAMD
Cull Mask must be a 32-bit int scalar
Cull mask must be a 32-bit int scalar
CullBackFacingTrianglesKHR
CullDistance
CullDistancePerViewNV
CullFrontFacingTrianglesKHR
CullMaskKHR
CullNoOpaqueKHR
CullOpaqueKHR
CullPrimitiveEXT
Current Times must be a 32-bit float scalar type
CurrentICCProfile
CurrentPreProfileMatrix
CurrentRayTimeNV
Custom
CustomData
CustomPools
Cxr*H
Cy2@K
C|A+\tC\f
CĀ8/u\nH
Cƀ<8 t
Cƀ<8\tu
CȉT$HE
D W?{W
D!l$xA
D#@\ffD9
D$ 222
D$ 9FD
D$ @8h
D$ D8
D$ D8x
D$ D9
D$ D9@ }\nH
D$ D9H
D$ D9H }\nH
D$ D;l$(teL
D$ E3
D$ E32
D$ E3\t\\$7H
D$ H;S
D$ H;W
D$ HcH
D$ Hǅx
D$ I+D
D$ I9P\bv
D$ I;R\bvKH
D$ Ic
D$ L9H s\nH
D$ L9H }\nH
D$ L9P s\nH
D$ fD
D$ tGH
D$ t\vL
D$ |\aL
D$"fD9 u\fA
D$(9D
D$(E3\tD$ D
D$(E3\v։D$ H
D$(E3ɉL$ H
D$(H!L$ E3
D$(H9D
D$(H9D$ u
D$(H;SHt
D$(fff
D$,9D
D$,9D$(tRM
D$,v\aD
D$03ɉL$8L
D$09D$4tBL
D$09P }\vH
D$09X s\n
D$09X s\vD
D$0;H s\r
D$0@8
D$0@8p
D$0A9P\b~2L
D$0D+d
D$0D8d
D$0D9H r
D$0D9H s\n
D$0D9P
D$0D;d$8
D$0E3\tD
D$0E3\tD$(A
D$0E8f\ft'H
D$0H9D$8
D$0H;C0
D$0H;C\bt\\L
D$0H;D
D$0H;H s\r
D$0H;Q
D$0H;S
D$0H;V
D$0HcH
D$0L9H s\vD
D$0fA
D$0fff
D$0u\rH
D$0z\tu\aƃh
D$18F(u\bH
D$49C\b
D$4;C\b
D$4D9J u\nH
D$7fff?H
D$89D$<u
D$8;C\b
D$8D;hhr
D$8H;D$@t\vH
D$8H;S
D$8H;X\b
D$8HcC(I
D$8HcJ
D$8fff
D$8i|$8
D$8t\nH
D$<9D$Pt_M
D$<fA\v
D$<ud
D$@3\tD$8
D$@9D$DuT
D$@;H s\r
D$@D8
D$@E3\v
D$@E3ɉD$8L
D$@H9P s\nH
D$@H;u t\rH
D$@HcH
D$@Hk
D$@f9H
D$@fD
D$@tYA
D$@t\nH
D$@u\rM
D$D9D$@t_M
D$Dfff
D$H;D$L
D$HA8v-t
D$HE3
D$HH+D$XH
D$HH9D$8t\a
D$HH;S
D$HH;U
D$HH;V(t
D$HHcE
D$HL9gXt
D$Hr\bH
D$HtOH
D$L9D$8
D$L9D$Hs H
D$LH+uxL
D$P3ɉL$XI
D$P9A\b
D$P;C\b
D$P;L$H
D$P;L$L
D$P<\tu\a
D$PD8
D$PD9d$X
D$PH+D$HH
D$PH9D$Ht\aL
D$PH;C\b
D$PH;Q
D$PH;W
D$PHcFpH
D$PHcH
D$PI;V
D$PL9$\b
D$PL;\r 58
D$PLcA
D$PLcP
D$P\vD
D$Pt\f
D$P}\nH
D$RfE
D$T9D$`t_M
D$TH;U\bt
D$X8D$0t
D$XD8
D$XD9
D$XH90
D$XH;D$ht.H
D$XH;D$xt.H
D$XH;E
D$XH;S
D$XHcG H
D$X\bE3
D$\bAi
D$\bDi
D$\bv/1
D$\bv\eH
D$\r u
D$`8H\b
D$`9O8
D$`A3A
D$`D9p
D$`D9p }\nH
D$`HcH
D$`fA\t
D$`fE
D$`fff
D$`t\fH
D$d+D$t
D$dfff
D$h9t$P
D$hH;E
D$hH;G
D$hH;S@t
D$hL;l
D$hr%H
D$hsC
D$lH;U\bt
D$p9C\b
D$p9x s\n
D$p<9w
D$pA;E
D$pD81t@I
D$pD9p r
D$pD9x$r
D$pE3ɋT
D$pH9D$`t)E
D$pH;E
D$pH;S
D$pH;X
D$pHcE
D$pHc\bL
D$pI9Fpu\r
D$pfA
D$pfD
D$pfff
D$tfff
D$x9C\b
D$x;C\b
D$xD8k\bu
D$xD8s
D$xD8w
D$xD9h s\t
D$xE;A\b
D$xH;E
D$xHc\f
D)e(u\bH
D)u(u\bH
D)v(u\bH
D+L$t
D+pt,A
D+{HD
D+ȋC4i
D,\bHcB K
D1 A9A
D16_SHADOW
D24FS8
D24X8_SHADOW
D2\bfA
D2\nfA
D32FS8
D3DCOLORtoUBYTE4
D3O\b#O\bD
D8&t\rH
D8*t$Ic
D80u\aH
D81uUL9r
D8C\buIH
D8C\buKH
D8C\buLH
D8D$1u
D8G\buEH
D8G\buGH
D8G\buKH
D8G\buMH
D8H\at\nD8H
D8I,t\fD8I-t
D8K\buMH
D8L$0u
D8O\buIH
D8S\buPH
D8W\buLH
D8W\buPH
D8W\buTH
D8W\buUH
D8Z\bt
D8[\buLH
D8[\buWH
D8\\$1u
D8`|t&9Ppu
D8`|t\f
D8c,t\f3
D8d$(u\bD
D8d$0t(H
D8d$4t(H
D8d$4u H
D8d$zt
D8d$zt H
D8d$|u\aD8d$}t
D8d$}t\f
D8e H
D8f,t\f3
D8fXtEH
D8g,t\f3
D8g,t\t
D8g-t
D8g\buHH
D8i H
D8i,t\n
D8k H
D8k,t\f3
D8kDt
D8m\r}(A
D8n t'H
D8n,t\f3
D8o,t\f3
D8o\vu-E
D8p-u\n
D8q,t\fD8q-t
D8s\buFH
D8s\buNH
D8s\bu\bH
D8s\bu\fH
D8t$<tKI
D8t$@uqD8t$AujH
D8t$`t
D8t$ht\nH
D8u,t\fD8u-t\fD
D8v,t\fD8v-t
D8v\bu\bH
D8v\r|\fH
D8w\buBH
D8z,t\f3
D8z-t A
D8{,t\n
D8{\buHH
D8|$Ht\fH
D8|$ht\a
D8~\nt
D9 u2D9
D9 u\aD;l9
D9 u\nD9x
D9%v`H
D9/|"Hc
D90tW2
D90t\vH
D91tKL
D98t\vH
D98u\nD9p
D99u\nD9a
D9@\bupD9`hujD9
D9A$r\bH
D9C(u
D9D\n\br
D9H$r\bL
D9O\b~0E
D9\a$=\aF9\a
D9\bs\fH
D9\bt"H
D9\vucL
D9\v~=E3
D9`\b~5I
D9`luUD9
D9`tu\t9Hx
D9aXt3E
D9a\bu\n
D9a\fu\b9y
D9cXt\tH
D9d$0t?L
D9d$0twD
D9d$0~-H
D9d$0~.I
D9d$0~DI
D9d$0~rI
D9d$xtaH
D9g,t"A
D9g0t"A
D9g\b~\n8O
D9g\f~\aA
D9h\b~5I
D9i }\tH
D9l$0u
D9l$8t3L
D9l$8usL
D9o,~eH
D9pfA
D9s |AH
D9sXt\nH
D9sXt\tH
D9t$0tl
D9wXt\nH
D9wXt\tH
D9x<t
D9x<tN
D9x\bu\nD9h\f
D9x\ftoH
D9x\fu\tH
D9y\b
D9{(t
D9{\bvX
D9|$ tPL
D9|$ tnM
D9|\b\fu(H
D9|\b\fu+H
D9}0u
D:\bfA
D:\nu$D:B
D:\nu\rD:B
D;(u\vf9t$bu
D;C$wvL
D;Ctv
D;D$p}CIc
D;H\b}\bD
D;P taH
D;Z\bt
D;b\bw\fD;J
D;d$8t_M
D;d$Dt\\M
D;egs\tA
D;l$X|\tD
D;s }^M9
D;t$(u\tE
D;t$H
D;t$du
D;}gs\rH
D>\b9C\f
D>\f9C\b
DA9Y\b
DCT coefficient out of range
DCT scaled block size %dx%d not supported
DDDDDEFGHIHHHHHHHHHJKLMNNNOOP
DEC_OP
DEFAULT
DEFAULT_WRITE_PATH
DEMOTE
DEVICECOHERENT
DEVICE_COHERENT_AMD
DEVICE_LOCAL
DEVICE_UNCACHED_AMD
DFUI,U
DID$@L
DISCARD
DIV_ASSIGN
DIt$4H
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4X2
DMAT4X3
DMAT4X4
DNGBackwardVersion
DNGPrivateData
DNGVersion
DOUBLE
DOUBLECONSTANT
DP%ha
DPdxCoarse
DPdxFine
DPdyCoarse
DPdyFine
DWARF Version
DXLevel:  %d\nTexture memory:  %s\nVid:  %s, render at %i x %i, display at %i x %i\n
DXT1_ONEBITALPHA
DXT5_NM
D\at͆mC
D\bV_IsAbsolutePath
D\b}0E3
D\n҈O\fD
D\vKMw
D\vT$H
D\vT$HI
D\v\tL$<D
D\vЋD
Data must be an OpString
DataType
DateTime
Debug Information
Debug info extension instruction found inside function but outside block
Debug info extension instruction other than DebugScope, DebugNoScope, DebugDeclare, and DebugValue found inside function
Debug info extension instruction other than DebugScope, DebugNoScope, DebugFunctionDefinition, DebugDeclare, and DebugValue found inside function
Debug info extension instructions other than
Debug printf
DebugBuildIdentifier
DebugCompilationUnit
DebugDeclare
DebugEntryPoint
DebugExpression
DebugFunction
DebugFunctionDeclaration
DebugFunctionDefinition
DebugGlobalVariable
DebugGlobalVariable or DebugLocalVariable with a 32- or
DebugImportedEntity
DebugInfo
DebugInfoModuleINTEL
DebugInfoNone
DebugInlinedAt
DebugInlinedVariable
DebugLexicalBlock
DebugLexicalBlockDiscriminator
DebugLine
DebugLocalVariable
DebugMacroDef
DebugMacroUndef
DebugModuleINTEL
DebugNoLine
DebugNoScope
DebugOperation
DebugScope
DebugScope, DebugNoScope, DebugDeclare, DebugValue
DebugSource
DebugSourceContinued
DebugStoragePath
DebugTypeArray
DebugTypeBasic
DebugTypeComposite
DebugTypeEnum
DebugTypeFunction
DebugTypeInheritance
DebugTypeMatrix
DebugTypeMember
DebugTypePointer
DebugTypePtrToMember
DebugTypeQualifier
DebugTypeTemplate
DebugTypeTemplateParameter
DebugTypeTemplateParameter or
DebugTypeTemplateParameterPack
DebugTypeTemplateTemplateParameter
DebugTypeVector
DebugTypedef
DebugValue
December
Declaration
Declare
DecodePointer
Decompressed %i texture mips in %.2f ms (%.1fmb/s)\n
Decorate
DecorateId
DecorateString
DecorateStringGOOGLE
DecorationGroup
Decorations taking ID parameters may not be used with OpDecorateId
Decorations that don't take ID parameters may not be used with OpDecorateId
DecremenH9\bu
DecrementCounter
Dedicated allocations (%s
DedicatedAllocations
Default
Default must be an OpLabel instruction
DefaultCropOrigin
DefaultCropSize
DefaultPools
DefaultScale
DefaultVB
Define Arithmetic Table 0x%02x: 0x%02x
Define Huffman Table 0x%02x
Define Quantization Table %d  precision %d
Define Restart Interval %u
Deflate
Defrag algorithm 0=Fast 1=Balanced 2=full 3=Extensive
Degrees
DeleteCriticalSection
Deleting
Deleting texture with outstanding streaming request (%s)\n
Delta must be a scalar of integer type, whose Signedness operand is 0
DemoUpconverterVersion001
Demote
DemoteToHelperInvocation
DemoteToHelperInvocationEXT
DenormFlushToZero
DenormPreserve
Dependency
DependencyArrayINTEL
DependencyInfinite
DependencyLength
DepthAttachmentReadEXT
DepthGreater
DepthLess
DepthReplacing
DepthStencil
DepthUnchanged
Derivative instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
Derivative instructions require Fragment or GLCompute execution model
DerivativeControl
DerivativeGroupLinearNV
DerivativeGroupQuadsNV
Descriptor pool allocation failed on available pool, reducing descriptors to attempt allocating in pool to %d\n
Descriptor pool allocation failed, reducing descriptors to attempt allocating in pool to %d\n
Descriptor set layout
DescriptorSet
DescriptorSet must be a 32-bit unsigned integer OpConstant
Desktop-friendly Fullscreen
Detach@CTSListBase@@QEAAPEAUTSLNodeBase_t@@XZ
Detected RenderDoc %i.%i.%i\n
Detected sliced file. Dropping entries from here.\n
Determinant
DevWarning@@YAXPEBDZZ
Device
Device ID mismatch in pipeline cache file (Got: %x Expected: %x).  Deleting %s in order to regenerate it.\n
DeviceEnqueue
DeviceEvent
DeviceGroup
DeviceID
DeviceIndex
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
DeviceOnlyINTEL
Did you mean gl_InstanceIndex
Did you mean gl_VertexIndex
Didn't expect more than one scan
DigiCert Timestamp 20230
DigiCert Trusted Root G40
DigiCert, Inc.1 0
DigiCert, Inc.1;09
DigiCert, Inc.1A0
Dim SubpassData requires Arrayed to be 0
Dim SubpassData requires Fragment execution model
Dim SubpassData requires Sampled to be 2
Dim SubpassData requires format Unknown
Dim TileImageDataEXT requires Arrayed to be 0
Dim TileImageDataEXT requires Depth to be 0
Dim TileImageDataEXT requires Sampled Type to be not OpTypeVoid
Dim TileImageDataEXT requires Sampled to be 2
Dim TileImageDataEXT requires format Unknown
Dim must be a 32-bit unsigned integer OpConstant
Direct3D 11
Direction
Disabling VK_EXT_graphics_pipeline_library dependent extensions.\n
Disabling graphics pipeline libraries for shader '%s' because it has too many UBOs in dynamic descriptor set has (%d) max (%d).\n
Disabling graphics pipeline libraries for shader '%s' because it has too many UBOs.  maxPerStageDescriptorUniformBuffers (%d) has vertex (%d) and fragment (%d).\n
Disabling graphics pipeline libraries for shader '%s' because it has unsupported descriptor types [ %s ].  Move them to a static descriptor set.\n
Disabling validation feature: %s\n
Disassembly failed before pass
Discarding abandoned streaming texture load for %s\n
DispatchComputeShaderIndirect failed - invalid dispatch buffer.\n
DisplacementMicromapNV
Display GPU memory usage
Display fallback texture as orange
Distance
DocumentName
Don't support DXLevel < 100
DontFlatten
DontInline
DontStaticallyCoalesceINTEL
DontUnroll
DotProduct
DotProductInput4x8Bit
DotProductInput4x8BitKHR
DotProductInput4x8BitPacked
DotProductInput4x8BitPackedKHR
DotProductInputAll
DotProductInputAllKHR
DotProductKHR
DotRange
DoublepumpINTEL
DragonJoker
DragonJoker ShaderWriter
DrawId
DrawIndex
DrawIndexedInstancedIndirect failed - invalid drawarg buffer\n
DrawInstancedIndirect failed - invalid drawarg buffer\n
DrawParameters
Dref sampling operation is invalid for multisample image
Driver Name:  %s\nDriver Version: %s\nVendorId / DeviceId:  0x%x / 0x%x\nSubSystem / Rev:  0x%x / 0x%x\nDXLevel:  %d\nTexture memory:  %s\nVid:  %s, render at %i x %i, display at %i x %i, refresh rate %.2fHz (%uHz desktop)\n
DuBfff
Dump .json file for use by GpuMemDumpVis.py
DumpModeDecode: Not enough data for scanline %d
Dumps state of texture streaming at the next frame boundary
Duplicate non-aggregate type declarations are not allowed. Opcode
During a VMA defrag, number of MB in moves per pass
During a VMA defrag, number of moves per pass
During a VMA defrag, number of moves to process for a pass in a single frame update
DynamicPoolPMB_%s
Dynamically adjust texture streaming budget based on GPU memory usage
DȉL$8E
DȉL$PD8
DԉT$lA
DԉT$lt\nA
E 9\ar\t
E A84$u
E H;E(t
E Lc|$lE3
E(A9F
E(A9G
E)n(u\bI
E+͉4$Ai
E-@8u,t\v
E/case
E/loop
E0HcH\fD
E0Lc`\fI
E3\nS\tI
E3\nW\tI
E3\tD$ 3
E3\tD$ A
E3\tD$ H
E3\tD$<A
E3\tD$DH
E3\tD$P
E3\tT
E3\t\\$ A
E3\tt$ 3
E3\t|$ 3
E3\vA#\vA
E3\vKTD
E3\vVx
E3\v\b3\tL
E3\vx\bH
E3ɀd$T
E3ɉD$ H
E3ɉD$4E3
E3ɉE$E3
E3ɉEoE3
E3ɉl$ A
E3ɉl$ L
E3ɉl$P
E3ɉl$PL
E3ɉ|$ D
E3ɋD$@H
E3ɋU I
E3ҋAHE
E3ҋK@A
E3ۋo0L
E80t"A
E8` tO
E8`,t\v
E8a(u\fH
E8e,t\v
E8l$dI
E8q(u\bH
E8q(u\rH
E8t$,t\b
E8t$\bu\bI
E8w,t\vE8w-t
E9$\b}7H
E9H vV
E9H\bt7I
E9H\bu\vI
E9\ntIIc
E9b@|A
E9f@}yH
E9n\b~-ƃhs
E9z\fu9M
E9~(t;E8~0L
E;H$r\tI
E;K\bt\rA
E;gPtDH
E;p }iM9
E;u$t>H
E;݈L$QE
E<G&Iw
E@3\tElH
E@E3ɋUDH
E@HcI\bH
ED8\\$p
EG3҉U
EHA\tF,H
EHHcI\bH
EID$8H
EL$pfA
EL;\r
EPA\tF
EPD8d$zt
EPH;EXt
EPbool
EPvoid
ERROR
ERROR! VK call failed! result = %s ( %s )\n
ERROR: CUtlSymbolTableLarge element limit of %u exceeded\n
ERROR: Resource name "%s" has the incorrect extension "%s" for the specified resource type (expected "%s")!\n
ERROR_not_op_extension
ES Profile
ESC_SEQ
EX3ҋM`D
EXECUTABLE_PATH
EXIFIFDOffset
EXPLICITINTERPAMD
EXPONENT
EXPORTSYSTEM_INTERFACE_VERSION_001
EXRHeader variable is not initialized
EXRReadFile() - B channel not found!\n
EXRReadFile() - G channel not found!\n
EXRReadFile() - R channel not found!\n
EXRReadFile() - cannot read image data!\n
EXTERNAL: %.2f MB\n
EX\tC<D
EXz\tu\a
E[\rn?gc
E\b3\tE4H
E\bA3G\b
E\bA8G\buDE3
E\bHcu`M
E\bI;6r
E\fA2G\f$\bA0E\fA
E\fD9A\f~\rD9G\fH
E\tB\bE9
E\tD$(E3
E\tD$pH
E\vw,Hc
E`fD9P
Early exit
EarlyAndLateFragmentTestsAMD
EarlyFragmentTests
EconItemToolModel_001
EgLcmwH
EhHcK8H
Either both Hint and Bits should be provided or neither
ElemSize must be a 32-bit unsigned integer OpConstant
Element type is not defined
EliminateDeadIOComponentsPass only valid for input and output variables
Embark Studios
Embark Studios Rust GPU Compiler Backend
Embedded
EmitMeshTasksEXT
EmitStreamVertex
EmitVertex
Empty JPEG image (DNL not supported
Empty input file
En[vP
Enable Software Command lists for Vulkan
Enabling GPU validation.\n
Enabling Shader Debug Printf.\n
Enabling aggressive command pool rebalancing.\n
Enabling instance extension: %s.\n
Enabling synchronization validation.\n
Enabling validation layer: %s.\n
EncodeBC6Blocks
EncodeBC7Blocks
EncodePointer
Encoding
Encountered extended instruction GLSLstd450Bad
EncounteredComplexReadLockOperation@CThreadRWLock_FastRead@@IEAA_NI_NPEBDH@Z
End Of Image
End of input in comment
End of input in macro
End of input reached while decoding Op
End of line in macro substitution
End of line in string
EndInvocationInterlockEXT
EndPrimitive
EndStreamPrimitive
Ending RenderDoc capture...\n
EngineServiceMgr001
EnqueueKernel
EnqueueMarker
EnqueuedWorkgroupSize
EnsureCapacity@CUtlBuffer@@QEAAXH@Z
EnsureEndsWithNumCharacters@CMiniDumpComment@@QEAA_NDH_N@Z
EnterCriticalSection
Entering state %d\n
Entry point id
Entry point not found
Entry points may not have a call graph with cycles
Entry-point has conflicting
Entry-point has more than one variable with the HitAttributeKHR storage class in the interface
Entry-point has more than one variable with the IncomingCallableDataKHR storage class in the interface
Entry-point has more than one variable with the IncomingRayPayloadKHR storage class in the interface
Entry-point has more than one variable with the PushConstant storage class in the interface
EntryPoint
EnumSystemLocalesEx
EnumSystemLocalesW
Eot\t;Ew
EpcharA
Eplong
Error creating compute pipeline containing shader: %s\n
Error creating fragment output interface pipeline library\n
Error creating graphics pipeline containing shader: %s\n
Error creating graphics pipeline library\n
Error creating link-time optimized graphics pipeline library\n
Error creating renderpass from Vulkan Steam Shader Source pre-cache.\n
Error creating the clearing pixel shader!\n
Error creating the clearing vertex shader!\n
Error creating the resolve MSAA pixel shader!\n
Error creating the resolve depth MSAA pixel shader!\n
Error creating the resolve pixel shader!\n
Error creating the resolve rotated pixel shader!\n
Error creating the resolve rotated vertex shader!\n
Error creating the resolve vertex shader!\n
Error creating vertex input interface pipeline library\n
Error fetching data for field "%s
Error fetching directory count
Error fetching directory link
Error flushing data before directory write
Error from SDL_GetCurrentDisplayMode( %d ) = %s\n
Error post-encoding before directory write
Error writing TIFF header
Error writing data for field "%s
Error writing directory contents
Error writing directory count
Error writing directory link
Error: Result Id is 0
Error: Type Id is 0
Error: discarding
Error: popping
EstimateStripByteCounts
Et$pD;y
EvaluateAttributeAtCentroid
EvaluateAttributeAtSample
EvaluateAttributeSnapped
EventSetInformation
Evict all resident texture
EwI+ċU
ExE3ɋUpH
Exclusive Fullscreen
ExclusiveScan
ExecuteCallableKHR
ExecuteCallableNV
ExecuteQueuedCommandBuffers
Execution mode can only be used with a Geometry or tessellation execution model
Execution mode can only be used with a Geometry, tessellation, MeshNV or MeshEXT execution model
Execution mode can only be used with a Kernel or GLCompute execution model
Execution mode can only be used with a Kernel, GLCompute, MeshNV, MeshEXT, TaskNV or TaskEXT execution model
Execution mode can only be used with a tessellation execution model
Execution mode can only be used with the Fragment execution model
Execution mode can only be used with the Fragment or GLCompute execution model
Execution mode can only be used with the Geometry MeshNV or MeshEXT execution model
Execution mode can only be used with the Geometry execution model
Execution mode can only be used with the Kernel execution model
Execution mode can only be used with the MeshEXT or MeshNV execution model
Execution scope is limited to Subgroup or Workgroup
ExecutionMode
ExecutionModeId
ExitProcess
Expect to see OpLoad
ExpectAssumeKHR
ExpectKHR
Expected
Expected 32-bit float scalar or vector type as Result Type
Expected 32-bit floating-point type 3-component vector as Result Type
Expected 32-bit floating-point type scalar as Result Type
Expected 32-bit int type for Base operand
Expected 32-bit integer type 2-component vector as Result Type
Expected 32-bit integer type scalar as Result Type
Expected 64-bit uint scalar or 2-component 32-bit uint vector as input
Expected Acceleration Structure to be of type OpTypeAccelerationStructureKHR
Expected Base Type to be equal to Result Type
Expected Base dimension to be equal to Result Type dimension
Expected Base to be int scalar or vector
Expected Base to have the same bit width
Expected Base to have the same dimension
Expected Component Operand to be a const object for Vulkan environment
Expected Component to be 32-bit int scalar
Expected Component type to be equal to Result Type
Expected Composite to be an object of composite type
Expected Constituent type to be equal to the
Expected Constituent type to be equal to the column
Expected Constituent type to be equal to the component type
Expected Constituents to be scalars or vectors of
Expected Coordinate to be float scalar or vector
Expected Coordinate to be int or float scalar or vector
Expected Coordinate to be int scalar or vector
Expected Coordinate to be integer scalar or vector
Expected Coordinate to have
Expected Coordinate to have at least
Expected Count Type to be int scalar
Expected Dref to be of 32-bit float type
Expected Image 'Dim' must be one of 1D, 2D, or Cube when Arrayed is 1
Expected Image 'Dim' parameter to be 1D, 2D, 3D or Rect
Expected Image 'Dim' parameter to be not SubpassData
Expected Image 'Dim' to be 2D, Cube, or Rect
Expected Image 'MS' parameter to be 0
Expected Image 'Sampled Type' to be the same as
Expected Image 'Sampled Type' to be the same as Texel
Expected Image 'Sampled Type' to be the same as the Type pointed to by Result Type
Expected Image 'Sampled' parameter to be 0 or 1
Expected Image 'Sampled' parameter to be 0 or 2
Expected Image 'Sampled' parameter to be 1
Expected Image 'Sampled' parameter to be 1 for Vulkan environment
Expected Image 'arrayed' parameter to be 0
Expected Image Operand Bias to be float scalar
Expected Image Operand ConstOffset to be a const object
Expected Image Operand ConstOffset to be int scalar or
Expected Image Operand ConstOffset to have
Expected Image Operand ConstOffsets array components to be int vectors of size 2
Expected Image Operand ConstOffsets to be a const object
Expected Image Operand ConstOffsets to be an array of size 4
Expected Image Operand Grad dx to have
Expected Image Operand Grad dy to have
Expected Image Operand Lod to be float scalar when used
Expected Image Operand Lod to be int scalar when used with
Expected Image Operand MinLod to be float scalar
Expected Image Operand Offset to be int scalar or
Expected Image Operand Offset to have
Expected Image Operand Sample to be int scalar
Expected Image operand to be of type OpTypeSampledImage
Expected Image to be OpTypePointer
Expected Image to be OpTypePointer with Type OpTypeImage
Expected Image to be of type OpTypeImage
Expected Index to be int scalar
Expected Insert Type to be equal to Result Type
Expected Level of Detail to be int scalar
Expected Matrix to be of type OpTypeMatrix
Expected Offset Type to be int scalar
Expected P type and Result Type to be the same
Expected Resident Code to be int scalar
Expected Result Type and Operand type to be the same
Expected Result Type struct member types to be identical
Expected Result Type struct member types to be integer scalar
Expected Result Type struct member types to be unsigned
Expected Result Type struct to have two members
Expected Result Type to be OpTypeImage
Expected Result Type to be OpTypePointer
Expected Result Type to be OpTypePointer whose Storage Class operand is Image
Expected Result Type to be OpTypePointer whose Type operand must be a scalar numerical type or OpTypeVoid
Expected Result Type to be OpTypeSampledImage
Expected Result Type to be OpTypeStruct
Expected Result Type to be OpTypeVector
Expected Result Type to be a Acceleration Structure
Expected Result Type to be a composite type
Expected Result Type to be a matrix type
Expected Result Type to be a pointer
Expected Result Type to be a pointer or int or float vector
Expected Result Type to be a scalar or vector of floating-point, integer or boolean type
Expected Result Type to be a scalar type
Expected Result Type to be a struct containing an int scalar and a texel
Expected Result Type to be an unsigned integer type scalar
Expected Result Type to be bool scalar type
Expected Result Type to be float scalar or vector type
Expected Result Type to be float vector type
Expected Result Type to be int scalar or vector type
Expected Result Type to be int scalar type
Expected Result Type to be of target storage class
Expected Result Type to have 2 components
Expected Result Type to have storage class Generic
Expected Result Type to have storage class Workgroup
Expected Sample Image image type to be equal to Result Type
Expected Sample Image to be of type OpTypeSampleImage
Expected Sample for Image with MS 0 to be a valid <id> for the value 0
Expected Sample to be integer scalar
Expected Sampled Image to be of type OpTypeSampledImage
Expected Sampled Type to be a 32-bit int, 64-bit int or 32-bit float scalar type for Vulkan environment
Expected Sampled Type to be either void or
Expected Sampler to be of type OpTypeSampler
Expected Shift to be int scalar or vector
Expected Shift to have the same dimension
Expected Texel to be int or float vector or scalar
Expected Use of Matrix type and Result Type to be
Expected Value to be a vector of four components of integer type scalar
Expected Value to be a vector of two components of unsigned integer or 64bit unsigned integer
Expected Vector component type to be equal to Result Type
Expected Vector type to be OpTypeVector
Expected Vector type to be equal to Result Type
Expected a struct as Result Type
Expected arithmetic operands to be of Result Type
Expected arithmetic operands to have the same bit width
Expected arithmetic operands to have the same dimension
Expected at least one index to Op
Expected bool scalar or vector type as Result Type
Expected bool scalar or vector type as condition
Expected bool scalar type as Result Type
Expected both Image Operand Grad ids to be float scalars or
Expected both objects to be of Result Type
Expected both operands to be of Result Type
Expected both operands to be of Result Type member type
Expected both operands to have the same component bit width
Expected column type of Result Type to be equal to the type
Expected column type of the matrix to be equal to Result Type
Expected column types of Result Type and left matrix to be
Expected columns of Matrix type and Result Type to be
Expected component type to be equal to Result Type
Expected component types of Matrix and Result Type to be
Expected component types of Result Type and matrix to be
Expected component types of Result Type and right matrix to be
Expected component types of Result Type and vector to be
Expected component types of the operands to be equal
Expected cooperative matrix type as A Type
Expected cooperative matrix type as B Type
Expected cooperative matrix type as C Type
Expected cooperative matrix type as Result Type
Expected cooperative matrix types
Expected float matrix type as Result Type
Expected float matrix type as left operand
Expected float matrix type as right operand
Expected float scalar or vector type as Result Type
Expected float scalar type as Result Type
Expected float vector as operand
Expected float vector type as Result Type
Expected float vector type as left operand
Expected float vector type as right operand
Expected floating scalar or vector type as Result Type
Expected hex value in escape sequence
Expected input and Result Type to point to the same type
Expected input to be a pointer
Expected input to be a pointer or int or float vector
Expected input to be a pointer or int scalar if Result Type is pointer
Expected input to be a pointer, int scalar or 32-bit int vector if Result Type is pointer
Expected input to be float scalar or vector
Expected input to be int scalar or vector
Expected input to have a type
Expected input to have different bit width from Result Type
Expected input to have storage class Generic
Expected input to have storage class Workgroup
Expected input to have the same dimension as Result Type
Expected input to have the same total bit width as
Expected input type to be equal to Result Type
Expected int scalar as input
Expected int scalar or vector as input
Expected int scalar or vector as operand
Expected int scalar or vector type as Result Type
Expected int scalar or vector type as operand
Expected int scalar or vector type for Base operand
Expected left and right operands to have the same type
Expected matrix operand type to be equal to Result Type
Expected number of columns and the column size of Matrix
Expected number of columns of Result Type and right matrix to
Expected number of columns of left matrix and number of rows
Expected number of columns of the matrix to be equal to
Expected number of columns of the matrix to be equal to the
Expected number of constituents to be at least 2
Expected number of rows of the matrix to be equal to the
Expected operand to be of Result Type
Expected operand to be of type OpTypeImage
Expected operand to be scalar or vector float
Expected operand to be vector bool
Expected operands to be scalar or vector float
Expected operands to be scalar or vector int
Expected operands to have the same bit width
Expected operands to have the same dimension
Expected operands to have the same number of components
Expected rows of Matrix type and Result Type to be
Expected scalar operand type to be equal to the component
Expected scalar or
Expected scopes of Matrix and Result Type to be
Expected single constituent
Expected target storage class to be Workgroup
Expected the Image Format in Image to be R64i, R64ui, R32f, R32i, or R32ui for Vulkan environment
Expected total number of Constituents to be equal
Expected total number of given components to be equal
Expected unsigned int scalar or vector type as Result Type
Expected unsigned int scalar type as Result Type
Expected vector operand type to be equal to Result Type
Expected vector sizes of Result Type and the condition to be equal
Expected vector sizes of Result Type and the operand to be equal
Expected vector sizes of Result Type and the operands to be
Expected vector sizes of Result Type and the operands to be equal
Expecting %s
ExplicitInterpAMD
Export
Expression
Expression Parser
ExtInst
ExtInstImport
ExtendPath@CBufferString@@QEAAPEBDPEBDD_N@Z
Extended instruction GLSLstd450IMix is not supported
Extension
External2DY2YEXT
ExternalOES
ExtraSamples
Extraneous input
Extraneous input - expected %s ...\n
Extraneous input - expected <EOF>\n
Extraneous token
EƉD$4H
EǉD$ L
EȋD$xA
Eȋ\bE8V
EΉL$4H
EψD$ L
EЋD$t
EщD$HD
Eꌠ9Y>)F
F +V<H
F 9F(r\n
F ?t,H
F A;B@|D
F D;p0r
F(9G(t?I
F(A9F
F-@8n,t\v
F-E8f,t
F-E8~,t\n
F09B0r\bH
F0Ic0I
F16IMAGE1D
F16IMAGE1DARRAY
F16IMAGE2D
F16IMAGE2DARRAY
F16IMAGE2DMS
F16IMAGE2DMSARRAY
F16IMAGE2DRECT
F16IMAGE3D
F16IMAGEBUFFER
F16IMAGECUBE
F16IMAGECUBEARRAY
F16MAT2
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3
F16MAT3X2
F16MAT3X3
F16MAT3X4
F16MAT4
F16MAT4X2
F16MAT4X3
F16MAT4X4
F16SAMPLER1D
F16SAMPLER1DARRAY
F16SAMPLER1DARRAYSHADOW
F16SAMPLER1DSHADOW
F16SAMPLER2D
F16SAMPLER2DARRAY
F16SAMPLER2DARRAYSHADOW
F16SAMPLER2DMS
F16SAMPLER2DMSARRAY
F16SAMPLER2DRECT
F16SAMPLER2DRECTSHADOW
F16SAMPLER2DSHADOW
F16SAMPLER3D
F16SAMPLERBUFFER
F16SAMPLERCUBE
F16SAMPLERCUBEARRAY
F16SAMPLERCUBEARRAYSHADOW
F16SAMPLERCUBESHADOW
F16SUBPASSINPUT
F16SUBPASSINPUTMS
F16TEXTURE1D
F16TEXTURE1DARRAY
F16TEXTURE2D
F16TEXTURE2DARRAY
F16TEXTURE2DMS
F16TEXTURE2DMSARRAY
F16TEXTURE2DRECT
F16TEXTURE3D
F16TEXTUREBUFFER
F16TEXTURECUBE
F16TEXTURECUBEARRAY
F16VEC2
F16VEC3
F16VEC4
F2\a1wsHp
F32MAT2
F32MAT2X2
F32MAT2X3
F32MAT2X4
F32MAT3
F32MAT3X2
F32MAT3X3
F32MAT3X4
F32MAT4
F32MAT4X2
F32MAT4X3
F32MAT4X4
F32VEC2
F32VEC3
F32VEC4
F64MAT2
F64MAT2X2
F64MAT2X3
F64MAT2X4
F64MAT3
F64MAT3X2
F64MAT3X3
F64MAT3X4
F64MAT4
F64MAT4X2
F64MAT4X3
F64MAT4X4
F64VEC2
F64VEC3
F64VEC4
F8D8(t>H
F8D8h\b
F8H+F0H
F8H90t
F8IcN0Lc
F8\bt\\H
F>qUxv
F@A8E@u\t
F@H9F8
FATAL ERROR: CUtlSymbolTableLarge element limit of %u exceeded\n
FATAL ERROR: unable to register all schema data: %s\n
FATAL: %s called on a pool context (no root available)\n
FB$DdBx
FCOOPMATNV
FClamp
FConvert
FD9FDtwH
FFX_FSR2_ENABLE_DEPTH_INFINITE and FFX_FSR2_ENABLE_DEPTH_INVERTED present, cameraFar value is very low which may result in depth separation artefacting
FFX_FSR2_ENABLE_DEPTH_INFINITE and FFX_FSR2_ENABLE_DEPTH_INVERTED present, cameraNear value is very low which may result in depth separation artefacting
FFX_FSR2_ENABLE_DEPTH_INFINITE and FFX_FSR2_ENABLE_DEPTH_INVERTED present, yet cameraFar != FLT_MAX
FFX_FSR2_ENABLE_DEPTH_INFINITE and FFX_FSR2_ENABLE_DEPTH_INVERTED present, yet cameraNear != FLT_MAX
FFX_FSR2_ENABLE_DEPTH_INVERTED flag is present yet cameraNear is less than cameraFar
FH;H$u D8
FIF\bLcN Lc
FIU,I,I
FIU,I,I,I
FIU,S,F
FIU,S,F,,I
FIU,S,F,F
FIU,S,F,F,I
FIU,S,F,I
FIU,S,F,I,U
FIU,s,F
FIU,s,F,,I
FIU,s,F,,I,U
FIU,s,F,F
FIU,s,F,F,I
FLOAT16CONSTANT
FLOAT16_T
FLOAT32_T
FLOAT64_T
FLOATCONSTANT
FLOATLITERAL
FLOATSUFFIX
FMax3AMD
FMid3AMD
FMin3AMD
FNegate
FOSSILIZEDB
FOrdEqual
FOrdGreaterThan
FOrdGreaterThanEqual
FOrdLessThan
FOrdLessThanEqual
FOrdNotEqual
FP denorm mode
FP operation mode
FPFastMathDefault
FPFastMathDefault and ContractionOff execution modes cannot be applied to the same entry point
FPFastMathDefault and SignedZeroInfNanPreserve execution modes cannot be applied to the same entry point
FPFastMathMode
FPFastMathMode Fast
FPFastMathMode and NoContraction cannot decorate the same target
FPFastMathModeINTEL
FPGAArgumentInterfacesINTEL
FPGABufferLocationINTEL
FPGAClusterAttributesINTEL
FPGAClusterAttributesV2INTEL
FPGADSPControlINTEL
FPGAInvocationPipeliningAttributesINTEL
FPGAKernelAttributesINTEL
FPGAKernelAttributesv2INTEL
FPGALatencyControlINTEL
FPGALoopControlsINTEL
FPGAMemoryAccessesINTEL
FPGAMemoryAttributesINTEL
FPGARegINTEL
FPMaxErrorDecorationINTEL
FPMaxErrorINTEL
FPRoundingMode
FPRoundingMode decoration can be applied only to a width-only conversion instruction for floating-point object
FPRoundingMode decoration can be applied only to the Object operand of an OpStore
FPRoundingMode decoration can be applied only to the Object operand of an OpStore in the StorageBuffer, PhysicalStorageBuffer, Uniform, PushConstant, Input, or Output Storage Classes
FPRoundingMode decoration can be applied only to the Object operand of an OpStore storing through a pointer to a 16-bit floating-point scalar or vector object
FPfA9
FRAGMENTATION: %.2f MB\n
FSR2: %s\n
FSR2_AutoComposition
FSR2_AutoExposure
FSR2_AutoReactive
FSR2_DefaultExposure
FSR2_DefaultReactiviyMask
FSR2_DilatedDepth
FSR2_DilatedReactiveMasks
FSR2_EmptyInputReactiveMap
FSR2_EmptyTransparencyAndCompositionMap
FSR2_ExposureMips
FSR2_InputColor
FSR2_InputDepth
FSR2_InputExposure
FSR2_InputMotionVectors
FSR2_InputReactiveMap
FSR2_InternalDilatedVelocity1
FSR2_InternalDilatedVelocity2
FSR2_InternalUpscaled1
FSR2_InternalUpscaled2
FSR2_LanczosLutData
FSR2_LockInputLuma
FSR2_LockStatus1
FSR2_LockStatus2
FSR2_LumaHistory1
FSR2_LumaHistory2
FSR2_MaximumUpsampleBias
FSR2_NewLocks
FSR2_OutputUpscaledColor
FSR2_PreparedInputColor
FSR2_PrevPostAlpha0
FSR2_PrevPostAlpha1
FSR2_PrevPreAlpha0
FSR2_PrevPreAlpha1
FSR2_ReconstructedPrevNearestDepth
FSR2_SpdAtomicCounter
FUI,F
FUI,F,F,F
FUI,S,F
FUI,U
FUI,U,F
FUnordEqual
FUnordGreaterThan
FUnordGreaterThanEqual
FUnordLessThan
FUnordLessThanEqual
FUnordNotEqual
FXH9D$0
FXH9FP
F\aPlat_RequireSDL
F\b8H0t
F\b9D
F\bD8p+u1M
F\bE3
F\bHc\tH
F\bI+IT$(H
F\bJ9< u
F\b\bt\vA
F\b\f0A
F\f t"H
F\f$ A\nHG\f
F\f@\bB\fL
FaceForward
Fail to schedule the chore
Failed
Failed AllocateTexture for '%s'\n
Failed to allocate field info array
Failed to allocate memory for %s (%ld elements of %ld bytes each
Failed to compute channel layout.\n
Failed to create VK shader module.\n
Failed to create Vulkan pipeline cache from file %s  - deleting so it can be regenerated.\n
Failed to create Vulkan pipeline object.\n
Failed to create depth stencil image with VK.\n
Failed to create linked graphics pipeline library executable.\n
Failed to create temporary file %s
Failed to find adequate memory type for buffer.\n
Failed to find instance extension for validation.  '%s' and '%s' not supported.\n
Failed to get a Vulkan memory pool for query object\n
Failed to get a Vulkan memory pool for timestamp query object\n
Failed to get list of resource hashes.\n
Failed to get size of blob from cache.\n
Failed to get size of resource hashes.\n
Failed to initialize Vulkan memory manager.\n
Failed to open validation shader cache %s, might not exit yet.\n
Failed to parse channel info.\n
Failed to parse pNext chain for sType: %d\n
Failed to prepare fossilize database: '%s'\n
Failed to read attribute.\n
Failed to save video settings config to '%s'\n
Failed to setup frame pacing, renderthread is not available.\n
Fax DCS: %s\n
Fax Data
Fax Receive Parameters: %08lx\n
Fax Receive Time: %lu secs\n
Fax SubAddress: %s\n
Fax3Decode1D
Fax3Decode2D
Fax3DecodeRLE
Fax3SetupState
Fax4Decode
FaxDcs
FaxFillFunc
FaxMode
FaxRecvParams
FaxRecvTime
FaxSubAddress
Fb$ddbH
February
FetchMicroTriangleVertexBarycentricNV
FetchMicroTriangleVertexPositionNV
FieldOfViewCotangent
File has not been opened!\n
File not open for reading
FileKeys
FileSystem
FileTimeToSystemTime
FillAttr
FillGPUBuffer failed - invalid buffer.\n
FillOrder
FinalizeNodePayloadsAMDX
Finalizer
FindClose
FindFirstFileExW
FindILsb
FindKey@KeyValues@@QEAAPEAV1@PEBD_N@Z
FindKey@KeyValues@@QEAAPEAV1@VHKeySymbol@@@Z
FindKey@KeyValues@@QEBAPEBV1@PEBD@Z
FindNextFileW
FindOrCreateTexture: Cannot create static textures with no data!\n
FindOrCreateTexture: Cannot load multiple mipmaps into cubemap texture: %s\n
FindOrCreateTexture: Dimensions %dx%dx%d exceed maximum supported by device (%dx%dx%d)!\n
FindOrCreateTexture: Only dynamic textures can have non-global scope!\n
FindOrCreateTexture: Texture scope is unspecified!\n
FindOrCreateTexture: Texture usage is unspecified!\n
FindSMsb
FindUMsb
FinishWritingNodePayloadAMDX
Finished %d Blocks out of %d\n
First block
FixSlashes@CBufferString@@QEAAPEBDD@Z
FixedCosINTEL
FixedCosPiINTEL
FixedExpINTEL
FixedLogINTEL
FixedRecipINTEL
FixedRsqrtINTEL
FixedSinCosINTEL
FixedSinCosPiINTEL
FixedSinINTEL
FixedSinPiINTEL
FixedSqrtINTEL
FixupPathName@CBufferString@@QEAAPEBDD@Z
FixupResourceName: Illegal full path passed in ("%s")!\n
FixupResourceName: Illegal path, missing extension passed in ("%s")!\n
FlagArtificial
FlagExplicit
FlagFwdDecl
FlagIndirectVariable
FlagIsDefinition
FlagIsEnumClass
FlagIsLocal
FlagIsOptimized
FlagIsPrivate
FlagIsProtected
FlagIsPublic
FlagLValueReference
FlagObjectPointer
FlagPrototyped
FlagRValueReference
FlagStaticMember
FlagTypePassByReference
FlagTypePassByValue
Flags must be a 32-bit unsigned integer OpConstant
Flatten
FlattenedSerializersVersion001
Float16
Float16Buffer
Float16ImageAMD
Float64
FloatBitMap_t::ConvertGammaToLinear(325): Conversion not supported yet!\n
FloatBitMap_t::InitializeDummyRow
FloatBitMap_t::LoadFromBuffer: Received improper buffer size, skipping!\n
FloatBitMap_t::LoadFromBuffer: Unsupported color format, skipping!\n
FloatBitMap_t::WriteToBuffer(968): Unsupported color format "%s", skipping!\n
FloatBitMap_t::WriteToBuffer: Received improper buffer size %s (expecting %s), skipping!\n
FloatBitMap_t::WriteToBufferBC7_bc7e(), C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\bitmap\\floatbitmap.cpp:1654
FloatBitMap_t::WriteToBufferBC7_ispctexcomp(), C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\bitmap\\floatbitmap.cpp:1766
FloatBitMap_t::WriteToBufferDXT_atitc(1025): Error! Temp texture is %d bytes when ATI's lib requires %d bytes!\n
FloatBitMap_t::WriteToBufferDXT_atitc(1110): Unsupported output color format "%s"!\n
FloatBitMap_t::WriteToBufferDXT_atitc(1119): Error! Allocated %llu bytes when ATI's lib requires %d bytes!\n
FloatBitMap_t::WriteToBufferDXT_atitc(1127): Error %d returned from ATI_TC_ConvertTexture()!\n
FloatBitMap_t::WriteToBufferETC(), C:\\buildworker\\source2_dota_rel_2019_win64\\build\\src\\bitmap\\floatbitmap.cpp:1890
FloatControls2
Floating point "Predictor" not supported with %d data format
FloatingPointModeALTINTEL
FloatingPointModeIEEEINTEL
FloatingPointModeINTEL
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
FlushFileBuffers
FlushToZero
FogFragCoord
FontManager_001
For OpExecutionModeId all Extra Operand ids must be constant instructions
For Vulkan with RuntimeDescriptorArrayEXT, a variable
For Vulkan, OpTypeStruct variables containing
For Vulkan, an OpTypeStruct variable containing an
For information on how your program can cause an assertion\nfailure, see the Visual C++ documentation on asserts
Force defragmenting memory with VMA
ForceOpacityMicromap2StateEXT
ForcePow2DepthINTEL
Format@CBufferString@@QEAAHPEBDZZ
Format@CUtlString@@QEAAHPEBDZZ
FormatString must be an OpString
Forward pointers must point to a structure
Fossilize ERROR: Binary varint buffer overflows payload.\n
Fossilize ERROR: CRC mismatch!\n
Fossilize ERROR: Cannot use imported metadata together with whitelists.\n
Fossilize ERROR: Failed to create directory %s.\n
Fossilize ERROR: Failed to parse pNext chain for sType: %d\n
Fossilize ERROR: Got parse error: %d\n
Fossilize ERROR: Invalid varint format.\n
Fossilize ERROR: JSON version mismatches
Fossilize ERROR:\n\t%s
Fossilize INFO:\n\t%s
Fossilize WARN: %s\n
Fossilize WARN: Detected sliced file. Dropping entries from here.\n
Fossilize WARN: Failed to touch last access in %s.\n
Fossilize WARN: Referenced %s %016llx, but it does not exist.\nThis can be expected when replaying an archive from Steam.\nIf replaying just the application cache, make sure to replay together with the common cache, as application cache can depend on common cache.\n
Fossilize WARN: Referenced %s %016llx, but it is VK_NULL_HANDLE.\nThe create info was likely not supported by device.\n
Fossilize WARNING:\n\t%s
FossilizeLogCallback
FossilizePipelineCreation
FossilizePrepare
Found
Found %d checkpoints.\n
Found %d streaming textures in array, but in-flight count is %d\n
Found existing value when inserting into tree - replacing existing value with new value. If this is intended behavior, use InsertOrReplace. If leaving existing values alone is intended, use InsertIfNotFound. If duplicate entries are intended, use InsertWithDupes
Found matching VkApplicationInfo.pApplicationName: '%s' VkApplicationInfo.pEngineName: '%s'\n
Found result <id
Found unrecognized extension
Fraction
Fractional sampling not implemented yet
FragColor
FragCoord
FragData
FragDepth
FragFullyCoveredNV
FragInvocationCountEXT
FragSizeEXT
FragStencilRef
FragStencilRefEXT
Fragment
Fragment OpEntryPoint operand
Fragment execution model entry points can only specify one of OriginUpperLeft or OriginLowerLeft execution modes
Fragment execution model entry points can specify at most one fragment shader interlock execution mode
Fragment execution model entry points can specify at most one of DepthGreater, DepthLess or DepthUnchanged execution modes
Fragment execution model entry points can specify at most one of StencilRefUnchangedBackAMD, StencilRefLessBackAMD or StencilRefGreaterBackAMD execution modes
Fragment execution model entry points can specify at most one of StencilRefUnchangedFrontAMD, StencilRefLessFrontAMD or StencilRefGreaterFrontAMD execution modes
Fragment execution model entry points require either an OriginUpperLeft or OriginLowerLeft execution mode
FragmentBarycentricKHR
FragmentBarycentricNV
FragmentDensityEXT
FragmentFetchAMD
FragmentFullyCoveredEXT
FragmentMaskAMD
FragmentMaskFetchAMD
FragmentShaderPixelInterlockEXT
FragmentShaderSampleInterlockEXT
FragmentShaderShadingRateInterlockEXT
FragmentShadingRateKHR
FragmentSizeNV
Fragmentation: %s, %i ranges [min %s, max %s
Frame not displayable
Frame setup failed
FrameSync
FrameSync() - bailing out of vkWaitForFences( fenceCount = %d ) after %f seconds, error = %s\n
Free@CRawAllocator@@SAXW4RawAllocatorType_t@@PEAX_K@Z
Free@CUtlMemoryPoolBase@@QEAAXPEAX@Z
FreeAll@CMemoryStack@@QEAAX_N@Z
FreeByteCounts
FreeEnvironmentStringsW
FreeLibrary
FreeLibraryWhenCallbackReturns
FreeMemoryBlock@CUtlString@@AEAAXXZ
FreeOffsets
Freed EMS handle %u
Freed XMS handle %u
FrexpStruct
Friday
From ARB_gl_spirv extension:\n
From SPIR-V spec, section 3.32.8 on OpVariable:\n
From Vulkan spec, Push Constant Interface section:\n
From Vulkan spec:\n
FrontColor
FrontFacing
FrontSecondaryColor
Ft9nxu\a
FtD9fxuE
FullyCoveredEXT
FuncParamAttr
FuncParamIOKindINTEL
Function
Function Call
Function Definition
Function Parameters
Function declaration (id
Function declarations must appear before function definitions
Function definition (id
Function end cannot be called in blocks
Function end instructions must be in a function body
Function or Workgroup
Function parameter cannot be the first instruction
Function parameter instructions must be in a function body
Function parameter must be preceded by a function
Function parameters must only appear immediately after the function definition
Function storage class forbidden when the Shader capability is declared
FunctionCall
FunctionDenormModeINTEL
FunctionEnd
FunctionFloatControlINTEL
FunctionFloatingPointModeINTEL
FunctionParameter
FunctionPointerCallINTEL
FunctionPointersINTEL
FunctionRoundingModeINTEL
FuseLoopsInFunctionINTEL
Fwidth
FwidthCoarse
FwidthFine
G ;E@|S
G(uSL
G,9C,u!H
G-@8w,t
G-@8w,t\v
G-A8_,t
G-D8g,t\v
G09C0u
G0A9@0s
G0H+G(H
G0HcH\fH
G49C4u\e
G89C8u
G89G@}8
G8H;T$0
G8L;\bu
G@9C@tyH
G@t3L
GENERAL
GHA3FH
GHH9O0t\fH
GL$pIc
GLCompute
GLSL.std.450
GLSL.stdH9
GLSL450
GLSLPacked
GLSLShared
GL_3DL_array_objects
GL_AMD_gcn_shader
GL_AMD_gpu_shader_half_float
GL_AMD_gpu_shader_half_float_fetch
GL_AMD_gpu_shader_int16
GL_AMD_shader_ballot
GL_AMD_shader_early_and_late_fragment_tests
GL_AMD_shader_explicit_vertex_parameter
GL_AMD_shader_fragment_mask
GL_AMD_shader_image_load_store_lod
GL_AMD_shader_trinary_minmax
GL_AMD_texture_gather_bias_lod
GL_ANDROID_extension_pack_es31a
GL_ARB_bindless_texture
GL_ARB_compute_shader
GL_ARB_derivative_control
GL_ARB_draw_instanced
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_coord_conventions
GL_ARB_fragment_shader_interlock
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_gpu_shader_int64
GL_ARB_post_depth_coverage
GL_ARB_sample_shading
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counter_ops
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_bit_encoding
GL_ARB_shader_clock
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_image_size
GL_ARB_shader_stencil_export
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_420pack
GL_ARB_shading_language_include
GL_ARB_shading_language_packing
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_tessellation_shader
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_multisample
GL_ARB_texture_query_lod
GL_ARB_texture_rectangle
GL_ARB_uniform_buffer_object
GL_ARB_vertex_attrib_64bit
GL_ARB_viewport_array
GL_ARM_shader_core_builtins
GL_EXT_YUV_target
GL_EXT_blend_func_extended
GL_EXT_buffer_reference
GL_EXT_buffer_reference2
GL_EXT_buffer_reference_uvec2
GL_EXT_control_flow_attributes
GL_EXT_debug_printf
GL_EXT_demote_to_helper_invocation
GL_EXT_device_group
GL_EXT_draw_instanced
GL_EXT_expect_assume
GL_EXT_frag_depth
GL_EXT_fragment_invocation_density
GL_EXT_fragment_shader_barycentric
GL_EXT_fragment_shading_rate
GL_EXT_geometry_point_size
GL_EXT_geometry_shader
GL_EXT_gpu_shader5
GL_EXT_maximal_reconvergence
GL_EXT_mesh_shader
GL_EXT_mesh_shader is already turned on, and not allowed with
GL_EXT_multiview
GL_EXT_nonuniform_qualifier
GL_EXT_null_initializer
GL_EXT_opacity_micromap
GL_EXT_post_depth_coverage
GL_EXT_primitive_bounding_box
GL_EXT_ray_cull_mask
GL_EXT_ray_flags_primitive_culling
GL_EXT_ray_query
GL_EXT_ray_tracing
GL_EXT_ray_tracing_position_fetch
GL_EXT_samplerless_texture_functions
GL_EXT_scalar_block_layout
GL_EXT_shader_16bit_storage
GL_EXT_shader_8bit_storage
GL_EXT_shader_atomic_float
GL_EXT_shader_atomic_float2
GL_EXT_shader_atomic_int64
GL_EXT_shader_explicit_arithmetic_types
GL_EXT_shader_explicit_arithmetic_types_float16
GL_EXT_shader_explicit_arithmetic_types_float32
GL_EXT_shader_explicit_arithmetic_types_float64
GL_EXT_shader_explicit_arithmetic_types_int16
GL_EXT_shader_explicit_arithmetic_types_int32
GL_EXT_shader_explicit_arithmetic_types_int64
GL_EXT_shader_explicit_arithmetic_types_int8
GL_EXT_shader_image_int64
GL_EXT_shader_image_load_formatted
GL_EXT_shader_implicit_conversions
GL_EXT_shader_integer_mix
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_quad_control
GL_EXT_shader_realtime_clock
GL_EXT_shader_subgroup_extended_types_float16
GL_EXT_shader_subgroup_extended_types_int16
GL_EXT_shader_subgroup_extended_types_int64
GL_EXT_shader_subgroup_extended_types_int8
GL_EXT_shader_texture_lod
GL_EXT_shader_tile_image
GL_EXT_shadow_samplers
GL_EXT_shared_memory_block
GL_EXT_spirv_intrinsics
GL_EXT_subgroup_uniform_control_flow
GL_EXT_terminate_invocation
GL_EXT_tessellation_point_size
GL_EXT_tessellation_shader
GL_EXT_texture_array
GL_EXT_texture_buffer
GL_EXT_texture_cube_map_array
GL_EXT_texture_shadow_lod
GL_EXT_texture_shadow_lod not supported for this ES version
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
GL_INTEL_shader_integer_functions2
GL_KHR_blend_equation_advanced
GL_KHR_cooperative_matrix
GL_KHR_memory_scope_semantics
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_shader_subgroup_rotate
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_vote
GL_NVX_multiview_per_view_attributes
GL_NV_compute_shader_derivatives
GL_NV_conservative_raster_underestimation
GL_NV_cooperative_matrix
GL_NV_displacement_micromap
GL_NV_fragment_shader_barycentric
GL_NV_geometry_shader_passthrough
GL_NV_integer_cooperative_matrix
GL_NV_mesh_shader
GL_NV_mesh_shader is already turned on, and not allowed with
GL_NV_ray_tracing
GL_NV_ray_tracing_motion_blur
GL_NV_sample_mask_override_coverage
GL_NV_shader_atomic_fp16_vector
GL_NV_shader_atomic_int64
GL_NV_shader_invocation_reorder
GL_NV_shader_noperspective_interpolation
GL_NV_shader_sm_builtins
GL_NV_shader_subgroup_partitioned
GL_NV_shader_texture_footprint
GL_NV_shading_rate_image
GL_NV_stereo_view_rendering
GL_NV_viewport_array2
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_geometry_point_size
GL_OES_geometry_shader
GL_OES_gpu_shader5
GL_OES_primitive_bounding_box
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_standard_derivatives
GL_OES_tessellation_point_size
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_buffer
GL_OES_texture_cube_map_array
GL_OES_texture_storage_multisample_2d_array
GL_OVR_multiview
GL_OVR_multiview2
GL_QCOM_image_processing
GPSIFDOffset
GPU memory available (%d MB of %d MB used). Increasing texture pool size %d MB -> %d MB.\n
GPU memory available (%d MB of %d MB used). Reducing texture pool size %d MB -> %d MB\n
GPU memory available (%d MB of %d MB used). Texture pool size has become smaller than the minimum pool size, increasing pool size %d MB -> %d MB\n
GPU reports %dMB available memory which is too low, using %d MB\n
GXH9GP
G\b3\tG\fH
G\b8C\bu
G\bA#IG
G\bH+\aH
G\bI+\aH
G\b\vȉL$h
G\bf9_\n
G\bfD9
G\bu*H
G\bukH
G\f2B\f
G\f2C\f
G\f\nG\rt,H
G\tV_stricmp_fast
GameResourceServiceClientV001
GameResourceServiceServerV001
GameUIService_001
Gather
Gather operation is invalid for multisample image
GatherAlL9
GatherAlpha
GatherBlL9\bu\bf
GatherBlue
GatherCmH
GatherCmp
GatherCmpAlpha
GatherCmpBlue
GatherCmpGreen
GatherCmpRed
GatherGrL9\bu
GatherGreen
GatherReL9\bu\n
GatherRed
General
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
Generating variable pointers requires capability
Generator
Generic
GenericCastToPtr
GenericCastToPtrExplicit
GenericPointer
GenericPtrMemSemantics
Geometry
Geometry Index must be a 32-bit int scalar
Geometry execution model entry points must specify exactly one of InputPoints, InputLines, InputLinesAdjacency, Triangles or InputTrianglesAdjacency execution modes
Geometry execution model entry points must specify exactly one of OutputPoints, OutputLineStrip or OutputTriangleStrip execution modes
GeometryIndexEXT
GeometryPointSize
GeometryShaderPassthroughNV
GeometryStreams
Get@CUtlBuffer@@QEAA_NPEAXH@Z
GetACP
GetActiveWindow
GetCPInfo
GetCPUInformation
GetCommandLineA
GetCommandLineW
GetConsoleMode
GetConsoleOutputCP
GetConsoleScreenBufferInfo
GetCurrentDirectoryW
GetCurrentPackageId
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetDateFormatEx
GetDateFormatW
GetDefaultMiniDumpTypeFlags
GetDefaultQueue
GetDimenH9\bu
GetDimensions
GetDriveTypeW
GetEnvironmentStringsW
GetFileInformationByHandle
GetFileSizeEx
GetFileType
GetFirstSubKey@KeyValues@@QEAAPEAV1@XZ
GetFloat@KeyValues@@QEBAMPEBDM@Z
GetForegroundWindow
GetFullPathNameW
GetGPUFrameTimeMS called without setting RENDERDEBUGFLAG_ENABLE_GPU_TIMESTAMPS.\n
GetGameInfoBool@@YA_NPEBD_N@Z
GetGameInfoInt@@YAHPEBDH@Z
GetGameInfoString@@YAPEBDPEBD0PEAD_K@Z
GetInt@KeyValues@@QEBAHPEBDH@Z
GetKernelLocalSizeForSubgroupCount
GetKernelMaxNumSubgroups
GetKernelNDrangeMaxSubGroupSize
GetKernelNDrangeSubGroupCount
GetKernelPreferredWorkGroupSizeMultiple
GetKernelWorkGroupSize
GetLastActivePopup
GetLastError
GetLocaleInfoEx
GetLocaleInfoW
GetMaxPipePackets
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetName@KeyValues@@QEBAPEBDXZ
GetNextKey@KeyValues@@QEAAPEAV1@XZ
GetNumPipePackets
GetOEMCP
GetOverflow@CUtlBuffer@@IEAA_NH@Z
GetProcAddress
GetProcessHeap
GetProcessWindowStation
GetProfile_alpha_basic
GetProfile_alpha_fast
GetProfile_alpha_slow
GetProfile_alpha_ultrafast
GetProfile_alpha_veryfast
GetProfile_basic
GetProfile_bc6h_basic
GetProfile_bc6h_fast
GetProfile_bc6h_slow
GetProfile_bc6h_veryfast
GetProfile_bc6h_veryslow
GetProfile_fast
GetProfile_slow
GetProfile_ultrafast
GetProfile_veryfast
GetRenderTargetSampleCount
GetRenderTargetSamplePosition
GetSamplePosition
GetStartupInfoW
GetStdHandle
GetStringTypeW
GetSystemTime
GetSystemTimeAsFileTime
GetSystemTimePreciseAsFileTime
GetTempPath2W
GetTimeFormatEx
GetTimeFormatW
GetTimeZoneInformation
GetUint64@KeyValues@@QEBA_KPEBD_K@Z
GetUserDefaultLCID
GetUserDefaultLocaleName
GetUserObjectInformationW
GetWindowThreadProcessId
Gf95)1&!\ry9I
Global
GlobalInvocationID
GlobalInvocationId
GlobalLinearId
GlobalOffset
GlobalSize
GlobalVariableFPGADecorationsINTEL
GlobalVariableHostAccessINTEL
GlobalVariableOffsetINTEL
Glslang Reference Front End
Google
Google ANGLE Shader Compiler
Google Clspv
Google MLIR SPIR-V Serializer
Google Shaderc over Glslang
Google Skia SkSL
Google Tint Compiler
Google rspirv
Google spiregg
Got parse error: %d\n
GpJc<0J
GrJoq
Graphics Device changed, resetting video config\n
GrayResponseCurve
GrayResponseUnit
Group 3 Options
Group Count X must be a 32-bit unsigned int scalar
Group Count Y must be a 32-bit unsigned int scalar
Group Count Z must be a 32-bit unsigned int scalar
Group3Options
Group4Options
GroupAll
GroupAny
GroupAsyncCopy
GroupBitwiseAndKHR
GroupBitwiseOrKHR
GroupBitwiseXorKHR
GroupBroadcast
GroupCommitReadPipe
GroupCommitWritePipe
GroupDecorate
GroupFAdd
GroupFAddNonUniformAMD
GroupFMax
GroupFMaxNonUniformAMD
GroupFMin
GroupFMinNonUniformAMD
GroupFMulKHR
GroupIAdd
GroupIAddNonUniformAMD
GroupIMulKHR
GroupLogicalAndKHR
GroupLogicalOrKHR
GroupLogicalXorKHR
GroupMemberDecorate
GroupMemoryBarrier
GroupMemoryBarrierWithGroupSync
GroupNonUniform
GroupNonUniformAll
GroupNonUniformAllEqual
GroupNonUniformAny
GroupNonUniformArithmetic
GroupNonUniformBallot
GroupNonUniformBallotBitCount
GroupNonUniformBallotBitExtract
GroupNonUniformBallotFindLSB
GroupNonUniformBallotFindMSB
GroupNonUniformBitwiseAnd
GroupNonUniformBitwiseOr
GroupNonUniformBitwiseXor
GroupNonUniformBroadcast
GroupNonUniformBroadcastFirst
GroupNonUniformClustered
GroupNonUniformElect
GroupNonUniformFAdd
GroupNonUniformFMax
GroupNonUniformFMin
GroupNonUniformFMul
GroupNonUniformIAdd
GroupNonUniformIMul
GroupNonUniformInverseBallot
GroupNonUniformLogicalAnd
GroupNonUniformLogicalOr
GroupNonUniformLogicalXor
GroupNonUniformPartitionNV
GroupNonUniformPartitionedNV
GroupNonUniformQuad
GroupNonUniformQuadAllKHR
GroupNonUniformQuadAnyKHR
GroupNonUniformQuadBroadcast
GroupNonUniformQuadSwap
GroupNonUniformRotateKHR
GroupNonUniformSMax
GroupNonUniformSMin
GroupNonUniformShuffle
GroupNonUniformShuffleDown
GroupNonUniformShuffleRelative
GroupNonUniformShuffleUp
GroupNonUniformShuffleXor
GroupNonUniformUMax
GroupNonUniformUMin
GroupNonUniformVote
GroupReserveReadPipePackets
GroupReserveWritePipePackets
GroupSMax
GroupSMaxNonUniformAMD
GroupSMin
GroupSMinNonUniformAMD
GroupUMax
GroupUMaxNonUniformAMD
GroupUMin
GroupUMinNonUniformAMD
GroupUniformArithmeticKHR
GroupWaitEvents
Groups
GtH+ًWpH
GvA2Bv
H 9Y\b
H : %M
H : %M : %S
H A9\t
H D9A0s\nD
H D9\ts
H SUVWAVH
H SVWH
H!D$ I
H!D$0D
H!L$ D
H!T$0D
H#L$0H
H#T$pH
H$6t\e\t
H(H9H u8
H(H;J(H
H*0"ZOW
H+B\bH3
H+D$PH
H+D$hH
H+D$pH
H+D$pI
H+G\bH3
H+J8E
H+K8H
H+L$ xFH
H+L$0f
H+Q8D
H+Q8H
H+QXH+Q0H+Q
H+T$XM
H+l$PM
H-8X,t\b
H-8X,t\v
H-@8x,t\v
H09N0sSI
H0;K0u?H
H0D9N0
H0H+H(H
H0H9K0u}H
H0H;K0u
H0I+H(H
H0s\bI
H3KJ(I
H3KJ,I
H3T$0I
H4IcH8H
H8H9K8usH
H8H;J8H
H9(t$I
H9.t\tH
H9/t\fH
H90t\vH
H93t7H
H93teH
H9529K
H97u+A
H98t$H
H99t(H
H99t\tH
H99tjH
H9:t\fH
H9=*vI
H9=E!G
H9=ULI
H9=Z+J
H9=\ntI
H9>&X
H9@ t\vH
H9A\bt
H9A\btZ
H9A\bu\nH
H9A`t\fH
H9B H
H9C@uiH
H9D$XI
H9EXs.H
H9F\bt2
H9F\bt8
H9F\btiH
H9F\btoH
H9GXt4H
H9G\bt{H
H9G\bu)H
H9H\bt\fH
H9H\bu H
H9H\bu'I
H9I t\rH9q\br\aH
H9J\burH
H9Jht\\2
H9K t\fH
H9K\bt\vH
H9L$0t
H9L$8t
H9L$8t5
H9L$Ht?H
H9L$XD
H9L$`t
H9M\at?H
H9N\btQ9
H9O0t\fH
H9P\btGH
H9P\btnH
H9Q s>H
H9R0u\nH9R8
H9R8uOH
H9S r
H9S\buKH
H9S\bu\fH
H9T$0H
H9\\$0t\vH
H9\\$@t8H
H9\\$Pt\vH
H9\\$Xt\vH
H9\\$ht\vH
H9\\$pt\vH
H9\\$xt\vH
H9\as_H
H9\bu H
H9\bu\a2
H9\nueH
H9i@u
H9l$(t\tM
H9l$0t\tM
H9l$`t\vH
H9l$ht\vH
H9l$pA
H9q\bt\fH
H9s(t\fH
H9s`u\bM
H9t$0t\vH
H9t$8t\vH
H9t$@t\f
H9t$@t\vH
H9t$`t
H9u t\nH
H9ugt\nH
H9w`uAA
H9x\bt$H
H9z(tnH
H9z\bt\fH
H9{ t\fH
H9|$@t\vH
H9|$Pt\vH
H9|$`t\vH
H9|$xt\vH
H9}Ht\nH
H9}Pt\nH
H9}Xt\nH
H9}gt\nH
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4Encoding.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4Encoding_ETC1.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4Encoding_R11.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4Encoding_RG11.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4Encoding_RGB8.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4Encoding_RGB8A1.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcBlock4x4Encoding_RGBA8.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcDifferentialTrys.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcIndividualTrys.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\EtcCodec\\EtcSortedBlockList.cpp
H:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\EtcLib\\Etc\\EtcImage.cpp
H;0v\nH;p\b
H;A s'H
H;A\br?H
H;B(r\a
H;B\b}\fH
H;C s$H
H;C s%H
H;C s'H
H;C0u!E
H;CHs\v
H;C\brEM
H;C\bu\b2
H;D$Pu\bM
H;D9\bu-D;|9
H;H\bu\rL
H;H\bv\a
H;J\b}\vH
H;P r\rI
H;P\bt\rH
H;P\bu\fL
H;P\bu\rL
H;Q s\bL
H;Q |\nI
H;S@t\t
H;S\bt\b
H;T$xt
H;U\bu\rH
H;U`t\rD
H;XXs\v
H;Y r\tH
H;\bu\rH
H;\nr!fff
H;\nvSH
H;\r $8
H;\rU'8
H;^(ttH
H;^\btAL
H;^\btLH
H;^\btQH
H;^\btXL
H;^\bteH
H;k(u\fL
H;nHur
H;p }TH
H;s0tt
H;sHs\v
H;u(u\fL
H;w\bv
H;w\b}\eH
H;xXu5
H;|$ t I
H@H+H8H
H@H;HHs\aD
H@I+H8H
HA^A]A
HA_A]A
HA_A^A]A
HDA9L$D
HDA9NDt$H
HERO_C
HEXINTEGERLITERAL
HEX_DIGIT
HH:mm:ss
HH;T$xt
HIGH_PRECISION
HITATTREXT
HITATTRNV
HITOBJECTATTRNV
HITOBJECTNV
HL2ۉ|$xE
HLSL SM6.0 level subgroup wave ops supported, subgroup size = %d\n
HLSL parsing failed.\n
HLc@\fIc
HOST_CACHED
HOST_COHERENT
HOST_VISIBLE
HR><y5
HZ$\\dZX
H\b3\bD$0H
H\b3\tA
H\b3ɉH\fH
H\b@8y-t
H\bAUAVAWH
H\bD89H
H\bD8I-t
H\bD8i-t
H\bH+\bH
H\bH9\bt7
H\bH9\bu!I
H\bHc9E
H\bHcA0
H\bHcO H
H\bI+\bH
H\bJcD\t\bA
H\bL+\bI
H\bL9I\bu\bD9
H\bL;9u
H\bLcG\bH
H\bM9@ t\nM
H\bSATH
H\bSAUH
H\bSUVWATAUAVAWH
H\bSUVWATAVAWH
H\bSUVWAVH
H\bSVWH
H\bSWAWH
H\bUATAUAVAWH
H\bUAUAWH
H\bUAUH
H\bUAVH
H\bUAWH
H\bUSATH
H\bUSAWH
H\bUSVWATAUH
H\bUSVWH
H\bUSWATAUH
H\bUSWATH
H\bUVATH
H\bUVAUAVAWH
H\bUVWATAUAVAWH
H\bUVWAVH
H\bVAUAVAWH
H\bVAUH
H\bVAWH
H\bVWATAUAVAWL
H\bVWATAVH
H\bVWAVH
H\bWAVAWH
H\bfA9Q\btYH
H\n$\fd\nD
H\vT$PH3
H\vЋC
H\vЋC0
H\vЋC4
H\vЋC8
H\vЋC\b
H\vЋC\f
H`E8xXt
HalfFloat
HalftoneHints
HammerMapLoader001
HaveWriteLock_BlockReadsNow@CThreadRWLock_FastRead@@QEAAX_N@Z
Having
Hc-3oF
HcA E3
HcA H
HcA L
HcA\bLcA\fL
HcApD
HcB\bLcr
HcBpK
HcC E3
HcC(Hcw4
HcC(M
HcC\bHcK\fH
HcC\bL
HcC\fHcs\bH
HcCxH
HcD$$M
HcD$(L
HcD$0D
HcD$0H
HcD$4H
HcD$@3
HcD$HA
HcD$HL
HcD$LL
HcD$PH
HcD$pH
HcD$xI
HcD0\fH
HcEwL
HcF(H
HcF\fE
HcG0H
HcH\bH
HcI0McH\bH
HcI\bE3
HcI\fMcw<Hc]\bI
HcK(H
HcKJ\b+L
HcKxH
HcKxL
HcL$4I
HcL$<H
HcL$HA
HcL$HH
HcL$LH
HcL$xM
HcM<LcW\bL
HcP(3
HcS LcK\bA
HcS8H
HcT$HH
HcT$LH
HcT$hA
HcT$hH
HcT)\b
HcT\b\b
HcT\b\bH
HcW\bE3
HcY E3
Hc[@t$H
Hc\\$0L
Hc\\$XI
Hc\\$dA
Hc\\$pI
Hc\nLcZ
Hci@3
Hci@L
HciHH
HciXL
Hci`H
HcihE
Hcl$@L
Hcs(;s8u\tH
Hct$8H
Hct$LI
Hct$PA
Hct$PM
Hct$hD
Hct$hu
Hct$xH
HcuXLk
HcuwLc
Hcw 3ҋO
Hc}wE3
HcÈT0
HcǉL$ H
Hc؋ՋD
Header block
Header size does not contain enough data in pipeline cache file %s.  Deleting.\n
HelpSystem_001
HelperInvocation
Hero C Compiler
HfD9#A
Hint and Bits are optional together i.e
Hint must be a 32-bit int scalar
Hit Kind must be a 32-bit unsigned int scalar
Hit Object Attributes id must be a OpVariable of storage class HitObjectAttributeNV
Hit Object Attributes id must be a OpVariable of storage class RayPayloadKHR
Hit Object must be a memory object declaration
Hit Object must be a pointer
Hit T must be a 32-bit float scalar
Hit must be a 32-bit int scalar
HitAttributeKHR
HitAttributeKHR Storage Class is limited to IntersectionKHR, AnyHitKHR, sand ClosestHitKHR execution model
HitAttributeKHR Storage Class variables are read only with AnyHitKHR and ClosestHitKHR
HitAttributeNV
HitKindBackFacingMicroTriangleNV
HitKindFrontFacingMicroTriangleNV
HitKindKHR
HitKindNV
HitMicroTriangleVertexBarycentricsNV
HitMicroTriangleVertexPositionsNV
HitObjectAttributeNV
HitObjectAttributeNV Storage Class is limited to RayGenerationKHR, ClosestHitKHR or MissKHR execution model
HitObjectExecuteShaderNV
HitObjectGetAttributesNV
HitObjectGetCurrentTimeNV
HitObjectGetGeometryIndexNV
HitObjectGetHitKindNV
HitObjectGetInstanceCustomIndexNV
HitObjectGetInstanceIdNV
HitObjectGetInstaneIdNV
HitObjectGetObjectRayDirectionNV
HitObjectGetObjectRayOriginNV
HitObjectGetObjectToWorldNV
HitObjectGetPrimitiveIndexNV
HitObjectGetRayTMaxNV
HitObjectGetRayTMinNV
HitObjectGetShaderBindingTableRecordIndexNV
HitObjectGetShaderRecordBufferHandleNV
HitObjectGetWorldRayDirectionNV
HitObjectGetWorldRayOriginNV
HitObjectGetWorldToObjectNV
HitObjectIsEmptyNV
HitObjectIsHitNV
HitObjectIsMissNV
HitObjectReadShaderRecordBufferHandleNV
HitObjectRecordEmptyNV
HitObjectRecordHitMotionNV
HitObjectRecordHitNV
HitObjectRecordHitWithIndexMotionNV
HitObjectRecordHitWithIndexNV
HitObjectRecordMissMotionNV
HitObjectRecordMissNV
HitObjectShaderRecordBufferNV
HitObjectTraceRayMotionNV
HitObjectTraceRayNV
HitTNV
HitTriangleVertexPositionsKHR
Hitch alert: Present was waiting for %d iterations and %.1f seconds.\n
HkD$ pI
Hkt$PXMk
HlslCounterBufferGOOGLE
HlslSemanticGOOGLE
Hn$pdnR
Horizontal differencing "Predictor" not supported with %d-bit samples
Horizontal2Pixels
Horizontal4Pixels
HostAccessINTEL
HostComputer
HostOnlyINTEL
HostStateMgr001
Huffman code size table overflow
Huffman table 0x%02x was not defined
HÉ\aIc\aI
I : %M : %S %p
I could not work out what I was expecting, like so many of us these days!\n
I#҉C\bH
I(H;H t8H
I(H;H tRH
I(H;H t_H
I(H;J t
I+E0I+E
I+EXI+E
I+H8H
I+J\bH
I+L$\bH
I+L$\bI
I0L+I(I
I0L;I8t(H
I16VEC2
I16VEC3
I16VEC4
I32VEC2
I32VEC3
I32VEC4
I64IMAGE1D
I64IMAGE1DARRAY
I64IMAGE2D
I64IMAGE2DARRAY
I64IMAGE2DMS
I64IMAGE2DMSARRAY
I64IMAGE2DRECT
I64IMAGE3D
I64IMAGEBUFFER
I64IMAGECUBE
I64IMAGECUBEARRAY
I64VEC2
I64VEC3
I64VEC4
I8H+H0H
I8VEC2
I8VEC3
I8VEC4
I9.u\fI
I9>t"f
I9D(\bt
I9D)\bt
I9EPtZ
I9F\bta
I9F\btvI
I9F\btzH
I9G@ubE3
I9G\bteL
I9N\btHH
I9P ri
I9}(tiH
I;6u\r
I;F0u\tI
I;^\bt1
I;t$ht
I;v\btsH
I;~8u\nI;v
I;~\bu2H
I@H9k8u\vH
I@I+I8H
IA;2ucA
IATTACHMENTEXT
IAddCarry
IAddSatINTEL
IAverageINTEL
IAverageRoundedINTEL
IB "%s": Tried to lock a GPU-only buffer!\n
IB "%s": Tried to lock a non integral number of indices!\n
IB "%s": Tried to lock a static buffer twice!\n
IB "%s": Tried to lock too much memory (%d>%d)!\n
IB "%s": Tried to lock too much memory for subregion (%d>%d)!\n
IB "%s": Tried to lock twice without an unlock!\n
IB "%s": Wrote a non integral number of indices!\n
IB: %d buffers, %.2f MB\n
IBPool
ICC Profile
ICOOPMATNV
ID overflow. Try running compact-ids
ID$\bA
IDENTIFIER
IEqual
IGNORE_INTERSECTION
IH9B\ftEHcR\fI
IHHcB\fJcL\b
II9}\btCH
IIMAGE1D
IIMAGE1DARRAY
IIMAGE2D
IIMAGE2DARRAY
IIMAGE2DMS
IIMAGE2DMSARRAY
IIMAGE2DRECT
IIMAGE3D
IIMAGEBUFFER
IIMAGECUBE
IIMAGECUBEARRAY
IK(L9x
IL "%s": Unable to create input layout; layout has %d fields, which is more than %d!\n
IL$$A
IL$0A
IL$8;L$0
IMAGE1D
IMAGE1DARRAY
IMAGE2D
IMAGE2DARRAY
IMAGE2DMS
IMAGE2DMSARRAY
IMAGE2DRECT
IMAGE3D
IMAGEBUFFER
IMAGECUBE
IMAGECUBEARRAY
IMAGE_FORMAT_R11G11B10_FLOAT
IMAGE_LINEAR
IMAGE_OPTIMAL
IMAGE_UNKNOWN
IMul32x16INTEL
INC_OP
IND)ind
INPUT_LAYOUT_VARIATION_DEFAULT
INPUT_LAYOUT_VARIATION_MAX
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID_MORPH_VERT_ID
INT16CONSTANT
INT16_T
INT32CONSTANT
INT32_T
INT64CONSTANT
INT64_T
INT8_T
INTCONSTANT
INTEGERLITERAL
INTERNAL ERROR
INVARIANT
INotEqual
IOHA3FH
IOPipeStorageINTEL
IOPipesINTEL
IPulseSystem_001
IR after last pass
IR before pass
ISAMPLER1D
ISAMPLER1DARRAY
ISAMPLER2D
ISAMPLER2DARRAY
ISAMPLER2DMS
ISAMPLER2DMSARRAY
ISAMPLER2DRECT
ISAMPLER3D
ISAMPLERBUFFER
ISAMPLERCUBE
ISAMPLERCUBEARRAY
ISO JBIG
ISUBPASSINPUT
ISUBPASSINPUTMS
ISubBorrow
ISubSatINTEL
IT$(E3
IT$dH
ITEXTURE1D
ITEXTURE1DARRAY
ITEXTURE2D
ITEXTURE2DARRAY
ITEXTURE2DMS
ITEXTURE2DMSARRAY
ITEXTURE2DRECT
ITEXTURE3D
ITEXTUREBUFFER
ITEXTURECUBE
ITEXTURECUBEARRAY
IXH;OHr
I\b8A-t\r8A
I\b8Y-t
I\b9H\bt
I\b@8i-t
I\b@8q-t
I\bI+\tH
I\bLcT1\bA
I\tV_strlower_fast
I\vȍB8H
Ic.A;n
Ic/A;o
IcA\bH
IcD$8I
IcD$@H
IcD$L3
IcD\t\bM
IcG H
IcG\fLi
IcNxD
IcS\fIcK
IcT)\b
IcV\\LcU
IcY\fIcI
Icv\bA;v
IcȉD$x
Id is 0
Id must be an unsigned integer scalar
If OpTypeBool is stored in conjunction with OpVariable using Input or Output Storage Classes it requires a BuiltIn decoration
If OpTypeBool is stored in conjunction with OpVariable, it can only be used with non-externally visible shader Storage Classes: Workgroup, CrossWorkgroup, Private, Function, Input, Output, RayPayloadKHR, IncomingRayPayloadKHR, HitAttributeKHR, CallableDataKHR, IncomingCallableDataKHR, or UniformConstant
IgnoreIntersectionKHR
IgnoreIntersectionNV
Ignoring initializer for uniform
Ihttp://crl3.digicert.com/DigiCertTrustedG4RSA4096SHA256TimeStampingCA.crl0
IiGM>nw
Il?333333c
Illegal number of components
Illegal to have non-comment, non-whitespace tokens before #version
Illegal use of QCOM image processing decorated texture
Image 'Dim' cannot be Cube
Image 'Dim' cannot be SubpassData
Image 'Dim' cannot be TileImageDataEXT
Image 'Dim' must be 1D, 2D, 3D or Cube
Image 'Dim' must be 1D, Buffer, 2D, Cube, 3D or Rect
Image 'Dim' must be 2D
Image 'MS' must be 0
Image 'MS' must be 1
Image Dim SubpassData cannot be used with ImageSparseRead
Image Dim SubpassData cannot be used with OpImageTexelPointer
Image Dim TileImageDataEXT cannot be used with
Image Dim TileImageDataEXT cannot be used with OpImageTexelPointer
Image Layout Transitions (%s
Image Operand Bias can only be used with ImplicitLod opcodes
Image Operand Bias requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand ConstOffset cannot be used with Cube Image 'Dim
Image Operand ConstOffsets can only be used with OpImageGather and OpImageDrefGather
Image Operand ConstOffsets cannot be used with Cube Image 'Dim
Image Operand Grad can only be used with ExplicitLod opcodes
Image Operand Lod can only be used with ExplicitLod opcodes
Image Operand Lod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand MakeTexelAvailableKHR can only be used with Op
Image Operand MakeTexelAvailableKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MakeTexelVisibleKHR can only be used with Op
Image Operand MakeTexelVisibleKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MinLod can only be used with ImplicitLod
Image Operand MinLod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand MinLod requires 'MS' parameter to be 0
Image Operand Offset can only be used with OpImage*Gather operations
Image Operand Offset cannot be used with Cube Image 'Dim
Image Operand Sample can only be used with OpImageFetch
Image Operand Sample is required for operation on multi-sampled image
Image Operand Sample requires non-zero 'MS' parameter
Image Operand bits Lod and Grad cannot be set at the same time
Image Operands Offset, ConstOffset, ConstOffsets, Offsets cannot be used together
Image data size is zero or too large: width
Image must have either 'MS'=1 or 'Sampled'=0 or 'Sampled'=2
Image too wide for this implementation
Image1D
ImageArgumentInfoChannelDataTypePushConstant
ImageArgumentInfoChannelDataTypeUniform
ImageArgumentInfoChannelOrderPushConstant
ImageArgumentInfoChannelOrderUniform
ImageBasic
ImageBlockMatchGatherSADQCOM
ImageBlockMatchGatherSSDQCOM
ImageBlockMatchSADQCOM
ImageBlockMatchSSDQCOM
ImageBlockMatchWindowSADQCOM
ImageBlockMatchWindowSSDQCOM
ImageBoxFilterQCOM
ImageBuffer
ImageCubeArray
ImageDepth
ImageDescription
ImageDrefGather
ImageFetch
ImageFootprintNV
ImageFullLength
ImageFullWidth
ImageGather
ImageGatherBiasLodAMD
ImageGatherExtended
ImageLength
ImageMSArray
ImageMemory
ImageMipmap
ImageQuery
ImageQueryFormat
ImageQueryLevels
ImageQueryLod
ImageQueryOrder
ImageQuerySamples
ImageQuerySize
ImageQuerySizeLod
ImageRead
ImageReadWrite
ImageReadWriteLodAMD
ImageRect
ImageSampleDrefExplicitLod
ImageSampleDrefImplicitLod
ImageSampleExplicitLod
ImageSampleFootprintNV
ImageSampleImplicitLod
ImageSampleProjDrefExplicitLod
ImageSampleProjDrefImplicitLod
ImageSampleProjExplicitLod
ImageSampleProjImplicitLod
ImageSampleWeightedQCOM
ImageSparseDrefGather
ImageSparseFetch
ImageSparseGather
ImageSparseRead
ImageSparseSampleDrefExplicitLod
ImageSparseSampleDrefImplicitLod
ImageSparseSampleExplicitLod
ImageSparseSampleImplicitLod
ImageSparseSampleProjDrefExplicitLod
ImageSparseSampleProjDrefImplicitLod
ImageSparseSampleProjExplicitLod
ImageSparseSampleProjImplicitLod
ImageSparseTexelsResident
ImageTexelPointer
ImageWidth
ImageWrite
Imagination
Immutable sampler
ImplementInRegisterMapINTEL
Implicit size of unsized array doesn't match same symbol among multiple shaders
ImplicitLod instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
ImplicitLod instructions require Fragment or GLCompute execution model
Import
ImportedDeclaration
ImportedModule
Improper call to JPEG library in state %d
In Logical addressing with variable pointers, variables
In Logical addressing, variables may not allocate a pointer
In OpPhi instruction
In SPIR-V 1.6 or later, True Label and False Label must be different labels
In SPIR-V 1.6 or later, sampled image dimension must not be Buffer
In Vulkan, BufferBlock is disallowed on variables in the StorageBuffer storage class
In Vulkan, OpImage*Dref* instructions must not use images with a 3D Dim
In Vulkan, OpTypeForwardPointer must have
In Vulkan, the FPRoundingMode mode must only by RTE or RTZ
In Vulkan: The OpGroupNonUniformBallotBitCount group operation must be only: Reduce, InclusiveScan, or ExclusiveScan
In entry points using the MaximallyReconvergesKHR execution mode, True Label and False Label must be different labels
In entry points using the MaximallyReconvergesKHR execution mode, this basic block must not have multiple unique predecessors
In the OpenCL environment, Arrayed may only be set to 1
In the OpenCL environment, the optional Access Qualifier
In the Vulkan environment, GLCompute execution model entry points require either the LocalSize or LocalSizeId execution mode or an object decorated with WorkgroupSize must be specified
In the Vulkan environment, cannot store to Uniform Blocks
In the Vulkan environment, the OriginLowerLeft execution mode must not be used
In the Vulkan environment, the PixelCenterInteger execution mode must not be used
InBoundsAccessChain
InBoundsPtrAccessChain
Inappropriate photometric interpretation %d for SGILog compression; %s
InclusiveScan
IncomingCallableDataKHR
IncomingCallableDataKHR Storage Class is limited to CallableKHR execution model
IncomingCallableDataNV
IncomingRayFlagsKHR
IncomingRayFlagsNV
IncomingRayPayloadKHR
IncomingRayPayloadKHR Storage Class is limited to AnyHitKHR, ClosestHitKHR, and MissKHR execution model
IncomingRayPayloadNV
Inconsistent progression sequence for component %d coefficient %d
Incorrect keyframe parameters
Increase texture memory pool size by this many MB / s when under budget
IncremenH9\bu
IncrementCounter
Index
Index Pool
Index Pool %s total %s used, %i allocations
Index can only be applied to Fragment output variables
Index is out of bounds
Index is out of bounds, can not find index
Indexes passed to
IndirectReferencesINTEL
Init@CMemoryStack@@QEAA_NPEBDIIII@Z
InitCCITTFax3
InitDevice: vkEnumerateDeviceExtensionProperties( ... , NULL ) failed.\n
InitModeINTEL
InitOnDeviceReprogramINTEL
InitOnDeviceResetINTEL
InitOnceBeginInitialize
InitOnceComplete
InitializeConditionVariable
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeNodePayloadsAMDX
InitializeSListHead
InitializeSRWLock
Initialized NVIDIA Reflex SDK for low latency.\n
Initializer
Initializer type must match the type pointed to by the Result Type
Initializers must match
Initializing streaming texture manager.\n
InitiationIntervalINTEL
InkNames
InkSet
Inline
Inlined
Inlined At
Input file read error
InputAttachment
InputAttachmentArrayDynamicIndexing
InputAttachmentArrayDynamicIndexingEXT
InputAttachmentArrayNonUniformIndexing
InputAttachmentArrayNonUniformIndexingEXT
InputAttachmentIndex
InputLayoutVariation_t
InputLines
InputLinesAdjacency
InputPatch
InputPoints
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InputTrianglesAdjacency
Insert@CBufferString@@QEAAPEBDHPEBDH_N@Z
Instance
Instance Id must be a 32-bit int scalar
InstanceCustomIndexKHR
InstanceCustomIndexNV
InstanceId
InstanceIndex
Instruction cannot for logical addressing model be used without a variable pointers capability
Instruction reserved for future use, use of this instruction
Insufficient data length.\n
Insufficient data size for attributes.\n
Insufficient data size in offset table
Insufficient data size.\n
Insufficient header/data size.\n
Insufficient memory (case %d
Int64Atomics
Int64ImageEXT
Integer overflow in %s
IntegerFunctions2INTEL
Intensity
Intentionally vague touch behavior for %p\n
Interface block member layout align qualifier must match
Interface block member layout component qualifier must match
Interface block member layout location qualifier must match
Interface block member layout matrix qualifier must match
Interface block member layout offset qualifier must match
Interface struct has no Block decoration but has BuiltIn members. Location decorations must be used on each member of OpVariable with a structure type that is a block not decorated with Location
Interface variable id
Interfaces passed to OpEntryPoint must be of type OpTypeVariable. Found Op
InterlocH
InterlockedAdd
InterlockedAnd
InterlockedCompareExchange
InterlockedCompareStore
InterlockedExchange
InterlockedFlushSList
InterlockedMax
InterlockedMin
InterlockedOr
InterlockedXor
Internal Error
Internal error, unknown tag 0x%x
Internal error: Unhandled operand type
Internal error: empty execution models for function id
Internal error: missing function id
Internal error: unhandled header parse failure
InternalPop@CTSListBase@@AEAAPEAUTSLNodeBase_t@@XZ
InternalPush@CTSListBase@@AEAAXPEAUTSLNodeBase_t@@@Z
Internal_GetInt@CKeyValues_Data@@IEBAHXZ
Internal_GetString@CKeyValues_Data@@IEAAPEBDPEBDPEAD_K@Z
InteroperabilityIFDOffset
InterpolateAtCentroid
InterpolateAtOffset
InterpolateAtSample
InterpolateAtVertexAMD
Interpolation and auxiliary storage qualifiers must match
InterpolationFunction
IntersectionKHR
IntersectionNV
Invalid
Invalid Arrayed
Invalid Depth
Invalid JPEG file structure: SOS before SOF
Invalid JPEG file structure: missing SOS marker
Invalid JPEG file structure: two SOF markers
Invalid JPEG file structure: two SOI markers
Invalid MS
Invalid OpSwitch: selector id
Invalid Opcode name 'Op
Invalid SOS parameters for sequential JPEG
Invalid SPIR-V binary version
Invalid SPIR-V header
Invalid SPIR-V magic number
Invalid SPIR-V.  The id bound is larger than the max id bound
Invalid Sampled
Invalid YCbCr subsampling
Invalid argument for DecodeEXRImage
Invalid argument for LoadEXRImageFromMemory
Invalid argument. `memory` or `exr_header` argument is null in ParseEXRHeaderFromMemory
Invalid binding
Invalid color quantization mode change
Invalid component ID %d in SOS
Invalid crop request
Invalid data found when decoding pixels.\n
Invalid data height value
Invalid data width or data height
Invalid data width value
Invalid escape sequence
Invalid extended instruction import
Invalid extended instruction number
Invalid initializer for spec onstant
Invalid instruction Op
Invalid instruction word count
Invalid member count in texture template structure
Invalid memory pool code %d
Invalid number of bits
Invalid offset value in DecodeEXRImage
Invalid opcode
Invalid parameters to AllocateForObject( ... ).\n
Invalid pointer storage class
Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d
Invalid progressive parameters at scan script entry %d
Invalid rendersystem %d
Invalid scan script at entry %d
Invalid scope value:\n
Invalid semantics value
Invalid shader In/Out variable
Invalid shader In/Out variable semantic
Invalid storage class for pointer operand
Invalid storage class for target environment
Invalid storage class semantics value
Invalid texture spec (%s): %ix%i %i mips fmt %i
Invalid texture spec (%s): %ix%ix%i %i mips fmt %i
Invalid texture template struct member type
Invalid texture template type
Invalid thread index (%d) given\n
Invalid tile size x
Invalid tile size y
Invalid type to assign a location
Invalid use of 8- or 16-bit result
Invalid use of function result id
Invalid use of function type result id
Invalid variable index to flattened array
Invalid varint format.\n
Invalid word count: Op
InvalidateAfterReadINTEL
Invariant
InverseSqrt
Invocation
InvocationID
InvocationId
Invocations
InvocationsPerPixelNV
InvokeMiniDumpHandler
IptsASEY23㉒BP
IsDebuggerPresent
IsEqual_FastCaseInsensitive@CUtlString@@QEBA_NPEBD@Z
IsFinite
IsHelperInvocation
IsHelperInvocationEXT
IsNormal
IsProcessorFeaturePresent
IsValidCodePage
IsValidEvent
IsValidLocale
IsValidLocaleName
IsValidReserveId
Isolines
IssueTextureLoadRequest
IterationMultiple
IterationMultiple loop control operand must be greater than zero
Its Storage Class operand must be the same as the Storage Class
Iw\bZ
J J"v
J*L`N*X
J*LdN*R
J./0123456789:;<=>?@ABCDEJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFGHI
J0HcH\b
J943v
J<0"0i3
J@H+J8H
J@H+J8I
JFIF APP0 marker: version %d.%02d, density %dx%d  %d
JFIF extension marker: JPEG-compressed thumbnail image, length %u
JFIF extension marker: RGB thumbnail image, length %u
JFIF extension marker: palette thumbnail image, length %u
JFIF extension marker: type 0x%02x, length %u
JJJJJJJJJJJJ
JPD9\t
JPEG datastream contains no image
JPEG parameter struct mismatch: library thinks size is %u, caller expects %u
JPEGMEM
JSON version mismatches
J\bD+I\b
J\bH+\nH
J\bH91t\vH
J\bJ\nx\fT
Jan:January:Feb:February:Mar:March:Apr:April:May:May:Jun:June:Jul:July:Aug:August:Sep:September:Oct:October:Nov:November:Dec:December
January
JcD*\bJcl
K A;H
K H9K0u
K SUVWAUAVAWH
K UWATAVI
K WATAUAVAWH
K r\tH
K(3\tD$4H
K(3\tD$4I
K(HcS I
K-D8k,t\t
K-D8k,t\v
K0H;\r
K0HcK4H
K0HcQ\f
K0HcQ\fD
K0I9K(u
K0L+K(I
K4HcK8H
K73C4
K8H+K0H
K8H;\r
K@H+K8H
K@H+K8I
KDA9MD
KERNEL32.dll
KL$\bA
KL$\bH
KNQ\rMO
KXH;\r
K\b+C,Hc
K\b@8i-t
K\b@8q-t
K\bD8q-t
K\bD;O\bD
K\bH+\vH
K\bH9\bu L
K\bH;K\bu\eH
K\bLc@\b
K\bLc\rG
K\bSAUH
K\bSUVWATAUAVAWH
K\bSUVWAUAWH
K\bSUVWAVH
K\bSVWH
K\bUAUAWI
K\bUVATAUH
K\bUVATAWI
K\bUVAUAVH
K\bUVWH
K\bVWAVH
K\bWATAUAVAWH
K\bWAUH
K\bWAVAWH
K]taM
Keeping resolution of (%dx%d)\n
Kernel
Kernel must be a Kernel extended instruction
Kernel must be from the same extended instruction import
KernelAttributesINTEL
KeyValueCache001
KeyValuesSystem
KhH;\r
Khronos
Khronos Glslang Reference Front End
Khronos LLVM/SPIR-V Translator
Khronos SPIR-V Tools Assembler
Khronos SPIR-V Tools Linker
L$ ATAUAVH
L$ D8y
L$ D9@0s\nH
L$ D9A
L$ H9\vu\nH9C\b
L$ Hc
L$ I+L
L$ Lc1H
L$ SUAUAVH
L$ SUVW
L$ SUVWATAUAVAWH
L$ SUVWATAUAVH
L$ SUVWATAWH
L$ SUVWH
L$ SVWATAUAVAWH
L$ SVWAWH
L$ SVWH
L$ SWH
L$ UATAUAVAWH
L$ UAUAVH
L$ USVWATAUAVAWH
L$ USVWATAVAWH
L$ USWH
L$ UVWATAUAVAWH
L$ UVWAVAWH
L$ UVWAVH
L$ UVWAWH
L$ UWAUAVAWH
L$ VWATAUAVAW
L$ VWAVH
L$ WATAUAVAWH
L$ WATAUAWH
L$ WAVAWH
L$ fff
L$ iM
L$ iM\b
L$(3ɉD$ D
L$(9ADu'H
L$(E3\tL
L$(E3\tL$ 3
L$09A }\vH
L$09AD
L$09ADu'H
L$0@8q
L$0E3\tL$(3
L$0H9i }\nH
L$0H9q }\nH
L$0HcQ
L$0Lc
L$0Lc@\b
L$0Li
L$0t(H
L$0t\rA
L$4+L$8
L$4+L$H
L$4A;M
L$4I;E t
L$8+G$L
L$89L
L$8E+L$\bE
L$8Lc\rC
L$8t8E
L$@A9MP
L$@D9c
L$@E3ɉL$8H
L$@H9\vu
L$@H9q r
L$@HcD$4
L$@HcH
L$@I+L$8H
L$@I+L$8I
L$@uAH
L$@u\vH
L$FfA
L$H3ɉT$@A
L$HH;T$xt
L$HH;U
L$P3ɉL$H
L$PA+ΉL$H
L$PE3\v
L$PH;S
L$PLc|$@D
L$TH;U\bt
L$X2\bD$ H
L$XE3
L$XE9M
L$\bATAVH
L$\bAUAVH
L$\bAVH
L$\bSATAUAVAWH
L$\bSATAUAVH
L$\bSATAVAWH
L$\bSATH
L$\bSAUH
L$\bSAVAWH
L$\bSUATH
L$\bSUAUH
L$\bSUH
L$\bSUVATAUH
L$\bSUVH
L$\bSUVWATAUAVAWH
L$\bSUVWATAUAWH
L$\bSUVWATAVAWH
L$\bSUVWATAVH
L$\bSUVWATH
L$\bSUVWAUAVAWH
L$\bSUVWAUAVH
L$\bSUVWAVH
L$\bSUVWAWH
L$\bSUVWH
L$\bSUWAUAWH
L$\bSUWAVH
L$\bSUWH
L$\bSVATAUH
L$\bSVAUAVH
L$\bSVWATAUAVAWH
L$\bSVWATAUAWH
L$\bSVWATH
L$\bSVWAVAWH
L$\bSVWAVH
L$\bSVWH
L$\bSWAVH
L$\bSWH
L$\bUATAUAVH
L$\bUATAVAWH
L$\bUAUH
L$\bUH
L$\bUSATAUAWH
L$\bUSATAVAWH
L$\bUSH
L$\bUSVAUH
L$\bUSVWATAUAVAW
L$\bUSVWATAUAVAWH
L$\bUSVWATAUAVH
L$\bUSVWATAVAWH
L$\bUSVWATH
L$\bUSVWAUAVAWH
L$\bUSVWAUAVH
L$\bUSVWAVH
L$\bUSVWAWH
L$\bUSVWH
L$\bUSWATAUAVAWH
L$\bUSWATAUAWH
L$\bUSWATAVH
L$\bUSWAUH
L$\bUSWH
L$\bUVATAUAWH
L$\bUVAVH
L$\bUVH
L$\bUVWATAUAVAWH
L$\bUVWATAUAWH
L$\bUVWATAUH
L$\bUVWAUAWH
L$\bUVWAUH
L$\bUVWAVAWH
L$\bUVWH
L$\bUWATAVAWH
L$\bUWAVH
L$\bVATAUAVH
L$\bVAU
L$\bVAUAVH
L$\bVWATAUAVH
L$\bVWATAVAWH
L$\bVWAUAVAWH
L$\bVWAVH
L$\bWATAUAVAWH
L$\bWAUAVAWH
L$\bWAVAWH
L$`D9q
L$`D9q }\nH
L$`D9w8
L$`D;m8
L$`D;w8
L$`E3\v
L$`H9Y }\nH
L$`fD
L$`fD\v
L$h+G$3
L$hAƄ$0
L$hE3
L$hHcD$`D
L$hL9t$pu\bL
L$iE3\tD$hH
L$p3\vT$xE3
L$pAƆ8
L$pE3\tD$ 3
L$pE3\vT$x
L$x+G$3
L$x+G$L
L$xE3\v
L$xI;A
L$zE2҈D$p
L)0t\tH
L+A8I
L+D$hH
L+D$xH
L+a\bH;A
L2\bfA
L3D$ L3
L9 t$I
L9 t(I
L9%j w
L9%z\as
L93u\aH
L95ENI
L95jKI
L95mJI
L95yMI
L95|II
L98t\tH
L9;t\tH
L9=-1J
L9=1\eJ
L9=5$J
L9=J-J
L9=R J
L9=\b#J
L9=\e/J
L9=a*J
L9=h0J
L9=o*J
L9=p#J
L9=r)J
L9AXt\fL
L9G\bu[H
L9H\bt\fH
L9T$pH
L9\a}(K
L9\tu)H
L9c\bu
L9d$(H
L9d$8u
L9d$@t\vH
L9d$Ht\vH
L9d$Pt\vH
L9d$`t\vH
L9d$ht\vH
L9eGt\nH
L9e\bt\nH
L9eot\nH
L9h\bt`E
L9h\bu\bD
L9l$0u\v
L9m@t\nH
L9mPt\nH
L9mgt\nH
L9n\buYH
L9o\buYH
L9p\bu\ff
L9t$ A
L9t$Pt\vH
L9t$Pv#H
L9t$Xt\vH
L9t$`t\vH
L9t$ht
L9t$hu
L9t$hu\bM
L9t$pt\vH
L9t$xt\vH
L9ugt\nH
L9uxtJH
L9vPteL9v`t_L9vhtYH
L9v`tmH
L9x t,H
L9x(uBH
L9x(u\vI
L9|$8t\vH
L9|$HA
L9|$PA
L9|$pt\vH
L9|$xt\vH
L9}0t\nH
L9}@t\nH
L9}gt\nH
L9}ot\nH
L9}wt\nH
L9~xtZE
L:\bfA
L;)tWM
L;A\b}\rI
L;L$8v7H
L;Y s\bL
L;\ar'w2H
L;\r2.8
L;\r4+7
L;\rE+7
L;\rN+7
L;\rb#8
L;\rw"8
L;\tr"L
L;\tr&L
L;c\bt+I
L;d$psIH
L;l$Ht
L;l$Ht D
L;l$Ht!D
L;q r\tH
L;s(u?M
L;s0u$H
L;v r\a
L;|$htA
L?UUUUUUU
L?n(Zy
L@8~8u\bH
LAYOUT
LAZILY_ALLOCATED
LCIDToLocaleName
LCMapStringEx
LCMapStringW
LC_ALL
LC_COLLATE
LC_CTYPE
LC_MONETARY
LC_NUMERIC
LC_TIME
LEFT_ANGLE
LEFT_ASSIGN
LEFT_BRACE
LEFT_BRACKET
LEFT_OP
LEFT_PAREN
LEVEL
LINEAR_D24S8
LLVM/SPIR-V Translator
LOG_GENERAL
LOW_PRECISION
LZWDecode: Bogus encoding, loop in the code table; scanline %d
LZWDecode: Corrupted LZW table at scanline %d
LZWDecode: Not enough data at scanline %d (short %ld bytes
LZWDecode: Strip %d not terminated with EOI code
LZWDecode: Wrong length of decoded string: data probably corrupted at scanline %d
LZWDecodeCompat: Corrupted LZW table at scanline %d
LZWDecodeCompat: Not enough data at scanline %d (short %ld bytes
LZWDecodeCompat: Wrong length of decoded string: data probably corrupted at scanline %d
LZWPreDecode
LZWSetupDecode
LZWSetupEncode
L\rry
L\tA L
Label instructions must be in a function body
Language
LatencyControlConstraintINTEL
LatencyControlLabelINTEL
LaunchIdKHR
LaunchIdNV
LaunchSizeKHR
LaunchSizeNV
LayerPerViewNV
Layout binding qualifier must match
Layout component qualifier must match
Layout index qualifier must match
Layout location qualifier must match
Layout matrix qualifier must match
Layout offset qualifier must match
Layout packing qualifier must match
Lc'D;g
Lc+D;k
Lc/D;o
Lc6D;v
LcA<E3
LcB\fHcJ
LcC LcK\bE
LcC LcS\bE
LcD$0I
LcD$xL
LcD\b\bA
LcD\b\bH
LcIHMk
LcI\bI
LcK Lc[\bE
LcK$A
LcL$@H
LcL$PH
LcL$pH
LcL>(H
LcQ\bE
LcQ|M
LcT\b\bA
Lc\\$P3
Lc\rP\bf
Lc]wI
Lca\bD
Lcd$ Hc
Lcd$pD
Lcd$|Hk
Lcg\bD;g
Lcl$TM
Lcl$`I
Lcl$`L
Lcl$xfff
Lct$ C
Lct$<Hc
Lct$pL
LcuwE3
LcuwL
Lc{LE3
Lc{\bD
Lc|$DHc
Lc|0\fA
LeaveCriticalSection
Left@CUtlString@@QEBA?AV1@H@Z
LegacyUserSettingsPathID
Length
Length is not defined
LensInfo
LessOrGreater
Lhttp://cacerts.digicert.com/DigiCertTrustedG4RSA4096SHA256TimeStampingCA.crt0\r
LifetimeStart
LifetimeStop
Line length mismatch
LinePos
LineStream
Linear
LinearResponseLimit
LinearizationTable
Link failed; no code produced.  Log string from glslang %s\n
LinkOnceODR
Linkage
Linkage Name
LinkageAttributes
Linker Objects\n
Linking
Literal string is longer than
LiteralSampler
Lkh9Fgc^A
Load cooperative matrix KHR
Load cooperative matrix NV
LoadEXRImageFromMemory() failed! Error message: %s\n
LoadExplicitlyRequestedTextures
LoadExplicitlyRequestedTextures Clamped
LoadFromFile@KeyValues@@QEAA_NPEAVIFileSystem@@PEBD1P6A_N1PEAX@Z21@Z
LoadKV3@@YA_NPEAVKeyValues3@@PEAVCUtlString@@PEAVCUtlBuffer@@AEBUKV3ID_t@@PEBD@Z
LoadKV3FromJSON@@YA_NPEAVKeyValues3@@PEAVCUtlString@@PEBD2@Z
LoadLibraryA
LoadLibraryExW
Loaded fossilize database in %0.2f seconds total (serial: %0.2fs parallel: %0.2fs)\n
Loaded video settings config from '%s'\n
Local Variable
LocalInvocationID
LocalInvocationId
LocalInvocationIndex
LocalSize
LocalSizeHint
LocalSizeHintId
LocalSizeId
LocalSizeId mode is not allowed by the current environment
LocaleNameToLCID
Localize_001
LocalizedCameraModel
Location
Location decoration can only be applied to a variable or member of a structure type
Lock@CThreadMutex@@QEAAXPEBDH@Z
Lock@CThreadSpinMutex@@AECAXPEBDHII@Z
LockForRead@CThreadSpinRWLock@@QEAAXPEBDH@Z
LockForWrite@CThreadRWLock@@QEAAXPEBDH@Z
Log Pixels/Mb
LogL16Decode: Not enough data at row %d (short %d pixels
LogL16InitState
LogLuvDecode24: Not enough data at row %d (short %d pixels
LogLuvDecode32: Not enough data at row %d (short %d pixels
LogLuvInitState
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@AEBULeafCodeInfo_t@@PEBDZZ
LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@VColor@@PEBDZZ
LoggingSystem_RegisterLoggingChannel
Logical
Logical addressing not supported
LogicalAnd
LogicalEqual
LogicalNot
LogicalNotEqual
LogicalOr
LongCompositesINTEL
Loop Body\n
Loop Condition\n
Loop Terminal Expression\n
Loop header
Loop with condition
LoopCoalesceINTEL
LoopControlINTEL
LoopCountINTEL
LoopFuseINTEL
LoopMerge
LowLatencySleep
Luminance
LunarG
LѨ@t\aD
Lԝw}\bm
L֨@t\aD
Lި@t\aD
M'y>0y
M(A+\aL
M+L$\bH
M8+G$L
M9@ tBH
M9f\btRH
M:am:PM:pm
M;A\bt"H
M;P s(I
M;Y\b}\eL
M;\buDI
M@I+M8H
M@I+M8I
M@M;MH
MAT2X2
MAT2X3
MAT2X4
MAT3X2
MAT3X3
MAT3X4
MAT4X2
MAT4X3
MAT4X4
MATCHFRAMEWORK_001
MAX_ALLOC_CHUNK is wrong, please fix
MB(iVR
MD9HDu
MEDIUM_PRECISION
MH\vD$X
ML;\rN
MLIR SPIR-V Serializer
MM/dd/yy
MMHostInterfaceAddressWidthINTEL
MMHostInterfaceDataWidthINTEL
MMHostInterfaceLatencyINTEL
MMHostInterfaceMaxBurstINTEL
MMHostInterfaceReadWriteModeINTEL
MMHostInterfaceWaitRequestINTEL
MN_AddAsyncTextureBitsHookupJob Data
MN_AddAsyncTextureBitsHookupJob Disk
MN_CacheRequestedResources
MN_OnResourceFileLoaded
MODEL_PROCESSING_SERVICES_INTERFACE_001
MOD_ASSIGN
MP;H(s\bD
MP;H8s\bD
MQC,ARD
MS must be 0 in the OpenCL environment
MSP Shader Compiler
MULTI_INSTANCE
MUL_ASSIGN
MX9H\bu!D9h\fu\e
MXI+MPH
M\b@8q-t
M\bH;M\btOH
M\bH;M\btRL
M\f@D
M\fA2O\fA
M`D8d$|t\f
M`E3\tt$ A
M`E3\tt$(E
M`E3\t|$ 3
Macro redefined; different argument names
Macro redefined; different number of arguments
Macro redefined; different substitutions
Macro redefined; function-like versus object-like
MainCs
MainGs
MainPs
MainVs
MakeAvailable
MakeAvailableKHR
MakeAvailableKHR Memory Semantics also requires either Release or AcquireRelease Memory Semantics
MakePointerAvailable
MakePointerAvailableKHR
MakePointerAvailableKHR cannot be used with OpLoad
MakePointerVisible
MakePointerVisibleKHR
MakePointerVisibleKHR cannot be used with OpStore
MakePointerVisibleKHR is specified
MakeTexelAvailable
MakeTexelAvailableKHR
MakeTexelVisible
MakeTexelVisibleKHR
MakeVisible
MakeVisibleKHR
MakeVisibleKHR Memory Semantics also requires either Acquire or AcquireRelease Memory Semantics
MakerNoteSafety
MapListService_001
MapRefCount
Marker
Mask must be a 32-bit unsigned integer OpConstant
MaskedAreas
MaskedGatherINTEL
MaskedGatherScatterINTEL
MaskedScatterINTEL
Matched Uniform or Storage blocks must all be anonymous, or all be named
Matched shader interfaces are using different instance names
MaterialUtils_001
MathOpDSPModeINTEL
Matrix
Matrix access is out of bounds, matrix has
Matrix types can only be parameterized as having only 2, 3, or 4 columns
Matrix types can only be parameterized with floating-point types
MatrixAKHR
MatrixASignedComponentsKHR
MatrixAccumulatorKHR
MatrixBKHR
MatrixBSignedComponentsKHR
MatrixCSignedComponentsKHR
MatrixInverse
MatrixResultSignedComponentsKHR
MatrixStride
MatrixTimesMatrix
MatrixTimesScalar
MatrixTimesVector
MatrixWorldToCamera
MatrixWorldToScreen
Matteing
MaxByteOffset
MaxByteOffsetId
MaxConcurrencyINTEL
MaxDeviceID
MaxInterleavingINTEL
MaxIterations
MaxNodeRecursionAMDX
MaxNumWorkgroupsAMDX
MaxPrivateCopiesINTEL
MaxReinvocationDelayINTEL
MaxReplicatesINTEL
MaxSampleValue
MaxWorkDimINTEL
MaxWorkgroupSizeINTEL
MaximallyReconvergesKHR
Maximum Control Flow nesting depth exceeded
Maximum device access threads: %u\n
Maximum resolution for top mip level in streaming textures
Maximum supported image dimension is %u pixels
MbcntAMD
Mc,$E;l
McA McQ\bE
McH McP\bE
Mcf0E;f
Mcf`E;fp
Mcg\bMco\fI
Mc~@Ic~<M
MdD8d
MediaBlockIOINTEL
MemAlloc_AllocFunc
MemAlloc_CallocFunc
MemAlloc_FreeFunc
MemAlloc_ReallocFunc
MemAlloc_StrDupFunc
MemAlloc_StrDupWrapperFunc
Member
Member index
Member names and types must match
Member: n/a \n
MemberDecorate
MemberDecorateString
MemberDecorateStringGOOGLE
MemberName
Members cannot be assigned a location
Memory Scope QueueFamilyKHR requires capability
Memory Semantics Acquire and AcquireRelease cannot be used with
Memory Semantics MakeAvailableKHR requires capability
Memory Semantics MakeVisibleKHR requires capability
Memory Semantics OutputMemoryKHR requires capability
Memory Semantics Release and AcquireRelease cannot be used for operand Unequal
Memory Semantics UniformMemory requires capability Shader
Memory Semantics Volatile can only be used with atomic instructions
Memory Semantics Volatile requires capability VulkanMemoryModelKHR
Memory Semantics can have at most one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
Memory Semantics ids must be OpConstant when Shader capability is present
Memory Semantics must be a constant instruction when CooperativeMatrixNV capability is present
Memory accesses with PhysicalStorageBuffer must use Aligned
Memory coherent qualifier must match
Memory devicecoherent qualifier must match
Memory model must be OpenCL in the OpenCL environment
Memory nonprivate qualifier must match
Memory queuefamilycoherent qualifier must match
Memory readonly qualifier must match
Memory restrict qualifier must match
Memory shadercallcoherent qualifier must match
Memory subgroupcoherent qualifier must match
Memory volatil qualifier must match
Memory workgroupcoherent qualifier must match
Memory writeonly qualifier must match
MemoryAccessAliasingINTEL
MemoryBarrier
MemoryBarrierAtomicCounter
MemoryBarrierBuffer
MemoryBarrierImage
MemoryBarrierShared
MemoryINTEL
MemoryInfo
MemoryLayout operand <id
MemoryModel
MemoryNamedBarrier
MemoryPools
Merge Block
Merge Block and Continue Target must be different ids
Merge Block may not be the block containing the OpLoopMerge\n
MergeINTEL
Merging CCITT Fax 3 codec-specific tags failed
Merging CCITT Fax 4 codec-specific tags failed
Merging Deflate codec-specific tags failed
Merging Predictor codec-specific tags failed
Merging SGILog codec-specific tags failed
Merging common CCITT Fax codec-specific tags failed
Mesa-IR/SPIR-V Translator
MeshEXT
MeshEXT execution model entry points must specify both OutputPrimitivesEXT and OutputVertices Execution Modes
MeshEXT execution model entry points must specify exactly one of OutputPoints, OutputLinesEXT, or OutputTrianglesEXT Execution Modes
MeshNV
MeshShadingEXT
MeshShadingNV
MeshSystem001
MeshUtils001
MeshViewCountNV
MeshViewIndicesNV
MessageBoxA
MessageBoxW
Messiah Shader Compiler
Meta SparkSL
MhA+\aL
Mhttp://crl3.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0S
Mhttp://crl4.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0
MicroTriangleVertexBarycentricNV
MicroTriangleVertexPositionNV
Microsoft Visual C++ Runtime Library
Mikkosoft Productions
Mikkosoft Productions MSP Shader Compiler
MinDeviceID
MinIterations
MinLod
MinSampleValue
Miscellaneous marker 0x%02x, length %u
Mismatched Token Exception
Mismatched set
Miss Index must be a 32-bit int scalar
MissKHR
MissNV
Missing %s \n
Missing <EOF>\n
Missing Huffman code table entry
Missing NonSemantic.ClspvReflection import version
Missing OpFunctionEnd at end of module
Missing argument
Missing decoration WeightTextureQCOM/BlockMatchTextureQCOM
Missing entry point: Each stage requires one entry point
Missing function type definition
Missing module
Missing required OpMemoryModel instruction
Missing required OpSamplerImageAddressingModeNV instruction
Missing token
Missing token (%d)...\n
MissingRequired
Mixed stage shader module not supported
Ml$<E
MnZ/rs
ModelDocUtils001
ModfStruct
Module can't mix MeshEXT/TaskEXT with MeshNV/TaskNV Execution Model
Module contains unreachable blocks during merge return.  Run dead branch elimination before merge return
Module has incomplete header: only
ModuleProcessed
Monday
MoveFrom@CBufferString@@QEAAXAEAV1@@Z
MpA+\aL
MulAdd cooperative matrices KHR
MulAdd cooperative matrices NV
MultiByteToWideChar
MultiDrawIndexedInstancedIndirect failed - invalid drawarg buffer\n
MultiDrawIndexedInstancedIndirectCount failed - invalid drawarg buffer\n
MultiDrawIndexedInstancedIndirectCount failed - invalid drawcount buffer\n
MultiTexCoord0
MultiTexCoord1
MultiTexCoord2
MultiTexCoord3
MultiTexCoord4
MultiTexCoord5
MultiTexCoord6
MultiTexCoord7
MultiView
MultiViewport
Multiple case constructs have branches to the case construct that targets
Multiple function bodies in multiple compilation units for the same signature in the same stage
MultiplyH
Must be only one constituent
MxIchxM
MԋE\vT$PH
N H9T
N H9T$(r?w\aH9L$ r6M
N-A8~,t\v
N-D8n,t\v
N-E8n,t\n
N2Lɭ3
N>O=I9
N@H+N8H
N@H+N8I
N@I+N8H
N@I+N8I
N@L;NH
N@M;NH
NAN(IND
NAN(SNAN
NClamp
ND9HDu\a3
NLct$4H
NONPRIVATE
NONUNIFORM
NOPERSPECTIVE
NPI;NXI
NULL VP8Io parameter in VP8Decode
NVIDIA
NVIDIA Driver Version: %d.%d, disable r_low_latency_trigger_flash by default to workaround driver bug.\n
NVIDIA Low Latency Trigger Flash
NVIDIA Low Latency/AMD Anti-Lag 2 (0 = off, 1 = on, 2 = NV-only, on + boost
NVIDIA Reflex/Driver Delta
NVIDIA Reflex/GPU Render Delta
NVIDIA Reflex/OS Render Queue Delta
NVIDIA Reflex/Present Delta
NVIDIA Reflex/Render Delta
NVIDIA Reflex/Simulation Delta
NVIDIA Reflex/Total Game To Render Latency
NVIDIA Slang Compiler
NVIDIA_Reflex_PC_Latency_Ping
NVLL_VK_API_IN_USE
NVLL_VK_API_NOT_INITIALIZED
NVLL_VK_ERROR
NVLL_VK_INCOMPATIBLE_STRUCT_VERSION
NVLL_VK_INVALID_ARGUMENT
NVLL_VK_INVALID_HANDLE
NVLL_VK_INVALID_POINTER
NVLL_VK_LIBRARY_NOT_FOUND
NVLL_VK_NO_IMPLEMENTATION
NVLL_VK_NO_VULKAN
NVLL_VK_OK
NVLL_VK_OUT_OF_MEMORY
NV_NULL
NXH9D$8
NXI9NP
N\bD8a-t
N\bH;M\bt'H
N\bL91u
N\bN\nx\fX
N\tV_strtoi64
N_U9203
Name must be an OpString
Name must match an entry-point for Kernel
NamedBarrier
NamedBarrierCountINTEL
NamedBarrierInitialize
NavGameTest001
NavSystem001
Nazara ShaderLang Compiler
Nc\\\b\fF
NeXTDecode: Not enough data for scanline %ld
Nearest
Negate conditional
Negate value
NegativeH
Neither a front-end constant nor a spec constant
Netease Games
Netease Games Messiah Shader Compiler
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemVersion001
Next token is
NfD9d$pu
No OpEntryPoint instruction was found. This is only allowed if the Linkage capability is being used
No Vulkan heaps support system memory allocation for this resource.\n
No displayable format found for swapchain that supports the requested display mode.\n
No errors.  No code generation or linking was requested
No function definition (body) found
No loop body\n
No loop condition\n
No memory type supports the requested properties. \n
No space for "TransferFunction" tag
No space for LZW code table
No space for LZW hash table
No space for LZW state block
No space for ZIP state block
No space to write RATIONAL array
No space to write array
No space to write per-sample shorts
No space to write per-sample values
No support for converting user data format to LogL
No support for converting user data format to LogLuv
NoAlias
NoAliasINTEL
NoAliasINTELMask
NoCapture
NoContraction
NoDebugString
NoFusionINTEL
NoGlobalOffsetINTEL
NoLine
NoOpaqueKHR
NoPerspective
NoReadWrite
NoSignedWrap
NoUnsignedWrap
NoWait
NoWrite
NodeMaxPayloadsAMDX
NodeOutputPayloadAMDX
NodePayloadAMDX
NodeSharesPayloadLimitsWithAMDX
Non front-end constant expressions cannot be passed for 'spirv_literal' parameters
Non-L-value cannot be passed for 'out' or 'inout' parameters
Non-OpFunctionParameter (opcode: %d) found inside function but outside basic block
Non-constant-index-expression
Non-semantic OpExtInst must not appear before types
Non-semantic OpExtInst within function definition must appear in a block
Non-unique OpEntryPoint interface
NonCoherentColorAttachmentReadEXT
NonCoherentDepthAttachmentReadEXT
NonCoherentStencilAttachmentReadEXT
NonPrivatePointer
NonPrivatePointerKHR
NonPrivatePointerKHR must be specified if
NonPrivatePointerKHR must be specified if MakePointerAvailableKHR is specified
NonPrivatePointerKHR requires a pointer in Uniform
NonPrivateTexel
NonPrivateTexelKHR
NonReadable
NonSemantic
NonSemantic extended instruction sets cannot be declared without SPV_KHR_non_semantic_info
NonSemantic.ClspvReflection
NonSemantic.ClspvReflection import does not encode the version correctly
NonSemantic.DebugPrintf
NonSemantic.Shader.DebugInfo.100
NonUniform
NonUniformAMD(u16vec4);float addInvocationsExclusiveScanNonUniformAMD(float);vec2  addInvocationsExclusiveScanNonUniformAMD(vec2);vec3  addInvocationsExclusiveScanNonUniformAMD(vec3);vec4  addInvocationsExclusiveScanNonUniformAMD(vec4);int   addInvocationsExclusiveScanNonUniformAMD(int);ivec2 addInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsExclusiveScanNonUniformAMD(ivec4);uint  addInvocationsExclusiveScanNonUniformAMD(uint);uvec2 addInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsExclusiveScanNonUniformAMD(uvec4);double addInvocationsExclusiveScanNonUniformAMD(double);dvec2  addInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsExclusiveScanNonUniformAMD(u16vec4);float swizzleInvocationsAMD(float, uvec4);vec2  swizzleInvocationsAMD(vec2,  uvec4);vec3  swizzleInvocationsAMD(vec3,  uvec4);vec4  swizzleInvocationsAMD(vec4,  uvec4);int   swizzleInvocationsAMD(int,   uvec4);ivec2 swizzleInvocationsAMD(ivec2, uvec4);ivec3 swizzleInvocationsAMD(ivec3, uvec4);ivec4 swizzleInvocationsAMD(ivec4, uvec4);uint  swizzleInvocationsAMD(uint,  uvec4);uvec2 swizzleInvocationsAMD(uvec2, uvec4);uvec3 swizzleInvocationsAMD(uvec3, uvec4);uvec4 swizzleInvocationsAMD(uvec4, uvec4);float swizzleInvocationsMaskedAMD(float, uvec3);vec2  swizzleInvocationsMaskedAMD(vec2,  uvec3);vec3  swizzleInvocationsMaskedAMD(vec3,  uvec3);vec4  swizzleInvocationsMaskedAMD(vec4,  uvec3);int   swizzleInvocationsMaskedAMD(int,   uvec3);ivec2 swizzleInvocationsMaskedAMD(ivec2, uvec3);ivec3 swizzleInvocationsMaskedAMD(ivec3, uvec3);ivec4 swizzleInvocationsMaskedAMD(ivec4, uvec3);uint  swizzleInvocationsMaskedAMD(uint,  uvec3);uvec2 swizzleInvocationsMaskedAMD(uvec2, uvec3);uvec3 swizzleInvocationsMaskedAMD(uvec3, uvec3);uvec4 swizzleInvocationsMaskedAMD(uvec4, uvec3);float writeInvocationAMD(float, float, uint);vec2  writeInvocationAMD(vec2,  vec2,  uint);vec3  writeInvocationAMD(vec3,  vec3,  uint);vec4  writeInvocationAMD(vec4,  vec4,  uint);int   writeInvocationAMD(int,   int,   uint);ivec2 writeInvocationAMD(ivec2, ivec2, uint);ivec3 writeInvocationAMD(ivec3, ivec3, uint);ivec4 writeInvocationAMD(ivec4, ivec4, uint);uint  writeInvocationAMD(uint,  uint,  uint);uvec2 writeInvocationAMD(uvec2, uvec2, uint);uvec3 writeInvocationAMD(uvec3, uvec3, uint);uvec4 writeInvocationAMD(uvec4, uvec4, uint);uint mbcntAMD(uint64_t);\n
NonUniformEXT
NonWritable
NoneINTEL
NoneKHR
Nonstandard tile length %d, convert file
Nonstandard tile width %d, convert file
Nontemporal
Normal
Normalize
NormalizedSamplerMaskPushConstant
Not a JPEG file: starts with 0x%02x 0x%02x
Not a TIFF file, bad magic number %d (0x%x
Not a TIFF file, bad version number %d (0x%x
Not a key frame
Not all array sizes match across all geometry shaders in the program
Not enough
Not implemented yet
NotEqual
NotInf
NotNaN
November
Now at end of input.\n
NumArguments must be a 32-bit unsigned integer OpConstant
NumCols() <= V_ARRAYSIZE( s_DummyRow
NumEnqueuedSubgroups
NumSIMDWorkitemsINTEL
NumSubgroups
NumWorkGroups
NumWorkgroups
NumbanksINTEL
Number of (literal, label) pairs in OpSwitch
Number of Global Variables (Storage Class other than 'Function') exceeded the valid limit
Number of OpTypeStruct members
Number of constructor parameters does not match the number of structure fields
Number of image operand ids doesn't correspond to the bit mask
Number of local variables ('Function' Storage Class) exceeded the valid limit
NumberOfInks
NvLL_VK_DestroyLowLatencyDevice
NvLL_VK_GetLatency
NvLL_VK_InitLowLatencyDevice
NvLL_VK_InitLowLatencyDevice() return error '%s\n
NvLL_VK_SetLatencyMarker
NvLL_VK_SetLatencyMarker returned error '%s'.\n
NvLL_VK_SetLatencyMarker( PC_LATENCY_PING ) returned error '%s'.\n
NvLL_VK_SetSleepMode
NvLL_VK_SetSleepMode() return error '%s\n
NvLL_VK_Sleep
NvLL_VK_Sleep returned error '%s'.\n
NvLdV
NvLowLatencyVk.dll
O L+o(L
O-D8o,t\v
O-L9(t
O8A#ɉG0D
O@D9a u
O@H+O8H
O@H+O8I
O@I+O8H
O@L;OH
OCTAL_ESC
OHA3NH
OLcCxL
OR_ASSIGN
OUTSTANDING_HOOKUP_REQUEST
OVER_BUDGET
OXH;OXu4H
O\b+G,Hc
O\b3҉\aH
O\b8Y-t
O\bD8y-t
O\bH;M\bt'H
O\bH;O\b
O\bIc\aH
O\tD$8A
ObjectOffset must be a 32-bit unsigned integer OpConstant
ObjectRayDirectionKHR
ObjectRayDirectionNV
ObjectRayOriginKHR
ObjectRayOriginNV
ObjectRayTmaxNV
ObjectRayTminNV
ObjectToWorldKHR
ObjectToWorldNV
Obtained EMS handle %u
Obtained XMS handle %u
October
OdA;L$dA
Offset
Offset must be a 32-bit unsigned integer OpConstant
Offsets
OhA;L$hA
OlA;L$lA
Old-style JPEG
Old-style LZW codes, convert file
OldSubfileType
OnMultiGpuTransferTexture: No texture specification for destination texture, skipping transfer.\n
OnQueuePresent
OnUpdateSwappedImageLayout
One of the client procedures is NULL pointer
Only DXT1/DXT5 online texture compression supported.\n
Only l-values corresponding to shader block storage or shared variables can be used with atomic memory functions
Only one push_constant block is allowed per stage
Only one shaderRecordNV buffer block is allowed per stage
Only one taskNV interface block is allowed per shader
Only single variable of type taskPayloadSharedEXT is allowed per shader
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require Fragment execution model
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require a fragment shader interlock execution mode
OpBranch or OpBranchConditional instruction
OpBranchConditional or OpSwitch instruction
OpBranchConditional requires either 3 or 5 parameters
OpConstant with a 32- or 64-bits integer scalar type or
OpConstant, DebugGlobalVariable, or
OpConstantNull Result Type <id
OpConstantSampler Result Type <id
OpControlBarrier requires one of the following Execution Models: TessellationControl, GLCompute, Kernel, MeshNV or TaskNV
OpCopyObject cannot have void result type
OpDecorate decoration
OpDecorate, OpDecorateId, and OpGroupMemberDecorate
OpDemoteToHelperInvocationEXT requires Fragment execution model
OpEmitMeshTasksEXT requires TaskEXT execution model
OpEntryPoint Entry Point <id
OpEntryPoint interfaces must be OpVariables with Storage Class of Input(1) or Output(3). Found Storage Class
OpEntryPoint interfaces should only list global variables
OpExecuteCallableKHR requires RayGenerationKHR, ClosestHitKHR, MissKHR and CallableKHR execution models
OpExecutionMode Entry Point <id
OpExecutionMode is only valid when the Mode operand is an execution mode that takes no Extra Operands, or takes Extra Operands that are not id operands
OpExecutionModeId is only valid when the Mode operand is an execution mode that takes Extra Operands that are id operands
OpExtInst set Id
OpFunction Function Type <id
OpFunction Result Type <id
OpFunctionCall Argument <id
OpFunctionCall Function <id
OpFunctionCall Function <id>'s parameter count does not match the argument count
OpFunctionCall Result Type <id
OpFunctionEnd inside basic block
OpFunctionEnd without corresponding OpFunction
OpFunctionParameter
OpFunctionParameter Result Type <id
OpGroupDecorate Decoration group <id
OpGroupDecorate may not target OpDecorationGroup <id
OpGroupMemberDecorate Decoration group <id
OpGroupMemberDecorate Structure type <id
OpIgnoreIntersectionKHR requires AnyHitKHR execution model
OpImageFetch
OpImageQueryLevels must only consume an "Image" operand whose type has its "Sampled" operand set to 1
OpImageQueryLod requires DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
OpImageQueryLod requires Fragment or GLCompute execution model
OpImageQuerySizeLod must only consume an "Image" operand whose type has its "Sampled" operand set to 1
OpImageRead, OpImageWrite, OpImageSparseFetch and
OpImageSparseRead
OpIsHelperInvocationEXT requires Fragment execution model
OpKill requires Fragment execution model
OpLabel inside basic block
OpLabel outside function
OpLine Target <id
OpLoad Pointer <id
OpLoad Result Type <id
OpLoad type for pointer <id
OpLoopMerge must be the second-to-last instruction in
OpLoopMerge must immediately precede either an
OpMemberDecorate Structure type <id
OpMemberName Member <id
OpMemberName Type <id
OpMemoryModel should only be provided once
OpModuleProcessed
OpPhi does not have an equal number of incoming values and basic blocks
OpPhi must appear within a non-entry block before all
OpPhi must not have void result type
OpPhi references incoming basic block <id
OpPhi's incoming basic block <id
OpPhi's number of incoming blocks
OpPhi's result type <id
OpPtrAccessChain Base operand must point to Workgroup, StorageBuffer, or PhysicalStorageBuffer storage class
OpPtrAccessChain Base operand pointing to StorageBuffer storage class must use VariablePointers or VariablePointersStorageBuffer capability
OpPtrAccessChain Base operand pointing to Workgroup storage class must use VariablePointers capability
OpPtrAccessChain must have a Base whose type is decorated with ArrayStride
OpReportIntersectionKHR requires IntersectionKHR execution model
OpReturn can only be called from a function with void
OpReturnValue Value <id
OpReturnValue value's type <id
OpSamplerImageAddressingModeNV bitwidth should be 64 or 32
OpSamplerImageAddressingModeNV should only be provided once
OpSamplerImageAddressingModeNV supported only with extension SPV_NV_bindless_texture
OpSelectionMerge must be the second-to-last
OpSelectionMerge must immediately precede either an
OpSetMeshOutputsEXT requires MeshEXT execution model
OpSpecConstant opcode table out of sync
OpSpecConstantOp opcode
OpStore Object <id
OpStore Pointer <id
OpStore type for pointer <id
OpSwitch must be preceded by an OpSelectionMerge instruction
OpTerminateInvocation requires Fragment execution model
OpTerminateRayKHR requires AnyHitKHR execution model
OpTraceRayKHR requires RayGenerationKHR, ClosestHitKHR and MissKHR execution models
OpTypeArray Element Type <id
OpTypeArray Length <id
OpTypeCooperativeMatrix Cols <id
OpTypeCooperativeMatrix Component Type <id
OpTypeCooperativeMatrix Rows <id
OpTypeCooperativeMatrix Scope <id
OpTypeCooperativeMatrixKHR Use <id
OpTypeFunction Parameter Type <id
OpTypeFunction Return Type <id
OpTypeFunction may not take more than
OpTypeInt has invalid signedness
OpTypePointer Type <id
OpTypeRuntimeArray Element Type <id
OpTypeRuntimeArray must be decorated with Block if it
OpTypeRuntimeArray must be decorated with BufferBlock
OpTypeRuntimeArray must have storage class of
OpTypeRuntimeArray must only be used for the last member of an OpTypeStruct
OpTypeRuntimeArray.\nFor Vulkan OpTypeRuntimeArray can only
OpTypeSampledImage
OpTypeSampledImage, OpTypeAccelerationStructureKHR
OpTypeStruct Member Type <id
OpTypeStruct containing an OpTypeRuntimeArray
OpTypeStruct must not contain an opaque type
OpTypeVector Component Type <id
OpTypeVector. Found Op
OpTypeVoid
OpVariable
OpVariable Initializer <id
OpVariable Result Type <id
OpVariable storage class cannot be Generic
OpVariable, <id
OpVectorShuffle component literals count does not match Result Type <id
Opaque
OpaqueKHR
Opcode
OpenCL
OpenCL.DebugInfo.100
OpenCL.DebugInfo.100 debug base type encoding
OpenCL.DebugInfo.100 debug composite type
OpenCL.DebugInfo.100 debug imported entity
OpenCL.DebugInfo.100 debug info flags
OpenCL.DebugInfo.100 debug operation
OpenCL.DebugInfo.100 debug type qualifier
OpenCL.std
OpenCL_C
OpenCL_CPP
OpenGL
Opened temporary file %s
Operand
Operand type must be a pointer
Operation
OptNoneINTEL
Optional Image Operands are not allowed in the OpenCL
Options
Ordered
Ordered constructor wrapped type has no default constructor.\n\tYou must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function.\n
Ordinal must be a 32-bit unsigned integer OpConstant
Orientation
OriginLowerLeft
OriginUpperLeft
OriginalRawFileData
OriginalRawFileName
Other warnings have been suppressed.\n
Out of memory allocating %d byte temp buffer
OuterProduct
Output
Output aborted
Output file write error --- out of disk space
OutputDebugStringW
OutputLineStrip
OutputLinesEXT
OutputLinesNV
OutputMemory
OutputMemoryKHR
OutputPatch
OutputPoints
OutputPrimitivesEXT
OutputPrimitivesNV
OutputTriangleStrip
OutputTrianglesEXT
OutputTrianglesNV
OutputVertices
Overall System GPU memory use:\n
Overflow of the sheet cache texture. Releasing and starting over. This is ok in asset browser, not so ok if the game is triggering this!\n
Overflow of the sheet cache texture: Try increasing SheetCacheTextureRows in gameinfo.gi (current value %d)!\n
OverrideCoverageNV
OxH9\btJA
O͈L$QE
OӉT$L3\tD$D
OԉT$LA
P AƇ`W
P D9}P
P L9upt\nH
P(w\tH
P08@HPX`hpx
P08@HR
P0;\au/H
P0H+P(H
P2\bE
P6A?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
P6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@23@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@Z
P6APEBVConstant@analysis@opt@spvtools@@PEBVType@123@PEBV0123@1PEAVConstantManager@123@@Z
P6APEBVConstant@analysis@opt@spvtools@@PEBVType@123@PEBV0123@PEAVConstantManager@123@@Z
P6AXW4spv_message_level_t@@PEBDAEBUspv_position_t@@1@Z
P6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@12@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@Z
P89P@}M
P8G-t
P8H;P@t"D
P8H=vtex
P8H=vtext
P9L$t
P:f9W:t^L
P>q_Y
P@Hc+H
P@I+P8H
PACKED
PAYLOADEXT
PAYLOADINEXT
PAYLOADINNV
PAYLOADNV
PA^A]A
PA_A^A
PA_A^A]A
PAq=?Mp
PERCENT
PERF WARNING: Texture pool size set to more than 80%% of total GPU memory.\n
PERFORMANCE
PERPRIMITIVEEXT
PERPRIMITIVENV
PERTASKNV
PERVERTEXEXT
PERVERTEXNV
PERVIEWNV
PH#O0H
PHcB\fHi
PHcj\bL
PI+@HH
PI;@XH
PI;]X
PJ;I:qE
PLcq\bM
POSITIONL9\tu
PP3ҋH\b
PPPPPPP
PRECISE
PRECISION
PROTECTED
PXL9`p
P[ËT$ H
P\b3¨\auw3
P\b9_dH
P\bH9@ t$A
P\bf9J\bt,H
P\ffD9
P`3\bD$8H
PackBits
PackBitsDecode: Not enough data for scanline %ld
PackBitsDecode: discarding %ld bytes to avoid buffer overrun
PackDouble2x32
PackHalf2x16
PackSnorm2x16
PackSnorm4x8
PackUnorm2x16
PackUnorm4x8
PackedVectorFormat4x8Bit
PackedVectorFormat4x8BitKHR
PageName
PageNumber
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
ParallelCallQueued@CCallQueue@@QEAAXPEBDPEAVIThreadPool@@@Z
Parameter Types
Parent
ParseEXRHeaderFromMemory() failed! Error message: %s\n
PartialCount
PartialCount and DontUnroll loop controls must not both be specified
ParticleSystemMgr003
PartitionedExclusiveScanNV
PartitionedInclusiveScanNV
PartitionedReduceNV
PassthroughNV
PatchVertices
Payload OpVariable must have a storage class of TaskPayloadWorkgroupEXT
Payload must be the result of a OpVariable
Payload must have storage class RayPayloadKHR or IncomingRayPayloadKHR
PayloadNodeNameAMDX
PeekGet@CUtlBuffer@@QEAAPEBXHH@Z
PeekNamedPipe
PeelCount
PeelCount and DontUnroll loop controls must not both be specified
PerPrimitiveEXT
PerPrimitiveNV
PerTaskNV
PerVertexKHR
PerVertexKHR can only be applied to Fragment Execution Models
PerVertexKHR must be declared as arrays
PerVertexNV
PerViewAttributesNV
PerViewNV
PhE8xXt
Photometric tag is missing, assuming data is YCbCr
Photometric tag value assumed incorrect, assuming data is YCbCr instead of RGB
PhotometricInterpretation
Photoshop
Phttp://cacerts.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt0\f
Physical32
Physical64
PhysicalStorageBuffer
PhysicalStorageBuffer must not be used with OpVariable
PhysicalStorageBuffer pointer
PhysicalStorageBuffer64
PhysicalStorageBuffer64 addressing mode requires the input integer to have a 64-bit width for Vulkan environment
PhysicalStorageBuffer64 addressing mode requires the result integer type to have a 64-bit width for Vulkan environment
PhysicalStorageBuffer64EXT
PhysicalStorageBufferAddresses
PhysicalStorageBufferAddressesEXT
PhysicalStorageBufferEXT
PhysicsBuilderMgr001
PipeStorage
Pipeline cache data not found.  Deleting %s.\n
Pipeline creation time of %fms exceeded throttle limit of %fms.\n
Pipeline layout
PipelineEnableINTEL
PixarLog
PixelCenterInteger
PixelInterlockOrderedEXT
PixelInterlockUnorderedEXT
PlanarConfiguration
Planarconfig tag value assumed incorrect, assuming data is contig instead of chunky
Plat_CPUTickFrequency
Plat_DebugPrint
Plat_DestroyWindow
Plat_EventActivityIdControl
Plat_EventRegister
Plat_EventUnregister
Plat_EventWriteTransfer
Plat_ExitProcess
Plat_FatalErrorFunc
Plat_FindOrCreateWrappedPlatWindow
Plat_FloatTime
Plat_GetClockStart
Plat_GetCrtEnv
Plat_GetDesktopResolution
Plat_GetEnv
Plat_GetModuleInterfaceFactory
Plat_GetModuleProcAddress
Plat_GetMonitorBounds
Plat_GetMonitorCount
Plat_GetMonitorResolution
Plat_GetOSType
Plat_GetProcAddress
Plat_GetWindowClientSize
Plat_GetWindowClientSizeOsSpecific
Plat_GetWindowContentsScale
Plat_GetWindowMonitorIndex
Plat_GlobalMemoryStatus
PlusUconst
PointCoord
PointMode
PointSizH9\b
PointSize
PointStream
Pointer <id
Pointer can only be converted to another pointer or int scalar
Pointer can only be converted to another pointer, int scalar or 32-bit int vector
Pointer operand
Pointer storage class must be PhysicalStorageBuffer
Pointer type in OpTypeForwardPointer is not a pointer type
PointerOffset must be a 32-bit unsigned integer OpConstant
PointerSize must be a 32-bit unsigned integer OpConstant
PooledDynamicConstantBuffer
Pop@CTSListBase@@QEAAPEAUTSLNodeBase_t@@XZ
Position
PositionPerViewNV
Possible extensions include
Post-Decrement
Post-Increment
PostDepthCoverage
PostMessageW
PostProcessingSystem_001
PpH9G\bA
Pre-Decrement
Pre-Increment
Precision qualifiers must match
Predicate must be a boolean scalar
Predicate must be a boolean scalar type
Predictor
Predictor" value %d not supported
PredictorEncodeTile
PredictorSetup
Prefer shader loop unrolling
PreferredBlockSize
PrefetchINTEL
Premature EOL
Premature end of JPEG file
Premature end of input file
Premature end-of-file encountered
Premature end-of-partition0 encountered
Presence of invariant qualifier must match
Presence of precise qualifier must match
Present
PresentId
Preserve
Press Retry to debug the application - JIT must be enabled
Previous allocation with memoryRequirements.memoryTypeBits=0x%x was from heap %d (propertyFlags: 0x%x) with requested propertyFlags 0x%x, trying in heap %d (propertyFlags: 0x%x) with requested propertyFlags 0x%x.\n
PrimaryChromaticities
Primitive Count must be a 32-bit unsigned int scalar
Primitive Id must be a 32-bit int scalar
PrimitiveCountNV
PrimitiveID
PrimitiveId
PrimitiveIndicesNV
PrimitiveLineIndicesEXT
PrimitivePointIndicesEXT
PrimitiveShadingRateKHR
PrimitiveTriangleIndicesEXT
Printf@CUtlBuffer@@QEAAXPEBDZZ
PrintfBufferPointerPushConstant
PrintfBufferStorageBuffer
PrintfID must be a 32-bit unsigned integer OpConstant
PrintfInfo
Prints out detailed memory fragmentation stats for the Vulkan memory manager
Prints out stats for the Vulkan Framebuffer manager
Prints out stats for the Vulkan Pipeline manager
Prints out stats for the Vulkan memory manager
Prints out stats for the Vulkan shader table
Prior to SPIR-V 1.4, specialization constant operation UConvert requires Kernel capability or extension SPV_AMD_gpu_shader_int16
Private
Process2DQuadTessFactorsAvg
Process2DQuadTessFactorsMax
Process2DQuadTessFactorsMin
ProcessIsolineTessFactors
ProcessQuadTessFactorsAvg
ProcessQuadTessFactorsMax
ProcessQuadTessFactorsMin
ProcessTriTessFactorsAvg
ProcessTriTessFactorsMax
ProcessTriTessFactorsMin
Profile specification
Program
ProgramScopeVariablePointerPushConstant
ProgramScopeVariablePointerRelocation
ProgramScopeVariablesStorageBuffer
PropertyEditorSystem_001
PropertyRequiredWorkgroupSize
Pt\nH
PtrAccessChain
PtrCastToCrossWorkgroupINTEL
PtrCastToGeneric
PtrDiff
PtrEqual
PtrNotEqual
Purge@CBufferString@@QEAAXH@Z
Purge@CUtlMemoryBlockAllocator@@QEAAXXZ
Purge@CUtlString@@QEAAXXZ
Push constants blocks can't be an array
Push@CTSListBase@@QEAAXPEAUTSLNodeBase_t@@@Z
PushConstant
PushConstant OpVariable <id
PushConstant id
PushConstantEnqueuedLocalSize
PushConstantGlobalOffset
PushConstantGlobalSize
PushConstantNumWorkgroups
PushConstantRegionGroupOffset
PushConstantRegionOffset
Put@CUtlBuffer@@QEAAXPEBXH@Z
PutString@CUtlBuffer@@QEAAXPEBD@Z
PxHc7E3\v
Pz}b!\n
Q I;Q(t\nH
Q r\tI
Q rwI
Q r}I
Q |-I
Q0;P0rJw
Q0A;P0
Q5rHg
Q>.3Z
Q@H+Q8I
QD9Ql
QPH;QXt
QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ23333456QQQ7QQ8
QRTSVWXYZUP
QUESTION
QUEUEFAMILYCOHERENT
Q\bD;j8
Q\bI9Q\bu
Q\bfE9t
Q\bs\rH
Q\bsmH
Qh٢%v
Qkkbal
QuadControlKHR
QuadDerivativesKHR
QuadReadAcrossDiagonal
QuadReadAcrossX
QuadReadAcrossY
QuadReadLaneAt
Qualcomm
Quantization table 0x%02x was not defined
QuantizeToF16
Quantizing to %d = %d*%d*%d colors
Quantizing to %d colors
QueryPerformanceCounter
QueryPerformanceFrequency
QueueFamily
QueueFamilyKHR
QueuePresent
R0@8l$`L
R11_EAC
R11fG11fB10f
R16G16_UINT
R16Snorm
R16_UINT
R32G32_UINT
R32_SINT
R32_UINT
R8G8B8A8_ETC2_EAC
R8G8B8_ETC2
R8G8_UINT
R8Snorm
R8_UINT
RAYQUERYEXT
RDATA
READONLY
RENDERDOC_GetAPI
RENDER_BUFFER_ACCELERATION_STRUCTURE
RENDER_BUFFER_APPEND_CONSUME_BUFFER
RENDER_BUFFER_BYTEADDRESS_BUFFER
RENDER_BUFFER_PER_FRAME_WRITE_ONCE
RENDER_BUFFER_SHADER_BINDING_TABLE
RENDER_BUFFER_STRUCTURED_BUFFER
RENDER_BUFFER_UAV_COUNTER
RENDER_BUFFER_UAV_DRAW_INDIRECT_ARGS
RENDER_BUFFER_USAGE_INDEX_BUFFER
RENDER_BUFFER_USAGE_SHADER_RESOURCE
RENDER_BUFFER_USAGE_UNORDERED_ACCESS
RENDER_BUFFER_USAGE_VERTEX_BUFFER
RENDER_MULTISAMPLE_16X
RENDER_MULTISAMPLE_2X
RENDER_MULTISAMPLE_4X
RENDER_MULTISAMPLE_6X
RENDER_MULTISAMPLE_8X
RENDER_MULTISAMPLE_INVALID
RENDER_MULTISAMPLE_NONE
RENDER_MULTISAMPLE_TYPE_COUNT
RENDER_PRIM_COMPUTE_SHADER
RENDER_PRIM_HETEROGENOUS
RENDER_PRIM_INSTANCED_QUADS
RENDER_PRIM_LINES
RENDER_PRIM_LINES_WITH_ADJACENCY
RENDER_PRIM_LINE_STRIP
RENDER_PRIM_LINE_STRIP_WITH_ADJACENCY
RENDER_PRIM_POINTS
RENDER_PRIM_TRIANGLES
RENDER_PRIM_TRIANGLES_WITH_ADJACENCY
RENDER_PRIM_TRIANGLE_STRIP
RENDER_PRIM_TRIANGLE_STRIP_WITH_ADJACENCY
RENDER_PRIM_TYPE_COUNT
RENDER_SLOT_INVALID
RENDER_SLOT_PER_INSTANCE
RENDER_SLOT_PER_VERTEX
RESOURCE
RESOURCE_TYPE_TEXTURE
RESTRICT
RETURN
RG11_EAC
RG1616
RG1616F
RG3232F
RGB323232F
RGB565
RGB888
RGBA1010102
RGBA16161616
RGBA16161616F
RGBA32323232F
RGBA32323232_UINT
RGBA8888
RGBA8888_LINEAR
RGBX8888
RH@8l$`L
RIFFu
RIGHT_ANGLE
RIGHT_ASSIGN
RIGHT_BRACE
RIGHT_BRACKET
RIGHT_OP
RIGHT_PAREN
RND_CONV
RND_CONV_ODD
RND_INF
RND_MIN_INF
RND_ZERO
RPD h\r
RPV<J(L
RWBuffer
RWByteAddressBuffer
RWStructuredBuffer
RWTexture
RWTexture1D
RWTexture1DArray
RWTexture2D
RWTexture2DArray
RWTexture3D
R\bD;C\b
R\bD;D$p
R\fp\v`\nP
R\rp\f`\vP
R\vۊk
R`D;x0s
Radians
RaiseException
Ran out of occlusion query slots.\n
Rasterizer state is VK_POLYGON_MODE_LINE but VkPhysicalDeviceFeatures.fillModeNonSolid is not supported.  Forcing to VK_POLYGON_MODE_FILL.  May result in incorrect rendering.\n
RawDataUniqueID
Ray Direction must be a 32-bit float 3-component vector
Ray Flags must be a 32-bit int scalar
Ray Origin must be a 32-bit float 3-component vector
Ray Query must be a memory object declaration
Ray Query must be a pointer
Ray Query must be a pointer to OpTypeRayQueryKHR
Ray TMax must be a 32-bit float scalar
Ray TMin must be a 32-bit float scalar
RayCullMaskKHR
RayGenerationKHR
RayGenerationNV
RayGeometryIndexKHR
RayPayloadKHR
RayPayloadKHR Storage Class is limited to RayGenerationKHR, ClosestHitKHR, and MissKHR execution model
RayPayloadNV
RayQueryCandidateIntersectionAABBKHR
RayQueryCandidateIntersectionKHR
RayQueryCandidateIntersectionTriangleKHR
RayQueryCommittedIntersectionGeneratedKHR
RayQueryCommittedIntersectionKHR
RayQueryCommittedIntersectionNoneKHR
RayQueryCommittedIntersectionTriangleKHR
RayQueryConfirmIntersectionKHR
RayQueryGenerateIntersectionKHR
RayQueryGetIntersectionBarycentricsKHR
RayQueryGetIntersectionCandidateAABBOpaqueKHR
RayQueryGetIntersectionFrontFaceKHR
RayQueryGetIntersectionGeometryIndexKHR
RayQueryGetIntersectionInstanceCustomIndexKHR
RayQueryGetIntersectionInstanceIdKHR
RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR
RayQueryGetIntersectionObjectRayDirectionKHR
RayQueryGetIntersectionObjectRayOriginKHR
RayQueryGetIntersectionObjectToWorldKHR
RayQueryGetIntersectionPrimitiveIndexKHR
RayQueryGetIntersectionTKHR
RayQueryGetIntersectionTriangleVertexPositionsKHR
RayQueryGetIntersectionTypeKHR
RayQueryGetIntersectionWorldToObjectKHR
RayQueryGetRayFlagsKHR
RayQueryGetRayTMinKHR
RayQueryGetWorldRayDirectionKHR
RayQueryGetWorldRayOriginKHR
RayQueryInitializeKHR
RayQueryKHR
RayQueryPositionFetchKHR
RayQueryProceedKHR
RayQueryProvisionalKHR
RayQueryTerminateKHR
RayTmaxKHR
RayTmaxNV
RayTminKHR
RayTminNV
RayTracingDisplacementMicromapNV
RayTracingKHR
RayTracingMotionBlurNV
RayTracingNV
RayTracingOpacityMicromapEXT
RayTracingPositionFetchKHR
RayTracingProvisionalKHR
RayTraversalPrimitiveCullingKHR
Rayan Hatout
Rayan Hatout SPIRVSmith
Reached non-composite type while indexes still remain to be traversed
Read failed on temporary file
Read from EMS failed
Read from XMS failed
ReadClockKHR
ReadConsoleW
ReadFile
ReadINTEL
ReadOnly
ReadPipe
ReadPipeBlockingINTEL
ReadWrite
ReadWriteINTEL
Reading a token\n
Rebalancing command buffer pool for thread (%s). Has %d command buffers, rebalancing to size %d command buffers\n
Rebalancing command buffer pools. Largest has %d command buffers, rebalancing to size %d command buffers\n
Recognition Exception
RecurrentAddExpr
Recursion detected
RecursiveSaveToFile@KeyValues@@QEBAXAEAVCUtlBuffer@@H_N1@Z
Redeclaration: already declared as
Reduce
Reduce texture memory pool size by this many MB / s when over budget
Reduce texture memory pool size when this percentage of the budget is full
Reducing stack by rule %d (line %d):\n
ReductionMatrix1
ReductionMatrix2
ReferenceBlackWhite
Referenced %s %016llx, but it does not exist.\nThis can be expected when replaying an archive from Steam.\nIf replaying just the application cache, make sure to replay together with the common cache, as application cache can depend on common cache.\n
Referenced %s %016llx, but it is VK_NULL_HANDLE.\nThe create info was likely not supported by device.\n
ReferencedIndirectlyINTEL
Reflect
ReflexStatsEvent
ReflexStatsFlags
ReflexStatsInit
ReflexStatsInput
ReflexStatsShutdown
ReflexStatsTraceLoggingProvider
Refract
RegGetValueA
RegOpenKeyExA
Register Count
RegisterConCommand: Unknown error registering con command "%s"!\n
RegisterConVar: Unknown error registering convar "%s"!\n
RegisterINTEL
RegisterMapInterfaceINTEL
RegisterMapKernelArgumentINTEL
RegisterWindowMessageW
Registering anonymous field with tag %d (0x%x) failed
Reject swapchain blit request to swapchain that is no longer valid.\n
RelaxPrecision decoration cannot be applied to a type
Relaxed
RelaxedPrecision
Release
Release@CThreadSemaphore@@QEAA_NHPEAH@Z
ReleaseEvent
ReleaseSRWLockExclusive
RemoveAt@CBufferString@@QEAAPEBDHH@Z
RemoveWhitespace@CBufferString@@QEAAHXZ
Removing texture from pending streamable list (%s)\n
Removing texture from streamable list (%s)\n
Render Device Empty\n
Render pass
Render system:  %s (initialized by %s)\n
Render system:  %s\n
RenderBufferFlags_t
RenderDevice003
RenderDeviceMgr001
RenderDoc capture window '%s'.\n
RenderDoc is not active, did you forget to add -renderdoc to the command-line? Is RenderDoc installed?\n
RenderHardwareConfig002
RenderInputLayoutField_t
RenderMultisampleType_t
RenderPrimitiveType_t
RenderService_001
RenderSlotType_t
RenderSystem
RenderSystem/AllowPartialMipChainImmediateTexLoads
RenderSystem/AlwaysPreloadTexturesInGame
RenderSystem/GraphicsPipelineLibrary
RenderSystem/IndexBufferPoolSizeMB
RenderSystem/LowLatency
RenderSystem/MaxPreloadTextureResolution
RenderSystem/MinDXLevel
RenderSystem/MinStreamingPoolSizeMB
RenderSystem/MinStreamingPoolSizeMBTools
RenderSystem/ReserveMemoryForNonTextureUseMB
RenderSystem/SwapChainSampleableDepth
RenderSystem/Use32BitDepthBuffer
RenderSystem/Use32BitDepthBufferWithoutStencil
RenderSystem/UseHardwareGammaRamp
RenderSystem/VulkanAdditionalShaderCache
RenderSystem/VulkanLazilyAllocateRenderTargets
RenderSystem/VulkanMutableSwapchain
RenderSystem/VulkanOnly
RenderSystem/VulkanRequireDescriptorIndexing
RenderSystem/VulkanRequireSubgroupWaveOpSupport
RenderSystem/VulkanStagingPMBSizeLimitMB
RenderSystem/VulkanSteamAppShaderCache
RenderSystem/VulkanSteamDownloadedShaderCache
RenderSystem/VulkanSteamShaderCache
RenderSystem/VulkanUseExternalSubpassDependency
RenderSystem_UnableToStartGame
RenderTarget
RenderUtils_001
Rendering/Constant Buffers (MB
Rendering/Index Buffers (MB
Rendering/Texture Non-Evictable Size (MB
Rendering/Texture Pool Size (MB
Rendering/Texture Resident Size (MB
Rendering/Texture Unthrottle Streaming
Rendering/Total GPU Memory Budget (MB
Rendering/Total GPU Memory Used (MB
Rendering/Vertex Buffers (MB
Renderpass with invalid attachment reference.  Attachment #%d  Max: %d Has: %d.  Rejecting.\n
Renderpass with too many attachment.  Max: %d Has: %d.  Rejecting.\n
Rendersystem/SheetCacheTextureCols
Rendersystem/SheetCacheTextureRows
ReorderThreadNV
ReorderThreadWithHintNV
ReorderThreadWithHitObjectNV
Repeat
RepeatMirrored
Replace@CUtlString@@QEBA?AV1@PEBD0_N@Z
ReportIntersectionKHR
ReportIntersectionNV
Requested
Requested feature was omitted at compile time
Requested memory properties that are not supported for this allocation. Requested (%x).\n
RequireFullQuadsKHR
Required Vulkan extension "%s" is not supported. Please update your Vulkan driver.\n
ResType
ReserveId
ReserveReadPipePackets
ReserveWritePipePackets
Reserved word
ReservedReadPipe
ReservedWritePipe
ResetEvent
ResolutionUnit
ResolveLayout
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem013
RestartSH9\bu\e
RestartStrip
RestoreMemoryINTEL
Restrict
RestrictPointer
RestrictPointer for PhysicalStorageBuffer pointer
RestrictPointerEXT
RestrictType
Result <id
Result <id> from OpSampledImage instruction must not appear as operand for Op
Result <id> from OpSampledImage instruction must not appear as operands of Op
Result Type
Result Type <id
Result Type does not logically match the Operand type
Result Type has
Result Type must be OpTypeBool
Result Type must be an integer scalar
Result Type must be the same as the type of Value
Result Type must not equal the Operand type
Result Type struct
Result Type vector size
Result Type's second member
Result id of OpDecorationGroup can only
Result must be a 4-component unsigned integer vector
Result must be a boolean scalar
Result must be a boolean scalar or vector
Result must be a boolean scalar type
Result must be a floating-point scalar or vector
Result must be a scalar or vector of integer, floating-point, or boolean type
Result must be an integer scalar or vector
Result must be an unsigned integer scalar
Result must be an unsigned integer scalar or vector
Result of OpExpectKHR must be a scalar or vector of integer type or boolean type
Result type (Op
Result type cannot be Op
Result type component width must be 32 bits
Result type is not defined
RetainEvent
Return
Return Type
Return Type must be OpTypeVoid
ReturnValue
Rg16Snorm
Rg16ui
Rg32ui
Rg8Snorm
Rgb10A2
Rgb10a2ui
Rgba16
Rgba16Snorm
Rgba16f
Rgba16i
Rgba16ui
Rgba32f
Rgba32i
Rgba32ui
Rgba8Snorm
Rgba8i
Rgba8ui
RichTIFFIPTC
RoundEven
RoundToInfinityINTEL
RoundingModeRTE
RoundingModeRTNINTEL
RoundingModeRTPINTEL
RoundingModeRTZ
Row pixels integer overflow (rowpixels %u
RowMajor
RowMajorKHR
RowsPerStrip
RtlCaptureContext
RtlLookupFunctionEntry
RtlPcToFileHeader
RtlUnwind
RtlUnwindEx
RtlVirtualUnwind
RuntimeAlignedAttributeINTEL
RuntimeAlignedINTEL
RuntimeDescriptorArray
RuntimeDescriptorArrayEXT
Rust GPU Compiler Backend
S ;Q |5I
S M;C8u\nM;S
S$t8H
S,S,V1
S,V,S
S,V,S,V
S,V,V
S,V2,V4
S8H+S0H
S93uFH
S>$hkDh$h>[2
S@H;SHt
S@M+S8H
SAMPLE
SAMPLER
SAMPLER1D
SAMPLER1DARRAY
SAMPLER1DARRAYSHADOW
SAMPLER1DSHADOW
SAMPLER2D
SAMPLER2DARRAY
SAMPLER2DARRAYSHADOW
SAMPLER2DMS
SAMPLER2DMSARRAY
SAMPLER2DRECT
SAMPLER2DRECTSHADOW
SAMPLER2DSHADOW
SAMPLER3D
SAMPLERBUFFER
SAMPLERCUBE
SAMPLERCUBEARRAY
SAMPLERCUBEARRAYSHADOW
SAMPLERCUBESHADOW
SAMPLEREXTERNAL2DY2YEXT
SAMPLEREXTERNALOES
SAMPLERSHADOW
SATAUAVAWH
SATAUAVH
SATAUAWH
SATAUH
SATAVH
SATAWH
SAT_SYM
SAT_ZERO
SAUAWH
SAVAWH
SBT Index must be a 32-bit unsigned int scalar
SBT Offset must be a 32-bit int scalar
SBT Offset must be a 32-bit unsigned int scalar
SBT Stride must be a 32-bit int scalar
SBT Stride must be a 32-bit unsigned int scalar
SBT record offset must be a 32-bit unsigned int scalar
SBT record stride must be a 32-bit unsigned int scalar
SClamp
SConvert
SDL_Vulkan_CreateSurface failed, error: %s.\n
SDotAccSat
SDotAccSatKHR
SDotKHR
SEMICOLON
SGILog
SGILog compression cannot handle non-contiguous data
SGILog compression supported only for %s, or raw data
SGILog24
SGILogDataFmt
SGILogEncode
SGreaterThan
SGreaterThanEqual
SHADERCALLCOHERENT
SHARED
SIMTCallINTEL
SLessThan
SLessThanEqual
SM9N\b
SMCountNV
SMIDNV
SMOOTH
SMax3AMD
SMaxSampleValue
SMid3AMD
SMin3AMD
SMinSampleValue
SMulExtended
SNegate
SOFTWARE\\Classes\\RenderDoc.RDCCapture.1\\DefaultIcon
SPB8u
SPB8un
SPIR-V 1.0
SPIR-V 1.0 (under OpenCL 1.2 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 1.2 Full Profile semantics
SPIR-V 1.0 (under OpenCL 2.0 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 2.0 Full Profile semantics
SPIR-V 1.0 (under OpenCL 2.1 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 2.1 Full Profile semantics
SPIR-V 1.0 (under OpenGL 4.0 semantics
SPIR-V 1.0 (under OpenGL 4.1 semantics
SPIR-V 1.0 (under OpenGL 4.2 semantics
SPIR-V 1.0 (under OpenGL 4.3 semantics
SPIR-V 1.0 (under OpenGL 4.5 semantics
SPIR-V 1.0 (under Vulkan 1.0 semantics
SPIR-V 1.1
SPIR-V 1.2
SPIR-V 1.2 (under OpenCL 2.2 Embedded Profile semantics
SPIR-V 1.2 (under OpenCL 2.2 Full Profile semantics
SPIR-V 1.3
SPIR-V 1.3 (under Vulkan 1.1 semantics
SPIR-V 1.4
SPIR-V 1.4 (under Vulkan 1.1 semantics
SPIR-V 1.5
SPIR-V 1.5 (under Vulkan 1.2 semantics
SPIR-V 1.6
SPIR-V 1.6 (under Vulkan 1.3 semantics
SPIR-V Tools Assembler
SPIR-V Tools Linker
SPIR-V decorate qualifier
SPIR-V execution mode qualifier
SPIR-V instruction qualifier
SPIR-V requires location for user input/output
SPIR-V storage class qualifier
SPIR-V type specifier
SPIR-V\n
SPIRV-Tools Validation Errors
SPIRVSmith
SPIRV_BY_REFERENCE
SPIRV_DECORATE
SPIRV_DECORATE_ID
SPIRV_DECORATE_STRING
SPIRV_EXECUTION_MODE
SPIRV_EXECUTION_MODE_ID
SPIRV_INSTRUCTION
SPIRV_LITERAL
SPIRV_STORAGE_CLASS
SPIRV_TYPE
SPV_AMDX_shader_enqueue
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_gpu_shader_half_float_fetch
SPV_AMD_gpu_shader_int16
SPV_AMD_shader_ballot
SPV_AMD_shader_early_and_late_fragment_tests
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_AMD_shader_trinary_minmax
SPV_AMD_texture_gather_bias_lod
SPV_ARM_core_builtins
SPV_EXT_demote_to_helper_invocation
SPV_EXT_descriptor_indexing
SPV_EXT_fragment_fully_covered
SPV_EXT_fragment_invocation_density
SPV_EXT_fragment_shader_interlock
SPV_EXT_mesh_shader
SPV_EXT_opacity_micromap
SPV_EXT_physical_storage_buffer
SPV_EXT_shader_atomic_float16_add
SPV_EXT_shader_atomic_float_add
SPV_EXT_shader_atomic_float_min_max
SPV_EXT_shader_image_int64
SPV_EXT_shader_stencil_export
SPV_EXT_shader_tile_image
SPV_EXT_shader_viewport_index_layer
SPV_GOOGLE_decorate_string
SPV_GOOGLE_hlsl_functionality1
SPV_GOOGLE_user_type
SPV_INTEL_arbitrary_precision_fixed_point
SPV_INTEL_arbitrary_precision_floating_point
SPV_INTEL_arbitrary_precision_integers
SPV_INTEL_bfloat16_conversion
SPV_INTEL_blocking_pipes
SPV_INTEL_cache_controls
SPV_INTEL_debug_module
SPV_INTEL_device_side_avc_motion_estimation
SPV_INTEL_float_controls2
SPV_INTEL_fp_fast_math_mode
SPV_INTEL_fp_max_error
SPV_INTEL_fpga_argument_interfaces
SPV_INTEL_fpga_buffer_location
SPV_INTEL_fpga_cluster_attributes
SPV_INTEL_fpga_dsp_control
SPV_INTEL_fpga_invocation_pipelining_attributes
SPV_INTEL_fpga_latency_control
SPV_INTEL_fpga_loop_controls
SPV_INTEL_fpga_memory_accesses
SPV_INTEL_fpga_memory_attributes
SPV_INTEL_fpga_reg
SPV_INTEL_function_pointers
SPV_INTEL_global_variable_fpga_decorations
SPV_INTEL_global_variable_host_access
SPV_INTEL_inline_assembly
SPV_INTEL_io_pipes
SPV_INTEL_kernel_attributes
SPV_INTEL_long_composites
SPV_INTEL_loop_fuse
SPV_INTEL_masked_gather_scatter
SPV_INTEL_media_block_io
SPV_INTEL_memory_access_aliasing
SPV_INTEL_optnone
SPV_INTEL_runtime_aligned
SPV_INTEL_shader_integer_functions2
SPV_INTEL_split_barrier
SPV_INTEL_subgroups
SPV_INTEL_unstructured_loop_controls
SPV_INTEL_usm_storage_classes
SPV_INTEL_variable_length_array
SPV_INTEL_vector_compute
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_bit_instructions
SPV_KHR_cooperative_matrix
SPV_KHR_device_group
SPV_KHR_expect_assume
SPV_KHR_float_controls
SPV_KHR_float_controls2
SPV_KHR_fragment_shader_barycentric
SPV_KHR_fragment_shading_rate
SPV_KHR_integer_dot_product
SPV_KHR_linkonce_odr
SPV_KHR_maximal_reconvergence
SPV_KHR_multiview
SPV_KHR_no_integer_wrap_decoration
SPV_KHR_non_semantic_info
SPV_KHR_physical_storage_buffer
SPV_KHR_post_depth_coverage
SPV_KHR_quad_control
SPV_KHR_ray_cull_mask
SPV_KHR_ray_query
SPV_KHR_ray_tracing
SPV_KHR_ray_tracing_position_fetch
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_clock
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_rotate
SPV_KHR_subgroup_uniform_control_flow
SPV_KHR_subgroup_vote
SPV_KHR_terminate_invocation
SPV_KHR_uniform_group_instructions
SPV_KHR_variable_pointers
SPV_KHR_vulkan_memory_model
SPV_KHR_workgroup_memory_explicit_layout
SPV_NVX_multiview_per_view_attributes
SPV_NV_bindless_texture
SPV_NV_compute_shader_derivatives
SPV_NV_cooperative_matrix
SPV_NV_displacement_micromap
SPV_NV_fragment_shader_barycentric
SPV_NV_geometry_shader_passthrough
SPV_NV_mesh_shader
SPV_NV_ray_tracing
SPV_NV_ray_tracing_motion_blur
SPV_NV_sample_mask_override_coverage
SPV_NV_shader_atomic_fp16_vector
SPV_NV_shader_image_footprint
SPV_NV_shader_invocation_reorder
SPV_NV_shader_sm_builtins
SPV_NV_shader_subgroup_partitioned
SPV_NV_shading_rate
SPV_NV_stereo_view_rendering
SPV_NV_viewport_array2
SPV_QCOM_image_processing
SPV_QCOM_image_processing2
SPV_VALIDATOR_ignore_type_decl_unique
SSE and SSE2 are required
SSSSSS
STEAM_FOSSILIZE_DUMP_PATH
STEAM_FOSSILIZE_DUMP_PATH_READ_ONLY
STORAGE_BUFFER
STORAGE_IMAGE
STORAGE_TEXEL_BUFFER
STRING_LITERAL
STRUCT
STUVWXYZ[\\]^_`abcdefghijklmno
SUATAUAVH
SUATAUAWH
SUATAUH
SUATAVAWH
SUATAWH
SUATH
SUAUAVAWH
SUAVH
SUAWH
SUBGROUPCOHERENT
SUBPASSINPUT
SUBPASSINPUTMS
SUBROUTINE
SUB_ASSIGN
SUDotAccSat
SUDotAccSatKHR
SUDotKHR
SUPERP
SUVATAUAVAWH
SUVATAUH
SUVATAVAWH
SUVATH
SUVAUAWH
SUVAUH
SUVAVAWH
SUVAVH
SUVAWH
SUVWATAUAVAWH
SUVWATAUAVH
SUVWATAUAWH
SUVWATAUH
SUVWATAVAWH
SUVWATAWH
SUVWATH
SUVWAUAVAWH
SUVWAUAVH
SUVWAUAWH
SUVWAUH
SUVWAVAWH
SUVWAVH
SUVWAWH
SUVWH
SUWATAUAVAWH
SUWATAVAWH
SUWATAVH
SUWATAWH
SUWATH
SUWAUAWH
SUWAUH
SUWAVAWH
SUWAVH
SUWAW
SUWAWH
SVATAUAVAWH
SVATAUAVH
SVATAUH
SVATAVH
SVATAWH
SVATH
SVAUAVAWH
SVAUAVH
SVAUAWH
SVAUH
SVAVAWH
SVAVH
SVAWH
SVM,,S
SVM,V2
SVWATAUAVAWH
SVWATAUAVH
SVWATAUAWH
SVWATAUH
SVWATAVAWH
SVWATAVH
SVWATAWH
SVWATH
SVWAUAVAWH
SVWAUAVH
SVWAUH
SVWAVAWH
SVWAVH
SVWAWH
SV_CLIPDISTANCE
SV_COVERAGE
SV_CULLDISTANCE
SV_DEPTH
SV_DEPTHGREATEREQUAL
SV_DEPTHLESSEQUAL
SV_DISPATCHTHREADID
SV_DOMAINLOCATION
SV_GROUPID
SV_GROUPINDEX
SV_GROUPTHREADID
SV_GSINSTANCEID
SV_INSIDETESSFACTOR
SV_INSTANCEID
SV_ISFRONTFACE
SV_OUTPUTCONTROLPOINTID
SV_POSITION
SV_PRIMITIVEID
SV_RENDERTARGETARRAYINDEX
SV_SAMPLEINDEX
SV_STENCILREF
SV_TARGET
SV_TESSFACTOR
SV_VERTEXID
SV_VIEWID
SV_VIEWPORTARRAYINDEX
SWATAUAVAWH
SWATAUAVH
SWATAUAWH
SWATAVAWH
SWATAWH
SWAUAVAWH
SWAUAVH
SWAUH
SWAVH
SWAWH
SWITCH
S\b@8z$u
S\bD;j8
S\fu\r;C\bu\b
Saarland University
Saarland University Shady
Sample
SampleBiL9\tu
SampleBias
SampleCmI
SampleCmp
SampleCmpLevelZero
SampleFormat
SampleGrL9\tu
SampleGrad
SampleId
SampleInterlockOrderedEXT
SampleInterlockUnorderedEXT
SampleLeH9\bu
SampleLevel
SampleMask
SampleMaskIn
SampleMaskOverrideCoverageNV
SampleMaskPostDepthCoverage
SamplePosition
SampleRateShading
Sampled Type must be OpTypeVoid in the OpenCL environment
Sampled image type requires an image type with "Sampled" operand set to 0 or 1
Sampled must be 0 in the OpenCL environment
Sampled must be 1 or 2 in the Vulkan environment
Sampled1D
SampledBuffer
SampledCubeArray
SampledImage
SampledImageArrayDynamicIndexing
SampledImageArrayNonUniformIndexing
SampledImageArrayNonUniformIndexingEXT
SampledRect
SamplerComparisonState
SamplerImageAddressingModeNV
SamplerState
SamplesPerPixel
SamplesPerPixel tag is missing, assuming correct SamplesPerPixel value is 1
SamplesPerPixel tag is missing, assuming correct SamplesPerPixel value is 3
Sampling factors too large for interleaved scan
Sampling operation is invalid for multisample image
SatConvertSToU
SatConvertUToS
SaturatedConversion
SaturatingAccumulationKHR
Saturday
SaveKV3ToFile@@YA_NAEBUKV3ID_t@@0PEBVKeyValues3@@PEAVCUtlString@@PEBD3I@Z
SaveMemoryINTEL
Saved video settings config to '%s'\n
Scan script does not transmit all data
SceneSystem/Vulkan GPU Memory Visualizer
SceneSystem_002
SceneUtils_001
SchedulerTargetFmaxMhzINTEL
Schema
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
Scope Line
Scope ids must be OpConstant when Shader capability is
Scope ids must be constant or specialization constant when
Scope must be Subgroup or Device
Scope\n
Screen Gamma (only in fullscreen modes
SecondaryColor
SecondaryFragColorEXT
SecondaryFragDataEXT
SecondaryPositionNV
SecondaryViewportMaskNV
SecondaryViewportRelativeNV
Seek error at scanline %lu
Seek failed on temporary file
SeekGet@CUtlBuffer@@QEAAXW4SeekType_t@1@H@Z
SeekPut@CUtlBuffer@@QEAAXW4SeekType_t@1@H@Z
Select
Selected %d colors for quantization
Selection must be structured
SelectionMerge
Selector type must be OpTypeInt
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
September
Sequence of components starting with
Sequence\n
SequentiallyConsistent
SequentiallyConsistent memory semantics cannot be used with the VulkanKHR memory model
SerializedEntitiesVersion001
ServerToolsInfo_001
Set@CThreadEvent@@QEAA_NXZ
Set@CUtlString@@QEAAXPEBD@Z
SetBigEndian@CUtlBuffer@@QEAAX_N@Z
SetConsoleTextAttribute
SetDirect@CUtlString@@QEAAXPEBDH@Z
SetEndOfFile
SetEnvironmentVariableW
SetEvent
SetExtension@CBufferString@@QEAAPEBDPEBD_N@Z
SetExternalBuffer@CUtlBuffer@@QEAAXPEAXHHH@Z
SetFilePointerEx
SetFileTime
SetInt@KeyValues@@QEAAXPEBDH@Z
SetLastError
SetLength@CBufferString@@QEAAPEADH_NPEAH@Z
SetMeshOutputsEXT
SetOverflowFuncs@CUtlBuffer@@IEAAXP81@EAA_NH@Z0@Z
SetStdHandle
SetString@KeyValues@@QEAAXPEBD0@Z
SetUnhandledExceptionFilter
SetUserEventStatus
Setting max texture resolution to: %dx%d\n
Setting up field info failed
Shader
Shader '%s' has more than the maximum number of samplers per stage (has: %d MAX: %d)\n
Shader '%s' has more than the maximum number of textures per stage (has: %d MAX: %d)\n
Shader '%s' has more than the maximum number of uniform blocks per stage (has: %d MAX: %d)\n
Shader cache size %s exceeds limit %s, deleting cache to reset
Shader file version (%d), unsupported. Must be (%d) or higher
Shader module
Shader version
ShaderBindingTable
ShaderCallKHR
ShaderCallKHR Memory Scope requires a ray tracing execution model
ShaderClockKHR
ShaderEnqueueAMDX
ShaderIndexAMDX
ShaderInvocationReorderNV
ShaderLayer
ShaderNonUniform
ShaderNonUniformEXT
ShaderRecordBufferKHR
ShaderRecordBufferKHR Storage Class is limited to RayGenerationKHR, IntersectionKHR, AnyHitKHR, ClosestHitKHR, CallableKHR, and MissKHR execution model
ShaderRecordBufferKHR Storage Class variables are read only
ShaderRecordBufferNV
ShaderSMBuiltinsNV
ShaderStereoViewNV
ShaderViewportIndex
ShaderViewportIndexLayerEXT
ShaderViewportIndexLayerEXT or ShaderLayer
ShaderViewportIndexLayerEXT or ShaderViewportIndex
ShaderViewportIndexLayerNV
ShaderViewportMaskNV
ShaderWriter
Shaderc over Glslang
ShadingRateInterlockOrderedEXT
ShadingRateInterlockUnorderedEXT
ShadingRateKHR
ShadingRateNV
Shadow
ShadowScale
SharedLocalMemorySizeINTEL
ShiftLeftLogical
ShiftRightArithmetic
ShiftRightLogical
Shifting
Show Block Labels
Show Summary
ShuffleXor
SideEffectsINTEL
SignBitSet
SignExtend
Signed
SignedChar
SignedInt16
SignedInt32
SignedInt8
SignedZeroInfNanPreserve
Simple
SimpleDualPortINTEL
SingleElementVectorINTEL
SinglepumpINTEL
SirLynix
SirLynix Nazara ShaderLang Compiler
Size (in KBs) above which textures should be allocated in dedicated memory (NV-only
Size must be a 32-bit unsigned integer OpConstant
Size operand <id
SizeOf
Skia SkSL
SkipAABBsKHR
SkipClosestHitShaderKHR
SkipTrianglesKHR
Skipping pipeline layout creation, encountered null descriptor set layout.\n
Skipping texture streaming: looks like the texture was reloaded while in the streaming list (%s).\n
Skipping texture streaming: texture resource handles don't match\n
Slang Compiler
SleepConditionVariableCS
SleepConditionVariableSRW
Slice@CUtlString@@QEBA?AV1@HH@Z
SmoothStep
Smoothing not supported with nonstandard sampling ratios
Snapshot %i
SnormInt16
SnormInt8
Software
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Source
Source entry point must be "main
Source memory access must not include MakePointerAvailableKHR
Source operand <id
Source2
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2V8System001
SourceContinued
SourceExtension
SpacingEqual
SpacingFractionalEven
SpacingFractionalOdd
SparkSL
SparseResidency
SpecConstant
SpecConstantComposite
SpecConstantCompositeContinuedINTEL
SpecConstantFalse
SpecConstantGlobalOffset
SpecConstantOp
SpecConstantSubgroupMaxSize
SpecConstantTrue
SpecConstantWorkDim
SpecConstantWorkgroupSize
SpecId
SpecId must be a 32-bit unsigned integer OpConstant
Specialization constant must be an integer or floating-point number
Specialization constant operation
SpeculatedIterationsINTEL
SpinLockForWrite@CThreadSpinRWLock@@AEAAXPEBDHI@Z
SplitBarrierINTEL
SpvGenTwo SPIR-V IR Tools
SpvGenTwo community
SpvGenTwo community SpvGenTwo SPIR-V IR Tools
Ss=%d, Se=%d, Ah=%d, Al=%d
StO9>T
StableKernelArgumentINTEL
Stack now
Stack size increased to %ld\n
StackCallINTEL
StackValue
Staging
StallEnableINTEL
StallFreeINTEL
Start
Start Of Frame 0x%02x: width=%u, height=%u, components=%d
Start Of Scan: %d components
Start of Image
Starting RenderDoc capture...\n
Starting RenderDoc frame capture...\n
Starting parse\n
StartsWith@CBufferString@@QEBA_NPEBD@Z
Static Member Declaration
StaticNumWorkgroupsAMDX
StatsService_001
SteamAudio001
StencilAttachmentReadEXT
StencilExportEXT
StencilRefGreaterBackAMD
StencilRefGreaterFrontAMD
StencilRefLessBackAMD
StencilRefLessFrontAMD
StencilRefReplacingEXT
StencilRefUnchangedBackAMD
StencilRefUnchangedFrontAMD
StoNits
Storage Buffer
Storage Class
Storage buffer id
Storage class cannot be Generic in OpenCL 1.2 environment
Storage class in OpTypeForwardPointer does not match the
Storage class semantics must not be zero
Storage qualifiers must match
StorageBuffer
StorageBuffer OpVariable <id
StorageBuffer id
StorageBuffer pointer operand
StorageBuffer, PhysicalStorageBuffer, or Uniform
StorageBuffer, Uniform, or UniformConstant
StorageBuffer16BitAccess
StorageBuffer8BitAccess
StorageBufferArrayDynamicIndexing
StorageBufferArrayNonUniformIndexing
StorageBufferArrayNonUniformIndexingEXT
StorageClass
StorageImageArrayDynamicIndexing
StorageImageArrayNonUniformIndexing
StorageImageArrayNonUniformIndexingEXT
StorageImageExtendedFormats
StorageImageMultisample
StorageImageReadWithoutFormat
StorageImageWriteWithoutFormat
StorageInputOutput16
StoragePushConstant16
StoragePushConstant8
StorageTexelBufferArrayDynamicIndexing
StorageTexelBufferArrayDynamicIndexingEXT
StorageTexelBufferArrayNonUniformIndexing
StorageTexelBufferArrayNonUniformIndexingEXT
StorageUniform16
StorageUniformBufferBlock16
Store cooperative matrix KHR
Store cooperative matrix NV
Store2
Store3
Store4
Stream
Streaming Validation: %s
StreamingINTEL
StreamingInterfaceINTEL
Stride operand <id
StridesizeINTEL
String
StripByteCounts
StripFilename@CUtlString@@QEBA?AV1@XZ
StripOffsets
StripTrailingSlash@CBufferString@@QEAAPEBDXZ
Structure
Structure <id
Structure Nesting Depth may not be larger than
Structure id
Structure members may not be self references
StructuredBuffer
Structures cannot contain a void type
SubGroupEqMask
SubGroupGeMask
SubGroupGtMask
SubGroupInvocation
SubGroupLeMask
SubGroupLtMask
SubGroupSize
SubIFD
Suballocations
SubfileType
Subgroup
Subgroup wave op support required because VulkanRequireSubgroupWaveOpSupport is set in gameinfo.gi, but subgroup wave ops are not supported.  Vulkan device creation failed.\n
SubgroupAllEqualKHR
SubgroupAllKHR
SubgroupAnyKHR
SubgroupAvcBmeInitializeINTEL
SubgroupAvcFmeInitializeINTEL
SubgroupAvcImeAdjustRefOffsetINTEL
SubgroupAvcImeConvertToMcePayloadINTEL
SubgroupAvcImeConvertToMceResultINTEL
SubgroupAvcImeEvaluateWithDualReferenceINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL
SubgroupAvcImeGetBorderReachedINTEL
SubgroupAvcImeGetDualReferenceStreaminINTEL
SubgroupAvcImeGetSingleReferenceStreaminINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetTruncatedSearchIndicationINTEL
SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL
SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL
SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL
SubgroupAvcImeInitializeINTEL
SubgroupAvcImeRefWindowSizeINTEL
SubgroupAvcImeSetDualReferenceINTEL
SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL
SubgroupAvcImeSetMaxMotionVectorCountINTEL
SubgroupAvcImeSetSingleReferenceINTEL
SubgroupAvcImeSetUnidirectionalMixDisableINTEL
SubgroupAvcImeSetWeightedSadINTEL
SubgroupAvcImeStripDualReferenceStreamoutINTEL
SubgroupAvcImeStripSingleReferenceStreamoutINTEL
SubgroupAvcMceConvertToImePayloadINTEL
SubgroupAvcMceConvertToImeResultINTEL
SubgroupAvcMceConvertToRefPayloadINTEL
SubgroupAvcMceConvertToRefResultINTEL
SubgroupAvcMceConvertToSicPayloadINTEL
SubgroupAvcMceConvertToSicResultINTEL
SubgroupAvcMceGetBestInterDistortionsINTEL
SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL
SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL
SubgroupAvcMceGetDefaultInterShapePenaltyINTEL
SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL
SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL
SubgroupAvcMceGetInterDirectionsINTEL
SubgroupAvcMceGetInterDistortionsINTEL
SubgroupAvcMceGetInterMajorShapeINTEL
SubgroupAvcMceGetInterMinorShapeINTEL
SubgroupAvcMceGetInterMotionVectorCountINTEL
SubgroupAvcMceGetInterReferenceIdsINTEL
SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceGetMotionVectorsINTEL
SubgroupAvcMceSetAcOnlyHaarINTEL
SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceSetInterDirectionPenaltyINTEL
SubgroupAvcMceSetInterShapePenaltyINTEL
SubgroupAvcMceSetMotionVectorCostFunctionINTEL
SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL
SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL
SubgroupAvcMotionEstimationChromaINTEL
SubgroupAvcMotionEstimationINTEL
SubgroupAvcMotionEstimationIntraINTEL
SubgroupAvcRefConvertToMcePayloadINTEL
SubgroupAvcRefConvertToMceResultINTEL
SubgroupAvcRefEvaluateWithDualReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcRefEvaluateWithSingleReferenceINTEL
SubgroupAvcRefSetBidirectionalMixDisableINTEL
SubgroupAvcRefSetBilinearFilterEnableINTEL
SubgroupAvcSicConfigureIpeLumaChromaINTEL
SubgroupAvcSicConfigureIpeLumaINTEL
SubgroupAvcSicConfigureSkcINTEL
SubgroupAvcSicConvertToMcePayloadINTEL
SubgroupAvcSicConvertToMceResultINTEL
SubgroupAvcSicEvaluateIpeINTEL
SubgroupAvcSicEvaluateWithDualReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcSicEvaluateWithSingleReferenceINTEL
SubgroupAvcSicGetBestIpeChromaDistortionINTEL
SubgroupAvcSicGetBestIpeLumaDistortionINTEL
SubgroupAvcSicGetInterRawSadsINTEL
SubgroupAvcSicGetIpeChromaModeINTEL
SubgroupAvcSicGetIpeLumaShapeINTEL
SubgroupAvcSicGetMotionVectorMaskINTEL
SubgroupAvcSicGetPackedIpeLumaModesINTEL
SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL
SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL
SubgroupAvcSicInitializeINTEL
SubgroupAvcSicSetBilinearFilterEnableINTEL
SubgroupAvcSicSetBlockBasedRawSkipSadINTEL
SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaShapePenaltyINTEL
SubgroupAvcSicSetSkcForwardTransformEnableINTEL
SubgroupBallotKHR
SubgroupBlockReadINTEL
SubgroupBlockWriteINTEL
SubgroupBufferBlockIOINTEL
SubgroupDispatch
SubgroupEqMask
SubgroupEqMaskKHR
SubgroupFirstInvocationKHR
SubgroupGeMask
SubgroupGeMaskKHR
SubgroupGtMask
SubgroupGtMaskKHR
SubgroupID
SubgroupId
SubgroupImageBlockIOINTEL
SubgroupImageBlockReadINTEL
SubgroupImageBlockWriteINTEL
SubgroupImageMediaBlockIOINTEL
SubgroupImageMediaBlockReadINTEL
SubgroupImageMediaBlockWriteINTEL
SubgroupInvocationID
SubgroupLeMask
SubgroupLeMaskKHR
SubgroupLocalInvocationId
SubgroupLtMask
SubgroupLtMaskKHR
SubgroupMaxSize
SubgroupMemory
SubgroupReadInvocationKHR
SubgroupShuffleDownINTEL
SubgroupShuffleINTEL
SubgroupShuffleUpINTEL
SubgroupShuffleXorINTEL
SubgroupSize
SubgroupUniformControlFlowKHR
SubgroupVoteKHR
SubgroupsPerWorkgroup
SubgroupsPerWorkgroupId
SubmitThreadpoolWork
SubpassData
SubpassInput
SubpassInputMS
SubpassLoad
Success
Successfully loaded Steam Shader Pre-cache database and pre-warmed registered shaders, total time: %0.2fs (pre-warm time: %0.2fs).\n
Such variables must be identified with a Block decoration
Such variables must be identified with a Block or BufferBlock decoration
Such variables must be typed as OpTypeStruct
Sun:Sunday:Mon:Monday:Tue:Tuesday:Wed:Wednesday:Thu:Thursday:Fri:Friday:Sat:Saturday
Sunday
SupportsRayTracing
Suspension not allowed here
SwapBuffers
SwapChainColorImage%d
SwapChainDepthImage
SwapChainIntermediateColorImage
SwapChainIntermediateResolvedColorImage
SwapChainTexture.vtex
Swapchain extent(s) are 0, skipping swapchain creation\n
Switch
Switch header
SwizzleInvocationsAMD
SwizzleInvocationsMaskedAMD
SystemTimeToFileTime
SystemTimeToTzSpecificLocalTime
T"T$l&l(l*l,l.l0l2l4l6l8l:l<l>l@lBlDlFlHlJlLlNlPlRlTlVlXlZl\\l^l`lbldlflhljlllnlplrltlvlxlzl|l
T"T$l&l(l*l,l.l0l2l4l6l8l:l<l>l@lBlDlFlHlJlLlNlPlRlTlVlXlZl\\l^l`lbldlflhljlllnlplrltlvlxlzl|l~l
T$ 9r@|V
T$ A8V\b
T$ A:V\b
T$ D)s
T$ L;W
T$ fD
T$ fff
T$ Ƈ 3
T$(H;T$0t
T$(H;T$0tHA
T$(I+T$ H
T$(iU\b
T$0H;T$8t;A
T$0H;T$8tBA
T$0Mc
T$0tOA
T$4;D
T$4E3
T$83ۍk\a
T$8fff
T$@D8z
T$@H;T$Ht3A
T$BfD
T$H3\tD$ H
T$P+ʍ\fHA
T$P3\vt$XD
T$PA;vX
T$PE3\tl$PH
T$PfA
T$PfD
T$X3҉L$PH
T$\bI;T
T$\fu[H
T$`A9r\b
T$`E3\t
T$`H;T$ht
T$`fA
T$p+D$X
T$pL9I
T$xD;D$x
T1\bt>H
T?j?Y
TASKPAYLOADWORKGROUPEXT
TD u"E
TERMINATE_INVOCATION
TERMINATE_RAY
TEX read request: %d KB; %s\n
TEX: %u textures, %.2f MB\n
TEXMAN: %s LoadStreamingData (%s)\n
TEXMAN: %s MarkTextureBitsLoaded (%s)\n
TEXMAN: %s TextureBecameEvicted (%s)\n
TEXMAN: %s loaded %s %i/%i mips (%ix%i / %ix%i) of %s (%i bytes)\n
TEXMAN: Abandoning job in %s (%s)\n
TEXMAN: Abandoning streaming request early in %s\n
TEXMAN: Abandoning streaming request in %s\n
TEXMAN: Adding %llx+%p (binding=%p), %s to abandoned hookup jobs\n
TEXMAN: DeferTextureLoads %s MarkTextureBitsLoaded (%s)\n
TEXMAN: Deleting %d textures\n
TEXMAN: Outstanding stream count %d -> %d (%s)\n
TEXMAN: Oversubscription state is %s, updating additional resolution bias from %.2f -> %.2f\n
TEXTURE1D
TEXTURE1DARRAY
TEXTURE2D
TEXTURE2DARRAY
TEXTURE2DMS
TEXTURE2DMSARRAY
TEXTURE2DRECT
TEXTURE3D
TEXTUREBUFFER
TEXTURECUBE
TEXTURECUBEARRAY
TEXTURESTREAMING: Extremely low memory: Available mem: %.2f MB, Required: %.2f MB.\n
TEXTURESTREAMING: Filled %d fallback textures in %.3f ms\n
TEXTURESTREAMING: Resource view ptr or texture resources are still NULL after waiting.\n
TF<)VGy#WH
TIFFAppendToStrip
TIFFClientOpen
TIFFFetchDirectory
TIFFFieldWithTag
TIFFFillStrip
TIFFInitCCITTFax3
TIFFInitCCITTFax4
TIFFInitLZW
TIFFInitSGILog
TIFFInitZIP
TIFFLinkDirectory
TIFFMergeFieldInfo
TIFFNumberOfStrips
TIFFNumberOfTiles
TIFFPredictorInit
TIFFReadBufferSetup
TIFFReadDirectory
TIFFScanlineSize
TIFFSetField
TIFFSetupFieldInfo
TIFFTileRowSize
TIFFVGetField
TIFFVSetField
TIFFVStripSize
TIFFVTileSize
TILEIMAGEEXT
TLASInstance_t %d/%d has mask 0, which means no rays can possibly intersect it, and it should not be part of the TLAS. This has been known to stall on AMD GPUs. Must fix immediately
TLASInstances
TOTAL: %.2f MB\n
TR$T V8X>V
TR$T V8X>VE
TRN_ZERO
TY,>5
TYPE_NAME
T\bV_LZ4_decompress_safe
T\fETd
T\v!hn7
Tag %d
Tag Value
Taichi
Taichi Graphics
Taichi Graphics Taichi
Take Snapshot
Target <id
Target Label' operands for OpBranch must be the ID of an OpLabel instruction
Target Label' operands for OpSwitch must be IDs of an OpLabel instruction
Target memory access must not include MakePointerVisibleKHR
Target of Component decoration is invalid: must point to a Storage Class of Input(1) or Output(3). Found Storage Class
Target of Component decoration must be a memory object declaration (a variable or a function parameter
Target of NonWritable decoration is invalid: must point to a storage image, uniform block
Target of NonWritable decoration must be a memory object declaration (a variable or a function parameter
Target operand <id
Target version for SPIRV-Tools validator
TargetPrinter
TaskCountNV
TaskEXT
TaskEXT execution model
TaskNV
TaskPayloadWorkgroupEXT
TaskPayloadWorkgroupEXT Storage Class is limited to TaskEXT and MeshKHR execution model
Tellusim
Tellusim Clay Shader Compiler
TerminateInvocation
TerminateOnFirstHitKHR
TerminateProcess
TerminateRayKHR
TerminateRayNV
TessCoord
TessLevelInner
TessLevelOuter
Tessellation
Tessellation execution model entry points can specify at most one of SpacingEqual, SpacingFractionalOdd or SpacingFractionalEven execution modes
Tessellation execution model entry points can specify at most one of Triangles, Quads or Isolines execution modes
Tessellation execution model entry points can specify at most one of VertexOrderCw or VertexOrderCcw execution modes
TessellationControl
TessellationEvaluation
TessellationPointSize
Test condition and select
TestScriptMgr001
TexCoord
TextLayout_001
Texture
Texture Streaming:\n
Texture data resident:  %s (panorama_rt %s; panorama_tex %s)\n
Texture manager doesn't know about texture "%s" when setting "%s" - returning error texture in CTextureManagerVK::GetImageView\n
Texture manager out of space! Can't allocate new texture!\n
Texture memory: %s / %s MB; in %s textures (%s MB non-evictable)\n
Texture missing shader resource view when setting "%s" - returning error texture in CTextureManagerVK::GetImageView: "%s"\n
Texture streaming validation OK (%d texture loads in flight).\n
Texture template struct return slots exceeded
Texture template structure members must same basic type
Texture1D
Texture1DArray
Texture2D
Texture2DArray
Texture2DMS
Texture2DMSArray
Texture3D
TextureBecameEvicted - %s is null!\n
TextureBlockMatch2QCOM
TextureBlockMatchQCOM
TextureBoxFilterQCOM
TextureBuffer
TextureCube
TextureCubeArray
TextureFormat
TextureOffset does not support sampler2DArrayShadow
TextureSampleWeightedQCOM
TextureWrapModes
Textures created overall: %s; textures evicted: %s\n
The 'False Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The 'True Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The <id> passed to
The Base <id
The Component Type of Vector 1 must be the same as ResultType
The Component Type of Vector 2 must be the same as ResultType
The Fast Math Default operand is an invalid bitmask value
The Fast Math Default operand must be a non-specialization constant
The Fast Math Default operand must include AllowContract and AllowReassoc when AllowTransform is specified
The Fast Math Default operand must not include Fast
The LinkageAttributes Decoration (Linkage name
The Object type (Op
The Result Type must be the same as Composite type in Op
The Result Type of
The Result Type of OpVectorShuffle must be
The Signedness in OpTypeInt must always be 0 when Kernel capability is used
The Structure's last member in
The Structure's type in
The Target Type operand must be a floating-point scalar type
The array member in
The following extension must be enabled to use this feature
The following forward referenced IDs have not been defined:\n
The function
The high-order bits of a literal number in instruction <id
The minimum amount of GPU memory for streaming textures is set to %d MB.\n
The number of indexes in
The number of indexes in Op
The result pointer storage class and base pointer storage class in
The selected graphics queue does not support presenting a swapchain image.\n
The type in
The type of Value must match the Result type
The type of Vector 1 must be OpTypeVector
The type of Vector 2 must be OpTypeVector
The types of Operand 1 and Operand 2 must match
There must be at most one object per Storage Class that can contain a structure type containing members decorated with BuiltIn, consumed per entry-point. Entry Point id
There must be no more than one push constant block
These variables must have DescriptorSet and Binding decorations specified
This convar is being accessed prior to ConVar_Register being called
This function cannot be called on a default constructed task
This is a BigTIFF file.  This format not supported\nby this version of libtiff
This may be a bug in the validator
This shader says it isn't in the queue, but we found it there
This structure has
Thread_ExecuteCommandStreamCombined
Threshholding
ThunderDecode: %s data at scanline %ld (%lu != %lu
ThunderScan
Thursday
TileByteCounts
TileDepth
TileImageColorReadAccessEXT
TileImageDataEXT
TileImageDepthReadAccessEXT
TileImageEXT
TileImageStencilReadAccessEXT
TileLength
TileOffsets
TileWidth
Time (in seconds) between updating texture memory budget
TimeAMD
Timed out waiting for thread to exit? hung
Tint Compiler
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
ToLowerFast@CBufferString@@QEAAXH@Z
Too few args in Macro
Too many OpFunctionParameters for
Too many args in macro
Too many color components: %d, max %d
Too many components in texture template structure type
Too many threads (%d), increase m_nMaxDeviceAccessThreads (%d) in CRenderDeviceBase when a new thread is added.\n
Too much
ToolFramework2_002
ToolSceneNodeFactory_001
ToolService_001
TornadoVM
TornadoVM Beehive SPIRV Toolkit
Total Combined ( %llu MB ) \n
Total PMB ( %llu MB ) \n
Total PSOs: %d (Per-Stage Libraries: %d) This frame [Pre-Warmed: %d, Draw-Time: %d, Per-Stage: %d, Linked Libraries: %d] (Total time this frame: %0.2f ms Driver time this frame: %0.2f ms)\n
Total Shader Modules Requested: %.2fMB\n
Total Shader Modules Stored: %.2fMB\n
Total Shader Requested: %.2fMB\n
Total Shader Stored: %.2fMB\n
Total VMA ( %llu MB ) ( Free %llu MB )\n
Total size of the texture pool in MB
TotalBytes
TraceMotionNV
TraceNV
TraceRayKHR
TraceRayMotionNV
TraceRays - shader binding table does not belong to currently bound pipeline!\n
Track detailed stats for telemetry
TrackFinishWritingAMDX
TransferFunction
TransformFeedback
Transpose
TriangleStream
Triangles
Triggers a RenderDoc capture
Triggers a RenderDoc capture of a specific Window
Trim@CUtlString@@QEAAXPEBD@Z
TrueDualPortINTEL
Truncated header
TryAcquireSRWLockExclusive
Trying to create a render target with invalid image format %s\n
Trying to set dxlevel (%d) which is higher than the card can support (%d)!\n
Trying to set dxlevel (%d) which is lower than the card can support (%d)!\n
Tuesday
Type Descriptor
Type Id
Type Qualifier
Type must be OpTypeHitObjectNV
Type of ExpectedValue operand of OpExpectKHR does not match the result type
Type of Value operand of OpExpectKHR does not match the result type
Type parameters must match
TypeAccelerationStructureKHR
TypeAccelerationStructureNV
TypeArray
TypeAvcImeDualReferenceStreaminINTEL
TypeAvcImePayloadINTEL
TypeAvcImeResultDualReferenceStreamoutINTEL
TypeAvcImeResultINTEL
TypeAvcImeResultSingleReferenceStreamoutINTEL
TypeAvcImeSingleReferenceStreaminINTEL
TypeAvcMcePayloadINTEL
TypeAvcMceResultINTEL
TypeAvcRefPayloadINTEL
TypeAvcRefResultINTEL
TypeAvcSicPayloadINTEL
TypeAvcSicResultINTEL
TypeBool
TypeBufferSurfaceINTEL
TypeCooperativeMatrixKHR
TypeCooperativeMatrixNV
TypeDeviceEvent
TypeEvent
TypeFloat
TypeForwardPointer
TypeFunction
TypeHitObjectNV
TypeImage
TypeInt
TypeMatrix
TypeName must be an OpString
TypeNamedBarrier
TypeOpaque
TypePipe
TypePipeStorage
TypePointer
TypeQualifier must be a 32-bit unsigned integer OpConstant
TypeQueue
TypeRayQueryKHR
TypeReserveId
TypeRuntimeArray
TypeSampledImage
TypeSampler
TypeStruct
TypeStructContinuedINTEL
TypeVector
TypeVmeImageINTEL
TypeVoid
Types must match
Types, variables and constants
U I;U
U t\tAk
U0D8a L
U16VEC2
U16VEC3
U16VEC4
U32VEC2
U32VEC3
U32VEC4
U64IMAGE1D
U64IMAGE1DARRAY
U64IMAGE2D
U64IMAGE2DARRAY
U64IMAGE2DMS
U64IMAGE2DMSARRAY
U64IMAGE2DRECT
U64IMAGE3D
U64IMAGEBUFFER
U64IMAGECUBE
U64IMAGECUBEARRAY
U64VEC2
U64VEC3
U64VEC4
U8I+U0H
U8VEC2
U8VEC3
U8VEC4
U@I;UHt
U@I;UHt3
UA>N0Wl
UATAUAVAWH
UATAUAVAWLc9L
UATAUAVH
UATAUH
UATAVAWD
UATAVAWH
UATAVH
UATAVI
UATAW
UATAWH
UATTACHMENTEXT
UAUAVH
UAUAWH
UAVAWH
UAVBarrier - requested barrier for more mip levels than are in the texture. Requested baseLevel: %d levelCount: %d (Actual levels: %d).  Clamping to actual number of levels.\n
UAddSatINTEL
UAverageINTEL
UAverageRoundedINTEL
UCOOPMATNV
UClamp
UConvert
UCountLeadingZerosINTEL
UCountTrailingZerosINTEL
UDotAccSat
UDotAccSatKHR
UDotKHR
UGreaterThan
UGreaterThanEqual
UIMAGE1D
UIMAGE1DARRAY
UIMAGE2D
UIMAGE2DARRAY
UIMAGE2DMS
UIMAGE2DMSARRAY
UIMAGE2DRECT
UIMAGE3D
UIMAGEBUFFER
UIMAGECUBE
UIMAGECUBEARRAY
UINT16CONSTANT
UINT16_T
UINT32CONSTANT
UINT32_T
UINT64CONSTANT
UINT64_T
UINT8_T
UINTCONSTANT
UIcx`I
ULcA\bL
ULessThan
ULessThanEqual
UMax3AMD
UMid3AMD
UMin3AMD
UMul32x16INTEL
UMulExtended
UNICODE_ESC
UNIFORM
UNIFORM_TEXEL_BUFFER
UNIMPLEMENTED
UNKNOWN
UNKNOWN ERROR
UNKNOWN_DIMENSION
UNKNOWN_SAMPLER
UNKNOWN_TYPE
USAGE
USAMPLER1D
USAMPLER1DARRAY
USAMPLER2D
USAMPLER2DARRAY
USAMPLER2DMS
USAMPLER2DMSARRAY
USAMPLER2DRECT
USAMPLER3D
USAMPLERBUFFER
USAMPLERCUBE
USAMPLERCUBEARRAY
USATAUAWH
USATAUI
USATAVAWH
USATAVAWI
USAUAVH
USAUAWH
USAVAWH
USAVH
USAWH
USER32.dll
USMStorageClassesINTEL
USUBPASSINPUT
USUBPASSINPUTMS
USVATAUAVAWH
USVATAUH
USVATAUI
USVATAVAWH
USVATAVH
USVATAWH
USVAUAVAWH
USVAUAVH
USVAUH
USVAVAWH
USVAVH
USVWATAUAVAWH
USVWATAUAVH
USVWATAUAWH
USVWATAUH
USVWATAVAWH
USVWATAVH
USVWATAVI
USVWATAWH
USVWATH
USVWATI
USVWAUAVAWH
USVWAUAVH
USVWAVAWH
USVWAVH
USVWAWH
USVWH
USWATAUAVAWH
USWATAUAVH
USWATAUAWH
USWATAUH
USWATAVAWH
USWATAWH
USWATH
USWAUAVAWH
USWAUAVH
USWAUAWH
USWAUH
USWAVAWH
USWAVH
USWAWH
USubSatINTEL
UTEXTURE1D
UTEXTURE1DARRAY
UTEXTURE2D
UTEXTURE2DARRAY
UTEXTURE2DMS
UTEXTURE2DMSARRAY
UTEXTURE2DRECT
UTEXTURE3D
UTEXTUREBUFFER
UTEXTURECUBE
UTEXTURECUBEARRAY
UTF-16LEUNICODE
UUID mismatch in pipeline cache file.  Deleting %s in order to regenerate it.\n
UUUU+K
UUUUUU
UUUUUUU
UUUUUUUUH
UVATAUAVH
UVATAUAWH
UVATAUH
UVATAVAWH
UVATAVAWI
UVATAWH
UVATH
UVAUAVAWH
UVAUH
UVAVAWH
UVAVH
UVAWH
UVWATAUAVAWH
UVWATAUAVH
UVWATAUH
UVWATAVAWH
UVWATAVH
UVWATAWH
UVWATH
UVWAUAVH
UVWAUAWH
UVWAVAW
UVWAVAWH
UVWAVH
UVWAWH
UVWQ8888
UWATAUAVH
UWATAUAWH
UWATAUH
UWATAVAWH
UWATAVH
UWATH
UWAUAVAWH
UWAUAVH
UWAUAVI
UWAUAWH
UWAVAWH
UWAVH
UWAWH
U\bE3\tu\b3
U`9P\fu\nD9h
Unable find required entry points in %s\n
Unable to create VkSurfaceKHR for invalid window handle.\n
Unable to determine source language
Unable to determine texture heap size, assuming %llu MB.\n
Unable to find swapchain named %s
Unable to load %s, error %d\n
Unable to open Vulkan pipeline cache %s file - might not exist yet.\n
Unable to parse Vulkan pipeline cache %s file.  Error: %s\n
Unable to parse built-ins
Unable to parse built-ins\n%s\n
Unable to parse vma stats: %s\n
Unable to query size of supported swapchain formats.\n
Unable to query supported swapchain formats.\n
Unable to stream in resource file "%s" (Error: %s)\n
Unable to write to pipeline cache file "%s".  Error: %s
Unable to write validation shader cache %s file.\n
Unavailable
UncachedINTEL
Uncompacted: %llu buffers, %.2f MB\n
Underlying Types
Unexpected character
Unexpected marker 0x%02x
Unexpected node
Unexpected resource version '%d' for '%s'\n
Unexpected token
Unhandled VkObjectType
Unhandled VkValidationFeatureDisableEXT
Unhandled inst type (opcode: %d) found outside function definition
UnhandledExceptionFilter
Uniform
Uniform OpVariable <id
Uniform and shader storage block variables must
Uniform id
UniformAndStorageBuffer16BitAccess
UniformAndStorageBuffer8BitAccess
UniformBufferArrayDynamicIndexing
UniformBufferArrayNonUniformIndexing
UniformBufferArrayNonUniformIndexingEXT
UniformConstant
UniformConstant OpVariable <id
UniformConstant id
UniformDecoration
UniformId
UniformMemory
UniformTexelBufferArrayDynamicIndexing
UniformTexelBufferArrayDynamicIndexingEXT
UniformTexelBufferArrayNonUniformIndexing
UniformTexelBufferArrayNonUniformIndexingEXT
Unimplemented
Unimplemented: structure template type in subpass input
UniqueCameraModel
Universal
Unknown
Unknown APP0 marker (not JFIF), length %u
Unknown APP14 marker (not Adobe), length %u
Unknown Adobe color transform code %d
Unknown ExtInst
Unknown NonSemantic.ClspvReflection import version
Unknown Stage
Unknown VkResult value
Unknown compression type
Unknown constant
Unknown data format %d for LogLuv compression
Unknown encoding %d for LogLuv compression
Unknown error code
Unknown exception
Unknown glslang keyword
Unlock@CThreadMutex@@QEAAXPEBDH@Z
UnlockRead@CThreadSpinRWLock@@QEAAXPEBDH@Z
UnlockReadAccounting@CThreadRWLock_FastRead@@IEAAXPEBDHI@Z
UnlockRead_LockForWrite@CThreadRWLock@@QEAA?AW4RWLockTranstionResult_t@@PEBDH@Z
UnlockRead_LockForWrite@CThreadRWLock_FastRead@@QEAA?AW4RWLockTranstionResult_t@@PEBDHW4WriteLockTransition_t@1@@Z
UnlockWrite@CThreadRWLock@@QEAAXPEBDH@Z
UnlockWrite@CThreadRWLock_FastRead@@QEAAXPEBDH@Z
UnlockWrite@CThreadSpinRWLock@@QEAAXPEBDH@Z
UnlockWrite_LockForRead@CThreadRWLock@@QEAA?AW4RWLockTranstionResult_t@@PEBDH@Z
UnlockWrite_LockForRead@CThreadRWLock_FastRead@@QEAA?AW4RWLockTranstionResult_t@@PEBDH@Z
UnmapViewOfFile
Unordered
UnormInt101010
UnormInt101010_2
UnormInt16
UnormInt24
UnormInt8
UnormShort555
UnormShort565
UnpackDouble2x32
UnpackHalf2x16
UnpackSnorm2x16
UnpackSnorm4x8
UnpackUnorm2x16
UnpackUnorm4x8
Unreachable
Unrecognized component IDs %d %d %d, assuming YCbCr
Unroll
Unroll and DontUnroll loop controls must not both be specified
Unsatisfied dependency at present time = death
Unsigned
UnsignedChar
UnsignedInt16
UnsignedInt32
UnsignedInt8
UnsignedIntRaw10EXT
UnsignedIntRaw12EXT
Unspecified
UnstructuredLoopControlsINTEL
Unsupported ETC image format %d.\n
Unsupported JPEG data precision %d
Unsupported JPEG process: SOF type 0x%02x
Unsupported PSD color mode!\n
Unsupported color conversion request
Unsupported marker type 0x%02x
Unsupported pNext found, cannot hash
UnusedBytes
UnusedRangeCount
UnusedRangeSizeMax
UnusedRangeSizeMin
UnusedRanges
Update Period
UpdateExternalTexture called on unknown external texture '%s'\n
Upper limit on texture pool size
Usage: %s <window_name
UsageBytes
Use compute shader for mipgen
Use of device scope with VulkanKHR memory model requires the
UserSemantic
UserSettingsFileEx
UserSettingsPathID
UserTypeGOOGLE
Using '%s' for Vulkan validation reporting.\n
Using BuiltIn
Using Steam Shader Pre-Cache whitelist %s\n
Using VK_EXT_memory_budget set texture memory budget to %llu MB.\n
Using VK_GOOGLE_display_timing for frame pacing.\n
Using a 16-bit floating point
Using a 16-bit integer type requires the Int16 capability, or an extension that explicitly enables 16-bit integers
Using a 64-bit floating point
Using a 64-bit integer type requires the Int64 capability
Using an 8-bit integer type requires the Int8 capability, or an extension that explicitly enables 8-bit integers
Using image/sampler with OpSelect requires capability
Using pointers with OpPhi requires capability
Using pointers with OpSelect requires capability
Using the field of a named struct as an interpolant argument is not allowed (ES-only
UωEwH;U
UԉUĉU܉U
V fB9l
V,S,V
V4,S,>V4,>V2
V4,V2,>V4,>V2
V4,V3
V@I;VHt4A
VALIDATION
VARYING
VATAUAVAWH
VATAUH
VATAVAWH
VATAWH
VAUAVAWH
VAUAVH
VAVAWH
VApplication001
VAsyncFileSystem2_001
VAvi001
VB "%s": Failed to allocate %d bytes!\n
VB "%s": Failed to lock!\n
VB "%s": Tried to lock a GPU-only buffer!\n
VB "%s": Tried to lock a static buffer twice!\n
VB "%s": Tried to lock too much memory (%d>%d)!\n
VB "%s": Tried to lock too much memory for subregion (%d>%d)!\n
VB "%s": Tried to lock twice without an unlock!\n
VB-BLAS: %llu buffers, %.2f MB\n
VB: %d buffers, %.2f MB\n
VBik001
VConComm001
VERBOSE
VERSION
VERTICAL_BAR
VEngineCvar007
VFileSystem017
VK %s - Message Id Number: %d | Message Id Name: %s\n\t%s
VK %s - Message Id Number: %d | Message Id Name: %s\n\t%s\n
VK DEBUG %s %llu:%d: %s\n
VK ERROR %s %llu:%d: %s\n
VK INFO %s %llu:%d: %s\n
VK PERF %s %llu:%d: %s\n
VK WARNING %s %llu:%d: %s\n
VKD3D Shader Compiler
VKRenderThread
VKRenderThread Worker
VK_AMD_memory_overallocation_behavior
VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR
VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR
VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT
VK_BUFFER_USAGE_INDEX_BUFFER_BIT
VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT
VK_BUFFER_USAGE_PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT
VK_BUFFER_USAGE_RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT
VK_BUFFER_USAGE_SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT
VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR
VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT
VK_BUFFER_USAGE_STORAGE_BUFFER_BIT
VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT
VK_BUFFER_USAGE_TRANSFER_DST_BIT
VK_BUFFER_USAGE_TRANSFER_SRC_BIT
VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT
VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT
VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT
VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT
VK_BUFFER_USAGE_VERTEX_BUFFER_BIT
VK_ERROR_DEVICE_LOST
VK_ERROR_EXTENSION_NOT_PRESENT
VK_ERROR_FORMAT_NOT_SUPPORTED
VK_ERROR_FRAGMENTED_POOL
VK_ERROR_INCOMPATIBLE_DISPLAY_KHR
VK_ERROR_INCOMPATIBLE_DRIVER
VK_ERROR_INITIALIZATION_FAILED
VK_ERROR_INVALID_EXTERNAL_HANDLE
VK_ERROR_INVALID_SHADER_NV
VK_ERROR_LAYER_NOT_PRESENT
VK_ERROR_MEMORY_MAP_FAILED
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
VK_ERROR_NOT_PERMITTED_EXT
VK_ERROR_OUT_OF_DATE_KHR
VK_ERROR_OUT_OF_DEVICE_MEMORY
VK_ERROR_OUT_OF_HOST_MEMORY
VK_ERROR_OUT_OF_POOL_MEMORY
VK_ERROR_SURFACE_LOST_KHR
VK_ERROR_TOO_MANY_OBJECTS
VK_ERROR_UNKNOWN
VK_ERROR_VALIDATION_FAILED_EXT
VK_EVENT_RESET
VK_EVENT_SET
VK_EXT_debug_marker
VK_EXT_debug_report
VK_EXT_debug_utils
VK_EXT_depth_bias_control
VK_EXT_depth_bias_control does not support all required features, disabling.\n
VK_EXT_descriptor_indexing
VK_EXT_descriptor_indexing does not support required features, disabling.\n
VK_EXT_descriptor_indexing support required because VulkanRequireDescriptorIndxing is set in gameinfo.gi, but are not supported.  Vulkan device creation failed.\n
VK_EXT_extended_dynamic_state
VK_EXT_extended_dynamic_state2
VK_EXT_extended_dynamic_state3
VK_EXT_extended_dynamic_state_2 does not support extendedDynamicState2PatchControlPoints, disabling.\n
VK_EXT_extended_dynamic_state_2 does not support extendedDynamicState3DepthClampEnable or extendedDynamicState3PolygonMode, disabling.\n
VK_EXT_graphics_pipeline_library
VK_EXT_graphics_pipeline_library and dependent extensions enabled.\n
VK_EXT_load_store_op_none
VK_EXT_memory_budget
VK_EXT_memory_priority
VK_EXT_multi_draw
VK_EXT_pageable_device_local_memory
VK_EXT_pipeline_creation_cache_control
VK_EXT_scalar_block_layout
VK_EXT_separate_stencil_usage
VK_EXT_subgroup_size_control
VK_EXT_subgroup_size_control does not support required features, disabling.\n
VK_EXT_validation_cache
VK_GOOGLE_display_timing
VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT
VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT
VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT
VK_IMAGE_USAGE_SAMPLED_BIT
VK_IMAGE_USAGE_STORAGE_BIT
VK_IMAGE_USAGE_TRANSFER_DST_BIT
VK_IMAGE_USAGE_TRANSFER_SRC_BIT
VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT
VK_INCOMPLETE
VK_KHR_acceleration_structure
VK_KHR_bind_memory2
VK_KHR_buffer_device_address
VK_KHR_create_renderpass2
VK_KHR_dedicated_allocation
VK_KHR_deferred_host_operations
VK_KHR_depth_stencil_resolve
VK_KHR_descriptor_update_template
VK_KHR_device_group
VK_KHR_device_group_creation
VK_KHR_draw_indirect_count
VK_KHR_dynamic_rendering
VK_KHR_get_memory_requirements2
VK_KHR_get_physical_device_properties2
VK_KHR_image_format_list
VK_KHR_maintenance1
VK_KHR_maintenance2
VK_KHR_maintenance3
VK_KHR_pipeline_executable_properties
VK_KHR_pipeline_library
VK_KHR_ray_query
VK_KHR_ray_tracing_pipeline
VK_KHR_separate_depth_stencil_layouts
VK_KHR_separate_depth_stencil_layouts does not support separateDepthStencilLayouts, disabling.\n
VK_KHR_shader_clock
VK_KHR_shader_clock does not support shaderDeviceClock, disabling.\n
VK_KHR_shader_float16_int8
VK_KHR_shader_float16_int8 does not support shaderFloat16, disabling.\n
VK_KHR_shader_non_semantic_info
VK_KHR_swapchain
VK_KHR_swapchain_mutable_format
VK_KHR_variable_pointers
VK_LAYER_GOOGLE_threading
VK_LAYER_KHRONOS_validation
VK_LAYER_LUNARG_core_validation
VK_LAYER_LUNARG_image
VK_LAYER_LUNARG_parameter_validation
VK_LAYER_LUNARG_standard_validation
VK_LAYER_LUNARG_swapchain
VK_NOT_READY
VK_NV_device_diagnostic_checkpoints
VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR
VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV
VK_OBJECT_TYPE_BUFFER
VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA
VK_OBJECT_TYPE_BUFFER_VIEW
VK_OBJECT_TYPE_COMMAND_BUFFER
VK_OBJECT_TYPE_COMMAND_POOL
VK_OBJECT_TYPE_CU_FUNCTION_NVX
VK_OBJECT_TYPE_CU_MODULE_NVX
VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT
VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT
VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR
VK_OBJECT_TYPE_DESCRIPTOR_POOL
VK_OBJECT_TYPE_DESCRIPTOR_SET
VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT
VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE
VK_OBJECT_TYPE_DEVICE
VK_OBJECT_TYPE_DEVICE_MEMORY
VK_OBJECT_TYPE_DISPLAY_KHR
VK_OBJECT_TYPE_DISPLAY_MODE_KHR
VK_OBJECT_TYPE_EVENT
VK_OBJECT_TYPE_FENCE
VK_OBJECT_TYPE_FRAMEBUFFER
VK_OBJECT_TYPE_IMAGE
VK_OBJECT_TYPE_IMAGE_VIEW
VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV
VK_OBJECT_TYPE_INSTANCE
VK_OBJECT_TYPE_MICROMAP_EXT
VK_OBJECT_TYPE_OPTICAL_FLOW_SESSION_NV
VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL
VK_OBJECT_TYPE_PHYSICAL_DEVICE
VK_OBJECT_TYPE_PIPELINE
VK_OBJECT_TYPE_PIPELINE_CACHE
VK_OBJECT_TYPE_PIPELINE_LAYOUT
VK_OBJECT_TYPE_PRIVATE_DATA_SLOT
VK_OBJECT_TYPE_QUERY_POOL
VK_OBJECT_TYPE_QUEUE
VK_OBJECT_TYPE_RENDER_PASS
VK_OBJECT_TYPE_SAMPLER
VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION
VK_OBJECT_TYPE_SEMAPHORE
VK_OBJECT_TYPE_SHADER_EXT
VK_OBJECT_TYPE_SHADER_MODULE
VK_OBJECT_TYPE_SURFACE_KHR
VK_OBJECT_TYPE_SWAPCHAIN_KHR
VK_OBJECT_TYPE_UNKNOWN
VK_OBJECT_TYPE_VALIDATION_CACHE_EXT
VK_OBJECT_TYPE_VIDEO_SESSION_KHR
VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR
VK_PIPELINE_COMPILE_REQUIRED_EXT
VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT
VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT
VK_SUBOPTIMAL_KHR
VK_SUCCESS
VK_TIMEOUT
VK_VALIDATION_FEATURE_DISABLE_ALL_EXT
VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT
VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT
VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT
VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT
VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT
VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT
VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT
VMA breaking defragmentation pass due to allocation
VMA defrag completed after %d passes.\n
VMA defrag pass %d\n
VMA defragmentation completed. AFTER
VMA starting defragmentation. BEFORE
VMA: Allocated %llu MB (Free: %llu MB) \n
VMaterialSystem2_001
VMediaFoundation001
VOLATILE
VP4003
VP8 t
VP8 tP
VP8LtHD
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VRenderDeviceMgrBackdoor001
VRenderDeviceSetupV001
VS_INPUTH9\bt!H
VScript
VScriptDbg
VScriptManager010
VStringTokenSystem001
VUID-BaryCoordKHR-BaryCoordKHR-04154
VUID-BaryCoordKHR-BaryCoordKHR-04155
VUID-BaryCoordKHR-BaryCoordKHR-04156
VUID-BaryCoordNoPerspKHR-BaryCoordNoPerspKHR-04160
VUID-BaryCoordNoPerspKHR-BaryCoordNoPerspKHR-04161
VUID-BaryCoordNoPerspKHR-BaryCoordNoPerspKHR-04162
VUID-BaseInstance-BaseInstance-04181
VUID-BaseInstance-BaseInstance-04182
VUID-BaseInstance-BaseInstance-04183
VUID-BaseVertex-BaseVertex-04184
VUID-BaseVertex-BaseVertex-04185
VUID-BaseVertex-BaseVertex-04186
VUID-ClipDistance-ClipDistance-04187
VUID-ClipDistance-ClipDistance-04188
VUID-ClipDistance-ClipDistance-04189
VUID-ClipDistance-ClipDistance-04190
VUID-ClipDistance-ClipDistance-04191
VUID-CullDistance-CullDistance-04196
VUID-CullDistance-CullDistance-04197
VUID-CullDistance-CullDistance-04198
VUID-CullDistance-CullDistance-04199
VUID-CullDistance-CullDistance-04200
VUID-CullMaskKHR-CullMaskKHR-06735
VUID-CullMaskKHR-CullMaskKHR-06736
VUID-CullMaskKHR-CullMaskKHR-06737
VUID-DeviceIndex-DeviceIndex-04205
VUID-DeviceIndex-DeviceIndex-04206
VUID-DrawIndex-DrawIndex-04207
VUID-DrawIndex-DrawIndex-04208
VUID-DrawIndex-DrawIndex-04209
VUID-FragCoord-FragCoord-04210
VUID-FragCoord-FragCoord-04211
VUID-FragCoord-FragCoord-04212
VUID-FragDepth-FragDepth-04213
VUID-FragDepth-FragDepth-04214
VUID-FragDepth-FragDepth-04215
VUID-FragDepth-FragDepth-04216
VUID-FragInvocationCountEXT-FragInvocationCountEXT-04217
VUID-FragInvocationCountEXT-FragInvocationCountEXT-04218
VUID-FragInvocationCountEXT-FragInvocationCountEXT-04219
VUID-FragSizeEXT-FragSizeEXT-04220
VUID-FragSizeEXT-FragSizeEXT-04221
VUID-FragSizeEXT-FragSizeEXT-04222
VUID-FragStencilRefEXT-FragStencilRefEXT-04223
VUID-FragStencilRefEXT-FragStencilRefEXT-04224
VUID-FragStencilRefEXT-FragStencilRefEXT-04225
VUID-FrontFacing-FrontFacing-04229
VUID-FrontFacing-FrontFacing-04230
VUID-FrontFacing-FrontFacing-04231
VUID-FullyCoveredEXT-FullyCoveredEXT-04232
VUID-FullyCoveredEXT-FullyCoveredEXT-04233
VUID-FullyCoveredEXT-FullyCoveredEXT-04234
VUID-GlobalInvocationId-GlobalInvocationId-04236
VUID-GlobalInvocationId-GlobalInvocationId-04237
VUID-GlobalInvocationId-GlobalInvocationId-04238
VUID-HelperInvocation-HelperInvocation-04239
VUID-HelperInvocation-HelperInvocation-04240
VUID-HelperInvocation-HelperInvocation-04241
VUID-HitKindKHR-HitKindKHR-04242
VUID-HitKindKHR-HitKindKHR-04243
VUID-HitKindKHR-HitKindKHR-04244
VUID-HitTNV-HitTNV-04245
VUID-HitTNV-HitTNV-04246
VUID-HitTNV-HitTNV-04247
VUID-IncomingRayFlagsKHR-IncomingRayFlagsKHR-04248
VUID-IncomingRayFlagsKHR-IncomingRayFlagsKHR-04249
VUID-IncomingRayFlagsKHR-IncomingRayFlagsKHR-04250
VUID-InstanceCustomIndexKHR-InstanceCustomIndexKHR-04251
VUID-InstanceCustomIndexKHR-InstanceCustomIndexKHR-04252
VUID-InstanceCustomIndexKHR-InstanceCustomIndexKHR-04253
VUID-InstanceId-InstanceId-04254
VUID-InstanceId-InstanceId-04255
VUID-InstanceId-InstanceId-04256
VUID-InstanceIndex-InstanceIndex-04263
VUID-InstanceIndex-InstanceIndex-04264
VUID-InstanceIndex-InstanceIndex-04265
VUID-InvocationId-InvocationId-04257
VUID-InvocationId-InvocationId-04258
VUID-InvocationId-InvocationId-04259
VUID-LaunchIdKHR-LaunchIdKHR-04266
VUID-LaunchIdKHR-LaunchIdKHR-04267
VUID-LaunchIdKHR-LaunchIdKHR-04268
VUID-LaunchSizeKHR-LaunchSizeKHR-04269
VUID-LaunchSizeKHR-LaunchSizeKHR-04270
VUID-LaunchSizeKHR-LaunchSizeKHR-04271
VUID-Layer-Layer-04272
VUID-Layer-Layer-04273
VUID-Layer-Layer-04274
VUID-Layer-Layer-04275
VUID-Layer-Layer-04276
VUID-LocalInvocationId-LocalInvocationId-04281
VUID-LocalInvocationId-LocalInvocationId-04282
VUID-LocalInvocationId-LocalInvocationId-04283
VUID-NumSubgroups-NumSubgroups-04293
VUID-NumSubgroups-NumSubgroups-04294
VUID-NumSubgroups-NumSubgroups-04295
VUID-NumWorkgroups-NumWorkgroups-04296
VUID-NumWorkgroups-NumWorkgroups-04297
VUID-NumWorkgroups-NumWorkgroups-04298
VUID-ObjectRayDirectionKHR-ObjectRayDirectionKHR-04299
VUID-ObjectRayDirectionKHR-ObjectRayDirectionKHR-04300
VUID-ObjectRayDirectionKHR-ObjectRayDirectionKHR-04301
VUID-ObjectRayOriginKHR-ObjectRayOriginKHR-04302
VUID-ObjectRayOriginKHR-ObjectRayOriginKHR-04303
VUID-ObjectRayOriginKHR-ObjectRayOriginKHR-04304
VUID-ObjectToWorldKHR-ObjectToWorldKHR-04305
VUID-ObjectToWorldKHR-ObjectToWorldKHR-04306
VUID-ObjectToWorldKHR-ObjectToWorldKHR-04307
VUID-PatchVertices-PatchVertices-04308
VUID-PatchVertices-PatchVertices-04309
VUID-PatchVertices-PatchVertices-04310
VUID-PointCoord-PointCoord-04311
VUID-PointCoord-PointCoord-04312
VUID-PointCoord-PointCoord-04313
VUID-PointSize-PointSize-04314
VUID-PointSize-PointSize-04315
VUID-PointSize-PointSize-04316
VUID-PointSize-PointSize-04317
VUID-Position-Position-04318
VUID-Position-Position-04319
VUID-Position-Position-04320
VUID-Position-Position-04321
VUID-PrimitiveId-PrimitiveId-04330
VUID-PrimitiveId-PrimitiveId-04334
VUID-PrimitiveId-PrimitiveId-04337
VUID-PrimitiveLineIndicesEXT-PrimitiveLineIndicesEXT-07047
VUID-PrimitiveLineIndicesEXT-PrimitiveLineIndicesEXT-07049
VUID-PrimitiveLineIndicesEXT-PrimitiveLineIndicesEXT-07050
VUID-PrimitivePointIndicesEXT-PrimitivePointIndicesEXT-07041
VUID-PrimitivePointIndicesEXT-PrimitivePointIndicesEXT-07043
VUID-PrimitivePointIndicesEXT-PrimitivePointIndicesEXT-07044
VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04484
VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04485
VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04486
VUID-PrimitiveTriangleIndicesEXT-PrimitiveTriangleIndicesEXT-07053
VUID-PrimitiveTriangleIndicesEXT-PrimitiveTriangleIndicesEXT-07055
VUID-PrimitiveTriangleIndicesEXT-PrimitiveTriangleIndicesEXT-07056
VUID-RayGeometryIndexKHR-RayGeometryIndexKHR-04345
VUID-RayGeometryIndexKHR-RayGeometryIndexKHR-04346
VUID-RayGeometryIndexKHR-RayGeometryIndexKHR-04347
VUID-RayTmaxKHR-RayTmaxKHR-04348
VUID-RayTmaxKHR-RayTmaxKHR-04349
VUID-RayTmaxKHR-RayTmaxKHR-04350
VUID-RayTminKHR-RayTminKHR-04351
VUID-RayTminKHR-RayTminKHR-04352
VUID-RayTminKHR-RayTminKHR-04353
VUID-SampleId-SampleId-04354
VUID-SampleId-SampleId-04355
VUID-SampleId-SampleId-04356
VUID-SampleMask-SampleMask-04357
VUID-SampleMask-SampleMask-04358
VUID-SampleMask-SampleMask-04359
VUID-SamplePosition-SamplePosition-04360
VUID-SamplePosition-SamplePosition-04361
VUID-SamplePosition-SamplePosition-04362
VUID-ShadingRateKHR-ShadingRateKHR-04490
VUID-ShadingRateKHR-ShadingRateKHR-04491
VUID-ShadingRateKHR-ShadingRateKHR-04492
VUID-StandaloneSpirv-Base-04781
VUID-StandaloneSpirv-Base-07650
VUID-StandaloneSpirv-Base-07651
VUID-StandaloneSpirv-Base-07652
VUID-StandaloneSpirv-CallableDataKHR-04704
VUID-StandaloneSpirv-Component-04920
VUID-StandaloneSpirv-Component-04921
VUID-StandaloneSpirv-Component-04922
VUID-StandaloneSpirv-Component-04923
VUID-StandaloneSpirv-Component-04924
VUID-StandaloneSpirv-Component-07703
VUID-StandaloneSpirv-DescriptorSet-06491
VUID-StandaloneSpirv-ExecutionModel-07320
VUID-StandaloneSpirv-FPRoundingMode-04675
VUID-StandaloneSpirv-Flat-04670
VUID-StandaloneSpirv-Flat-04744
VUID-StandaloneSpirv-Flat-06201
VUID-StandaloneSpirv-Flat-06202
VUID-StandaloneSpirv-GLSLShared-04669
VUID-StandaloneSpirv-HitAttributeKHR-04701
VUID-StandaloneSpirv-HitAttributeKHR-04702
VUID-StandaloneSpirv-HitAttributeKHR-04703
VUID-StandaloneSpirv-IncomingCallableDataKHR-04705
VUID-StandaloneSpirv-IncomingCallableDataKHR-04706
VUID-StandaloneSpirv-IncomingRayPayloadKHR-04699
VUID-StandaloneSpirv-IncomingRayPayloadKHR-04700
VUID-StandaloneSpirv-Input-06778
VUID-StandaloneSpirv-Input-07290
VUID-StandaloneSpirv-InputAttachmentIndex-06678
VUID-StandaloneSpirv-Invariant-04677
VUID-StandaloneSpirv-LocalSize-06426
VUID-StandaloneSpirv-Location-04915
VUID-StandaloneSpirv-Location-04916
VUID-StandaloneSpirv-Location-04917
VUID-StandaloneSpirv-Location-04918
VUID-StandaloneSpirv-Location-04919
VUID-StandaloneSpirv-Location-06672
VUID-StandaloneSpirv-MeshEXT-07102
VUID-StandaloneSpirv-None-04633
VUID-StandaloneSpirv-None-04634
VUID-StandaloneSpirv-None-04635
VUID-StandaloneSpirv-None-04636
VUID-StandaloneSpirv-None-04637
VUID-StandaloneSpirv-None-04638
VUID-StandaloneSpirv-None-04640
VUID-StandaloneSpirv-None-04641
VUID-StandaloneSpirv-None-04642
VUID-StandaloneSpirv-None-04643
VUID-StandaloneSpirv-None-04644
VUID-StandaloneSpirv-None-04645
VUID-StandaloneSpirv-None-04667
VUID-StandaloneSpirv-None-04686
VUID-StandaloneSpirv-None-07321
VUID-StandaloneSpirv-Offset-04663
VUID-StandaloneSpirv-OpAtomicLoad-04731
VUID-StandaloneSpirv-OpAtomicStore-04730
VUID-StandaloneSpirv-OpControlBarrier-04650
VUID-StandaloneSpirv-OpControlBarrier-04682
VUID-StandaloneSpirv-OpEntryPoint-06674
VUID-StandaloneSpirv-OpEntryPoint-08721
VUID-StandaloneSpirv-OpEntryPoint-08722
VUID-StandaloneSpirv-OpGroupNonUniformBallotBitCount-04685
VUID-StandaloneSpirv-OpImage-04777
VUID-StandaloneSpirv-OpImageGather-04664
VUID-StandaloneSpirv-OpImageQuerySizeLod-04659
VUID-StandaloneSpirv-OpImageTexelPointer-04658
VUID-StandaloneSpirv-OpMemoryBarrier-04732
VUID-StandaloneSpirv-OpMemoryBarrier-04733
VUID-StandaloneSpirv-OpReadClockKHR-04652
VUID-StandaloneSpirv-OpTypeForwardPointer-04711
VUID-StandaloneSpirv-OpTypeImage-04656
VUID-StandaloneSpirv-OpTypeImage-04657
VUID-StandaloneSpirv-OpTypeImage-06214
VUID-StandaloneSpirv-OpTypeRuntimeArray-04680
VUID-StandaloneSpirv-OpTypeSampledImage-06671
VUID-StandaloneSpirv-OpVariable-04651
VUID-StandaloneSpirv-OpVariable-04734
VUID-StandaloneSpirv-OpVariable-06673
VUID-StandaloneSpirv-OriginLowerLeft-04653
VUID-StandaloneSpirv-PerVertexKHR-06777
VUID-StandaloneSpirv-PhysicalStorageBuffer64-04708
VUID-StandaloneSpirv-PhysicalStorageBuffer64-04710
VUID-StandaloneSpirv-PixelCenterInteger-04654
VUID-StandaloneSpirv-Pointer-08973
VUID-StandaloneSpirv-PushConstant-06675
VUID-StandaloneSpirv-PushConstant-06808
VUID-StandaloneSpirv-RayPayloadKHR-04698
VUID-StandaloneSpirv-Result-04780
VUID-StandaloneSpirv-ShaderRecordBufferKHR-07119
VUID-StandaloneSpirv-SubgroupVoteKHR-07951
VUID-StandaloneSpirv-Uniform-06676
VUID-StandaloneSpirv-Uniform-06807
VUID-StandaloneSpirv-Uniform-06925
VUID-StandaloneSpirv-UniformConstant-04655
VUID-StandaloneSpirv-UniformConstant-06677
VUID-SubgroupEqMask-SubgroupEqMask-04370
VUID-SubgroupEqMask-SubgroupEqMask-04371
VUID-SubgroupGeMask-SubgroupGeMask-04372
VUID-SubgroupGeMask-SubgroupGeMask-04373
VUID-SubgroupGtMask-SubgroupGtMask-04374
VUID-SubgroupGtMask-SubgroupGtMask-04375
VUID-SubgroupId-SubgroupId-04367
VUID-SubgroupId-SubgroupId-04368
VUID-SubgroupId-SubgroupId-04369
VUID-SubgroupLeMask-SubgroupLeMask-04376
VUID-SubgroupLeMask-SubgroupLeMask-04377
VUID-SubgroupLocalInvocationId-SubgroupLocalInvocationId-04380
VUID-SubgroupLocalInvocationId-SubgroupLocalInvocationId-04381
VUID-SubgroupLtMask-SubgroupLtMask-04378
VUID-SubgroupLtMask-SubgroupLtMask-04379
VUID-SubgroupSize-SubgroupSize-04382
VUID-SubgroupSize-SubgroupSize-04383
VUID-TessCoord-TessCoord-04387
VUID-TessCoord-TessCoord-04388
VUID-TessCoord-TessCoord-04389
VUID-TessLevelInner-TessLevelInner-04394
VUID-TessLevelInner-TessLevelInner-04395
VUID-TessLevelInner-TessLevelInner-04396
VUID-TessLevelInner-TessLevelInner-04397
VUID-TessLevelOuter-TessLevelOuter-04390
VUID-TessLevelOuter-TessLevelOuter-04391
VUID-TessLevelOuter-TessLevelOuter-04392
VUID-TessLevelOuter-TessLevelOuter-04393
VUID-VertexIndex-VertexIndex-04398
VUID-VertexIndex-VertexIndex-04399
VUID-VertexIndex-VertexIndex-04400
VUID-ViewIndex-ViewIndex-04401
VUID-ViewIndex-ViewIndex-04402
VUID-ViewIndex-ViewIndex-04403
VUID-ViewportIndex-ViewportIndex-04404
VUID-ViewportIndex-ViewportIndex-04405
VUID-ViewportIndex-ViewportIndex-04406
VUID-ViewportIndex-ViewportIndex-04407
VUID-ViewportIndex-ViewportIndex-04408
VUID-WorkgroupId-WorkgroupId-04422
VUID-WorkgroupId-WorkgroupId-04423
VUID-WorkgroupId-WorkgroupId-04424
VUID-WorkgroupSize-WorkgroupSize-04425
VUID-WorkgroupSize-WorkgroupSize-04426
VUID-WorkgroupSize-WorkgroupSize-04427
VUID-WorldRayDirectionKHR-WorldRayDirectionKHR-04428
VUID-WorldRayDirectionKHR-WorldRayDirectionKHR-04429
VUID-WorldRayDirectionKHR-WorldRayDirectionKHR-04430
VUID-WorldRayOriginKHR-WorldRayOriginKHR-04431
VUID-WorldRayOriginKHR-WorldRayOriginKHR-04432
VUID-WorldRayOriginKHR-WorldRayOriginKHR-04433
VUID-WorldToObjectKHR-WorldToObjectKHR-04434
VUID-WorldToObjectKHR-WorldToObjectKHR-04435
VUID-WorldToObjectKHR-WorldToObjectKHR-04436
VUUUA
VWATAUAVH
VWATAUAWH
VWATAUH
VWATAVAW
VWATAVAWH
VWATAVH
VWATAWH
VWATH
VWAUAVAWH
VWAUAVH
VWAUAWH
VWAUH
VWAVAWH
VWAVH
VWAWH
VZ#-DLU[3=h
V\v6I]Dc
V_:X1
V_SplitString@@YAXPEBD0AEAV?$CUtlVector@PEADHV?$CUtlMemory@PEADH@@@@@Z
V_stristr_fast@@YAPEBDPEBD0@Z
V`H;Vht\nH
Validation failed after pass
Value Unknown
Value must be a 4-component unsigned integer vector
Value must be a scalar or vector of integer, floating-point, or boolean type
Value operand of OpAssumeTrueKHR must be a boolean scalar
Valve.Source.Render
Variable
Variable declarations that include initializers must have
Variable decorated with Invariant must only be identified with the Input or Output storage class in Vulkan environment
Variable has conflicting component decorations
Variable has conflicting index decorations
Variable has conflicting location decorations
Variable must be decorated with a location
Variable struct member decorated with Invariant must only be identified with the Input or Output storage class in Vulkan environment
VariableLengthArrayINTEL
VariablePointers
VariablePointers or VariablePointersStorageBuffer
VariablePointersStorageBuffer
Variables can not have a function[7] storage class outside of a function
Variables identified with the StorageBuffer storage class are used to access transparent buffer backed resources. Such variables must be typed as OpTypeStruct, or an array of this type
Variables identified with the Uniform storage class are
Variables identified with the UniformConstant storage class
Variables must have a function[7] storage class inside of a function
Vc>L\bH
VeaFOfb
VecTypeHint
Vector Count
Vector Count must be 32-bit integer OpConstant
Vector Count must be positive
Vector Type
Vector access is out of bounds, vector size is
Vector16
VectorAnyINTEL
VectorComputeCallableFunctionINTEL
VectorComputeFunctionINTEL
VectorComputeINTEL
VectorComputeVariableINTEL
VectorExtractDynamic
VectorInsertDynamic
VectorShuffle
VectorTimesMatrix
VectorTimesScalar
Vendor ID mismatch in pipeline cache file (Got: %x Expected: %x).  Deleting %s in order to regenerate it.\n
VendorID
Version
Vertex
Vertex Count must be a 32-bit unsigned int scalar
VertexId
VertexIndex
VertexOrderCcw
VertexOrderCw
Vertical2Pixels
Vertical4Pixels
Video Card %s (%04x : %04x)\n
Video config version number changed ( '%s' is version %i, current version is %i ). Resetting video config.\n
ViewIndex
ViewportIndex
ViewportMaskNV
ViewportMaskPerViewNV
ViewportRelativeNV
Virtual array controller messed up
VisBuilder_001
Visible Snapshot
VkPhysicalDeviceVulkan11Features.variablePointers not supported, ConstBufferPointer<> will not work.\n
VkPipelineCacheHeaderVersion mismatch in pipeline cache file (Got: %d Expected: %d).  Deleting %s in order to regenerate it.\n
VmaCreateNewVulkanObject '%s' unexpectedly failed to create an object.\n
VmaDefragAssign
VmaDefragCopyPass
VmaDefragThread
VmeImageINTEL
Volatile
Volatile mask setting must match for Equal and Unequal memory semantics
VolatileTexel
VolatileTexelKHR
VolatileType
Vrad3_001
VsInputSignatureElement_t
VsInputSignature_t
Vulkan
Vulkan Command Buffer Pool Threshold(%d)\n
Vulkan Command Buffers:\n
Vulkan Framebuffer Manager Stats:\n
Vulkan GPU Memory Visualizer
Vulkan MultiGPU Rendering - Enabled!\n
Vulkan MultiGPU Rendering - using %d GPUs\n
Vulkan PMB Memory Manager Stats:\n
Vulkan Physical Device: %s\n
Vulkan Pipeline Manager Stats:\n
Vulkan Total Mem: %s; Fragmentation: %s; PMB mem: %s; command buffers: %s\n
Vulkan device does not support precise occlusion queries, this may result in incorrect rendering that relies on accurate occlusion queries (such as tonemapping).\n
Vulkan driver doesn't support MultiDrawIndexedInstancedIndirectCount\n
Vulkan driver version Major = %d, Minor = %d, Patch = %d\n
Vulkan driver version: %d.%d.%d.%d\n
Vulkan extension enabled: %s\n
Vulkan failed to create descriptor pool.\n
Vulkan framebuffers: %s; renderpasses: %s\n
Vulkan initialization failed, '%s' likely failed to load.\n
Vulkan lazily allocating render targets.\n
Vulkan missing requested extension '%s'.\n
Vulkan physical device (%d): supports shader clip distance: %s\n
Vulkan pipelines: %s; pipeline layouts: %s\n
Vulkan shader pipeline cache file version is %d instead of %d for %s. Deleting.\n
Vulkan spec allows BuiltIn
Vulkan spec allows BuiltIn HelperInvocation to be only used for variables with Input storage class
Vulkan spec allows BuiltIn HelperInvocation to be used only with Fragment execution model
Vulkan spec allows BuiltIn InvocationId to be only used for variables with Input storage class
Vulkan spec allows BuiltIn InvocationId to be used only with TessellationControl or Geometry execution models
Vulkan spec allows BuiltIn PatchVertices to be only used for variables with Input storage class
Vulkan spec allows BuiltIn PatchVertices to be used only with TessellationControl or TessellationEvaluation execution models
Vulkan spec allows BuiltIn PointCoord to be only used for variables with Input storage class
Vulkan spec allows BuiltIn PointCoord to be used only with Fragment execution model
Vulkan spec allows BuiltIn PointSize to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn PointSize to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models
Vulkan spec allows BuiltIn Position to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn Position to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models
Vulkan spec allows BuiltIn PrimitiveId to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn PrimitiveId to be used only with Fragment, TessellationControl, TessellationEvaluation, Geometry, MeshNV, MeshEXT, IntersectionKHR, AnyHitKHR, and ClosestHitKHR execution models
Vulkan spec allows BuiltIn SampleId to be only used for variables with Input storage class
Vulkan spec allows BuiltIn SampleId to be used only with Fragment execution model
Vulkan spec allows BuiltIn SampleMask to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn SampleMask to be used only with Fragment execution model
Vulkan spec allows BuiltIn SamplePosition to be only used for variables with Input storage class
Vulkan spec allows BuiltIn SamplePosition to be used only with Fragment execution model
Vulkan spec allows BuiltIn TessCoord to be only used for variables with Input storage class
Vulkan spec allows BuiltIn TessCoord to be used only with TessellationEvaluation execution model
Vulkan spec disallows OpAtomicLoad with Memory Semantics Release, AcquireRelease and SequentiallyConsistent
Vulkan spec disallows OpAtomicStore with Memory Semantics Acquire, AcquireRelease and SequentiallyConsistent
Vulkan spec does not allow BuiltIn
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is MeshEXT
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is MeshNV
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is Vertex
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Output storage class if execution model is Fragment
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Input storage class if execution model is Vertex, TessellationEvaluation, Geometry, MeshNV or MeshEXT
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Output storage class if execution model is Fragment
Vulkan spec doesn't allow BuiltIn PointSize to be used for variables with Input storage class if execution model is Vertex
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is MeshEXT
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is MeshNV
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is Vertex
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is AnyHitKHR
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is ClosestHitKHR
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is Fragment
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is IntersectionKHR
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationControl
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationEvaluation
Vulkan spec doesn't allow BuiltIn VertexId to be used
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Input storage class if execution model is TessellationControl
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Output storage class if execution model is TessellationEvaluation
Vulkan spec only allows storage classes for atomic to be: Uniform, Workgroup, Image, StorageBuffer, PhysicalStorageBuffer or TaskPayloadWorkgroupEXT
Vulkan spec requires BuiltIn WorkgroupSize to be a constant
Vulkan specification requires Memory Semantics to be None if used with Invocation Memory Scope
Vulkan specification requires Memory Semantics to have one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
Vulkan swapchain does not support VK_IMAGE_USAGE_TRANSFER_DST_BIT. Upscaling desktop friendly fullscreen not supported.\n
Vulkan swapchain does not support VK_IMAGE_USAGE_TRANSFER_SRC_BIT. Screenshots not supported.\n
Vulkan swapchain out-of-date, suboptimal, or surface lost - recreating.  Result: (%s)\n
Vulkan swapchain recreated succesfully.  Attempting to acquire next image
Vulkan texture manager frame update
Vulkan trim all command pools per frame enabed.\n
Vulkan trim command pools on rebalancing threads enabed.\n
Vulkan using external subpass dependencies for all renderpasses.\n
Vulkan/Pipeline Layout Count
Vulkan/Pipeline State Object Count
Vulkan/Staging Dynamic Total Pool Count
Vulkan/Staging Dynamic Total Pool Size (MB
VulkanGPUMemVisThread
VulkanKHR
VulkanMemoryModel
VulkanMemoryModelDeviceScope
VulkanMemoryModelDeviceScopeKHR
VulkanMemoryModelDeviceScopeKHR capability
VulkanMemoryModelKHR
VulkanMemoryModelKHR capability must only be specified if the VulkanKHR memory model is used
Vulkan_DisableInstructions
Vulkan_InitializationFailure
Vulkan_RequiredExtensionMissing
W ;G\b
W H;W(t\t
W \aae
W%\ts;M
W(@t\nA
W0D9b\b~(M
W3C WebGPU Group
W3C WebGPU Group WHLSL Shader Translator
W8H;W@t
W@H;WHt\rH
W@I;WHt
WAITING_FOR_HOOKUP_JOB
WAITING_FOR_IO
WARNING
WARNING: AST will form illegal SPIR-V; need to transform to legalize
WARNING: Trying to create a CRenderContextPtr without a valid context.\n
WATAUAVAW
WATAUAVAWD
WATAUAVAWH
WATAUAVAWL
WATAUAVAWLc
WATAUAWH
WATAVH
WATAWH
WAUAVAWH
WAUAVH
WAVAWH
WHLSL Shader Translator
WITHIN_BUDGET
WLcT$0I
WLc\\$0I
WORKGROUPCOHERENT
WRITEONLY
WUUUUU
W\bI;P\bwwH9Q\bwqI
W\tD$HI
W\tl$ D
W\tt$@E3
W\vK\f;K
W\vT$TE3
Wait@CThreadSyncObject@@QEAA_NI@Z
WaitForRead@CThreadRWLock@@AEAAXXZ
WaitForSingleObject
WaitForSingleObjectEx
WaitKernel
WaitOnPresent
WaitWorkGroup
Waited for left eye command buffers to finish for 250ms, trying again.  Likely a GPU hang.\n
WakeAllConditionVariable
WakeConditionVariable
Warning, (version, profile) forced to be
Warning: have %d in use and %d free per-frame memory stacks outstanding. The oldest stack was created at present %d, and we're now on present %d\n
Warning: have oustanding per-frame memory stack with %d allocations\n
Warning: thumbnail image size does not match data length %u
Warning: unknown JFIF revision number %d.%02d
WarpIDARM
WarpIDNV
WarpMaxIDARM
WarpsPerSMNV
WaveActiveAllEqual
WaveActiveAllEqualBool
WaveActiveAllTrue
WaveActiveAnyTrue
WaveActiveBallot
WaveActiveBitAnd
WaveActiveBitOr
WaveActiveBitXor
WaveActiveCountBits
WaveActiveMax
WaveActiveMin
WaveActiveProduct
WaveActiveSum
WaveGetLaneCount
WaveGetLaneIndex
WaveIsFirstLane
WavePrefixCountBits
WavePrefixProduct
WavePrefixSum
WaveReadLaneAt
WaveReadLaneFirst
Wednesday
WeightTextureQCOM
When BuiltIn decoration is applied to a structure-type member
When declaring WorkgroupMemoryExplicitLayoutKHR, either all or none of the Workgroup Storage Class variables in the entry point interface must point to struct types decorated with Block.  Entry point id
When declaring WorkgroupMemoryExplicitLayoutKHR, if more than one Workgroup Storage Class variable in the entry point interface point to a type decorated with Block, all of them must be decorated with Aliased. Entry point id
WhiteLevel
WhitePoint
WideCharToMultiByte
Windowed
Wine VKD3D Shader Compiler
WordsizeINTEL
WorkDim
WorkGroupID
WorkGroupSize
Workaround AMD bug where vkCmdPipelineBarrier is needed prior to vkCmdResetQueryPool
Workgroup
Workgroup Memory Scope can't be used with TessellationControl using GLSL450 Memory Model
Workgroup Memory Scope is limited to MeshNV, TaskNV, MeshEXT, TaskEXT, TessellationControl, and GLCompute execution model
Workgroup Storage Class variables can't be decorated with Block unless declaring the WorkgroupMemoryExplicitLayoutKHR capability
Workgroup and Subgroup
Workgroup storage class pointer requires VariablePointers capability to be specified
Workgroup, CrossWorkgroup, Generic, Image or StorageBuffer
WorkgroupId
WorkgroupMemory
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
WorkgroupMemoryExplicitLayout16BitAccessKHR
WorkgroupMemoryExplicitLayout8BitAccessKHR
WorkgroupMemoryExplicitLayoutKHR
WorkgroupSize
WorldRayDirectionKHR
WorldRayDirectionNV
WorldRayOriginKHR
WorldRayOriginNV
WorldRendererMgr001
WorldToObjectKHR
WorldToObjectNV
Write error at scanline %lu
Write failed on temporary file --- out of disk space
Write to EMS failed
Write to XMS failed
WriteBackINTEL
WriteConsoleW
WriteFile
WriteINTEL
WriteInvocationAMD
WriteOnly
WritePackedPrimitiveIndices4x8NV
WritePipe
WritePipeBlockingINTEL
WriteThroughINTEL
Wrong JPEG library version: library is %d, caller expects %d
Wrote %s\n
Wrote RenderDoc capture to %s\n
X ATAVAWH
X UWAVH
X must be a 32-bit unsigned integer OpConstant
X-LEGEND
X-LEGEND Mesa-IR/SPIR-V Translator
X0t\rH
X@8p u\t@87u
XA^A]A
XA_A]A
XA_A^A
XA_A^A]A
XClipPathUnits
XC}\b
XH9|$8
XLk|$`XL
XMLPacket
XOR_ASSIGN
XOR_OP
XPosition
XResolution
XYZ, Luv
X\bUVWATAUAVAWH
Xderef
Xenia Emulator Microcode Translator
Xenia Xenia Emulator Microcode Translator
XfbBuffer
XfbStride
Xu\bH
Xu\vL;A r
Y must be a 32-bit unsigned integer OpConstant
Y sfH
Y0H+Y(H
Y0H;Y8t
Y>kX>M\e
YCUtlString@@QEAAAEAV0@AEBV0@@Z
YCUtlString@@QEAAAEAV0@PEBD@Z
YCbCrCoefficients
YCbCrPositioning
YCbCrSubsampling
YClipPathUnits
YPosition
YResolution
Y\aH9\bu\r@2
Y\vl\rm p
Z must be a 32-bit unsigned integer OpConstant
Z* ,\t\a\vm8
Z*8,f
Z@2P&R
ZEo^m
ZFP compression is not supported
ZIPDecode
ZIPEncode
ZIPPostEncode
ZIPSetupDecode
ZIPSetupEncode
ZIPVSetField
ZV2X&d
ZVǖAO\b
Z\e{&1q
ZeroExtend
Zig Compiler
Zig Software Foundation
Zig Software Foundation Zig Compiler
Z¸VUUU
a storage class of PhysicalStorageBuffer
a!\a&\a+\a0\a5\a;\aA\aG\aL\aQ\aV\a[\a`\ae\aj\ao\at\ay\a~\a
a!\aA\aa\a
a#Ib?AG
a$@D\tA
a3ȉL$p
a3щT$PA
a;E rIw7M
a>uZ>2
a@b;zO
aD9H(u!H
aD\a$\ad\a
aE3\nS\tH
aE3\vT$DHcH
aH9C\btUH
aH9D$8t
aH9D$8t0
aH9F\btH
aH9G\btkH
aH9\\$8t
aH9w t\fH
aI9D2\bt
aI9G\btxL
aIcp\bH
aM+\vE+C\bL
aP\a0\ap\a\b\aH\a(\ah\a
aPlat_IsInDebugSession
aPlat_IsWindowMinimized
aPlat_LoadModule
aPlat_LoadSDL
aPlat_MessageBox
aPlat_NeedsLowFragmentation
aPlat_NonFatalErrorFunc
aPlat_OsSpecificHandleToPlatWindow
aPlat_RelativeTickFrequency
aPlat_RelativeTicks
aPlat_TicksAfterSecsF
aPlat_UnloadModule
aPlat_WindowToOsSpecificHandle
aRandomInt
aRegisterMobileEventListener
aRegisterStringToken
aReleaseThreadHandle
aSeriousWarning
aT\a4\at\a
aThe H
aThreadGetDebugNameForThreadId
aThreadInMainThread
aThreadJoin
aThreadSetPriority
aThreadSleep
aThreadYield
aWDG,r3
aX\a8\ax\a
a\b  Group 4 Options
a\bL+!I
a\b\tJJ\n\v\f\r
a\b\t\n\v7777777777\f\r
a\b\t\n\v\fQ
a\bl\nI\t
a\bƃI\b
a_fDecodedAlpha >= 0.0f
a_uiMultithreadingStride > 0
a_uiRadius <= MAX_RADIUS
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
absoluteDifference
accelerationStructure
accelerationStructureEXT
accelerationStructureNV
accelerationStructureNV can only be used in uniform variables or function parameters
accept
access qualifier
acospi
active
adapter
add second child into first child
addCarry
addInvocations
addInvocationsAMD
addInvocationsExclusiveScan
addInvocationsExclusiveScanAMD
addInvocationsExclusiveScanAMD(ivec2);ivec3 addInvocationsExclusiveScanAMD(ivec3);ivec4 addInvocationsExclusiveScanAMD(ivec4);uint  addInvocationsExclusiveScanAMD(uint);uvec2 addInvocationsExclusiveScanAMD(uvec2);uvec3 addInvocationsExclusiveScanAMD(uvec3);uvec4 addInvocationsExclusiveScanAMD(uvec4);double  addInvocationsExclusiveScanAMD(double);dvec2   addInvocationsExclusiveScanAMD(dvec2);dvec3   addInvocationsExclusiveScanAMD(dvec3);dvec4   addInvocationsExclusiveScanAMD(dvec4);int64_t addInvocationsExclusiveScanAMD(int64_t);i64vec2 addInvocationsExclusiveScanAMD(i64vec2);i64vec3 addInvocationsExclusiveScanAMD(i64vec3);i64vec4 addInvocationsExclusiveScanAMD(i64vec4);uint64_t addInvocationsExclusiveScanAMD(uint64_t);u64vec2  addInvocationsExclusiveScanAMD(u64vec2);u64vec3  addInvocationsExclusiveScanAMD(u64vec3);u64vec4  addInvocationsExclusiveScanAMD(u64vec4);float16_t addInvocationsExclusiveScanAMD(float16_t);f16vec2   addInvocationsExclusiveScanAMD(f16vec2);f16vec3   addInvocationsExclusiveScanAMD(f16vec3);f16vec4   addInvocationsExclusiveScanAMD(f16vec4);int16_t addInvocationsExclusiveScanAMD(int16_t);i16vec2 addInvocationsExclusiveScanAMD(i16vec2);i16vec3 addInvocationsExclusiveScanAMD(i16vec3);i16vec4 addInvocationsExclusiveScanAMD(i16vec4);uint16_t addInvocationsExclusiveScanAMD(uint16_t);u16vec2  addInvocationsExclusiveScanAMD(u16vec2);u16vec3  addInvocationsExclusiveScanAMD(u16vec3);u16vec4  addInvocationsExclusiveScanAMD(u16vec4);float minInvocationsNonUniformAMD(float);vec2  minInvocationsNonUniformAMD(vec2);vec3  minInvocationsNonUniformAMD(vec3);vec4  minInvocationsNonUniformAMD(vec4);int   minInvocationsNonUniformAMD(int);ivec2 minInvocationsNonUniformAMD(ivec2);ivec3 minInvocationsNonUniformAMD(ivec3);ivec4 minInvocationsNonUniformAMD(ivec4);uint  minInvocationsNonUniformAMD(uint);uvec2 minInvocationsNonUniformAMD(uvec2);uvec3 minInvocationsNonUniformAMD(uvec3);uvec4 minInvocationsNonUniformAMD(uvec4);double minInvocationsNonUniformAMD(double);dvec2  minInvocationsNonUniformAMD(dvec2);dvec3  minInvocationsNonUniformAMD(dvec3);dvec4  minInvocationsNonUniformAMD(dvec4);int64_t minInvocationsNonUniformAMD(int64_t);i64vec2 minInvocationsNonUniformAMD(i64vec2);i64vec3 minInvocationsNonUniformAMD(i64vec3);i64vec4 minInvocationsNonUniformAMD(i64vec4);uint64_t minInvocationsNonUniformAMD(uint64_t);u64vec2  minInvocationsNonUniformAMD(u64vec2);u64vec3  minInvocationsNonUniformAMD(u64vec3);u64vec4  minInvocationsNonUniformAMD(u64vec4);float16_t minInvocationsNonUniformAMD(float16_t);f16vec2   minInvocationsNonUniformAMD(f16vec2);f16vec3   minInvocationsNonUniformAMD(f16vec3);f16vec4   minInvocationsNonUniformAMD(f16vec4);int16_t minInvocationsNonUniformAMD(int16_t);i16vec2 minInvocationsNonUniformAMD(i16vec2);i16vec3 minInvocationsNonUniformAMD(i16vec3);i16vec4 minInvocationsNonUniformAMD(i16vec4);uint16_t minInvocationsNonUniformAMD(uint16_t);u16vec2  minInvocationsNonUniformAMD(u16vec2);u16vec3  minInvocationsNonUniformAMD(u16vec3);u16vec4  minInvocationsNonUniformAMD(u16vec4);float minInvocationsInclusiveScanNonUniformAMD(float);vec2  minInvocationsInclusiveScanNonUniformAMD(vec2);vec3  minInvocationsInclusiveScanNonUniformAMD(vec3);vec4  minInvocationsInclusiveScanNonUniformAMD(vec4);int   minInvocationsInclusiveScanNonUniformAMD(int);ivec2 minInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsInclusiveScanNonUniformAMD(ivec4);uint  minInvocationsInclusiveScanNonUniformAMD(uint);uvec2 minInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsInclusiveScanNonUniformAMD(uvec4);double minInvocationsInclusiveScanNonUniformAMD(double);dvec2  minInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvoca
addInvocationsExclusiveScanNonUniform
addInvocationsExclusiveScanNonUniformAMD
addInvocationsInclusiveScan
addInvocationsInclusiveScanAMD
addInvocationsInclusiveScanNonUniform
addInvocationsInclusiveScanNonUniformAMD
addInvocationsNonUniform
addInvocationsNonUniformAMD
addSaturate
additive_expression
address family not supported
address in use
address not available
addressModeU
addressModeV
addressModeW
addressing model
addressuH9\btBI
addressvH9\bt!I
addresswH9\bu
advapi32
advapi32.dll
aggShadow
agment_tH9H\buh
agment_tH9P\bu\r
akT$p\aD
align
all default precisions are highp; use precision statements to quiet warning, e.g.:\n         "precision mediump int; precision highp float
all members of that structure type must also be decorated with
all redeclarations must use the same depth layout on
all redeclarations must use the same stencil layout on
all stride settings must match for xfb buffer
allInvocations
allInvocationsARB
allInvocationsEqual
allInvocationsEqualARB
allocateInPool
allow_uav_condition
alphaBlendOp
alphaToCoverageEnable
alphaToOneEnable
already connected
also be decorated with a *Binding
ambiguous best function under implicit type conversion
ambiguous function signature match: multiple signatures match under implicit type conversion
ambiguous patch constant function
america
american
american english
american-english
and -= on a buffer reference
and OpImageFetch
and ending with
and rows
and second child into first child
and_expression
anisotropyEnable
anonymous member
anonymous namespace
any-hit
anyHitShader
anyInvocation
anyInvocationARB
api-ms
api-ms-win-appmodel-runtime-l1-1-2
api-ms-win-core-datetime-l1-1-1
api-ms-win-core-fibers-l1-1-1
api-ms-win-core-file-l1-2-2
api-ms-win-core-localization-l1-2-1
api-ms-win-core-localization-obsolete-l1-2-0
api-ms-win-core-processthreads-l1-1-2
api-ms-win-core-string-l1-1-0
api-ms-win-core-synch-l1-2-0
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-2-1
api-ms-win-core-winrt-l1-1-0
api-ms-win-core-xstate-l2-1-0
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-rtcore-ntuser-window-l1-1-0
api-ms-win-security-systemfunctions-l1-1-0
apiVersion
appear as the final member of an OpTypeStruct, thus cannot
appears in the binary before its dominator
application
applicationInfo
applicationName
applicationVersion
arc cosine
arc hyp. cosine
arc hyp. sine
arc hyp. tangent
arc sine
arc tangent
are referenced but not defined in function
are used only as handles to refer to opaque resources. Such
argument cannot drop memory qualifier when passed to formal parameter
argument list too long
argument must be a power of 2
argument must be at least 1
argument must be compile-time constant
argument must be qualified as __explicitInterpAMD in
argument out of domain
arguments
arguments. OpTypeFunction <id
array argument must be sized
array assignment
array comparison
array constructor argument not correct type to construct array element
array constructor must have at least one argument
array constructor needs one argument per array element
array in function return type
array index out of range '%d
array initializer
array initializer must be sized
array length
array must be declared with a size before using this method
array must be explicitly sized
array must be redeclared with a size before being indexed with a variable
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must first be sized by a redeclaration or layout qualifier
array param error
array size
array size must be a constant integer expression
array size must be a positive integer
array size required
array variable name expected
array-of-array of block
array_specifier
arrayed constructor
arrayed type
arrays of arrays
as Result Type
as an operand of <id
asdouble
asfloat
asinpi
aspectMask
aspectReferences
assign
assignment expression
assignment expression in initializer list
assignment_expression
assignment_operator
assumeEXT
assuming binding count of one for compile-time checking of binding numbers for unsized array
asuint
at <EOF
at minimum
at minimum or one of the following extensions
at offset
at offset %d
at4<rt!<wt,M
atC@8
atC@85FC
atDD8
atDD85
atOD8-2
atOD8-j
atan2pi
atanpi
atk<r
atomic counter types
atomic counters can only be highp
atomic counters offset should align based on 4
atomic counters sharing the same offset
atomicAdd
atomicAnd
atomicCoH9\bu
atomicCompSwap
atomicCounter
atomicCounterAdd
atomicCounterAddARB
atomicCounterAnd
atomicCounterAndARB
atomicCounterCompSwap
atomicCounterCompSwapARB
atomicCounterDecrement
atomicCounterExchange
atomicCounterExchangeARB
atomicCounterIncrement
atomicCounterMax
atomicCounterMaxARB
atomicCounterMin
atomicCounterMinARB
atomicCounterOr
atomicCounterOrARB
atomicCounterSubtract
atomicCounterSubtractARB
atomicCounterXor
atomicCounterXorARB
atomicExchange
atomicLoad
atomicLoad(coherent volatile in  int64_t, int, int, int);float16_t atomicLoad(coherent volatile in float16_t, int, int, int);   float atomicLoad(coherent volatile in float, int, int, int);  double atomicLoad(coherent volatile in double, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int);void atomicStore(coherent volatile out float16_t, float16_t, int, int, int);void atomicStore(coherent volatile out float, float, int, int, int);void atomicStore(coherent volatile out double, double, int, int, int);\n
atomicMax
atomicMin
atomicOr
atomicStore
atomicXor
atomic_uint
atomic_uint binding is too large
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
atomic_uints can only be used in uniform variables or function parameters
attachment
attachment index is too large
attachmentCount
attachmentEXT
attachmentEXT input
attachments
attribute
attribute does not apply to a function
attribute does not apply to a loop
attribute does not apply to a selection
attribute does not apply to a switch
attribute does not apply to a type
attribute does not apply to entry point
attribute identifier
attribute requires a SPIR-V 1.4 target-env
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord;\n
attribute with arguments not recognized, skipping
attribute_list
attributes
attributes don't apply to control declaration
australian
auto-map-bindings
auto_exposure
autoconfig
autoconfig_level
average
averageRounded
az-AZ-Cyrl
az-AZ-Latn
az-az-cyrl
az-az-latn
a~\aƇ 3
b %d %H : %M : %S %Y
b >"f&V
b!\bA\ba\b
b1#INF
b2\n>\b
b2Ȉ\rO
b3\tD
b4\b4\b4\b4\b4\b4\b4\b4
b4v\a@O
b9B\bt
b9\ns\aK
b9\vs\rM
b;Q\bt_M
b;\nt
b?^Cy\r
b@8q,t\v3
b@8s-t
b@8w$t
bA,A9h
bA3G\b
bA9\ts\eM
bA\vy,A
bA\vЉK
bA\vЉS
bB*\f\bB
bBellevue1
bD8(H
bD8(t
bD8(t'H
bD8(t\rH
bD8k-t
bD9I$t\rA
bD9Q$t
bD;A\bu
bD;STr
bD;t$0
bFEMh\f
bFrameID
bH#]0H
bH#^0H
bH#}0H
bH#~0H
bH+C\bA
bH+H\bH
bH+ǉu
bH9(u
bH9Q@t@H9QHt-H
bH9{\b\e
bH9{\brL
bH;C\bt"H
bH;D$8t
bH;D$H
bH;D$Ht&H
bH;D$Xt"I
bH;D$xt:H
bH;H\bI
bH;Y t
bH;Y tIL
bH;Y uӋT$hD
bH;Y\bt5H
bH;]Xt=H
bH;^\bt>H
bH;^\bu
bH;|$ht
bH\vȍB8
bHcC H
bHcOpH
bHcS\fH
bI;E\bt,H
bI;_HtKL
bJ\f*\b9
bL+ I
bL90t\eH
bL;a r\bw*L;n s$I
bL;ewt\tL
bL;i r
bL;l$0
bL;mXt\tH
bL;q r\fw
bL;t$8
bM+>I
bM;p\bt#I
bN\n(\f
bR\nv\f
bToolsStallMonitorInternal_BeginScope
bToolsStallMonitorInternal_EndScope
bUVWATAUAVAW
bUVWATAUAVAWH
bUVWAVAWH
bUVWH
bUnregisterMobileEventListener
bUtlMemory_Alloc
bUtlMemory_CalcNewAllocationCount
bUtlMemory_FailedAllocation
bVProf_FindOrCreateCounter
bV_CopyMemory3D
bV_Get_stderr
bV_StringToInt32
bV_StringToInt64
bV_StringToQAngle
bV_StringToUint16
bV_StringToUint32
bV_StringToUint64
bV_StringToVector
bV_StringToVector2D
bV_StringToVector4D
bV_UTF16ToUTF8
bV_ZSTD_decompress
bV_atan2d
bV_atanf
bV_atofloat32
bV_atoi
bV_cosf
bV_expd
bV_fpclassifyd
bV_fprintf
bValid
b\b8F
b\b8FްR
b\n&\fb\n
b\n/\b\v0\bR1\bS2\bT3\bU4\b$5\b%6\bX7\bY8\bZ9\b[:\bJ;\bK<\b2=\b3>\b4
b\rt"H
b\ru"H
b\ru%H
b\vȉT$0
b\vЉT
back-edge block
back-edge blocks but the standard requires exactly one
bad address
bad allocation
bad argument
bad array new length
bad cast
bad character in float exponent
bad conversion
bad digit in binary literal
bad digit in hexadecimal literal
bad exception
bad expression
bad file descriptor
bad function call
bad locale name
bad message
bad partition length
bad profile name; use es, core, or compatibility
bad token
bad tokens following profile -- expected newline
ballot
ballotARB
barrier
base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3
basePipelineHandle
basePipelineIndex
based
based on the function's type
basic type in subpass input
basic type in texture
bc7e.dll
bc7e_compress
bc7e_init
bc7e_init_params
bcordu
be equal
be instantiated via OpVariable
be targeted by OpName, OpGroupDecorate
because it is targeted by an OpEntryPoint instruction
beginInvocationInterlockARB
beginInvocationInterlockARB() cannot be placed after a return from main
beginInvocationInterlockARB() cannot be placed within flow control
beginInvocationInterlockARB() must be called before endInvocationInterlockARB
beginInvocationInterlockARB() must be in a fragment shader
beginInvocationInterlockARB() must be in main
beginInvocationInterlockARB() must only be called once
behavior for extension not specified
behavior not supported
belgian
bf9P\bt,M
bf;E\aum
bfA\v
bfB9<A}1L
bfD94Q}\bI
bfD\v
bfE\v
binary
binary literal too big
binary literal too long
binaryValue
binding
binding is too large
bindingFlags
bindings
bindlessI
bindless_image
bindless_sampler
bindlesstexturedescriptorsettest
binormal
bit integer for the addressing model used in the module
bit shift right
bit-shift left assign
bit-shift right assign
bitCount
bitFieldReverse
bitfieldExtract
bitfieldInsert
bitfieldReverse
bits must be a 32-bit int scalar
bitselect
bitwise and
bitwise exclusive or
bitwise inclusive or
bitwise not
bitwise-and assign
bitwise-or assign
bitwise-xor assign
blend equation
blendConstants
blendEnable
blendOverlap
blend_support
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_screen
blend_support_softlight
blendindices
blendweight
blendweights
block
block <ID
block declaration
block initializer
block instance name redefinition
block member has no corresponding member in
block name cannot be redefined
block name cannot redefine a non-block name
block redeclaration has extra members
block_structure
blocking issue in occlusion queries!!\n
bn0s}Q_@r~aoPq
bool   subgroupAllEqual(%s);\n
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool);\n
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool);\n
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer
bool helperInvocationEXT();\n
bool reportIntersectionNV(float, uint);bool reportIntersectionEXT(float, uint);\n
bool sparseTexelsResidentARB(int code);\n
bool subgroupQuadAll(bool);\nbool subgroupQuadAny(bool);\n
bool1x1
bool1x2
bool1x3
bool1x4
bool2x1
bool2x2
bool2x3
bool2x4
bool3x1
bool3x2
bool3x3
bool3x4
bool4x1
bool4x2
bool4x3
bool4x4
boolean expression expected
borderColor
bordercoH9\bu
bound_imH9
bound_image
bound_saH9
bound_sampler
bp\n>\bA\a
bp\n>\bm\a
bp\n>\bq\n
bp\n>\fp
br\t:H
branches to the
branches to the loop continue target
break statement only allowed in switch and loops
britain
broken pipe
broken promise
br߁:VP8X
bs-BA-Latn
bs-ba-latn
bs\ffA
bs\rfA
bstan
bsܙ_>jj
btRIcD
btSHcD
bu\vL90u
buffer
buffer aliasing not yet supported
buffer block
buffer error
buffer is too large
buffer reference indexing
buffer reference math
bufferImageGranularity
buffer_rH9
buffer_reference
buffer_reference_align
buffers can be declared only as blocks
built in unary operator function.  Type: %s
built-in
built-in block redeclaration
built-in function
but access index is
but does not immediately precede it in the OpSwitch's target list
but is not contained in the associated loop construct
but is not listed as an interface
but its merge block
but not via a structured exit
but parsed version is
but with an element size of
bx\f!\n
byteAddrTemp
b|7Hc
b}b*XhUu
băH\b
bƃH\b
bЃH\b
bуH\b
c [1>H
c?FA@s
c[subcomponent][.component
c\bǃK\b\a
cacheData
call argument
callable
callable data number
callableDataEXT
callableDataInEXT
callableDataInNV
callableDataInNV block
callableDataNV
callableDataNV block
called with execution model
calling
calling user function from global scope
cameraFovAngleVertical is 0.0f - this value should be > 0.0f
cameraFovAngleVertical is greater than 180 degrees/PI
cameraNear is greater than cameraFar in non-inverted-depth context
can be preceded in its line only by spaces or horizontal tabs
can not be used with GL_EXT_shader_tile_image enabled
can not find index
can only apply depth layout to gl_FragDepth
can only apply depth layout to gl_FragStencilRefARB
can only apply highp to atomic_uint
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply to 'in
can only apply to 'out
can only apply to a standalone qualifier
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage\n
can only apply to input layout
can only apply to parameter
can only apply to uniform, buffer, in, or out storage qualifiers
can only be applied as standalone
can only be applied to 'const'-qualified scalar
can only be applied to a scalar
can only be applied to a standalone 'out
can only be applied to structure members
can only be followed by a single macro name
can only be formed between a block and a loop header
can only be used in tileImageEXT variables or function parameters
can only be used on an output
can only be used on variable declaration
can only be used with a block
can only be used with a buffer
can only be used with a subpass
can only be used with a uniform
can only be used with an explicit location
can only be used with buffer
can only be used with physical addressing models
can only be used with std140, std430, or scalar layout packing
can only change layout qualification of
can only have one auxiliary qualifier (centroid, patch, and sample
can only have one interpolation qualifier (flat, smooth, noperspective, __explicitInterpAMD
can only redeclare a built-in block once, and before any use
can only specify on a buffer block
can only specify on a uniform block
can only use in an in/out block
can only use on input blocks in mesh shader
can only use on input in tessellation-evaluation shader
can only use on output in tessellation-control shader
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
can't convert
can't evaluate expression
can't find function
can't handle multiple entry points per stage
can't have an initializer
can't link compilation units from different source languages
can't modify EvqFragStencil if using early_fragment_tests
can't modify a const
can't modify a readonly buffer
can't modify a sampler
can't modify a shaderrecordnv qualified buffer
can't modify a uniform
can't modify accelerationStructureNV
can't modify an atomic_uint
can't modify gl_FragCoord
can't modify gl_FragDepth if using early_fragment_tests
can't modify gl_FrontFace
can't modify gl_InstanceID
can't modify gl_PointCoord
can't modify gl_VertexID
can't modify hitObjectNV
can't modify rayQueryEXT
can't modify shader input
can't modify variable with storage qualifier taskPayloadSharedEXT in mesh shaders
can't modify void
can't read from explicitly-interpolated object
can't read from gl_WorkGroupSize before a fixed workgroup size has been declared
can't read from writeonly object
can't specify both Aliased and Restrict for PhysicalStorageBuffer pointer
can't specify both AliasedPointer and
can't specify both AliasedPointer and RestrictPointer for PhysicalStorageBuffer pointer
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
can't swizzle types containing float16
can't use auxiliary qualifier on a fragment output
can't use function syntax on variable
can't use interpolation qualifier on a fragment output
can't use variable in patch constant function
can't use with arrays containing float16
can't use with arrays containing int16
can't use with arrays containing int8
can't use with arrays containing uint16
can't use with arrays containing uint8
can't use with reference types
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with structs containing int16
can't use with structs containing int8
can't use with structs containing uint16
can't use with structs containing uint8
can't use with types containing arrays sized with a specialization constant
canadian
cannot access member variables (static member function
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
cannot add perprimitiveNV qualifier to redeclared block member
cannot add perviewNV qualifier to redeclared block member
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot appear before the memory model instruction
cannot appear in a function declaration
cannot appear outside switch statement
cannot apply layout qualifier to
cannot apply layout qualifiers to hitAttributeNV variable
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
cannot apply to
cannot apply to 'in
cannot apply to 'out
cannot apply to a block
cannot apply to a cooperative matrix type
cannot apply to a matrix, structure, or block
cannot apply to an array
cannot apply to input
cannot apply to taskNV in/out blocks
cannot apply to taskPayloadSharedEXT
cannot apply to uniform or buffer block
cannot be OpTypeVoid
cannot be a constant zero
cannot be a matrix
cannot be a structure
cannot be a type
cannot be a void pointer
cannot be an argument type except for '(void
cannot be applied to function id
cannot be applied to structure members
cannot be applied to this type
cannot be bool
cannot be both specified
cannot be greater than 3 for pervertexEXT
cannot be negative
cannot be nested inside control flow
cannot be used (maybe an instance name is needed
cannot be used (ouput primitive type mismatch
cannot be used as a member decoration
cannot be used by an entry point with the FPFastMathDefault execution mode
cannot be used with push_constant
cannot be used with shaderRecordNV
cannot be used with tileImageEXT
cannot change array size of redeclared block
cannot change array size of redeclared block member
cannot change arrayness of redeclared block
cannot change arrayness of redeclared block member
cannot change input storage qualification of
cannot change interpolation qualification of
cannot change output storage qualification of
cannot change previously set domain
cannot change previously set fragment shader interlock ordering
cannot change previously set input primitive
cannot change previously set instance attribute
cannot change previously set layout value
cannot change previously set maxvertexcount attribute
cannot change previously set output primitive
cannot change previously set outputcontrolpoints attribute
cannot change previously set outputtopology
cannot change previously set partitioning
cannot change previously set size
cannot change previously set vertex order
cannot change previously set vertex spacing
cannot change qualification after use
cannot change qualification of
cannot change storage, memory, or auxiliary qualification of
cannot change the type of
cannot compose log message
cannot construct this type
cannot construct with these arguments
cannot contain a double, int64, or uint64
cannot convert a sampler
cannot convert a void
cannot convert an atomic_uint
cannot convert from '%s' to '%s
cannot convert input argument, argument
cannot convert parameter %d from '%s' to '%s
cannot convert return value to function return type
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot declare a default, include a type or full declaration
cannot declare a default, use a full declaration
cannot have a null value
cannot have any Location or Component decorations
cannot have statements before first case/default label
cannot have the sign bit set to 1
cannot implicitly initialize opaque members
cannot index buffer reference
cannot index reference to buffer containing an unsized array
cannot initialize this type of qualifier
cannot lie in previous members
cannot match to any predicted input...\n
cannot mix use of shared variables inside and outside blocks
cannot modify hitAttributeNV in this stage
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
cannot parse filter header
cannot parse partitions
cannot parse picture header
cannot parse segment header
cannot re-qualify a function name
cannot read TIFF_ANY type %d for field "%s
cannot redeclare a built-in block with a user name
cannot redeclare a non block as a block
cannot redeclare a user-block member array
cannot redeclare after use
cannot redeclare block
cannot redeclare block member with a different type
cannot redeclare with different qualification
cannot specify matrix layout on a variable declaration
cannot specify on a variable declaration
cannot specify on atomic counter
cannot specify packing on a variable declaration
cannot use 'inout' at global scope
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type
cannot use centroid qualifier on an interface block
cannot use in a block array where new locations are needed for each block element
cannot use in preprocessor expression when expanded from macros
cannot use interpolation qualifiers on an interface block
cannot use interpolation qualifiers with patch
cannot use invariant qualifier on a function parameter
cannot use invariant qualifier on an interface block
cannot use invariant qualifier on structure members
cannot use layout qualifiers on a function parameter
cannot use layout qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type
cannot use sample qualifier on an interface block
cannot use spirv_literal qualifier
cannot use storage or interpolation qualifiers on structure members
capabiliH9
capabilities
capability
capture
case entry block
case exit block
case expression
case_label
cbFSR2
cbFSR2_t
cbGenerateReactive
cbGenerateReactive_t
cbRCAS
cbRCAS_t
cbSPD_t
cbuffer
cdecl
centroid
centroid/sample/patch
cfD9fju\\fD9fhuUfD9
cfg-cleanup
cfg/video_version.txt
cfg\\%svideo.txt
cfg\\%svideo_%02d.txt
cfg\\moddefaults.txt
cfg\\videodefaults.txt
changing qualification after use
channel
channels
channels" attribute not found in the header
character literals not supported
chinese
chinese-hongkong
chinese-simplified
chinese-singapore
chinese-traditional
chromaFilter
chunkCount
clean
client opengl100
client vulkan100
clock2x32ARB
clockARB
clockRealtime2x32EXT
clockRealtimeEXT
closest-hit
closestHitShader
clrcall
cluster size
codeSize
coherent
coherent volatile
color resource is null
colorAttachmentFormats
colorAttachmentReadEXT
colorAttachments
colorBlendOp
colorBlendState
colorWriteEnables
colorWriteMask
column_mH9\bu\t
column_mL9
column_major
columns, but access index is
combination.\n
combined (Vector1 + Vector2) size of
combined token is invalid
combined tokens are too long
combinerOps
commandList is null
comment
committed
common
compareEnable
compareMask
compareOp
compatibility
compilation errors.  No code generated.\n\n
compilation terminated
componenH9\b
componenH9\bu
component
component argument
component is too large
component type
component type does not match Result Type <id
component vector of
component-wise multiply
components
components (1/4 stride) needed are
components < 4 in matrix buffer type
components are not float scalar
components are not int scalar
components as the first member
components for
components must be in the range [0, 3
components must be in the range [0, 31
components, but given
components, but given only
composite
compound_statement
compound_statement_no_new_scope
compression
compression" attribute not found in the header
compute
compute shader derivatives
compute shaders
computePipelines
concatenated_input_layout
condition
condition must be a scalar integer expression
condition\n
conditional expression
conditional_expression
conditionopt
connection aborted
connection already in progress
connection refused
connection reset
conservativeRasterizationMode
const (read only
const array
const bool
const highp int gl_ShadingRateFlag2HorizontalPixelsEXT     = 4;\n
const highp int gl_ShadingRateFlag2VerticalPixelsEXT       = 1;\n
const highp int gl_ShadingRateFlag4HorizontalPixelsEXT     = 8;\n
const highp int gl_ShadingRateFlag4VerticalPixelsEXT       = 2;\n
const int
const int  gl_MaxClipPlanes = %d
const int  gl_MaxCombinedTextureImageUnits = %d
const int  gl_MaxDrawBuffers = %d
const int  gl_MaxFragmentUniformComponents = %d
const int  gl_MaxFragmentUniformVectors = %d
const int  gl_MaxLights = %d
const int  gl_MaxTextureCoords = %d
const int  gl_MaxTextureImageUnits = %d
const int  gl_MaxTextureUnits = %d
const int  gl_MaxVaryingFloats = %d
const int  gl_MaxVaryingVectors = %d
const int  gl_MaxVertexAttribs = %d
const int  gl_MaxVertexTextureImageUnits = %d
const int  gl_MaxVertexUniformComponents = %d
const int  gl_MaxVertexUniformVectors = %d
const int gl_MatrixUseA = 0;\nconst int gl_MatrixUseB = 1;\nconst int gl_MatrixUseAccumulator = 2;\nconst int gl_MatrixOperandsSaturatingAccumulation = 0x10;\nconst int gl_CooperativeMatrixLayoutRowMajor = 0;\nconst int gl_CooperativeMatrixLayoutColumnMajor = 1;\n\n
const int gl_MaxAtomicCounterBindings = %d
const int gl_MaxAtomicCounterBufferSize = %d
const int gl_MaxClipDistances = %d
const int gl_MaxCombinedAtomicCounterBuffers = %d
const int gl_MaxCombinedAtomicCounters = %d
const int gl_MaxCombinedClipAndCullDistances = %d
const int gl_MaxCombinedImageUniforms = %d
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d
const int gl_MaxCombinedShaderOutputResources = %d
const int gl_MaxComputeAtomicCounterBuffers = %d
const int gl_MaxComputeAtomicCounters = %d
const int gl_MaxComputeImageUniforms = %d
const int gl_MaxComputeTextureImageUnits = %d
const int gl_MaxComputeUniformComponents = %d
const int gl_MaxCullDistances = %d
const int gl_MaxFragmentAtomicCounterBuffers = %d
const int gl_MaxFragmentAtomicCounters = %d
const int gl_MaxFragmentImageUniforms = %d
const int gl_MaxFragmentInputComponents = %d
const int gl_MaxGeometryAtomicCounterBuffers = %d
const int gl_MaxGeometryAtomicCounters = %d
const int gl_MaxGeometryImageUniforms = %d
const int gl_MaxGeometryInputComponents = %d
const int gl_MaxGeometryOutputComponents = %d
const int gl_MaxGeometryOutputVertices = %d
const int gl_MaxGeometryTextureImageUnits = %d
const int gl_MaxGeometryTotalOutputComponents = %d
const int gl_MaxGeometryUniformComponents = %d
const int gl_MaxGeometryVaryingComponents = %d
const int gl_MaxImageSamples = %d
const int gl_MaxImageUnits = %d
const int gl_MaxMeshOutputPrimitivesNV = %d
const int gl_MaxMeshOutputVerticesNV = %d
const int gl_MaxMeshViewCountNV = %d
const int gl_MaxPatchVertices = %d
const int gl_MaxSamples = %d
const int gl_MaxTessControlAtomicCounterBuffers = %d
const int gl_MaxTessControlAtomicCounters = %d
const int gl_MaxTessControlImageUniforms = %d
const int gl_MaxTessControlInputComponents = %d
const int gl_MaxTessControlOutputComponents = %d
const int gl_MaxTessControlTextureImageUnits = %d
const int gl_MaxTessControlTotalOutputComponents = %d
const int gl_MaxTessControlUniformComponents = %d
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d
const int gl_MaxTessEvaluationAtomicCounters = %d
const int gl_MaxTessEvaluationImageUniforms = %d
const int gl_MaxTessEvaluationInputComponents = %d
const int gl_MaxTessEvaluationOutputComponents = %d
const int gl_MaxTessEvaluationTextureImageUnits = %d
const int gl_MaxTessEvaluationUniformComponents = %d
const int gl_MaxTessGenLevel = %d
const int gl_MaxTessPatchComponents = %d
const int gl_MaxTransformFeedbackBuffers = %d
const int gl_MaxTransformFeedbackInterleavedComponents = %d
const int gl_MaxVaryingComponents = %d
const int gl_MaxVertexAtomicCounterBuffers = %d
const int gl_MaxVertexAtomicCounters = %d
const int gl_MaxVertexImageUniforms = %d
const int gl_MaxVertexOutputComponents = %d
const int gl_MaxViewports = %d
const int gl_ScopeDevice      = 1;\n
const int gl_ScopeInvocation  = 4;\n
const int gl_ScopeQueueFamily = 5;\n
const int gl_ScopeShaderCallEXT = 6;\n
const int gl_ScopeSubgroup    = 3;\n
const int gl_ScopeWorkgroup   = 2;\n
const int gl_SemanticsAcquire         = 0x2;\n
const int gl_SemanticsAcquireRelease  = 0x8;\n
const int gl_SemanticsMakeAvailable   = 0x2000;\n
const int gl_SemanticsMakeVisible     = 0x4000;\n
const int gl_SemanticsRelaxed         = 0x0;\n
const int gl_SemanticsRelease         = 0x4;\n
const int gl_SemanticsVolatile        = 0x8000;\n
const int gl_StorageSemanticsBuffer   = 0x40;\n
const int gl_StorageSemanticsImage    = 0x800;\n
const int gl_StorageSemanticsNone     = 0x0;\n
const int gl_StorageSemanticsOutput   = 0x1000;\n
const int gl_StorageSemanticsShared   = 0x100;\n
const int16_t
const int64_t
const int8_t
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d
const ivec3 gl_MaxMeshWorkGroupSizeNV = ivec3(%d,%d,%d
const ivec3 gl_MaxTaskWorkGroupSizeNV = ivec3(%d,%d,%d
const mediump int  gl_MaxCombinedTextureImageUnits = %d
const mediump int  gl_MaxDrawBuffers = %d
const mediump int  gl_MaxFragmentInputVectors = %d
const mediump int  gl_MaxFragmentUniformVectors = %d
const mediump int  gl_MaxProgramTexelOffset = %d
const mediump int  gl_MaxTextureImageUnits = %d
const mediump int  gl_MaxVaryingVectors = %d
const mediump int  gl_MaxVertexAttribs = %d
const mediump int  gl_MaxVertexOutputVectors = %d
const mediump int  gl_MaxVertexTextureImageUnits = %d
const mediump int  gl_MaxVertexUniformVectors = %d
const mediump int  gl_MinProgramTexelOffset = %d
const mediump int gl_MaxDualSourceDrawBuffersEXT = %d
const uint
const uint gl_RayFlagsNoneNV = 0U;const uint gl_RayFlagsNoneEXT = 0U;const uint gl_RayFlagsOpaqueNV = 1U;const uint gl_RayFlagsOpaqueEXT = 1U;const uint gl_RayFlagsNoOpaqueNV = 2U;const uint gl_RayFlagsNoOpaqueEXT = 2U;const uint gl_RayFlagsTerminateOnFirstHitNV = 4U;const uint gl_RayFlagsTerminateOnFirstHitEXT = 4U;const uint gl_RayFlagsSkipClosestHitShaderNV = 8U;const uint gl_RayFlagsSkipClosestHitShaderEXT = 8U;const uint gl_RayFlagsCullBackFacingTrianglesNV = 16U;const uint gl_RayFlagsCullBackFacingTrianglesEXT = 16U;const uint gl_RayFlagsCullFrontFacingTrianglesNV = 32U;const uint gl_RayFlagsCullFrontFacingTrianglesEXT = 32U;const uint gl_RayFlagsCullOpaqueNV = 64U;const uint gl_RayFlagsCullOpaqueEXT = 64U;const uint gl_RayFlagsCullNoOpaqueNV = 128U;const uint gl_RayFlagsCullNoOpaqueEXT = 128U;const uint gl_RayFlagsSkipTrianglesEXT = 256U;const uint gl_RayFlagsSkipAABBEXT = 512U;const uint gl_RayFlagsForceOpacityMicromap2StateEXT = 1024U;const uint gl_HitKindFrontFacingTriangleEXT = 254U;const uint gl_HitKindBackFacingTriangleEXT = 255U;in    uint gl_HitKindFrontFacingMicroTriangleNV;in    uint gl_HitKindBackFacingMicroTriangleNV;\n
const uint gl_RayQueryCandidateIntersectionEXT = 0U;const uint gl_RayQueryCommittedIntersectionEXT = 1U;const uint gl_RayQueryCommittedIntersectionNoneEXT = 0U;const uint gl_RayQueryCommittedIntersectionTriangleEXT = 1U;const uint gl_RayQueryCommittedIntersectionGeneratedEXT = 2U;const uint gl_RayQueryCandidateIntersectionTriangleEXT = 0U;const uint gl_RayQueryCandidateIntersectionAABBEXT = 1U;\n
const uint16_t
const uint64_t
const uint8_t
const_cast
constant expression required
constantH9\b
constantH9\bu
constantH9\bu&f
constantID
constant_expression
constant_id
construct headed by
construct with the
construct, but not to the
constructing matrix from matrix
constructing non-array constituent from array argument
constructor
constructor argument does not have a type
containing OpTypeRuntimeArray must have storage class of
contains an array with stride
contains an array with stride 0
contains members with BuiltIn decoration. Therefore this
contains structure <id
context-insensitive value
continue
continue statement only allowed in loops
continue target
continueH
controlBarrier
convert-local-access-chains
coopMatLoad
coopMatLoadNV
coopMatMulAdd
coopMatMulAddNV
coopMatStore
coopMatStoreNV
cooperative matrix layout
cooperative matrix operands
cooperative matrix use
coopmat
coopmat incorrect number of type parameters
coopmat invalid basic type
coopmat invalid matrix Use
coopmat missing type parameters
coordTemp
copy constructor closure
copy object
copysign
correlatedViewMasks
correlationMasks
corresponding member type of Result Type struct
cosine
could not be inlined because the return instruction is not at the end of the function. This could be fixed by running merge-return before inlining
could not create assignment
count
count does not match Result Type <id
count must be one
countLeadingZeros
countTrailingZeros
countbits
coveragH9H\bu7
cross device link
cross-product
crt_strtox::floating_point_value::as_double
crt_strtox::floating_point_value::as_float
cubeFaceCoord
cubeFaceCoordAMD
cubeFaceIndex
cubeFaceIndexAMD
cullMode
customBorderColor
cy_lengtH9H\bu
cŘ"rY
d %d %d
d %d %d %d
d (%s
d / %m / %y
d must be the same basic type
d$ UAVAWH
d$ u?A
d$(E3\v
d$(Lcd$HL
d$(v\aD
d$0E9e
d$0E;e
d$0Lc!A
d$0fD
d$4D;d$H
d$8E3\v
d$8Lca\fA
d$8ufL
d$=fA
d$@@8sYuAH
d$@A9
d$@fD
d$HL;e
d$HLcd$hL
d$PH;U
d$PfD
d$Tt1I
d$\bE;D
d$`fA
d$`fff
d$dD;d$ltY
d$ht;H
d$pHc
d$x@8u
d?000000
dFdxCoarse
dFdxFine
dFdyCoarse
dFdyFine
dPdxCoarse
dPdxFine
dPdyCoarse
dPdyFine
daryColoH9H\bu
daryColoH9H\bu\n
data error
data height too large
data width or data height is negative
data width too large
data$r
data$rs
dataSize
dataWindow
dataWindow" attribute not found in the header or invalid
data_height
data_with or data_height too large. data_width
dddd, MMMM dd, yyyy
ddddd77
ddx_coarse
ddx_fine
ddy_coarse
ddy_fine
de, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);\nicoopmatNV coopMatMulAddNV(icoopmatNV A, icoopmatNV B, icoopmatNV C);\nucoopmatNV coopMatMulAddNV(ucoopmatNV A, ucoopmatNV B, ucoopmatNV C);\n
debug base type encoding
debug composite type
debug info flags
debug operation
debug pragma syntax is incorrect
debug type qualifier
debugPriH9\b
debugPrintfEXT
declaration
declaration in annotation
declaration list
declaration_statement
declarations
decorated as
decorated variable must not be used in fragment execution model as an Output storage class for Entry Point id
decorated variable must not be used in vertex execution model as an Input storage class for Entry Point id
decorated with
decorated with both
decoration
decoration applied to a non-object
decoration applied to a value with void type
decoration applied to an object with invalid type
decoration may not be applied to
decoration must not be applied to this storage class
decoration on a non-struct type
decoration on target <id
decoration targeting
decoration=%u
dedicated
default
default constructor closure
default qualifier requires 'uniform', 'buffer', 'in', 'out' or 'shared' storage qualification
default std430 layout for uniform
default value must be at least 1
default value must be at least 1: found
deferTextureLoads
define
define GL_ANY_HIT_SHADER_EXT 1 \n
define GL_ARB_bindless_texture 1\n
define GL_ARB_texture_rectangle 1\n#define GL_ARB_shading_language_420pack 1\n#define GL_ARB_texture_gather 1\n#define GL_ARB_gpu_shader5 1\n#define GL_ARB_separate_shader_objects 1\n#define GL_ARB_compute_shader 1\n#define GL_ARB_tessellation_shader 1\n#define GL_ARB_enhanced_layouts 1\n#define GL_ARB_texture_cube_map_array 1\n#define GL_ARB_texture_multisample 1\n#define GL_ARB_shader_texture_lod 1\n#define GL_ARB_explicit_attrib_location 1\n#define GL_ARB_explicit_uniform_location 1\n#define GL_ARB_shader_image_load_store 1\n#define GL_ARB_shader_atomic_counters 1\n#define GL_ARB_shader_draw_parameters 1\n#define GL_ARB_shader_group_vote 1\n#define GL_ARB_derivative_control 1\n#define GL_ARB_shader_texture_image_samples 1\n#define GL_ARB_viewport_array 1\n#define GL_ARB_gpu_shader_int64 1\n#define GL_ARB_gpu_shader_fp64 1\n#define GL_ARB_shader_ballot 1\n#define GL_ARB_sparse_texture2 1\n#define GL_ARB_sparse_texture_clamp 1\n#define GL_ARB_shader_stencil_export 1\n#define GL_ARB_sample_shading 1\n#define GL_ARB_shader_image_size 1\n#define GL_ARB_shading_language_packing 1\n#define GL_ARB_post_depth_coverage 1\n#define GL_ARB_fragment_shader_interlock 1\n#define GL_ARB_uniform_buffer_object 1\n#define GL_ARB_shader_bit_encoding 1\n#define GL_ARB_shader_storage_buffer_object 1\n#define GL_ARB_texture_query_lod 1\n#define GL_ARB_vertex_attrib_64bit 1\n#define GL_ARB_draw_instanced 1\n#define GL_ARB_fragment_coord_conventions 1\n#define GL_EXT_shader_non_constant_global_initializers 1\n#define GL_EXT_shader_image_load_formatted 1\n#define GL_EXT_post_depth_coverage 1\n#define GL_EXT_control_flow_attributes 1\n#define GL_EXT_nonuniform_qualifier 1\n#define GL_EXT_shader_16bit_storage 1\n#define GL_EXT_shader_8bit_storage 1\n#define GL_EXT_samplerless_texture_functions 1\n#define GL_EXT_scalar_block_layout 1\n#define GL_EXT_fragment_invocation_density 1\n#define GL_EXT_buffer_reference 1\n#define GL_EXT_buffer_reference2 1\n#define GL_EXT_buffer_reference_uvec2 1\n#define GL_EXT_demote_to_helper_invocation 1\n#define GL_EXT_debug_printf 1\n#define GL_EXT_fragment_shading_rate 1\n#define GL_EXT_shared_memory_block 1\n#define GL_EXT_shader_integer_mix 1\n#define GL_KHR_shader_subgroup_basic 1\n#define GL_KHR_shader_subgroup_vote 1\n#define GL_KHR_shader_subgroup_arithmetic 1\n#define GL_KHR_shader_subgroup_ballot 1\n#define GL_KHR_shader_subgroup_shuffle 1\n#define GL_KHR_shader_subgroup_shuffle_relative 1\n#define GL_KHR_shader_subgroup_clustered 1\n#define GL_KHR_shader_subgroup_quad 1\n#define GL_KHR_cooperative_matrix 1\n#define GL_EXT_shader_image_int64 1\n#define GL_EXT_shader_atomic_int64 1\n#define GL_EXT_shader_realtime_clock 1\n#define GL_EXT_ray_tracing 1\n#define GL_EXT_ray_query 1\n#define GL_EXT_ray_flags_primitive_culling 1\n#define GL_EXT_ray_cull_mask 1\n#define GL_EXT_ray_tracing_position_fetch 1\n#define GL_EXT_spirv_intrinsics 1\n#define GL_EXT_mesh_shader 1\n#define GL_AMD_shader_ballot 1\n#define GL_AMD_shader_trinary_minmax 1\n#define GL_AMD_shader_explicit_vertex_parameter 1\n#define GL_AMD_gcn_shader 1\n#define GL_AMD_gpu_shader_half_float 1\n#define GL_AMD_texture_gather_bias_lod 1\n#define GL_AMD_gpu_shader_int16 1\n#define GL_AMD_shader_image_load_store_lod 1\n#define GL_AMD_shader_fragment_mask 1\n#define GL_AMD_gpu_shader_half_float_fetch 1\n#define GL_INTEL_shader_integer_functions2 1\n#define GL_NV_sample_mask_override_coverage 1\n#define GL_NV_geometry_shader_passthrough 1\n#define GL_NV_viewport_array2 1\n#define GL_NV_shader_atomic_int64 1\n#define GL_NV_conservative_raster_underestimation 1\n#define GL_NV_shader_subgroup_partitioned 1\n#define GL_NV_shading_rate_image 1\n#define GL_NV_ray_tracing 1\n#define GL_NV_ray_tracing_motion_blur 1\n#define GL_NV_fragment_shader_barycentric 1\n#define GL_NV_compute_shader_derivatives 1\n#define GL_NV_shader_texture_footprint 1\n#define GL_NV_mesh_shader 1\n#define GL_NV_cooperative_matrix 1\n#define GL_NV_integer_cooperative_matrix 1\n#define GL_NV_shader_invocation_reorder 1\n#define GL_QCOM_image_processing 1\n#define GL_EXT_shader_explicit_arit
define GL_CALLABLE_SHADER_EXT 1 \n
define GL_CLOSEST_HIT_SHADER_EXT 1 \n
define GL_COMPUTE_SHADER 1 \n
define GL_ES 1\n#define GL_FRAGMENT_PRECISION_HIGH 1\n#define GL_OES_texture_3D 1\n#define GL_OES_standard_derivatives 1\n#define GL_EXT_frag_depth 1\n#define GL_OES_EGL_image_external 1\n#define GL_OES_EGL_image_external_essl3 1\n#define GL_EXT_YUV_target 1\n#define GL_EXT_shader_texture_lod 1\n#define GL_EXT_shadow_samplers 1\n#define GL_EXT_fragment_shading_rate 1\n#define GL_ANDROID_extension_pack_es31a 1\n#define GL_OES_sample_variables 1\n#define GL_OES_shader_image_atomic 1\n#define GL_OES_shader_multisample_interpolation 1\n#define GL_OES_texture_storage_multisample_2d_array 1\n#define GL_EXT_geometry_shader 1\n#define GL_EXT_geometry_point_size 1\n#define GL_EXT_gpu_shader5 1\n#define GL_EXT_primitive_bounding_box 1\n#define GL_EXT_shader_io_blocks 1\n#define GL_EXT_tessellation_shader 1\n#define GL_EXT_tessellation_point_size 1\n#define GL_EXT_texture_buffer 1\n#define GL_EXT_texture_cube_map_array 1\n#define GL_EXT_shader_implicit_conversions 1\n#define GL_EXT_shader_integer_mix 1\n#define GL_EXT_blend_func_extended 1\n#define GL_OES_geometry_shader 1\n#define GL_OES_geometry_point_size 1\n#define GL_OES_gpu_shader5 1\n#define GL_OES_primitive_bounding_box 1\n#define GL_OES_shader_io_blocks 1\n#define GL_OES_tessellation_shader 1\n#define GL_OES_tessellation_point_size 1\n#define GL_OES_texture_buffer 1\n#define GL_OES_texture_cube_map_array 1\n#define GL_EXT_shader_non_constant_global_initializers 1\n#define GL_QCOM_image_processing 1\n
define GL_EXT_device_group 1\n#define GL_EXT_multiview 1\n#define GL_NV_shader_sm_builtins 1\n
define GL_EXT_maximal_reconvergence 1\n
define GL_EXT_null_initializer 1\n
define GL_EXT_subgroup_uniform_control_flow 1\n
define GL_EXT_terminate_invocation 1\n
define GL_FRAGMENT_PRECISION_HIGH 1\n
define GL_FRAGMENT_SHADER 1 \n
define GL_GEOMETRY_SHADER 1 \n
define GL_GOOGLE_cpp_style_line_directive 1\n#define GL_GOOGLE_include_directive 1\n#define GL_KHR_blend_equation_advanced 1\n
define GL_INTERSECTION_SHADER_EXT 1 \n
define GL_MESH_SHADER_NV 1 \n
define GL_MISS_SHADER_EXT 1 \n
define GL_NV_shader_noperspective_interpolation 1\n
define GL_OVR_multiview 1\n#define GL_OVR_multiview2 1\n
define GL_RAY_GENERATION_SHADER_EXT 1 \n
define GL_SPIRV
define GL_TASK_SHADER_NV 1 \n
define GL_TESSELLATION_CONTROL_SHADER 1 \n
define GL_TESSELLATION_EVALUATION_SHADER 1 \n
define GL_VERTEX_SHADER 1 \n
define GL_compatibility_profile 1\n
define GL_core_profile 1\n
define SHADER_MODEL_4 1\n
define VULKAN
defined
defined in block
defined" can't be (un)defined
defined" is (un)defined
definition
definition does not dominate its parent
degrees
delete
demote
demote_statement
dependenH9\bu)H
dependencies
dependencyFlags
dependency_infinite
dependency_length
depends on
deprecated in version
deprecated, may be removed in future release
depth layout qualifier
depth resource is null
depthAttachmentFormat
depthAttachmentReadEXT
depthBiasClamp
depthBiasConstantFactor
depthBiasEnable
depthBiasSlopeFactor
depthBoundsTestEnable
depthClampEnable
depthClipEnable
depthCompareOp
depthFailOp
depthResolveMode
depthStencilAttachment
depthStencilResolveAttachment
depthStencilState
depthTestEnable
depthWriteEnable
depth_any
depth_greater
depth_less
depth_unchanged
deque<T> too long
derivatiH9\bu,H
derivative_group
derivative_group_linearNV
derivative_group_linearnv
derivative_group_quadsNV
derivative_group_quadsNV and derivative_group_linearNV
descriptor set
descriptorCount
descriptorSetTable
descriptorType
destination address required
determinant
device or resource busy
deviceType
device_event
devicecoherent
did not find an member index to get underlying data type for struct type
dilatedDepth
dilated_motion_vectors
dimensionality
direct index
direct index for structure
directive must end with a newline
directory not empty
disable
disable_async_shaders
discard
discardRectangleCount
discardRectangleMode
discardRectangles
displayWindow
displayWindow" attribute not found in the header
distance
div-MV
div-mv
divide
divide second child into first child
division by 0
divisor
dlBNvz!/u{1?cmR
dmat2x2
dmat2x3
dmat2x4
dmat3x2
dmat3x3
dmat3x4
dmat4x2
dmat4x3
dmat4x4
do not match
do sub-statement
do-while loops not available
does not apply to floating point images
does not apply to signed integer images
does not apply to this type
does not apply to unsigned integer images
does not dominate its use in block
does not have a
does not match Pointer <id
does not match block's predecessor count
does not match incoming value <id
does not match the Function Type's return type <id
does not match the OpTypeFunction parameter type of the same index
does not match the type that results from indexing into the Composite (Op
does not match the type that results from indexing into the base <id> (Op
does not match the type that results from indexing into the composite (Op
does not meet this requirement
does not operate on this type
does not operate on types containing (u)int16
does not operate on types containing (u)int8
does not operate on types containing float16
does not reference a function
does not reference an OpExtInstImport result Id
does not reference an entry-point
does not represent a value
does not strictly structurally dominate
does not structurally dominate
does not structurally dominate its case construct
domainOrigin
dontEvictTextures
dont_flaH9\bu
dont_unrH9\bu#f
dont_unroll
dot-product
double
double floating-point suffix
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4 );\n
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double);\n
double literal
double matrix
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   ou
double vector
double1
double1x1
double1x2
double1x3
double1x4
double2
double2 conversion not implemented
double2x1
double2x2
double2x3
double2x4
double3
double3x1
double3x2
double3x3
double3x4
double4
double4x1
double4x2
double4x3
double4x4
doubleBitsToInt64
doubleBitsToUint64
doubles cannot start on an odd-numbered component
dqe-KO{/3
dstAccessMask
dstAlphaBlendFactor
dstColorBlendFactor
dstPremultiplied
dstStageMask
dstSubpass
dummyfilename.tif
duplicate label
duplicate macro parameter
duplicate member name
duplicated value
dutch-belgian
dxsupport
dxsupport.cfg
dynamic atexit destructor for
dynamic initializer for
dynamicState
e A_A^A]A
e(A_A^A]A
e0A^A]A
e0A_A^A]A
e1A26b
e8A_A^A]A
e@A_A
e@A_A^A]A
eA+ۉ4$D
eA+ۉt$\fD
eD8d$Au
eDigiCert Assured ID Root CA0
eH91v
eH9h0t\fH
eH9hPt\fH
eH;^Hu
eH;^\bu
ePA_A^A]A
e[1;30m
e\bA_A^A]A
e\tV_log2_uint
e_cullinH9P\bu5
early_and_late_fragment_tests_amd
early_frH9
early_frH9\buxH
early_fragment_tests
earlydepH9\bu
ec3   minInvocationsExclusiveScanAMD(f16vec3);f16vec4   minInvocationsExclusiveScanAMD(f16vec4);int16_t minInvocationsExclusiveScanAMD(int16_t);i16vec2 minInvocationsExclusiveScanAMD(i16vec2);i16vec3 minInvocationsExclusiveScanAMD(i16vec3);i16vec4 minInvocationsExclusiveScanAMD(i16vec4);uint16_t minInvocationsExclusiveScanAMD(uint16_t);u16vec2  minInvocationsExclusiveScanAMD(u16vec2);u16vec3  minInvocationsExclusiveScanAMD(u16vec3);u16vec4  minInvocationsExclusiveScanAMD(u16vec4);float maxInvocationsAMD(float);vec2  maxInvocationsAMD(vec2);vec3  maxInvocationsAMD(vec3);vec4  maxInvocationsAMD(vec4);int   maxInvocationsAMD(int);ivec2 maxInvocationsAMD(ivec2);ivec3 maxInvocationsAMD(ivec3);ivec4 maxInvocationsAMD(ivec4);uint  maxInvocationsAMD(uint);uvec2 maxInvocationsAMD(uvec2);uvec3 maxInvocationsAMD(uvec3);uvec4 maxInvocationsAMD(uvec4);double maxInvocationsAMD(double);dvec2  maxInvocationsAMD(dvec2);dvec3  maxInvocationsAMD(dvec3);dvec4  maxInvocationsAMD(dvec4);int64_t maxInvocationsAMD(int64_t);i64vec2 maxInvocationsAMD(i64vec2);i64vec3 maxInvocationsAMD(i64vec3);i64vec4 maxInvocationsAMD(i64vec4);uint64_t maxInvocationsAMD(uint64_t);u64vec2  maxInvocationsAMD(u64vec2);u64vec3  maxInvocationsAMD(u64vec3);u64vec4  maxInvocationsAMD(u64vec4);float16_t maxInvocationsAMD(float16_t);f16vec2   maxInvocationsAMD(f16vec2);f16vec3   maxInvocationsAMD(f16vec3);f16vec4   maxInvocationsAMD(f16vec4);int16_t maxInvocationsAMD(int16_t);i16vec2 maxInvocationsAMD(i16vec2);i16vec3 maxInvocationsAMD(i16vec3);i16vec4 maxInvocationsAMD(i16vec4);uint16_t maxInvocationsAMD(uint16_t);u16vec2  maxInvocationsAMD(u16vec2);u16vec3  maxInvocationsAMD(u16vec3);u16vec4  maxInvocationsAMD(u16vec4);float maxInvocationsInclusiveScanAMD(float);vec2  maxInvocationsInclusiveScanAMD(vec2);vec3  maxInvocationsInclusiveScanAMD(vec3);vec4  maxInvocationsInclusiveScanAMD(vec4);int   maxInvocationsInclusiveScanAMD(int);ivec2 maxInvocationsInclusiveScanAMD(ivec2);ivec3 maxInvocationsInclusiveScanAMD(ivec3);ivec4 maxInvocationsInclusiveScanAMD(ivec4);uint  maxInvocationsInclusiveScanAMD(uint);uvec2 maxInvocationsInclusiveScanAMD(uvec2);uvec3 maxInvocationsInclusiveScanAMD(uvec3);uvec4 maxInvocationsInclusiveScanAMD(uvec4);double maxInvocationsInclusiveScanAMD(double);dvec2  maxInvocationsInclusiveScanAMD(dvec2);dvec3  maxInvocationsInclusiveScanAMD(dvec3);dvec4  maxInvocationsInclusiveScanAMD(dvec4);int64_t maxInvocationsInclusiveScanAMD(int64_t);i64vec2 maxInvocationsInclusiveScanAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanAMD(i64vec4);uint64_t maxInvocationsInclusiveScanAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanAMD(u64vec4);float16_t maxInvocationsInclusiveScanAMD(float16_t);f16vec2   maxInvocationsInclusiveScanAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanAMD(f16vec4);int16_t maxInvocationsInclusiveScanAMD(int16_t);i16vec2 maxInvocationsInclusiveScanAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanAMD(i16vec4);uint16_t maxInvocationsInclusiveScanAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanAMD(u16vec4);float maxInvocationsExclusiveScanAMD(float);vec2  maxInvocationsExclusiveScanAMD(vec2);vec3  maxInvocationsExclusiveScanAMD(vec3);vec4  maxInvocationsExclusiveScanAMD(vec4);int   maxInvocationsExclusiveScanAMD(int);ivec2 maxInvocationsExclusiveScanAMD(ivec2);ivec3 maxInvocationsExclusiveScanAMD(ivec3);ivec4 maxInvocationsExclusiveScanAMD(ivec4);uint  maxInvocationsExclusiveScanAMD(uint);uvec2 maxInvocationsExclusiveScanAMD(uvec2);uvec3 maxInvocationsExclusiveScanAMD(uvec3);uvec4 maxInvocationsExclusiveScanAMD(uvec4);double maxInvocationsExclusiveScanAMD(double);dvec2  maxInvocationsExclusiveScanAMD(dvec2);dvec3  maxInvocationsExclusiveScanAMD(dvec3);dvec4  maxInvocationsExclusiveScanAMD(dvec4);int64_t ma
edata
eferenceH9Q\buXH
effortblocks = %d\n
egeruUE
eh vector constructor iterator
eh vector copy constructor iterator
eh vector destructor iterator
eh vector vbase constructor iterator
eh vector vbase copy constructor iterator
ehttp://www.digicert.com/CPS0
either the block needs a location, or all members need a location, or no members have a location
element array of
elif after #else
eliminate-dead-branches
eliminate-dead-code-aggressive
eliminate-dead-functions
eliminate-dead-input-components
eliminate-dead-inserts
eliminate-local-single-block
eliminate-local-single-store
else after #else
else statement
empty
empty { } initializer
enable
encodingTry.m_fError < FLT_MAX
end of file
end of input
end of input).\n\t This indicates a poorly specified lexer RULE\n\t or unterminated input element such as: "STRING["]\n
endInvocationInterlockARB
endInvocationInterlockARB() cannot be placed after a return from main
endInvocationInterlockARB() cannot be placed within flow control
endInvocationInterlockARB() must be in a fragment shader
endInvocationInterlockARB() must be in main
endInvocationInterlockARB() must only be called once
endif
engineName
engineVersion
england
english-american
english-aus
english-belize
english-can
english-caribbean
english-ire
english-jamaica
english-nz
english-south africa
english-trinidad y tobago
english-uk
english-us
english-usa
entry point cannot return a value
entry point must return a value for use with patch constant function
entry-point
entryPointOutput
environment
environments
equal
equal_spacing
equality_expression
erVertexH9H\bu\bf
erViewNVH9H
error
error %d : %s
error adding atomic counter to atomic counter block
error adding uniform to default uniform block
error at column
erticesNL9H\bu
estsu_H
ewNVu\r
ewh/?y
exceeds the limit
except for OpLine, which can be mixed with OpPhi
exclusive or second child into first child
exclusive-or
exclusive_or_expression
executable format error
executeCallableEXT
executeCallableKHR
executeCallableNV
execution mode
execution model
exists
exits the
expect an array name
expectEXT
expected
expected %s ...\n
expected 'INF
expected 'c
expected 16, 32, or 64 bits for first type parameter
expected 8, 16, 32, or 64 bit signed or unsigned integer or 16, 32, or 64 bit float type
expected 8, 16, or 32 bits for first type parameter
expected <EOF>\n
expected Aliased or Restrict for PhysicalStorageBuffer pointer
expected AliasedPointer or RestrictPointer for
expected AliasedPointer or RestrictPointer for PhysicalStorageBuffer pointer
expected Comparator to be of type Result Type
expected Data to be a 32 or 64-bit float scalar
expected Data to be a 32 or 64-bit float vector
expected Data to be an int or float vector
expected Data to have 2, 3, 4, 8 or 16 components
expected Format data type to be 8-bit int
expected Format storage class to be UniformConstant
expected Hi and Lo operands to have the same number of components as Result Type
expected Hi and Lo operands to have the same type
expected Interpolant data type to be equal to Result Type
expected Interpolant storage class to be Input
expected Interpolant to be a pointer
expected Intersection ID to be a constant 32-bit int scalar
expected Memory Semantics to be a 32-bit int
expected Memory Semantics to include a Vulkan-supported storage class
expected Memory Semantics to include a Vulkan-supported storage class if Memory Semantics is not None
expected Memory Semantics to include a storage class
expected Named Barrier to be of type OpTypeNamedBarrier
expected Nancode to be an int scalar or vector type
expected Nancode to have the same bit width as Result Type
expected Nancode to have the same number of components as Result Type
expected Offset to be a vector of 2 32-bit floats
expected Pointer to be a pointer to integer or float
expected Pointer to be of type OpTypePointer
expected Pointer to point to a value of 32-bit integer type
expected Pointer to point to a value of type Result Type
expected Ptr data type to be int or float scalar or vector
expected Result Type matrix to have a Column Count of 4
expected Result Type matrix to have a Column Type of 3-component 32-bit float vectors
expected Result Type to be 32-bit float 2-component vector type
expected Result Type to be 32-bit float 3-component vector type
expected Result Type to be 32-bit float scalar type
expected Result Type to be 32-bit int scalar type
expected Result Type to be 64-bit float scalar type
expected Result Type to be OpTypeNamedBarrier
expected Result Type to be a 16 or 32-bit scalar or vector float type
expected Result Type to be a 32-bit float scalar
expected Result Type to be a 32-bit float vector of size 2
expected Result Type to be a 32-bit float vector of size 4
expected Result Type to be a 32-bit int scalar or vector type
expected Result Type to be a 32-bit int type
expected Result Type to be a 32-bit int vector of size 2
expected Result Type to be a float scalar or vector type
expected Result Type to be a float scalar type
expected Result Type to be a float vector type
expected Result Type to be a scalar or a vector with 2, 3, 4, 8 or 16 components
expected Result Type to be a scalar or vector float type
expected Result Type to be a square matrix
expected Result Type to be a struct with two identical
expected Result Type to be a struct with two members
expected Result Type to be an int or float scalar or vector type
expected Result Type to be an int or float vector type
expected Result Type to be an int scalar or vector type
expected Result Type to be bool scalar type
expected Result Type to be float scalar type
expected Result Type to be integer or float scalar type
expected Result Type to be integer scalar type
expected Result Type to be void
expected Result Type to have 2, 3, 4, 8 or 16 components
expected Result Type to have 2, 4, 8 or 16 components
expected Result Type to have 3 components
expected Result Type to have 3 or 4 components
expected Result Type to have no more than 4 components
expected Sample to be 32-bit integer
expected Stream to be constant instruction
expected Stream to be int scalar
expected Subgroup Count to be a 32-bit int
expected Value to be of type Result Type
expected Value type and the type pointed to by Pointer to be the same
expected a single integer argument
expected after 'debug' keyword
expected after 'optimize' keyword
expected all operands to be int scalars or vectors
expected all operands to have the same bit width as
expected all operands to have the same dimension as
expected bit width of Result Type components to be 16, 32 or 64
expected bit width of components of Hi and Lo operands to be half of the bit width of components of Result Type
expected data type of the pointer to be a 32-bit int scalar or vector type
expected data type of the pointer to be equal to Result Type
expected data type of the pointer to have the same number of components as Result Type
expected four type parameters
expected index must be scalar integer
expected literal N to be equal to the number of components of Result Type
expected matrix type as Result Type
expected more operands after
expected newline after header name
expected no arguments
expected no more operands after
expected number after 'c
expected operand
expected operand A type to be equal to Result Type
expected operand B type to be equal to Result Type
expected operand C to be an int scalar or vector
expected operand C to have the same bit width as Result Type
expected operand C to have the same number of components as Result Type
expected operand Child must be class or struct debug type
expected operand Eta to be a float scalar
expected operand Exp data type to be a
expected operand Exp data type to have the same component
expected operand Exp to be a 32-bit int scalar
expected operand Exp to be a pointer
expected operand Exp to have the same component
expected operand Format to be a pointer
expected operand I data type to be equal to Result Type
expected operand I to be a pointer
expected operand I to be of type equal to Result Type
expected operand Indexes is
expected operand Members
expected operand N to be of type equal to Result Type
expected operand Num Elements to be of type size_t
expected operand Offset to be of type size_t
expected operand P component type to be equal to Result Type
expected operand P data type to be 16-bit float scalar
expected operand P data type to be equal to component type of Result Type
expected operand P data type to be equal to the type of operand Data components
expected operand P storage class to be Generic, CrossWorkgroup, Workgroup or Function
expected operand P storage class to be UniformConstant, Generic, CrossWorkgroup, Workgroup or Function
expected operand P to be a 32-bit int scalar
expected operand P to be a float scalar or vector
expected operand P to be a pointer
expected operand P to have no more than 4 components
expected operand P type to be equal to Result Type
expected operand P0 component type to be equal to
expected operand P0 to be of float scalar or vector type
expected operand P0 to have no more than 4 components
expected operand P1 component type to be equal to
expected operand P1 to be of float scalar or vector type
expected operand Parameters must be
expected operand Parent must be class or struct debug type
expected operand Ptr storage class to be CrossWorkgroup
expected operand Ptr to be a pointer
expected operand Shuffle Mask components to have the same bit width as Result Type components
expected operand Shuffle Mask to be an int vector
expected operand Shuffle Mask to have the same number of components as Result Type
expected operand Size is a
expected operand Target must be DebugTypeComposite
expected operand V to be a 32-bit float vector of size 2
expected operand V to be a 32-bit float vector of size 4
expected operand V to be a 32-bit int vector of size 2
expected operand V to be a 64-bit float scalar
expected operand Variable must be a result id of OpVariable or OpConstant or DebugInfoNone
expected operand Variable must be a result id of OpVariable or OpFunctionParameter
expected operand X and Result Type to have equal component types
expected operand X component type to be equal to
expected operand X component type to be equal to Result Type
expected operand X to be a float scalar or vector
expected operand X to be a square matrix
expected operand X to be an int or float vector
expected operand X to be of float scalar or vector type
expected operand X to have 2, 4, 8 or 16 components
expected operand X to have the same number of components as Result Type
expected operand X type to be equal to Result Type
expected operand X type to be equal to members of
expected operand X type to be equal to the first member
expected operand Y type to be equal to Result Type
expected operands P0 and P1 to be of the same type
expected operands P0 and P1 to have the same number of
expected operands X and Y to be of the same type
expected register number after register type
expected register type
expected result type must be a result id of
expected scope to be a 32-bit int
expected spaceN
expected storage class of the pointer to be Generic, CrossWorkgroup, Workgroup or Function
expected symbol, not user-defined type
expected the exponent to be a 32-bit int scalar or vector
expected the exponent to have the same number of components as Result Type
expected the last operand to be a pointer
expected to end 'debug' pragma
expected to end 'optimize' pragma
expected type name
expected type of operand X to be equal to Result Type
expected type of operand Y to be equal to Result Type
expected types of all operands to be equal to Result Type
expected {x, y, z, w} for component
expected: SamplerComparisonState
expected: mul arguments
expected: sampler type
expected: scalar or vector type in texture structure
explicit
explicit interpolation
explicitInterpAMD
exposure resource provided, however auto exposure flag is present
expou
expression
expression after
expression followed by
expression_statement
ext-ms
ext-ms-win-ntuser-dialogbox-l1-1-0
ext-ms-win-ntuser-windowstation-l1-1-0
extensioL9
extension
extension 'all' cannot have 'require' or 'enable' behavior
extension GL_EXT_mesh_shader
extension GL_NV_mesh_shader
extension instruction number
extension is only partially supported
extension name expected
extension name not specified
extension not supported
extension requires SPIR-V version 1.4 or later
extensions
extern
external
external_declaration
extra content after header name
extra tokens
extra tokens -- expected newline
extraPrimitiveOverestimationSize
extraneous semicolon
f %f %f
f %f %f %f
f \f*\f4\f
f t0A
f t3A
f!\fM\f\f
f"\f'\f-\f2\f7\f<\fB\fG\fL\fQ\fW\f\\\fa\ff\fl\fq\fv\f{\f
f"\fD\fP\fT\f
f&\f(\fL\fN\f0
f(A9v\b
f+A+щH A
f03\tEhH
f0\bv\f"\bI
f0\vP!3\b
f16image1D
f16image1DArray
f16image2D
f16image2DArray
f16image2DMS
f16image2DMSArray
f16image2DRect
f16image3D
f16imageBuffer
f16imageCube
f16imageCubeArray
f16mat2
f16mat2x2
f16mat2x3
f16mat2x4
f16mat3
f16mat3x2
f16mat3x3
f16mat3x4
f16mat4
f16mat4x2
f16mat4x3
f16mat4x4
f16sampler1D
f16sampler1DArray
f16sampler1DArrayShadow
f16sampler1DShadow
f16sampler2D
f16sampler2DArray
f16sampler2DArrayShadow
f16sampler2DMS
f16sampler2DMSArray
f16sampler2DRect
f16sampler2DRectShadow
f16sampler2DShadow
f16sampler3D
f16samplerBuffer
f16samplerCube
f16samplerCubeArray
f16samplerCubeArrayShadow
f16samplerCubeShadow
f16subpassInput
f16subpassInputMS
f16texture1D
f16texture1DArray
f16texture2D
f16texture2DArray
f16texture2DMS
f16texture2DMSArray
f16texture2DRect
f16texture3D
f16textureBuffer
f16textureCube
f16textureCubeArray
f16tof32
f16vec
f16vec2
f16vec2 atomicAdd(coherent volatile inout f16vec2, f16vec2);f16vec4 atomicAdd(coherent volatile inout f16vec4, f16vec4);f16vec2 atomicMin(coherent volatile inout f16vec2, f16vec2);f16vec4 atomicMin(coherent volatile inout f16vec4, f16vec4);f16vec2 atomicMax(coherent volatile inout f16vec2, f16vec2);f16vec4 atomicMax(coherent volatile inout f16vec4, f16vec4);f16vec2 atomicExchange(coherent volatile inout f16vec2, f16vec2);f16vec4 atomicExchange(coherent volatile inout f16vec4, f16vec4);\n
f16vec2/4 operation not supported on
f16vec3
f16vec4
f2;K\b
f2\bp\a
f32mat2
f32mat2x2
f32mat2x3
f32mat2x4
f32mat3
f32mat3x2
f32mat3x3
f32mat3x4
f32mat4
f32mat4x2
f32mat4x3
f32mat4x4
f32tof16
f32vec2
f32vec3
f32vec4
f3DiӳA
f64mat2
f64mat2x2
f64mat2x3
f64mat2x4
f64mat3
f64mat3x2
f64mat3x3
f64mat3x4
f64mat4
f64mat4x2
f64mat4x3
f64mat4x4
f64vec2
f64vec3
f64vec3 );f64vec4  reflect(f64vec4 , f64vec4 );float64_t refract(float64_t, float64_t, float64_t);f64vec2  refract(f64vec2 , f64vec2 , float64_t);f64vec3  refract(f64vec3 , f64vec3 , float64_t);f64vec4  refract(f64vec4 , f64vec4 , float64_t);f64mat2 matrixCompMult(f64mat2, f64mat2);f64mat3 matrixCompMult(f64mat3, f64mat3);f64mat4 matrixCompMult(f64mat4, f64mat4);f64mat2x3 matrixCompMult(f64mat2x3, f64mat2x3);f64mat2x4 matrixCompMult(f64mat2x4, f64mat2x4);f64mat3x2 matrixCompMult(f64mat3x2, f64mat3x2);f64mat3x4 matrixCompMult(f64mat3x4, f64mat3x4);f64mat4x2 matrixCompMult(f64mat4x2, f64mat4x2);f64mat4x3 matrixCompMult(f64mat4x3, f64mat4x3);f64mat2   outerProduct(f64vec2, f64vec2);f64mat3   outerProduct(f64vec3, f64vec3);f64mat4   outerProduct(f64vec4, f64vec4);f64mat2x3 outerProduct(f64vec3, f64vec2);f64mat3x2 outerProduct(f64vec2, f64vec3);f64mat2x4 outerProduct(f64vec4, f64vec2);f64mat4x2 outerProduct(f64vec2, f64vec4);f64mat3x4 outerProduct(f64vec4, f64vec3);f64mat4x3 outerProduct(f64vec3, f64vec4);f64mat2   transpose(f64mat2);f64mat3   transpose(f64mat3);f64mat4   transpose(f64mat4);f64mat2x3 transpose(f64mat3x2);f64mat3x2 transpose(f64mat2x3);f64mat2x4 transpose(f64mat4x2);f64mat4x2 transpose(f64mat2x4);f64mat3x4 transpose(f64mat4x3);f64mat4x3 transpose(f64mat3x4);float64_t determinant(f64mat2);float64_t determinant(f64mat3);float64_t determinant(f64mat4);f64mat2 inverse(f64mat2);f64mat3 inverse(f64mat3);f64mat4 inverse(f64mat4);\n
f64vec4
f8B@5\n
f9(t\eL
f9)u4H9j
f9)u:H
f9/t\tH
f9<H}\r
f9=O6F
f9G`u1H
f9G`uCH
f9H:u
f9H:u1
f9H:u\a
f9H\bt\fH
f9N:t\r
f9O:u?H
f9\bu3HcH<H
f9\nt\tH
f9{:tOD
f9{:tUD
f9{\nuh
f9|$ tyf
f9}rtRD
f;G:uI
f;H:tvL
f;N\bt
f;\bt\v3
f;{:wwL
f>\f@\fB\fD\fF\fH\fJ\fL
f@8n-t
f@IcD$\b
f@fE9d
fA9,@u
fA9,Au
fA9,vu
fA9H:u!H
fA9Q\bt9I
fA9\btWI
fA;C\bu>3
fA;C\buB3
fA;F:u-M
fA;\at\rH
fA;v r
fA;v sH
fARBt-A
fAu+H
fB9,Nu
fB94Ou
fB94ht\tH
fB9<@u
fB9<Bu
fB9<Hu
fB9<{u
fB9\fht
fC94wu
fD#\vD$\b
fD9 t\a
fD9 t\fH
fD9 t\vH
fD9!u\b
fD9$Hu
fD9$Ou
fD9$wu
fD9,Au
fD9,pu
fD91uTL9r
fD94Au
fD94Cu
fD94H}aD
fD94Ku
fD94Pu
fD94iu
fD98uOH
fD9;u\a3
fD9<Gu
fD9<Hu
fD9B u}fD9B0uvfD9B@uofD9BPuhfD9B`uafD9BpuZ
fD9H\bt\fH
fD9I:tZD
fD9KrtQD
fD9\f$u\rfE
fD9\nt\rI
fD9\tt(L
fD9d$pt+fD
fD9dD u
fD9dD u1
fD9dD uA
fD9dD uO
fD9l$ZtB
fD9r:u\f
fD9t$5
fD9t$b
fD9x:t3L
fD9{\b
fD;A\bta
fD;K:w{H
fD\vȋC
fDeltaTime
fDeviceToViewDepth
fDigiCert Inc1
fDownscaleFactor
fDynamicResChangeFactor
fE'4d
fE9!fA
fE9,Fu
fE94*t+A
fE94Gu
fE94wu
fE98t
fE9<Au
fE\v\bfA
fG9$Ou
fHX\v5c
fHcK0L
fIfA9
fIfA9l
fJitter
fJitterSequenceLength
fMinAlpha <= fMaxAlpha
fMotionVectorJitterCancellation
fMotionVectorScale
fPreExposure
fPreviousFramePreExposure
fR\bp\a
fReactiveMax
fReactiveScale
fT,\fU-\fV.\fW/\fd0\fe1\fR2\fS3\f$4\f75\f86\f'7\f(8\fX9\fY:\f+;\f,<\fZ=\ff>\fg?\n
fTanHalfFOV
fTcScale
fTcThreshold
fViewSpaceToMetersFactor
fWeightSumBottom > 0.0f
fWeightSumLeft + fWeightSumRight) > 0.0f
fWeightSumLeft > 0.0f
fWeightSumRight > 0.0f
fWeightSumTop + fWeightSumBottom) > 0.0f
fWeightSumTop > 0.0f
fX!t5
f[\tUoA
f[fA9
f\bH;H\br
f\bu\tH
f\nH;H\br4H
f\nH;H\br:H
f\nH;H\br>H
f`\vP\n0
face-forward
faceforward
failOp
failed to insert the global constant buffer
fallback2d.vtex
fallback2darray.vtex
fallback3d.vtex
fallbackcube.vtex
fallbackcubearray.vtex
false case\n
fast_distance
fast_length
fast_normalize
fastcall
fclamp
fcoopmatNV
feature not yet implemented
fetchMicroTriangleVertexBarycentricNV
fetchMicroTriangleVertexPositionNV
ffffff
fffffff
file error
file exists
file too large
filename too long
filename-based #line
filename-based __FILE
filesystem_stdio
filter
filter mode
finalLayout
findLSB
findMSB
finitetmp
first argument must be an interpolant, or interpolant-array element
first member a float scalar or vector, second member a
firstbithigh
firstbitlow
fj \fk!\f
fj".T\\CMek2>x
fl(\fm)\f
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;     out int  gl_SampleMask
flat in  int  gl_SampleMaskIn
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex;\n
flat in highp int gl_ShadingRateEXT
flat in highp uint gl_ViewID_OVR;\n
flat in int gl_Layer;flat in int gl_ViewportIndex
flat in int gl_PrimitiveID
flat in int gl_ShadingRateEXT
flat in ivec2 gl_FragSizeEXT;flat in int   gl_FragInvocationCountEXT
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV;in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV;in vec3 gl_BaryCoordEXT;in vec3 gl_BaryCoordNoPerspEXT
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;flat in highp   uint  gl_WarpsPerSMNV;flat in highp   uint  gl_SMCountNV;flat in highp   uint  gl_WarpIDNV;flat in highp   uint  gl_SMIDNV;flat in highp   uint  gl_CoreIDARM;flat in highp   uint  gl_CoreCountARM;flat in highp   uint  gl_CoreMaxIDARM;flat in highp   uint  gl_WarpIDARM;flat in highp   uint  gl_WarpMaxIDARM;\n
flat/smooth/noperspective
flatten-uniform-arrays
flattenShadow
flattenTemp
float
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4  );\n
float add atomics require the AtomicFloat32AddEXT capability
float add atomics require the AtomicFloat64AddEXT capability
float bias
float cubeFaceIndexAMD(vec3);vec2  cubeFaceCoordAMD(vec3);uint64_t timeAMD();in int gl_SIMDGroupSizeAMD;\n
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m);\n
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4);\n
float gl_CullDistance
float gl_CullDistance[];vec4 gl_SecondaryPositionNV;vec4 gl_PositionPerViewNV
float imageAtomicAdd(volatile coherent
float imageAtomicExchange(volatile coherent
float imageAtomicLoad(readonly volatile coherent
float imageAtomicMax(volatile coherent
float imageAtomicMin(volatile coherent
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2);\n
float interpolateAtVertexAMD(float, uint);vec2  interpolateAtVertexAMD(vec2,  uint);vec3  interpolateAtVertexAMD(vec3,  uint);vec4  interpolateAtVertexAMD(vec4,  uint);int   interpolateAtVertexAMD(int,   uint);ivec2 interpolateAtVertexAMD(ivec2, uint);ivec3 interpolateAtVertexAMD(ivec3, uint);ivec4 interpolateAtVertexAMD(ivec4, uint);uint  interpolateAtVertexAMD(uint,  uint);uvec2 interpolateAtVertexAMD(uvec2, uint);uvec3 interpolateAtVertexAMD(uvec3, uint);uvec4 interpolateAtVertexAMD(uvec4, uint);float16_t interpolateAtVertexAMD(float16_t, uint);f16vec2   interpolateAtVertexAMD(f16vec2,   uint);f16vec3   interpolateAtVertexAMD(f16vec3,   uint);f16vec4   interpolateAtVertexAMD(f16vec4,   uint);\n
float literal needs a decimal point or exponent
float literal too long
float lod
float min/max atomics require the AtomicFloat16MinMaxEXT capability
float min/max atomics require the AtomicFloat32MinMaxEXT capability
float min/max atomics require the AtomicFloat64MinMaxEXT capability
float min3(float, float, float);vec2  min3(vec2,  vec2,  vec2);vec3  min3(vec3,  vec3,  vec3);vec4  min3(vec4,  vec4,  vec4);int   min3(int,   int,   int);ivec2 min3(ivec2, ivec2, ivec2);ivec3 min3(ivec3, ivec3, ivec3);ivec4 min3(ivec4, ivec4, ivec4);uint  min3(uint,  uint,  uint);uvec2 min3(uvec2, uvec2, uvec2);uvec3 min3(uvec3, uvec3, uvec3);uvec4 min3(uvec4, uvec4, uvec4);float max3(float, float, float);vec2  max3(vec2,  vec2,  vec2);vec3  max3(vec3,  vec3,  vec3);vec4  max3(vec4,  vec4,  vec4);int   max3(int,   int,   int);ivec2 max3(ivec2, ivec2, ivec2);ivec3 max3(ivec3, ivec3, ivec3);ivec4 max3(ivec4, ivec4, ivec4);uint  max3(uint,  uint,  uint);uvec2 max3(uvec2, uvec2, uvec2);uvec3 max3(uvec3, uvec3, uvec3);uvec4 max3(uvec4, uvec4, uvec4);float mid3(float, float, float);vec2  mid3(vec2,  vec2,  vec2);vec3  mid3(vec3,  vec3,  vec3);vec4  mid3(vec4,  vec4,  vec4);int   mid3(int,   int,   int);ivec2 mid3(ivec2, ivec2, ivec2);ivec3 mid3(ivec3, ivec3, ivec3);ivec4 mid3(ivec4, ivec4, ivec4);uint  mid3(uint,  uint,  uint);uvec2 mid3(uvec2, uvec2, uvec2);uvec3 mid3(uvec3, uvec3, uvec3);uvec4 mid3(uvec4, uvec4, uvec4);float16_t min3(float16_t, float16_t, float16_t);f16vec2   min3(f16vec2,   f16vec2,   f16vec2);f16vec3   min3(f16vec3,   f16vec3,   f16vec3);f16vec4   min3(f16vec4,   f16vec4,   f16vec4);float16_t max3(float16_t, float16_t, float16_t);f16vec2   max3(f16vec2,   f16vec2,   f16vec2);f16vec3   max3(f16vec3,   f16vec3,   f16vec3);f16vec4   max3(f16vec4,   f16vec4,   f16vec4);float16_t mid3(float16_t, float16_t, float16_t);f16vec2   mid3(f16vec2,   f16vec2,   f16vec2);f16vec3   mid3(f16vec3,   f16vec3,   f16vec3);f16vec4   mid3(f16vec4,   f16vec4,   f16vec4);int16_t   min3(int16_t,   int16_t,   int16_t);i16vec2   min3(i16vec2,   i16vec2,   i16vec2);i16vec3   min3(i16vec3,   i16vec3,   i16vec3);i16vec4   min3(i16vec4,   i16vec4,   i16vec4);int16_t   max3(int16_t,   int16_t,   int16_t);i16vec2   max3(i16vec2,   i16vec2,   i16vec2);i16vec3   max3(i16vec3,   i16vec3,   i16vec3);i16vec4   max3(i16vec4,   i16vec4,   i16vec4);int16_t   mid3(int16_t,   int16_t,   int16_t);i16vec2   mid3(i16vec2,   i16vec2,   i16vec2);i16vec3   mid3(i16vec3,   i16vec3,   i16vec3);i16vec4   mid3(i16vec4,   i16vec4,   i16vec4);uint16_t  min3(uint16_t,  uint16_t,  uint16_t);u16vec2   min3(u16vec2,   u16vec2,   u16vec2);u16vec3   min3(u16vec3,   u16vec3,   u16vec3);u16vec4   min3(u16vec4,   u16vec4,   u16vec4);uint16_t  max3(uint16_t,  uint16_t,  uint16_t);u16vec2   max3(u16vec2,   u16vec2,   u16vec2);u16vec3   max3(u16vec3,   u16vec3,   u16vec3);u16vec4   max3(u16vec4,   u16vec4,   u16vec4);uint16_t  mid3(uint16_t,  uint16_t,  uint16_t);u16vec2   mid3(u16vec2,   u16vec2,   u16vec2);u16vec3   mid3(u16vec3,   u16vec3,   u16vec3);u16vec4   mid3(u16vec4,   u16vec4,   u16vec4);\n
float minInvocationsAMD(float);vec2  minInvocationsAMD(vec2);vec3  minInvocationsAMD(vec3);vec4  minInvocationsAMD(vec4);int   minInvocationsAMD(int);ivec2 minInvocationsAMD(ivec2);ivec3 minInvocationsAMD(ivec3);ivec4 minInvocationsAMD(ivec4);uint  minInvocationsAMD(uint);uvec2 minInvocationsAMD(uvec2);uvec3 minInvocationsAMD(uvec3);uvec4 minInvocationsAMD(uvec4);double minInvocationsAMD(double);dvec2  minInvocationsAMD(dvec2);dvec3  minInvocationsAMD(dvec3);dvec4  minInvocationsAMD(dvec4);int64_t minInvocationsAMD(int64_t);i64vec2 minInvocationsAMD(i64vec2);i64vec3 minInvocationsAMD(i64vec3);i64vec4 minInvocationsAMD(i64vec4);uint64_t minInvocationsAMD(uint64_t);u64vec2  minInvocationsAMD(u64vec2);u64vec3  minInvocationsAMD(u64vec3);u64vec4  minInvocationsAMD(u64vec4);float16_t minInvocationsAMD(float16_t);f16vec2   minInvocationsAMD(f16vec2);f16vec3   minInvocationsAMD(f16vec3);f16vec4   minInvocationsAMD(f16vec4);int16_t minInvocationsAMD(int16_t);i16vec2 minInvocationsAMD(i16vec2);i16vec3 minInvocationsAMD(i16vec3);i16vec4 minInvocationsAMD(i16vec4);uint16_t minInvocationsAMD(uint16_t);u16vec2  minInvocationsAMD(u16vec2);u16vec3  minInvocationsAMD(u16vec3);u16vec4  minInvocationsAMD(u16vec4);float minInvocationsInclusiveScanAMD(float);vec2  minInvocationsInclusiveScanAMD(vec2);vec3  minInvocationsInclusiveScanAMD(vec3);vec4  minInvocationsInclusiveScanAMD(vec4);int   minInvocationsInclusiveScanAMD(int);ivec2 minInvocationsInclusiveScanAMD(ivec2);ivec3 minInvocationsInclusiveScanAMD(ivec3);ivec4 minInvocationsInclusiveScanAMD(ivec4);uint  minInvocationsInclusiveScanAMD(uint);uvec2 minInvocationsInclusiveScanAMD(uvec2);uvec3 minInvocationsInclusiveScanAMD(uvec3);uvec4 minInvocationsInclusiveScanAMD(uvec4);double minInvocationsInclusiveScanAMD(double);dvec2  minInvocationsInclusiveScanAMD(dvec2);dvec3  minInvocationsInclusiveScanAMD(dvec3);dvec4  minInvocationsInclusiveScanAMD(dvec4);int64_t minInvocationsInclusiveScanAMD(int64_t);i64vec2 minInvocationsInclusiveScanAMD(i64vec2);i64vec3 minInvocationsInclusiveScanAMD(i64vec3);i64vec4 minInvocationsInclusiveScanAMD(i64vec4);uint64_t minInvocationsInclusiveScanAMD(uint64_t);u64vec2  minInvocationsInclusiveScanAMD(u64vec2);u64vec3  minInvocationsInclusiveScanAMD(u64vec3);u64vec4  minInvocationsInclusiveScanAMD(u64vec4);float16_t minInvocationsInclusiveScanAMD(float16_t);f16vec2   minInvocationsInclusiveScanAMD(f16vec2);f16vec3   minInvocationsInclusiveScanAMD(f16vec3);f16vec4   minInvocationsInclusiveScanAMD(f16vec4);int16_t minInvocationsInclusiveScanAMD(int16_t);i16vec2 minInvocationsInclusiveScanAMD(i16vec2);i16vec3 minInvocationsInclusiveScanAMD(i16vec3);i16vec4 minInvocationsInclusiveScanAMD(i16vec4);uint16_t minInvocationsInclusiveScanAMD(uint16_t);u16vec2  minInvocationsInclusiveScanAMD(u16vec2);u16vec3  minInvocationsInclusiveScanAMD(u16vec3);u16vec4  minInvocationsInclusiveScanAMD(u16vec4);float minInvocationsExclusiveScanAMD(float);vec2  minInvocationsExclusiveScanAMD(vec2);vec3  minInvocationsExclusiveScanAMD(vec3);vec4  minInvocationsExclusiveScanAMD(vec4);int   minInvocationsExclusiveScanAMD(int);ivec2 minInvocationsExclusiveScanAMD(ivec2);ivec3 minInvocationsExclusiveScanAMD(ivec3);ivec4 minInvocationsExclusiveScanAMD(ivec4);uint  minInvocationsExclusiveScanAMD(uint);uvec2 minInvocationsExclusiveScanAMD(uvec2);uvec3 minInvocationsExclusiveScanAMD(uvec3);uvec4 minInvocationsExclusiveScanAMD(uvec4);double minInvocationsExclusiveScanAMD(double);dvec2  minInvocationsExclusiveScanAMD(dvec2);dvec3  minInvocationsExclusiveScanAMD(dvec3);dvec4  minInvocationsExclusiveScanAMD(dvec4);int64_t minInvocationsExclusiveScanAMD(int64_t);i64vec2 minInvocationsExclusiveScanAMD(i64vec2);i64vec3 minInvocationsExclusiveScanAMD(i64vec3);i64vec4 minInvocationsExclusiveScanAMD(i64vec4);uint64_t minInvocationsExclusiveScanAMD(uint64_t);u64vec2  minInvocationsExclusiveScanAMD(u64vec2);u64vec3  minInvocationsExclusiveScanAMD(u64vec3);u64vec4  minInvocationsExclusiveScanAMD(u64vec4);float16_t minInvocationsExclusiveScanAMD(float16_t);f16vec2   minInvocationsExclusiveScanAMD(f16vec2);f16v
float near;float far;float diff
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x);\n
float texture(sampler2DArrayShadow, vec4, float);float texture(samplerCubeArrayShadow, vec4, float, float);float textureLod(sampler2DArrayShadow, vec4, float);float textureLod(samplerCubeShadow, vec4, float);float textureLod(samplerCubeArrayShadow, vec4, float, float);float textureLodOffset(sampler2DArrayShadow, vec4, float, ivec2);float textureOffset(sampler2DArrayShadow, vec4 , ivec2, float);\n
float vector atomics require the AtomicFloat16VectorNV capability
float);\n
float,float
float1
float16 types can only be in uniform block or buffer storage
float16BitsToInt16
float16BitsToUint16
float16_t
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4
float16_t interpolateAtCentroid(float16_t);f16vec2   interpolateAtCentroid(f16vec2);f16vec3   interpolateAtCentroid(f16vec3);f16vec4   interpolateAtCentroid(f16vec4);float16_t interpolateAtSample(float16_t, int);f16vec2   interpolateAtSample(f16vec2,   int);f16vec3   interpolateAtSample(f16vec3,   int);f16vec4   interpolateAtSample(f16vec4,   int);float16_t interpolateAtOffset(float16_t, f16vec2);f16vec2   interpolateAtOffset(f16vec2,   f16vec2);f16vec3   interpolateAtOffset(f16vec3,   f16vec2);f16vec4   interpolateAtOffset(f16vec4,   f16vec2);\n
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f1
float16_t,float16_t
float1x1
float1x2
float1x3
float1x4
float2
float2x1
float2x2
float2x3
float2x4
float3
float32
float32_t
float32_t matrix
float32_t vector
float3x1
float3x2
float3x3
float3x4
float4
float4x1
float4x2
float4x3
float4x4
float64
float64_t
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4
float64_t fma(float64_t, float64_t, float64_t);f64vec2  fma(f64vec2,  f64vec2,  f64vec2 );f64vec3  fma(f64vec3,  f64vec3,  f64vec3 );f64vec4  fma(f64vec4,  f64vec4,  f64vec4 );\n
float64_t frexp(float64_t, out int);f64vec2  frexp( f64vec2, out ivec2);f64vec3  frexp( f64vec3, out ivec3);f64vec4  frexp( f64vec4, out ivec4);float64_t ldexp(float64_t, int);f64vec2  ldexp( f64vec2, ivec2);f64vec3  ldexp( f64vec3, ivec3);f64vec4  ldexp( f64vec4, ivec4);\n
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2);\n
float64_t matrix
float64_t sqrt(float64_t);f64vec2  sqrt(f64vec2);f64vec3  sqrt(f64vec3);f64vec4  sqrt(f64vec4);float64_t inversesqrt(float64_t);f64vec2  inversesqrt(f64vec2);f64vec3  inversesqrt(f64vec3);f64vec4  inversesqrt(f64vec4);float64_t abs(float64_t);f64vec2  abs(f64vec2);f64vec3  abs(f64vec3);f64vec4  abs(f64vec4);float64_t sign(float64_t);f64vec2  sign(f64vec2);f64vec3  sign(f64vec3);f64vec4  sign(f64vec4);float64_t floor(float64_t);f64vec2  floor(f64vec2);f64vec3  floor(f64vec3);f64vec4  floor(f64vec4);float64_t trunc(float64_t);f64vec2  trunc(f64vec2);f64vec3  trunc(f64vec3);f64vec4  trunc(f64vec4);float64_t round(float64_t);f64vec2  round(f64vec2);f64vec3  round(f64vec3);f64vec4  round(f64vec4);float64_t roundEven(float64_t);f64vec2  roundEven(f64vec2);f64vec3  roundEven(f64vec3);f64vec4  roundEven(f64vec4);float64_t ceil(float64_t);f64vec2  ceil(f64vec2);f64vec3  ceil(f64vec3);f64vec4  ceil(f64vec4);float64_t fract(float64_t);f64vec2  fract(f64vec2);f64vec3  fract(f64vec3);f64vec4  fract(f64vec4);float64_t mod(float64_t, float64_t);f64vec2  mod(f64vec2 , float64_t);f64vec3  mod(f64vec3 , float64_t);f64vec4  mod(f64vec4 , float64_t);f64vec2  mod(f64vec2 , f64vec2);f64vec3  mod(f64vec3 , f64vec3);f64vec4  mod(f64vec4 , f64vec4);float64_t modf(float64_t, out float64_t);f64vec2  modf(f64vec2,  out f64vec2);f64vec3  modf(f64vec3,  out f64vec3);f64vec4  modf(f64vec4,  out f64vec4);float64_t min(float64_t, float64_t);f64vec2  min(f64vec2,  float64_t);f64vec3  min(f64vec3,  float64_t);f64vec4  min(f64vec4,  float64_t);f64vec2  min(f64vec2,  f64vec2);f64vec3  min(f64vec3,  f64vec3);f64vec4  min(f64vec4,  f64vec4);float64_t max(float64_t, float64_t);f64vec2  max(f64vec2 , float64_t);f64vec3  max(f64vec3 , float64_t);f64vec4  max(f64vec4 , float64_t);f64vec2  max(f64vec2 , f64vec2);f64vec3  max(f64vec3 , f64vec3);f64vec4  max(f64vec4 , f64vec4);float64_t clamp(float64_t, float64_t, float64_t);f64vec2  clamp(f64vec2 , float64_t, float64_t);f64vec3  clamp(f64vec3 , float64_t, float64_t);f64vec4  clamp(f64vec4 , float64_t, float64_t);f64vec2  clamp(f64vec2 , f64vec2 , f64vec2);f64vec3  clamp(f64vec3 , f64vec3 , f64vec3);f64vec4  clamp(f64vec4 , f64vec4 , f64vec4);float64_t mix(float64_t, float64_t, float64_t);f64vec2  mix(f64vec2,  f64vec2,  float64_t);f64vec3  mix(f64vec3,  f64vec3,  float64_t);f64vec4  mix(f64vec4,  f64vec4,  float64_t);f64vec2  mix(f64vec2,  f64vec2,  f64vec2);f64vec3  mix(f64vec3,  f64vec3,  f64vec3);f64vec4  mix(f64vec4,  f64vec4,  f64vec4);float64_t mix(float64_t, float64_t, bool);f64vec2  mix(f64vec2,  f64vec2,  bvec2);f64vec3  mix(f64vec3,  f64vec3,  bvec3);f64vec4  mix(f64vec4,  f64vec4,  bvec4);float64_t step(float64_t, float64_t);f64vec2  step(f64vec2 , f64vec2);f64vec3  step(f64vec3 , f64vec3);f64vec4  step(f64vec4 , f64vec4);f64vec2  step(float64_t, f64vec2);f64vec3  step(float64_t, f64vec3);f64vec4  step(float64_t, f64vec4);float64_t smoothstep(float64_t, float64_t, float64_t);f64vec2  smoothstep(f64vec2 , f64vec2 , f64vec2);f64vec3  smoothstep(f64vec3 , f64vec3 , f64vec3);f64vec4  smoothstep(f64vec4 , f64vec4 , f64vec4);f64vec2  smoothstep(float64_t, float64_t, f64vec2);f64vec3  smoothstep(float64_t, float64_t, f64vec3);f64vec4  smoothstep(float64_t, float64_t, f64vec4);float64_t length(float64_t);float64_t length(f64vec2);float64_t length(f64vec3);float64_t length(f64vec4);float64_t distance(float64_t, float64_t);float64_t distance(f64vec2 , f64vec2);float64_t distance(f64vec3 , f64vec3);float64_t distance(f64vec4 , f64vec4);float64_t dot(float64_t, float64_t);float64_t dot(f64vec2 , f64vec2);float64_t dot(f64vec3 , f64vec3);float64_t dot(f64vec4 , f64vec4);f64vec3 cross(f64vec3, f64vec3);float64_t normalize(float64_t);f64vec2  normalize(f64vec2);f64vec3  normalize(f64vec3);f64vec4  normalize(f64vec4);float64_t faceforward(float64_t, float64_t, float64_t);f64vec2  faceforward(f64vec2,  f64vec2,  f64vec2);f64vec3  faceforward(f64vec3,  f64vec3,  f64vec3);f64vec4  faceforward(f64vec4,  f64vec4,  f64vec4);float64_t reflect(float64_t, float64_t);f64vec2  reflect(f64vec2 , f64vec2 );f64vec3  reflect(f64vec3
float64_t vector
floatBitsToInt
floatBitsToUint
floating point predictor
floating-point fast math mode
floating-point rounding mode
floating-point suffix
fmax_common
fmin_common
foliageanimation
for "ReferenceBlackWhite" array
for "StripByteCounts" array
for Entry Point id
for Group 3/4 run arrays
for IFD list
for chopped "StripByteCounts" array
for chopped "StripOffsets" array
for field info array
for header name: %s
for non-parameter, can only apply to 'in' or no storage qualifier
for sampler2DArrayShadow
for strip array
for sub-statement
for target environment
for variable in
for-loop initializer statement
for_init_statement
for_rest_statement
forceExplicitReconstruction
force_recommend_dx11
forcecasH9\bu
forcing 32-bit vector type to non 64-bit scalar
forcing non 32-bit vector type
format
format requires readonly or writeonly memory qualifier
format_r11fg11fb10f
format_r16snorm
format_rH
format_rg8snorm
format_rgba16ui
format_rgba32ui
forward_pointer
fp\vP,rK
fp\vP\n0
fp\v`,rK
fp\v`\n0
fp\v`\n0,rK
fp\v`\nP
fp\v`\nP! \b
fpj,l(n
fr2\\4
fr\bp\a
fractionH9\bu
fractional_even
fractional_even_spacing
fractional_odd_spacing
fragColor
fragcoord
fragment
fragment input block
fragment outputs or tileImageEXTs sharing the same location
fragment shader barycentric
fragment shader interlock layout qualifier
fragment shader output
fragment-shader array-of-array input
fragment-shader array-of-array output
fragment-shader array-of-struct input
fragment-shader struct input
fragment-shader struct input containing an array
fragment-shader struct input containing structure
fragmentFetchAMD
fragmentMaskFetchAMD
fragmentShadingRateAttachment
fragmentShadingRateEnums
fragmentSize
frameTimeDelta is less than 1.0f - this value should be milliseconds (~16.6f for 60fps
free space
french-belgian
french-canadian
french-luxembourg
french-swiss
friend
from a depth image read to result in a scalar float value
frontFace
ftransform
fu"H9\bu
fu'H9\bu
fu)H9\bu
fu/HcL$PI
fu;LcY\fM
fu_E3
full_quaH9\b
full_quads
full_quads qualifier
fully_specified_type
function already has a body
function body can't be in a declarator list
function body can't be in a typedef
function call arguments
function call, method, or subroutine call expected
function cannot take any parameter(s
function control
function does not return a value
function inside function
function name is redeclaration of existing name
function not supported
function not supported in this version; use texture() instead
function parameter attribute
function parameter list
function parameter requires array size
function parameters
function typedefs not implemented
function_call
function_call_generic
function_call_header
function_call_header_no_parameters
function_call_header_with_parameters
function_call_or_method
function_declarator
function_definition
function_header
function_header_with_parameters
function_identifier
function_prototype
future
future already retrieved
future reserved word in ES 300 and keyword in GLSL
fvfD9d
fwidth
fwidthCoarse
fwidthFine
fx\bB\fL
fǉL$DE
fЉT9$H
g16snormH9H\bu\b
gC\bru&o
gH;~`v\tH
g_pEngineServiceMgr is NULL. Display mode information unavailable\n
g_pRenderDevice is NULL. %d adapter(s) available. Iterating adapters %d - %d\n
g_pRenderHardwareConfig is NULL. Display mode information unavailable\n
gb10a2uiH9H\bu\b
gba16snoH9H\bu
gba8snorH9H\bu
generalShader
generic
geometry
geometry shader passthrough
geometry shaders
german-austrian
german-lichtenstein
german-luxembourg
german-swiss
gets larger than 3
gfffffffH
gfffffffH+\vL
gfffffffI
gfffffffI+M\bH
gfffffffL
gfffffffM
gfx-rs community
gfx-rs community Naga
gl_AtomicCounterBlock
gl_BackCH9\bu\r
gl_BackColor
gl_BackSecondaryColor
gl_BaryCoordEXT
gl_BaryCoordNV
gl_BaryCoordNoPerspAMD
gl_BaryCoordNoPerspCentroidAMD
gl_BaryCoordNoPerspEXT
gl_BaryCoordNoPerspNV
gl_BaryCoordNoPerspSampleAMD
gl_BaryCoordPullModelAMD
gl_BaryCoordSmoothAMD
gl_BaryCoordSmoothCentroidAMD
gl_BaryCoordSmoothSampleAMD
gl_BaseInstance
gl_BaseInstanceARB
gl_BaseVertex
gl_BaseVertexARB
gl_BoundingBox
gl_BoundingBoxEXT
gl_BoundingBoxOES
gl_ClipDistance
gl_ClipDistance array size
gl_ClipDistancePerViewNV
gl_ClipDistancePerViewNV array size
gl_ClipVH9\bu
gl_ClipVertex
gl_Color
gl_ColorH9\b
gl_ColorH9\bu\n
gl_CoreCountARM
gl_CoreIDARM
gl_CoreMaxIDARM
gl_CullDistance
gl_CullDistance array size
gl_CullDistancePerViewNV
gl_CullDistancePerViewNV array size
gl_CullMaskEXT
gl_CullPrimitiveEXT
gl_CurrentRayTimeNV
gl_DefaultUniformBlock
gl_DeviceIndex
gl_DrawID
gl_DrawIDARB
gl_FogCoord
gl_FogFragCoord
gl_FragC
gl_FragCH9\b
gl_FragCI
gl_FragCL9
gl_FragColor
gl_FragCoord
gl_FragCoord origin is upper left\n
gl_FragCoord pixel center is integer\n
gl_FragCoord redeclarations must match across shaders
gl_FragD
gl_FragDH
gl_FragDH9\b
gl_FragDL9
gl_FragData
gl_FragDepth
gl_FragDepthEXT
gl_FragFullyCoveredNV
gl_FragInvocationCountEXT
gl_FragSH9
gl_FragSH9\b
gl_FragSH9\bu1H
gl_FragSizeEXT
gl_FragStencilRefARB
gl_FragmentSizeNV
gl_FrontColor
gl_FrontFacing
gl_FrontH9\bu
gl_FrontSecondaryColor
gl_GeometryIndexEXT
gl_GlobalInvocationID
gl_HelperInvocation
gl_HitKindBackFacingMicroTriangleNV
gl_HitKindEXT
gl_HitKindFrontFacingMicroTriangleNV
gl_HitKindNV
gl_HitMicroTriangleVertexBarycentricsNV
gl_HitMicroTriangleVertexPositionsNV
gl_HitTEXT
gl_HitTNV
gl_HitTriangleVertexPositionsEXT
gl_IncomingRayFlagsEXT
gl_IncomingRayFlagsNV
gl_InstaH
gl_InstanceCustomIndexEXT
gl_InstanceCustomIndexNV
gl_InstanceID
gl_InstanceId
gl_InstanceIndex
gl_InvocationID
gl_InvocationsPerPixelNV
gl_LaunchIDEXT
gl_LaunchIDNV
gl_LaunchSizeEXT
gl_LaunchSizeNV
gl_Layer
gl_LayerH9\b
gl_LayerI9
gl_LayerPerViewNV
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_MaxClipDistances
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxComputeWorkGroupSize
gl_MaxCullDistances
gl_MaxDualSourceDrawBuffersEXT
gl_MaxMeshOutputPrimitivesEXT
gl_MaxMeshOutputPrimitivesNV
gl_MaxMeshOutputVerticesEXT
gl_MaxMeshOutputVerticesNV
gl_MaxMeshViewCountNV
gl_MaxMeshWorkGroupSizeEXT
gl_MaxMeshWorkGroupSizeNV
gl_MaxProgramTexelOffset
gl_MaxTaskWorkGroupSizeEXT
gl_MaxTaskWorkGroupSizeNV
gl_MaxTextureCoords
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackBuffers is %d
gl_MaxTransformFeedbackInterleavedComponents
gl_MaxTransformFeedbackInterleavedComponents is
gl_MaxTransformFeedbackInterleavedComponents is %d
gl_MaxViewports
gl_MeshPH9\bu
gl_MeshPerPrimitiveEXT
gl_MeshPerPrimitiveNV
gl_MeshPerVertexEXT
gl_MeshPrimitivesEXT
gl_MeshPrimitivesNV
gl_MeshVL9\bu
gl_MeshVerticesEXT
gl_MeshVerticesNV
gl_MeshViewCountNV
gl_MeshViewIndicesNV
gl_MinProgramTexelOffset
gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_Normal
gl_NumSamples
gl_NumSubgroups
gl_NumWorkGroups
gl_ObjectRayDirectionEXT
gl_ObjectRayDirectionNV
gl_ObjectRayOriginEXT
gl_ObjectRayOriginNV
gl_ObjectToWorld3x4EXT
gl_ObjectToWorldEXT
gl_ObjectToWorldNV
gl_PatchVertices
gl_PatchVerticesIn
gl_PerFrH9\bu
gl_PerVeH9\bu
gl_PerVeH9\bu\r
gl_PointCoord
gl_PointH9\bu\t
gl_PointSize
gl_PositH9
gl_PositH9\b
gl_PositH9\bu
gl_Position
gl_PositionPerViewNV
gl_PrimitiveCountNV
gl_PrimitiveID
gl_PrimitiveIDIn
gl_PrimitiveIndicesNV
gl_PrimitiveLineIndicesEXT
gl_PrimitivePointIndicesEXT
gl_PrimitiveShadingRateEXT
gl_PrimitiveTriangleIndicesEXT
gl_RayFlagsForceOpacityMicromap2StateEXT
gl_RayFlagsSkipAABBEXT
gl_RayFlagsSkipTrianglesEXT
gl_RayTmaxEXT
gl_RayTmaxNV
gl_RayTminEXT
gl_RayTminNV
gl_SIMDGroupSizeAMD
gl_SMCountNV
gl_SMIDNV
gl_SamplH9\bu
gl_SamplH9\buk
gl_SampleID
gl_SampleMask
gl_SampleMaskIn
gl_SamplePosition
gl_ScopeDevice
gl_ScopeInvocation
gl_ScopeSubgroup
gl_ScopeWorkgroup
gl_SeconH9\bu
gl_SecondaryColor
gl_SecondaryFragColorEXT
gl_SecondaryFragDataEXT
gl_SecondaryPositionNV
gl_SecondaryViewportMaskNV
gl_SemanticsAcquire
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsAcquireRelease
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
gl_SemanticsMakeAvailable
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
gl_SemanticsRelaxed
gl_SemanticsRelease
gl_SemanticsRelease must not be used with (image) atomic load
gl_SemanticsVolatile
gl_SemanticsVolatile must not be used with memoryBarrier or controlBarrier
gl_ShadiH9\bu
gl_ShadingRateEXT
gl_ShadingRateFlag2HorizontalPixelsEXT
gl_ShadingRateFlag2VerticalPixelsEXT
gl_ShadingRateFlag4HorizontalPixelsEXT
gl_ShadingRateFlag4VerticalPixelsEXT
gl_StorageSemanticsBuffer
gl_StorageSemanticsImage
gl_StorageSemanticsNone
gl_StorageSemanticsOutput
gl_StorageSemanticsShared
gl_SubGroupEqMaskARB
gl_SubGroupGeMaskARB
gl_SubGroupGtMaskARB
gl_SubGroupInvocationARB
gl_SubGroupLeMaskARB
gl_SubGroupLtMaskARB
gl_SubGroupSizeARB
gl_SubgroupEqMask
gl_SubgroupGeMask
gl_SubgroupGtMask
gl_SubgroupID
gl_SubgroupInvocationID
gl_SubgroupLeMask
gl_SubgroupLtMask
gl_SubgroupSize
gl_TaskCountNV
gl_TessCoord
gl_TessLevelInner
gl_TessLevelOuter
gl_TexCo
gl_TexCoH9\b
gl_TexCoH9\bu
gl_TexCoord
gl_TexCoord array size
gl_VerteH9\bu
gl_Vertex
gl_VertexID
gl_VertexId
gl_VertexIndex
gl_ViewID_OVR
gl_ViewIndex
gl_ViewpH9\b
gl_ViewportIndex
gl_ViewportMask
gl_ViewportMaskPerViewNV
gl_WarpIDARM
gl_WarpIDNV
gl_WarpMaxIDARM
gl_WarpsPerSMNV
gl_WorkGroupID
gl_WorkGroupSize
gl_WorldRayDirectionEXT
gl_WorldRayDirectionNV
gl_WorldRayOriginEXT
gl_WorldRayOriginNV
gl_WorldToObject3x4EXT
gl_WorldToObjectEXT
gl_WorldToObjectNV
gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];\n
gl_in[gl_MaxPatchVertices];\n
gl_out
gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2];\n
gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];patch out highp vec4 gl_BoundingBoxEXT[2];\n
global
global binding
global const initializers must be constant
global storage input qualifier cannot be used in a compute shader
global storage output qualifier cannot be used in a compute shader
global variables) and section 10 (function
global_cbuffer_binding
globallycoherent
glslang_binary_double_output
gpuraytracing
graphicsPipelines
great britain
greaterThan
greaterThanEqual
group operation
groupMemoryBarrier
groups
groupshared
h VWAUAVAWH
h:\\dev\\source2\\main\\src\\thirdparty\\etc2comp\\etclib\\etccodec\\EtcBlock4x4Encoding.h
hA_A^A]A
hG\eiWC
hMcnxE
hT$0fA
hT$@fA
h\bL+(I
h`H9h0t\fH
half float image
half float literal
half float matrix
half float sampler
half float subpass input
half float texture
half float vector
half floating-point suffix
half1x1
half1x2
half1x3
half1x4
half2x1
half2x2
half2x3
half2x4
half3x1
half3x2
half3x3
half3x4
half4x1
half4x2
half4x3
half4x4
halfBitsToInt16
halfBitsToUint16
half_cos
half_divide
half_exp
half_exp10
half_exp2
half_log
half_log10
half_log2
half_powr
half_recip
half_rsqrt
half_sin
half_sqrt
half_tan
has a consumer in a different basic block. The consumer instruction <id> is
has a disallowed initializer & storage class
has bit width
has branches to multiple other case construct targets
has branches to the case construct that targets
has columns
has components with bit width
has conflicting component assignments
has conflicting location assignments
has exceeded the limit
has illegal type.\n
has invalid branch to block
has invalid mask component
has no type
has not been defined
has storage class StorageBuffer or PhysicalStorageBuffer
headed by <ID
header crc mismatch
header name too long
height
helperInvocationEXT
heroseh
heroseh Hero C Compiler
hexadecimal literal too big
hexadecimal literal too long
highp
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth
highp   vec4  gl_Position;mediump float gl_PointSize;highp int gl_InstanceID
highp float gl_FragDepthEXT
highp float near;highp float far;highp float diff
highp int
highp int64_t
highp ivec2 textureSize(__samplerExternal2DY2YEXT, int lod);vec4 texture(__samplerExternal2DY2YEXT, vec2);vec4 texture(__samplerExternal2DY2YEXT, vec2, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec3);vec4 textureProj(__samplerExternal2DY2YEXT, vec3, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec4);vec4 textureProj(__samplerExternal2DY2YEXT, vec4, float bias);vec4 texelFetch(__samplerExternal2DY2YEXT sampler, ivec2, int lod);\n
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod);\n
highp precision qualifier
highp uint
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2);\n
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4);\n
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint);\n
highp uint64_t
highp vec4  gl_Position;highp float gl_PointSize
hit objects cannot be initialized using initializers
hitAttributeEXT
hitAttributeNV
hitAttributeNV block
hitObjectAttributeNV
hitObjectAttributeNV block
hitObjectExecuteShaderNV
hitObjectGetAttributesNV
hitObjectGetCurrentTimeNV
hitObjectGetGeometryIndexNV
hitObjectGetHitKindNV
hitObjectGetInstanceCustomIndexNV
hitObjectGetInstanceIdNV
hitObjectGetObjectRayDirectionNV
hitObjectGetObjectRayOriginNV
hitObjectGetObjectToWorldNV
hitObjectGetPrimitiveIndexNV
hitObjectGetRayTMaxNV
hitObjectGetRayTMinNV
hitObjectGetShaderBindingTableRecordIndexNV
hitObjectGetShaderRecordBufferHandleNV
hitObjectGetWorldRayDirectionNV
hitObjectGetWorldRayOriginNV
hitObjectGetWorldToObjectNV
hitObjectGetbjectToWorldNV
hitObjectIsEmptyNV
hitObjectIsHitNV
hitObjectIsMissNV
hitObjectNV
hitObjectRecordEmptyNV
hitObjectRecordHitMotionNV
hitObjectRecordHitNV
hitObjectRecordHitWithIndexMotionNV
hitObjectRecordHitWithIndexNV
hitObjectRecordMissMotionNV
hitObjectRecordMissNV
hitObjectTraceRayMotionNV
hitObjectTraceRayNV
hitobject shader record NV
hitobjectattribute number
hitobjectshaderrecordnv
hlsl-iomap
hlsl-offsets
hmetic_types 1\n#define GL_EXT_shader_explicit_arithmetic_types_int8 1\n#define GL_EXT_shader_explicit_arithmetic_types_int16 1\n#define GL_EXT_shader_explicit_arithmetic_types_int32 1\n#define GL_EXT_shader_explicit_arithmetic_types_int64 1\n#define GL_EXT_shader_explicit_arithmetic_types_float16 1\n#define GL_EXT_shader_explicit_arithmetic_types_float32 1\n#define GL_EXT_shader_explicit_arithmetic_types_float64 1\n#define GL_EXT_shader_subgroup_extended_types_int8 1\n#define GL_EXT_shader_subgroup_extended_types_int16 1\n#define GL_EXT_shader_subgroup_extended_types_int64 1\n#define GL_EXT_shader_subgroup_extended_types_float16 1\n#define GL_EXT_shader_atomic_float 1\n#define GL_EXT_shader_atomic_float2 1\n#define GL_EXT_fragment_shader_barycentric 1\n#define GL_EXT_shader_quad_control 1\n#define GL_EXT_texture_array 1\n
holland
hong-kong
horizontal differencing
host access qualifier
host unreachable
htl<jt\\<lt4<tt$<wt
http://ocsp.digicert.com0
http://ocsp.digicert.com0A
http://ocsp.digicert.com0C
http://ocsp.digicert.com0X
hyp. cosine
hyp. sine
hyp. tangent
hypot
i small allocs
i16vec2
i16vec3
i16vec4
i32vec2
i32vec3
i32vec4
i64image1D
i64image1DArray
i64image2D
i64image2DArray
i64image2DMS
i64image2DMSArray
i64image2DRect
i64image3D
i64imageBuffer
i64imageCube
i64imageCubeArray
i64vec2
i64vec3
i64vec4
i8P/\f
i8vec2
i8vec3
i8vec4
i?0@I
iBlue >= 0 && iBlue <= 15
iBlue >= 0 && iBlue <= 31
iBlue1 >= (signed)(0+a_uiRadius) && iBlue1 <= (signed)(31 - a_uiRadius
iBlue2 < 0 || iBlue2 > 31
iBlue2 >= (signed)(0 + a_uiRadius) && iBlue2 <= (signed)(31 - a_uiRadius
iD9t$4
iDBlue >= -4 && iDBlue < 4
iDBlue2 >= -4 && iDBlue2 < 4
iDGreen >= -4 && iDGreen < 4
iDGreen2 >= -4 && iDGreen2 < 4
iDRed >= -4 && iDRed < 4
iDRed2 >= -4 && iDRed2 < 4
iDeltaBlue >= -4 && iDeltaBlue <= 3
iDeltaGreen >= -4 && iDeltaGreen <= 3
iDeltaRed >= -4 && iDeltaRed <= 3
iDisplaySize
iFrameIndex
iGreen >= 0 && iGreen <= 15
iGreen >= 0 && iGreen <= 31
iGreen1 >= (signed)(0 + a_uiRadius) && iGreen1 <= (signed)(31 - a_uiRadius
iGreen2 < 0 || iGreen2 > 31
iGreen2 >= (signed)(0 + a_uiRadius) && iGreen2 <= (signed)(31 - a_uiRadius
iGreen2 >= 0 && iGreen2 <= 31
iInputColorResourceDimensions
iL$\f1
iLumaMipDimensions
iLumaMipLevelToUse
iMaxRenderSize
iMulExtended
iRed >= 0 && iRed <= 15
iRed >= 0 && iRed <= 31
iRed1 >= (signed)(0 + a_uiRadius) && iRed1 <= (signed)(31 - a_uiRadius
iRed2 < 0 || iRed2 > 31
iRed2 >= (signed)(0 + a_uiRadius) && iRed2 <= (signed)(31 - a_uiRadius
iRed2 >= 0 && iRed2 <= 31
iRenderSize
i\bV_PrettifyMem
iattachmentEXT
icoopmatNV
idata$2
idata$3
idata$4
idata$5
idata$6
identical
identifier
identifier after
identifier not previously declared
identifier removed
identifier_list
identifiers containing consecutive underscores ("__") are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version < 300
identifiers starting with "gl_" are reserved
if it has storage class Uniform
if the verison is 150 , the EmitStreamVertex and EndStreamPrimitive only support at extension GL_ARB_gpu_shader5
if you are creating a new source language please use value 0 (Unknown) and when ready, add your source language to SPRIV-Headers
if-conversion
if/#ifdef/#ifndef
ifD;M
ifdef
ifndef
ignore
ignoreIntersectionEXT
ignoreIntersectionKHR
ignoreIntersectionNV
ignored
ignoredxsupportcfg
ignoring layout qualifier for uniform
ignoring shader_profile
ignoring unrecognized register type
iimage1D
iimage1DArray
iimage2D
iimage2DArray
iimage2DMS
iimage2DMSArray
iimage2DRect
iimage3D
iimageBuffer
iimageCube
iimageCubeArray
illegal byte sequence
illegal use of escape character
illegal use of type 'void
image
image channel data type
image channel order
image format
image formats must match
image load store
image load-store format
image variables not declared 'writeonly' and without a format layout qualifier
image1D
image1DArray
image2D
image2DArray
image2DMS
image2DMSArray
image2DRect
image3D
imageAtomic
imageAtomicAdd
imageAtomicAdd(volatile coherent
imageAtomicAnd
imageAtomicAnd(volatile coherent
imageAtomicCompSwap
imageAtomicCompSwap(volatile coherent
imageAtomicExchange
imageAtomicExchange(volatile coherent
imageAtomicLoad
imageAtomicLoad(volatile coherent
imageAtomicMax
imageAtomicMax(volatile coherent
imageAtomicMin
imageAtomicMin(volatile coherent
imageAtomicOr
imageAtomicOr(volatile coherent
imageAtomicStore
imageAtomicXor
imageAtomicXor(volatile coherent
imageBuffer
imageCube
imageCubeArray
imageLoad
imageLoadLod
imageLoadLodAMD
imageQuerySamples
imageQuerySize
imageSampleFootprintClampNV
imageSampleFootprintGradNV
imageSampleFootprintLodNV
imageSampleFootprintNV
imageSamples
imageSamples(readonly writeonly volatile coherent
imageSize
imageSize(readonly writeonly volatile coherent
imageStore
imageStoreLod
imageStoreLodAMD
imb;D
img_mip_5
img_mip_shading_change
immediate
immediate sampler state
immutableSamplers
imulExtended
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;\n
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;\n
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in     int   gl_InstanceCustomIndexEXT;in     int   gl_GeometryIndexEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayOriginEXT;in    vec3   gl_ObjectRayDirectionNV;in    vec3   gl_ObjectRayDirectionEXT;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    float  gl_HitTNV;in    float  gl_HitTEXT;in    uint   gl_HitKindNV;in    uint   gl_HitKindEXT;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_ObjectToWorldEXT;in    mat3x4 gl_ObjectToWorld3x4EXT;in    mat4x3 gl_WorldToObjectNV;in    mat4x3 gl_WorldToObjectEXT;in    mat3x4 gl_WorldToObject3x4EXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT;in    float  gl_CurrentRayTimeNV;in    uint   gl_CullMaskEXT;in    vec3   gl_HitTriangleVertexPositionsEXT[3];in    vec3   gl_HitMicroTriangleVertexPositionsNV[3];in    vec2   gl_HitMicroTriangleVertexBarycentricsNV[3];\n
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in     int   gl_InstanceCustomIndexEXT;in     int   gl_GeometryIndexEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayOriginEXT;in    vec3   gl_ObjectRayDirectionNV;in    vec3   gl_ObjectRayDirectionEXT;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in volatile float gl_RayTmaxEXT;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_ObjectToWorldEXT;in    mat3x4 gl_ObjectToWorld3x4EXT;in    mat4x3 gl_WorldToObjectNV;in    mat4x3 gl_WorldToObjectEXT;in    mat3x4 gl_WorldToObject3x4EXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT;in    float  gl_CurrentRayTimeNV;in    uint   gl_CullMaskEXT;\n
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT;in    float  gl_CurrentRayTimeNV;in    uint   gl_CullMaskEXT;\n
in Function or Private storage classes or as function parameters
in Vertex or Tessellation execution model requires the
in Vulkan 1.0 environment Memory Scope is can not be Subgroup without SubgroupBallotKHR or SubgroupVoteKHR declared
in Vulkan environment Execution Scope is limited to
in Vulkan environment Execution scope is limited to
in Vulkan environment Memory Scope is limited to Device, QueueFamily, Workgroup, ShaderCallKHR, Subgroup, or Invocation
in Vulkan environment, OpControlBarrier execution scope must be Subgroup for Fragment, Vertex, Geometry, TessellationEvaluation, RayGeneration, Intersection, AnyHit, ClosestHit, and Miss execution models
in Vulkan environment, Output Storage Class must not be used in GLCompute, RayGenerationKHR, IntersectionKHR, AnyHitKHR, ClosestHitKHR, MissKHR, or CallableKHR execution models
in Vulkan environment, Workgroup Storage Class is limited to MeshNV, TaskNV, and GLCompute execution model
in Vulkan environment, Workgroup execution scope is only for TaskNV, MeshNV, TaskEXT, MeshEXT, TessellationControl, and GLCompute execution models
in bool gl_FragFullyCoveredNV
in buffer %d
in float gl_ClipDistance
in float gl_CullDistance[];bool gl_HelperInvocation
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor
in for stage inputs
in function
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;highp vec4 gl_SecondaryPositionNV;highp vec4 gl_PositionPerViewNV[];} gl_in[gl_MaxPatchVertices];\n
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[];\nin highp int gl_PrimitiveIDIn;in highp int gl_InvocationID;\nout gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;};\nout highp int gl_PrimitiveID;out highp int gl_Layer;\n
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in highp   uint  gl_NumSubgroups;in highp   uint  gl_SubgroupID;\n
in highp int gl_DeviceIndex;\n
in highp int gl_DeviceIndex;in highp int gl_ViewIndex;\n
in highp int gl_DeviceIndex;in int gl_DrawIDARB;\n
in highp int gl_DeviceIndex;in int gl_DrawIDARB;in int gl_ViewIndex;\n
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
in highp int gl_VertexID;in highp int gl_InstanceID
in highp int gl_VertexIndex;in highp int gl_InstanceIndex
in highp uint gl_ViewID_OVR;\n
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB
in int gl_DrawID;\n
in int gl_InvocationID
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in int gl_VertexID;in int gl_InstanceID
in int gl_VertexIndex;in int gl_InstanceIndex
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;in highp   uint  gl_WarpsPerSMNV;in highp   uint  gl_SMCountNV;in highp   uint  gl_WarpIDNV;in highp   uint  gl_SMIDNV;in highp   uint  gl_CoreIDARM;in highp   uint  gl_CoreCountARM;in highp   uint  gl_CoreMaxIDARM;in highp   uint  gl_WarpIDARM;in highp   uint  gl_WarpMaxIDARM;\n
in mediump volatile uint  gl_SubgroupSize;in mediump volatile uint  gl_SubgroupInvocationID;in highp   volatile uvec4 gl_SubgroupEqMask;in highp   volatile uvec4 gl_SubgroupGeMask;in highp   volatile uvec4 gl_SubgroupGtMask;in highp   volatile uvec4 gl_SubgroupLeMask;in highp   volatile uvec4 gl_SubgroupLtMask;in highp    uint  gl_WarpsPerSMNV;in highp    uint  gl_SMCountNV;in highp volatile uint  gl_WarpIDNV;in highp volatile uint  gl_SMIDNV;in highp   uint  gl_CoreIDARM;in highp   uint  gl_CoreCountARM;in highp   uint  gl_CoreMaxIDARM;in highp   uint  gl_WarpIDARM;in highp   uint  gl_WarpMaxIDARM;\n
in semantic instruction cannot be a non-semantic instruction
in the OpenCL environment
in the Vulkan environment
in the structure <id
in vec2 gl_BaryCoordNoPerspAMD;in vec2 gl_BaryCoordNoPerspCentroidAMD;in vec2 gl_BaryCoordNoPerspSampleAMD;in vec2 gl_BaryCoordSmoothAMD;in vec2 gl_BaryCoordSmoothCentroidAMD;in vec2 gl_BaryCoordSmoothSampleAMD;in vec3 gl_BaryCoordPullModelAMD
in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV;in vec3 gl_BaryCoordEXT;in vec3 gl_BaryCoordNoPerspEXT
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord;\n
in xfb mode\n
in/out must appear before const
in/out qualifiers are only valid on parameters
inGrn <= fMaxGrn
inRed <= fMaxRed
inappropriate io control operation
include
inclusive-or
inclusive_or_expression
incompatible version
incomplete method syntax
inconsistent input primitive for array size of
inconsistent output array size of
inconsistent output number of vertices for array size of
incorrect count for field "%s" (%u, expecting %u); tag ignored
incorrect count for field "%s" (%u, expecting %u); tag trimmed
incorrect data check
incorrect directive, expected identifier
incorrect header check
incorrect length check
index
index is larger than Type <id
index layout qualifier on fragment output
index out of range '%d
index pool
indexable
indexes
indirect index
inductive loop index modified
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression
init_declarator_list
initialLayout
initialization mode qualifier
initialization with shared qualifier
initialized declaration
initializer
initializer are not allowed for HitObjectAttributeNV
initializer are not allowed for Input
initializer are not allowed for TaskPayloadWorkgroupEXT
initializer can only be a null initializer
initializer list
initializer requires a variable, not a member
initializer_list
initializers are limited to OpConstantNull in Workgroup storage class
inline
inline-entry-points-exhaustive
inout
input attachment
input block
input blocks cannot be used in a mesh shader
input primitive
input primitive geometry redefinition
inputAssemblyState
inputAttachmentIndex
inputAttachments
inputRate
input_attachment_index
input_prev_color_post_alpha
input_prev_color_pre_alpha
instanceH9\bu\b
instruction
instruction can only have 2 additional operands
instruction in its block
instruction must be a pointer
instructions require Geometry execution model
insufficient memory
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value);\n
int  gl_ViewportMask
int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4);\n
int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int);\n
int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4);\n
int gl_InstanceID
int gl_VertexID
int mix(int, int, bool);ivec2 mix(ivec2, ivec2, bvec2);ivec3 mix(ivec3, ivec3, bvec3);ivec4 mix(ivec4, ivec4, bvec4);uint  mix(uint,  uint,  bool );uvec2 mix(uvec2, uvec2, bvec2);uvec3 mix(uvec3, uvec3, bvec3);uvec4 mix(uvec4, uvec4, bvec4);bool  mix(bool,  bool,  bool );bvec2 mix(bvec2, bvec2, bvec2);bvec3 mix(bvec3, bvec3, bvec3);bvec4 mix(bvec4, bvec4, bvec4);\n
int scalar or vector type
int scalar or vector with the same number of
int sparseImageLoadARB(readonly volatile coherent
int sparseImageLoadLodAMD(readonly volatile coherent
int textureQueryLevels
int);\n
int, int, int
int, int, int);\n
int, int, int, int, int
int16BitsToFloat16
int16BitsToHalf
int16_t
int1x1
int1x2
int1x3
int1x4
int2x1
int2x2
int2x3
int2x4
int32_t
int3x1
int3x2
int3x3
int3x4
int4x1
int4x2
int4x3
int4x4
int64BitsToDouble
int64_t
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(float64_t);i64vec2 doubleBitsToInt64(f64vec2);i64vec3 doubleBitsToInt64(f64vec3);i64vec4 doubleBitsToInt64(f64vec4);uint64_t doubleBitsToUint64(float64_t);u64vec2  doubleBitsToUint64(f64vec2);u64vec3  doubleBitsToUint64(f64vec3);u64vec4  doubleBitsToUint64(f64vec4);float64_t int64BitsToDouble(int64_t);f64vec2  int64BitsToDouble(i64vec2);f64vec3  int64BitsToDouble(i64vec3);f64vec4  int64BitsToDouble(i64vec4);float64_t uint64BitsToDouble(uint64_t);f64vec2  uint64BitsToDouble(u64vec2);f64vec3  uint64BitsToDouble(u64vec3);f64vec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int64_t bitCount(int64_t);i64vec2 bitCount(i64vec2);i64vec3 bitCount(i64vec3);i64vec4 bitCount(i64vec4);in
int8_t
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3
intBitsToFloat
integer
integer less than or equal to 4
integer scalar or vector
integer_expression
interface
interlock ordering
intermVec
internal max is %d
internal_upscaled_color
interp-fixup
interpolant
interpolateAtCentroid
interpolateAtOffset
interpolateAtSample
interpolateAtVertex
interpolateAtVertexAMD
interpolation qualifiers must appear before storage and precision qualifiers
interpolation_qualifier
interrupted
intersection
intersectionShader
into the structure <id
invalid
invalid %d
invalid argument
invalid bit length repeat
invalid bitset position
invalid block type
invalid clip semantic
invalid code -- missing end-of-block
invalid code lengths set
invalid cull semantic
invalid default parameter value
invalid directive
invalid distance code
invalid distance too far back
invalid distances set
invalid domain
invalid handle
invalid hash bucket count
invalid instance
invalid literal/length code
invalid literal/lengths set
invalid map<K, T> key
invalid maxvertexcount
invalid outputcontrolpoints
invalid outputtopology
invalid parameter after default value parameters
invalid partitioning
invalid patch constant function
invalid preprocessor command
invalid seek
invalid stored block lengths
invalid string position
invalid token
invalid unordered_map<K, T> key
invalid vector subscript
invalid window size
invalid_parameter
invariant
invariant qualifier must appear before interpolation, storage, and precision qualifiers
invariant_qualifier
inverse
inverse sqrt
inversesqrt
invert-yH
invocatiH9\bu,f
invocatiH9\buwf
invocation operation
invocations
io error
ionPerViH9C\bu
ionPerViH9H\b
ios_base::badbit set
ios_base::eofbit set
ios_base::failbit set
iostream
iostream stream error
irish-english
is a directory
is a matrix with stride
is a pointer, which is invalid in the Logical addressing model
is a type, not a value
is a void type
is already a merge block for another header
is also the end of the line, so you must check your lexer rules\n
is an improperly straddling vector at offset
is attempting to create memory for an illegal type
is banned when using the Vulkan memory model
is being used for
is contained in the
is decorated with BuiltIn. BuiltIn decoration should only be applied to struct types, variables and constants
is defined more than once
is disallowed
is in an invalid layout section
is invalid
is later referenced by
is missing Binding decoration.\n
is missing Block decoration.\n
is missing Block or BufferBlock decoration.\n
is missing DescriptorSet decoration.\n
is missing a location assignment
is missing an Offset decoration
is missing or void
is not
is not Workgroup or StorageBuffer
is not Workgroup, StorageBuffer, or PhysicalStorageBuffer
is not a bool scalar
is not a boolean type
is not a composite type
is not a constant
is not a constant instruction with scalar integer type
is not a constant integer type
is not a constant or module-scope variable
is not a constant or undef
is not a cooperative matrix type
is not a decoration group
is not a float scalar
is not a float vector
is not a function
is not a function type
is not a logical pointer
is not a pointer
is not a pointer type
is not a predecessor of <id
is not a sampler type
is not a scalar constant type
is not a scalar integer
is not a scalar numeric type
is not a scalar numerical type
is not a scalar type
is not a struct type
is not a type
is not a type id
is not a valid debug type
is not aligned to
is not aligned to scalar element size
is not allowed
is not allowed by OpenCL 1.2
is not allowed by OpenCL 2.0/2.1
is not allowed by OpenCL 2.2
is not allowed by Vulkan 1.0 specification
is not allowed by Vulkan 1.1 specification
is not allowed by Vulkan 1.2 specification
is not an OpLabel
is not an OpString
is not an array
is not an int scalar
is not an int vector
is not an object
is not defined
is not pointer type
is not structurally post dominated by
is not the Entry Point operand of an OpEntryPoint
is not valid for the Vulkan execution environment
is not valid in
is out of bounds for
is out of bounds. The structure has
is referencing
is reserved for future use
is targeted by
is targeted by block
is used by entry point
is used outside of it's defining function
is_double
isampler1D
isampler1DArray
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler2DRect
isampler3D
isamplerBuffer
isamplerCube
isamplerCubeArray
isfinite
isolines
ispc_texcomp.dll
isubpassInput
isubpassInputMS
italian-swiss
iteratioH9\bu+H
iteration_multiple
iteration_statement
iteration_statement_nonattributed
itexture1D
itexture1DArray
itexture2D
itexture2DArray
itexture2DMS
itexture2DMSArray
itexture2DRect
itexture3D
itextureBuffer
itextureCube
itextureCubeArray
its block
ivativesH9P\bubH
ivec2
ivec2/uvec2 convert to texture handle
j\bL+*I
j\bV_PrettifyNum
j`H9j0t\fH
jitterOffset contains value outside of expected range [-1.0, 1.0
jj@0HK4
jtm}S
jump_statement
k VWATAVAWH
k VWAVH
k u\tH
k(9k8|AH
k*:\eEo
k5=\v6
kL@8o(u
kXL9sHu
k\bA8m(u\vI
k\bV_RemoveDotSlashes
keep-uncalled
kernel enqeue flags
kernel profiling info
kernel32
kernel32.dll
kfD;F
kok-IN
kok-in
l!;b\tF
l$ 3\tE
l$ ATAVAWH
l$ AVH
l$ E3
l$ HcA
l$ HcA L
l$ HcA,H
l$ HcA\b3
l$ Lci
l$ VAVAWH
l$ VWATAVAWH
l$ VWATH
l$ VWAUAVAWH
l$ VWAVH
l$ VWAWH
l$ VWH
l$ WATAVH
l$ WAVAWH
l$ fD
l$ tZI
l$$9L
l$(D8k
l$(D;C\b}CIc
l$(H9i\bu9H
l$03҉L
l$0D+ D9
l$0E3
l$0H9v u\bH
l$0H;l$H
l$0Lc
l$0fD
l$0u"I
l$8@8h
l$8tRH
l$8tkM
l$8u&H
l$@D8G\buOH
l$@Hc
l$@Hcl$`L
l$@fA
l$@fD
l$@t\eH
l$@t\n3
l$@u/HcU
l$HA_A^A]A
l$HL9n
l$PD30A
l$PH9w\buzH
l$PHcC H
l$PfD
l$PuqI
l$`D9i8~UL
l$`E9j\b
l$`H9
l$`L9x
l$`fA
l$ht A
l$pHc
l$pL;E
l$pfA
l$ptn8Y-t
l$xD9a(t
l$xu!M
l$xu4H
l-value of swizzle cannot have duplicate components
l-value required
l2|X/gGe
l8rfA
l\b\bfff
last case/default label not followed by statements
layout
layout offset = %d | member alignment = %d
layout qualifier
layout qualifier can not have storage qualifiers
layout rules: member
layout(binding=X) is required
layout, semantic, packoffset, or register
layout-id value
layoutBindingFlags
layoutBindings
layoutBindlessImage
layoutBindlessSampler
layoutSecondaryViewportRelativeOffset
layoutViewportRelative
layout_qualifier
layout_qualifier_id
layout_qualifier_id_list
left angle bracket
left of '[' is not of type array, matrix, or vector
left shift second child into first child
left-shift
length
length() on vectors and matrices
lessThan
lessThanEqual
lexer error %d :\n\t%s at offset %d
lexer->mTokens(): Error: No lexer rules were added to the lexer yet!\n
lgamma
lgamma_r
libraries
libraryInfo
libraryInterface
limitation
limitations
line 1\n
line continuation
lineOrder
lineOrder" attribute not found in the header
lineRasterizationMode
lineStippleFactor
lineStipplePattern
lineWidth
line_strip
lineadj
linear
lines_adjacency
linkage type
list too long
literal integer
literal number
literal string
lld (%s
llu (%s
load cache control
loadOp
local function declaration
local static guard
local static thread guard
local vftable
local vftable constructor closure
local_siH
local_siI
local_size
local_size id
local_size ids
local_size_x_id
local_size_y_id
local_size_z_id
localize
location
location assignment at location
location is too large
location on block member
location qualifier on in/out block
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
location/component/index
locationH9\b
locationH9\bu7
locationH9\bu\b
lock_input_luma
lock_status
lod bias
logicOp
logicOpEnable
logical-and
logical-or
logical-xor
logical_and_expression
logical_or_expression
logical_xor_expression
looks like this:\n\t\t%.*s\n
loop control
loop header
loop or switch
loopu
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4);\n
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4);\n
lowp precision qualifier
lowp uint stencilAttachmentReadEXT();lowp uint stencilAttachmentReadEXT(int);highp float depthAttachmentReadEXT();highp float depthAttachmentReadEXT(int);\n
lu = 0x%lx)\n
lu: Row out of range, max %lu
lu: Sample out of range, max %lu
m / %d / %y
m\bD$HM
m_Format
m_boolDiff
m_boolDiff == true
m_boolDone
m_boolOpaque
m_boolPunchThroughPixels
m_boolTransparent
m_elems
m_fError >= 0.0f
m_mode == MODE_ETC1
m_mode == MODE_H
m_mode == MODE_PLANAR
m_mode == MODE_T
m_nD3DSemanticIndex
m_nInstanceStepRate
m_nOffset
m_nSemanticIndex
m_nSlot
m_nSlotType
m_pD3DSemanticName
m_pName
m_pSemantic
m_pSemanticName
m_pablock
m_paucEncodingBits == nullptr
m_ppAcquireNextImageSemaphores != nullptr
m_ppAcquireNextImageSemaphores[ nSemaphoreIndex ] != VK_NULL_HANDLE
m_uiAddedBlocks < m_uiImageBlocks
m_uiAddedBlocks == m_uiImageBlocks
m_uiEncodingIterations == 0
macro expansion
magFilter
mageSampleFootprintGradClampNV
main function cannot be exported
makemelast
managed vector constructor iterator
managed vector copy constructor iterator
managed vector destructor iterator
map/set too long
mapEntries
mapped binding out of range
mapped set out of range
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3);\n
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);\n
mat2x2
mat2x3
mat2x4
mat3x2
mat3x3
mat3x4
mat4x2
mat4x3
mat4x4
matrix
matrix column component out of range
matrix component swizzle has too many components
matrix component swizzle missing
matrix constructed from matrix can only have one argument
matrix index out of range '%d
matrix mult second child into first child
matrix or packing qualifiers can only be used on a uniform or buffer
matrix row component out of range
matrix scale second child into first child
matrix swizzle
matrix type in buffer
matrix-multiply
matrix-scale
matrix-times-vector
matrixCompMult
max megabytes
max megatexels
maxAnisotropy
maxDepth
maxDepthBounds
maxInvocations
maxInvocationsAMD
maxInvocationsExclusiveScan
maxInvocationsExclusiveScanAMD
maxInvocationsExclusiveScanNonUniform
maxInvocationsExclusiveScanNonUniformAMD
maxInvocationsInclusiveScan
maxInvocationsInclusiveScanAMD
maxInvocationsInclusiveScanNonUniform
maxInvocationsInclusiveScanNonUniformAMD
maxInvocationsNonUniform
maxInvocationsNonUniformAMD
maxLod
maxMemoryAllocationCount
maxPipelineRayHitAttributeSize
maxPipelineRayPayloadSize
maxPipelineRayRecursionDepth
max_iterH9\bu
max_iterations
max_primH9\b
max_primitives
max_processor_count
max_vertH9\b
max_vertH9\buY
max_vertH9\buq
max_vertices
maxanisoH9\bu
maxdxlevel
maximally_reconverges
maximally_reconverges\n
maximum nesting depth exceeded
maxmag
maxtessfH9\bu
maxtexturepoolsize_2gb
maxtextureres
maxtextureres_2gb
maxverteH9\bu
may be removed in future release
may not be decorated with Import Linkage type
may not be targeted by both an OpEntryPoint instruction and an OpFunctionCall instruction
may not exceed
mbcntAMD
mediump
mediump precision qualifier
mediump vec2 unpackHalf2x16(highp uint);\n
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord
mediump vec4 gl_SecondaryFragColorEXT;mediump vec4 gl_SecondaryFragDataEXT[gl_MaxDualSourceDrawBuffersEXT];\n
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint);\n
member
member cannot contradict block
member cannot contradict block (or what block inherited from global
member cannot have a spirv_decorate_id qualifier
member cannot have a spirv_storage_class qualifier
member index
member name
member of block cannot be or contain a cooperative matrix type
member of block cannot be or contain a sampler, image, or atomic_uint type
member of block cannot have a packing layout qualifier
member of nameless block was not redeclared
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
member storage qualifier cannot contradict block storage qualifier
member type
member-function definition
members. Largest valid index is
memory
memory access
memory exhausted
memory model
memory qualifiers cannot be used on this type
memory semantics ID
memoryBarrier
memoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
memoryHeapCount
memoryTypeCount
merge block
merge-blocks
merge-return
mesh shaders
mesh view output array size must be gl_MaxMeshViewCountNV or implicitly sized
message size
method does not accept any arguments
mgL;ew
min megabytes
min megatexels
min10float
min10float1
min10float1x1
min10float1x2
min10float1x3
min10float1x4
min10float2
min10float2x1
min10float2x2
min10float2x3
min10float2x4
min10float3
min10float3x1
min10float3x2
min10float3x3
min10float3x4
min10float4
min10float4x1
min10float4x2
min10float4x3
min10float4x4
min12int
min12int1
min12int1x1
min12int1x2
min12int1x3
min12int1x4
min12int2
min12int2x1
min12int2x2
min12int2x3
min12int2x4
min12int3
min12int3x1
min12int3x2
min12int3x3
min12int3x4
min12int4
min12int4x1
min12int4x2
min12int4x3
min12int4x4
min16float
min16float1
min16float1x1
min16float1x2
min16float1x3
min16float1x4
min16float2
min16float2x1
min16float2x2
min16float2x3
min16float2x4
min16float3
min16float3x1
min16float3x2
min16float3x3
min16float3x4
min16float4
min16float4x1
min16float4x2
min16float4x3
min16float4x4
min16int
min16int1
min16int1x1
min16int1x2
min16int1x3
min16int1x4
min16int2
min16int2x1
min16int2x2
min16int2x3
min16int2x4
min16int3
min16int3x1
min16int3x2
min16int3x3
min16int3x4
min16int4
min16int4x1
min16int4x2
min16int4x3
min16int4x4
min16uint
min16uint1
min16uint1x1
min16uint1x2
min16uint1x3
min16uint1x4
min16uint2
min16uint2x1
min16uint2x2
min16uint2x3
min16uint2x4
min16uint3
min16uint3x1
min16uint3x2
min16uint3x3
min16uint3x4
min16uint4
min16uint4x1
min16uint4x2
min16uint4x3
min16uint4x4
minDepth
minDepthBounds
minFilter
minInvocations
minInvocationsAMD
minInvocationsExclusiveScan
minInvocationsExclusiveScanAMD
minInvocationsExclusiveScanNonUniform
minInvocationsExclusiveScanNonUniformAMD
minInvocationsInclusiveScan
minInvocationsInclusiveScanAMD
minInvocationsInclusiveScanNonUniform
minInvocationsInclusiveScanNonUniformAMD
minInvocationsNonUniform
minInvocationsNonUniformAMD
minLod
minSampleShading
min_iterH9\bu
min_iterations
min_processor_count
minimum stride needed
minkernel\\crts\\ucrt\\inc\\corecrt_internal_strtox.h
minmag
mipLodBias
miplodbiH9\buqf
mipmapMode
mismatched statements
missing
missing #endif
missing after extension name
missing elements...\n
missing parenthesis
missing perprimitiveNV qualifier to redeclared block member
missing perviewNV qualifier to redeclared block member
missing space after macro name
missing user function; linker needs to catch that
mod second child into first child
module
motionVectorScale contains scale value greater than maxRenderSize
motionVectorScale contains zero scale value
motionVectors resource is null
move second child to first child
mscoree.dll
mul() matrix size mismatch
multigpu
multigpu_skip_semaphores
multigpu_skip_transfers
multiple prototypes for same function
multiple times
multiple times is not allowed
multiplicative_expression
multiply second child into first child
multiply32x16
multisample count
multisampleState
must appear between section 9 (types, constants
must appear in a block
must be 0 for a floating-point type
must be 0 or 1
must be 0, 1 or 2
must be 0, 1, 2, or 3
must be DebugTypeMember, DebugFunction, or DebugTypeInheritance
must be OpTypeCooperativeMatrixKHR
must be OpTypeCooperativeMatrixNV
must be OpTypeInt with width 32 and signedness 0
must be OpTypePointer. Found Op
must be a 32-bit integer constant instruction
must be a boolean constant instruction
must be a compile-time constant
must be a constant for WorkgroupSize
must be a constant instruction
must be a constant integer expression
must be a memory object declaration
must be a multiple of size of first component
must be a multiple of the member's alignment
must be a non-negative integer
must be a pointer to an OpTypeStruct
must be a pointer type
must be a positive integer
must be a power of 2
must be a result id of
must be a result id of 32-bit unsigned OpConstant
must be a result id of a lexical scope
must be a scalar integer type
must be a scalar specialization constant
must be a structure type
must be a variable
must be an OpLabel
must be an OpTypeRuntimeArray
must be an array or pointer type
must be an the last member of the struct
must be an unsigned integer scalar
must be at least 1
must be decorated with Block or BufferBlock
must be either LogLUV or LogL
must be explicitly laid out with ArrayStride decorations
must be explicitly laid out with MatrixStride decorations
must be explicitly laid out with Offset decorations
must be explicitly laid out with RowMajor or ColMajor decorations
must be followed by a header name
must be followed by macro name
must be followed by version number
must be greater than 0
must be greater than or equal to 1
must be in the Output storage class
must be in the StorageBuffer, Uniform, or UniformConstant storage class
must be in the UniformConstant storage class
must be in the range [0, 2
must be less than or equal to
must be less than the ID bound
must be of type integer
must be positive
must be present
must be qualified as flat
must by followed by an integral literal
must have a LinkageAttributes decoration with the Import Linkage type
must occur first in shader
must refer only to GLCompute entry-points
must specify 'location' to use 'component
mutable
mutableDescriptorTypeLists
m۶m۶mH
m۶m۶mI
m۶m۶mL
n    near %s\n
n int
n!\nA\na\n
n"I\vc
n$\n)\n/\n5\n;\nA\nG\nM\nS\nY\n_\ne\nk\nq\nw\n|\n
n03>Pu
n4IcW\fI
n8A-t\r8A
n9D$4t
n9L$4t
n@8q,t\v3
nA;^\br
nH9C\btBH
nH;A\br7H
nH;H s\bH
nHG\r}\r
nI9F@t
nI9G@t
nIHDRPLTEIDATIENDtRNScHRMgAMAiCCPsBITsRGBtEXtzTXtiTXtbKGDhISTpHYssPLTtIMEoFFseXIf
nLinked
nResult = vmaBindBufferMemory( m_pVmaAllocator, pMove->dstTmpAllocation, ( VkBuffer ) nNewObject
nResult = vmaBindImageMemory( m_pVmaAllocator, pMove->dstTmpAllocation, ( VkImage ) nNewObject
nResult = vmaCreateBuffer( m_pVmaAllocator, &bufferCreateInfo, &allocInfo, ppVKBufferOut, ppVmaAllocationOut, nullptr
nResult = vmaCreatePool( m_pVmaAllocator, &poolCreateInfo, &pVmaAllocInfo->pool
nSemaphoreIndex < static_cast< int32 >( m_nSwapQueueImageCount
nSemaphoreIndex >= 0
nTries < 10000000
nWashington1
n\f\b\f\n
n\ntTH
n\tCommand Buffer Labels - %d\n
n\tObjects - %d\n
n_multipH9H\bu\ef
name already defined
name too long
named_barrier
nameless block contains a member that already has a name at global scope
names beginning with "GL_" can't be (un)defined
names containing consecutive underscores are reserved
names containing consecutive underscores are reserved, and an error if version < 300
namespace
namespace name
namespace or attribute identifier
nan(ind
nan(snan
native_cos
native_divide
native_exp
native_exp10
native_exp2
native_log
native_log10
native_log2
native_powr
native_recip
native_rsqrt
native_sin
native_sqrt
native_tan
ncd>0
nceIH
near %s
near '%c' :\n
near char(%#02X) :\n
need dictionary
needs a const type
needs a literal integer
network down
network reset
network unreachable
new-zealand
new_locks
nextafter
nf z\nZ
nfA9\tt\tI
ngRateEXH9H\bu\n
no buffer space
no callableDataEXT/callableDataInEXT declared
no child process
no declaration found for redeclaration
no failure reason set
no hitObjectAttributeNV declared
no link
no lock available
no longer supported in
no matching overloaded function found
no memory during frame initialization
no message
no message available
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion
no protocol option
no qualifiers allowed for function return
no rayPayloadEXT/rayPayloadInEXT declared
no shortcircuit
no space on device
no state
no stream resources
no such device
no such device or address
no such field in structure
no such file or directory
no such process
no text for the token
noContraction
noInvocationFragmentShadingRates
no_render_thread_priority
noassert
node is still EOpNull
noinitfallbacktextures
noinline
nointerpolation
noise1
noise2
noise3
noise4
nomultigpu
non-OpPhi instructions
non-built-in variables within a single structure). Structure id
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers
non-constant initializer
non-constant offset argument
non-float shader input/output
non-literal layout-id value
non-matching or non-convertible constant type for const initializer
non-opaque uniform variables need a layout(location=L
non-opaque uniforms outside a block
non-structure type in ConstantBuffer
non-uniform struct contains a sampler or image
non-uniform struct contains an accelerationStructureNV
non-uniform struct contains an atomic_uint
non-void function must return a value
nonCoherentAtomSize
non_coherent_color_attachment_readEXT
non_coherent_color_attachment_readext
non_coherent_depth_attachment_readEXT
non_coherent_depth_attachment_readext
non_coherent_stencil_attachment_readEXT
non_coherent_stencil_attachment_readext
non_uniform_qualifier
nonportable when expanded from macros for preprocessor expression
nonprivate
nonreadaH9\bu
nonuniform
nonuniformEXT
nonwritaH9\bu
noperspective
noreflex
normal
normalizL9\bu
normalize
norwegian
norwegian-bokmal
norwegian-nynorsk
not a directory
not a socket
not a stream
not allowed in nested scope
not allowed in this version
not allowed on block or structure members
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
not allowed when using generating SPIR-V codes
not another case construct, corresponding merge, outer loop merge or outer loop continue
not connected
not enough data provided for construction
not enough memory
not equal to expected
not implemented
not satisfying alignment to
not supported
not supported for current targeted SPIR-V version
not supported for these tokens
not supported for this version or the enabled extensions
not supported in this stage
not supported on this image type
not supported with this profile
notEqual
np9n|u@H
np\t0\bP!\n
np\t`\b0
np\t`\b0\aP
np\t`\bP
np\t`\bP,rK
np\t`\bP\a0
nr\f@\n1
nspose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4);\n
ntelu\vE
nter_intH9H\bu
nter_intH9P\bu\t
ntxzv~u
nu&HcC H
nu(HcC H
null VP8Io passed to VP8GetHeaders
null initializers can't be used on opaque values
null initializers can't size unsized arrays
null-init
nullDescriptor
numImmutableSamplers
numLayoutBindings
numPushConstantRanges
numUsedSgprs
numUsedVgprs
numWorkGroups
num_viewH9\bu5
num_views
number as Result Type
number of invocations must match between compilation units
numeric literal too big
numeric literal too long
numerical scalar type
numthreaH9\bu
nЈT$Hfff
o KPBf
o(u\bH
oD$ fA
oD$IE
oD;o0s
oD>Kg
oL$0fD
o\\$1fA
o\\$IfA
o\tL$`fA
octal and hex sequences not supported
octal literal digit too large
octal literal too big
od$PfA
of Result Type struct
of channels is zero.\n
of debug info extension must appear in a function
of function
of right matrix to be equal
of struct ID
of the
of the left operand
of;wBwiL
offset
offset %d in buffer %d
offset is too large
offset" on block member
offset/align
offset/align can only be used on a uniform or buffer
offsets
offsets argument
ol$0fA
omni callsig
on" or "off" expected after '(' for 'debug' pragma
on" or "off" expected after '(' for 'optimize' pragma
one of the following storage classes: Output, Private
one or more arguments
onethreadpool
only allow constants or variables which are not elements of a composite
only allowed when generating SPIR-V
only allowed when using GLSL for Vulkan
only applies to
only applies to block members, not blocks
only apply to images
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent/shadercallcoherent qualifier allowed
only one precision qualifier allowed
only outermost dimension of an array of arrays can be a specialization constant
only outermost dimension of an array of arrays can be implicitly sized
only simple assignment to non-simple matrix swizzle is supported
only supported on image with format r32f
only supported on image with format r32i or r32ui
only supported on image with format r64i
only supported on image with format r64ui
only supported on integer images
only uniform, buffer, in, or out blocks are supported
opaque
opcodes or together with Image Operand Grad
opencl1.2
opencl1.2embedded
opencl2.0
opencl2.0embedded
opencl2.1
opencl2.1embedded
opencl2.2
opencl2.2embedded
opengl4.0
opengl4.1
opengl4.2
opengl4.3
opengl4.5
operand
operand at word offset
operand index
operand of
operand of the result type
operation at
operation canceled
operation in progress
operation not permitted
operation not supported
operation would block
operator
operator co_await
operator[] on a non-RW texture must be an r-value
optimize
optimize pragma syntax is incorrect
or 0 for an integer type with Signedness of 0
or DebugFunction
or Op
or an array of one of these types
or earlier
or later
or requires extension
or requires extension or capability
or scalar
or scalar type
or second child into first child
or sign extended when Signedness is 1
or storage buffer
or vector
or vector type
origin_uH9
origin_uH9\bukH
origin_upper_left
ortMaskPH9H\b
ot$@fA
out float gl_ClipDistance
out for stage outputs
out gl_MeshPerVertexEXT {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];float gl_CullDistance[];} gl_MeshVerticesEXT
out gl_MeshPerVertexNV {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];float gl_CullDistance[];perviewNV vec4 gl_PositionPerViewNV[];perviewNV float gl_ClipDistancePerViewNV[][];perviewNV float gl_CullDistancePerViewNV[][];} gl_MeshVerticesNV
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize
out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
out highp int gl_PrimitiveShadingRateEXT;\n
out int  gl_ViewportMask
out int gl_FragStencilRefARB
out int gl_PrimitiveID;out int gl_Layer
out int gl_SecondaryViewportMaskNV[];out vec4 gl_SecondaryPositionNV;out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV
out int gl_ViewportIndex
out int gl_ViewportIndex;out int gl_Layer
out int gl_ViewportIndex;out int gl_Layer;\n
out int gl_ViewportMask
out uint gl_PrimitiveCountNV;out uint gl_PrimitiveIndicesNV[];in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;\n
out uint gl_PrimitivePointIndicesEXT[];out uvec2 gl_PrimitiveLineIndicesEXT[];out uvec3 gl_PrimitiveTriangleIndicesEXT[];in    highp uvec3 gl_NumWorkGroups;\n
out uint gl_TaskCountNV;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];in    highp uvec3 gl_NumWorkGroups;\n
out vec4 gl_ClipVertex
out vec4 gl_SecondaryPositionNV;out int  gl_SecondaryViewportMaskNV[];out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV
outReactiveMask
outer product
outerProduct
output
output block
output blocks cannot be used in a task shader
output primitive
output primitive geometry redefinition
output resource is null
output_autocomposition
output_autoreactive
output_prev_color_post_alpha
output_prev_color_pre_alpha
outputcontrolpoints
outputtoH9\bu
overflow mode
overlapping offsets at
overlapping use of location
overlaps previous member ending at offset
overloaded functions must have the same parameter precision qualifiers for argument
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same qualifiers
overloaded functions must have the same return type
overrideH9\buGH
owner dead
p UAVAWH
p UWAVH
p WATAUAVAWH
p)_tH
p+x\b
p0:@5\n
p0R^G
p8>0dR
p8@B@5\n
p?ati_compress_wrapper.dll
pA_A^A
pA_A^A]A
pD$PUL
pH;^X
pHǆp\n
pJ*L`N*Z
pLcI 3
pLevelZe
pNext->sType chain
pPipelineVulkan->m_pBoundShader[ RENDER_PIXEL_SHADER ] && pPipelineVulkan->m_pBoundShader[ RENDER_PIXEL_SHADER ]->GetDebugName() ) ? pPipelineVulkan->m_pBoundShader[ RENDER_PIXEL_SHADER ]->GetDebugName() : "Unknown
p\bHcD3
p\bL+0I
p\bLc
p\n|屮uO
p\r0\fP
p\r`\f0\vP
p\r`\fP
p\r`\fP\v0
p`9p t
pack16
pack32
pack64
packDouble2x32
packFloat2x16
packHalf2x16
packInt2x16
packInt2x32
packInt4x16
packSnorm2x16
packSnorm4x8
packUint2x16
packUint2x32
packUint4x16
packUnorm2x16
packUnorm4x8
pack_matH9
packed
packed vector format
packoffset
packu;f
panorama
panorama_rt
parameter_declaration
parameter_declarator
parameter_type_specifier
parenthesized array constructor not allowed
partial_H9\bu
partial_count
partitioH9\bu
partition
pascal
pass %u\n
passOp
passthroH9\b
passthrough
patch
patch constant function not found
patch out highp vec4 gl_BoundingBox[2];\n
patchConstantOutput
patchConstantResult
patchControlPoints
patchconH9\bu\eH
payload must be a OpVariable of storage class RayPayloadKHR or IncomingRayPayloadKHR
payload number
pbucket->plinkLast->GetNext() == nullptr
pdata
peel_couH9\bu\ef
peel_count
permission denied
perprimitiveEXT
perprimitiveEXT out gl_MeshPerPrimitiveEXT {int gl_PrimitiveID;int gl_Layer;int gl_ViewportIndex;bool gl_CullPrimitiveEXT;int  gl_PrimitiveShadingRateEXT;} gl_MeshPrimitivesEXT
perprimitiveNV
perprimitiveNV out gl_MeshPerPrimitiveNV {int gl_PrimitiveID;int gl_Layer;int gl_ViewportIndex;int gl_ViewportMask[];perviewNV int gl_LayerPerViewNV[];perviewNV int gl_ViewportMaskPerViewNV[][];} gl_MeshPrimitivesNV
pervertexEXT
pervertexNV
perviewNV
physicalDeviceFeatures
pipe_storage
pipelineBindPoint
pipelineLayoutFlags
pipelineLayoutTable
pipelineLayouts
pivotpaint
pixelAspectRatio
pixelAspectRatio" attribute not found in the header
pixel_ceH9
pixel_ceH9\bunH
pixel_center_integer
pixel_interlock_ordered
pixel_interlock_unordered
placement delete closure
placement delete[] closure
pn>6ނB
png/jpg
point_moH9
point_moH9\b
point_mode
pointer definition
points
polygonMode
popcount
portuguese-brazilian
position
positiont
positive integer
possibly multi-word literal integer
possibly multi-word literal number
post depth coverage
post-OpEmitMeshTasksEXT
post-discard
post-ignoreIntersectionKHR
post-return
post-terminate-invocation
post-terminateRayKHR
post_coverage_coverage
post_depth_coverage
post_depth_coverage requires early_fragment_tests
postfix_expression
pp9p$t\aH
pper_lefH9H\bu
pper_lefH9P\bu
pr china
pr-china
pragma
pragma once
pragma use_variable_pointers
preExposure provided as 0.0f which is invalid
precise
precise qualifier must appear first
precise_qualifier
precision
precision qualifier must appear as last qualifier
precision statement
precision_qualifier
predefined names can't be (un)defined
prefetch
preloadtextures
preprocessor directive cannot be preceded by another token
preprocessor evaluation
present
preserveAttachments
previous_dilated_motion_vectors
primary_expression
primitivH9
primitive culling
primitiveRestartEnable
primitive_culling
printf
private
program name unknown
promise already satisfied
protected
protocol error
protocol not supported
provided in OpGroupMemberDecorate for struct <id
provided in OpMemberDecorate for struct <id
provokingVertexMode
ps_4_0
ps_5_0
ps_6_0
pseudo
pt\eL
ptr64
ptry < &a_phalf->m_atry[DifferentialTrys::Half::MAX_TRYS
ptry < &a_phalf->m_atry[IndividualTrys::Half::MAX_TRYS
ptry->m_fError < FLT_MAX
ptryBest1 != nullptr
ptryBest2 != nullptr
public
puerto-rico
purecall
pushConstantRanges
push_conH9
push_conH9\bu
push_constant
qS>g?h3
q\bHcJ\fL
q\bL+1I
qangle
qf;n:wkH
qptNI
quad_derH9
quad_derivatives
quad_derivatives qualifier
quadsnvH9H
qualifier
qualifier has no effect on non-output parameters
quantization mode
queuefamilycoherent
quz-BO
quz-EC
quz-PE
quz-bo
quz-ec
quz-pe
r t9H
r t9I
r u*I
r uHH
r!\r&\r+\r0\r5\r:\r?\rD\rI\rN\rS\rX\r]\rb\rh\rn\rt\rz\r
r&HiA\b
r&HiA\bH
r&HiA\bx
r'w.H
r*HiA\bH
r*HiA\bx
r+w2H
r+گ\n\eL6
r11f_g11f_b10f
r130801120000Z
r16_snorm
r210429000000Z
r211007000000Z
r220323000000Z
r220801000000Z
r230714000000Z
r240423021957Z0
r241009235959Z0a1\v0\t
r311109235959Z0b1\v0\t
r341013235959Z0H1\v0\t
r360428235959Z0i1\v0\t
r370322235959Z0c1\v0\t
r380115120000Z0b1\v0\t
r8_snorm
r;wBH
r@t>I
r@tMH
r@u"A
r@u6H
r@u>I
r@uMH
r@uZH
rAw\aH9L$(r8H
rB\tp\b`\aP
rD+ЋU\eD
rMHiA\b
rN+͉O
rP\f0
rR\tp!"\n
rSwQE3
r\bL+2I
r\bL;\nu3H
r\bSA|X=G
r\bV_StringToBool
r\bu8H
r\buPH
r\fw H9
r\fw)H9
r\r\r\r
r\r\r\rǅl
r\rp\f`\vP
r\tVr.>T
r\vp,rK
r_async_shader_compile_notify_frequency
r_dilatedDepth
r_dilated_motion_vectors
r_dilated_reactive_masks
r_fallback_texture_orange
r_flush_on_pooled_ib_resize
r_frame_sync_enable
r_fullscreen_gamma
r_gpu_mem_stats
r_imgMips
r_input_color_jittered
r_input_depth
r_input_exposure
r_input_motion_vectors
r_input_opaque_only
r_input_prev_color_post_alpha
r_input_prev_color_pre_alpha
r_internal_upscaled_color
r_lanczos_lut
r_lock_input_luma
r_lock_status
r_low_latency
r_low_latency_trigger_flash
r_luma_history
r_max_device_threads
r_max_texture_pool_size
r_mipgen_compute_shader
r_multigpu_num_gpus_found
r_multigpu_num_gpus_used
r_prefer_loop_unrolling
r_prepared_input_color
r_previous_dilated_motion_vectors
r_rcas_input
r_reactive_mask
r_reconstructed_previous_nearest_depth
r_renderdoc_capture_frame
r_renderdoc_capture_window_vulkan
r_renderdoc_open_captures
r_renderdoc_validation_error_capture_limit
r_show_gpu_memory_visualizer
r_sleep
r_texture_budget_dynamic
r_texture_budget_threshold
r_texture_budget_update_period
r_texture_eager_eviction
r_texture_hookup_uses_threadpool
r_texture_nonstreaming_load
r_texture_pool_increase_rate
r_texture_pool_reduce_rate
r_texture_pool_size
r_texture_stream_max_resolution
r_texture_stream_mip_bias
r_texture_stream_resolution_bias
r_texture_stream_resolution_bias_decrease_rate
r_texture_stream_resolution_bias_increase_rate
r_texture_stream_resolution_bias_min
r_texture_stream_resolution_bias_update_period
r_texture_stream_throttle_amount
r_texture_stream_throttle_count
r_texture_stream_throttle_count_over_budget
r_texture_streaming_timesliced
r_texture_streamout_unthrottle_ms
r_texturefilteringquality
r_textures_evict_all
r_transparency_and_composition_mask
r_validate_texture_streaming
r_vma_defrag_algorithm
r_vma_defrag_enabled
r_vma_defrag_max_allocation_count_per_pass
r_vma_defrag_max_allocation_size_per_pass
r_vma_defrag_moves_per_frame
r_vma_defrag_threshold_mb
r_vulkan_render_threads
r_vulkan_sw_cmd_lists
r_wait_on_present
r`\f0\vP
r`\fP\v0
radians
range check failure
rasterizationSamples
rasterizationState
rasterizationStream
rasterizerDiscardEnable
ray flags
ray queries can only be initialized by using the rayQueryInitializeEXT intrinsic
ray query candidate intersection type
ray query committed intersection type
ray query intersection
ray-generation
rayPayloadEXT
rayPayloadInEXT
rayPayloadInNV
rayPayloadInNV block
rayPayloadNV
rayPayloadNV block
rayQuery
rayQueryConfirmIntersectionEXT
rayQueryEXT
rayQueryGenerateIntersectionEXT
rayQueryGetIntersectionBarycentricsEXT
rayQueryGetIntersectionCandidateAABBOpaqueEXT
rayQueryGetIntersectionFrontFaceEXT
rayQueryGetIntersectionGeometryIndexEXT
rayQueryGetIntersectionInstanceCustomIndexEXT
rayQueryGetIntersectionInstanceIdEXT
rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT
rayQueryGetIntersectionObjectRayDirectionEXT
rayQueryGetIntersectionObjectRayOriginEXT
rayQueryGetIntersectionObjectToWorldEXT
rayQueryGetIntersectionPrimitiveIndexEXT
rayQueryGetIntersectionTEXT
rayQueryGetIntersectionTriangleVertexPositionsEXT
rayQueryGetIntersectionTypeEXT
rayQueryGetIntersectionWorldToObjectEXT
rayQueryGetRayFlagsEXT
rayQueryGetRayTMinEXT
rayQueryGetWorldRayDirectionEXT
rayQueryGetWorldRayOriginEXT
rayQueryInitializeEXT
rayQueryKHR
rayQueryProceedEXT
rayQueryTerminateEXT
raytracingPipelines
rb\tp\b0
rcasConfig
rdata
rdata$T
rdata$r
rdata$voltmd
rdata$zETW0
rdata$zETW1
rdata$zETW2
rdata$zETW9
rdata$zzzdbg
reached non-composite type while indexes still remain to be traversed
read only file system
read storage image
readFirstInvocation
readFirstInvocationARB
readInvocation
readInvocationARB
readbuffer_staging_mem
readonly
readpixels_staging_mem
receiver regenerated
reconstructed_previous_nearest_depth
redeclaration
redeclaration of array with a different array dimensions or sizes
redeclaration of array with a different element type
redeclaration of array with size
redeclaration only allowed for override_coverage layout
redeclaration only allowed for viewport_relative or secondary_view_offset layout
redeclaring non-array as array
redefinition
redefinition of built-in function
reductionMode
redundancy-elimination
reference
reference conversion to uvec2
reflect
reflex
refract
register
register number description
registerA
registerf
reinterpret_cast
relational_expression
relativH9H\bu4
relaxed
relaxed-errors
reloc
remainder
remquo
renderPass
renderPasses
renderPasses2
renderSize
renderSize contains zero dimension
renderSize is greater than context maxRenderSize
renderdoc
renderdoc_capture_validation_errors
renderdoc_captures
rendersystem (%s) tracked resources:\n
rendersystemdx11.dll
rendersystemvulkan
rendersystemvulkan.dll
reorderThreadNV
replicated qualifiers
reportIntersectionEXT
reportIntersectionNV
require
required extension not requested
requiredSubgroupSize
requires Fragment execution model
requires Kernel capability
requires RayGenerationKHR execution model
requires RayGenerationKHR, ClosestHitKHR and MissKHR execution models
requires SPIR-V 1.3
requires SPIR-V version
requires Shader capability
requires a previous definition
requires a scalar
requires a type
requires a variable pointers capability
requires a view array dimension
requires an input_attachment_index layout qualifier
requires block, or sampler/image, or atomic-counter type
requires capability InterpolationFunction
requires local_size_x and local_size_y to be multiple of two
requires one of the following extensions
requires one of these capabilities
requires one of these extensions
requires the Vector16 capability
requires total group size to be multiple of four
requires uniform or buffer storage qualifier
requires version
reserve_id
resolve
resolveAttachments
resource
resource deadlock would occur
resource unavailable try again
resourcesystem
restrict
result ID
result out of range
result type (Op
return
return type
returning error texture in CTextureManagerVulkan::GetTextureResource\n
reversebits
rfJBGo
rg16_snorm
rg16ui
rg32ui
rg8_snorm
rgb10_a2
rgb10_a2ui
rgba16
rgba16_snorm
rgba16f
rgba16i
rgba16ui
rgba32f
rgba32i
rgba32ui
rgba8_snorm
rgba8i
rgba8ui
right angle bracket
right shift second child into first child
right-shift
rix of
rmj>zjZ
robustBufferAccess
robustBufferAccess2
robustImageAccess
robustImageAccess2
rotate
roundEven
row_majoL9
row_major
rp\f0!\f
rp\f0\vP
rp\f0\vP!\b
rp\f0\vP!\e\f
rp\fP!\b
rp\fP\v0
rp\f`\v0
rp\f`\v0\nP
rp\f`\vP
rp\f`\vP\n0
rp\f`\vP\n0!\b
rs_nofallback
rspirv
rtc$IAA
rtc$IZZ
rtc$TAA
rtc$TZZ
rtx_allow_blas_compact
rtx_allow_blas_create
ruXLcS\bA
rules: A Block or BufferBlock cannot be nested within another Block or BufferBlock
runtime-sized array of
runtimearr
rw_auto_exposure
rw_dilatedDepth
rw_dilated_motion_vectors
rw_dilated_reactive_masks
rw_img_mip_5
rw_img_mip_shading_change
rw_internal_upscaled_color
rw_lock_input_luma
rw_lock_status
rw_luma_history
rw_new_locks
rw_output_autocomposition
rw_output_autoreactive
rw_output_prev_color_post_alpha
rw_output_prev_color_pre_alpha
rw_prepared_input_color
rw_reconstructed_previous_nearest_depth
rw_spd_global_atomic
rw_upscaled_output
rދD$0f
s     subgroupAdd(%s);\n
s     subgroupAnd(%s);\n
s     subgroupBroadcast(%s, uint);\n
s     subgroupBroadcastFirst(%s);\n
s     subgroupClusteredAdd(%s, uint);\n
s     subgroupClusteredAnd(%s, uint);\n
s     subgroupClusteredMax(%s, uint);\n
s     subgroupClusteredMin(%s, uint);\n
s     subgroupClusteredMul(%s, uint);\n
s     subgroupClusteredOr(%s, uint);\n
s     subgroupClusteredRotate(%s, uint, uint);\n
s     subgroupClusteredXor(%s, uint);\n
s     subgroupExclusiveAdd(%s);\n
s     subgroupExclusiveAnd(%s);\n
s     subgroupExclusiveMax(%s);\n
s     subgroupExclusiveMin(%s);\n
s     subgroupExclusiveMul(%s);\n
s     subgroupExclusiveOr(%s);\n
s     subgroupExclusiveXor(%s);\n
s     subgroupInclusiveAdd(%s);\n
s     subgroupInclusiveAnd(%s);\n
s     subgroupInclusiveMax(%s);\n
s     subgroupInclusiveMin(%s);\n
s     subgroupInclusiveMul(%s);\n
s     subgroupInclusiveOr(%s);\n
s     subgroupInclusiveXor(%s);\n
s     subgroupMax(%s);\n
s     subgroupMin(%s);\n
s     subgroupMul(%s);\n
s     subgroupOr(%s);\n
s     subgroupPartitionedAddNV(%s, uvec4 ballot);\n
s     subgroupPartitionedAndNV(%s, uvec4 ballot);\n
s     subgroupPartitionedExclusiveAddNV(%s, uvec4 ballot);\n
s     subgroupPartitionedExclusiveAndNV(%s, uvec4 ballot);\n
s     subgroupPartitionedExclusiveMaxNV(%s, uvec4 ballot);\n
s     subgroupPartitionedExclusiveMinNV(%s, uvec4 ballot);\n
s     subgroupPartitionedExclusiveMulNV(%s, uvec4 ballot);\n
s     subgroupPartitionedExclusiveOrNV(%s, uvec4 ballot);\n
s     subgroupPartitionedExclusiveXorNV(%s, uvec4 ballot);\n
s     subgroupPartitionedInclusiveAddNV(%s, uvec4 ballot);\n
s     subgroupPartitionedInclusiveAndNV(%s, uvec4 ballot);\n
s     subgroupPartitionedInclusiveMaxNV(%s, uvec4 ballot);\n
s     subgroupPartitionedInclusiveMinNV(%s, uvec4 ballot);\n
s     subgroupPartitionedInclusiveMulNV(%s, uvec4 ballot);\n
s     subgroupPartitionedInclusiveOrNV(%s, uvec4 ballot);\n
s     subgroupPartitionedInclusiveXorNV(%s, uvec4 ballot);\n
s     subgroupPartitionedMaxNV(%s, uvec4 ballot);\n
s     subgroupPartitionedMinNV(%s, uvec4 ballot);\n
s     subgroupPartitionedMulNV(%s, uvec4 ballot);\n
s     subgroupPartitionedOrNV(%s, uvec4 ballot);\n
s     subgroupPartitionedXorNV(%s, uvec4 ballot);\n
s     subgroupQuadBroadcast(%s, uint);\n
s     subgroupQuadSwapDiagonal(%s);\n
s     subgroupQuadSwapHorizontal(%s);\n
s     subgroupQuadSwapVertical(%s);\n
s     subgroupRotate(%s, uint);\n
s     subgroupShuffle(%s, uint);\n
s     subgroupShuffleDown(%s, uint delta);\n
s     subgroupShuffleUp(%s, uint delta);\n
s     subgroupShuffleXor(%s, uint);\n
s     subgroupXor(%s);\n
s %s decoding is not implemented
s %s encoding is not implemented
s (%d
s (%s usage %s
s - encountered shader with requiredSubgroupSize (%d), but VK_EXT_subgroup_size_control not enabled.  Will be ignored, might cause rendering artifacts because device subgroup size is (%d).\n
s - encountered shader with requiredSubgroupSize (%d), but maxSubgroupSize is (%d).  Will be ignored, might cause rendering artifacts.\n
s / %s MB (non-evictable: %s MB)\n
s / %s MB\n
s L9s(tZA
s Type must be a scalar or vector type
s WATAUAVAWH
s WAVAWH
s allocation count overflow
s allocation count overflow( %llu > %llu )\n
s array element type
s array length
s called on an immutable constant buffer\n
s callgraph contains function <id
s component type
s compression support is not configured
s free space
s function parameter count is not zero
s function return type is not void
s layout
s layout does not match Object <id
s matrix column component type
s matrix column count
s matrix column type
s member count
s member type
s parameter type
s profile; removed in version %d
s return type
s struct member count
s s~H
s type
s type does not match Function <id
s type does not match Object <id
s type does not match OpFunction's return type
s type does not match Result Type <id
s type does not match Source <id
s type is void
s vector component count
s vector element type
s with storage tileImageEXT
s": Bad mode
s": Information lost writing value (%g) as (unsigned) RATIONAL
s%s%s
s' not supported, vkAllocateDescriptorSets validation errors may be reported.\n
s(LcC LcS\bE
s): ADD %s = %s\n
s): Setting %s to %s\n
s0L9s8tZA
s2-d encoding
s5fE9
s8L9s@tqA
s: %s
s: %s at line %u of %s %u (got %u, expected %u
s: Bad code word at line %u of %s %u (x %u
s: Bad field type %d for "%s
s: Bad value %d for "%s" tag
s: Bad value %u for "%s" tag
s: Bogus "%s" field, ignoring and calculating from imagelength
s: Can not read TIFF directory
s: Can not read TIFF directory count
s: Can't concatenate input layouts with more than %d fields total!\n
s: Cannot determine size of unknown tag type %d
s: Cannot modify tag "%s" while writing
s: Data buffer too small to hold strip %lu
s: Decoding error at scanline %d, %s
s: Encoder error: %s
s: Error writing SubIFD directory link
s: Failed to allocate space for list of custom values
s: Failed to read directory at offset %u
s: Invalid %stag "%s" (not supported by codec
s: Invalid InkNames value; expecting %d names, found %d
s: Invalid capacity %u\n
s: Invalid grow amount %d\n
s: Invalid lock state %d\n
s: Invalid strip byte count %lu, strip %lu
s: No space for Group 3/4 reference line
s: No space for LogLuv state block
s: No space for SGILog translation buffer
s: No space for data buffer at scanline %ld
s: No space for state block
s: Not enough data at scanline %d (short %d bytes
s: Out of memory (TIFF structure
s: Premature EOF at line %u of %s %u (x %u
s: Rational with zero denominator (num = %u
s: Read error at scanline %lu, strip %lu; got %lu bytes, expected %lu
s: Read error at scanline %lu; got %lu bytes, expected %lu
s: Read error on strip %lu; got %lu bytes, expected %lu
s: Seek error accessing TIFF directory
s: Seek error at scanline %lu, strip %lu
s: Sorry, cannot nest SubIFDs
s: TIFF directory is missing required "%s" field
s: TIFF directory is missing required "%s" field, calculating from imagelength
s: Unable to compute hash for shader module\n
s: Uncompressed data (not supported) at line %u of %s %u (x %u
s: Unknown %stag %u
s: Wrong "%s" field, ignoring and calculating from imagelength
s: cannot handle zero number of %s
s: cannot handle zero scanline size
s: cannot handle zero strip size
s: cannot handle zero tile size
s: invalid TIFF directory; tags are not sorted in ascending order
s: unknown field with tag %d (0x%x) encountered
s: wrong data type %d for "%s"; tag ignored
s: zlib error: %s
s=HiC
s@L9sHtrA
sEM9E\b
sEM9G\b
sEOL padding
sHL9s`t[A
sKM9G\b
sPL9sXtnA
sWD9y\btQI
sXL9s0t`A
sXL9{Hu
s[line %d:%d
s\\ax
s\bH#}0H
s\bV_StringToColor
s_ColorTargetImageView
s_ColorTargetImageViewSrgb
s_CubeArrayImageView
s_CubeArrayImageViewSrgb
s_DepthStencilViewSrgb
s_ImageView
s_ImageViewSrgb
s_LinearClamp
s_PerArraySliceColorTargetImageView
s_PerArraySliceColorTargetImageViewSrgb
s_PerArraySliceDepthStencilView
s_PerMipLevelImageView
s_PerMipLevelImageViewSrgb
s_PerMipLevelUAVCompressedBlockView
s_abs_diff
s_add_sat
s_clamp
s_hadd
s_mad24
s_mad_hi
s_mad_sat
s_mul24
s_mul_hi
s_rhadd
s_sub_sat
s_upsample
saL;D
sample
sample mask override coverage
sampleCount
sampleMask
sampleResultShadow
sampleShadingEnable
sampleStructTemp
sample_interlock_ordered
sample_interlock_unordered
sampled_image
sampler
sampler addressing mode
sampler assignment for bindless texture
sampler binding not less than gl_MaxCombinedTextureImageUnits
sampler constructor must appear at point of use
sampler conversion to uvec2
sampler filter mode
sampler or image can be used as return type only when the extension GL_ARB_bindless_texture enabled
sampler or image cannot be used as return type when generating SPIR-V
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a *texture* type matching the dimensionality and sampled type of the constructor
sampler-constructor first argument must be a scalar *texture* type
sampler-constructor requires the extension GL_ARB_bindless_texture enabled
sampler-constructor requires the input to be ivec2 or uvec2
sampler-constructor requires two arguments
sampler-constructor second argument must be a scalar sampler or samplerShadow
sampler/image
sampler/image types can only be used in uniform variables or function parameters
sampler/texture/image requires layout(binding=X
sampler1D
sampler1DArray
sampler1DArrayShadow
sampler1DShadow
sampler2D
sampler2DArray
sampler2DArrayShadow
sampler2DMS
sampler2DMSArray
sampler2DRect
sampler2DRectShadow
sampler2DShadow
sampler3D
sampler3DRect
samplerBuffer
samplerCUBE
samplerCube
samplerCubeArray
samplerCubeArrayShadow
samplerCubeShadow
samplerExternal2DY2YEXT
samplerExternalOES
samplerH9Q\buKH
samplerShadow
sampler_state
samplers
samplers and atomic_uints cannot be output parameters
samples
saturate
says it has
scalar
scalar block layout
scalar deleting destructor
scalar expected one element
scalar integer expression required
scalar or vector float type members
scalar or vector type
scalar swizzle
scalar type
scalar, vector, or struct type
scalar-replacement=%u
scalarCopy
scanline
scissorCount
scissors
scope ID
screenWindowCenter
screenWindowCenter" attribute not found in the header
screenWindowWidth
screenWindowWidth" attribute not found in the header
scroll
secondary_view_offset
section
select
selecting output stream
selection
selection control
selection header
selection_rest_statement
selection_statement
selection_statement_nonattributed
semEqual and semUnequal must either both include gl_SemanticsVolatile or neither
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
semicolon
sequence number %d too low in sheet file!!!\n
set is too large
setLayouts
setting
setting.CentroidHack
setting.DXLevel
setting.DisableShaderOptimizations
setting.HasBrokenPipelineStats
setting.MaxDXLevel
setting.MinDXLevel
setting.PreferHardwareSync
setting.PreferTexturesInHWMemory
setting.PreferZPrepass
setting.SuppressPixelShaderCentroidHackFixup
setting.Unsupported
setting.coop_fullscreen
setting.defaultres
setting.defaultresheight
setting.fullscreen
setting.fullscreen_min_on_focus_loss
setting.high_dpi
setting.knowndevice
setting.mat_vsync
setting.maxdxlevel
setting.nowindowborder
setting.recommendedheight
setting.recommendedwidth
setting.refreshrate_denominator
setting.refreshrate_numerator
setting.resettodefaults
setting.shaderquality
shader record EXT
shader record NV
shader thread state machine violation
shaderModules
shaderRecordNV
shadercache\\vulkan
shadercallcoherent
shaderdebugging
shaderreI
shaderrecordext
shaders.cache
shaderstats
shading rate
shadingRateAttachmentTexelSize
shading_rate_interlock_ordered
shading_rate_interlock_unordered
shadow1D
shadow1DArray
shadow1DArrayLod
shadow1DGradARB
shadow1DLod
shadow1DProj
shadow1DProjGradARB
shadow1DProjLod
shadow2D
shadow2DArray
shadow2DEXT
shadow2DGradARB
shadow2DLod
shadow2DProj
shadow2DProjEXT
shadow2DProjGradARB
shadow2DProjLod
shadow2DRect
shadow2DRectGradARB
shadow2DRectProj
shadow2DRectProjGradARB
shadowTargetSize
shadowTargetSize forcing nPoolSizeInMb size to %d from %d, bLarge %d, avail %lld\n
shared
shared block
shared block requires at least SPIR-V 1.4
sharpness contains value outside of expected range [0.0, 1.0
sheetcachetexture_.vtex
shift left
shift-UBO-binding
shift-image-binding
shift-sampler-binding
shift-ssbo-binding
shift-texture-binding
shift-uav-binding
shift_expression
shuffle
shuffle2
signed
simple_statement
simplify-instructions
since it is not specified as taking an
sincos
single_attribute
single_declaration
single_type_qualifier
size1x16
size1x32
size1x8
size2x32
size4x32
sizeQueryTemp
sizeof
slovak
sma-NO
sma-SE
sma-no
sma-se
smj-NO
smj-SE
smj-no
smj-se
smn-FI
smn-fi
smooth
smoothstep
sms-FI
sms-fi
source language
source-entrypoint
south africa
south korea
south-africa
south-korea
space identifier
spanish-argentina
spanish-bolivia
spanish-chile
spanish-colombia
spanish-costa rica
spanish-dominican republic
spanish-ecuador
spanish-el salvador
spanish-guatemala
spanish-honduras
spanish-mexican
spanish-modern
spanish-nicaragua
spanish-panama
spanish-paraguay
spanish-peru
spanish-puerto rico
spanish-uruguay
spanish-venezuela
sparseImageLoad
sparseImageLoadARB
sparseImageLoadLod
sparseImageLoadLodAMD
sparseTexel
sparseTexelFetch
sparseTexelFetchARB
sparseTexelFetchOffset
sparseTexelFetchOffsetARB
sparseTexelsResident
sparseTexelsResidentARB
sparseTexture
sparseTextureARB
sparseTextureClamp
sparseTextureClampARB
sparseTextureGather
sparseTextureGatherARB
sparseTextureGatherLod
sparseTextureGatherLodAMD
sparseTextureGatherLodOffset
sparseTextureGatherLodOffsetAMD
sparseTextureGatherLodOffsets
sparseTextureGatherLodOffsetsAMD
sparseTextureGatherOffset
sparseTextureGatherOffsetARB
sparseTextureGatherOffsets
sparseTextureGatherOffsetsARB
sparseTextureGrad
sparseTextureGradARB
sparseTextureGradClamp
sparseTextureGradClampARB
sparseTextureGradOffset
sparseTextureGradOffsetARB
sparseTextureGradOffsetClam
sparseTextureGradOffsetClampARB
sparseTextureLod
sparseTextureLodARB
sparseTextureLodOffset
sparseTextureLodOffsetARB
sparseTextureOffset
sparseTextureOffsetARB
sparseTextureOffsetClamp
sparseTextureOffsetClampARB
spdCounter
spdIntermediateA
spdIntermediateB
spdIntermediateG
spdIntermediateR
spec BuiltIn
spec BuiltIn FragCoord variable needs to be a 4-component 32-bit float vector
spec BuiltIn FragDepth variable needs to be a 32-bit float scalar
spec BuiltIn FrontFacing variable needs to be a bool scalar
spec BuiltIn InstanceIndex variable needs to be a 32-bit int scalar
spec BuiltIn VertexIndex variable needs to be a 32-bit int scalar
spec BuiltIn WorkgroupSize variable needs to be a 3-component 32-bit int vector
spec allows BuiltIn
spec allows BuiltIn FragCoord to be only used for variables with Input storage class
spec allows BuiltIn FragCoord to be used only with Fragment execution model
spec allows BuiltIn FragDepth to be only used for variables with Output storage class
spec allows BuiltIn FragDepth to be used only with Fragment execution model
spec allows BuiltIn FrontFacing to be only used for variables with Input storage class
spec allows BuiltIn FrontFacing to be used only with Fragment execution model
spec allows BuiltIn InstanceIndex to be only used for variables with Input storage class
spec allows BuiltIn InstanceIndex to be used only with Vertex execution model
spec allows BuiltIn VertexIndex to be only used for variables with Input storage class
spec allows BuiltIn VertexIndex to be used only with Vertex execution model
spec requires DepthReplacing execution mode to be declared when using BuiltIn FragDepth
spec:\n
specialization-constant
specialization-constant id already used
specialization-constant id is too large
specializationInfo
specific signature of builtin mix
specular
spiregg
spirv_by_literal
spirv_by_reference
spirv_capability_list
spirv_decorate
spirv_decorate_id
spirv_decorate_id_parameter
spirv_decorate_id_parameter_list
spirv_decorate_parameter
spirv_decorate_parameter_list
spirv_decorate_qualifier
spirv_decorate_string
spirv_decorate_string_parameter_list
spirv_execution_mode
spirv_execution_mode_id
spirv_execution_mode_id_parameter_list
spirv_execution_mode_parameter
spirv_execution_mode_parameter_list
spirv_execution_mode_qualifier
spirv_extension_list
spirv_instruction
spirv_instruction_qualifier
spirv_instruction_qualifier_id
spirv_instruction_qualifier_list
spirv_literal
spirv_literal' can only be used on functions defined with 'spirv_instruction' for argument
spirv_requirements_list
spirv_requirements_parameter
spirv_storage_class
spirv_storage_class_qualifier
spirv_type
spirv_type_parameter
spirv_type_parameter_list
spirv_type_specifier
spv1.0
spv1.1
spv1.2
spv1.3
spv1.4
spv1.5
spv1.6
spv::Op::OpCooperativeMatrixLoadKHR
spv::Op::OpCooperativeMatrixLoadKHR Result Type <id
spv::Op::OpCooperativeMatrixLoadNV
spv::Op::OpCooperativeMatrixLoadNV Result Type <id
spv::Op::OpCooperativeMatrixStoreKHR
spv::Op::OpCooperativeMatrixStoreKHR Object type <id
spv::Op::OpCooperativeMatrixStoreNV
spv::Op::OpCooperativeMatrixStoreNV Object type <id
sr-BA-Cyrl
sr-BA-Latn
sr-SP-Cyrl
sr-SP-Latn
sr-ba-cyrl
sr-ba-latn
sr-sp-cyrl
sr-sp-latn
srcAccessMask
srcAlphaBlendFactor
srcColorBlendFactor
srcPremultiplied
srcStageMask
srcSubpass
ssa-rewrite
st\r<utK
stack buffer overrun (/GS failure
stage
stage: Block
stage:\n\n
stageFlags
stages
stages must match when linking into a single stage
standard
stantfunH9H\bu\v
starting at word
state machine violation - someone changed status while we were compiling
state not recoverable
statement
statement_list
statement_no_new_scope
statement_scoped
static
static_cast
statically used per shader entry point
std140
std430
std430 requires the buffer storage qualifier
stdcall
steam_pipeline_cache.foz
steam_pipeline_cache_whitelist.foz
steamapp_pipeline_cache.foz
stencil layout qualifier
stencilAttachmentFormat
stencilAttachmentReadEXT
stencilFinalLayout
stencilInitialLayout
stencilLayout
stencilLoadOp
stencilResolveMode
stencilStoreOp
stencilTestEnable
stencil_ref_greater_back_amd
stencil_ref_greater_front_amd
stencil_ref_less_back_amd
stencil_ref_less_front_amd
stencil_ref_unchanged_back_amd
stencil_ref_unchanged_front_amd
stereo view rendering
stippledLineEnable
storage buffer
storage buffer, or variable in Private or Function storage class
storage class
storage class for pointer type <id
storage class forbidden by universal validation rules
storage class is read-only
storage class must be Function, Workgroup, CrossWorkGroup or Generic in the OpenCL environment
storage class must be Input
storage class must be Input or Output
storage class must follow
storage class requires an additional capability
storage classes
storage image
storage qualifier not allowed on function parameter
storage_qualifier
store cache control
storeOp
storeTemp
storeTempPost
storeTempPre
stream
stream end
stream error
stream output type
stream timeout
streaming
stride
stride is too large
string
string literal
string too long
strip-debug
strips
struct
struct PS_INPUT\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat4 vColor\t\t\t\t\t: COLOR;\t\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nfloat4 main( const PS_INPUT i )\t: SV_TARGET0\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn i.vColor;                                \n}\t\t\t\t\t\t\t\t\t\t\t\t\t\n
struct PS_INPUT\t\t\t\t\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat2 vTexCoord\t\t\t\t: TEXCOORD0;\t\t\t\t\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nTexture2D<float4> g_tSrctexture : register( t0 );\t\t\t\t\t\nSamplerState g_sSrcSampler : register( s0 );\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfloat4 main( const PS_INPUT i )\t: SV_TARGET0\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn g_tSrctexture.SampleLevel( g_sSrcSampler, i.vTexCoord.xy, 0 );\n
struct PS_INPUT\t\t\t\t\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat4 vTexCoordScaleOffset\t\t: COLOR;\t\t\t\t\t\t\n\tfloat4 vProjPos\t\t\t\t\t: SV_Position;\t\t\t\t\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nTexture2D<float4> g_tSrctexture : register( t0 );\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfloat4 main( const PS_INPUT i )\t: SV_TARGET0\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tint2 vSamplePos = ( i.vProjPos.xy + i.vTexCoordScaleOffset.zw );\n\treturn g_tSrctexture.Load( int3( vSamplePos, 0 ) );\t\t\t\t\n
struct PS_INPUT\t\t\t\t\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat4 vTexCoordScaleOffset\t\t: COLOR;\t\t\t\t\t\t\n\tfloat4 vProjPos\t\t\t\t\t: SV_Position;\t\t\t\t\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nTexture2DMS<float4> g_tMSAASrctexture : register( t0 );\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfloat4 main( const PS_INPUT i )\t: SV_TARGET0\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tint2 vSamplePos = ( i.vProjPos.xy + i.vTexCoordScaleOffset.zw );\n\treturn g_tMSAASrctexture.Load( vSamplePos, 0 );\t\t\t\t\t\n
struct PS_INPUT\t\t\t\t\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat4 vTexCoordScaleOffset\t\t: COLOR;\t\t\t\t\t\t\n\tfloat4 vProjPos\t\t\t\t\t: SV_Position\t\t;\t\t\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nTexture2DMS<float4> g_tMSAASrctexture : register( t0 );\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfloat main( const PS_INPUT i )\t: SV_DEPTH\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tint2 vSamplePos = ( i.vProjPos.xy + i.vTexCoordScaleOffset.zw );\n\treturn g_tMSAASrctexture.Load( vSamplePos, 0 ).x;\t\t\t\t\n
struct VS_INPUT\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat3 vProjPos\t\t\t\t\t: POSITION0;\t\n\tfloat2 vTexCoord\t\t\t\t: TEXCOORD0;\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nstruct VS_OUTPUT\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat2 vTexCoord\t\t\t\t: TEXCOORD0;\t\n\tfloat4 vProjPos\t\t\t\t\t: SV_Position;\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nVS_OUTPUT main( const VS_INPUT v )\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tVS_OUTPUT o = ( VS_OUTPUT )0;\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\to.vProjPos.xyz = v.vProjPos;\t\t\t\t\t\n\to.vProjPos.w = 1.0;\t\t\t\t\t\t\t\t\n\to.vTexCoord = v.vTexCoord;\t\t\t\t\t\t\n\treturn o;\t\t\t\t\t\t\t\t\t\t\n}\t\t\t\t\t\t\t\t\t\t\t\t\t
struct VS_INPUT\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat3 vProjPos\t\t\t\t\t: POSITION0;\t\n\tfloat4 vColor\t\t\t\t\t: COLOR0;\t\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nstruct VS_OUTPUT\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat4 vColor\t\t\t\t\t: COLOR;\t\t\n\tfloat4 vProjPos\t\t\t\t\t: SV_Position;\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nVS_OUTPUT main( const VS_INPUT v )\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tVS_OUTPUT o = ( VS_OUTPUT )0;\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\to.vProjPos.xyz = v.vProjPos;\t\t\t\t\t\n\to.vProjPos.w = 1.0;\t\t\t\t\t\t\t\t\n\to.vColor = v.vColor;\t\t\t\t\t\t\t\n\treturn o;\t\t\t\t\t\t\t\t\t\t\n}\t\t\t\t\t\t\t\t\t\t\t\t\t\n
struct VS_INPUT\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat3 vProjPos\t\t\t\t\t: POSITION0;\t\n\tfloat4 vTexCoordScaleOffset\t\t: COLOR0;\t\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nstruct VS_OUTPUT\t\t\t\t\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tfloat4 vTexCoordScaleOffset\t\t: COLOR;\t\t\n\tfloat4 vProjPos\t\t\t\t\t: SV_Position;\t\n};\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\nVS_OUTPUT main( const VS_INPUT v )\t\t\t\t\t\n{\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tVS_OUTPUT o = ( VS_OUTPUT )0;\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\to.vProjPos.xyz = v.vProjPos;\t\t\t\t\t\n\to.vProjPos.w = 1.0;\t\t\t\t\t\t\t\t\n\to.vTexCoordScaleOffset = v.vTexCoordScaleOffset;\n\treturn o;\t\t\t\t\t\t\t\t\t\t\n}\t\t\t\t\t\t\t\t\t\t\t\t\t
struct gl_DepthRangeParameters
struct gl_TextureFootprint2DNV {uvec2 anchor;uvec2 offset;uvec2 mask;uint lod;uint granularity;};struct gl_TextureFootprint3DNV {uvec3 anchor;uvec3 offset;uvec2 mask;uint lod;uint granularity;};bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintLodNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintLodNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintGradNV(sampler2D, vec2, vec2, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintGradClampNV(sampler2D, vec2, vec2, vec2, float, int, bool, out gl_TextureFootprint2DNV);\n
struct member declarations
struct-member initializers ignored
struct_declaration
struct_declaration_list
struct_declarator
struct_declarator_list
struct_specifier
structure
structure may not be contained as a member of another
stuvwxyz
style initializers
subBorrow
subgroup op
subgroupAdd
subgroupAll
subgroupAllEqual
subgroupAnd
subgroupAny
subgroupBallot
subgroupBallotBitCount
subgroupBallotBitExtract
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupBallotInclusiveBitCount
subgroupBarrier
subgroupBroadcast
subgroupBroadcastFirst
subgroupClusteredAdd
subgroupClusteredAnd
subgroupClusteredMax
subgroupClusteredMin
subgroupClusteredMul
subgroupClusteredOr
subgroupClusteredRotate
subgroupClusteredXor
subgroupElect
subgroupExclusiveAdd
subgroupExclusiveAnd
subgroupExclusiveMax
subgroupExclusiveMin
subgroupExclusiveMul
subgroupExclusiveOr
subgroupExclusiveXor
subgroupInclusiveAdd
subgroupInclusiveAnd
subgroupInclusiveMax
subgroupInclusiveMin
subgroupInclusiveMul
subgroupInclusiveOr
subgroupInclusiveXor
subgroupInverseBallot
subgroupMax
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
subgroupMin
subgroupMul
subgroupOr
subgroupPartitionNV
subgroupPartitionedAddNV
subgroupPartitionedAndNV
subgroupPartitionedExclusiveAddNV
subgroupPartitionedExclusiveAndNV
subgroupPartitionedExclusiveMaxNV
subgroupPartitionedExclusiveMinNV
subgroupPartitionedExclusiveMulNV
subgroupPartitionedExclusiveOrNV
subgroupPartitionedExclusiveXorNV
subgroupPartitionedInclusiveAddNV
subgroupPartitionedInclusiveAndNV
subgroupPartitionedInclusiveMaxNV
subgroupPartitionedInclusiveMinNV
subgroupPartitionedInclusiveMulNV
subgroupPartitionedInclusiveOrNV
subgroupPartitionedInclusiveXorNV
subgroupPartitionedMaxNV
subgroupPartitionedMinNV
subgroupPartitionedMulNV
subgroupPartitionedOrNV
subgroupPartitionedXorNV
subgroupQuadAll
subgroupQuadAny
subgroupQuadBroadcast
subgroupQuadSwapDiagonal
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
subgroupRotate
subgroupShuffle
subgroupShuffleDown
subgroupShuffleUp
subgroupShuffleXor
subgroupXor
subgroup_uniform_control_flow
subgroup_uniform_control_flow\n
subgroupcoherent
subpass
subpass input
subpassInput
subpassInputMS
subpassLoad
subpassLoadMS
subpasses
subroutine
substituting 'mediump
subtract
subtract second child into first child
subtractSaturate
success
suncompressed data
superp
supersampleFragmentShadingRates
suppress-warnings
swedish-finland
swift_1
swift_2
swift_3
switch
switch statements
switch_statement
switch_statement_list
switch_statement_nonattributed
swizzle or member
swizzleInvocations
swizzleInvocationsAMD
swizzleInvocationsMasked
swizzleInvocationsMaskedAMD
swizzleInvocationsWithPatternAMD
swizzleTemp
syntax error
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
syntax error...\n
syntax not recognized...\n
syr-SY
syr-sy
s؈D$8I
t 3\tk H
t 3\ts H
t The lexer was matching from line %d, offset %d, which\n\t
t!Hc\vH
t!\tA\ta\t
t!s99\v3
t"D8H\bt
t#\t)\t/\t5\t;\tA\tG\tM\tS\tY\t_\te\tk\tq\tw\t}\t
t$ 9A\bt
t$ ATAVAWH
t$ AVAWH
t$ AVD
t$ AVH
t$ AWH
t$ E3
t$ UWATAUAWH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWD
t$ WATAUAVAWH
t$ WATAUAVD
t$ WATAVAWL
t$ WATAVH
t$ WATAVLct$@L
t$ WATAWH
t$ WAUAVAWL
t$ WAVA
t$ WAVAWH
t$ fD
t$ fE
t$(8C\bu\bH
t$(A;t$4sd
t$(E3\tt$ H
t$(E;w4sd
t$(t\vH
t$(u4A
t$-fA
t$0;o8
t$0A_A
t$0E3\tt$(L
t$0E;u
t$0Hc
t$0Hcl
t$0I;t$8t!H
t$0fD
t$0fff
t$0u\bH
t$8;Upr4I
t$8A;n\b
t$8A^A
t$8Ai
t$8D8r,t\fD8r-t
t$8Hc
t$8HcD
t$8HcH
t$8L+t$0I
t$8Lct$XHc
t$8fA
t$=fA
t$@E3
t$@E8n,t\fE8n-t
t$@H9o
t$@Hcu\b
t$@fA
t$@fD
t$@fff
t$@t\bA
t$BfE
t$D81t
t$DtPM
t$H8Y-t
t$HA_A^A]A
t$HD9d
t$HL9s t[A
t$HL;M
t$PIc
t$Pfff
t$Pt%A
t$TH;U\bt
t$Xfff
t$\bAiGP
t$\bI+4$H
t$]fA
t$`Hc
t$`Ic
t$`fD9+t$I
t$dD8e
t$hD80t@I
t$hD9
t$ht\nH
t$hv,f
t$pHcH
t$pL+t$pH
t$x@8h
t$xE8
t$xt*3
t%9U\bH
t%fE9\bt
t&9s\bu!D;Cpr
t&A88t
t&H9m t H
t(L90t\vH
t)IcV\bH
t+D96}&H
t-H9\bu
t.fD;p:u
t0\bP!\b
t1@8>t
t1D8e I
t1D8u I
t1D9t$4u*D9d$0u
t2A84$t
t3D82t
t3D86H
t3L9-Y
t4D8k H
t5D8n H
t64_t bitCount(uint64_t);i64vec2 bitCount(u64vec2);i64vec3 bitCount(u64vec3);i64vec4 bitCount(u64vec4);int64_t findLSB(int64_t);i64vec2 findLSB(i64vec2);i64vec3 findLSB(i64vec3);i64vec4 findLSB(i64vec4);int64_t findLSB(uint64_t);i64vec2 findLSB(u64vec2);i64vec3 findLSB(u64vec3);i64vec4 findLSB(u64vec4);int64_t findMSB(int64_t);i64vec2 findMSB(i64vec2);i64vec3 findMSB(i64vec3);i64vec4 findMSB(i64vec4);int64_t findMSB(uint64_t);i64vec2 findMSB(u64vec2);i64vec3 findMSB(u64vec3);i64vec4 findMSB(u64vec4);\n
t6D8e\tt0
t6fE94
t7@8sXt1H
t7H9nHu1
t8D8s\bu\bH
t9D86H
t:\nfA
t;A8\bt6
t<D9#u
t<fD9g
t?D8 t
t?H95o
t?HcS\bH
t@9+u,9s
t@McO4
tA8F H
tAH9\bu
tA_A^A
tBMcW<IcO@Lc
tC7Ddx
tCHct$h
tCounterH
tD$$A
tD$,A
tD$0A
tD$@HcD$4
tD$LA
tD$P;D$X
tD$PA
tD$TD8u
tD$`A
tD$`E
tD$dE
tD$p;C\b
tD$|E3
tD+ɋL
tD+ɋL$0A
tD8a-t
tD8u-t
tEL9`(t?H
tEoH;W
tFH9;u8H
tFL9f\btx
tFramebuffer Count ( %d ): \n
tGD;0tBL
tGD;8tBL
tGLH;w\bv
tH9\bu\tA
tH;B\br1H
tH;B\br3H
tH;B\br5H
tH;B\br@H
tHL9F H
tHcC\fH
tIf9wbH
tJR>8o
tK9_\bt
tL;C(u
tL;C8u\t
tLayout Count( %d ) \n
tN1a\bO2
tNfD;p:uG
tP@87uKH
tPMB Type ( %s ): Count ( %d ) ( %llu MB ) \n
tPSO Count ( %d ) \n
tQfD9 tK
tRenderpass Count Count ( %d ): \n
tSH9.t\tH
tSH9/t\tH
tSf91tNH
tSvQ@2
tThread (%s) Command Buffers (%d)\n
tTotal Command Buffers (%d)\n
tU;Cxr
tU;\\$0tH
tUH;\atPH
tVD9c uPH
tV_logd
tV_logf
tV_powd
tV_powf
tV_qsort
tV_qsort_s
tV_snprintf
tWarning
tX;H\btSH
t\\HcL$`H
t\\I9X uVI
t\aD;d$<uc
t\aE9t$h~(H
t\aH9D$Pu>I
t\aL9l$ t3L
t\afD9K:u\tA9
t\bAƆ8
t\bV_StringToFloat32
t\efD;x:u
t\fH;^\bt
t\n2\bC\b
t\n@88t\bH
t\nD9l$4H
t\nI9Jhs
t\nfA9
t\nu\bH
t\r93tdH
t\r98t H
t\r9\bt7H
t\rL#\rk.8
t\rfD9"u\aB\bL
t\tD8 t
t\tLabel[%d] - %s { %f, %f, %f, %f}\n
t\tObject[%d] - %s, Handle %p, Name "%s"\n
t\tObject[%d] - %s, Handle %p\n
t\vH9@ t
t\vH;]Xt
t^D;@\btXH
t_V_ComposeFileName
t_V_ExtractFilePath
t_V_FixupPathName
t_V_strncmp
t_V_strncpy
t_V_strnicmp_fast
t`;H\bt[H
t`M;\bt\a2
t`\bP!2\f
taH;U\bt
tangent
tangents
tangentt
target is not defined
target-env opengl
target-env spirv1.1
target-env spirv1.2
target-env spirv1.3
target-env spirv1.4
target-env spirv1.5
target-env spirv1.6
target-env spirvUnknown
target-env vulkan1.0
target-env vulkan1.1
target-env vulkan1.2
target-env vulkan1.3
target-env vulkanUnknown
task shaders
taskNV
taskNV variables can be declared only as blocks
taskPayloadSharedEXT
taskPayloadSharedEXT variables should not be declared as interface blocks
tbuffer
tdLcC\bH
tempArg
tempReturn
template
tencilReH9B\bu\t
tencilReH9H\b
tencilReH9H\bu
terProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4);\n
terminateInvocation
terminateRayEXT
terminateRayKHR
terminateRayNV
terminator instruction outside basic block
terminator instruction outside function
tessellation control
tessellation control barrier() cannot be placed after a return from main
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main
tessellation evaluation
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
tessellation patch type
tessellation shaders
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
tessellationState
tessfactor
tested first
tex1Dbias
tex1Dgrad
tex1Dlod
tex1Dproj
tex2Dbias
tex2Dgrad
tex2Dlod
tex2Dproj
tex3Dbias
tex3Dgrad
tex3Dlod
tex3Dproj
texCUBE
texCUBEbias
texCUBEgrad
texCUBElod
texCUBEproj
texcoord
texel offset
texelFetch
texelFetchOffset
text file busy
text$di
text$mn
text$mn$00
text$x
text$yd
texture
texture address mode
texture state
texture type for multisample
texture*D
texture-rectangle sampler keyword
texture1D
texture1DArray
texture1DArrayLod
texture1DGradARB
texture1DLod
texture1DProj
texture1DProjGradARB
texture1DProjLod
texture2D
texture2DArray
texture2DArrayLod
texture2DGradARB
texture2DGradEXT
texture2DLod
texture2DLodEXT
texture2DMS
texture2DMSArray
texture2DProj
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjLod
texture2DProjLodEXT
texture2DRect
texture2DRectGradARB
texture2DRectProj
texture2DRectProjGradARB
texture3D
texture3DGradARB
texture3DLod
texture3DProj
texture3DProjGradARB
texture3DProjLod
textureBlockMatchSADQCOM
textureBlockMatchSSDQCOM
textureBoxFilterQCOM
textureBuffer
textureClamp
textureClampARB
textureCube
textureCubeArray
textureCubeGradARB
textureCubeGradEXT
textureCubeLod
textureCubeLodEXT
textureFetch
textureFetchOffset
textureFootprintClampNV
textureFootprintGradClampNV
textureFootprintGradNV
textureFootprintLodNV
textureFootprintNV
textureGather
textureGatherLod
textureGatherLodAMD
textureGatherLodOffset
textureGatherLodOffsetAMD
textureGatherLodOffsets
textureGatherLodOffsetsAMD
textureGatherOffset
textureGatherOffsets
textureGrad
textureGradClamp
textureGradClampARB
textureGradOffset
textureGradOffsetClamp
textureGradOffsetClampARB
textureLod
textureLodOffset
textureOffset
textureOffsetClamp
textureOffsetClampARB
textureProj
textureProjGrad
textureProjGradOffset
textureProjLod
textureProjLodOffset
textureProjOffset
textureQueryLOD
textureQueryLevels
textureQueryLod
textureSamples
textureSamples and imageSamples
textureSize
textureWeightedQCOM
tfA;\bfA
tfD;D$ZwlH
tfD;\nfD
tfJcD\n\bJ
tgL99u
tg_Mathlib_GammaToLinearByteTable
tg_TSPointerListNodes
tg_bUpdateStringTokenDatabase
tg_pMemAlloc
tg_pThreadPool
tgamma
thD8"tcI
thHc\\$0
that allocate pointers must be in Function or Private
that is not a scalar or vector
the array size of gl_SampleMask and gl_SampleMaskIn is ceil(gl_MaxSamples/32
the same type as Result Type components
then statement
there is no such layout identifier for this stage taking an assigned value
this instruction is currently limited to 32-bit width
this type
this type not allowed
thiscall
thread initialization failed
threads
threshold
thstenciH9H\bu
tier0.dll
tileImageEXT
timeAMD
timed out
tionsInclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsInclusiveScanNonUniformAMD(u16vec4);float minInvocationsExclusiveScanNonUniformAMD(float);vec2  minInvocationsExclusiveScanNonUniformAMD(vec2);vec3  minInvocationsExclusiveScanNonUniformAMD(vec3);vec4  minInvocationsExclusiveScanNonUniformAMD(vec4);int   minInvocationsExclusiveScanNonUniformAMD(int);ivec2 minInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsExclusiveScanNonUniformAMD(ivec4);uint  minInvocationsExclusiveScanNonUniformAMD(uint);uvec2 minInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsExclusiveScanNonUniformAMD(uvec4);double minInvocationsExclusiveScanNonUniformAMD(double);dvec2  minInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsExclusiveScanNonUniformAMD(u16vec4);float maxInvocationsNonUniformAMD(float);vec2  maxInvocationsNonUniformAMD(vec2);vec3  maxInvocationsNonUniformAMD(vec3);vec4  maxInvocationsNonUniformAMD(vec4);int   maxInvocationsNonUniformAMD(int);ivec2 maxInvocationsNonUniformAMD(ivec2);ivec3 maxInvocationsNonUniformAMD(ivec3);ivec4 maxInvocationsNonUniformAMD(ivec4);uint  maxInvocationsNonUniformAMD(uint);uvec2 maxInvocationsNonUniformAMD(uvec2);uvec3 maxInvocationsNonUniformAMD(uvec3);uvec4 maxInvocationsNonUniformAMD(uvec4);double maxInvocationsNonUniformAMD(double);dvec2  maxInvocationsNonUniformAMD(dvec2);dvec3  maxInvocationsNonUniformAMD(dvec3);dvec4  maxInvocationsNonUniformAMD(dvec4);int64_t maxInvocationsNonUniformAMD(int64_t);i64vec2 maxInvocationsNonUniformAMD(i64vec2);i64vec3 maxInvocationsNonUniformAMD(i64vec3);i64vec4 maxInvocationsNonUniformAMD(i64vec4);uint64_t maxInvocationsNonUniformAMD(uint64_t);u64vec2  maxInvocationsNonUniformAMD(u64vec2);u64vec3  maxInvocationsNonUniformAMD(u64vec3);u64vec4  maxInvocationsNonUniformAMD(u64vec4);float16_t maxInvocationsNonUniformAMD(float1
tkE>fvw
tlD86H
tlLcL$\b
tls$ZZZ
tnD81tiL
tn\a\bdo\a
to be int or float scalar or vector type
to be int or float scalar type
to be int or float vector type
to be not be used with GLCompute execution model
to be only used for variables with Input or Output storage class
to be only used for variables with Input storage class
to be only used for variables with Output storage class
to be the reverse of those of Result Type
to be used only with Fragment execution model
to be used only with Fragment, Vertex, TessellationControl, TessellationEvaluation or Geometry execution models
to be used only with GLCompute, MeshNV, TaskNV, MeshEXT or
to be used only with MeshEXT execution model
to be used only with TessellationControl or TessellationEvaluation execution models
to be used only with Vertex execution model
to be used only with Vertex, Geometry, or MeshNV execution models
to be used only with Vertex, MeshNV, TaskNV , MeshEXT or
to be used only with Vertex, TessellationEvaluation, Geometry, or Fragment execution models
to be used only with the Fragment execution model
to be used with the execution model
to fetch array of rationals
to fetch per-sample values
to fetch strip tag
to fetch tag value
to have 4 components
to index into a structure must be an OpConstant
to read "TransferFunction" tag
to read TIFF directory
to storage image
to the number of columns of Result Type matrix
to the number of elements of Result Type array
to the number of members of Result Type struct
to the size of Result Type vector
to\bD\tw\fH
token pasting
too large for fragment output
too large, must be less than
too large, must be less than gl_MaxGeometryOutputVertices
too large, see
too large; see gl_MaxComputeWorkGroupSize
too many SPIR-V decorate qualifiers
too many SPIR-V instruction qualifiers
too many SPIR-V requirements
too many arguments
too many files open
too many files open in system
too many length or distance symbols
too many links
too many storage qualifiers
too many symbolic link levels
tools
tools.txt
topology
tpH91uk
tp\b`\a0
tp\b`\aP
tr$tdrF
trD86H
traceNV
traceRayEXT
traceRayKHR
traceRayMotionNV
transform feedback qualifier
translation_unit
transparency
transparency_and_composition_mask
transpose
triangle
triangle order
triangleH
triangleM
triangle_strip
triangleadj
triangles
triangles_adjacency
tried to delete shader twice
trinidad & tobago
true case is null\n
true case\n
truncated
trying to bind a deleted shader
tsLcG$E
tvD9~\b~eA
twH;+unI
twf9G:uY
tx-struct
txH9s urH
tyfD9 tsH
type <id
type ID
type Result Type array
type Result Type matrix
type as Result Type
type cannot have precision qualifier
type contains double or 64-bit integer; xfb_offset must be a multiple of 8
type contains half float or 16-bit integer; xfb_offset must be a multiple of 2
type conversion on return values was not explicitly allowed until version 420
type definition
type does not match Result Type <id
type does not match the Result Type <id
type does not match, or is not convertible to, the function's return type
type for RWTexture/RWBuffer
type for pointer <id
type is OpConstant with an integer scalar type
type mismatch in initializer list
type must be an array
type of the matrix operand
type of the vector operand
type overflows the available 4 components
type parameter
type requires declaration of default precision qualifier
type requires the Float16 or Float16Buffer capability, or an extension that explicitly enables 16-bit floating point
type requires the Float64 capability
type that can be constructed
type. Structure <id
type.1d.image
type.2d.image
type.3d.image
type.cube.image
type.image
type.sampled.image
type.sampler
type_name_list
type_parameter_specifier
type_parameter_specifier_list
type_parameter_specifier_opt
type_qualifier
type_specifier
type_specifier_nonarray
typedef
typename
typeof
tzHc|$P
t{D8%P
t|H9\buw
t|IHcC
t|M9o\b
tҋ@09B0s
tދ@0A9@0s
u (%s
u (0x%x)\n
u = 0x%x)\n
u iterated blocks\n
u unfinished blocks\n
u!@8yPu\e@8ySu
u!A2M\r
u"H93u
u#H93u
u#L90u
u#M9.u
u#f;N\bu
u$8D$(t\nH
u$D8r(t\rH
u$H93u
u%9ktu
u%@8j(t
u%L90u H
u%L9C u
u%L9} u
u%M9~ u
u&9X$r
u&;X r!w
u&H9K u
u&H9O u
u&L9'u
u(8C,t\n8C-t
u(f9Q
u)int16 types can only be in uniform block or buffer storage
u)int8 types can only be in uniform block or buffer storage
u+H;G |%H
u,M9l$ u
u-D9"u
u0D9q0
u0H;>u
u1!D$0H
u16vec2
u16vec3
u16vec4
u32vec2
u32vec3
u32vec4
u64image1D
u64image1DArray
u64image2D
u64image2DArray
u64image2DMS
u64image2DMSArray
u64image2DRect
u64image3D
u64imageBuffer
u64imageCube
u64imageCubeArray
u64vec2
u64vec3
u64vec4
u6;Q r1I
u8vec2
u8vec3
u8vec4
u;;Q r6I
u<g~l<it[<ntP<ot,<pt
u?D9~\b
u@D9uP|EH
uB;Y r=H
uBL9l$pu;H
uCD;C u
uED8r(t\rH
uEL9l$pu>H
uFA9l
uG;Y rBH
uGroupId
uH@8w-t
uI@8}_uCL
uJH;B |DI
uKD8D$@tDfA
uKfD9fduDfD9fpu=D9
uL@8s,t\f3
uLI9>u
uMA9l
uMulExtended
uO9CLuJ
uPD8mo
uPfE9Z uIfE9Z0uBfE9Z@u;fE9ZPu4fE9Z`u-fE9Zpu&A
uS8G,t\f3
uSD8d$xt+H
uSH9A\bt\fH
uSfA9r uLfA9r0uEfA9r@u>fA9rPu7fA9r`u0fA9rpu)A
uTA9l
uTD8g,t\f3
uUD8g,t\f3
uUE9F\buOE9F\fuIE9F
uXfD;h:uQH
uZ8G\bu@H
uZD8c,tA3
uZE9F(uTE9F,uNE9F0uHE9F4uBE9F8u<E9F<u6A
uZfE9E uSfE9E0uLfE9E@uEfE9EPu>fE9E`u7fE9Epu0E
u\aC9t
u\aD8d${taE
u\aI9|)\bt
u\aJ9
u\aJ9l
u\aK9
u\aK9l
u\aK9|9\bt
u\aL9l$ptIH
u\aM9t1\bt
u\b< t=<\tt9
u\e@8j(t
u\f;W |\aH
u\f;Z r\aw\b;z
u\fD8cStQD8cRuKH
u\fH;;t\aA
u\nD8mo
u\nD;j
u\nD;k
u\nE8p&u
u\nH;A\b
u\nH;X\b
u\nI;F\b
u\nI;o
u\nL9P\b
u\nf9;u
u\nfA9\b
u\niD$8
u\rBƄ6
u\rfA9P
u\t;Y r
u\tL9ex
u\tfD;A\bu
u\v@8
u\v@8~0tM
u\vD8d$zu
u\vD9|$H
u\vD9|$d
u\vH;B
u\vH;Q r
u\vI9H\bu
u\vL9l$p
u]D8C\buIH
u]fE9M"uVfE9M2uOfE9MBuHfE9MRuAfE9Mbu:fE9Mru3A
u^8C\buGH
u_abs_diff
u_add_sat
u_clamp
u_hadd
u_mad24
u_mad_hi
u_mad_sat
u_mul24
u_mul_hi
u_rhadd
u_sub_sat
u_upsample
u`@8l$0t"fA
uaD9@\f
uaL9d$Ht(H
uaL9m\av
uaddCarry
uattachmentEXT
ubH9~\b
ucoopmatNV
udD9D$Xu]A
udfA9H u]fA9H0uVfA9H@uOfA9HPuHfA9H`uAfA9Hpu:A
udt returning
ue8_\buIH
ufA9l$(u_A9l$,uXA9l$0uQA9l$4uJA9l$8uCA9l$<u<A
ufD;K
ufD;M
uffA9r u_fA9r0uXfA9r@uQfA9rPuJfA9r`uCfA9rpu<A
ugH;q
ugH;s`v\tH
ugfD9A
uiA9l$\bubA9l$\fu[A9l
uiTransparentPixels < PIXELS
uimage1D
uimage1DArray
uimage2D
uimage2DArray
uimage2DMS
uimage2DMSArray
uimage2DRect
uimage3D
uimageBuffer
uimageCube
uimageCubeArray
uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int);\n
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint);\n
uint atomicCounterAdd(volatile coherent uint, uint);uint atomicCounterSubtract(volatile coherent uint, uint);uint atomicCounterMin(volatile coherent uint, uint);uint atomicCounterMax(volatile coherent uint, uint);uint atomicCounterAnd(volatile coherent uint, uint);uint atomicCounterOr(volatile coherent uint, uint);uint atomicCounterXor(volatile coherent uint, uint);uint atomicCounterExchange(volatile coherent uint, uint);uint atomicCounterCompSwap(volatile coherent uint, uint, uint);\n
uint atomicCounterAddARB(atomic_uint, uint);uint atomicCounterSubtractARB(atomic_uint, uint);uint atomicCounterMinARB(atomic_uint, uint);uint atomicCounterMaxARB(atomic_uint, uint);uint atomicCounterAndARB(atomic_uint, uint);uint atomicCounterOrARB(atomic_uint, uint);uint atomicCounterXorARB(atomic_uint, uint);uint atomicCounterExchangeARB(atomic_uint, uint);uint atomicCounterCompSwapARB(atomic_uint, uint, uint);\n
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint);\n
uint atomicCounterIncrement(volatile coherent uint);uint atomicCounterDecrement(volatile coherent uint);uint atomicCounter(volatile coherent uint);\n
uint countLeadingZeros(uint);uvec2 countLeadingZeros(uvec2);uvec3 countLeadingZeros(uvec3);uvec4 countLeadingZeros(uvec4);uint countTrailingZeros(uint);uvec2 countTrailingZeros(uvec2);uvec3 countTrailingZeros(uvec3);uvec4 countTrailingZeros(uvec4);uint absoluteDifference(int, int);uvec2 absoluteDifference(ivec2, ivec2);uvec3 absoluteDifference(ivec3, ivec3);uvec4 absoluteDifference(ivec4, ivec4);uint16_t absoluteDifference(int16_t, int16_t);u16vec2 absoluteDifference(i16vec2, i16vec2);u16vec3 absoluteDifference(i16vec3, i16vec3);u16vec4 absoluteDifference(i16vec4, i16vec4);uint64_t absoluteDifference(int64_t, int64_t);u64vec2 absoluteDifference(i64vec2, i64vec2);u64vec3 absoluteDifference(i64vec3, i64vec3);u64vec4 absoluteDifference(i64vec4, i64vec4);uint absoluteDifference(uint, uint);uvec2 absoluteDifference(uvec2, uvec2);uvec3 absoluteDifference(uvec3, uvec3);uvec4 absoluteDifference(uvec4, uvec4);uint16_t absoluteDifference(uint16_t, uint16_t);u16vec2 absoluteDifference(u16vec2, u16vec2);u16vec3 absoluteDifference(u16vec3, u16vec3);u16vec4 absoluteDifference(u16vec4, u16vec4);uint64_t absoluteDifference(uint64_t, uint64_t);u64vec2 absoluteDifference(u64vec2, u64vec2);u64vec3 absoluteDifference(u64vec3, u64vec3);u64vec4 absoluteDifference(u64vec4, u64vec4);int addSaturate(int, int);ivec2 addSaturate(ivec2, ivec2);ivec3 addSaturate(ivec3, ivec3);ivec4 addSaturate(ivec4, ivec4);int16_t addSaturate(int16_t, int16_t);i16vec2 addSaturate(i16vec2, i16vec2);i16vec3 addSaturate(i16vec3, i16vec3);i16vec4 addSaturate(i16vec4, i16vec4);int64_t addSaturate(int64_t, int64_t);i64vec2 addSaturate(i64vec2, i64vec2);i64vec3 addSaturate(i64vec3, i64vec3);i64vec4 addSaturate(i64vec4, i64vec4);uint addSaturate(uint, uint);uvec2 addSaturate(uvec2, uvec2);uvec3 addSaturate(uvec3, uvec3);uvec4 addSaturate(uvec4, uvec4);uint16_t addSaturate(uint16_t, uint16_t);u16vec2 addSaturate(u16vec2, u16vec2);u16vec3 addSaturate(u16vec3, u16vec3);u16vec4 addSaturate(u16vec4, u16vec4);uint64_t addSaturate(uint64_t, uint64_t);u64vec2 addSaturate(u64vec2, u64vec2);u64vec3 addSaturate(u64vec3, u64vec3);u64vec4 addSaturate(u64vec4, u64vec4);int subtractSaturate(int, int);ivec2 subtractSaturate(ivec2, ivec2);ivec3 subtractSaturate(ivec3, ivec3);ivec4 subtractSaturate(ivec4, ivec4);int16_t subtractSaturate(int16_t, int16_t);i16vec2 subtractSaturate(i16vec2, i16vec2);i16vec3 subtractSaturate(i16vec3, i16vec3);i16vec4 subtractSaturate(i16vec4, i16vec4);int64_t subtractSaturate(int64_t, int64_t);i64vec2 subtractSaturate(i64vec2, i64vec2);i64vec3 subtractSaturate(i64vec3, i64vec3);i64vec4 subtractSaturate(i64vec4, i64vec4);uint subtractSaturate(uint, uint);uvec2 subtractSaturate(uvec2, uvec2);uvec3 subtractSaturate(uvec3, uvec3);uvec4 subtractSaturate(uvec4, uvec4);uint16_t subtractSaturate(uint16_t, uint16_t);u16vec2 subtractSaturate(u16vec2, u16vec2);u16vec3 subtractSaturate(u16vec3, u16vec3);u16vec4 subtractSaturate(u16vec4, u16vec4);uint64_t subtractSaturate(uint64_t, uint64_t);u64vec2 subtractSaturate(u64vec2, u64vec2);u64vec3 subtractSaturate(u64vec3, u64vec3);u64vec4 subtractSaturate(u64vec4, u64vec4);int average(int, int);ivec2 average(ivec2, ivec2);ivec3 average(ivec3, ivec3);ivec4 average(ivec4, ivec4);int16_t average(int16_t, int16_t);i16vec2 average(i16vec2, i16vec2);i16vec3 average(i16vec3, i16vec3);i16vec4 average(i16vec4, i16vec4);int64_t average(int64_t, int64_t);i64vec2 average(i64vec2, i64vec2);i64vec3 average(i64vec3, i64vec3);i64vec4 average(i64vec4, i64vec4);uint average(uint, uint);uvec2 average(uvec2, uvec2);uvec3 average(uvec3, uvec3);uvec4 average(uvec4, uvec4);uint16_t average(uint16_t, uint16_t);u16vec2 average(u16vec2, u16vec2);u16vec3 average(u16vec3, u16vec3);u16vec4 average(u16vec4, u16vec4);uint64_t average(uint64_t, uint64_t);u64vec2 average(u64vec2, u64vec2);u64vec3 average(u64vec3, u64vec3);u64vec4 average(u64vec4, u64vec4);int averageRounded(int, int);ivec2 averageRounded(ivec2, ivec2);ivec3 averageRounded(ivec3, ivec3);ivec4 averageRounded(ivec4, ivec4);int16_t averageRounded(int16_t, int16_t);i16vec2 averageRounded(i16vec2, i1
uint fragmentMaskFetchAMD(sampler2DMS,       ivec2);uint fragmentMaskFetchAMD(isampler2DMS,      ivec2);uint fragmentMaskFetchAMD(usampler2DMS,      ivec2);uint fragmentMaskFetchAMD(sampler2DMSArray,  ivec3);uint fragmentMaskFetchAMD(isampler2DMSArray, ivec3);uint fragmentMaskFetchAMD(usampler2DMSArray, ivec3);vec4  fragmentFetchAMD(sampler2DMS,       ivec2, uint);ivec4 fragmentFetchAMD(isampler2DMS,      ivec2, uint);uvec4 fragmentFetchAMD(usampler2DMS,      ivec2, uint);vec4  fragmentFetchAMD(sampler2DMSArray,  ivec3, uint);ivec4 fragmentFetchAMD(isampler2DMSArray, ivec3, uint);uvec4 fragmentFetchAMD(usampler2DMSArray, ivec3, uint);\n
uint fragmentMaskFetchAMD(subpassInputMS);uint fragmentMaskFetchAMD(isubpassInputMS);uint fragmentMaskFetchAMD(usubpassInputMS);vec4  fragmentFetchAMD(subpassInputMS,  uint);ivec4 fragmentFetchAMD(isubpassInputMS, uint);uvec4 fragmentFetchAMD(usubpassInputMS, uint);\n
uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent uint8_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent uint16_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent uint32_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent uint64_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent float16_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent float[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent float64_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i8vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i16vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i32vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i64vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u8vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u16vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u32vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u64vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent f16vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent f32vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent f64vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i8vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i16vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i32vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent i64vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u8vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u16vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u32vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent u64vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent f16vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent f32vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent f64vec4[] buf, uint element, uint stride, int matrixLayout);\ncoopmat coopMatMulAdd(coopmat A, coopmat B, coopmat C);\ncoopmat coopMatMulAdd(coopmat A, coopmat B, coopmat C, int matrixOperands);\n
uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4);\n
uint16
uint16BitsToFloat16
uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);int8_t expectEXT(int8_t, int8_t);i8vec2 expectEXT(i8vec2, i8vec2);i8vec3 expectEXT(i8vec3, i8vec3);i8vec4 expectEXT(i8vec4, i8vec4);uint8_t e
uint16BitsToHalf
uint16_t
uint1x1
uint1x2
uint1x3
uint1x4
uint2x1
uint2x2
uint2x3
uint2x4
uint32
uint32 ) pImmutableSamplersBlob->GetBinaryBlobSize() ) == ( pipelineLayoutHash.m_nNumImmutableSamplers * sizeof( PipelineLayoutImmutableSampler_t
uint32 ) pLayoutBindingFlagsBlob->GetBinaryBlobSize() ) == ( pipelineLayoutHash.m_numLayoutBindingsPerSet[ nDescriptorSet ] * sizeof( VkDescriptorBindingFlags
uint32 ) pLayoutBindingsBlob->GetBinaryBlobSize() ) == ( pipelineLayoutHash.m_numLayoutBindingsPerSet[ nDescriptorSet ] * sizeof( VkDescriptorSetLayoutBinding
uint32_t
uint3x1
uint3x2
uint3x3
uint3x4
uint4x1
uint4x2
uint4x3
uint4x4
uint64
uint64BitsToDouble
uint64_t
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);float16_t atomicMin(coherent volatile inout float16_t, float16_t);float16_t atomicMin(coherent volatile inout float16_t, float16_t, int, int, int);   float atomicMin(coherent volatile inout float, float);   float atomicMin(coherent volatile inout float, float, int, int, int);  double atomicMin(coherent volatile inout double, double);  double atomicMin(coherent volatile inout double, double, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);float16_t atomicMax(coherent volatile inout float16_t, float16_t);float16_t atomicMax(coherent volatile inout float16_t, float16_t, int, int, int);   float atomicMax(coherent volatile inout float, float);   float atomicMax(coherent volatile inout float, float, int, int, int);  double atomicMax(coherent volatile inout double, double);  double atomicMax(coherent volatile inout double, double, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);float16_t atomicAdd(coherent volatile inout float16_t, float16_t);float16_t atomicAdd(coherent volatile inout float16_t, float16_t, int, int, int);   float atomicAdd(coherent volatile inout float, float);   float atomicAdd(coherent volatile inout float, float, int, int, int);  double atomicAdd(coherent volatile inout double, double);  double atomicAdd(coherent volatile inout double, double, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);float16_t atomicExchange(coherent volatile inout float16_t, float16_t);float16_t atomicExchange(coherent volatile inout float16_t, float16_t, int, int, int);   float atomicExchange(coherent volatile inout float, float);   float atomicExchange(coherent volatile inout float, float, int, int, int);  double atomicExchange(coherent volatile inout double, double);  double atomicExchange(coherent volatile inout double, double, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4);\n
uint64_t conversion to acclerationStructureEXT
uint8_t
uintBitsToFloat
ujD8d
ukD8s\bu\bH
ul@87tgI
umulExtended
unL9q\buhH
unable to declare patch constant function interface variable
unable to find output symbol for Append
unable to find patch constant function built-in variable
unable to find texture symbol
unable to locate patch function parameter name
unable to write renderdoc capture to %s\n
unaligned
unary operator
unary_expression
unary_operator
uncorrected errors
undeclared identifier
undef
undefined
undefined macro in expression not allowed in es profile
unexpected
unexpected count for field "%s", %u, expected 2; ignored
unexpected initializer-list type
unexpected input...\n  expected one of
unexpected location
unexpected location; end of argument
unexpected location; end of replacement list
unexpected number type parameters
unexpected operator on texture type
unexpected texture type for .mips[][] operator
unexpected token
unexpected tokens following #ifdef directive - expected a newline
unexpected tokens following directive
unexpected type parameters
unexpected use of
unexpected use of .length
unhandled DX10 MethodGet dimension
unhandled DX10 MethodSample dimension
unhandled DX9 texture LoD dimension
unhandled DX9 texture bias dimension
unhandled texture constructor
uniform
uniform block
uniform buffer
uniform buffer-member align
uniform gl_DepthRangeParameters gl_DepthRange;\n
uniform initializers must be constant
uniform int gl_NumSamples
uniform lowp int gl_NumSamples
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog;\n
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB;\n
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB;\n
uniform volatile uint gl_SubGroupSizeARB;in volatile uint     gl_SubGroupInvocationARB;in volatile uint64_t gl_SubGroupEqMaskARB;in volatile uint64_t gl_SubGroupGeMaskARB;in volatile uint64_t gl_SubGroupGtMaskARB;in volatile uint64_t gl_SubGroupLeMaskARB;in volatile uint64_t gl_SubGroupLtMaskARB;\n
uniform/buffer blocks require layout(binding=X
unimplemented
unimplemented: PCF input patch without entry point input patch parameter
unimplemented: clip/cull not currently implemented for this stage
unimplemented: component-level gather compare
unimplemented: entry point outputs in patch constant function invocation
unimplemented: multiple output patches in patch constant function
unimplemented: partial image updates
unimplemented: residency status
unimplemented: structure type in image or buffer
unimplemented; need ARB_shader_stencil_export
united-kingdom
united-states
unknown
unknown SPIR-V instruction qualifier
unknown SPIR-V requirement
unknown atomic operation
unknown basic type in image format
unknown blend equation
unknown built-in variable
unknown compression method
unknown error
unknown exception
unknown glslang aggregate
unknown glslang binary operation
unknown glslang unary
unknown header flags set
unknown image type in atomic operation
unknown index type
unknown multisample type
unknown op
unknown operation with no arguments
unknown pack_matrix pragma value
unknown precision qualifier
unknown profile
unknown qualifier
unknown requalification
unknown source
unknown stage
unknown swizzle selection
unknown type
unknown variable
unnormalizedCoordinates
unordered_map/set too long
unorm and snorm only valid in floating point domain
unpack16
unpack32
unpack8
unpackDouble2x32
unpackFloat2x16
unpackHalf2x16
unpackInt2x16
unpackInt2x32
unpackInt4x16
unpackSnorm2x16
unpackSnorm4x8
unpackUint2x16
unpackUint2x32
unpackUint4x16
unpackUnorm2x16
unpackUnorm4x8
unrecognized attribute
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4
unroll
unsigned
unsigned integer
unsigned integer vector
unsigned literal
unsized
unsized array
unsupported construction
unsupported domain type
unsupported outputtopology type
unsupported partitioning type
unterminated mips operator
upsample_maximum_bias_lut
usH9Y\buhH
usampler1D
usampler1DArray
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler2DRect
usampler3D
usamplerBuffer
usamplerCube
usamplerCubeArray
use-variable-pointers
use-vulkan-memory-model
use_storage_buffer
use_variable_pointers
use_vulkan_memory_model
used at end of comment, but this version does not provide line continuation
used at end of comment; the following line is still part of the comment
used for OpTypeFloat
used for OpTypeInt
used in function
used to access transparent buffer backed resources. Such
useless application of layout qualifier
user32
uses more than one PushConstant interface.\n
uses storage class
usesrt$ens
usesrtzens
using
using ES precision qualifier keyword
using array
using early_fragment_tests\n
using future keyword
using future non-square matrix type keyword
using future reserved keyword
using future type keyword
using non_coherent_color_attachment_readEXT\n
using non_coherent_depth_attachment_readEXT\n
using non_coherent_stencil_attachment_readEXT\n
using point mode\n
using post_depth_coverage\n
usiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanNonUniformAMD(u16vec4);float addInvocationsNonUniformAMD(float);vec2  addInvocationsNonUniformAMD(vec2);vec3  addInvocationsNonUniformAMD(vec3);vec4  addInvocationsNonUniformAMD(vec4);int   addInvocationsNonUniformAMD(int);ivec2 addInvocationsNonUniformAMD(ivec2);ivec3 addInvocationsNonUniformAMD(ivec3);ivec4 addInvocationsNonUniformAMD(ivec4);uint  addInvocationsNonUniformAMD(uint);uvec2 addInvocationsNonUniformAMD(uvec2);uvec3 addInvocationsNonUniformAMD(uvec3);uvec4 addInvocationsNonUniformAMD(uvec4);double addInvocationsNonUniformAMD(double);dvec2  addInvocationsNonUniformAMD(dvec2);dvec3  addInvocationsNonUniformAMD(dvec3);dvec4  addInvocationsNonUniformAMD(dvec4);int64_t addInvocationsNonUniformAMD(int64_t);i64vec2 addInvocationsNonUniformAMD(i64vec2);i64vec3 addInvocationsNonUniformAMD(i64vec3);i64vec4 addInvocationsNonUniformAMD(i64vec4);uint64_t addInvocationsNonUniformAMD(uint64_t);u64vec2  addInvocationsNonUniformAMD(u64vec2);u64vec3  addInvocationsNonUniformAMD(u64vec3);u64vec4  addInvocationsNonUniformAMD(u64vec4);float16_t addInvocationsNonUniformAMD(float16_t);f16vec2   addInvocationsNonUniformAMD(f16vec2);f16vec3   addInvocationsNonUniformAMD(f16vec3);f16vec4   addInvocationsNonUniformAMD(f16vec4);int16_t addInvocationsNonUniformAMD(int16_t);i16vec2 addInvocationsNonUniformAMD(i16vec2);i16vec3 addInvocationsNonUniformAMD(i16vec3);i16vec4 addInvocationsNonUniformAMD(i16vec4);uint16_t addInvocationsNonUniformAMD(uint16_t);u16vec2  addInvocationsNonUniformAMD(u16vec2);u16vec3  addInvocationsNonUniformAMD(u16vec3);u16vec4  addInvocationsNonUniformAMD(u16vec4);float addInvocationsInclusiveScanNonUniformAMD(float);vec2  addInvocationsInclusiveScanNonUniformAMD(vec2);vec3  addInvocationsInclusiveScanNonUniformAMD(vec3);vec4  addInvocationsInclusiveScanNonUniformAMD(vec4);int   addInvocationsInclusiveScanNonUniformAMD(int);ivec2 addInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsInclusiveScanNonUniformAMD(ivec4);uint  addInvocationsInclusiveScanNonUniformAMD(uint);uvec2 addInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsInclusiveScanNonUniformAMD(uvec4);double addInvocationsInclusiveScanNonUniformAMD(double);dvec2  addInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsInclusiveScan
usubBorrow
usubpassInput
usubpassInputMS
utH;Q rnI
utexture1D
utexture1DArray
utexture2D
utexture2DArray
utexture2DMS
utexture2DMSArray
utexture2DRect
utexture3D
utextureBuffer
utextureCube
utextureCubeArray
utfD9A
uuD8d${un
uvec2 clock2x32ARB();uint64_t clockARB();uvec2 clockRealtime2x32EXT();uint64_t clockRealtimeEXT();\n
uvec2 conversion to accelerationStructureEXT
uvec2 conversion to reference
uvec4  subgroupPartitionNV(%s);\n
ux@8l$0t
uxHc\rh
uyD;I rsH
uyH;Q rsI
uz-UZ-Cyrl
uz-UZ-Latn
uz-uz-cyrl
uz-uz-latn
u|D8d
u~9t$Xt
u~D;I rxH
uȉE\vD$d
u؋t$HH
v @8{-t
v!\vA\va\v
v"\v(\v-\v2\v7\v=\vB\vG\vL\vR\vW\v\\\va\vg\vl\vq\vv\v|\v
v% 4\r
v0H9{0
v2!L.2
v=Y]Bv
v@D8s(t\rH
vA03>A
vA9q@|T
vAD8s(t\rH
vD8{`D
vE8w-A
vHcC\b
vHcS\bA
vHcS\bH
vID$\b
vIK \f3
vJyl>ɮa'EF
vKfffff
vL$T3҉L$(H
vNcD\b
vValve Corp.0
vValve Corp.1
v\aPlat_IsConsoleApplication
v\b3ۋF\f
v\bH+G\b
v\bL+6I
v\bV_StringToFloat64
v\f@8k(t
v\rtZL
validation.cache
value is out of range
value must be 0 or 1
value too large
variable index
variable indexing buffer block array
variable indexing fragment shader output array
variable indexing sampler array
variable indexing uniform block array
variable name expected
variable needs to be a 2-component 32-bit int array
variable needs to be a 2-component 32-bit int vector
variable needs to be a 3-component 32-bit float vector
variable needs to be a 3-component 32-bit int array
variable needs to be a 3-component 32-bit int vector
variable needs to be a 32-bit float array
variable needs to be a 32-bit float scalar
variable needs to be a 32-bit int
variable needs to be a 32-bit int array
variable needs to be a 32-bit int scalar
variable needs to be a 32-bit int vector
variable needs to be a 4-component 32-bit int vector
variable needs to be a bool scalar
variable needs to be a int scalar
variable needs to be a matrix with
variable with qualifier 'const' not initialized; zero initializing
variable_identifier
variables must be typed as OpTypeImage, OpTypeSampler
variables must be typed as OpTypeStruct, or an array of
variables with qualifier 'const' must be initialized
variables with reference type can't have qualifier 'const
varintOffset
varintSize
varying
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord
vb'vb'v
vb_created_input_layout
vbase destructor
vbtable
vcall
ve_groupH9H\bu
vec2 gl_PointCoord
vec2 textureQueryLOD
vec2 textureQueryLod
vec2 unpackHalf2x16(highp uint);\n
vec3 fetchMicroTriangleVertexPositionNV(accelerationStructureEXT, int, int, int, ivec2);vec2 fetchMicroTriangleVertexBarycentricNV(accelerationStructureEXT, int, int, int, ivec2);\n
vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord;\n
vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;\n
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth
vec4 colorAttachmentReadEXT(attachmentEXT);vec4 colorAttachmentReadEXT(attachmentEXT, int);ivec4 colorAttachmentReadEXT(iattachmentEXT);ivec4 colorAttachmentReadEXT(iattachmentEXT, int);uvec4 colorAttachmentReadEXT(uattachmentEXT);uvec4 colorAttachmentReadEXT(uattachmentEXT, int);\n
vec4 ftransform
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord
vec4 gl_FragColor
vec4 gl_Position;float gl_PointSize
vec4 gl_SecondaryPositionNV;int  gl_SecondaryViewportMaskNV[];vec4 gl_PositionPerViewNV[];int  gl_ViewportMaskPerViewNV
vec4 imageLoad(readonly volatile coherent
vec4 imageLoadLodAMD(readonly volatile coherent
vec4 subpassLoad
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4);vec4 texture1DArray(sampler1DArray, vec2);vec4 texture2DArray(sampler2DArray, vec3);vec4 shadow1DArray(sampler1DArrayShadow, vec3);vec4 shadow2DArray(sampler2DArrayShadow, vec4);vec4 texture1DArray(sampler1DArray, vec2, float);vec4 texture2DArray(sampler2DArray, vec3, float);vec4 shadow1DArray(sampler1DArrayShadow, vec3, float);vec4 texture1DArrayLod(sampler1DArray, vec2, float);vec4 texture2DArrayLod(sampler2DArray, vec3, float);vec4 shadow1DArrayLod(sampler1DArrayShadow, vec3, float);\n
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float);\n
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2);\n
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);\n
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);\n
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);\n
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);\n
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float);\n
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);\n
vec4 textureWeightedQCOM(sampler2D, vec2, sampler2DArray);vec4 textureWeightedQCOM(sampler2D, vec2, sampler1DArray);vec4 textureBoxFilterQCOM(sampler2D, vec2, vec2);vec4 textureBlockMatchSADQCOM(sampler2D, uvec2, sampler2D, uvec2, uvec2);vec4 textureBlockMatchSSDQCOM(sampler2D, uvec2, sampler2D, uvec2, uvec2);\n
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint);\n
vec4);\n
vector
vector component count does not match Result Type <id
vector constructor iterator
vector copy constructor iterator
vector deleting destructor
vector destructor iterator
vector index out of range '%d
vector operand size
vector scale second child into first child
vector size
vector size of the right operand
vector swizzle
vector swizzle selection out of range
vector swizzle selectors not from the same set
vector swizzle too long
vector too long
vector vbase constructor iterator
vector vbase copy constructor iterator
vector-dce
vector-scale
vector-times-matrix
vector2
vector3
vector4
vector<T> too long
vector<bool> too long
vectorcall
vectors
version
version <= 420
version not supported
version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
version: ES shaders for SPIR-V require version 310 or higher
version: compilation for SPIR-V does not support the compatibility profile
version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
version: mesh/task shaders require es profile with version 320 or above, or non-es profile with version 450 or above
version: only version 300, 310, and 320 support the es profile
version: ray tracing shaders require non-es profile with version 460 or above
version: statement must appear first in es-profile shader; before comments or newlines
version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
version: versions 300, 310, and 320 require specifying the 'es' profile
version: versions 300, 310, and 320 support only the es profile
version: versions before 150 do not allow a profile token
versus
vertex
vertex index
vertex input arrays
vertex input cannot be further qualified
vertex output block
vertex spacing
vertex-shader `double` type
vertex-shader `double` type input
vertex-shader array-of-array output
vertex-shader array-of-struct output
vertex-shader struct output
vertex-shader struct output containing an array
vertex-shader struct output containing structure
vertexBindingDivisorCount
vertexBindingDivisors
vertexInputState
vertexpainttintcolor
vertices
verticesH
verticesH9\b
verticesH9\bu5I
vfD9!H
vfD;C
vftable
video.cfg
video_version
view port array2
viewMask
viewMasks
viewOffset
viewOffsets
viewportCount
viewportH9\buDH
viewportState
viewports
virtual
virtual displacement map
vkAcquireDrmDisplayEXT
vkAcquireFullScreenExclusiveModeEXT
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAcquireNextImageKHR returned %s\n
vkAcquirePerformanceConfigurationINTEL
vkAcquireProfilingLockKHR
vkAcquireWinrtDisplayNV
vkAllocateCommandBuffers
vkAllocateCommandBuffers( m_pDeviceVulkan, &cmdBufferCreateinfo, &pCmdBuffer
vkAllocateDescriptorSets
vkAllocateDescriptorSets( m_pDeviceVulkan, &allocInfo, &pCurrentDescriptorSetPool->m_ppDescriptorSets[ pCurrentDescriptorSetPool->m_nCurrentDescriptorSet - 1
vkAllocateMemory
vkAllocateMemory failed fallback system memory allocation.  Fatal error: out of video and system memory.\n
vkAllocateMemory failed for DEVICE_LOCAL memory indicating video memory is full, trying again in system memory as a fallback.\n
vkAllocateMemory failed to allocate GPU memory.  Fatal error: out of GPU video memory and no fallback heap available.\n
vkBeginCommandBuffer
vkBeginCommandBuffer( (*ppCommandBuffer)->m_pCmdBuffer, &beginInfo
vkBeginCommandBuffer( pCmdBuffer, &beginInfo
vkBeginCommandBuffer( pCommandBuffer, &beginInfo
vkBeginCommandBuffer( pResetQueriesCommandBuffer, &beginInfo
vkBindAccelerationStructureMemoryNV
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkBindOpticalFlowSessionImageNV
vkBindVideoSessionMemoryKHR
vkBuildAccelerationStructuresKHR
vkBuildMicromapsEXT
vkCmdBeginConditionalRenderingEXT
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginQueryIndexedEXT
vkCmdBeginRenderPass
vkCmdBeginRenderPass2
vkCmdBeginRenderPass2KHR
vkCmdBeginRendering
vkCmdBeginRenderingKHR
vkCmdBeginTransformFeedbackEXT
vkCmdBeginVideoCodingKHR
vkCmdBindDescriptorBufferEmbeddedSamplersEXT
vkCmdBindDescriptorBuffersEXT
vkCmdBindDescriptorSets
vkCmdBindIndexBuffer
vkCmdBindIndexBuffer2KHR
vkCmdBindInvocationMaskHUAWEI
vkCmdBindPipeline
vkCmdBindPipelineShaderGroupNV
vkCmdBindShadersEXT
vkCmdBindShadingRateImageNV
vkCmdBindTransformFeedbackBuffersEXT
vkCmdBindVertexBuffers
vkCmdBindVertexBuffers2
vkCmdBindVertexBuffers2EXT
vkCmdBlitImage
vkCmdBlitImage2
vkCmdBlitImage2KHR
vkCmdBuildAccelerationStructureNV
vkCmdBuildAccelerationStructuresIndirectKHR
vkCmdBuildAccelerationStructuresKHR
vkCmdBuildMicromapsEXT
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearDepthStencilImage
vkCmdControlVideoCodingKHR
vkCmdCopyAccelerationStructureKHR
vkCmdCopyAccelerationStructureNV
vkCmdCopyAccelerationStructureToMemoryKHR
vkCmdCopyBuffer
vkCmdCopyBuffer2
vkCmdCopyBuffer2KHR
vkCmdCopyBufferToImage
vkCmdCopyBufferToImage2
vkCmdCopyBufferToImage2KHR
vkCmdCopyImage
vkCmdCopyImage2
vkCmdCopyImage2KHR
vkCmdCopyImageToBuffer
vkCmdCopyImageToBuffer2
vkCmdCopyImageToBuffer2KHR
vkCmdCopyMemoryIndirectNV
vkCmdCopyMemoryToAccelerationStructureKHR
vkCmdCopyMemoryToImageIndirectNV
vkCmdCopyMemoryToMicromapEXT
vkCmdCopyMicromapEXT
vkCmdCopyMicromapToMemoryEXT
vkCmdCopyQueryPoolResults
vkCmdCuLaunchKernelNVX
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDecodeVideoKHR
vkCmdDecompressMemoryIndirectCountNV
vkCmdDecompressMemoryNV
vkCmdDispatch
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchGraphAMDX
vkCmdDispatchGraphIndirectAMDX
vkCmdDispatchGraphIndirectCountAMDX
vkCmdDispatchIndirect
vkCmdDraw
vkCmdDrawClusterHUAWEI
vkCmdDrawClusterIndirectHUAWEI
vkCmdDrawIndexed
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirectCount
vkCmdDrawIndexedIndirectCountAMD
vkCmdDrawIndexedIndirectCountKHR
vkCmdDrawIndirect
vkCmdDrawIndirectByteCountEXT
vkCmdDrawIndirectCount
vkCmdDrawIndirectCountAMD
vkCmdDrawIndirectCountKHR
vkCmdDrawMeshTasksEXT
vkCmdDrawMeshTasksIndirectCountEXT
vkCmdDrawMeshTasksIndirectCountNV
vkCmdDrawMeshTasksIndirectEXT
vkCmdDrawMeshTasksIndirectNV
vkCmdDrawMeshTasksNV
vkCmdDrawMultiEXT
vkCmdDrawMultiIndexedEXT
vkCmdEncodeVideoKHR
vkCmdEndConditionalRenderingEXT
vkCmdEndDebugUtilsLabelEXT
vkCmdEndQuery
vkCmdEndQueryIndexedEXT
vkCmdEndRenderPass
vkCmdEndRenderPass2
vkCmdEndRenderPass2KHR
vkCmdEndRendering
vkCmdEndRenderingKHR
vkCmdEndTransformFeedbackEXT
vkCmdEndVideoCodingKHR
vkCmdExecuteCommands
vkCmdExecuteGeneratedCommandsNV
vkCmdFillBuffer
vkCmdInitializeGraphScratchMemoryAMDX
vkCmdInsertDebugUtilsLabelEXT
vkCmdNextSubpass
vkCmdNextSubpass2
vkCmdNextSubpass2KHR
vkCmdOpticalFlowExecuteNV
vkCmdPipelineBarrier
vkCmdPipelineBarrier2
vkCmdPipelineBarrier2KHR
vkCmdPreprocessGeneratedCommandsNV
vkCmdPushConstants
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCmdResetEvent
vkCmdResetEvent2
vkCmdResetEvent2KHR
vkCmdResetQueryPool
vkCmdResolveImage
vkCmdResolveImage2
vkCmdResolveImage2KHR
vkCmdSetAlphaToCoverageEnableEXT
vkCmdSetAlphaToOneEnableEXT
vkCmdSetAttachmentFeedbackLoopEnableEXT
vkCmdSetBlendConstants
vkCmdSetCheckpointNV
vkCmdSetCoarseSampleOrderNV
vkCmdSetColorBlendAdvancedEXT
vkCmdSetColorBlendEnableEXT
vkCmdSetColorBlendEquationEXT
vkCmdSetColorWriteEnableEXT
vkCmdSetColorWriteMaskEXT
vkCmdSetConservativeRasterizationModeEXT
vkCmdSetCoverageModulationModeNV
vkCmdSetCoverageModulationTableEnableNV
vkCmdSetCoverageModulationTableNV
vkCmdSetCoverageReductionModeNV
vkCmdSetCoverageToColorEnableNV
vkCmdSetCoverageToColorLocationNV
vkCmdSetCullMode
vkCmdSetCullModeEXT
vkCmdSetDepthBias
vkCmdSetDepthBias2EXT
vkCmdSetDepthBiasEnable
vkCmdSetDepthBiasEnableEXT
vkCmdSetDepthBounds
vkCmdSetDepthBoundsTestEnable
vkCmdSetDepthBoundsTestEnableEXT
vkCmdSetDepthClampEnableEXT
vkCmdSetDepthClipEnableEXT
vkCmdSetDepthClipNegativeOneToOneEXT
vkCmdSetDepthCompareOp
vkCmdSetDepthCompareOpEXT
vkCmdSetDepthTestEnable
vkCmdSetDepthTestEnableEXT
vkCmdSetDepthWriteEnable
vkCmdSetDepthWriteEnableEXT
vkCmdSetDescriptorBufferOffsetsEXT
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetDiscardRectangleEXT
vkCmdSetDiscardRectangleEnableEXT
vkCmdSetDiscardRectangleModeEXT
vkCmdSetEvent
vkCmdSetEvent2
vkCmdSetEvent2KHR
vkCmdSetExclusiveScissorEnableNV
vkCmdSetExclusiveScissorNV
vkCmdSetExtraPrimitiveOverestimationSizeEXT
vkCmdSetFragmentShadingRateEnumNV
vkCmdSetFragmentShadingRateKHR
vkCmdSetFrontFace
vkCmdSetFrontFaceEXT
vkCmdSetLineRasterizationModeEXT
vkCmdSetLineStippleEXT
vkCmdSetLineStippleEnableEXT
vkCmdSetLineWidth
vkCmdSetLogicOpEXT
vkCmdSetLogicOpEnableEXT
vkCmdSetPatchControlPointsEXT
vkCmdSetPerformanceMarkerINTEL
vkCmdSetPerformanceOverrideINTEL
vkCmdSetPerformanceStreamMarkerINTEL
vkCmdSetPolygonModeEXT
vkCmdSetPrimitiveRestartEnable
vkCmdSetPrimitiveRestartEnableEXT
vkCmdSetPrimitiveTopology
vkCmdSetPrimitiveTopologyEXT
vkCmdSetProvokingVertexModeEXT
vkCmdSetRasterizationSamplesEXT
vkCmdSetRasterizationStreamEXT
vkCmdSetRasterizerDiscardEnable
vkCmdSetRasterizerDiscardEnableEXT
vkCmdSetRayTracingPipelineStackSizeKHR
vkCmdSetRepresentativeFragmentTestEnableNV
vkCmdSetSampleLocationsEXT
vkCmdSetSampleLocationsEnableEXT
vkCmdSetSampleMaskEXT
vkCmdSetScissor
vkCmdSetScissorWithCount
vkCmdSetScissorWithCountEXT
vkCmdSetShadingRateImageEnableNV
vkCmdSetStencilCompareMask
vkCmdSetStencilOp
vkCmdSetStencilOpEXT
vkCmdSetStencilReference
vkCmdSetStencilTestEnable
vkCmdSetStencilTestEnableEXT
vkCmdSetStencilWriteMask
vkCmdSetTessellationDomainOriginEXT
vkCmdSetVertexInputEXT
vkCmdSetViewport
vkCmdSetViewportShadingRatePaletteNV
vkCmdSetViewportSwizzleNV
vkCmdSetViewportWScalingEnableNV
vkCmdSetViewportWScalingNV
vkCmdSetViewportWithCount
vkCmdSetViewportWithCountEXT
vkCmdSubpassShadingHUAWEI
vkCmdTraceRaysIndirect2KHR
vkCmdTraceRaysIndirectKHR
vkCmdTraceRaysKHR
vkCmdTraceRaysNV
vkCmdUpdateBuffer
vkCmdUpdatePipelineIndirectBufferNV
vkCmdWaitEvents
vkCmdWaitEvents2
vkCmdWaitEvents2KHR
vkCmdWriteAccelerationStructuresPropertiesKHR
vkCmdWriteAccelerationStructuresPropertiesNV
vkCmdWriteBufferMarker2AMD
vkCmdWriteBufferMarkerAMD
vkCmdWriteMicromapsPropertiesEXT
vkCmdWriteTimestamp
vkCmdWriteTimestamp2
vkCmdWriteTimestamp2KHR
vkCompileDeferredNV
vkCopyAccelerationStructureKHR
vkCopyAccelerationStructureToMemoryKHR
vkCopyImageToImageEXT
vkCopyImageToMemoryEXT
vkCopyMemoryToAccelerationStructureKHR
vkCopyMemoryToImageEXT
vkCopyMemoryToMicromapEXT
vkCopyMicromapEXT
vkCopyMicromapToMemoryEXT
vkCreateAccelerationStructureKHR
vkCreateAccelerationStructureKHR( Device(), &asci, nullptr, &m_pAccelerationStructure
vkCreateAccelerationStructureKHR( Device(), &asci, nullptr, &pNewAcclerationStructure
vkCreateAccelerationStructureNV
vkCreateBuffer
vkCreateBuffer( m_pDeviceVulkan, &bufferCreateInfo, NULL, &pNewMemoryPool->m_pVulkanBuffer
vkCreateBuffer( m_pDeviceVulkan, &bufferCreateInfo, NULL, ppVKBufferOut
vkCreateBuffer( m_pDeviceVulkan, &bufferCreateInfo, nullptr, &pBuffer
vkCreateBufferView
vkCreateBufferView( m_pDeviceVulkan, &bufferViewCreateInfo, NULL, &m_pTexelBufferView
vkCreateCommandPool
vkCreateCommandPool( m_pDeviceVulkan, &cmdPoolCreateInfo, NULL, &cmdPool
vkCreateComputePipelines
vkCreateComputePipelines( m_pDeviceVulkan, pPipelineCache, 1, &computePipelineCreateInfo, NULL, &pPipelineOut->m_pPipeline
vkCreateCuFunctionNVX
vkCreateCuModuleNVX
vkCreateDebugReportCallbackEXT
vkCreateDebugReportCallbackEXT was unsuccessful.\n
vkCreateDebugUtilsMessengerEXT
vkCreateDebugUtilsMessengerEXT( m_InstanceVulkan, &debugUtilsMessengerCreateInfo, nullptr, &m_pDebugUtilsMessengerVulkan
vkCreateDeferredOperationKHR
vkCreateDeferredOperationKHR( m_pDevice, VK_NULL_HANDLE, &hDeferredOp
vkCreateDescriptorPool
vkCreateDescriptorPool( m_pDeviceVulkan, &descriptorPoolCreateInfo, NULL, &pDescriptorPool
vkCreateDescriptorSetLayout
vkCreateDescriptorSetLayout( m_pDeviceVulkan, &descriptorSetLayoutCreateInfo, NULL, &pPipelineLayoutOut->m_ppDescriptorSetLayouts[ nDescriptorSet
vkCreateDescriptorSetLayout( m_pDeviceVulkan, &descriptorSetLayoutCreateInfo, NULL, &pipelineLayout.m_ppDescriptorSetLayouts[ nDescriptorSet
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDescriptorUpdateTemplateKHR( m_pDeviceVulkan, &descriptorUpdateTemplateCreateInfo, NULL, &pPipelineOut->m_pDescriptorUpdateTemplate
vkCreateDevice
vkCreateDevice failed, unable to create Vulkan device.\n
vkCreateDisplayModeKHR
vkCreateDisplayPlaneSurfaceKHR
vkCreateEvent
vkCreateExecutionGraphPipelinesAMDX
vkCreateFence
vkCreateFence( VulkanDevice(), &fenceCreateInfo, NULL, &pFence
vkCreateFramebuffer
vkCreateFramebuffer( m_pDeviceVulkan, &framebufferCreateInfo, NULL, &pFramebufferVulkan
vkCreateGraphicsPipelines
vkCreateGraphicsPipelines failed after %d retries. Giving up.\n
vkCreateGraphicsPipelines( m_pDeviceVulkan, VK_NULL_HANDLE, 1, &pipelineCreateInfo, NULL, &pPipelineOut->m_pPipeline
vkCreateGraphicsPipelines( m_pDeviceVulkan, pPipelineCache, 1, &executablePipelineCreateInfo, NULL, &pLinkTimeOptimizedPipeline
vkCreateGraphicsPipelines( m_pDeviceVulkan, pPipelineCache, 1, &executablePipelineCreateInfo, NULL, &pPipelineOut->m_pPipeline
vkCreateGraphicsPipelines( m_pDeviceVulkan, pPipelineCacheToUse, 1, &pipelineCreateInfo, NULL, &pPipelineOut->m_pPipeline
vkCreateHeadlessSurfaceEXT
vkCreateImage
vkCreateImage( VulkanDevice(), &imageCreateInfo, NULL, &pImage
vkCreateImage() - failed to create cooperative fullscreen image.\n
vkCreateImage() - failed to create cooperative fullscreen intermediate image.\n
vkCreateImageView
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppColorTargetViewSrgb[ i ]->GetPtr
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppColorTargetView[ i ]->GetPtr
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppPerArraySliceColorTargetViewSrgb[ i ]->GetPtr
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppPerArraySliceColorTargetView[ i ]->GetPtr
vkCreateImageView( VulkanDevice(), &compressedBlockViewCreateInfo, NULL, m_ImageViews.m_ppPerMipLevelUAVCompressedBlockView[ i ]->GetPtr
vkCreateImageView( VulkanDevice(), &cubeAsArrayImageViewCreateInfo, NULL, m_ImageViews.m_pCubeAsArrayImageView->GetPtr
vkCreateImageView( VulkanDevice(), &cubeAsArrayImageViewCreateInfoSrgb, NULL, m_ImageViews.m_pCubeAsArrayImageViewSrgb->GetPtr
vkCreateImageView( VulkanDevice(), &dsViewCreateInfo, NULL, m_ImageViews.m_pDepthStencilView->GetPtr
vkCreateImageView( VulkanDevice(), &dsViewCreateInfo, NULL, m_ImageViews.m_ppPerArraySliceDepthStencilView[i]->GetPtr
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_ImageViews.m_pImageView->GetPtr
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_ImageViews.m_ppPerMipLevelImageView[ i ]->GetPtr
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_pImageView->GetPtr
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_pImageViewSrgb->GetPtr
vkCreateImageView( VulkanDevice(), &imageViewCreateInfoSrgb, NULL, m_ImageViews.m_pImageViewSrgb->GetPtr
vkCreateImageView( VulkanDevice(), &imageViewCreateInfoSrgb, NULL, m_ImageViews.m_ppPerMipLevelImageViewSrgb[ i ]->GetPtr
vkCreateIndirectCommandsLayoutNV
vkCreateInstance
vkCreateInstance failed, unable to create instance.\n
vkCreateMicromapEXT
vkCreateOpticalFlowSessionNV
vkCreatePipelineCache
vkCreatePipelineCache( m_pDeviceVulkan, &pipelineCacheCreateInfo, NULL, &m_pPerThreadPipelineCache[ nThread
vkCreatePipelineCache( m_pDeviceVulkan, &pipelineCacheCreateInfo, NULL, &m_pPipelineCache
vkCreatePipelineLayout
vkCreatePipelineLayout( m_pDevice, &plci, nullptr, &m_vkRayTracePipelineLayout
vkCreatePipelineLayout( m_pDeviceVulkan, &pipelineLayoutCreateInfo, NULL, &pPipelineLayoutOut->m_pPipelineLayout
vkCreatePipelineLayout( m_pDeviceVulkan, &pipelineLayoutCreateInfo, NULL, &pipelineLayout.m_pPipelineLayout
vkCreatePrivateDataSlot
vkCreatePrivateDataSlotEXT
vkCreateQueryPool
vkCreateQueryPool( VulkanDevice(), &queryPoolCreateInfo, NULL, &m_pTimestampQueryPool
vkCreateQueryPool( m_pDeviceVulkan, &queryPoolCreateInfo, NULL, &newQueryPool.m_pQueryPool
vkCreateRayTracingPipelinesKHR
vkCreateRayTracingPipelinesKHR( m_pDevice, VK_NULL_HANDLE, pPipelineCache, 1, &rpci, nullptr, &m_vkRayTracePipeline
vkCreateRayTracingPipelinesNV
vkCreateRenderPass
vkCreateRenderPass( VulkanDevice(), pRenderPassCreateInfo, nullptr, &pFossilizeRenderPass->m_pExplicitRenderPass
vkCreateRenderPass( m_pDeviceVulkan, &renderPassCreateInfo, NULL, &pRenderPass
vkCreateRenderPass2
vkCreateRenderPass2KHR
vkCreateSampler
vkCreateSampler( VulkanDevice(), &samplerCreateInfo, NULL, &pSampler
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateSemaphore( VulkanDevice(), &semaphoreCreateInfo, NULL, &m_pMultiGpuTransferSemaphores[ nTransfer
vkCreateSemaphore( VulkanDevice(), &semaphoreCreateInfo, NULL, &pSemaphore
vkCreateSemaphore( m_pDeviceVulkan, &acquireNextImageSemaphoreCreateInfo, NULL, &m_ppAcquireNextImageSemaphores[ nSem
vkCreateSemaphore( m_pDeviceVulkan, &semaphoreCreateInfo, nullptr, &pVulkanSemaphore->m_pSemaphore
vkCreateShaderModule
vkCreateShaderModule( VulkanDevice(), pShaderModuleCreateInfo, nullptr, &pShaderModule
vkCreateShadersEXT
vkCreateSharedSwapchainsKHR
vkCreateSwapchainKHR
vkCreateSwapchainKHR( pDeviceVulkan, &swapChainCreateInfo, nullptr, &m_pSwapChainKHR
vkCreateValidationCacheEXT
vkCreateValidationCacheEXT returned error %s.\n
vkCreateVideoSessionKHR
vkCreateVideoSessionParametersKHR
vkCreateWin32SurfaceKHR
vkDebugMarkerSetObjectNameEXT
vkDebugMarkerSetObjectTagEXT
vkDebugReportMessageEXT
vkDeferredOperationJoinKHR
vkDestroyAccelerationStructureKHR
vkDestroyAccelerationStructureNV
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyCuFunctionNVX
vkDestroyCuModuleNVX
vkDestroyDebugReportCallbackEXT
vkDestroyDebugUtilsMessengerEXT
vkDestroyDeferredOperationKHR
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyIndirectCommandsLayoutNV
vkDestroyInstance
vkDestroyMicromapEXT
vkDestroyOpticalFlowSessionNV
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyPrivateDataSlot
vkDestroyPrivateDataSlotEXT
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderEXT
vkDestroyShaderModule
vkDestroySurfaceKHR
vkDestroySwapchainKHR
vkDestroyValidationCacheEXT
vkDestroyVideoSessionKHR
vkDestroyVideoSessionParametersKHR
vkDeviceWaitIdle
vkDeviceWaitIdle( m_pDeviceVulkan
vkDisplayPowerControlEXT
vkEndCommandBuffer
vkEndCommandBuffer( pCmdBuffer
vkEndCommandBuffer( pCommandBuffer
vkEndCommandBuffer( pCommandBuffer->m_pCmdBuffer
vkEndCommandBuffer( pResetQueriesCommandBuffer
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceExtensionProperties( NULL, ... ) failed.\n
vkEnumerateInstanceExtensionProperties( NULL, ... , NULL ) failed.\n
vkEnumerateInstanceExtensionProperties( layerName, ... ) failed.\n
vkEnumerateInstanceExtensionProperties( layerName, ... , NULL ) failed.\n
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceLayerProperties( ... ) failed.\n
vkEnumerateInstanceLayerProperties( ... , NULL ) failed.\n
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDeviceGroupsKHR: no physical device groups supported.  Using single GPU.\n
vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR
vkEnumeratePhysicalDevices
vkEnumeratePhysicalDevices failed, unable to enumerate GPUs with Vulkan.\n
vkEnumeratePhysicalDevices failed, unable to init and enumerate GPUs with Vulkan.\n
vkFlushMappedMemoryRanges
vkFreeCommandBuffers
vkFreeDescriptorSets
vkFreeMemory
vkGetAccelerationStructureBuildSizesKHR
vkGetAccelerationStructureDeviceAddressKHR
vkGetAccelerationStructureHandleNV
vkGetAccelerationStructureMemoryRequirementsNV
vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT
vkGetBufferDeviceAddress
vkGetBufferDeviceAddressEXT
vkGetBufferDeviceAddressKHR
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetBufferOpaqueCaptureAddress
vkGetBufferOpaqueCaptureAddressKHR
vkGetBufferOpaqueCaptureDescriptorDataEXT
vkGetCalibratedTimestampsEXT
vkGetDeferredOperationMaxConcurrencyKHR
vkGetDeferredOperationResultKHR
vkGetDeferredOperationResultKHR( m_pDevice, hDeferredOp
vkGetDescriptorEXT
vkGetDescriptorSetHostMappingVALVE
vkGetDescriptorSetLayoutBindingOffsetEXT
vkGetDescriptorSetLayoutHostMappingInfoVALVE
vkGetDescriptorSetLayoutSizeEXT
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDeviceAccelerationStructureCompatibilityKHR
vkGetDeviceBufferMemoryRequirements
vkGetDeviceBufferMemoryRequirementsKHR
vkGetDeviceFaultInfoEXT
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModes2EXT
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceImageMemoryRequirements
vkGetDeviceImageMemoryRequirementsKHR
vkGetDeviceImageSparseMemoryRequirements
vkGetDeviceImageSparseMemoryRequirementsKHR
vkGetDeviceImageSubresourceLayoutKHR
vkGetDeviceMemoryCommitment
vkGetDeviceMemoryOpaqueCaptureAddress
vkGetDeviceMemoryOpaqueCaptureAddressKHR
vkGetDeviceMicromapCompatibilityEXT
vkGetDeviceProcAddr
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI
vkGetDisplayModeProperties2KHR
vkGetDisplayModePropertiesKHR
vkGetDisplayPlaneCapabilities2KHR
vkGetDisplayPlaneCapabilitiesKHR
vkGetDisplayPlaneSupportedDisplaysKHR
vkGetDrmDisplayEXT
vkGetDynamicRenderingTilePropertiesQCOM
vkGetEncodedVideoSessionParametersKHR
vkGetEventStatus
vkGetExecutionGraphPipelineNodeIndexAMDX
vkGetExecutionGraphPipelineScratchSizeAMDX
vkGetFenceFdKHR
vkGetFenceStatus
vkGetFenceWin32HandleKHR
vkGetFramebufferTilePropertiesQCOM
vkGetGeneratedCommandsMemoryRequirementsNV
vkGetImageDrmFormatModifierPropertiesEXT
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageOpaqueCaptureDescriptorDataEXT
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetImageSubresourceLayout2EXT
vkGetImageSubresourceLayout2KHR
vkGetImageViewAddressNVX
vkGetImageViewHandleNVX
vkGetImageViewOpaqueCaptureDescriptorDataEXT
vkGetInstanceProcAddr
vkGetLatencyTimingsNV
vkGetMemoryFdKHR
vkGetMemoryFdPropertiesKHR
vkGetMemoryHostPointerPropertiesEXT
vkGetMemoryRemoteAddressNV
vkGetMemoryWin32HandleKHR
vkGetMemoryWin32HandleNV
vkGetMemoryWin32HandlePropertiesKHR
vkGetMicromapBuildSizesEXT
vkGetPastPresentationTimingGOOGLE
vkGetPerformanceParameterINTEL
vkGetPhysicalDeviceCalibrateableTimeDomainsEXT
vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR
vkGetPhysicalDeviceCooperativeMatrixPropertiesNV
vkGetPhysicalDeviceDisplayPlaneProperties2KHR
vkGetPhysicalDeviceDisplayPlanePropertiesKHR
vkGetPhysicalDeviceDisplayProperties2KHR
vkGetPhysicalDeviceDisplayPropertiesKHR
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalImageFormatPropertiesNV
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceFragmentShadingRatesKHR
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties failed checking for MSAA support, assuming MSAA can't be supported\n
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceMultisamplePropertiesEXT
vkGetPhysicalDeviceOpticalFlowImageFormatsNV
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV
vkGetPhysicalDeviceSurfaceCapabilities2EXT
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR( pPhysicalDeviceVulkan, m_pSurfaceKHR, &surfaceCaps
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModes2EXT
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfacePresentModesKHR( pPhysicalDeviceVulkan, m_pSurfaceKHR, &nPresentModeCount, NULL
vkGetPhysicalDeviceSurfacePresentModesKHR( pPhysicalDeviceVulkan, m_pSurfaceKHR, &nPresentModeCount, pPresentModes
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceToolProperties
vkGetPhysicalDeviceToolPropertiesEXT
vkGetPhysicalDeviceVideoCapabilitiesKHR
vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR
vkGetPhysicalDeviceVideoFormatPropertiesKHR
vkGetPhysicalDeviceWin32PresentationSupportKHR
vkGetPipelineCacheData
vkGetPipelineCacheData failed, unable to store pipeline cache to disk.\n
vkGetPipelineCacheData( m_pDeviceVulkan, m_pPipelineCache, &nCacheSize, NULL
vkGetPipelineCacheData( m_pDeviceVulkan, pPipelineCache, &nCurrentPipelineSize, NULL
vkGetPipelineCacheSize failed, unable to store pipeline cache to disk.\n
vkGetPipelineExecutableInternalRepresentationsKHR
vkGetPipelineExecutablePropertiesKHR
vkGetPipelineExecutableStatisticsKHR
vkGetPipelineIndirectDeviceAddressNV
vkGetPipelineIndirectMemoryRequirementsNV
vkGetPipelinePropertiesEXT
vkGetPrivateData
vkGetPrivateDataEXT
vkGetQueryPoolResults
vkGetQueueCheckpointData2NV
vkGetQueueCheckpointDataNV
vkGetRayTracingCaptureReplayShaderGroupHandlesKHR
vkGetRayTracingShaderGroupHandlesKHR
vkGetRayTracingShaderGroupHandlesNV
vkGetRayTracingShaderGroupStackSizeKHR
vkGetRefreshCycleDurationGOOGLE
vkGetRenderAreaGranularity
vkGetRenderingAreaGranularityKHR
vkGetSamplerOpaqueCaptureDescriptorDataEXT
vkGetSemaphoreCounterValue
vkGetSemaphoreCounterValueKHR
vkGetSemaphoreFdKHR
vkGetSemaphoreWin32HandleKHR
vkGetShaderBinaryDataEXT
vkGetShaderInfoAMD
vkGetShaderModuleCreateInfoIdentifierEXT
vkGetShaderModuleIdentifierEXT
vkGetSwapchainCounterEXT
vkGetSwapchainImagesKHR
vkGetSwapchainImagesKHR( m_pDeviceVulkan, m_pSwapChainKHR, &m_nSwapQueueImageCount, NULL
vkGetSwapchainImagesKHR( m_pDeviceVulkan, m_pSwapChainKHR, &m_nSwapQueueImageCount, pSwapChainImages
vkGetSwapchainStatusKHR
vkGetValidationCacheDataEXT
vkGetVideoSessionMemoryRequirementsKHR
vkGetWinrtDisplayNV
vkImportFenceFdKHR
vkImportFenceWin32HandleKHR
vkImportSemaphoreFdKHR
vkImportSemaphoreWin32HandleKHR
vkInitializePerformanceApiINTEL
vkInvalidateMappedMemoryRanges
vkLatencySleepNV
vkMapMemory
vkMapMemory( VulkanDevice(), pStagingMemory, 0, nStagingMemSize, 0, &pLockedData
vkMapMemory( VulkanDevice(), readback.m_pDeviceMemory, 0, readback.m_nMemorySize, 0, &pLockedData
vkMapMemory( m_pDeviceVulkan, pNewMemoryPool->m_pGPUMemory, 0, pNewMemoryPool->m_nPoolSize, 0, (void**)&pNewMemoryPool->m_pMappedBuffer
vkMapMemory2KHR
vkMergePipelineCaches
vkMergeValidationCachesEXT
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkQueueNotifyOutOfBandNV
vkQueuePresentKHR
vkQueuePresentKHR failed with error %d\n
vkQueueSetPerformanceConfigurationINTEL
vkQueueSubmit
vkQueueSubmit( VulkanQueue(), 1, &submitInfo, VK_NULL_HANDLE
vkQueueSubmit( VulkanQueue(), 1, &submitInfo, pFence ? pFence->Get() : VK_NULL_HANDLE
vkQueueSubmit( VulkanQueue(), 1, &submitInfo, presentFence.m_pFence
vkQueueSubmit( pQueue, 1, &submitInfo, pFence->Get
vkQueueSubmit2
vkQueueSubmit2KHR
vkQueueWaitIdle
vkQueueWaitIdle( VulkanQueue
vkQueueWaitIdle( m_pQueueVulkan
vkRegisterDeviceEventEXT
vkRegisterDisplayEventEXT
vkReleaseDisplayEXT
vkReleaseFullScreenExclusiveModeEXT
vkReleasePerformanceConfigurationINTEL
vkReleaseProfilingLockKHR
vkReleaseSwapchainImagesEXT
vkResetCommandBuffer
vkResetCommandBuffer( (*ppCommandBuffer)->m_pCmdBuffer, 0
vkResetCommandBuffer( pCmdBuffer, 0
vkResetCommandBuffer( pCommandBuffer, 0
vkResetCommandBuffer( pResetQueriesCommandBuffer, 0
vkResetCommandPool
vkResetDescriptorPool
vkResetEvent
vkResetFences
vkResetQueryPool
vkResetQueryPoolEXT
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetDeviceMemoryPriorityEXT
vkSetEvent
vkSetHdrMetadataEXT
vkSetLatencyMarkerNV
vkSetLatencySleepModeNV
vkSetLocalDimmingAMD
vkSetPrivateData
vkSetPrivateDataEXT
vkSignalSemaphore
vkSignalSemaphoreKHR
vkSubmitDebugUtilsMessageEXT
vkTransitionImageLayoutEXT
vkTrimCommandPool
vkTrimCommandPoolKHR
vkUninitializePerformanceApiINTEL
vkUnmapMemory
vkUnmapMemory2KHR
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
vkUpdateDescriptorSets
vkUpdateVideoSessionParametersKHR
vkWaitForFences
vkWaitForPresentKHR
vkWaitSemaphores
vkWaitSemaphoresKHR
vkWriteAccelerationStructuresPropertiesKHR
vkWriteMicromapsPropertiesEXT
vload_half
vload_halfn
vloada_halfn
vloadn
vmaAllocateMemory
vmaAllocateMemory failed fallback system memory allocation.  Fatal error: out of video and system memory.\n
vmaAllocateMemory failed for DEVICE_LOCAL memory indicating video memory is full, trying again in system memory as a fallback.\n
vmaBeginDefragmentationPass defrag failed with error: %s\n
vmaBeginDefragmentationPass: %.2f ms\n
vmaBindImageMemory( GetVmaAllocator(), m_pDepthStencilImage->m_pVmaAllocation, m_pDepthStencilImage->m_pImage
vmaBindImageMemory( GetVmaAllocator(), m_pIntermediateImageResolved->m_pVmaAllocation, m_pIntermediateImageResolved->m_pImage
vmaBindImageMemory( GetVmaAllocator(), m_pIntermediateSwapChainImage->m_pVmaAllocation, m_pIntermediateSwapChainImage->m_pImage
vmaBindImageMemory( GetVmaAllocator(), m_pVulkanImage->m_pVmaAllocation, m_pVulkanImage->m_pImage
vmaBindImageMemory( GetVmaAllocator(), pVulkanImage->m_pVmaAllocation, pVulkanImage->m_pImage
vmaBindImageMemory2( GetVmaAllocator(), pVulkanImage->m_pVmaAllocation, 0, pVulkanImage->m_pImage, &bindImageMemoryInfo
vmaCreateBufferWithAlignment
vmaCreateBufferWithAlignment failed fallback system memory allocation.  Fatal error: out of video and system memory.\n
vmaCreatePool failed with error: %d\n
vmaStats.json
vma_memdump%d.json
void EmitMeshTasksEXT(uint, uint, uint);\n
void EmitStreamVertex(int);void EndStreamPrimitive(int
void EmitVertex();void EndPrimitive();\n
void SetMeshOutputsEXT(uint, uint);\n
void assumeEXT(bool);bool expectEXT(bool, bool);bvec2 expectEXT(bvec2, bvec2);bvec3 expectEXT(bvec3, bvec3);bvec4 expectEXT(bvec4, bvec4);int expectEXT(int, int);ivec2 expectEXT(ivec2, ivec2);ivec3 expectEXT(ivec3, ivec3);ivec4 expectEXT(ivec4, ivec4);uint expectEXT(uint, uint);uvec2 expectEXT(uvec2, uvec2);uvec3 expectEXT(uvec3, uvec3);uvec4 expectEXT(uvec4, uvec4);\n
void barrier
void beginInvocationInterlockARB(void);void endInvocationInterlockARB(void
void controlBarrier(int, int, int, int);\nvoid memoryBarrier(int, int, int);\n
void coopMatLoad(out coopmat m, volatile coherent int8_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent int16_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent int32_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent int64_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent uint8_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent uint16_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent uint32_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent uint64_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent float16_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent float[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent float64_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i8vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i16vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i32vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i64vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u8vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u16vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u32vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u64vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent f16vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent f32vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent f64vec2[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i8vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i16vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i32vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent i64vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u8vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u16vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u32vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent u64vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent f16vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent f32vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatLoad(out coopmat m, volatile coherent f64vec4[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent int8_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent int16_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent int32_t[] buf, uint element, uint stride, int matrixLayout);\nvoid coopMatStore(coopmat m, volatile coherent int64_t[] buf, uint element
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent float64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatStoreNV(fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);\nfcoopmatNV coopMatMulAddNV(fcoopmatNV A, fcoopmatNV B, fcoopmatNV C);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);\nvoid coopMatLoadNV(out ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stri
void debugPrintfEXT();\n
void executeCallableNV(uint, int);void executeCallableEXT(uint, int);\n
void function cannot return a value
void ignoreIntersectionNV();void terminateRayNV();\n
void imageAtomicStore(volatile coherent
void imageAtomicStore(writeonly volatile coherent
void imageStore(writeonly volatile coherent
void imageStoreLodAMD(writeonly volatile coherent
void memoryBarrier
void memoryBarrierAtomicCounter
void memoryBarrierBuffer
void memoryBarrierImage
void memoryBarrierShared();void groupMemoryBarrier
void rayQueryInitializeEXT(rayQueryEXT, accelerationStructureEXT, uint, uint, vec3, float, vec3, float);void rayQueryTerminateEXT(rayQueryEXT);void rayQueryGenerateIntersectionEXT(rayQueryEXT, float);void rayQueryConfirmIntersectionEXT(rayQueryEXT);bool rayQueryProceedEXT(rayQueryEXT);uint rayQueryGetIntersectionTypeEXT(rayQueryEXT, bool);float rayQueryGetRayTMinEXT(rayQueryEXT);uint rayQueryGetRayFlagsEXT(rayQueryEXT);vec3 rayQueryGetWorldRayOriginEXT(rayQueryEXT);vec3 rayQueryGetWorldRayDirectionEXT(rayQueryEXT);float rayQueryGetIntersectionTEXT(rayQueryEXT, bool);int rayQueryGetIntersectionInstanceCustomIndexEXT(rayQueryEXT, bool);int rayQueryGetIntersectionInstanceIdEXT(rayQueryEXT, bool);uint rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT(rayQueryEXT, bool);int rayQueryGetIntersectionGeometryIndexEXT(rayQueryEXT, bool);int rayQueryGetIntersectionPrimitiveIndexEXT(rayQueryEXT, bool);vec2 rayQueryGetIntersectionBarycentricsEXT(rayQueryEXT, bool);bool rayQueryGetIntersectionFrontFaceEXT(rayQueryEXT, bool);bool rayQueryGetIntersectionCandidateAABBOpaqueEXT(rayQueryEXT);vec3 rayQueryGetIntersectionObjectRayDirectionEXT(rayQueryEXT, bool);vec3 rayQueryGetIntersectionObjectRayOriginEXT(rayQueryEXT, bool);mat4x3 rayQueryGetIntersectionObjectToWorldEXT(rayQueryEXT, bool);mat4x3 rayQueryGetIntersectionWorldToObjectEXT(rayQueryEXT, bool);void rayQueryGetIntersectionTriangleVertexPositionsEXT(rayQueryEXT, bool, out vec3[3]);\n
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool);\nbool   subgroupAny(bool);\nuvec4  subgroupBallot(bool);\nbool   subgroupInverseBallot(uvec4);\nbool   subgroupBallotBitExtract(uvec4, uint);\nuint   subgroupBallotBitCount(uvec4);\nuint   subgroupBallotInclusiveBitCount(uvec4);\nuint   subgroupBallotExclusiveBitCount(uvec4);\nuint   subgroupBallotFindLSB(uvec4);\nuint   subgroupBallotFindMSB(uvec4);\n
void subgroupMemoryBarrierShared();\n
void traceNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void traceRayMotionNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,float,int);void traceRayEXT(accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void executeCallableNV(uint, int);void executeCallableEXT(uint, int);void hitObjectTraceRayNV(hitObjectNV,accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void hitObjectTraceRayMotionNV(hitObjectNV,accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,float,int);void hitObjectRecordHitNV(hitObjectNV,accelerationStructureEXT,int,int,int,uint,uint,uint,vec3,float,vec3,float,int);void hitObjectRecordHitMotionNV(hitObjectNV,accelerationStructureEXT,int,int,int,uint,uint,uint,vec3,float,vec3,float,float,int);void hitObjectRecordHitWithIndexNV(hitObjectNV, accelerationStructureEXT,int,int,int,uint,uint,vec3,float,vec3,float,int);void hitObjectRecordHitWithIndexMotionNV(hitObjectNV, accelerationStructureEXT,int,int,int,uint,uint,vec3,float,vec3,float,float,int);void hitObjectRecordMissNV(hitObjectNV,uint,vec3,float,vec3,float);void hitObjectRecordMissMotionNV(hitObjectNV,uint,vec3,float,vec3,float,float);void hitObjectRecordEmptyNV(hitObjectNV);void hitObjectExecuteShaderNV(hitObjectNV,int);bool hitObjectIsEmptyNV(hitObjectNV);bool hitObjectIsMissNV(hitObjectNV);bool hitObjectIsHitNV(hitObjectNV);float hitObjectGetRayTMinNV(hitObjectNV);float hitObjectGetRayTMaxNV(hitObjectNV);vec3 hitObjectGetWorldRayOriginNV(hitObjectNV);vec3 hitObjectGetWorldRayDirectionNV(hitObjectNV);vec3 hitObjectGetObjectRayOriginNV(hitObjectNV);vec3 hitObjectGetObjectRayDirectionNV(hitObjectNV);mat4x3 hitObjectGetWorldToObjectNV(hitObjectNV);mat4x3 hitObjectGetObjectToWorldNV(hitObjectNV);int hitObjectGetInstanceCustomIndexNV(hitObjectNV);int hitObjectGetInstanceIdNV(hitObjectNV);int hitObjectGetGeometryIndexNV(hitObjectNV);int hitObjectGetPrimitiveIndexNV(hitObjectNV);uint hitObjectGetHitKindNV(hitObjectNV);void hitObjectGetAttributesNV(hitObjectNV,int);float hitObjectGetCurrentTimeNV(hitObjectNV);uint hitObjectGetShaderBindingTableRecordIndexNV(hitObjectNV);uvec2 hitObjectGetShaderRecordBufferHandleNV(hitObjectNV);void reorderThreadNV(uint, uint);void reorderThreadNV(hitObjectNV);void reorderThreadNV(hitObjectNV, uint, uint);vec3 fetchMicroTriangleVertexPositionNV(accelerationStructureEXT, int, int, int, ivec2);vec2 fetchMicroTriangleVertexBarycentricNV(accelerationStructureEXT, int, int, int, ivec2);\n
void traceNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void traceRayMotionNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,float,int);void traceRayEXT(accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void executeCallableNV(uint, int);void executeCallableEXT(uint, int);void hitObjectTraceRayNV(hitObjectNV,accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void hitObjectTraceRayMotionNV(hitObjectNV,accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,float,int);void hitObjectRecordHitNV(hitObjectNV,accelerationStructureEXT,int,int,int,uint,uint,uint,vec3,float,vec3,float,int);void hitObjectRecordHitMotionNV(hitObjectNV,accelerationStructureEXT,int,int,int,uint,uint,uint,vec3,float,vec3,float,float,int);void hitObjectRecordHitWithIndexNV(hitObjectNV,accelerationStructureEXT,int,int,int,uint,uint,vec3,float,vec3,float,int);void hitObjectRecordHitWithIndexMotionNV(hitObjectNV, accelerationStructureEXT,int,int,int,uint,uint,vec3,float,vec3,float,float,int);void hitObjectRecordMissNV(hitObjectNV, uint, vec3, float, vec3, float);void hitObjectRecordMissMotionNV(hitObjectNV,uint,vec3,float,vec3,float,float);void hitObjectRecordEmptyNV(hitObjectNV);void hitObjectExecuteShaderNV(hitObjectNV, int);bool hitObjectIsEmptyNV(hitObjectNV);bool hitObjectIsMissNV(hitObjectNV);bool hitObjectIsHitNV(hitObjectNV);float hitObjectGetRayTMinNV(hitObjectNV);float hitObjectGetRayTMaxNV(hitObjectNV);vec3 hitObjectGetWorldRayOriginNV(hitObjectNV);vec3 hitObjectGetWorldRayDirectionNV(hitObjectNV);vec3 hitObjectGetObjectRayOriginNV(hitObjectNV);vec3 hitObjectGetObjectRayDirectionNV(hitObjectNV);mat4x3 hitObjectGetWorldToObjectNV(hitObjectNV);mat4x3 hitObjectGetObjectToWorldNV(hitObjectNV);int hitObjectGetInstanceCustomIndexNV(hitObjectNV);int hitObjectGetInstanceIdNV(hitObjectNV);int hitObjectGetGeometryIndexNV(hitObjectNV);int hitObjectGetPrimitiveIndexNV(hitObjectNV);uint hitObjectGetHitKindNV(hitObjectNV);void hitObjectGetAttributesNV(hitObjectNV,int);float hitObjectGetCurrentTimeNV(hitObjectNV);uint hitObjectGetShaderBindingTableRecordIndexNV(hitObjectNV);uvec2 hitObjectGetShaderRecordBufferHandleNV(hitObjectNV);\n
void writePackedPrimitiveIndices4x8NV(uint, uint);\n
volatile
vp\n0!&\b
vp\n`\t0\bP!\v
vp\n`\tP\b0
vp\n`\tP\b0!\v
vs_4_0
vs_5_0
vs_6_0
vstore_half
vstore_half_r
vstore_halfn
vstore_halfn_r
vstorea_halfn
vstorea_halfn_r
vstoren
vt\r<x
vty<x
vt{<x
vu\eL90u
vulkan
vulkan-1.dll
vulkan1.0
vulkan1.1
vulkan1.1spv1.4
vulkan1.2
vulkan1.3
vulkan_aggressive_command_pool_rebalancing
vulkan_aggressive_command_pool_rebalancing_2gb
vulkan_alloc_callbacks
vulkan_allow_cpu
vulkan_amd_disable_bind_vertex_buffers_workaround
vulkan_amd_timestamp_workaround
vulkan_batch_size
vulkan_batch_submits
vulkan_cmd_buffer_pool_size
vulkan_dedicated_allocation_threshold
vulkan_depth_texture_as_r32f
vulkan_descriptor_sets_per_pool
vulkan_disable_amd_memory_overallocation_behavior
vulkan_disable_async_compute
vulkan_disable_device_coherent_allocations
vulkan_disable_ext_depth_bias_control
vulkan_disable_ext_load_store_op_none
vulkan_disable_ext_memory_budget
vulkan_disable_ext_memory_priority
vulkan_disable_ext_multi_draw
vulkan_disable_ext_pageable_device_local_memory
vulkan_disable_ext_pipeline_creation_cache_control
vulkan_disable_ext_separate_stencil_usage
vulkan_disable_ext_validation_cache
vulkan_disable_external_subpass_dependency
vulkan_disable_fossilize_whitelist
vulkan_disable_graphics_pipeline_library
vulkan_disable_khr_buffer_device_address
vulkan_disable_khr_dedicated_allocation
vulkan_disable_khr_descriptor_update_template
vulkan_disable_khr_image_format_list
vulkan_disable_khr_maintenance1
vulkan_disable_khr_maintenance2
vulkan_disable_khr_separate_depth_stencil_layouts
vulkan_disable_khr_shader_clock
vulkan_disable_khr_shader_float16_int8
vulkan_disable_khr_swapchain_mutable_format
vulkan_disable_pipeline_cache
vulkan_disable_steam_app_shader_cache
vulkan_disable_steam_downloaded_shader_cache
vulkan_disable_steam_shader_cache
vulkan_disable_swapchain_sampling
vulkan_disable_validation_api_parameters
vulkan_disable_validation_core_checks
vulkan_disable_validation_object_lifetimes
vulkan_disable_validation_shaders
vulkan_disable_validation_thread_safety
vulkan_disable_validation_unique_handles
vulkan_dump_shaders
vulkan_enable_ext_extended_dynamic_state
vulkan_enable_ext_extended_dynamic_state_2
vulkan_enable_ext_extended_dynamic_state_3
vulkan_enable_google_display_timing
vulkan_enable_gpu_validation
vulkan_enable_khr_dynamic_rendering
vulkan_enable_robust_buffer_access
vulkan_enable_sync_validation
vulkan_enable_validation
vulkan_force_cpu
vulkan_force_enable_debug_utils
vulkan_force_sm30
vulkan_force_sm60
vulkan_fossilize_log_verbose
vulkan_framebuffermgr_print
vulkan_ignore_ctdl_bindless_non_blocking_issues
vulkan_link_time_optimize_libraries
vulkan_memgr_fragmentation_print
vulkan_memgr_print
vulkan_memgr_telemetry_stats
vulkan_metal_validation
vulkan_minimal_validation
vulkan_peer2peer_mgpu.vtex
vulkan_pipeline_compile_spew
vulkan_pipeline_compile_throttle_ms
vulkan_pipelinemgr_print
vulkan_preload_fossilize
vulkan_readpixels_resolve.vtex
vulkan_shader_table_print
vulkan_trim_all_command_pools
vulkan_trim_all_command_pools_2gb
vulkan_trim_command_pools
vulkan_trim_command_pools_2gb
vulkan_validation_error_assert
vulkan_validation_error_exit_success
vulkan_validation_warnings
vulkan_vma_defrag
vulkan_vma_defrag_each_frame
vulkan_vma_gpu_mem_dump
vulkanrenderthreadstack
vw}Ic\v
vȉL$lA
vˉL$PH
vЉD$PI
vЉT$@D8
vЋD$HL
vЋD$\bA
vЋD$\bL
v؉Eh;E
w+OQvr
w4kK0\a
w4kK0\r
w4kK0\v
w5HcƍV
wGHcƍV
wN\f9
w\aD; r\fv
w\aH9L$ r
w\b8C-t
w\bH#]0H
w\bIcG\fI
w\bIc\aHk
w\bUUUU
w\nL;o
w\r9x r
w\vH9L
w_G9l9(tXC
warning
wdfD9B\bt
wfD;C
wfD;K
wffG9d
when Dim is either 1D or 2D
when more than one fragment shader output, all must have location qualifiers
whfA9T
which cannot be used with the current execution model:\n
which cannot be used with the current execution modes:\n
which is called with execution model
which is decorated with BuiltIn
which is dependent on
while in source code it is
while loops not available
while sub-statement
with %d x %d thumbnail image
with ExplicitLod
with Input interfaces with integer or float type must have a Flat decoration for Entry Point id
with bias argument
with expression\n
with layout(location
with two memory access operands requires SPIR-V 1.4 or later
wn>Jj
words
words instead
words instead of
words long
words, but found
words, but stated word count is
workGroupOffset
workgroupcoherent
wrap-opkill
wrinkle
writeInvocation
writeInvocationAMD
writeMask
writePackedPrimitiveIndices4x8NV
writeonly
writing renderdoc capture to %s\n
wrong number of arguments
wrong number of matrix columns
wrong number of structure members
wrong operand type
wrong operand types
wrong protocol type
wrong vector size (or rows in a matrix column
www.digicert.com1!0
www.digicert.com1$0
x #u1HcP
x ATAVAWH
x AUAVAWH
x AVAW
x AVHcA
x UATAUAVAWH
x UAVAWH
x \vt`H
x sRH
x s\bH
x$.vfH
x$>&x*>,x0.2H4R6
x( t\a3
x( u8
x( uLD8p,t
x( uW8X,t)8X-t
x(+t\r2
x(;t\fH
x(=t\a2
x(JtYH
x(Jt~H
x(Ot\a2
x,!tUH
x,&t8H
x,&tdH
x,.tFH
x,\bt?I
x0E;}X
x0Ysqx
x2;\rxHF
x3H;A\b}-H
x5H;B\b}/L
x6H;A\b}0L
x8Lc A
x: t_L
x: tdL
x:6tNL
x:;t3L
x:;u1H
x:Vu.H
x:\etAL
x;H;B\b}5L
x<H9{0
x<\nuIH
x<xtZA
xA3ЉT$P
xAH;J\b};H
xA^A]A
xA_A]A
xA_A^A
xA_A^A]A
xBH;A\b}<H
xCH;A\b}=H
xChromaOffset
xEH;A\b}?H
xFH;A\b}@Hi
xFL;J\b}@L
xH;]P
xHH;A\b}BH
xInvocationsExclusiveScanAMD(int64_t);i64vec2 maxInvocationsExclusiveScanAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanAMD(i64vec4);uint64_t maxInvocationsExclusiveScanAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanAMD(u64vec4);float16_t maxInvocationsExclusiveScanAMD(float16_t);f16vec2   maxInvocationsExclusiveScanAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanAMD(f16vec4);int16_t maxInvocationsExclusiveScanAMD(int16_t);i16vec2 maxInvocationsExclusiveScanAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanAMD(i16vec4);uint16_t maxInvocationsExclusiveScanAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanAMD(u16vec4);float addInvocationsAMD(float);vec2  addInvocationsAMD(vec2);vec3  addInvocationsAMD(vec3);vec4  addInvocationsAMD(vec4);int   addInvocationsAMD(int);ivec2 addInvocationsAMD(ivec2);ivec3 addInvocationsAMD(ivec3);ivec4 addInvocationsAMD(ivec4);uint  addInvocationsAMD(uint);uvec2 addInvocationsAMD(uvec2);uvec3 addInvocationsAMD(uvec3);uvec4 addInvocationsAMD(uvec4);double  addInvocationsAMD(double);dvec2   addInvocationsAMD(dvec2);dvec3   addInvocationsAMD(dvec3);dvec4   addInvocationsAMD(dvec4);int64_t addInvocationsAMD(int64_t);i64vec2 addInvocationsAMD(i64vec2);i64vec3 addInvocationsAMD(i64vec3);i64vec4 addInvocationsAMD(i64vec4);uint64_t addInvocationsAMD(uint64_t);u64vec2  addInvocationsAMD(u64vec2);u64vec3  addInvocationsAMD(u64vec3);u64vec4  addInvocationsAMD(u64vec4);float16_t addInvocationsAMD(float16_t);f16vec2   addInvocationsAMD(f16vec2);f16vec3   addInvocationsAMD(f16vec3);f16vec4   addInvocationsAMD(f16vec4);int16_t addInvocationsAMD(int16_t);i16vec2 addInvocationsAMD(i16vec2);i16vec3 addInvocationsAMD(i16vec3);i16vec4 addInvocationsAMD(i16vec4);uint16_t addInvocationsAMD(uint16_t);u16vec2  addInvocationsAMD(u16vec2);u16vec3  addInvocationsAMD(u16vec3);u16vec4  addInvocationsAMD(u16vec4);float addInvocationsInclusiveScanAMD(float);vec2  addInvocationsInclusiveScanAMD(vec2);vec3  addInvocationsInclusiveScanAMD(vec3);vec4  addInvocationsInclusiveScanAMD(vec4);int   addInvocationsInclusiveScanAMD(int);ivec2 addInvocationsInclusiveScanAMD(ivec2);ivec3 addInvocationsInclusiveScanAMD(ivec3);ivec4 addInvocationsInclusiveScanAMD(ivec4);uint  addInvocationsInclusiveScanAMD(uint);uvec2 addInvocationsInclusiveScanAMD(uvec2);uvec3 addInvocationsInclusiveScanAMD(uvec3);uvec4 addInvocationsInclusiveScanAMD(uvec4);double  addInvocationsInclusiveScanAMD(double);dvec2   addInvocationsInclusiveScanAMD(dvec2);dvec3   addInvocationsInclusiveScanAMD(dvec3);dvec4   addInvocationsInclusiveScanAMD(dvec4);int64_t addInvocationsInclusiveScanAMD(int64_t);i64vec2 addInvocationsInclusiveScanAMD(i64vec2);i64vec3 addInvocationsInclusiveScanAMD(i64vec3);i64vec4 addInvocationsInclusiveScanAMD(i64vec4);uint64_t addInvocationsInclusiveScanAMD(uint64_t);u64vec2  addInvocationsInclusiveScanAMD(u64vec2);u64vec3  addInvocationsInclusiveScanAMD(u64vec3);u64vec4  addInvocationsInclusiveScanAMD(u64vec4);float16_t addInvocationsInclusiveScanAMD(float16_t);f16vec2   addInvocationsInclusiveScanAMD(f16vec2);f16vec3   addInvocationsInclusiveScanAMD(f16vec3);f16vec4   addInvocationsInclusiveScanAMD(f16vec4);int16_t addInvocationsInclusiveScanAMD(int16_t);i16vec2 addInvocationsInclusiveScanAMD(i16vec2);i16vec3 addInvocationsInclusiveScanAMD(i16vec3);i16vec4 addInvocationsInclusiveScanAMD(i16vec4);uint16_t addInvocationsInclusiveScanAMD(uint16_t);u16vec2  addInvocationsInclusiveScanAMD(u16vec2);u16vec3  addInvocationsInclusiveScanAMD(u16vec3);u16vec4  addInvocationsInclusiveScanAMD(u16vec4);float addInvocationsExclusiveScanAMD(float);vec2  addInvocationsExclusiveScanAMD(vec2);vec3  addInvocationsExclusiveScanAMD(vec3);vec4  addInvocationsExclusiveScanAMD(vec4);int   addInvocationsExclusiveScanAMD(int);ivec2
xJ>Hf
xK;t$ }EH
xKL;J\b}EL
xSH;A\b}MH
xSH;H\b}MH
xVH;A\b}PH
xXI96tSI
x\b.450u\b
x\b.450u\nA
x\b16u\b
x\b16uiu\b
x\b32uiu\b
x\b8iu\b
x\b8snou
x\bColou\n
x\bSizetUI
x\b_ccw
x\b_cu\r
x\bactou
x\bagmeu\ff
x\bajort5M
x\bajoru
x\bal_ou
x\basuiH
x\batiou\ef
x\bcordu\bf
x\bcounu
x\bdeu\tH
x\bdsu\b
x\beMasu\n
x\beMasub
x\bepth
x\bepthu\eE
x\berteu
x\betPH
x\betuc
x\betuyA
x\bg16fu\b
x\bg16iu\b
x\bg16uu
x\bg32fu\b
x\bg32iu\b
x\bg32uu
x\bg8u\b
x\bg8uiu\b
x\bgb10u
x\bgba1u
x\bgba3u
x\bgba8u
x\bgba8u\b
x\bices
x\bicesuPE
x\bicesuhI
x\bitiv
x\bkedAu\ff
x\bkedMu\ff
x\bkedOu\n
x\bkedXu\ff
x\bningu\b
x\bntfE
x\bolor
x\bolu\e
x\bonu
x\bonuo
x\boord
x\boordu\eE
x\bpAlpu\rf
x\bpBluu
x\bpGreu\bf
x\bpRedtvH
x\bphu\v
x\bpolou
x\brtex
x\brtexu
x\bsionu
x\bsionu\n
x\bstanu
x\bsu/H
x\bties
x\btripu
x\btropu4
x\bttenu
x\buet/H
x\bunteu
x\bxcouu
x\bze_xu
x\bze_yt
x\bze_yu
x\bze_z
x\bze_zu
x\f2fu\b
x\f2iu\b
x\f6fu\b
x\f6iu\b
x\fa2u\b
x\fddu\f
x\fentNH
x\fet(H
x\fgyu\a
x\fku\\H
x\fntu\b
x\fnvt%H
x\frmu\b
x\fst,H
x\ftu H
x\fuiu\b
x\fxt%I
x\nDu\tH
x\nH;A\b
x\nH;J\b
x\ndtRI
x\ndu\bA
x\nlu\nA
x\nntXH
x\nrt#L
x\nsuiH
x^H;A\b}XH
x^H;A\b}XL
x_H;J\b}YH
x`H;A\b}ZH
xaH;A\b}[H
xaH;B\b}[L
xcH;A\b}]H
xcH;A\b}]L
xdH;A\b}^H
xdH;B\b}^L
xdata
xdata$x
xf$h*~Z
xfH;A\b}`H
xfH;B\b}`L
xfb layout qualifier
xfb_buffH9
xfb_buffH9\b
xfb_buffer
xfb_offsH9
xfb_offsH9\bukf
xfb_offset
xfb_stream
xfb_striH9
xfb_striH9\b
xfb_stride
xfb_stride is too large
xfb_stride is too small to hold all buffer entries
xfb_stride must be multiple of 2 for buffer holding a half float or 16-bit integer
xfb_stride must be multiple of 4
xfb_stride must be multiple of 8 for buffer holding a double or 64-bit integer
xgH;B\b}aL
xg^Jp5
xiM;P\b}cI
xiM;Y\b}cI
xjH;B\b}dL
xlH;A\b}fH
xlH;w\b}fH
xlM;Y\b}fI
xoH;A\b}iH
xpectEXT(uint8_t, uint8_t);u8vec2 expectEXT(u8vec2, u8vec2);u8vec3 expectEXT(u8vec3, u8vec3);u8vec4 expectEXT(u8vec4, u8vec4);int16_t expectEXT(int16_t, int16_t);i16vec2 expectEXT(i16vec2, i16vec2);i16vec3 expectEXT(i16vec3, i16vec3);i16vec4 expectEXT(i16vec4, i16vec4);uint16_t expectEXT(uint16_t, uint16_t);u16vec2 expectEXT(u16vec2, u16vec2);u16vec3 expectEXT(u16vec3, u16vec3);u16vec4 expectEXT(u16vec4, u16vec4);int64_t expectEXT(int64_t, int64_t);i64vec2 expectEXT(i64vec2, i64vec2);i64vec3 expectEXT(i64vec3, i64vec3);i64vec4 expectEXT(i64vec4, i64vec4);uint64_t expectEXT(uint64_t, uint64_t);u64vec2 expectEXT(u64vec2, u64vec2);u64vec3 expectEXT(u64vec3, u64vec3);u64vec4 expectEXT(u64vec4, u64vec4);\n
xqH;H\b}kH
xrL;A\b}lL
xu\bH
x{HcO\bL
y s\bL
y ssL9l
y szI9W\b
y899u\a
y9gt\b3
y:=t0A
y:gt\t3
yChromaOffset
y\\PD
y\bL+9H
y\bL+9I
y\bWEBP
y\b_imau>f
y\badu\nA
y\bagu4
y\basu\nA
y\bmpleu4
y\bpu\nA
y\bstan
y\f\bt6H
y\f\bt\f
y\f\btrD
y\f\bu+A
y\fgeu6H
y\fru.H
y\neu.H
y\tL$ D
y\v$ uZ
ycbcrModel
ycbcrRange
yfD;K
yielding Result Id
yxxxxxxx
yxxxxxxxA
yxxxxxxxE
yxxxxxxxH
yxxxxxxxH+\vH
yxxxxxxxI
yxxxxxxxL
z r\bw\tD;r
z(8u\aH
z:st<L
z>h4Ժ/so
zX\buGA
zY;>u:m\t
z\bH+E(H
z\bL+:I
z\bV_StringToInt16
z\bajoru\r
z\beptht5A
z\boordu\aL
z\tV_vsnprintf
z\tu\aƃh
zel#|67
zero found
zh-CHS
zh-CHT
zh-chs
zh-cht
zwc΅]E
zyxwvutsrqponmlkjihgfedcba`_^]\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?>=<;:9876543210
