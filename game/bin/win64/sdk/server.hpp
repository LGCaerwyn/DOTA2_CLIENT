#pragma once
#include <cstdint>
#include "!GlobalTypes.hpp"

// /////////////////////////////////////////////////////////////
// Binary: server.dll
// Classes count: 8258
// Enums count: 330
// Created using source2gen - github.com/neverlosecc/source2gen
// /////////////////////////////////////////////////////////////

// Registered binary: server.dll (project 'navlib')
// Alignment: 4
// Size: 0x13
enum class NavAttributeEnum : uint32_t
{
	NAV_MESH_AVOID = 0x80,
	NAV_MESH_STAIRS = 0x1000,
	NAV_MESH_NON_ZUP = 0x8000,
	NAV_MESH_SHORT_HEIGHT = 0x10000,
	NAV_MESH_CROUCH = 0x10000,
	NAV_MESH_JUMP = 0x2,
	NAV_MESH_PRECISE = 0x4,
	NAV_MESH_NO_JUMP = 0x8,
	NAV_MESH_STOP = 0x10,
	NAV_MESH_RUN = 0x20,
	NAV_MESH_WALK = 0x40,
	NAV_MESH_TRANSIENT = 0x100,
	NAV_MESH_DONT_HIDE = 0x200,
	NAV_MESH_STAND = 0x400,
	NAV_MESH_NO_HOSTAGES = 0x800,
	NAV_MESH_NO_MERGE = 0x2000,
	NAV_MESH_OBSTACLE_TOP = 0x4000,
	NAV_ATTR_FIRST_GAME_INDEX = 0x13,
	NAV_ATTR_LAST_INDEX = 0x1f,
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 4
// Size: 0x5
enum class NavDirType : uint32_t
{
	NORTH = 0x0,
	EAST = 0x1,
	SOUTH = 0x2,
	WEST = 0x3,
	NUM_NAV_DIR_TYPE_DIRECTIONS = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x76
enum class ENetworkDisconnectionReason : uint32_t
{
	NETWORK_DISCONNECT_INVALID = 0x0,
	NETWORK_DISCONNECT_SHUTDOWN = 0x1,
	NETWORK_DISCONNECT_DISCONNECT_BY_USER = 0x2,
	NETWORK_DISCONNECT_DISCONNECT_BY_SERVER = 0x3,
	NETWORK_DISCONNECT_LOST = 0x4,
	NETWORK_DISCONNECT_OVERFLOW = 0x5,
	NETWORK_DISCONNECT_STEAM_BANNED = 0x6,
	NETWORK_DISCONNECT_STEAM_INUSE = 0x7,
	NETWORK_DISCONNECT_STEAM_TICKET = 0x8,
	NETWORK_DISCONNECT_STEAM_LOGON = 0x9,
	NETWORK_DISCONNECT_STEAM_AUTHCANCELLED = 0xa,
	NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED = 0xb,
	NETWORK_DISCONNECT_STEAM_AUTHINVALID = 0xc,
	NETWORK_DISCONNECT_STEAM_VACBANSTATE = 0xd,
	NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE = 0xe,
	NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT = 0xf,
	NETWORK_DISCONNECT_STEAM_DROPPED = 0x10,
	NETWORK_DISCONNECT_STEAM_OWNERSHIP = 0x11,
	NETWORK_DISCONNECT_SERVERINFO_OVERFLOW = 0x12,
	NETWORK_DISCONNECT_TICKMSG_OVERFLOW = 0x13,
	NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW = 0x14,
	NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW = 0x15,
	NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW = 0x16,
	NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW = 0x17,
	NETWORK_DISCONNECT_SNAPSHOTOVERFLOW = 0x18,
	NETWORK_DISCONNECT_SNAPSHOTERROR = 0x19,
	NETWORK_DISCONNECT_RELIABLEOVERFLOW = 0x1a,
	NETWORK_DISCONNECT_BADDELTATICK = 0x1b,
	NETWORK_DISCONNECT_NOMORESPLITS = 0x1c,
	NETWORK_DISCONNECT_TIMEDOUT = 0x1d,
	NETWORK_DISCONNECT_DISCONNECTED = 0x1e,
	NETWORK_DISCONNECT_LEAVINGSPLIT = 0x1f,
	NETWORK_DISCONNECT_DIFFERENTCLASSTABLES = 0x20,
	NETWORK_DISCONNECT_BADRELAYPASSWORD = 0x21,
	NETWORK_DISCONNECT_BADSPECTATORPASSWORD = 0x22,
	NETWORK_DISCONNECT_HLTVRESTRICTED = 0x23,
	NETWORK_DISCONNECT_NOSPECTATORS = 0x24,
	NETWORK_DISCONNECT_HLTVUNAVAILABLE = 0x25,
	NETWORK_DISCONNECT_HLTVSTOP = 0x26,
	NETWORK_DISCONNECT_KICKED = 0x27,
	NETWORK_DISCONNECT_BANADDED = 0x28,
	NETWORK_DISCONNECT_KICKBANADDED = 0x29,
	NETWORK_DISCONNECT_HLTVDIRECT = 0x2a,
	NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA = 0x2b,
	NETWORK_DISCONNECT_PURESERVER_MISMATCH = 0x2c,
	NETWORK_DISCONNECT_USERCMD = 0x2d,
	NETWORK_DISCONNECT_REJECTED_BY_GAME = 0x2e,
	NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR = 0x2f,
	NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR = 0x30,
	NETWORK_DISCONNECT_BAD_SERVER_PASSWORD = 0x31,
	NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION = 0x32,
	NETWORK_DISCONNECT_CONNECTION_FAILURE = 0x33,
	NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS = 0x34,
	NETWORK_DISCONNECT_RECONNECTION = 0x35,
	NETWORK_DISCONNECT_LOOPSHUTDOWN = 0x36,
	NETWORK_DISCONNECT_LOOPDEACTIVATE = 0x37,
	NETWORK_DISCONNECT_HOST_ENDGAME = 0x38,
	NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE = 0x39,
	NETWORK_DISCONNECT_CREATE_SERVER_FAILED = 0x3a,
	NETWORK_DISCONNECT_EXITING = 0x3b,
	NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE = 0x3c,
	NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY = 0x3d,
	NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL = 0x3e,
	NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP = 0x3f,
	NETWORK_DISCONNECT_CLIENT_NO_MAP = 0x40,
	NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP = 0x41,
	NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM = 0x42,
	NETWORK_DISCONNECT_STEAM_DENY_MISC = 0x43,
	NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT = 0x44,
	NETWORK_DISCONNECT_SERVER_SHUTDOWN = 0x45,
	NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE = 0x47,
	NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT = 0x48,
	NETWORK_DISCONNECT_SERVER_INCOMPATIBLE = 0x49,
	NETWORK_DISCONNECT_LOCALPROBLEM_MANYRELAYS = 0x4a,
	NETWORK_DISCONNECT_LOCALPROBLEM_HOSTEDSERVERPRIMARYRELAY = 0x4b,
	NETWORK_DISCONNECT_LOCALPROBLEM_NETWORKCONFIG = 0x4c,
	NETWORK_DISCONNECT_LOCALPROBLEM_OTHER = 0x4d,
	NETWORK_DISCONNECT_REMOTE_TIMEOUT = 0x4f,
	NETWORK_DISCONNECT_REMOTE_TIMEOUT_CONNECTING = 0x50,
	NETWORK_DISCONNECT_REMOTE_OTHER = 0x51,
	NETWORK_DISCONNECT_REMOTE_BADCRYPT = 0x52,
	NETWORK_DISCONNECT_REMOTE_CERTNOTTRUSTED = 0x53,
	NETWORK_DISCONNECT_UNUSUAL = 0x54,
	NETWORK_DISCONNECT_INTERNAL_ERROR = 0x55,
	NETWORK_DISCONNECT_REJECT_BADCHALLENGE = 0x80,
	NETWORK_DISCONNECT_REJECT_NOLOBBY = 0x81,
	NETWORK_DISCONNECT_REJECT_BACKGROUND_MAP = 0x82,
	NETWORK_DISCONNECT_REJECT_SINGLE_PLAYER = 0x83,
	NETWORK_DISCONNECT_REJECT_HIDDEN_GAME = 0x84,
	NETWORK_DISCONNECT_REJECT_LANRESTRICT = 0x85,
	NETWORK_DISCONNECT_REJECT_BADPASSWORD = 0x86,
	NETWORK_DISCONNECT_REJECT_SERVERFULL = 0x87,
	NETWORK_DISCONNECT_REJECT_INVALIDRESERVATION = 0x88,
	NETWORK_DISCONNECT_REJECT_FAILEDCHANNEL = 0x89,
	NETWORK_DISCONNECT_REJECT_CONNECT_FROM_LOBBY = 0x8a,
	NETWORK_DISCONNECT_REJECT_RESERVED_FOR_LOBBY = 0x8b,
	NETWORK_DISCONNECT_REJECT_INVALIDKEYLENGTH = 0x8c,
	NETWORK_DISCONNECT_REJECT_OLDPROTOCOL = 0x8d,
	NETWORK_DISCONNECT_REJECT_NEWPROTOCOL = 0x8e,
	NETWORK_DISCONNECT_REJECT_INVALIDCONNECTION = 0x8f,
	NETWORK_DISCONNECT_REJECT_INVALIDCERTLEN = 0x90,
	NETWORK_DISCONNECT_REJECT_INVALIDSTEAMCERTLEN = 0x91,
	NETWORK_DISCONNECT_REJECT_STEAM = 0x92,
	NETWORK_DISCONNECT_REJECT_SERVERAUTHDISABLED = 0x93,
	NETWORK_DISCONNECT_REJECT_SERVERCDKEYAUTHINVALID = 0x94,
	NETWORK_DISCONNECT_REJECT_BANNED = 0x95,
	NETWORK_DISCONNECT_KICKED_TEAMKILLING = 0x96,
	NETWORK_DISCONNECT_KICKED_TK_START = 0x97,
	NETWORK_DISCONNECT_KICKED_UNTRUSTEDACCOUNT = 0x98,
	NETWORK_DISCONNECT_KICKED_CONVICTEDACCOUNT = 0x99,
	NETWORK_DISCONNECT_KICKED_COMPETITIVECOOLDOWN = 0x9a,
	NETWORK_DISCONNECT_KICKED_TEAMHURTING = 0x9b,
	NETWORK_DISCONNECT_KICKED_HOSTAGEKILLING = 0x9c,
	NETWORK_DISCONNECT_KICKED_VOTEDOFF = 0x9d,
	NETWORK_DISCONNECT_KICKED_IDLE = 0x9e,
	NETWORK_DISCONNECT_KICKED_SUICIDE = 0x9f,
	NETWORK_DISCONNECT_KICKED_NOSTEAMLOGIN = 0xa0,
	NETWORK_DISCONNECT_KICKED_NOSTEAMTICKET = 0xa1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class SignonState_t : uint32_t
{
	SIGNONSTATE_NONE = 0x0,
	SIGNONSTATE_CHALLENGE = 0x1,
	SIGNONSTATE_CONNECTED = 0x2,
	SIGNONSTATE_NEW = 0x3,
	SIGNONSTATE_PRESPAWN = 0x4,
	SIGNONSTATE_SPAWN = 0x5,
	SIGNONSTATE_FULL = 0x6,
	SIGNONSTATE_CHANGELEVEL = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xd
enum class NET_Messages : uint32_t
{
	net_NOP = 0x0,
	net_Disconnect = 0x1,
	net_SplitScreenUser = 0x3,
	net_Tick = 0x4,
	net_StringCmd = 0x5,
	net_SetConVar = 0x6,
	net_SignonState = 0x7,
	net_SpawnGroup_Load = 0x8,
	net_SpawnGroup_ManifestUpdate = 0x9,
	net_SpawnGroup_SetCreationTick = 0xb,
	net_SpawnGroup_Unload = 0xc,
	net_SpawnGroup_LoadCompleted = 0xd,
	net_DebugOverlay = 0xf,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class SpawnGroupFlags_t : uint32_t
{
	SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE = 0x1,
	SPAWN_GROUP_DONT_SPAWN_ENTITIES = 0x2,
	SPAWN_GROUP_SYNCHRONOUS_SPAWN = 0x4,
	SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP = 0x8,
	SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES = 0x10,
	SPAWN_GROUP_BLOCK_UNTIL_LOADED = 0x40,
	SPAWN_GROUP_LOAD_STREAMING_DATA = 0x80,
	SPAWN_GROUP_CREATE_NEW_SCENE_WORLD = 0x100,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x11
enum class CLC_Messages : uint32_t
{
	clc_ClientInfo = 0x14,
	clc_Move = 0x15,
	clc_VoiceData = 0x16,
	clc_BaselineAck = 0x17,
	clc_ListenEvents = 0x18,
	clc_RespondCvarValue = 0x19,
	clc_FileCRCCheck = 0x1a,
	clc_LoadingProgress = 0x1b,
	clc_SplitPlayerConnect = 0x1c,
	clc_ClientMessage = 0x1d,
	clc_SplitPlayerDisconnect = 0x1e,
	clc_ServerStatus = 0x1f,
	clc_ServerPing = 0x20,
	clc_RequestPause = 0x21,
	clc_CmdKeyValues = 0x22,
	clc_RconServerDetails = 0x23,
	clc_HltvReplay = 0x24,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1e
enum class SVC_Messages : uint32_t
{
	svc_ServerInfo = 0x28,
	svc_FlattenedSerializer = 0x29,
	svc_ClassInfo = 0x2a,
	svc_SetPause = 0x2b,
	svc_CreateStringTable = 0x2c,
	svc_UpdateStringTable = 0x2d,
	svc_VoiceInit = 0x2e,
	svc_VoiceData = 0x2f,
	svc_Print = 0x30,
	svc_Sounds = 0x31,
	svc_SetView = 0x32,
	svc_ClearAllStringTables = 0x33,
	svc_CmdKeyValues = 0x34,
	svc_BSPDecal = 0x35,
	svc_SplitScreen = 0x36,
	svc_PacketEntities = 0x37,
	svc_Prefetch = 0x38,
	svc_Menu = 0x39,
	svc_GetCvarValue = 0x3a,
	svc_StopSound = 0x3b,
	svc_PeerList = 0x3c,
	svc_PacketReliable = 0x3d,
	svc_HLTVStatus = 0x3e,
	svc_ServerSteamID = 0x3f,
	svc_FullFrameSplit = 0x46,
	svc_RconServerDetails = 0x47,
	svc_UserMessage = 0x48,
	svc_HltvReplay = 0x49,
	svc_Broadcast_Command = 0x4a,
	svc_HltvFixupOperatorStatus = 0x4b,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class VoiceDataFormat_t : uint32_t
{
	VOICEDATA_FORMAT_STEAM = 0x0,
	VOICEDATA_FORMAT_ENGINE = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class RequestPause_t : uint32_t
{
	RP_PAUSE = 0x0,
	RP_UNPAUSE = 0x1,
	RP_TOGGLEPAUSE = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1
enum class PrefetchType : uint32_t
{
	PFT_SOUND = 0x0,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ESplitScreenMessageType : uint32_t
{
	MSG_SPLITSCREEN_ADDUSER = 0x0,
	MSG_SPLITSCREEN_REMOVEUSER = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class EQueryCvarValueStatus : uint32_t
{
	eQueryCvarValueStatus_ValueIntact = 0x0,
	eQueryCvarValueStatus_CvarNotFound = 0x1,
	eQueryCvarValueStatus_NotACvar = 0x2,
	eQueryCvarValueStatus_CvarProtected = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DIALOG_TYPE : uint32_t
{
	DIALOG_MSG = 0x0,
	DIALOG_MENU = 0x1,
	DIALOG_TEXT = 0x2,
	DIALOG_ENTRY = 0x3,
	DIALOG_ASKCONNECT = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1
enum class SVC_Messages_LowFrequency : uint32_t
{
	svc_dummy = 0x258,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class Bidirectional_Messages : uint32_t
{
	bi_RebroadcastGameEvent = 0x10,
	bi_RebroadcastSource = 0x11,
	bi_GameEvent = 0x12,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class Bidirectional_Messages_LowFrequency : uint32_t
{
	bi_RelayInfo = 0x2bc,
	bi_RelayPacket = 0x2bd,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class ReplayEventType_t : uint32_t
{
	REPLAY_EVENT_CANCEL = 0x0,
	REPLAY_EVENT_DEATH = 0x1,
	REPLAY_EVENT_GENERIC = 0x2,
	REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 0x3,
	REPLAY_EVENT_VICTORY = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
enum class EDemoCommands : uint32_t
{
	DEM_Error = 0xffffffffffffffff,
	DEM_Stop = 0x0,
	DEM_FileHeader = 0x1,
	DEM_FileInfo = 0x2,
	DEM_SyncTick = 0x3,
	DEM_SendTables = 0x4,
	DEM_ClassInfo = 0x5,
	DEM_StringTables = 0x6,
	DEM_Packet = 0x7,
	DEM_SignonPacket = 0x8,
	DEM_ConsoleCmd = 0x9,
	DEM_CustomData = 0xa,
	DEM_CustomDataCallbacks = 0xb,
	DEM_UserCmd = 0xc,
	DEM_FullPacket = 0xd,
	DEM_SaveGame = 0xe,
	DEM_SpawnGroups = 0xf,
	DEM_AnimationData = 0x10,
	DEM_Max = 0x11,
	DEM_IsCompressed = 0x40,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x31
enum class EBaseUserMessages : uint32_t
{
	UM_AchievementEvent = 0x65,
	UM_CloseCaption = 0x66,
	UM_CloseCaptionDirect = 0x67,
	UM_CurrentTimescale = 0x68,
	UM_DesiredTimescale = 0x69,
	UM_Fade = 0x6a,
	UM_GameTitle = 0x6b,
	UM_HudMsg = 0x6e,
	UM_HudText = 0x6f,
	UM_ColoredText = 0x71,
	UM_RequestState = 0x72,
	UM_ResetHUD = 0x73,
	UM_Rumble = 0x74,
	UM_SayText = 0x75,
	UM_SayText2 = 0x76,
	UM_SayTextChannel = 0x77,
	UM_Shake = 0x78,
	UM_ShakeDir = 0x79,
	UM_TextMsg = 0x7c,
	UM_ScreenTilt = 0x7d,
	UM_VoiceMask = 0x80,
	UM_SendAudio = 0x82,
	UM_ItemPickup = 0x83,
	UM_AmmoDenied = 0x84,
	UM_ShowMenu = 0x86,
	UM_CreditsMsg = 0x87,
	UM_CloseCaptionPlaceholder = 0x8e,
	UM_CameraTransition = 0x8f,
	UM_AudioParameter = 0x90,
	UM_ParticleManager = 0x91,
	UM_HudError = 0x92,
	UM_CustomGameEvent = 0x94,
	UM_AnimGraphUpdate = 0x95,
	UM_HapticsManagerPulse = 0x96,
	UM_HapticsManagerEffect = 0x97,
	UM_CommandQueueState = 0x98,
	UM_UpdateCssClasses = 0x99,
	UM_ServerFrameTime = 0x9a,
	UM_LagCompensationError = 0x9b,
	UM_RequestDllStatus = 0x9c,
	UM_RequestUtilAction = 0x9d,
	UM_UtilActionResponse = 0x9e,
	UM_DllStatusResponse = 0x9f,
	UM_RequestInventory = 0xa0,
	UM_InventoryResponse = 0xa1,
	UM_RequestDiagnostic = 0xa2,
	UM_DiagnosticResponse = 0xa3,
	UM_ExtraUserData = 0xa4,
	UM_MAX_BASE = 0xc8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class EBaseEntityMessages : uint32_t
{
	EM_PlayJingle = 0x88,
	EM_ScreenOverlay = 0x89,
	EM_RemoveAllDecals = 0x8a,
	EM_PropagateForce = 0x8b,
	EM_DoSpark = 0x8c,
	EM_FixAngle = 0x8d,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class eRollType : uint32_t
{
	ROLL_NONE = 0xffffffffffffffff,
	ROLL_STATS = 0x0,
	ROLL_CREDITS = 0x1,
	ROLL_LATE_JOIN_LOGO = 0x2,
	ROLL_OUTTRO = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1e
enum class PARTICLE_MESSAGE : uint32_t
{
	GAME_PARTICLE_MANAGER_EVENT_CREATE = 0x0,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE = 0x1,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 0x2,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 0x3,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 0x4,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 0x5,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 0x6,
	GAME_PARTICLE_MANAGER_EVENT_DESTROY = 0x7,
	GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 0x8,
	GAME_PARTICLE_MANAGER_EVENT_RELEASE = 0x9,
	GAME_PARTICLE_MANAGER_EVENT_LATENCY = 0xa,
	GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 0xb,
	GAME_PARTICLE_MANAGER_EVENT_FROZEN = 0xc,
	GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 0xd,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 0xe,
	GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES = 0xf,
	GAME_PARTICLE_MANAGER_EVENT_SET_TEXT = 0x10,
	GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW = 0x11,
	GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL = 0x12,
	GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT = 0x13,
	GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE = 0x14,
	GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG = 0x15,
	GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT = 0x16,
	GAME_PARTICLE_MANAGER_EVENT_DESTROY_NAMED = 0x17,
	GAME_PARTICLE_MANAGER_EVENT_SKIP_TO_TIME = 0x18,
	GAME_PARTICLE_MANAGER_EVENT_CAN_FREEZE = 0x19,
	GAME_PARTICLE_MANAGER_EVENT_SET_NAMED_VALUE_CONTEXT = 0x1a,
	GAME_PARTICLE_MANAGER_EVENT_UPDATE_TRANSFORM = 0x1b,
	GAME_PARTICLE_MANAGER_EVENT_FREEZE_TRANSITION_OVERRIDE = 0x1c,
	GAME_PARTICLE_MANAGER_EVENT_FREEZE_INVOLVING = 0x1d,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EHapticPulseType : uint32_t
{
	VR_HAND_HAPTIC_PULSE_LIGHT = 0x0,
	VR_HAND_HAPTIC_PULSE_MEDIUM = 0x1,
	VR_HAND_HAPTIC_PULSE_STRONG = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class EBaseClientMessages : uint32_t
{
	CM_CustomGameEvent = 0x118,
	CM_CustomGameEventBounce = 0x119,
	CM_ClientUIEvent = 0x11a,
	CM_DevPaletteVisibilityChanged = 0x11b,
	CM_WorldUIControllerHasPanelChanged = 0x11c,
	CM_RotateAnchor = 0x11d,
	CM_MAX_BASE = 0x12c,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EClientUIEvent : uint32_t
{
	EClientUIEvent_Invalid = 0x0,
	EClientUIEvent_DialogFinished = 0x1,
	EClientUIEvent_FireOutput = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xd
enum class EBaseGameEvents : uint32_t
{
	GE_VDebugGameSessionIDEvent = 0xc8,
	GE_PlaceDecalEvent = 0xc9,
	GE_ClearWorldDecalsEvent = 0xca,
	GE_ClearEntityDecalsEvent = 0xcb,
	GE_ClearDecalsForSkeletonInstanceEvent = 0xcc,
	GE_Source1LegacyGameEventList = 0xcd,
	GE_Source1LegacyListenEvents = 0xce,
	GE_Source1LegacyGameEvent = 0xcf,
	GE_SosStartSoundEvent = 0xd0,
	GE_SosStopSoundEvent = 0xd1,
	GE_SosSetSoundEventParams = 0xd2,
	GE_SosSetLibraryStackFields = 0xd3,
	GE_SosStopSoundEventHash = 0xd4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1a
enum class ETEProtobufIds : uint32_t
{
	TE_EffectDispatchId = 0x190,
	TE_ArmorRicochetId = 0x191,
	TE_BeamEntPointId = 0x192,
	TE_BeamEntsId = 0x193,
	TE_BeamPointsId = 0x194,
	TE_BeamRingId = 0x195,
	TE_BSPDecalId = 0x197,
	TE_BubblesId = 0x198,
	TE_BubbleTrailId = 0x199,
	TE_DecalId = 0x19a,
	TE_WorldDecalId = 0x19b,
	TE_EnergySplashId = 0x19c,
	TE_FizzId = 0x19d,
	TE_ShatterSurfaceId = 0x19e,
	TE_GlowSpriteId = 0x19f,
	TE_ImpactId = 0x1a0,
	TE_MuzzleFlashId = 0x1a1,
	TE_BloodStreamId = 0x1a2,
	TE_ExplosionId = 0x1a3,
	TE_DustId = 0x1a4,
	TE_LargeFunnelId = 0x1a5,
	TE_SparksId = 0x1a6,
	TE_PhysicsPropId = 0x1a7,
	TE_PlayerDecalId = 0x1a8,
	TE_ProjectedDecalId = 0x1a9,
	TE_SmokeId = 0x1aa,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class EGCPlatform : uint32_t
{
	k_eGCPlatform_None = 0x0,
	k_eGCPlatform_PC = 0x1,
	k_eGCPlatform_Mac = 0x2,
	k_eGCPlatform_Linux = 0x3,
	k_eGCPlatform_Android = 0x4,
	k_eGCPlatform_iOS = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class GCProtoBufMsgSrc : uint32_t
{
	GCProtoBufMsgSrc_Unspecified = 0x0,
	GCProtoBufMsgSrc_FromSystem = 0x1,
	GCProtoBufMsgSrc_FromSteamID = 0x2,
	GCProtoBufMsgSrc_FromGC = 0x3,
	GCProtoBufMsgSrc_ReplySystem = 0x4,
	GCProtoBufMsgSrc_SpoofedSteamID = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EMobilePaymentProvider : uint32_t
{
	k_EMobilePaymentProvider_Invalid = 0x0,
	k_EMobilePaymentProvider_GooglePlay = 0x1,
	k_EMobilePaymentProvider_AppleAppStore = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class PointTemplateOwnerSpawnGroupType_t : uint32_t
{
	INSERT_INTO_POINT_TEMPLATE_SPAWN_GROUP = 0x0,
	INSERT_INTO_CURRENTLY_ACTIVE_SPAWN_GROUP = 0x1,
	INSERT_INTO_NEWLY_CREATED_SPAWN_GROUP = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class PointTemplateClientOnlyEntityBehavior_t : uint32_t
{
	CREATE_FOR_CURRENTLY_CONNECTED_CLIENTS_ONLY = 0x0,
	CREATE_FOR_CLIENTS_WHO_CONNECT_LATER = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class PerformanceMode_t : uint32_t
{
	PM_NORMAL = 0x0,
	PM_NO_GIBS = 0x1,
	PM_FULL_GIBS = 0x2,
	PM_REDUCED_GIBS = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class AmmoPosition_t : uint32_t
{
	AMMO_POSITION_INVALID = 0xffffffffffffffff,
	AMMO_POSITION_PRIMARY = 0x0,
	AMMO_POSITION_SECONDARY = 0x1,
	AMMO_POSITION_COUNT = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ChatIgnoreType_t : uint32_t
{
	CHAT_IGNORE_NONE = 0x0,
	CHAT_IGNORE_ALL = 0x1,
	CHAT_IGNORE_TEAM = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class CommandExecMode_t : uint32_t
{
	EXEC_MANUAL = 0x0,
	EXEC_LEVELSTART = 0x1,
	EXEC_PERIODIC = 0x2,
	EXEC_MODES_COUNT = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class CommandEntitySpecType_t : uint32_t
{
	SPEC_SEARCH = 0x0,
	SPEC_TYPES_COUNT = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2e
enum class GameAnimEventIndex_t : uint32_t
{
	AE_EMPTY = 0x0,
	AE_CL_PLAYSOUND = 0x1,
	AE_CL_PLAYSOUND_ATTACHMENT = 0x2,
	AE_CL_PLAYSOUND_POSITION = 0x3,
	AE_SV_PLAYSOUND = 0x4,
	AE_CL_STOPSOUND = 0x5,
	AE_CL_PLAYSOUND_LOOPING = 0x6,
	AE_CL_CREATE_PARTICLE_EFFECT = 0x7,
	AE_CL_STOP_PARTICLE_EFFECT = 0x8,
	AE_CL_CREATE_PARTICLE_EFFECT_CFG = 0x9,
	AE_SV_CREATE_PARTICLE_EFFECT_CFG = 0xa,
	AE_SV_STOP_PARTICLE_EFFECT = 0xb,
	AE_FOOTSTEP = 0xc,
	AE_RAGDOLL = 0xd,
	AE_CL_STOP_RAGDOLL_CONTROL = 0xe,
	AE_CL_ENABLE_BODYGROUP = 0xf,
	AE_CL_DISABLE_BODYGROUP = 0x10,
	AE_CL_BODYGROUP_SET_VALUE = 0x11,
	AE_SV_BODYGROUP_SET_VALUE = 0x12,
	AE_CL_BODYGROUP_SET_VALUE_CMODEL_WPN = 0x13,
	AE_WPN_PRIMARYATTACK = 0x14,
	AE_WPN_SECONDARYATTACK = 0x15,
	AE_FIRE_INPUT = 0x16,
	AE_CL_CLOTH_ATTR = 0x17,
	AE_CL_CLOTH_GROUND_OFFSET = 0x18,
	AE_CL_CLOTH_STIFFEN = 0x19,
	AE_CL_CLOTH_EFFECT = 0x1a,
	AE_CL_CREATE_ANIM_SCOPE_PROP = 0x1b,
	AE_CL_SUPPRESS_EVENTS_WITH_TAG = 0x1c,
	AE_CL_HIDE_PARTICLE_EFFECT = 0x1d,
	AE_CL_SHOW_PARTICLE_EFFECT = 0x1e,
	AE_CL_ADD_PARTICLE_EFFECT_CP = 0x1f,
	AE_CL_SPEECH = 0x20,
	AE_CL_PANORAMA_EVENT = 0x21,
	AE_CL_DOTA_PLAY_STATUS_EFFECT = 0x22,
	AE_CL_DOTA_STOP_STATUS_EFFECT = 0x23,
	AE_CL_DOTA_NPC_CREATE_PARTICLE_EFFECT = 0x24,
	AE_CL_DOTA_RUBICK_ARCANA_CREATE_PARTICLE_EFFECT = 0x25,
	AE_DOTA_PET_ITEM_PICKUP = 0x26,
	AE_DOTA_PET_ITEM_DROP = 0x27,
	AE_DOTA_SUPPRESS_CONSTANT_LAYER = 0x28,
	AE_DOTA_PLAY_SOUND_ATTACK_SPECIAL = 0x29,
	AE_DOTA_CREATE_CLINKZ_ATTACK = 0x2a,
	AE_DOTA_PLAY_SOUND_ATTACK_BACKSTAB = 0x2b,
	AE_DOTA_DIE_PHANTOM_DEATH_PARTICLES = 0x2c,
	AE_DOTA_SWITCH_ATTACK_COMBO = 0x2d,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class ObserverMode_t : uint32_t
{
	OBS_MODE_NONE = 0x0,
	OBS_MODE_FIXED = 0x1,
	OBS_MODE_IN_EYE = 0x2,
	OBS_MODE_CHASE = 0x3,
	OBS_MODE_ROAMING = 0x4,
	OBS_MODE_DIRECTED = 0x5,
	NUM_OBSERVER_MODES = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ObserverInterpState_t : uint32_t
{
	OBSERVER_INTERP_NONE = 0x0,
	OBSERVER_INTERP_TRAVELING = 0x1,
	OBSERVER_INTERP_SETTLING = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1b
enum class RumbleEffect_t : uint32_t
{
	RUMBLE_INVALID = 0xffffffffffffffff,
	// MPropertySuppressEnumerator
	RUMBLE_STOP_ALL = 0x0,
	RUMBLE_PISTOL = 0x1,
	RUMBLE_357 = 0x2,
	RUMBLE_SMG1 = 0x3,
	RUMBLE_AR2 = 0x4,
	RUMBLE_SHOTGUN_SINGLE = 0x5,
	RUMBLE_SHOTGUN_DOUBLE = 0x6,
	RUMBLE_AR2_ALT_FIRE = 0x7,
	RUMBLE_RPG_MISSILE = 0x8,
	RUMBLE_CROWBAR_SWING = 0x9,
	RUMBLE_AIRBOAT_GUN = 0xa,
	RUMBLE_JEEP_ENGINE_LOOP = 0xb,
	RUMBLE_FLAT_LEFT = 0xc,
	RUMBLE_FLAT_RIGHT = 0xd,
	RUMBLE_FLAT_BOTH = 0xe,
	RUMBLE_DMG_LOW = 0xf,
	RUMBLE_DMG_MED = 0x10,
	RUMBLE_DMG_HIGH = 0x11,
	RUMBLE_FALL_LONG = 0x12,
	RUMBLE_FALL_SHORT = 0x13,
	RUMBLE_PHYSCANNON_OPEN = 0x14,
	RUMBLE_PHYSCANNON_PUNT = 0x15,
	RUMBLE_PHYSCANNON_LOW = 0x16,
	RUMBLE_PHYSCANNON_MEDIUM = 0x17,
	RUMBLE_PHYSCANNON_HIGH = 0x18,
	// MPropertySuppressEnumerator
	NUM_RUMBLE_EFFECTS = 0x19,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x13
enum class WeaponSound_t : uint32_t
{
	WEAPON_SOUND_EMPTY = 0x0,
	WEAPON_SOUND_SECONDARY_EMPTY = 0x1,
	WEAPON_SOUND_SINGLE = 0x2,
	WEAPON_SOUND_SECONDARY_ATTACK = 0x3,
	WEAPON_SOUND_RELOAD = 0x4,
	WEAPON_SOUND_MELEE_MISS = 0x5,
	WEAPON_SOUND_MELEE_HIT = 0x6,
	WEAPON_SOUND_MELEE_HIT_WORLD = 0x7,
	WEAPON_SOUND_MELEE_HIT_PLAYER = 0x8,
	WEAPON_SOUND_MELEE_HIT_NPC = 0x9,
	WEAPON_SOUND_SPECIAL1 = 0xa,
	WEAPON_SOUND_SPECIAL2 = 0xb,
	WEAPON_SOUND_SPECIAL3 = 0xc,
	WEAPON_SOUND_NEARLYEMPTY = 0xd,
	WEAPON_SOUND_IMPACT = 0xe,
	WEAPON_SOUND_REFLECT = 0xf,
	WEAPON_SOUND_SECONDARY_IMPACT = 0x10,
	WEAPON_SOUND_SECONDARY_REFLECT = 0x11,
	// MPropertySuppressEnumerator
	WEAPON_SOUND_NUM_TYPES = 0x12,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class AmmoFlags_t : uint32_t
{
	AMMO_FORCE_DROP_IF_CARRIED = 0x1,
	AMMO_RESERVE_STAYS_WITH_WEAPON = 0x2,
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	AMMO_FLAG_MAX = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xd
enum class TakeDamageFlags_t : uint32_t
{
	DFLAG_NONE = 0x0,
	DFLAG_SUPPRESS_HEALTH_CHANGES = 0x1,
	DFLAG_SUPPRESS_PHYSICS_FORCE = 0x2,
	DFLAG_SUPPRESS_EFFECTS = 0x4,
	DFLAG_PREVENT_DEATH = 0x8,
	DFLAG_FORCE_DEATH = 0x10,
	DFLAG_ALWAYS_GIB = 0x20,
	DFLAG_NEVER_GIB = 0x40,
	DFLAG_REMOVE_NO_RAGDOLL = 0x80,
	DFLAG_SUPPRESS_DAMAGE_MODIFICATION = 0x100,
	DFLAG_ALWAYS_FIRE_DAMAGE_EVENTS = 0x200,
	DFLAG_RADIUS_DMG = 0x400,
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	DMG_LASTDFLAG = 0x400,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x16
enum class DamageTypes_t : uint32_t
{
	DMG_GENERIC = 0x0,
	DMG_CRUSH = 0x1,
	DMG_BULLET = 0x2,
	DMG_SLASH = 0x4,
	DMG_BURN = 0x8,
	DMG_VEHICLE = 0x10,
	DMG_FALL = 0x20,
	DMG_BLAST = 0x40,
	DMG_CLUB = 0x80,
	DMG_SHOCK = 0x100,
	DMG_SONIC = 0x200,
	DMG_ENERGYBEAM = 0x400,
	DMG_DROWN = 0x4000,
	DMG_POISON = 0x8000,
	DMG_RADIATION = 0x10000,
	DMG_DROWNRECOVER = 0x20000,
	DMG_ACID = 0x40000,
	DMG_PHYSGUN = 0x100000,
	DMG_DISSOLVE = 0x200000,
	DMG_BLAST_SURFACE = 0x400000,
	DMG_BUCKSHOT = 0x1000000,
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	DMG_LASTGENERICFLAG = 0x1000000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x11
enum class BaseExplosionTypes_t : uint32_t
{
	// MPropertyFriendlyName "Default"
	EXPLOSION_TYPE_DEFAULT = 0x0,
	// MPropertyFriendlyName "Grenade"
	EXPLOSION_TYPE_GRENADE = 0x1,
	// MPropertyFriendlyName "Molotov"
	EXPLOSION_TYPE_MOLOTOV = 0x2,
	// MPropertyFriendlyName "Fireworks"
	EXPLOSION_TYPE_FIREWORKS = 0x3,
	// MPropertyFriendlyName "Gascan"
	EXPLOSION_TYPE_GASCAN = 0x4,
	// MPropertyFriendlyName "Gas Cylinder"
	EXPLOSION_TYPE_GASCYLINDER = 0x5,
	// MPropertyFriendlyName "Explosive Barrel"
	EXPLOSION_TYPE_EXPLOSIVEBARREL = 0x6,
	// MPropertyFriendlyName "Electrical"
	EXPLOSION_TYPE_ELECTRICAL = 0x7,
	// MPropertyFriendlyName "EMP"
	EXPLOSION_TYPE_EMP = 0x8,
	// MPropertyFriendlyName "Shrapnel"
	EXPLOSION_TYPE_SHRAPNEL = 0x9,
	// MPropertyFriendlyName "Smoke Grenade"
	EXPLOSION_TYPE_SMOKEGRENADE = 0xa,
	// MPropertyFriendlyName "Flashbang"
	EXPLOSION_TYPE_FLASHBANG = 0xb,
	// MPropertyFriendlyName "Tripmine"
	EXPLOSION_TYPE_TRIPMINE = 0xc,
	// MPropertyFriendlyName "Ice"
	EXPLOSION_TYPE_ICE = 0xd,
	// MPropertyFriendlyName "None"
	EXPLOSION_TYPE_NONE = 0xe,
	// MPropertyFriendlyName "Custom"
	EXPLOSION_TYPE_CUSTOM = 0xf,
	// MPropertySuppressEnumerator
	EXPLOSION_TYPE_COUNT = 0x10,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x3
enum class DamageOptions_t : uint8_t
{
	DAMAGE_NO = 0x0,
	DAMAGE_EVENTS_ONLY = 0x1,
	DAMAGE_YES = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class HierarchyType_t : uint32_t
{
	HIERARCHY_NONE = 0x0,
	HIERARCHY_BONE_MERGE = 0x1,
	HIERARCHY_ATTACHMENT = 0x2,
	HIERARCHY_ABSORIGIN = 0x3,
	HIERARCHY_BONE = 0x4,
	HIERARCHY_TYPE_COUNT = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class CanPlaySequence_t : uint32_t
{
	CANNOT_PLAY = 0x0,
	CAN_PLAY_NOW = 0x1,
	CAN_PLAY_ENQUEUED = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class ScriptedMoveTo_t : uint32_t
{
	CINE_MOVETO_WAIT = 0x0,
	CINE_MOVETO_WALK = 0x1,
	CINE_MOVETO_RUN = 0x2,
	CINE_MOVETO_CUSTOM = 0x3,
	CINE_MOVETO_TELEPORT = 0x4,
	CINE_MOVETO_WAIT_FACING = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ScriptedOnDeath_t : uint32_t
{
	SS_ONDEATH_NOT_APPLICABLE = 0xffffffffffffffff,
	SS_ONDEATH_UNDEFINED = 0x0,
	SS_ONDEATH_RAGDOLL = 0x1,
	SS_ONDEATH_ANIMATED_DEATH = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class IChoreoServices__ScriptState_t : uint32_t
{
	SCRIPT_PLAYING = 0x0,
	SCRIPT_WAIT = 0x1,
	SCRIPT_POST_IDLE = 0x2,
	SCRIPT_CLEANUP = 0x3,
	SCRIPT_WALK_TO_MARK = 0x4,
	SCRIPT_RUN_TO_MARK = 0x5,
	SCRIPT_CUSTOM_MOVE_TO_MARK = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class IChoreoServices__ChoreoState_t : uint32_t
{
	STATE_PRE_SCRIPT = 0x0,
	STATE_WAIT_FOR_SCRIPT = 0x1,
	STATE_WALK_TO_MARK = 0x2,
	STATE_SYNCHRONIZE_SCRIPT = 0x3,
	STATE_PLAY_SCRIPT = 0x4,
	STATE_PLAY_SCRIPT_POST_IDLE = 0x5,
	STATE_PLAY_SCRIPT_POST_IDLE_DONE = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x12
enum class InputBitMask_t : uint64_t
{
	// MEnumeratorIsNotAFlag
	IN_NONE = 0x0,
	// MEnumeratorIsNotAFlag
	IN_ALL = 0xffffffffffffffff,
	IN_ATTACK = 0x1,
	IN_JUMP = 0x2,
	IN_DUCK = 0x4,
	IN_FORWARD = 0x8,
	IN_BACK = 0x10,
	IN_USE = 0x20,
	IN_TURNLEFT = 0x80,
	IN_TURNRIGHT = 0x100,
	IN_MOVELEFT = 0x200,
	IN_MOVERIGHT = 0x400,
	IN_ATTACK2 = 0x800,
	IN_RELOAD = 0x2000,
	IN_SPEED = 0x10000,
	IN_JOYAUTOSPRINT = 0x20000,
	// MEnumeratorIsNotAFlag
	IN_FIRST_MOD_SPECIFIC_BIT = 0x100000000,
	IN_QUERY = 0x100000000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9
enum class EInButtonState : uint32_t
{
	IN_BUTTON_UP = 0x0,
	IN_BUTTON_DOWN = 0x1,
	IN_BUTTON_DOWN_UP = 0x2,
	IN_BUTTON_UP_DOWN = 0x3,
	IN_BUTTON_UP_DOWN_UP = 0x4,
	IN_BUTTON_DOWN_UP_DOWN = 0x5,
	IN_BUTTON_DOWN_UP_DOWN_UP = 0x6,
	IN_BUTTON_UP_DOWN_UP_DOWN = 0x7,
	IN_BUTTON_STATE_COUNT = 0x8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class ShakeCommand_t : uint32_t
{
	SHAKE_START = 0x0,
	SHAKE_STOP = 0x1,
	SHAKE_AMPLITUDE = 0x2,
	SHAKE_FREQUENCY = 0x3,
	SHAKE_START_RUMBLEONLY = 0x4,
	SHAKE_START_NORUMBLE = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class TimelineCompression_t : uint32_t
{
	TIMELINE_COMPRESSION_SUM = 0x0,
	TIMELINE_COMPRESSION_COUNT_PER_INTERVAL = 0x1,
	TIMELINE_COMPRESSION_AVERAGE = 0x2,
	TIMELINE_COMPRESSION_AVERAGE_BLEND = 0x3,
	TIMELINE_COMPRESSION_TOTAL = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
enum class DebugOverlayBits_t : uint64_t
{
	OVERLAY_TEXT_BIT = 0x1,
	OVERLAY_NAME_BIT = 0x2,
	OVERLAY_BBOX_BIT = 0x4,
	OVERLAY_PIVOT_BIT = 0x8,
	OVERLAY_MESSAGE_BIT = 0x10,
	OVERLAY_ABSBOX_BIT = 0x20,
	OVERLAY_RBOX_BIT = 0x40,
	OVERLAY_SHOW_BLOCKSLOS = 0x80,
	OVERLAY_ATTACHMENTS_BIT = 0x100,
	OVERLAY_INTERPOLATED_ATTACHMENTS_BIT = 0x200,
	OVERLAY_INTERPOLATED_PIVOT_BIT = 0x400,
	OVERLAY_SKELETON_BIT = 0x800,
	OVERLAY_INTERPOLATED_SKELETON_BIT = 0x1000,
	OVERLAY_TRIGGER_BOUNDS_BIT = 0x2000,
	OVERLAY_HITBOX_BIT = 0x4000,
	OVERLAY_INTERPOLATED_HITBOX_BIT = 0x8000,
	OVERLAY_AUTOAIM_BIT = 0x10000,
	OVERLAY_NPC_SELECTED_BIT = 0x20000,
	OVERLAY_JOINT_INFO_BIT = 0x40000,
	OVERLAY_NPC_ROUTE_BIT = 0x80000,
	OVERLAY_NPC_TRIANGULATE_BIT = 0x100000,
	OVERLAY_NPC_ZAP_BIT = 0x200000,
	OVERLAY_NPC_ENEMIES_BIT = 0x400000,
	OVERLAY_NPC_CONDITIONS_BIT = 0x800000,
	OVERLAY_NPC_COMBAT_BIT = 0x1000000,
	OVERLAY_NPC_TASK_BIT = 0x2000000,
	OVERLAY_NPC_BODYLOCATIONS = 0x4000000,
	OVERLAY_NPC_VIEWCONE_BIT = 0x8000000,
	OVERLAY_NPC_KILL_BIT = 0x10000000,
	OVERLAY_WC_CHANGE_ENTITY = 0x20000000,
	OVERLAY_BUDDHA_MODE = 0x40000000,
	OVERLAY_NPC_STEERING_REGULATIONS = 0x80000000,
	OVERLAY_NPC_TASK_TEXT_BIT = 0x100000000,
	OVERLAY_PROP_DEBUG = 0x200000000,
	OVERLAY_NPC_RELATION_BIT = 0x400000000,
	OVERLAY_VIEWOFFSET = 0x800000000,
	OVERLAY_VCOLLIDE_WIREFRAME_BIT = 0x1000000000,
	OVERLAY_NPC_NEAREST_NODE_BIT = 0x2000000000,
	OVERLAY_ACTORNAME_BIT = 0x4000000000,
	OVERLAY_NPC_CONDITIONS_TEXT_BIT = 0x8000000000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0xd
enum class MoveType_t : uint8_t
{
	MOVETYPE_NONE = 0x0,
	MOVETYPE_OBSOLETE = 0x1,
	MOVETYPE_WALK = 0x2,
	MOVETYPE_STEP = 0x3,
	MOVETYPE_FLY = 0x4,
	MOVETYPE_FLYGRAVITY = 0x5,
	MOVETYPE_VPHYSICS = 0x6,
	MOVETYPE_PUSH = 0x7,
	MOVETYPE_NOCLIP = 0x8,
	MOVETYPE_OBSERVER = 0x9,
	MOVETYPE_CUSTOM = 0xa,
	MOVETYPE_LAST = 0xb,
	MOVETYPE_MAX_BITS = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x6
enum class MoveCollide_t : uint8_t
{
	MOVECOLLIDE_DEFAULT = 0x0,
	MOVECOLLIDE_FLY_BOUNCE = 0x1,
	MOVECOLLIDE_FLY_CUSTOM = 0x2,
	MOVECOLLIDE_FLY_SLIDE = 0x3,
	MOVECOLLIDE_COUNT = 0x4,
	MOVECOLLIDE_MAX_BITS = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x9
enum class SolidType_t : uint8_t
{
	SOLID_NONE = 0x0,
	SOLID_BSP = 0x1,
	SOLID_BBOX = 0x2,
	SOLID_OBB = 0x3,
	SOLID_SPHERE = 0x4,
	SOLID_POINT = 0x5,
	SOLID_VPHYSICS = 0x6,
	SOLID_CAPSULE = 0x7,
	SOLID_LAST = 0x8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class BrushSolidities_e : uint32_t
{
	BRUSHSOLID_TOGGLE = 0x0,
	BRUSHSOLID_NEVER = 0x1,
	BRUSHSOLID_ALWAYS = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0xd
enum class RenderMode_t : uint8_t
{
	kRenderNormal = 0x0,
	kRenderTransColor = 0x1,
	kRenderTransTexture = 0x2,
	kRenderGlow = 0x3,
	kRenderTransAlpha = 0x4,
	kRenderTransAdd = 0x5,
	kRenderEnvironmental = 0x6,
	kRenderTransAddFrameBlend = 0x7,
	kRenderTransAlphaAdd = 0x8,
	kRenderWorldGlow = 0x9,
	kRenderNone = 0xa,
	kRenderDevVisualizer = 0xb,
	kRenderModeCount = 0xc,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x14
enum class RenderFx_t : uint8_t
{
	kRenderFxNone = 0x0,
	kRenderFxPulseSlow = 0x1,
	kRenderFxPulseFast = 0x2,
	kRenderFxPulseSlowWide = 0x3,
	kRenderFxPulseFastWide = 0x4,
	kRenderFxFadeSlow = 0x5,
	kRenderFxFadeFast = 0x6,
	kRenderFxSolidSlow = 0x7,
	kRenderFxSolidFast = 0x8,
	kRenderFxStrobeSlow = 0x9,
	kRenderFxStrobeFast = 0xa,
	kRenderFxStrobeFaster = 0xb,
	kRenderFxFlickerSlow = 0xc,
	kRenderFxFlickerFast = 0xd,
	kRenderFxNoDissipation = 0xe,
	kRenderFxFadeOut = 0xf,
	kRenderFxFadeIn = 0x10,
	kRenderFxPulseFastWider = 0x11,
	kRenderFxGlowShell = 0x12,
	kRenderFxMax = 0x13,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class CRR_Response__ResponseEnum_t : uint32_t
{
	MAX_RESPONSE_NAME = 0xc0,
	MAX_RULE_NAME = 0x80,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class LessonPanelLayoutFileTypes_t : uint32_t
{
	LAYOUT_HAND_DEFAULT = 0x0,
	LAYOUT_WORLD_DEFAULT = 0x1,
	LAYOUT_CUSTOM = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class Touch_t : uint32_t
{
	touch_none = 0x0,
	touch_player_only = 0x1,
	touch_npc_only = 0x2,
	touch_player_or_npc = 0x3,
	touch_player_or_npc_or_physicsprop = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ScriptedMoveType_t : uint32_t
{
	SCRIPTED_MOVETYPE_NONE = 0x0,
	SCRIPTED_MOVETYPE_TO_WITH_DURATION = 0x1,
	SCRIPTED_MOVETYPE_TO_WITH_MOVESPEED = 0x2,
	SCRIPTED_MOVETYPE_SWEEP_TO_AT_MOVEMENT_SPEED = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ForcedCrouchState_t : uint32_t
{
	FORCEDCROUCH_NONE = 0x0,
	FORCEDCROUCH_CROUCHED = 0x1,
	FORCEDCROUCH_UNCROUCHED = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
enum class Hull_t : uint32_t
{
	HULL_HUMAN = 0x0,
	HULL_SMALL_CENTERED = 0x1,
	HULL_WIDE_HUMAN = 0x2,
	HULL_TINY = 0x3,
	HULL_MEDIUM = 0x4,
	HULL_TINY_CENTERED = 0x5,
	HULL_LARGE = 0x6,
	HULL_LARGE_CENTERED = 0x7,
	HULL_MEDIUM_TALL = 0x8,
	HULL_SMALL = 0x9,
	NUM_HULLS = 0xa,
	HULL_NONE = 0xb,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1
enum class navproperties_t : uint32_t
{
	NAV_IGNORE = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class CLogicBranchList__LogicBranchListenerLastState_t : uint32_t
{
	LOGIC_BRANCH_LISTENER_NOT_INIT = 0x0,
	LOGIC_BRANCH_LISTENER_ALL_TRUE = 0x1,
	LOGIC_BRANCH_LISTENER_ALL_FALSE = 0x2,
	LOGIC_BRANCH_LISTENER_MIXED = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EntFinderMethod_t : uint32_t
{
	ENT_FIND_METHOD_NEAREST = 0x0,
	ENT_FIND_METHOD_FARTHEST = 0x1,
	ENT_FIND_METHOD_RANDOM = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ValueRemapperInputType_t : uint32_t
{
	InputType_PlayerShootPosition = 0x0,
	InputType_PlayerShootPositionAroundAxis = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ValueRemapperOutputType_t : uint32_t
{
	OutputType_AnimationCycle = 0x0,
	OutputType_RotationX = 0x1,
	OutputType_RotationY = 0x2,
	OutputType_RotationZ = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ValueRemapperHapticsType_t : uint32_t
{
	HaticsType_Default = 0x0,
	HaticsType_None = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ValueRemapperMomentumType_t : uint32_t
{
	MomentumType_None = 0x0,
	MomentumType_Friction = 0x1,
	MomentumType_SpringTowardSnapValue = 0x2,
	MomentumType_SpringAwayFromSnapValue = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ValueRemapperRatchetType_t : uint32_t
{
	RatchetType_Absolute = 0x0,
	RatchetType_EachEngage = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class PointWorldTextJustifyHorizontal_t : uint32_t
{
	POINT_WORLD_TEXT_JUSTIFY_HORIZONTAL_LEFT = 0x0,
	POINT_WORLD_TEXT_JUSTIFY_HORIZONTAL_CENTER = 0x1,
	POINT_WORLD_TEXT_JUSTIFY_HORIZONTAL_RIGHT = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class PointWorldTextJustifyVertical_t : uint32_t
{
	POINT_WORLD_TEXT_JUSTIFY_VERTICAL_BOTTOM = 0x0,
	POINT_WORLD_TEXT_JUSTIFY_VERTICAL_CENTER = 0x1,
	POINT_WORLD_TEXT_JUSTIFY_VERTICAL_TOP = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class PointWorldTextReorientMode_t : uint32_t
{
	POINT_WORLD_TEXT_REORIENT_NONE = 0x0,
	POINT_WORLD_TEXT_REORIENT_AROUND_UP = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class SceneOnPlayerDeath_t : uint32_t
{
	SCENE_ONPLAYERDEATH_DO_NOTHING = 0x0,
	SCENE_ONPLAYERDEATH_CANCEL = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ScriptedConflictResponse_t : uint32_t
{
	SS_CONFLICT_ENQUEUE = 0x0,
	SS_CONFLICT_INTERRUPT = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class TRAIN_CODE : uint32_t
{
	TRAIN_SAFE = 0x0,
	TRAIN_BLOCKING = 0x1,
	TRAIN_FOLLOWING = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class TOGGLE_STATE : uint32_t
{
	TS_AT_TOP = 0x0,
	TS_AT_BOTTOM = 0x1,
	TS_GOING_UP = 0x2,
	TS_GOING_DOWN = 0x3,
	DOOR_OPEN = 0x0,
	DOOR_CLOSED = 0x1,
	DOOR_OPENING = 0x2,
	DOOR_CLOSING = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class filter_t : uint32_t
{
	FILTER_AND = 0x0,
	FILTER_OR = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class Explosions : uint32_t
{
	expRandom = 0x0,
	expDirected = 0x1,
	expUsePrecise = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
enum class Materials : uint32_t
{
	matGlass = 0x0,
	matWood = 0x1,
	matMetal = 0x2,
	matFlesh = 0x3,
	matCinderBlock = 0x4,
	matCeilingTile = 0x5,
	matComputer = 0x6,
	matUnbreakableGlass = 0x7,
	matRocks = 0x8,
	matWeb = 0x9,
	matNone = 0xa,
	matLastMaterial = 0xb,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EOverrideBlockLOS_t : uint32_t
{
	BLOCK_LOS_DEFAULT = 0x0,
	BLOCK_LOS_FORCE_FALSE = 0x1,
	BLOCK_LOS_FORCE_TRUE = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class MoveLinearAuthoredPos_t : uint32_t
{
	MOVELINEAR_AUTHORED_AT_START_POSITION = 0x0,
	MOVELINEAR_AUTHORED_AT_OPEN_POSITION = 0x1,
	MOVELINEAR_AUTHORED_AT_CLOSED_POSITION = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class SimpleConstraintSoundProfile__SimpleConstraintsSoundProfileKeypoints_t : uint32_t
{
	kMIN_THRESHOLD = 0x0,
	kMIN_FULL = 0x1,
	kHIGHWATER = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x17
enum class SoundFlags_t : uint32_t
{
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	SOUND_NONE = 0x0,
	SOUND_COMBAT = 0x1,
	SOUND_WORLD = 0x2,
	SOUND_PLAYER = 0x4,
	SOUND_DANGER = 0x8,
	SOUND_BULLET_IMPACT = 0x10,
	SOUND_THUMPER = 0x20,
	SOUND_PHYSICS_DANGER = 0x40,
	SOUND_MOVE_AWAY = 0x80,
	SOUND_PLAYER_VEHICLE = 0x100,
	SOUND_GLASS_BREAK = 0x200,
	SOUND_PHYSICS_OBJECT = 0x400,
	SOUND_CONTEXT_GUNFIRE = 0x100000,
	SOUND_CONTEXT_COMBINE_ONLY = 0x200000,
	SOUND_CONTEXT_REACT_TO_SOURCE = 0x400000,
	SOUND_CONTEXT_EXPLOSION = 0x800000,
	SOUND_CONTEXT_EXCLUDE_COMBINE = 0x1000000,
	SOUND_CONTEXT_DANGER_APPROACH = 0x2000000,
	SOUND_CONTEXT_ALLIES_ONLY = 0x4000000,
	SOUND_CONTEXT_PANIC_NPCS = 0x8000000,
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	ALL_CONTEXTS = 0xfffffffffff00000,
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	ALL_SCENTS = 0x0,
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	ALL_SOUNDS = 0xfffff,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class TrainVelocityType_t : uint32_t
{
	TrainVelocity_Instantaneous = 0x0,
	TrainVelocity_LinearBlend = 0x1,
	TrainVelocity_EaseInEaseOut = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class TrainOrientationType_t : uint32_t
{
	TrainOrientation_Fixed = 0x0,
	TrainOrientation_AtPathTracks = 0x1,
	TrainOrientation_LinearBlend = 0x2,
	TrainOrientation_EaseInEaseOut = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class BeamType_t : uint32_t
{
	BEAM_INVALID = 0x0,
	BEAM_POINTS = 0x1,
	BEAM_ENTPOINT = 0x2,
	BEAM_ENTS = 0x3,
	BEAM_HOSE = 0x4,
	BEAM_SPLINE = 0x5,
	BEAM_LASER = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class BeamClipStyle_t : uint32_t
{
	kNOCLIP = 0x0,
	kGEOCLIP = 0x1,
	kMODELCLIP = 0x2,
	kBEAMCLIPSTYLE_NUMBITS = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x9
enum class SurroundingBoundsType_t : uint8_t
{
	USE_OBB_COLLISION_BOUNDS = 0x0,
	USE_BEST_COLLISION_BOUNDS = 0x1,
	USE_HITBOXES = 0x2,
	USE_SPECIFIED_BOUNDS = 0x3,
	USE_GAME_CODE = 0x4,
	USE_ROTATION_EXPANDED_BOUNDS = 0x5,
	USE_COLLISION_BOUNDS_NEVER_VPHYSICS = 0x6,
	USE_ROTATION_EXPANDED_SEQUENCE_BOUNDS = 0x7,
	SURROUNDING_TYPE_BIT_COUNT = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class AnimLoopMode_t : uint32_t
{
	// MPropertySuppressEnumerator
	ANIM_LOOP_MODE_INVALID = 0xffffffffffffffff,
	ANIM_LOOP_MODE_NOT_LOOPING = 0x0,
	ANIM_LOOP_MODE_LOOPING = 0x1,
	ANIM_LOOP_MODE_USE_SEQUENCE_SETTINGS = 0x2,
	// MPropertySuppressEnumerator
	ANIM_LOOP_MODE_COUNT = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EntitySubclassScope_t : uint32_t
{
	SUBCLASS_SCOPE_NONE = 0xffffffffffffffff,
	// MPropertyFriendlyName "Player"
	// MEntitySubclassScopeFile
	SUBCLASS_SCOPE_PLAYER = 0x0,
	SUBCLASS_SCOPE_COUNT = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class SubclassVDataChangeType_t : uint32_t
{
	SUBCLASS_VDATA_CREATED = 0x0,
	SUBCLASS_VDATA_SUBCLASS_CHANGED = 0x1,
	SUBCLASS_VDATA_RELOADED = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class PlayerConnectedState : uint32_t
{
	PlayerNeverConnected = 0xffffffffffffffff,
	PlayerConnected = 0x0,
	PlayerConnecting = 0x1,
	PlayerReconnecting = 0x2,
	PlayerDisconnecting = 0x3,
	PlayerDisconnected = 0x4,
	PlayerReserved = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class WeaponAttackType_t : uint32_t
{
	eInvalid = 0xffffffffffffffff,
	ePrimary = 0x0,
	eSecondary = 0x1,
	eCount = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
enum class vote_create_failed_t : uint32_t
{
	VOTE_FAILED_GENERIC = 0x0,
	VOTE_FAILED_TRANSITIONING_PLAYERS = 0x1,
	VOTE_FAILED_RATE_EXCEEDED = 0x2,
	VOTE_FAILED_YES_MUST_EXCEED_NO = 0x3,
	VOTE_FAILED_QUORUM_FAILURE = 0x4,
	VOTE_FAILED_ISSUE_DISABLED = 0x5,
	VOTE_FAILED_MAP_NOT_FOUND = 0x6,
	VOTE_FAILED_MAP_NAME_REQUIRED = 0x7,
	VOTE_FAILED_FAILED_RECENTLY = 0x8,
	VOTE_FAILED_TEAM_CANT_CALL = 0x9,
	VOTE_FAILED_WAITINGFORPLAYERS = 0xa,
	VOTE_FAILED_PLAYERNOTFOUND = 0xb,
	VOTE_FAILED_CANNOT_KICK_ADMIN = 0xc,
	VOTE_FAILED_SCRAMBLE_IN_PROGRESS = 0xd,
	VOTE_FAILED_SPECTATOR = 0xe,
	VOTE_FAILED_MAX = 0xf,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x9
enum class ItemFlagTypes_t : uint8_t
{
	ITEM_FLAG_NONE = 0x0,
	ITEM_FLAG_CAN_SELECT_WITHOUT_AMMO = 0x1,
	ITEM_FLAG_NOAUTORELOAD = 0x2,
	ITEM_FLAG_NOAUTOSWITCHEMPTY = 0x4,
	ITEM_FLAG_LIMITINWORLD = 0x8,
	ITEM_FLAG_EXHAUSTIBLE = 0x10,
	ITEM_FLAG_DOHITLOCATIONDMG = 0x20,
	ITEM_FLAG_NOAMMOPICKUPS = 0x40,
	ITEM_FLAG_NOITEMPICKUP = 0x80,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class EntityDisolveType_t : uint32_t
{
	ENTITY_DISSOLVE_INVALID = 0xffffffffffffffff,
	ENTITY_DISSOLVE_NORMAL = 0x0,
	ENTITY_DISSOLVE_ELECTRICAL = 0x1,
	ENTITY_DISSOLVE_ELECTRICAL_LIGHT = 0x2,
	ENTITY_DISSOLVE_CORE = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xe
enum class HitGroup_t : uint32_t
{
	HITGROUP_INVALID = 0xffffffffffffffff,
	HITGROUP_GENERIC = 0x0,
	HITGROUP_HEAD = 0x1,
	HITGROUP_CHEST = 0x2,
	HITGROUP_STOMACH = 0x3,
	HITGROUP_LEFTARM = 0x4,
	HITGROUP_RIGHTARM = 0x5,
	HITGROUP_LEFTLEG = 0x6,
	HITGROUP_RIGHTLEG = 0x7,
	HITGROUP_NECK = 0x8,
	HITGROUP_UNUSED = 0x9,
	HITGROUP_GEAR = 0xa,
	HITGROUP_SPECIAL = 0xb,
	HITGROUP_COUNT = 0xc,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x6
enum class WaterLevel_t : uint8_t
{
	WL_NotInWater = 0x0,
	WL_Feet = 0x1,
	WL_Waist = 0x2,
	WL_Chest = 0x3,
	WL_FullyUnderwater = 0x4,
	WL_Count = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DoorState_t : uint32_t
{
	DOOR_STATE_CLOSED = 0x0,
	DOOR_STATE_OPENING = 0x1,
	DOOR_STATE_OPEN = 0x2,
	DOOR_STATE_CLOSING = 0x3,
	DOOR_STATE_AJAR = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ShadowType_t : uint32_t
{
	SHADOWS_NONE = 0x0,
	SHADOWS_SIMPLE = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class Class_T : uint32_t
{
	CLASS_NONE = 0x0,
	CLASS_PLAYER = 0x1,
	CLASS_PLAYER_ALLY = 0x2,
	NUM_CLASSIFY_CLASSES = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xa
enum class Disposition_t : uint32_t
{
	D_ER = 0x0,
	D_HT = 0x1,
	D_FR = 0x2,
	D_LI = 0x3,
	D_NU = 0x4,
	D_ERROR = 0x0,
	D_HATE = 0x1,
	D_FEAR = 0x2,
	D_LIKE = 0x3,
	D_NEUTRAL = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class LatchDirtyPermission_t : uint32_t
{
	LATCH_DIRTY_DISALLOW = 0x0,
	LATCH_DIRTY_SERVER_CONTROLLED = 0x1,
	LATCH_DIRTY_CLIENT_SIMULATED = 0x2,
	LATCH_DIRTY_PREDICTION = 0x3,
	LATCH_DIRTY_FRAMESIMULATE = 0x4,
	LATCH_DIRTY_PARTICLE_SIMULATE = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class LifeState_t : uint32_t
{
	LIFE_ALIVE = 0x0,
	LIFE_DYING = 0x1,
	LIFE_DEAD = 0x2,
	LIFE_RESPAWNABLE = 0x3,
	LIFE_RESPAWNING = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class StanceType_t : uint32_t
{
	// MPropertySuppressEnumerator
	STANCE_CURRENT = 0xffffffffffffffff,
	// MPropertyFriendlyName "Default"
	STANCE_DEFAULT = 0x0,
	// MPropertyFriendlyName "Crouching"
	STANCE_CROUCHING = 0x1,
	// MPropertyFriendlyName "Prone"
	STANCE_PRONE = 0x2,
	// MPropertySuppressEnumerator
	NUM_STANCES = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ModifyDamageReturn_t : uint32_t
{
	CONTINUE_TO_APPLY_DAMAGE = 0x0,
	ABORT_DO_NOT_APPLY_DAMAGE = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x3
enum class BeginDeathLifeStateTransition_t : uint8_t
{
	NO_CHANGE_IN_LIFESTATE = 0x0,
	TRANSITION_TO_LIFESTATE_DYING = 0x1,
	TRANSITION_TO_LIFESTATE_DEAD = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class WorldTextPanelHorizontalAlign_t : uint32_t
{
	WORLDTEXT_HORIZONTAL_ALIGN_LEFT = 0x0,
	WORLDTEXT_HORIZONTAL_ALIGN_CENTER = 0x1,
	WORLDTEXT_HORIZONTAL_ALIGN_RIGHT = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class WorldTextPanelVerticalAlign_t : uint32_t
{
	WORLDTEXT_VERTICAL_ALIGN_TOP = 0x0,
	WORLDTEXT_VERTICAL_ALIGN_CENTER = 0x1,
	WORLDTEXT_VERTICAL_ALIGN_BOTTOM = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class WorldTextPanelOrientation_t : uint32_t
{
	WORLDTEXT_ORIENTATION_DEFAULT = 0x0,
	WORLDTEXT_ORIENTATION_FACEUSER = 0x1,
	WORLDTEXT_ORIENTATION_FACEUSER_UPRIGHT = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ESourceEngine : uint32_t
{
	k_ESE_Source1 = 0x0,
	k_ESE_Source2 = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class PartnerAccountType : uint32_t
{
	PARTNER_NONE = 0x0,
	PARTNER_PERFECT_WORLD = 0x1,
	PARTNER_INVALID = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class GCConnectionStatus : uint32_t
{
	GCConnectionStatus_HAVE_SESSION = 0x0,
	GCConnectionStatus_GC_GOING_DOWN = 0x1,
	GCConnectionStatus_NO_SESSION = 0x2,
	GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 0x3,
	GCConnectionStatus_NO_STEAM = 0x4,
	GCConnectionStatus_SUSPENDED = 0x5,
	GCConnectionStatus_STEAM_GOING_DOWN = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class ESOMsg : uint32_t
{
	k_ESOMsg_Create = 0x15,
	k_ESOMsg_Update = 0x16,
	k_ESOMsg_Destroy = 0x17,
	k_ESOMsg_CacheSubscribed = 0x18,
	k_ESOMsg_CacheUnsubscribed = 0x19,
	k_ESOMsg_UpdateMultiple = 0x1a,
	k_ESOMsg_CacheSubscriptionRefresh = 0x1c,
	k_ESOMsg_CacheSubscribedUpToDate = 0x1d,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xd
enum class EGCBaseClientMsg : uint32_t
{
	k_EMsgGCPingRequest = 0xbb9,
	k_EMsgGCPingResponse = 0xbba,
	k_EMsgGCToClientPollConvarRequest = 0xbbb,
	k_EMsgGCToClientPollConvarResponse = 0xbbc,
	k_EMsgGCCompressedMsgToClient = 0xbbd,
	k_EMsgGCCompressedMsgToClient_Legacy = 0x20b,
	k_EMsgGCToClientRequestDropped = 0xbbe,
	k_EMsgGCClientWelcome = 0xfa4,
	k_EMsgGCServerWelcome = 0xfa5,
	k_EMsgGCClientHello = 0xfa6,
	k_EMsgGCServerHello = 0xfa7,
	k_EMsgGCClientConnectionStatus = 0xfa9,
	k_EMsgGCServerConnectionStatus = 0xfaa,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x16
enum class EGCBaseMsg : uint32_t
{
	k_EMsgGCInviteToParty = 0x1195,
	k_EMsgGCInvitationCreated = 0x1196,
	k_EMsgGCPartyInviteResponse = 0x1197,
	k_EMsgGCKickFromParty = 0x1198,
	k_EMsgGCLeaveParty = 0x1199,
	k_EMsgGCServerAvailable = 0x119a,
	k_EMsgGCClientConnectToServer = 0x119b,
	k_EMsgGCGameServerInfo = 0x119c,
	k_EMsgGCLANServerAvailable = 0x119f,
	k_EMsgGCInviteToLobby = 0x11a0,
	k_EMsgGCLobbyInviteResponse = 0x11a1,
	k_EMsgGCToClientPollFileRequest = 0x11a2,
	k_EMsgGCToClientPollFileResponse = 0x11a3,
	k_EMsgGCToGCPerformManualOp = 0x11a4,
	k_EMsgGCToGCPerformManualOpCompleted = 0x11a5,
	k_EMsgGCToGCReloadServerRegionSettings = 0x11a6,
	k_EMsgGCAdditionalWelcomeMsgList = 0x11a7,
	k_EMsgGCToClientApplyRemoteConVars = 0x11a8,
	k_EMsgGCToServerApplyRemoteConVars = 0x11a9,
	k_EMsgClientToGCIntegrityStatus = 0x11aa,
	k_EMsgClientToGCAggregateMetrics = 0x11ab,
	k_EMsgGCToClientAggregateMetricsBackoff = 0x11ac,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xa
enum class ECustomGameInstallStatus : uint32_t
{
	k_ECustomGameInstallStatus_Unknown = 0x0,
	k_ECustomGameInstallStatus_Ready = 0x1,
	k_ECustomGameInstallStatus_Busy = 0x2,
	k_ECustomGameInstallStatus_FailedGeneric = 0x65,
	k_ECustomGameInstallStatus_FailedInternalError = 0x66,
	k_ECustomGameInstallStatus_RequestedTimestampTooOld = 0x67,
	k_ECustomGameInstallStatus_RequestedTimestampTooNew = 0x68,
	k_ECustomGameInstallStatus_CRCMismatch = 0x69,
	k_ECustomGameInstallStatus_FailedSteam = 0x6a,
	k_ECustomGameInstallStatus_FailedCanceled = 0x6b,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1
enum class EGCEconBaseMsg : uint32_t
{
	k_EMsgGCGenericResult = 0xa13,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9
enum class EGCMsgResponse : uint32_t
{
	k_EGCMsgResponseOK = 0x0,
	k_EGCMsgResponseDenied = 0x1,
	k_EGCMsgResponseServerError = 0x2,
	k_EGCMsgResponseTimeout = 0x3,
	k_EGCMsgResponseInvalid = 0x4,
	k_EGCMsgResponseNoMatch = 0x5,
	k_EGCMsgResponseUnknownError = 0x6,
	k_EGCMsgResponseNotLoggedOn = 0x7,
	k_EGCMsgFailedToCreate = 0x8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xe
enum class EGCMsgUseItemResponse : uint32_t
{
	k_EGCMsgUseItemResponse_ItemUsed = 0x0,
	k_EGCMsgUseItemResponse_GiftNoOtherPlayers = 0x1,
	k_EGCMsgUseItemResponse_ServerError = 0x2,
	k_EGCMsgUseItemResponse_MiniGameAlreadyStarted = 0x3,
	k_EGCMsgUseItemResponse_ItemUsed_ItemsGranted = 0x4,
	k_EGCMsgUseItemResponse_DropRateBonusAlreadyGranted = 0x5,
	k_EGCMsgUseItemResponse_NotInLowPriorityPool = 0x6,
	k_EGCMsgUseItemResponse_NotHighEnoughLevel = 0x7,
	k_EGCMsgUseItemResponse_EventNotActive = 0x8,
	k_EGCMsgUseItemResponse_ItemUsed_EventPointsGranted = 0x9,
	k_EGCMsgUseItemResponse_MissingRequirement = 0xa,
	k_EGCMsgUseItemResponse_EmoticonUnlock_NoNew = 0xb,
	k_EGCMsgUseItemResponse_EmoticonUnlock_Complete = 0xc,
	k_EGCMsgUseItemResponse_ItemUsed_Compendium = 0xd,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7c
enum class EGCItemMsg : uint32_t
{
	k_EMsgGCBase = 0x3e8,
	k_EMsgGCSetItemPosition = 0x3e9,
	k_EMsgClientToGCPackBundle = 0x3ea,
	k_EMsgClientToGCPackBundleResponse = 0x3eb,
	k_EMsgGCDelete = 0x3ec,
	k_EMsgGCVerifyCacheSubscription = 0x3ed,
	k_EMsgClientToGCNameItem = 0x3ee,
	k_EMsgGCPaintItem = 0x3f1,
	k_EMsgGCPaintItemResponse = 0x3f2,
	k_EMsgGCNameBaseItem = 0x3fb,
	k_EMsgGCNameBaseItemResponse = 0x3fc,
	k_EMsgGCUseItemRequest = 0x401,
	k_EMsgGCUseItemResponse = 0x402,
	k_EMsgGCGiftedItems = 0x403,
	k_EMsgGCUnwrapGiftRequest = 0x40d,
	k_EMsgGCUnwrapGiftResponse = 0x40e,
	k_EMsgGCSortItems = 0x411,
	k_EMsgGCBackpackSortFinished = 0x422,
	k_EMsgGCAdjustItemEquippedState = 0x423,
	k_EMsgGCItemAcknowledged = 0x426,
	k_EMsgClientToGCNameItemResponse = 0x42c,
	k_EMsgGCApplyStrangePart = 0x431,
	k_EMsgGCApplyPennantUpgrade = 0x434,
	k_EMsgGCSetItemPositions = 0x435,
	k_EMsgGCApplyEggEssence = 0x436,
	k_EMsgGCNameEggEssenceResponse = 0x437,
	k_EMsgGCExtractGems = 0x43e,
	k_EMsgGCAddSocket = 0x43f,
	k_EMsgGCAddItemToSocket = 0x440,
	k_EMsgGCAddItemToSocketResponse = 0x441,
	k_EMsgGCAddSocketResponse = 0x442,
	k_EMsgGCResetStrangeGemCount = 0x443,
	k_EMsgGCRequestCrateItems = 0x444,
	k_EMsgGCRequestCrateItemsResponse = 0x445,
	k_EMsgGCExtractGemsResponse = 0x446,
	k_EMsgGCResetStrangeGemCountResponse = 0x447,
	k_EMsgGCServerUseItemRequest = 0x44f,
	k_EMsgGCAddGiftItem = 0x450,
	k_EMsgClientToGCRemoveItemGifterAttributes = 0x455,
	k_EMsgClientToGCRemoveItemName = 0x456,
	k_EMsgClientToGCRemoveItemDescription = 0x457,
	k_EMsgClientToGCRemoveItemAttributeResponse = 0x458,
	k_EMsgGCDev_NewItemRequest = 0x7d1,
	k_EMsgGCDev_NewItemRequestResponse = 0x7d2,
	k_EMsgGCDev_UnlockAllItemStylesRequest = 0x7d3,
	k_EMsgGCDev_UnlockAllItemStylesResponse = 0x7d4,
	k_EMsgGCStorePurchaseFinalize = 0x9c8,
	k_EMsgGCStorePurchaseFinalizeResponse = 0x9c9,
	k_EMsgGCStorePurchaseCancel = 0x9ca,
	k_EMsgGCStorePurchaseCancelResponse = 0x9cb,
	k_EMsgGCStorePurchaseInit = 0x9ce,
	k_EMsgGCStorePurchaseInitResponse = 0x9cf,
	k_EMsgGCToGCBannedWordListUpdated = 0x9d3,
	k_EMsgGCToGCDirtySDOCache = 0x9d4,
	k_EMsgGCToGCUpdateSQLKeyValue = 0x9d6,
	k_EMsgGCToGCBroadcastConsoleCommand = 0x9d9,
	k_EMsgGCServerVersionUpdated = 0x9da,
	k_EMsgGCApplyAutograph = 0x9db,
	k_EMsgGCToGCWebAPIAccountChanged = 0x9dc,
	k_EMsgGCClientVersionUpdated = 0x9e0,
	k_EMsgGCToGCUpdateWelcomeMsg = 0x9e1,
	k_EMsgGCToGCPlayerStrangeCountAdjustments = 0x9e7,
	k_EMsgGCRequestStoreSalesData = 0x9e8,
	k_EMsgGCRequestStoreSalesDataResponse = 0x9e9,
	k_EMsgGCRequestStoreSalesDataUpToDateResponse = 0x9ea,
	k_EMsgGCToGCPingRequest = 0x9eb,
	k_EMsgGCToGCPingResponse = 0x9ec,
	k_EMsgGCToGCGetUserSessionServer = 0x9ed,
	k_EMsgGCToGCGetUserSessionServerResponse = 0x9ee,
	k_EMsgGCToGCGetUserServerMembers = 0x9ef,
	k_EMsgGCToGCGetUserServerMembersResponse = 0x9f0,
	k_EMsgGCToGCCanUseDropRateBonus = 0x9f3,
	k_EMsgSQLAddDropRateBonus = 0x9f4,
	k_EMsgGCToGCRefreshSOCache = 0x9f5,
	k_EMsgGCToGCGrantAccountRolledItems = 0x9fa,
	k_EMsgGCToGCGrantSelfMadeItemToAccount = 0x9fb,
	k_EMsgGCStatueCraft = 0xa01,
	k_EMsgGCRedeemCode = 0xa02,
	k_EMsgGCRedeemCodeResponse = 0xa03,
	k_EMsgGCToGCItemConsumptionRollback = 0xa04,
	k_EMsgClientToGCWrapAndDeliverGift = 0xa05,
	k_EMsgClientToGCWrapAndDeliverGiftResponse = 0xa06,
	k_EMsgClientToGCUnpackBundleResponse = 0xa07,
	k_EMsgGCToClientStoreTransactionCompleted = 0xa08,
	k_EMsgClientToGCEquipItems = 0xa09,
	k_EMsgClientToGCEquipItemsResponse = 0xa0a,
	k_EMsgClientToGCUnlockItemStyle = 0xa0b,
	k_EMsgClientToGCUnlockItemStyleResponse = 0xa0c,
	k_EMsgClientToGCSetItemInventoryCategory = 0xa0d,
	k_EMsgClientToGCUnlockCrate = 0xa0e,
	k_EMsgClientToGCUnlockCrateResponse = 0xa0f,
	k_EMsgClientToGCUnpackBundle = 0xa10,
	k_EMsgClientToGCSetItemStyle = 0xa11,
	k_EMsgClientToGCSetItemStyleResponse = 0xa12,
	k_EMsgSQLGCToGCGrantBackpackSlots = 0xa14,
	k_EMsgClientToGCLookupAccountName = 0xa15,
	k_EMsgClientToGCLookupAccountNameResponse = 0xa16,
	k_EMsgClientToGCCreateStaticRecipe = 0xa18,
	k_EMsgClientToGCCreateStaticRecipeResponse = 0xa19,
	k_EMsgGCToGCStoreProcessCDKeyTransaction = 0xa1a,
	k_EMsgGCToGCStoreProcessCDKeyTransactionResponse = 0xa1b,
	k_EMsgGCToGCStoreProcessSettlement = 0xa1c,
	k_EMsgGCToGCStoreProcessSettlementResponse = 0xa1d,
	k_EMsgGCToGCConsoleOutput = 0xa1e,
	k_EMsgGCToClientItemAges = 0xa1f,
	k_EMsgGCToGCInternalTestMsg = 0xa20,
	k_EMsgGCToGCClientServerVersionsUpdated = 0xa21,
	k_EMsgGCUseMultipleItemsRequest = 0xa22,
	k_EMsgGCGetAccountSubscriptionItem = 0xa23,
	k_EMsgGCGetAccountSubscriptionItemResponse = 0xa24,
	k_EMsgGCToGCBroadcastMessageFromSub = 0xa26,
	k_EMsgGCToClientCurrencyPricePoints = 0xa27,
	k_EMsgGCToGCAddSubscriptionTime = 0xa28,
	k_EMsgGCToGCFlushSteamInventoryCache = 0xa29,
	k_EMsgGCRequestCrateEscalationLevel = 0xa2a,
	k_EMsgGCRequestCrateEscalationLevelResponse = 0xa2b,
	k_EMsgGCToGCUpdateSubscriptionItems = 0xa2c,
	k_EMsgGCToGCSelfPing = 0xa2d,
	k_EMsgGCToGCGetInfuxIntervalStats = 0xa2e,
	k_EMsgGCToGCGetInfuxIntervalStatsResponse = 0xa2f,
	k_EMsgGCToGCPurchaseSucceeded = 0xa30,
	k_EMsgClientToGCGetLimitedItemPurchaseQuantity = 0xa31,
	k_EMsgClientToGCGetLimitedItemPurchaseQuantityResponse = 0xa32,
	k_EMsgGCToGCBetaDeleteItems = 0xa33,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x19
enum class EGCMsgInitiateTradeResponse : uint32_t
{
	k_EGCMsgInitiateTradeResponse_Accepted = 0x0,
	k_EGCMsgInitiateTradeResponse_Declined = 0x1,
	k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator = 0x2,
	k_EGCMsgInitiateTradeResponse_VAC_Banned_Target = 0x3,
	k_EGCMsgInitiateTradeResponse_Target_Already_Trading = 0x4,
	k_EGCMsgInitiateTradeResponse_Disabled = 0x5,
	k_EGCMsgInitiateTradeResponse_NotLoggedIn = 0x6,
	k_EGCMsgInitiateTradeResponse_Cancel = 0x7,
	k_EGCMsgInitiateTradeResponse_TooSoon = 0x8,
	k_EGCMsgInitiateTradeResponse_TooSoonPenalty = 0x9,
	k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator = 0xa,
	k_EGCMsgInitiateTradeResponse_Trade_Banned_Target = 0xb,
	k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED = 0xc,
	k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator = 0xd,
	k_EGCMsgInitiateTradeResponse_Service_Unavailable = 0xe,
	k_EGCMsgInitiateTradeResponse_Target_Blocked = 0xf,
	k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail = 0x10,
	k_EGCMsgInitiateTradeResponse_NeedSteamGuard = 0x11,
	k_EGCMsgInitiateTradeResponse_SteamGuardDuration = 0x12,
	k_EGCMsgInitiateTradeResponse_TheyCannotTrade = 0x13,
	k_EGCMsgInitiateTradeResponse_Recent_Password_Reset = 0x14,
	k_EGCMsgInitiateTradeResponse_Using_New_Device = 0x15,
	k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie = 0x16,
	k_EGCMsgInitiateTradeResponse_TooRecentFriend = 0x17,
	k_EGCMsgInitiateTradeResponse_WalledFundsNotTrusted = 0x18,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class attributeprovidertypes_t : uint32_t
{
	PROVIDER_GENERIC = 0x0,
	PROVIDER_WEAPON = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EconEntityParticleDisableMode_t : uint32_t
{
	ECON_ENTITY_PARTICLES_ENABLED = 0x0,
	ECON_ENTITY_PARTICLES_DISABLED = 0x1,
	ECON_ENTITY_PARTICLES_DISABLED_BUT_PLAY_ENDCAPS_TO_STOP = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class PetLevelup_Rule_t : uint32_t
{
	PETLEVELFROM_NOTHING = 0x0,
	PETLEVELFROM_KILLEATER = 0x1,
	PETLEVELFROM_COMPENDIUM_LEVEL = 0x2,
	NUM_PETLEVELUPRULES = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2f
enum class eEconItemOrigin : uint32_t
{
	kEconItemOrigin_Invalid = 0xffffffffffffffff,
	kEconItemOrigin_Drop = 0x0,
	kEconItemOrigin_Achievement = 0x1,
	kEconItemOrigin_Purchased = 0x2,
	kEconItemOrigin_Traded = 0x3,
	kEconItemOrigin_Crafted = 0x4,
	kEconItemOrigin_StorePromotion = 0x5,
	kEconItemOrigin_Gifted = 0x6,
	kEconItemOrigin_SupportGranted = 0x7,
	kEconItemOrigin_FoundInCrate = 0x8,
	kEconItemOrigin_Earned = 0x9,
	kEconItemOrigin_ThirdPartyPromotion = 0xa,
	kEconItemOrigin_GiftWrapped = 0xb,
	kEconItemOrigin_HalloweenDrop = 0xc,
	kEconItemOrigin_PackageItem = 0xd,
	kEconItemOrigin_Foreign = 0xe,
	kEconItemOrigin_CDKey = 0xf,
	kEconItemOrigin_CollectionReward = 0x10,
	kEconItemOrigin_PreviewItem = 0x11,
	kEconItemOrigin_SteamWorkshopContribution = 0x12,
	kEconItemOrigin_PeriodicScoreReward = 0x13,
	kEconItemOrigin_Recycling = 0x14,
	kEconItemOrigin_TournamentDrop = 0x15,
	kEconItemOrigin_PassportReward = 0x16,
	kEconItemOrigin_TutorialDrop = 0x17,
	kEconItemOrigin_RecipeOutput = 0x18,
	kEconItemOrigin_GemExtract = 0x19,
	kEconItemOrigin_EventPointReward = 0x1a,
	kEconItemOrigin_ItemRedemption = 0x1b,
	kEconItemOrigin_FantasyTicketRefund = 0x1c,
	kEconItemOrigin_VictoryPredictionReward = 0x1d,
	kEconItemOrigin_AssassinEventReward = 0x1e,
	kEconItemOrigin_CompendiumReward = 0x1f,
	kEconItemOrigin_CompendiumDrop = 0x20,
	kEconItemOrigin_MysteryItem = 0x21,
	kEconItemOrigin_UnpackedFromBundle = 0x22,
	kEconItemOrigin_WonFromWeeklyGame = 0x23,
	kEconItemOrigin_SeasonalItemGrant = 0x24,
	kEconItemOrigin_PackOpening = 0x25,
	kEconItemOrigin_InitialGrant = 0x26,
	kEconItemOrigin_MarketPurchase = 0x27,
	kEconItemOrigin_MarketRefunded = 0x28,
	kEconItemOrigin_LimitedDraft = 0x29,
	kEconItemOrigin_GauntletReward = 0x2a,
	kEconItemOrigin_CompendiumGift = 0x2b,
	kEconItemOrigin_CandyShopPurchase = 0x2c,
	kEconItemOrigin_Max = 0x2d,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class CHeadLookParams__HeadLookPriority_t : uint32_t
{
	BORING = 0x0,
	INTERESTING = 0x1,
	IMPORTANT = 0x2,
	CRITICAL = 0x3,
	MANDATORY = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class IBody__PostureType : uint32_t
{
	STAND = 0x0,
	CROUCH = 0x1,
	SIT = 0x2,
	CRAWL = 0x3,
	LIE = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1a
enum class DOTA_GameMode : uint32_t
{
	DOTA_GAMEMODE_NONE = 0x0,
	DOTA_GAMEMODE_AP = 0x1,
	DOTA_GAMEMODE_CM = 0x2,
	DOTA_GAMEMODE_RD = 0x3,
	DOTA_GAMEMODE_SD = 0x4,
	DOTA_GAMEMODE_AR = 0x5,
	DOTA_GAMEMODE_INTRO = 0x6,
	DOTA_GAMEMODE_HW = 0x7,
	DOTA_GAMEMODE_REVERSE_CM = 0x8,
	DOTA_GAMEMODE_XMAS = 0x9,
	DOTA_GAMEMODE_TUTORIAL = 0xa,
	DOTA_GAMEMODE_MO = 0xb,
	DOTA_GAMEMODE_LP = 0xc,
	DOTA_GAMEMODE_POOL1 = 0xd,
	DOTA_GAMEMODE_FH = 0xe,
	DOTA_GAMEMODE_CUSTOM = 0xf,
	DOTA_GAMEMODE_CD = 0x10,
	DOTA_GAMEMODE_BD = 0x11,
	DOTA_GAMEMODE_ABILITY_DRAFT = 0x12,
	DOTA_GAMEMODE_EVENT = 0x13,
	DOTA_GAMEMODE_ARDM = 0x14,
	DOTA_GAMEMODE_1V1MID = 0x15,
	DOTA_GAMEMODE_ALL_DRAFT = 0x16,
	DOTA_GAMEMODE_TURBO = 0x17,
	DOTA_GAMEMODE_MUTATION = 0x18,
	DOTA_GAMEMODE_COACHES_CHALLENGE = 0x19,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xe
enum class DOTA_GameState : uint32_t
{
	DOTA_GAMERULES_STATE_INIT = 0x0,
	DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD = 0x1,
	DOTA_GAMERULES_STATE_HERO_SELECTION = 0x2,
	DOTA_GAMERULES_STATE_STRATEGY_TIME = 0x3,
	DOTA_GAMERULES_STATE_PRE_GAME = 0x4,
	DOTA_GAMERULES_STATE_GAME_IN_PROGRESS = 0x5,
	DOTA_GAMERULES_STATE_POST_GAME = 0x6,
	DOTA_GAMERULES_STATE_DISCONNECT = 0x7,
	DOTA_GAMERULES_STATE_TEAM_SHOWCASE = 0x8,
	DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP = 0x9,
	DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD = 0xa,
	DOTA_GAMERULES_STATE_SCENARIO_SETUP = 0xb,
	DOTA_GAMERULES_STATE_PLAYER_DRAFT = 0xc,
	DOTA_GAMERULES_STATE_LAST = 0xd,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xf
enum class DOTA_GC_TEAM : uint32_t
{
	DOTA_GC_TEAM_GOOD_GUYS = 0x0,
	DOTA_GC_TEAM_BAD_GUYS = 0x1,
	DOTA_GC_TEAM_BROADCASTER = 0x2,
	DOTA_GC_TEAM_SPECTATOR = 0x3,
	DOTA_GC_TEAM_PLAYER_POOL = 0x4,
	DOTA_GC_TEAM_NOTEAM = 0x5,
	DOTA_GC_TEAM_CUSTOM_1 = 0x6,
	DOTA_GC_TEAM_CUSTOM_2 = 0x7,
	DOTA_GC_TEAM_CUSTOM_3 = 0x8,
	DOTA_GC_TEAM_CUSTOM_4 = 0x9,
	DOTA_GC_TEAM_CUSTOM_5 = 0xa,
	DOTA_GC_TEAM_CUSTOM_6 = 0xb,
	DOTA_GC_TEAM_CUSTOM_7 = 0xc,
	DOTA_GC_TEAM_CUSTOM_8 = 0xd,
	DOTA_GC_TEAM_NEUTRALS = 0xe,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2f
enum class EEvent : uint32_t
{
	EVENT_ID_NONE = 0x0,
	EVENT_ID_DIRETIDE = 0x1,
	EVENT_ID_SPRING_FESTIVAL = 0x2,
	EVENT_ID_FROSTIVUS_2013 = 0x3,
	EVENT_ID_COMPENDIUM_2014 = 0x4,
	EVENT_ID_NEXON_PC_BANG = 0x5,
	EVENT_ID_PWRD_DAC_2015 = 0x6,
	EVENT_ID_NEW_BLOOM_2015 = 0x7,
	EVENT_ID_INTERNATIONAL_2015 = 0x8,
	EVENT_ID_FALL_MAJOR_2015 = 0x9,
	EVENT_ID_ORACLE_PA = 0xa,
	EVENT_ID_NEW_BLOOM_2015_PREBEAST = 0xb,
	EVENT_ID_FROSTIVUS = 0xc,
	EVENT_ID_WINTER_MAJOR_2016 = 0xd,
	EVENT_ID_INTERNATIONAL_2016 = 0xe,
	EVENT_ID_FALL_MAJOR_2016 = 0xf,
	EVENT_ID_WINTER_MAJOR_2017 = 0x10,
	EVENT_ID_NEW_BLOOM_2017 = 0x11,
	EVENT_ID_INTERNATIONAL_2017 = 0x12,
	EVENT_ID_PLUS_SUBSCRIPTION = 0x13,
	EVENT_ID_SINGLES_DAY_2017 = 0x14,
	EVENT_ID_FROSTIVUS_2017 = 0x15,
	EVENT_ID_INTERNATIONAL_2018 = 0x16,
	EVENT_ID_FROSTIVUS_2018 = 0x17,
	EVENT_ID_NEW_BLOOM_2019 = 0x18,
	EVENT_ID_INTERNATIONAL_2019 = 0x19,
	EVENT_ID_NEW_PLAYER_EXPERIENCE = 0x1a,
	EVENT_ID_FROSTIVUS_2019 = 0x1b,
	EVENT_ID_NEW_BLOOM_2020 = 0x1c,
	EVENT_ID_INTERNATIONAL_2020 = 0x1d,
	EVENT_ID_TEAM_FANDOM = 0x1e,
	EVENT_ID_DIRETIDE_2020 = 0x1f,
	EVENT_ID_SPRING_2021 = 0x20,
	EVENT_ID_FALL_2021 = 0x21,
	EVENT_ID_TEAM_FANDOM_FALL_2021 = 0x22,
	EVENT_ID_TEAM_2021_2022_TOUR2 = 0x23,
	EVENT_ID_INTERNATIONAL_2022 = 0x24,
	EVENT_ID_TEAM_2021_2022_TOUR3 = 0x25,
	EVENT_ID_TEAM_INTERNATIONAL_2022 = 0x26,
	EVENT_ID_PERMANENT_GRANTS = 0x27,
	EVENT_ID_MUERTA_RELEASE_SPRING2023 = 0x28,
	EVENT_ID_TEAM_2023_TOUR1 = 0x29,
	EVENT_ID_TEAM_2023_TOUR2 = 0x2a,
	EVENT_ID_TEAM_2023_TOUR3 = 0x2b,
	EVENT_ID_INTERNATIONAL_2023 = 0x2d,
	EVENT_ID_10TH_ANNIVERSARY = 0x2e,
	EVENT_ID_FROSTIVUS_2023 = 0x30,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xb
enum class ERankType : uint32_t
{
	k_ERankType_Invalid = 0x0,
	k_ERankType_Casual = 0x1,
	k_ERankType_Ranked = 0x2,
	k_ERankType_CasualLegacy = 0x3,
	k_ERankType_RankedLegacy = 0x4,
	k_ERankType_CasualGlicko = 0x5,
	k_ERankType_RankedGlicko = 0x6,
	k_ERankType_RankMax = 0x7,
	k_ERankType_BehaviorPrivate = 0x64,
	k_ERankType_BehaviorPublic = 0x65,
	k_ERankType_Max = 0x66,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9
enum class DOTALeaverStatus_t : uint32_t
{
	DOTA_LEAVER_NONE = 0x0,
	DOTA_LEAVER_DISCONNECTED = 0x1,
	DOTA_LEAVER_DISCONNECTED_TOO_LONG = 0x2,
	DOTA_LEAVER_ABANDONED = 0x3,
	DOTA_LEAVER_AFK = 0x4,
	DOTA_LEAVER_NEVER_CONNECTED = 0x5,
	DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG = 0x6,
	DOTA_LEAVER_FAILED_TO_READY_UP = 0x7,
	DOTA_LEAVER_DECLINED = 0x8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class DOTAConnectionState_t : uint32_t
{
	DOTA_CONNECTION_STATE_UNKNOWN = 0x0,
	DOTA_CONNECTION_STATE_NOT_YET_CONNECTED = 0x1,
	DOTA_CONNECTION_STATE_CONNECTED = 0x2,
	DOTA_CONNECTION_STATE_DISCONNECTED = 0x3,
	DOTA_CONNECTION_STATE_ABANDONED = 0x4,
	DOTA_CONNECTION_STATE_LOADING = 0x5,
	DOTA_CONNECTION_STATE_FAILED = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class Fantasy_Roles : uint32_t
{
	FANTASY_ROLE_UNDEFINED = 0x0,
	FANTASY_ROLE_CORE = 0x1,
	FANTASY_ROLE_SUPPORT = 0x2,
	FANTASY_ROLE_OFFLANE = 0x3,
	FANTASY_ROLE_MID = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
enum class Fantasy_Scoring : uint32_t
{
	FANTASY_SCORING_KILLS = 0x0,
	FANTASY_SCORING_DEATHS = 0x1,
	FANTASY_SCORING_CS = 0x2,
	FANTASY_SCORING_GPM = 0x3,
	FANTASY_SCORING_TOWER_KILLS = 0x4,
	FANTASY_SCORING_ROSHAN_KILLS = 0x5,
	FANTASY_SCORING_TEAMFIGHT_PARTICIPATION = 0x6,
	FANTASY_SCORING_WARDS_PLANTED = 0x7,
	FANTASY_SCORING_CAMPS_STACKED = 0x8,
	FANTASY_SCORING_RUNES_GRABBED = 0x9,
	FANTASY_SCORING_FIRST_BLOOD = 0xa,
	FANTASY_SCORING_STUNS = 0xb,
	FANTASY_SCORING_SMOKES_USED = 0xc,
	FANTASY_SCORING_NEUTRAL_TOKENS_FOUND = 0xd,
	FANTASY_SCORING_WATCHERS_TAKEN = 0xe,
	FANTASY_SCORING_LOTUSES_GAINED = 0xf,
	FANTASY_SCORING_TORMENTOR_KILLS = 0x10,
	FANTASY_SCORING_COURIER_KILLS = 0x11,
	FANTASY_SCORING_TYPES = 0x12,
	FANTASY_SCORING_INVALID = 0x13,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class Fantasy_Team_Slots : uint32_t
{
	FANTASY_SLOT_NONE = 0x0,
	FANTASY_SLOT_CORE = 0x1,
	FANTASY_SLOT_SUPPORT = 0x2,
	FANTASY_SLOT_ANY = 0x3,
	FANTASY_SLOT_BENCH = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xa
enum class Fantasy_Selection_Mode : uint32_t
{
	FANTASY_SELECTION_INVALID = 0x0,
	FANTASY_SELECTION_LOCKED = 0x1,
	FANTASY_SELECTION_SHUFFLE = 0x2,
	FANTASY_SELECTION_FREE_PICK = 0x3,
	FANTASY_SELECTION_ENDED = 0x4,
	FANTASY_SELECTION_PRE_SEASON = 0x5,
	FANTASY_SELECTION_PRE_DRAFT = 0x6,
	FANTASY_SELECTION_DRAFTING = 0x7,
	FANTASY_SELECTION_REGULAR_SEASON = 0x8,
	FANTASY_SELECTION_CARD_BASED = 0x9,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class Fantasy_Gem_Type : uint32_t
{
	FANTASY_GEM_TYPE_RUBY = 0x0,
	FANTASY_GEM_TYPE_SAPPHIRE = 0x1,
	FANTASY_GEM_TYPE_EMERALD = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x19
enum class DOTAChatChannelType_t : uint32_t
{
	DOTAChannelType_Regional = 0x0,
	DOTAChannelType_Custom = 0x1,
	DOTAChannelType_Party = 0x2,
	DOTAChannelType_Lobby = 0x3,
	DOTAChannelType_Team = 0x4,
	DOTAChannelType_Guild = 0x5,
	DOTAChannelType_Fantasy = 0x6,
	DOTAChannelType_Whisper = 0x7,
	DOTAChannelType_Console = 0x8,
	DOTAChannelType_Tab = 0x9,
	DOTAChannelType_Invalid = 0xa,
	DOTAChannelType_GameAll = 0xb,
	DOTAChannelType_GameAllies = 0xc,
	DOTAChannelType_GameSpectator = 0xd,
	DOTAChannelType_GameCoaching = 0xe,
	DOTAChannelType_Cafe = 0xf,
	DOTAChannelType_CustomGame = 0x10,
	DOTAChannelType_Private = 0x11,
	DOTAChannelType_PostGame = 0x12,
	DOTAChannelType_BattleCup = 0x13,
	DOTAChannelType_HLTVSpectator = 0x14,
	DOTAChannelType_GameEvents = 0x15,
	DOTAChannelType_Trivia = 0x16,
	DOTAChannelType_NewPlayer = 0x17,
	DOTAChannelType_PrivateCoaching = 0x18,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EChatSpecialPrivileges : uint32_t
{
	k_EChatSpecialPrivileges_None = 0x0,
	k_EChatSpecialPrivileges_Moderator = 0x1,
	k_EChatSpecialPrivileges_SuperModerator = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xf
enum class DOTACommType_t : uint32_t
{
	DOTA_COMM_TYPE_NONE = 0x0,
	DOTA_COMM_TYPE_PING = 0x1,
	DOTA_COMM_TYPE_CHATWHEEL = 0x2,
	DOTA_COMM_TYPE_TIP = 0x3,
	DOTA_COMM_TYPE_TEXT = 0x4,
	DOTA_COMM_TYPE_SHOWCASE = 0x5,
	DOTA_COMM_TYPE_VOICE = 0x6,
	DOTA_COMM_TYPE_ALLY_ABILITY = 0x7,
	DOTA_COMM_TYPE_PAUSE = 0x8,
	DOTA_COMM_TYPE_COACHING = 0x9,
	DOTA_COMM_TYPE_NOCOOLDOWN = 0xa,
	DOTA_COMM_TYPE_RANKEDMATCHMAKE = 0xb,
	DOTA_COMM_TYPE_DROPS = 0xc,
	DOTA_COMM_TYPE_NEWPLAYER_EXPERT = 0xd,
	DOTA_COMM_TYPE_COACHED = 0xe,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class DOTACommLevel_t : uint32_t
{
	DOTA_COMM_LEVEL_NONE = 0x0,
	DOTA_COMM_LEVEL_COOLDOWN = 0x1,
	DOTA_COMM_LEVEL_PINGS = 0x2,
	DOTA_COMM_LEVEL_CHAT = 0x3,
	DOTA_COMM_LEVEL_TIPPING = 0x4,
	DOTA_COMM_LEVEL_VOICE = 0x5,
	DOTA_COMM_LEVEL_ALLIED_ABILITY = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTABehaviorLevel_t : uint32_t
{
	DOTA_BEHAVIOR_LEVEL_NONE = 0x0,
	DOTA_BEHAVIOR_LEVEL_RANKED_ALLOWED = 0x1,
	DOTA_BEHAVIOR_LEVEL_PAUSING = 0x2,
	DOTA_BEHAVIOR_LEVEL_DROPS = 0x3,
	DOTA_BEHAVIOR_LEVEL_COACHING = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class EProfileCardSlotType : uint32_t
{
	k_EProfileCardSlotType_Empty = 0x0,
	k_EProfileCardSlotType_Stat = 0x1,
	k_EProfileCardSlotType_Trophy = 0x2,
	k_EProfileCardSlotType_Item = 0x3,
	k_EProfileCardSlotType_Hero = 0x4,
	k_EProfileCardSlotType_Emoticon = 0x5,
	k_EProfileCardSlotType_Team = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EMatchGroupServerStatus : uint32_t
{
	k_EMatchGroupServerStatus_OK = 0x0,
	k_EMatchGroupServerStatus_LimitedAvailability = 0x1,
	k_EMatchGroupServerStatus_Offline = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class DOTA_CM_PICK : uint32_t
{
	DOTA_CM_RANDOM = 0x0,
	DOTA_CM_GOOD_GUYS = 0x1,
	DOTA_CM_BAD_GUYS = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class DOTALowPriorityBanType : uint32_t
{
	DOTA_LOW_PRIORITY_BAN_ABANDON = 0x0,
	DOTA_LOW_PRIORITY_BAN_REPORTS = 0x1,
	DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON = 0x2,
	DOTA_LOW_PRIORITY_BAN_PRE_GAME_ROLE = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class DOTALobbyReadyState : uint32_t
{
	DOTALobbyReadyState_UNDECLARED = 0x0,
	DOTALobbyReadyState_ACCEPTED = 0x1,
	DOTALobbyReadyState_DECLINED = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xf
enum class DOTAJoinLobbyResult : uint32_t
{
	DOTA_JOIN_RESULT_SUCCESS = 0x0,
	DOTA_JOIN_RESULT_ALREADY_IN_GAME = 0x1,
	DOTA_JOIN_RESULT_INVALID_LOBBY = 0x2,
	DOTA_JOIN_RESULT_INCORRECT_PASSWORD = 0x3,
	DOTA_JOIN_RESULT_ACCESS_DENIED = 0x4,
	DOTA_JOIN_RESULT_GENERIC_ERROR = 0x5,
	DOTA_JOIN_RESULT_INCORRECT_VERSION = 0x6,
	DOTA_JOIN_RESULT_IN_TEAM_PARTY = 0x7,
	DOTA_JOIN_RESULT_NO_LOBBY_FOUND = 0x8,
	DOTA_JOIN_RESULT_LOBBY_FULL = 0x9,
	DOTA_JOIN_RESULT_CUSTOM_GAME_INCORRECT_VERSION = 0xa,
	DOTA_JOIN_RESULT_TIMEOUT = 0xb,
	DOTA_JOIN_RESULT_CUSTOM_GAME_COOLDOWN = 0xc,
	DOTA_JOIN_RESULT_BUSY = 0xd,
	DOTA_JOIN_RESULT_NO_PLAYTIME = 0xe,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class DOTASelectionPriorityRules : uint32_t
{
	k_DOTASelectionPriorityRules_Manual = 0x0,
	k_DOTASelectionPriorityRules_Automatic = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTASelectionPriorityChoice : uint32_t
{
	k_DOTASelectionPriorityChoice_Invalid = 0x0,
	k_DOTASelectionPriorityChoice_FirstPick = 0x1,
	k_DOTASelectionPriorityChoice_SecondPick = 0x2,
	k_DOTASelectionPriorityChoice_Radiant = 0x3,
	k_DOTASelectionPriorityChoice_Dire = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class DOTAMatchVote : uint32_t
{
	DOTAMatchVote_INVALID = 0x0,
	DOTAMatchVote_POSITIVE = 0x1,
	DOTAMatchVote_NEGATIVE = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class DOTALobbyVisibility : uint32_t
{
	DOTALobbyVisibility_Public = 0x0,
	DOTALobbyVisibility_Friends = 0x1,
	DOTALobbyVisibility_Unlisted = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EDOTAPlayerMMRType : uint32_t
{
	k_EDOTAPlayerMMRType_Invalid = 0x0,
	k_EDOTAPlayerMMRType_GeneralHidden = 0x1,
	k_EDOTAPlayerMMRType_GeneralCompetitive = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EDOTAMMRBoostType : uint32_t
{
	k_EDOTAMMRBoostType_None = 0x0,
	k_EDOTAMMRBoostType_Leader = 0x1,
	k_EDOTAMMRBoostType_Follower = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class MatchType : uint32_t
{
	MATCH_TYPE_CASUAL = 0x0,
	MATCH_TYPE_COOP_BOTS = 0x1,
	MATCH_TYPE_COMPETITIVE = 0x4,
	MATCH_TYPE_WEEKEND_TOURNEY = 0x5,
	MATCH_TYPE_EVENT = 0x7,
	MATCH_TYPE_COACHES_CHALLENGE = 0xc,
	MATCH_TYPE_NEW_PLAYER_POOL = 0xe,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xa
enum class DOTABotDifficulty : uint32_t
{
	BOT_DIFFICULTY_PASSIVE = 0x0,
	BOT_DIFFICULTY_EASY = 0x1,
	BOT_DIFFICULTY_MEDIUM = 0x2,
	BOT_DIFFICULTY_HARD = 0x3,
	BOT_DIFFICULTY_UNFAIR = 0x4,
	BOT_DIFFICULTY_INVALID = 0x5,
	BOT_DIFFICULTY_EXTRA1 = 0x6,
	BOT_DIFFICULTY_EXTRA2 = 0x7,
	BOT_DIFFICULTY_EXTRA3 = 0x8,
	BOT_DIFFICULTY_NPX = 0x9,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1b
enum class DOTA_BOT_MODE : uint32_t
{
	DOTA_BOT_MODE_NONE = 0x0,
	DOTA_BOT_MODE_LANING = 0x1,
	DOTA_BOT_MODE_ATTACK = 0x2,
	DOTA_BOT_MODE_ROAM = 0x3,
	DOTA_BOT_MODE_RETREAT = 0x4,
	DOTA_BOT_MODE_SECRET_SHOP = 0x5,
	DOTA_BOT_MODE_SIDE_SHOP = 0x6,
	DOTA_BOT_MODE_RUNE = 0x7,
	DOTA_BOT_MODE_PUSH_TOWER_TOP = 0x8,
	DOTA_BOT_MODE_PUSH_TOWER_MID = 0x9,
	DOTA_BOT_MODE_PUSH_TOWER_BOT = 0xa,
	DOTA_BOT_MODE_DEFEND_TOWER_TOP = 0xb,
	DOTA_BOT_MODE_DEFEND_TOWER_MID = 0xc,
	DOTA_BOT_MODE_DEFEND_TOWER_BOT = 0xd,
	DOTA_BOT_MODE_ASSEMBLE = 0xe,
	DOTA_BOT_MODE_ASSEMBLE_WITH_HUMANS = 0xf,
	DOTA_BOT_MODE_TEAM_ROAM = 0x10,
	DOTA_BOT_MODE_FARM = 0x11,
	DOTA_BOT_MODE_DEFEND_ALLY = 0x12,
	DOTA_BOT_MODE_EVASIVE_MANEUVERS = 0x13,
	DOTA_BOT_MODE_ROSHAN = 0x14,
	DOTA_BOT_MODE_ITEM = 0x15,
	DOTA_BOT_MODE_WARD = 0x16,
	DOTA_BOT_MODE_COMPANION = 0x17,
	DOTA_BOT_MODE_TUTORIAL_BOSS = 0x18,
	DOTA_BOT_MODE_MINION = 0x19,
	DOTA_BOT_MODE_OUTPOST = 0x1a,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class MatchLanguages : uint32_t
{
	MATCH_LANGUAGE_INVALID = 0x0,
	MATCH_LANGUAGE_ENGLISH = 0x1,
	MATCH_LANGUAGE_RUSSIAN = 0x2,
	MATCH_LANGUAGE_CHINESE = 0x3,
	MATCH_LANGUAGE_KOREAN = 0x4,
	MATCH_LANGUAGE_SPANISH = 0x5,
	MATCH_LANGUAGE_PORTUGUESE = 0x6,
	MATCH_LANGUAGE_ENGLISH2 = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class ETourneyQueueDeadlineState : uint32_t
{
	k_ETourneyQueueDeadlineState_Normal = 0x0,
	k_ETourneyQueueDeadlineState_Missed = 0x1,
	k_ETourneyQueueDeadlineState_ExpiredOK = 0x2,
	k_ETourneyQueueDeadlineState_SeekingBye = 0x3,
	k_ETourneyQueueDeadlineState_EligibleForRefund = 0x4,
	k_ETourneyQueueDeadlineState_NA = 0xffffffffffffffff,
	k_ETourneyQueueDeadlineState_ExpiringSoon = 0x65,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x13
enum class EMatchOutcome : uint32_t
{
	k_EMatchOutcome_Unknown = 0x0,
	k_EMatchOutcome_RadVictory = 0x2,
	k_EMatchOutcome_DireVictory = 0x3,
	k_EMatchOutcome_NeutralVictory = 0x4,
	k_EMatchOutcome_NoTeamWinner = 0x5,
	k_EMatchOutcome_Custom1Victory = 0x6,
	k_EMatchOutcome_Custom2Victory = 0x7,
	k_EMatchOutcome_Custom3Victory = 0x8,
	k_EMatchOutcome_Custom4Victory = 0x9,
	k_EMatchOutcome_Custom5Victory = 0xa,
	k_EMatchOutcome_Custom6Victory = 0xb,
	k_EMatchOutcome_Custom7Victory = 0xc,
	k_EMatchOutcome_Custom8Victory = 0xd,
	k_EMatchOutcome_NotScored_PoorNetworkConditions = 0x40,
	k_EMatchOutcome_NotScored_Leaver = 0x41,
	k_EMatchOutcome_NotScored_ServerCrash = 0x42,
	k_EMatchOutcome_NotScored_NeverStarted = 0x43,
	k_EMatchOutcome_NotScored_Canceled = 0x44,
	k_EMatchOutcome_NotScored_Suspicious = 0x45,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class ELaneType : uint32_t
{
	LANE_TYPE_UNKNOWN = 0x0,
	LANE_TYPE_SAFE = 0x1,
	LANE_TYPE_OFF = 0x2,
	LANE_TYPE_MID = 0x3,
	LANE_TYPE_JUNGLE = 0x4,
	LANE_TYPE_ROAM = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x12
enum class EBadgeType : uint32_t
{
	k_EBadgeType_Invalid = 0x0,
	k_EBadgeType_TI7_Midweek = 0x1,
	k_EBadgeType_TI7_Finals = 0x2,
	k_EBadgeType_TI7_AllEvent = 0x3,
	k_EBadgeType_TI8_Midweek = 0x4,
	k_EBadgeType_TI8_Finals = 0x5,
	k_EBadgeType_TI8_AllEvent = 0x6,
	k_EBadgeType_TI10 = 0x7,
	k_EBadgeType_TI11_PlayoffsDay1 = 0x8,
	k_EBadgeType_TI11_PlayoffsDay2 = 0x9,
	k_EBadgeType_TI11_PlayoffsDay3 = 0xa,
	k_EBadgeType_TI11_PlayoffsDay4 = 0xb,
	k_EBadgeType_TI11_FinalsWeekend = 0xc,
	k_EBadgeType_TI12_PlayoffsDay1 = 0xd,
	k_EBadgeType_TI12_PlayoffsDay2 = 0xe,
	k_EBadgeType_TI12_PlayoffsDay3 = 0xf,
	k_EBadgeType_TI12_FinalsWeekend = 0x10,
	k_EBadgeType_TI12_Special = 0x11,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class ELeagueStatus : uint32_t
{
	LEAGUE_STATUS_UNSET = 0x0,
	LEAGUE_STATUS_UNSUBMITTED = 0x1,
	LEAGUE_STATUS_SUBMITTED = 0x2,
	LEAGUE_STATUS_ACCEPTED = 0x3,
	LEAGUE_STATUS_REJECTED = 0x4,
	LEAGUE_STATUS_CONCLUDED = 0x5,
	LEAGUE_STATUS_DELETED = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class ELeagueRegion : uint32_t
{
	LEAGUE_REGION_UNSET = 0x0,
	LEAGUE_REGION_NA = 0x1,
	LEAGUE_REGION_SA = 0x2,
	LEAGUE_REGION_WEU = 0x3,
	LEAGUE_REGION_EEU = 0x4,
	LEAGUE_REGION_CHINA = 0x5,
	LEAGUE_REGION_SEA = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xa
enum class ELeagueTier : uint32_t
{
	LEAGUE_TIER_UNSET = 0x0,
	LEAGUE_TIER_AMATEUR = 0x1,
	LEAGUE_TIER_PROFESSIONAL = 0x2,
	LEAGUE_TIER_MINOR = 0x3,
	LEAGUE_TIER_MAJOR = 0x4,
	LEAGUE_TIER_INTERNATIONAL = 0x5,
	LEAGUE_TIER_DPC_QUALIFIER = 0x6,
	LEAGUE_TIER_DPC_LEAGUE_QUALIFIER = 0x7,
	LEAGUE_TIER_DPC_LEAGUE = 0x8,
	LEAGUE_TIER_DPC_LEAGUE_FINALS = 0x9,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ELeagueTierCategory : uint32_t
{
	LEAGUE_TIER_CATEGORY_AMATEUR = 0x1,
	LEAGUE_TIER_CATEGORY_PROFESSIONAL = 0x2,
	LEAGUE_TIER_CATEGORY_DPC = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ELeagueDivision : uint32_t
{
	LEAGUE_DIVISION_UNSET = 0x0,
	LEAGUE_DIVISION_I = 0x1,
	LEAGUE_DIVISION_II = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class ELeagueBroadcastProvider : uint32_t
{
	LEAGUE_BROADCAST_UNKNOWN = 0x0,
	LEAGUE_BROADCAST_STEAM = 0x1,
	LEAGUE_BROADCAST_TWITCH = 0x2,
	LEAGUE_BROADCAST_YOUTUBE = 0x3,
	LEAGUE_BROADCAST_OTHER = 0x64,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ELeaguePhase : uint32_t
{
	LEAGUE_PHASE_UNSET = 0x0,
	LEAGUE_PHASE_REGIONAL_QUALIFIER = 0x1,
	LEAGUE_PHASE_GROUP_STAGE = 0x2,
	LEAGUE_PHASE_MAIN_EVENT = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2a
enum class ELeagueAuditAction : uint32_t
{
	LEAGUE_AUDIT_ACTION_INVALID = 0x0,
	LEAGUE_AUDIT_ACTION_LEAGUE_CREATE = 0x1,
	LEAGUE_AUDIT_ACTION_LEAGUE_EDIT = 0x2,
	LEAGUE_AUDIT_ACTION_LEAGUE_DELETE = 0x3,
	LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_ADD = 0x4,
	LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_REVOKE = 0x5,
	LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_PROMOTE = 0x6,
	LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_ADD = 0x7,
	LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_REMOVE = 0x8,
	LEAGUE_AUDIT_ACTION_LEAGUE_IMAGE_UPDATED = 0x9,
	LEAGUE_AUDIT_ACTION_LEAGUE_MESSAGE_ADDED = 0xa,
	LEAGUE_AUDIT_ACTION_LEAGUE_SUBMITTED = 0xb,
	LEAGUE_AUDIT_ACTION_LEAGUE_SET_PRIZE_POOL = 0xc,
	LEAGUE_AUDIT_ACTION_LEAGUE_ADD_PRIZE_POOL_ITEM = 0xd,
	LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_PRIZE_POOL_ITEM = 0xe,
	LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_START = 0xf,
	LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_END = 0x10,
	LEAGUE_AUDIT_ACTION_LEAGUE_ADD_INVITED_TEAM = 0x11,
	LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_INVITED_TEAM = 0x12,
	LEAGUE_AUDIT_ACTION_LEAGUE_STATUS_CHANGED = 0x13,
	LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_EDIT = 0x14,
	LEAGUE_AUDIT_ACTION_LEAGUE_TEAM_SWAP = 0x15,
	LEAGUE_AUDIT_ACTION_NODEGROUP_CREATE = 0x64,
	LEAGUE_AUDIT_ACTION_NODEGROUP_DESTROY = 0x65,
	LEAGUE_AUDIT_ACTION_NODEGROUP_ADD_TEAM = 0x66,
	LEAGUE_AUDIT_ACTION_NODEGROUP_REMOVE_TEAM = 0x67,
	LEAGUE_AUDIT_ACTION_NODEGROUP_SET_ADVANCING = 0x68,
	LEAGUE_AUDIT_ACTION_NODEGROUP_EDIT = 0x69,
	LEAGUE_AUDIT_ACTION_NODEGROUP_POPULATE = 0x6a,
	LEAGUE_AUDIT_ACTION_NODEGROUP_COMPLETED = 0x6b,
	LEAGUE_AUDIT_ACTION_NODEGROUP_SET_SECONDARY_ADVANCING = 0x6c,
	LEAGUE_AUDIT_ACTION_NODEGROUP_SET_TERTIARY_ADVANCING = 0x6d,
	LEAGUE_AUDIT_ACTION_NODE_CREATE = 0xc8,
	LEAGUE_AUDIT_ACTION_NODE_DESTROY = 0xc9,
	LEAGUE_AUDIT_ACTION_NODE_AUTOCREATE = 0xca,
	LEAGUE_AUDIT_ACTION_NODE_SET_TEAM = 0xcb,
	LEAGUE_AUDIT_ACTION_NODE_SET_SERIES_ID = 0xcc,
	LEAGUE_AUDIT_ACTION_NODE_SET_ADVANCING = 0xcd,
	LEAGUE_AUDIT_ACTION_NODE_SET_TIME = 0xce,
	LEAGUE_AUDIT_ACTION_NODE_MATCH_COMPLETED = 0xcf,
	LEAGUE_AUDIT_ACTION_NODE_COMPLETED = 0xd0,
	LEAGUE_AUDIT_ACTION_NODE_EDIT = 0xd1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2d
enum class DOTA_COMBATLOG_TYPES : uint32_t
{
	DOTA_COMBATLOG_INVALID = 0xffffffffffffffff,
	DOTA_COMBATLOG_DAMAGE = 0x0,
	DOTA_COMBATLOG_HEAL = 0x1,
	DOTA_COMBATLOG_MODIFIER_ADD = 0x2,
	DOTA_COMBATLOG_MODIFIER_REMOVE = 0x3,
	DOTA_COMBATLOG_DEATH = 0x4,
	DOTA_COMBATLOG_ABILITY = 0x5,
	DOTA_COMBATLOG_ITEM = 0x6,
	DOTA_COMBATLOG_LOCATION = 0x7,
	DOTA_COMBATLOG_GOLD = 0x8,
	DOTA_COMBATLOG_GAME_STATE = 0x9,
	DOTA_COMBATLOG_XP = 0xa,
	DOTA_COMBATLOG_PURCHASE = 0xb,
	DOTA_COMBATLOG_BUYBACK = 0xc,
	DOTA_COMBATLOG_ABILITY_TRIGGER = 0xd,
	DOTA_COMBATLOG_PLAYERSTATS = 0xe,
	DOTA_COMBATLOG_MULTIKILL = 0xf,
	DOTA_COMBATLOG_KILLSTREAK = 0x10,
	DOTA_COMBATLOG_TEAM_BUILDING_KILL = 0x11,
	DOTA_COMBATLOG_FIRST_BLOOD = 0x12,
	DOTA_COMBATLOG_MODIFIER_STACK_EVENT = 0x13,
	DOTA_COMBATLOG_NEUTRAL_CAMP_STACK = 0x14,
	DOTA_COMBATLOG_PICKUP_RUNE = 0x15,
	DOTA_COMBATLOG_REVEALED_INVISIBLE = 0x16,
	DOTA_COMBATLOG_HERO_SAVED = 0x17,
	DOTA_COMBATLOG_MANA_RESTORED = 0x18,
	DOTA_COMBATLOG_HERO_LEVELUP = 0x19,
	DOTA_COMBATLOG_BOTTLE_HEAL_ALLY = 0x1a,
	DOTA_COMBATLOG_ENDGAME_STATS = 0x1b,
	DOTA_COMBATLOG_INTERRUPT_CHANNEL = 0x1c,
	DOTA_COMBATLOG_ALLIED_GOLD = 0x1d,
	DOTA_COMBATLOG_AEGIS_TAKEN = 0x1e,
	DOTA_COMBATLOG_MANA_DAMAGE = 0x1f,
	DOTA_COMBATLOG_PHYSICAL_DAMAGE_PREVENTED = 0x20,
	DOTA_COMBATLOG_UNIT_SUMMONED = 0x21,
	DOTA_COMBATLOG_ATTACK_EVADE = 0x22,
	DOTA_COMBATLOG_TREE_CUT = 0x23,
	DOTA_COMBATLOG_SUCCESSFUL_SCAN = 0x24,
	DOTA_COMBATLOG_END_KILLSTREAK = 0x25,
	DOTA_COMBATLOG_BLOODSTONE_CHARGE = 0x26,
	DOTA_COMBATLOG_CRITICAL_DAMAGE = 0x27,
	DOTA_COMBATLOG_SPELL_ABSORB = 0x28,
	DOTA_COMBATLOG_UNIT_TELEPORTED = 0x29,
	DOTA_COMBATLOG_KILL_EATER_EVENT = 0x2a,
	DOTA_COMBATLOG_NEUTRAL_ITEM_EARNED = 0x2b,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class EDPCFavoriteType : uint32_t
{
	FAVORITE_TYPE_ALL = 0x0,
	FAVORITE_TYPE_PLAYER = 0x1,
	FAVORITE_TYPE_TEAM = 0x2,
	FAVORITE_TYPE_LEAGUE = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xb
enum class EDPCPushNotification : uint32_t
{
	DPC_PUSH_NOTIFICATION_MATCH_STARTING = 0x1,
	DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM = 0xa,
	DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM = 0xb,
	DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM_AS_COACH = 0xc,
	DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM_AS_COACH = 0xd,
	DPC_PUSH_NOTIFICATION_LEAGUE_RESULT = 0x14,
	DPC_PUSH_NOTIFICATION_PREDICTION_MATCHES_AVAILABLE = 0x1e,
	DPC_PUSH_NOTIFICATION_PREDICTION_RESULT = 0x1f,
	DPC_PUSH_NOTIFICATION_FANTASY_PLAYER_CLEARED = 0x28,
	DPC_PUSH_NOTIFICATION_FANTASY_DAILY_SUMMARY = 0x29,
	DPC_PUSH_NOTIFICATION_FANTASY_FINAL_RESULTS = 0x2a,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class EEventActionScoreMode : uint32_t
{
	k_eEventActionScoreMode_Add = 0x0,
	k_eEventActionScoreMode_Min = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class EPlayerChallengeHistoryType : uint32_t
{
	k_EPlayerChallengeHistoryType_Invalid = 0x0,
	k_EPlayerChallengeHistoryType_KillEater = 0x1,
	k_EPlayerChallengeHistoryType_DotaPlusRelic = 0x2,
	k_EPlayerChallengeHistoryType_DotaPlusHeroPlayerChallenge = 0x3,
	k_EPlayerChallengeHistoryType_InGameEventChallenge = 0x4,
	k_EPlayerChallengeHistoryType_GuildContract = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class EOverwatchReportReason : uint32_t
{
	k_EOverwatchReportReason_Unknown = 0x0,
	k_EOverwatchReportReason_Cheating = 0x1,
	k_EOverwatchReportReason_Feeding = 0x2,
	k_EOverwatchReportReason_Griefing = 0x3,
	k_EOverwatchReportReason_Suspicious = 0x4,
	k_EOverwatchReportReason_AbilityAbuse = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ESpecialPingValue : uint32_t
{
	k_ESpecialPingValue_NoData = 0x3ffe,
	k_ESpecialPingValue_Failed = 0x3fff,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xe
enum class EDOTAGCSessionNeed : uint32_t
{
	k_EDOTAGCSessionNeed_Unknown = 0x0,
	k_EDOTAGCSessionNeed_UserNoSessionNeeded = 0x64,
	k_EDOTAGCSessionNeed_UserInOnlineGame = 0x65,
	k_EDOTAGCSessionNeed_UserInLocalGame = 0x66,
	k_EDOTAGCSessionNeed_UserInUIWasConnected = 0x67,
	k_EDOTAGCSessionNeed_UserInUINeverConnected = 0x68,
	k_EDOTAGCSessionNeed_UserTutorials = 0x69,
	k_EDOTAGCSessionNeed_UserInUIWasConnectedIdle = 0x6a,
	k_EDOTAGCSessionNeed_UserInUINeverConnectedIdle = 0x6b,
	k_EDOTAGCSessionNeed_GameServerOnline = 0xc8,
	k_EDOTAGCSessionNeed_GameServerLocal = 0xc9,
	k_EDOTAGCSessionNeed_GameServerIdle = 0xca,
	k_EDOTAGCSessionNeed_GameServerRelay = 0xcb,
	k_EDOTAGCSessionNeed_GameServerLocalUpload = 0xcc,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EDOTAMatchPlayerTimeCustomStat : uint32_t
{
	k_EDOTA_MatchPlayerTimeCustomStat_HPRegenUnderT1Towers = 0x1,
	k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_Absolute = 0x2,
	k_EDOTA_MatchPlayerTimeCustomStat_MagicDamageReducedWithNewFormula_PercentOfTotalHP = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
enum class DOTA_TournamentEvents : uint32_t
{
	TE_FIRST_BLOOD = 0x0,
	TE_GAME_END = 0x1,
	TE_MULTI_KILL = 0x2,
	TE_HERO_DENY = 0x3,
	TE_AEGIS_DENY = 0x4,
	TE_AEGIS_STOLEN = 0x5,
	TE_GODLIKE = 0x6,
	TE_COURIER_KILL = 0x7,
	TE_ECHOSLAM = 0x8,
	TE_RAPIER = 0x9,
	TE_EARLY_ROSHAN = 0xa,
	TE_BLACK_HOLE = 0xb,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9
enum class EBroadcastTimelineEvent : uint32_t
{
	EBroadcastTimelineEvent_MatchStarted = 0x1,
	EBroadcastTimelineEvent_GameStateChanged = 0x2,
	EBroadcastTimelineEvent_TowerDeath = 0x3,
	EBroadcastTimelineEvent_BarracksDeath = 0x4,
	EBroadcastTimelineEvent_AncientDeath = 0x5,
	EBroadcastTimelineEvent_RoshanDeath = 0x6,
	EBroadcastTimelineEvent_HeroDeath = 0x7,
	EBroadcastTimelineEvent_TeamFight = 0x8,
	EBroadcastTimelineEvent_FirstBlood = 0x9,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ECustomGameWhitelistState : uint32_t
{
	CUSTOM_GAME_WHITELIST_STATE_UNKNOWN = 0x0,
	CUSTOM_GAME_WHITELIST_STATE_APPROVED = 0x1,
	CUSTOM_GAME_WHITELIST_STATE_REJECTED = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x12
enum class EDOTATriviaQuestionCategory : uint32_t
{
	k_EDOTATriviaQuestionCategory_AbilityIcon = 0x0,
	k_EDOTATriviaQuestionCategory_AbilityCooldown = 0x1,
	k_EDOTATriviaQuestionCategory_HeroAttributes = 0x2,
	k_EDOTATriviaQuestionCategory_HeroMovementSpeed = 0x3,
	k_EDOTATriviaQuestionCategory_TalentTree = 0x4,
	k_EDOTATriviaQuestionCategory_HeroStats = 0x5,
	k_EDOTATriviaQuestionCategory_ItemPrice = 0x6,
	k_EDOTATriviaQuestionCategory_AbilitySound = 0x7,
	k_EDOTATriviaQuestionCategory_InvokerSpells = 0x8,
	k_EDOTATriviaQuestionCategory_AbilityManaCost = 0x9,
	k_EDOTATriviaQuestionCategory_HeroAttackSound = 0xa,
	k_EDOTATriviaQuestionCategory_AbilityName = 0xb,
	k_EDOTATriviaQuestionCategory_ItemComponents = 0xc,
	k_EDOTATriviaQuestionCategory_ItemLore = 0xd,
	k_EDOTATriviaQuestionCategory_ItemPassives = 0xe,
	k_EDOTATriviaQuestionCategory_STATIC_QUESTIONS_END = 0xf,
	k_EDOTATriviaQuestionCategory_DYNAMIC_QUESTIONS_START = 0x63,
	k_EDOTATriviaQuestionCategory_Dynamic_ItemBuild = 0x64,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class EOverwatchConviction : uint32_t
{
	k_EOverwatchConviction_None = 0x0,
	k_EOverwatchConviction_NotGuilty = 0x1,
	k_EOverwatchConviction_GuiltUnclear = 0x2,
	k_EOverwatchConviction_Guilty = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EHeroRelicRarity : uint32_t
{
	HERO_RELIC_RARITY_INVALID = 0xffffffffffffffff,
	HERO_RELIC_RARITY_COMMON = 0x0,
	HERO_RELIC_RARITY_RARE = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class EStickerbookAuditAction : uint32_t
{
	STICKERBOOK_AUDIT_CREATE_PAGE = 0x0,
	STICKERBOOK_AUDIT_DELETE_PAGE = 0x1,
	STICKERBOOK_AUDIT_STICK_STICKERS = 0x2,
	STICKERBOOK_AUDIT_REPLACE_STICKERS = 0x3,
	STICKERBOOK_AUDIT_HERO_STICKER = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EStickerbookPageType : uint32_t
{
	STICKER_PAGE_GENERIC = 0x0,
	STICKER_PAGE_TEAM = 0x1,
	STICKER_PAGE_TALENT = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ELobbyMemberCoachRequestState : uint32_t
{
	k_eLobbyMemberCoachRequestState_None = 0x0,
	k_eLobbyMemberCoachRequestState_Accepted = 0x1,
	k_eLobbyMemberCoachRequestState_Rejected = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class LobbyDotaTVDelay : uint32_t
{
	LobbyDotaTV_10 = 0x0,
	LobbyDotaTV_120 = 0x1,
	LobbyDotaTV_300 = 0x2,
	LobbyDotaTV_900 = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class LobbyDotaPauseSetting : uint32_t
{
	LobbyDotaPauseSetting_Unlimited = 0x0,
	LobbyDotaPauseSetting_Limited = 0x1,
	LobbyDotaPauseSetting_Disabled = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class ELaneSelection : uint32_t
{
	k_ELaneSelection_SAFELANE = 0x0,
	k_ELaneSelection_OFFLANE = 0x1,
	k_ELaneSelection_MIDLANE = 0x2,
	k_ELaneSelection_SUPPORT = 0x3,
	k_ELaneSelection_HARDSUPPORT = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9
enum class ELaneSelectionFlags : uint32_t
{
	k_ELaneSelectionFlags_SAFELANE = 0x1,
	k_ELaneSelectionFlags_OFFLANE = 0x2,
	k_ELaneSelectionFlags_MIDLANE = 0x4,
	k_ELaneSelectionFlags_SUPPORT = 0x8,
	k_ELaneSelectionFlags_HARDSUPPORT = 0x10,
	k_ELaneSelectionFlagGroup_None = 0x0,
	k_ELaneSelectionFlagGroup_CORE = 0x7,
	k_ELaneSelectionFlagGroup_SUPPORT = 0x18,
	k_ELaneSelectionFlagGroup_ALL = 0x1f,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class EPartyMatchmakingFlags : uint32_t
{
	k_EPartyMatchmakingFlags_None = 0x0,
	k_EPartyMatchmakingFlags_LargeRankSpread = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9
enum class EHighPriorityMMState : uint32_t
{
	k_EHighPriorityMM_Unknown = 0x0,
	k_EHighPriorityMM_MissingMMData = 0x1,
	k_EHighPriorityMM_ResourceMissing = 0x2,
	k_EHighPriorityMM_ManuallyDisabled = 0x3,
	k_EHighPriorityMM_Min_Enabled = 0x40,
	k_EHighPriorityMM_AllRolesSelected = 0x41,
	k_EHighPriorityMM_UsingResource = 0x42,
	k_EHighPriorityMM_FiveStack = 0x43,
	k_EHighPriorityMM_HighDemand = 0x44,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EReadyCheckStatus : uint32_t
{
	k_EReadyCheckStatus_Unknown = 0x0,
	k_EReadyCheckStatus_NotReady = 0x1,
	k_EReadyCheckStatus_Ready = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class EReadyCheckRequestResult : uint32_t
{
	k_EReadyCheckRequestResult_Success = 0x0,
	k_EReadyCheckRequestResult_AlreadyInProgress = 0x1,
	k_EReadyCheckRequestResult_NotInParty = 0x2,
	k_EReadyCheckRequestResult_SendError = 0x3,
	k_EReadyCheckRequestResult_UnknownError = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class EMatchBehaviorScoreVariance : uint32_t
{
	k_EMatchBehaviorScoreVariance_Invalid = 0x0,
	k_EMatchBehaviorScoreVariance_Low = 0x1,
	k_EMatchBehaviorScoreVariance_Medium = 0x2,
	k_EMatchBehaviorScoreVariance_High = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xa
enum class ELeagueNodeGroupType : uint32_t
{
	INVALID_GROUP_TYPE = 0x0,
	ORGANIZATIONAL = 0x1,
	ROUND_ROBIN = 0x2,
	SWISS = 0x3,
	BRACKET_SINGLE = 0x4,
	BRACKET_DOUBLE_SEED_LOSER = 0x5,
	BRACKET_DOUBLE_ALL_WINNER = 0x6,
	SHOWMATCH = 0x7,
	GSL = 0x8,
	PLACEMENT = 0x9,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class ELeagueNodeType : uint32_t
{
	INVALID_NODE_TYPE = 0x0,
	BEST_OF_ONE = 0x1,
	BEST_OF_THREE = 0x2,
	BEST_OF_FIVE = 0x3,
	BEST_OF_TWO = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x378
enum class EDOTAGCMsg : uint32_t
{
	k_EMsgGCDOTABase = 0x1b58,
	k_EMsgGCGameMatchSignOut = 0x1b5c,
	k_EMsgGCGameMatchSignOutResponse = 0x1b5d,
	k_EMsgGCJoinChatChannel = 0x1b61,
	k_EMsgGCJoinChatChannelResponse = 0x1b62,
	k_EMsgGCOtherJoinedChannel = 0x1b65,
	k_EMsgGCOtherLeftChannel = 0x1b66,
	k_EMsgServerToGCRequestStatus = 0x1b72,
	k_EMsgGCStartFindingMatch = 0x1b79,
	k_EMsgGCConnectedPlayers = 0x1b7a,
	k_EMsgGCAbandonCurrentGame = 0x1b7b,
	k_EMsgGCStopFindingMatch = 0x1b7c,
	k_EMsgGCPracticeLobbyCreate = 0x1b7e,
	k_EMsgGCPracticeLobbyLeave = 0x1b80,
	k_EMsgGCPracticeLobbyLaunch = 0x1b81,
	k_EMsgGCPracticeLobbyList = 0x1b82,
	k_EMsgGCPracticeLobbyListResponse = 0x1b83,
	k_EMsgGCPracticeLobbyJoin = 0x1b84,
	k_EMsgGCPracticeLobbySetDetails = 0x1b86,
	k_EMsgGCPracticeLobbySetTeamSlot = 0x1b87,
	k_EMsgGCInitialQuestionnaireResponse = 0x1b89,
	k_EMsgGCPracticeLobbyResponse = 0x1b8f,
	k_EMsgGCBroadcastNotification = 0x1b90,
	k_EMsgGCLiveScoreboardUpdate = 0x1b91,
	k_EMsgGCRequestChatChannelList = 0x1b94,
	k_EMsgGCRequestChatChannelListResponse = 0x1b95,
	k_EMsgGCReadyUp = 0x1b9e,
	k_EMsgGCKickedFromMatchmakingQueue = 0x1b9f,
	k_EMsgGCLeaverDetected = 0x1ba0,
	k_EMsgGCSpectateFriendGame = 0x1ba1,
	k_EMsgGCSpectateFriendGameResponse = 0x1ba2,
	k_EMsgGCReportsRemainingRequest = 0x1ba4,
	k_EMsgGCReportsRemainingResponse = 0x1ba5,
	k_EMsgGCSubmitPlayerReport = 0x1ba6,
	k_EMsgGCSubmitPlayerReportResponse = 0x1ba7,
	k_EMsgGCPracticeLobbyKick = 0x1ba9,
	k_EMsgGCSubmitPlayerReportV2 = 0x1baa,
	k_EMsgGCSubmitPlayerReportResponseV2 = 0x1bab,
	k_EMsgGCRequestSaveGames = 0x1bac,
	k_EMsgGCRequestSaveGamesServer = 0x1bad,
	k_EMsgGCRequestSaveGamesResponse = 0x1bae,
	k_EMsgGCLeaverDetectedResponse = 0x1baf,
	k_EMsgGCPlayerFailedToConnect = 0x1bb0,
	k_EMsgGCGCToRelayConnect = 0x1bb1,
	k_EMsgGCGCToRelayConnectresponse = 0x1bb2,
	k_EMsgGCWatchGame = 0x1bb3,
	k_EMsgGCWatchGameResponse = 0x1bb4,
	k_EMsgGCBanStatusRequest = 0x1bb5,
	k_EMsgGCBanStatusResponse = 0x1bb6,
	k_EMsgGCMatchDetailsRequest = 0x1bb7,
	k_EMsgGCMatchDetailsResponse = 0x1bb8,
	k_EMsgGCCancelWatchGame = 0x1bb9,
	k_EMsgGCPopup = 0x1bbe,
	k_EMsgGCFriendPracticeLobbyListRequest = 0x1bc7,
	k_EMsgGCFriendPracticeLobbyListResponse = 0x1bc8,
	k_EMsgGCPracticeLobbyJoinResponse = 0x1bc9,
	k_EMsgGCCreateTeam = 0x1bcb,
	k_EMsgGCCreateTeamResponse = 0x1bcc,
	k_EMsgGCTeamInvite_InviterToGC = 0x1bd2,
	k_EMsgGCTeamInvite_GCImmediateResponseToInviter = 0x1bd3,
	k_EMsgGCTeamInvite_GCRequestToInvitee = 0x1bd4,
	k_EMsgGCTeamInvite_InviteeResponseToGC = 0x1bd5,
	k_EMsgGCTeamInvite_GCResponseToInviter = 0x1bd6,
	k_EMsgGCTeamInvite_GCResponseToInvitee = 0x1bd7,
	k_EMsgGCKickTeamMember = 0x1bd8,
	k_EMsgGCKickTeamMemberResponse = 0x1bd9,
	k_EMsgGCLeaveTeam = 0x1bda,
	k_EMsgGCLeaveTeamResponse = 0x1bdb,
	k_EMsgGCApplyTeamToPracticeLobby = 0x1be6,
	k_EMsgGCTransferTeamAdmin = 0x1be8,
	k_EMsgGCPracticeLobbyJoinBroadcastChannel = 0x1bed,
	k_EMsgGC_TournamentItemEvent = 0x1bee,
	k_EMsgGC_TournamentItemEventResponse = 0x1bef,
	k_EMsgTeamFanfare = 0x1bf4,
	k_EMsgResponseTeamFanfare = 0x1bf5,
	k_EMsgGC_GameServerUploadSaveGame = 0x1bf6,
	k_EMsgGC_GameServerSaveGameResult = 0x1bf7,
	k_EMsgGC_GameServerGetLoadGame = 0x1bf8,
	k_EMsgGC_GameServerGetLoadGameResult = 0x1bf9,
	k_EMsgGCEditTeamDetails = 0x1bfe,
	k_EMsgGCEditTeamDetailsResponse = 0x1bff,
	k_EMsgGCReadyUpStatus = 0x1c02,
	k_EMsgGCToGCMatchCompleted = 0x1c12,
	k_EMsgGCBalancedShuffleLobby = 0x1c14,
	k_EMsgGCMatchmakingStatsRequest = 0x1c1d,
	k_EMsgGCMatchmakingStatsResponse = 0x1c1e,
	k_EMsgGCBotGameCreate = 0x1c1f,
	k_EMsgGCSetMatchHistoryAccess = 0x1c20,
	k_EMsgGCSetMatchHistoryAccessResponse = 0x1c21,
	k_EMsgUpgradeLeagueItem = 0x1c23,
	k_EMsgUpgradeLeagueItemResponse = 0x1c24,
	k_EMsgGCWatchDownloadedReplay = 0x1c26,
	k_EMsgClientsRejoinChatChannels = 0x1c31,
	k_EMsgGCToGCGetUserChatInfo = 0x1c32,
	k_EMsgGCToGCGetUserChatInfoResponse = 0x1c33,
	k_EMsgGCToGCLeaveAllChatChannels = 0x1c34,
	k_EMsgGCToGCUpdateAccountChatBan = 0x1c35,
	k_EMsgGCToGCCanInviteUserToTeam = 0x1c42,
	k_EMsgGCToGCCanInviteUserToTeamResponse = 0x1c43,
	k_EMsgGCToGCGetUserRank = 0x1c44,
	k_EMsgGCToGCGetUserRankResponse = 0x1c45,
	k_EMsgGCToGCAdjustUserRank = 0x1c46,
	k_EMsgGCToGCAdjustUserRankResponse = 0x1c47,
	k_EMsgGCToGCUpdateTeamStats = 0x1c48,
	k_EMsgGCToGCValidateTeam = 0x1c49,
	k_EMsgGCToGCValidateTeamResponse = 0x1c4a,
	k_EMsgGCToGCGetLeagueAdmin = 0x1c57,
	k_EMsgGCToGCGetLeagueAdminResponse = 0x1c58,
	k_EMsgGCLeaveChatChannel = 0x1c68,
	k_EMsgGCChatMessage = 0x1c69,
	k_EMsgGCGetHeroStandings = 0x1c6a,
	k_EMsgGCGetHeroStandingsResponse = 0x1c6b,
	k_EMsgGCItemEditorReservationsRequest = 0x1c73,
	k_EMsgGCItemEditorReservationsResponse = 0x1c74,
	k_EMsgGCItemEditorReserveItemDef = 0x1c75,
	k_EMsgGCItemEditorReserveItemDefResponse = 0x1c76,
	k_EMsgGCItemEditorReleaseReservation = 0x1c77,
	k_EMsgGCItemEditorReleaseReservationResponse = 0x1c78,
	k_EMsgGCRewardTutorialPrizes = 0x1c79,
	k_EMsgGCFantasyLivePlayerStats = 0x1c8c,
	k_EMsgGCFantasyFinalPlayerStats = 0x1c8d,
	k_EMsgGCFlipLobbyTeams = 0x1c98,
	k_EMsgGCToGCEvaluateReportedPlayer = 0x1c9a,
	k_EMsgGCToGCEvaluateReportedPlayerResponse = 0x1c9b,
	k_EMsgGCToGCProcessPlayerReportForTarget = 0x1c9c,
	k_EMsgGCToGCProcessReportSuccess = 0x1c9d,
	k_EMsgGCNotifyAccountFlagsChange = 0x1c9e,
	k_EMsgGCSetProfilePrivacy = 0x1c9f,
	k_EMsgGCSetProfilePrivacyResponse = 0x1ca0,
	k_EMsgGCClientSuspended = 0x1cae,
	k_EMsgGCPartyMemberSetCoach = 0x1caf,
	k_EMsgGCPracticeLobbySetCoach = 0x1cb2,
	k_EMsgGCChatModeratorBan = 0x1cbf,
	k_EMsgGCLobbyUpdateBroadcastChannelInfo = 0x1cc7,
	k_EMsgGCToGCGrantTournamentItem = 0x1ccc,
	k_EMsgGCToGCUpgradeTwitchViewerItems = 0x1ccf,
	k_EMsgGCToGCGetLiveMatchAffiliates = 0x1cd0,
	k_EMsgGCToGCGetLiveMatchAffiliatesResponse = 0x1cd1,
	k_EMsgGCToGCUpdatePlayerPennantCounts = 0x1cd2,
	k_EMsgGCToGCGetPlayerPennantCounts = 0x1cd3,
	k_EMsgGCToGCGetPlayerPennantCountsResponse = 0x1cd4,
	k_EMsgGCGameMatchSignOutPermissionRequest = 0x1cd5,
	k_EMsgGCGameMatchSignOutPermissionResponse = 0x1cd6,
	k_EMsgDOTAAwardEventPoints = 0x1cd8,
	k_EMsgDOTAGetEventPoints = 0x1cdb,
	k_EMsgDOTAGetEventPointsResponse = 0x1cdc,
	k_EMsgGCPartyLeaderWatchGamePrompt = 0x1ce5,
	k_EMsgGCCompendiumSetSelection = 0x1ced,
	k_EMsgGCCompendiumDataRequest = 0x1cee,
	k_EMsgGCCompendiumDataResponse = 0x1cef,
	k_EMsgDOTAGetPlayerMatchHistory = 0x1cf0,
	k_EMsgDOTAGetPlayerMatchHistoryResponse = 0x1cf1,
	k_EMsgGCToGCMatchmakingAddParty = 0x1cf2,
	k_EMsgGCToGCMatchmakingRemoveParty = 0x1cf3,
	k_EMsgGCToGCMatchmakingRemoveAllParties = 0x1cf4,
	k_EMsgGCToGCMatchmakingMatchFound = 0x1cf5,
	k_EMsgGCToGCUpdateMatchManagementStats = 0x1cf6,
	k_EMsgGCToGCUpdateMatchmakingStats = 0x1cf7,
	k_EMsgGCToServerPingRequest = 0x1cf8,
	k_EMsgGCToServerPingResponse = 0x1cf9,
	k_EMsgGCToServerEvaluateToxicChat = 0x1cfa,
	k_EMsgServerToGCEvaluateToxicChat = 0x1cfb,
	k_EMsgServerToGCEvaluateToxicChatResponse = 0x1cfc,
	k_EMsgGCToGCProcessMatchLeaver = 0x1d02,
	k_EMsgGCNotificationsRequest = 0x1d03,
	k_EMsgGCNotificationsResponse = 0x1d04,
	k_EMsgGCToGCModifyNotification = 0x1d05,
	k_EMsgGCLeagueAdminList = 0x1d0a,
	k_EMsgGCNotificationsMarkReadRequest = 0x1d0b,
	k_EMsgServerToGCRequestBatchPlayerResources = 0x1d1a,
	k_EMsgServerToGCRequestBatchPlayerResourcesResponse = 0x1d1b,
	k_EMsgGCCompendiumSetSelectionResponse = 0x1d1d,
	k_EMsgGCPlayerInfoSubmit = 0x1d20,
	k_EMsgGCPlayerInfoSubmitResponse = 0x1d21,
	k_EMsgGCToGCGetAccountLevel = 0x1d22,
	k_EMsgGCToGCGetAccountLevelResponse = 0x1d23,
	k_EMsgDOTAGetWeekendTourneySchedule = 0x1d28,
	k_EMsgDOTAWeekendTourneySchedule = 0x1d29,
	k_EMsgGCJoinableCustomGameModesRequest = 0x1d2a,
	k_EMsgGCJoinableCustomGameModesResponse = 0x1d2b,
	k_EMsgGCJoinableCustomLobbiesRequest = 0x1d2c,
	k_EMsgGCJoinableCustomLobbiesResponse = 0x1d2d,
	k_EMsgGCQuickJoinCustomLobby = 0x1d2e,
	k_EMsgGCQuickJoinCustomLobbyResponse = 0x1d2f,
	k_EMsgGCToGCGrantEventPointAction = 0x1d30,
	k_EMsgGCToGCSetCompendiumSelection = 0x1d36,
	k_EMsgGCHasItemQuery = 0x1d3c,
	k_EMsgGCHasItemResponse = 0x1d3d,
	k_EMsgGCToGCGrantEventPointActionMsg = 0x1d40,
	k_EMsgGCToGCGetCompendiumSelections = 0x1d44,
	k_EMsgGCToGCGetCompendiumSelectionsResponse = 0x1d45,
	k_EMsgServerToGCMatchConnectionStats = 0x1d46,
	k_EMsgGCToClientTournamentItemDrop = 0x1d47,
	k_EMsgSQLDelayedGrantLeagueDrop = 0x1d48,
	k_EMsgServerGCUpdateSpectatorCount = 0x1d49,
	k_EMsgGCToGCEmoticonUnlock = 0x1d4d,
	k_EMsgSignOutDraftInfo = 0x1d4e,
	k_EMsgClientToGCEmoticonDataRequest = 0x1d4f,
	k_EMsgGCToClientEmoticonData = 0x1d50,
	k_EMsgGCPracticeLobbyToggleBroadcastChannelCameramanStatus = 0x1d51,
	k_EMsgDOTARedeemItem = 0x1d5e,
	k_EMsgDOTARedeemItemResponse = 0x1d5f,
	k_EMsgClientToGCGetAllHeroProgress = 0x1d61,
	k_EMsgClientToGCGetAllHeroProgressResponse = 0x1d62,
	k_EMsgGCToGCGetServerForClient = 0x1d63,
	k_EMsgGCToGCGetServerForClientResponse = 0x1d64,
	k_EMsgSQLProcessTournamentGameOutcome = 0x1d65,
	k_EMsgSQLGrantTrophyToAccount = 0x1d66,
	k_EMsgClientToGCGetTrophyList = 0x1d67,
	k_EMsgClientToGCGetTrophyListResponse = 0x1d68,
	k_EMsgGCToClientTrophyAwarded = 0x1d69,
	k_EMsgGCGameBotMatchSignOut = 0x1d6a,
	k_EMsgGCGameBotMatchSignOutPermissionRequest = 0x1d6b,
	k_EMsgSignOutBotInfo = 0x1d6c,
	k_EMsgGCToGCUpdateProfileCards = 0x1d6d,
	k_EMsgClientToGCGetProfileCard = 0x1d6e,
	k_EMsgClientToGCGetProfileCardResponse = 0x1d6f,
	k_EMsgClientToGCGetBattleReport = 0x1d70,
	k_EMsgClientToGCGetBattleReportResponse = 0x1d71,
	k_EMsgClientToGCSetProfileCardSlots = 0x1d72,
	k_EMsgGCToClientProfileCardUpdated = 0x1d73,
	k_EMsgServerToGCVictoryPredictions = 0x1d74,
	k_EMsgClientToGCGetBattleReportAggregateStats = 0x1d75,
	k_EMsgClientToGCGetBattleReportAggregateStatsResponse = 0x1d76,
	k_EMsgClientToGCGetBattleReportInfo = 0x1d77,
	k_EMsgClientToGCGetBattleReportInfoResponse = 0x1d78,
	k_EMsgSignOutCommunicationSummary = 0x1d79,
	k_EMsgServerToGCRequestStatus_Response = 0x1d7a,
	k_EMsgClientToGCCreateHeroStatue = 0x1d7b,
	k_EMsgGCToClientHeroStatueCreateResult = 0x1d7c,
	k_EMsgGCGCToLANServerRelayConnect = 0x1d7d,
	k_EMsgClientToGCAcknowledgeBattleReport = 0x1d7e,
	k_EMsgClientToGCAcknowledgeBattleReportResponse = 0x1d7f,
	k_EMsgClientToGCGetBattleReportMatchHistory = 0x1d80,
	k_EMsgClientToGCGetBattleReportMatchHistoryResponse = 0x1d81,
	k_EMsgServerToGCReportKillSummaries = 0x1d82,
	k_EMsgGCToGCUpdatePlayerPredictions = 0x1d89,
	k_EMsgGCToServerPredictionResult = 0x1d8a,
	k_EMsgGCToGCReplayMonitorValidateReplay = 0x1d91,
	k_EMsgLobbyEventPoints = 0x1d94,
	k_EMsgGCToGCGetCustomGameTickets = 0x1d95,
	k_EMsgGCToGCGetCustomGameTicketsResponse = 0x1d96,
	k_EMsgGCToGCCustomGamePlayed = 0x1d98,
	k_EMsgGCToGCGrantEventPointsToUser = 0x1d99,
	k_EMsgGameserverCrashReport = 0x1d9b,
	k_EMsgGameserverCrashReportResponse = 0x1d9c,
	k_EMsgGCToClientSteamDatagramTicket = 0x1d9d,
	k_EMsgGCToGCSendAccountsEventPoints = 0x1d9f,
	k_EMsgClientToGCRerollPlayerChallenge = 0x1da0,
	k_EMsgServerToGCRerollPlayerChallenge = 0x1da1,
	k_EMsgGCRerollPlayerChallengeResponse = 0x1da2,
	k_EMsgSignOutUpdatePlayerChallenge = 0x1da3,
	k_EMsgClientToGCSetPartyLeader = 0x1da4,
	k_EMsgClientToGCCancelPartyInvites = 0x1da5,
	k_EMsgSQLGrantLeagueMatchToTicketHolders = 0x1da8,
	k_EMsgGCToGCEmoticonUnlockNoRollback = 0x1daa,
	k_EMsgClientToGCApplyGemCombiner = 0x1db3,
	k_EMsgClientToGCGetAllHeroOrder = 0x1db6,
	k_EMsgClientToGCGetAllHeroOrderResponse = 0x1db7,
	k_EMsgSQLGCToGCGrantBadgePoints = 0x1db8,
	k_EMsgGCToGCCheckOwnsEntireEmoticonRange = 0x1dbb,
	k_EMsgGCToGCCheckOwnsEntireEmoticonRangeResponse = 0x1dbc,
	k_EMsgGCToClientRequestLaneSelection = 0x1dc7,
	k_EMsgGCToClientRequestLaneSelectionResponse = 0x1dc8,
	k_EMsgServerToGCCavernCrawlIsHeroActive = 0x1dc9,
	k_EMsgServerToGCCavernCrawlIsHeroActiveResponse = 0x1dca,
	k_EMsgClientToGCPlayerCardSpecificPurchaseRequest = 0x1dcb,
	k_EMsgClientToGCPlayerCardSpecificPurchaseResponse = 0x1dcc,
	k_EMsgGCtoServerTensorflowInstance = 0x1dcd,
	k_EMsgSQLSetIsLeagueAdmin = 0x1dce,
	k_EMsgGCToGCGetLiveLeagueMatches = 0x1dcf,
	k_EMsgGCToGCGetLiveLeagueMatchesResponse = 0x1dd0,
	k_EMsgDOTALeagueInfoListAdminsRequest = 0x1dd1,
	k_EMsgDOTALeagueInfoListAdminsReponse = 0x1dd2,
	k_EMsgGCToGCLeagueMatchStarted = 0x1ddd,
	k_EMsgGCToGCLeagueMatchCompleted = 0x1dde,
	k_EMsgGCToGCLeagueMatchStartedResponse = 0x1ddf,
	k_EMsgDOTALeagueAvailableLobbyNodesRequest = 0x1de2,
	k_EMsgDOTALeagueAvailableLobbyNodes = 0x1de3,
	k_EMsgGCToGCLeagueRequest = 0x1de4,
	k_EMsgGCToGCLeagueResponse = 0x1de5,
	k_EMsgGCToGCLeagueNodeGroupRequest = 0x1de6,
	k_EMsgGCToGCLeagueNodeGroupResponse = 0x1de7,
	k_EMsgGCToGCLeagueNodeRequest = 0x1de8,
	k_EMsgGCToGCLeagueNodeResponse = 0x1de9,
	k_EMsgGCToGCRealtimeStatsTerseRequest = 0x1dea,
	k_EMsgGCToGCRealtimeStatsTerseResponse = 0x1deb,
	k_EMsgGCToGCGetTopMatchesRequest = 0x1dec,
	k_EMsgGCToGCGetTopMatchesResponse = 0x1ded,
	k_EMsgClientToGCGetFilteredPlayers = 0x1dee,
	k_EMsgGCToClientGetFilteredPlayersResponse = 0x1def,
	k_EMsgClientToGCRemoveFilteredPlayer = 0x1df0,
	k_EMsgGCToClientRemoveFilteredPlayerResponse = 0x1df1,
	k_EMsgGCToClientPlayerBeaconState = 0x1df2,
	k_EMsgGCToClientPartyBeaconUpdate = 0x1df3,
	k_EMsgGCToClientPartySearchInvite = 0x1df4,
	k_EMsgClientToGCUpdatePartyBeacon = 0x1df5,
	k_EMsgClientToGCRequestActiveBeaconParties = 0x1df6,
	k_EMsgGCToClientRequestActiveBeaconPartiesResponse = 0x1df7,
	k_EMsgClientToGCManageFavorites = 0x1df8,
	k_EMsgGCToClientManageFavoritesResponse = 0x1df9,
	k_EMsgClientToGCJoinPartyFromBeacon = 0x1dfa,
	k_EMsgGCToClientJoinPartyFromBeaconResponse = 0x1dfb,
	k_EMsgClientToGCGetFavoritePlayers = 0x1dfc,
	k_EMsgGCToClientGetFavoritePlayersResponse = 0x1dfd,
	k_EMsgClientToGCVerifyFavoritePlayers = 0x1dfe,
	k_EMsgGCToClientVerifyFavoritePlayersResponse = 0x1dff,
	k_EMsgGCToClientPartySearchInvites = 0x1e00,
	k_EMsgGCToClientRequestMMInfo = 0x1e01,
	k_EMsgClientToGCMMInfo = 0x1e02,
	k_EMsgSignOutTextMuteInfo = 0x1e03,
	k_EMsgClientToGCPurchaseLabyrinthBlessings = 0x1e04,
	k_EMsgClientToGCPurchaseLabyrinthBlessingsResponse = 0x1e05,
	k_EMsgClientToGCPurchaseFilteredPlayerSlot = 0x1e06,
	k_EMsgGCToClientPurchaseFilteredPlayerSlotResponse = 0x1e07,
	k_EMsgClientToGCUpdateFilteredPlayerNote = 0x1e08,
	k_EMsgGCToClientUpdateFilteredPlayerNoteResponse = 0x1e09,
	k_EMsgClientToGCClaimSwag = 0x1e0a,
	k_EMsgGCToClientClaimSwagResponse = 0x1e0b,
	k_EMsgServerToGCLockCharmTrading = 0x1f44,
	k_EMsgClientToGCPlayerStatsRequest = 0x1f46,
	k_EMsgGCToClientPlayerStatsResponse = 0x1f47,
	k_EMsgGCClearPracticeLobbyTeam = 0x1f48,
	k_EMsgClientToGCFindTopSourceTVGames = 0x1f49,
	k_EMsgGCToClientFindTopSourceTVGamesResponse = 0x1f4a,
	k_EMsgGCLobbyList = 0x1f4b,
	k_EMsgGCLobbyListResponse = 0x1f4c,
	k_EMsgGCPlayerStatsMatchSignOut = 0x1f4d,
	k_EMsgClientToGCSocialFeedPostCommentRequest = 0x1f50,
	k_EMsgGCToClientSocialFeedPostCommentResponse = 0x1f51,
	k_EMsgClientToGCCustomGamesFriendsPlayedRequest = 0x1f52,
	k_EMsgGCToClientCustomGamesFriendsPlayedResponse = 0x1f53,
	k_EMsgClientToGCFriendsPlayedCustomGameRequest = 0x1f54,
	k_EMsgGCToClientFriendsPlayedCustomGameResponse = 0x1f55,
	k_EMsgGCTopCustomGamesList = 0x1f58,
	k_EMsgClientToGCSetPartyOpen = 0x1f5d,
	k_EMsgClientToGCMergePartyInvite = 0x1f5e,
	k_EMsgGCToClientMergeGroupInviteReply = 0x1f5f,
	k_EMsgClientToGCMergePartyResponse = 0x1f60,
	k_EMsgGCToClientMergePartyResponseReply = 0x1f61,
	k_EMsgClientToGCGetProfileCardStats = 0x1f62,
	k_EMsgClientToGCGetProfileCardStatsResponse = 0x1f63,
	k_EMsgClientToGCTopLeagueMatchesRequest = 0x1f64,
	k_EMsgClientToGCTopFriendMatchesRequest = 0x1f65,
	k_EMsgGCToClientProfileCardStatsUpdated = 0x1f68,
	k_EMsgServerToGCRealtimeStats = 0x1f69,
	k_EMsgGCToServerRealtimeStatsStartStop = 0x1f6a,
	k_EMsgGCToGCGetServersForClients = 0x1f6d,
	k_EMsgGCToGCGetServersForClientsResponse = 0x1f6e,
	k_EMsgGCPracticeLobbyKickFromTeam = 0x1f6f,
	k_EMsgDOTAChatGetMemberCount = 0x1f70,
	k_EMsgDOTAChatGetMemberCountResponse = 0x1f71,
	k_EMsgClientToGCSocialFeedPostMessageRequest = 0x1f72,
	k_EMsgGCToClientSocialFeedPostMessageResponse = 0x1f73,
	k_EMsgCustomGameListenServerStartedLoading = 0x1f74,
	k_EMsgCustomGameClientFinishedLoading = 0x1f75,
	k_EMsgGCPracticeLobbyCloseBroadcastChannel = 0x1f76,
	k_EMsgGCStartFindingMatchResponse = 0x1f77,
	k_EMsgSQLGCToGCGrantAccountFlag = 0x1f79,
	k_EMsgGCToClientTopLeagueMatchesResponse = 0x1f7d,
	k_EMsgGCToClientTopFriendMatchesResponse = 0x1f7e,
	k_EMsgClientToGCMatchesMinimalRequest = 0x1f7f,
	k_EMsgClientToGCMatchesMinimalResponse = 0x1f80,
	k_EMsgGCToClientChatRegionsEnabled = 0x1f83,
	k_EMsgClientToGCPingData = 0x1f84,
	k_EMsgGCToGCEnsureAccountInParty = 0x1f87,
	k_EMsgGCToGCEnsureAccountInPartyResponse = 0x1f88,
	k_EMsgClientToGCGetProfileTickets = 0x1f89,
	k_EMsgClientToGCGetProfileTicketsResponse = 0x1f8a,
	k_EMsgGCToClientMatchGroupsVersion = 0x1f8b,
	k_EMsgClientToGCH264Unsupported = 0x1f8c,
	k_EMsgClientToGCGetQuestProgress = 0x1f8e,
	k_EMsgClientToGCGetQuestProgressResponse = 0x1f8f,
	k_EMsgSignOutXPCoins = 0x1f90,
	k_EMsgGCToClientMatchSignedOut = 0x1f91,
	k_EMsgGCGetHeroStatsHistory = 0x1f92,
	k_EMsgGCGetHeroStatsHistoryResponse = 0x1f93,
	k_EMsgClientToGCPrivateChatInvite = 0x1f94,
	k_EMsgClientToGCPrivateChatKick = 0x1f98,
	k_EMsgClientToGCPrivateChatPromote = 0x1f99,
	k_EMsgClientToGCPrivateChatDemote = 0x1f9a,
	k_EMsgGCToClientPrivateChatResponse = 0x1f9b,
	k_EMsgClientToGCLatestConductScorecardRequest = 0x1f9f,
	k_EMsgClientToGCLatestConductScorecard = 0x1fa0,
	k_EMsgClientToGCWageringRequest = 0x1fa3,
	k_EMsgGCToClientWageringResponse = 0x1fa4,
	k_EMsgClientToGCEventGoalsRequest = 0x1fa7,
	k_EMsgClientToGCEventGoalsResponse = 0x1fa8,
	k_EMsgGCToGCLeaguePredictionsUpdate = 0x1fac,
	k_EMsgGCToGCAddUserToPostGameChat = 0x1fae,
	k_EMsgClientToGCHasPlayerVotedForMVP = 0x1faf,
	k_EMsgClientToGCHasPlayerVotedForMVPResponse = 0x1fb0,
	k_EMsgClientToGCVoteForMVP = 0x1fb1,
	k_EMsgClientToGCVoteForMVPResponse = 0x1fb2,
	k_EMsgGCToGCGetEventOwnership = 0x1fb3,
	k_EMsgGCToGCGetEventOwnershipResponse = 0x1fb4,
	k_EMsgGCToClientAutomatedTournamentStateChange = 0x1fb5,
	k_EMsgClientToGCWeekendTourneyOpts = 0x1fb6,
	k_EMsgClientToGCWeekendTourneyOptsResponse = 0x1fb7,
	k_EMsgClientToGCWeekendTourneyLeave = 0x1fb8,
	k_EMsgClientToGCWeekendTourneyLeaveResponse = 0x1fb9,
	k_EMsgClientToGCTeammateStatsRequest = 0x1fbc,
	k_EMsgClientToGCTeammateStatsResponse = 0x1fbd,
	k_EMsgClientToGCGetGiftPermissions = 0x1fbe,
	k_EMsgClientToGCGetGiftPermissionsResponse = 0x1fbf,
	k_EMsgClientToGCVoteForArcana = 0x1fc0,
	k_EMsgClientToGCVoteForArcanaResponse = 0x1fc1,
	k_EMsgClientToGCRequestArcanaVotesRemaining = 0x1fc2,
	k_EMsgClientToGCRequestArcanaVotesRemainingResponse = 0x1fc3,
	k_EMsgGCTransferTeamAdminResponse = 0x1fc4,
	k_EMsgGCToClientTeamInfo = 0x1fc7,
	k_EMsgGCToClientTeamsInfo = 0x1fc8,
	k_EMsgClientToGCMyTeamInfoRequest = 0x1fc9,
	k_EMsgClientToGCPublishUserStat = 0x1fcc,
	k_EMsgGCToGCSignoutSpendWager = 0x1fcd,
	k_EMsgGCSubmitLobbyMVPVote = 0x1fd0,
	k_EMsgGCSubmitLobbyMVPVoteResponse = 0x1fd1,
	k_EMsgSignOutCommunityGoalProgress = 0x1fd6,
	k_EMsgGCToClientLobbyMVPAwarded = 0x1fd8,
	k_EMsgGCToClientQuestProgressUpdated = 0x1fd9,
	k_EMsgGCToClientWageringUpdate = 0x1fda,
	k_EMsgGCToClientArcanaVotesUpdate = 0x1fdb,
	k_EMsgClientToGCSetSpectatorLobbyDetails = 0x1fdd,
	k_EMsgClientToGCSetSpectatorLobbyDetailsResponse = 0x1fde,
	k_EMsgClientToGCCreateSpectatorLobby = 0x1fdf,
	k_EMsgClientToGCCreateSpectatorLobbyResponse = 0x1fe0,
	k_EMsgClientToGCSpectatorLobbyList = 0x1fe1,
	k_EMsgClientToGCSpectatorLobbyListResponse = 0x1fe2,
	k_EMsgSpectatorLobbyGameDetails = 0x1fe3,
	k_EMsgServerToGCCompendiumInGamePredictionResults = 0x1fe6,
	k_EMsgServerToGCCloseCompendiumInGamePredictionVoting = 0x1fe7,
	k_EMsgClientToGCOpenPlayerCardPack = 0x1fe8,
	k_EMsgClientToGCOpenPlayerCardPackResponse = 0x1fe9,
	k_EMsgClientToGCSelectCompendiumInGamePrediction = 0x1fea,
	k_EMsgClientToGCSelectCompendiumInGamePredictionResponse = 0x1feb,
	k_EMsgClientToGCWeekendTourneyGetPlayerStats = 0x1fec,
	k_EMsgClientToGCWeekendTourneyGetPlayerStatsResponse = 0x1fed,
	k_EMsgClientToGCRecyclePlayerCard = 0x1fee,
	k_EMsgClientToGCRecyclePlayerCardResponse = 0x1fef,
	k_EMsgClientToGCCreatePlayerCardPack = 0x1ff0,
	k_EMsgClientToGCCreatePlayerCardPackResponse = 0x1ff1,
	k_EMsgClientToGCGetPlayerCardRosterRequest = 0x1ff2,
	k_EMsgClientToGCGetPlayerCardRosterResponse = 0x1ff3,
	k_EMsgClientToGCSetPlayerCardRosterRequest = 0x1ff4,
	k_EMsgClientToGCSetPlayerCardRosterResponse = 0x1ff5,
	k_EMsgServerToGCCloseCompendiumInGamePredictionVotingResponse = 0x1ff7,
	k_EMsgLobbyBattleCupVictory = 0x1ffa,
	k_EMsgGCGetPlayerCardItemInfo = 0x1ffb,
	k_EMsgGCGetPlayerCardItemInfoResponse = 0x1ffc,
	k_EMsgClientToGCRequestSteamDatagramTicket = 0x1ffd,
	k_EMsgClientToGCRequestSteamDatagramTicketResponse = 0x1ffe,
	k_EMsgGCToClientBattlePassRollupRequest = 0x1fff,
	k_EMsgGCToClientBattlePassRollupResponse = 0x2000,
	k_EMsgClientToGCTransferSeasonalMMRRequest = 0x2001,
	k_EMsgClientToGCTransferSeasonalMMRResponse = 0x2002,
	k_EMsgGCToGCPublicChatCommunicationBan = 0x2003,
	k_EMsgGCToGCUpdateAccountInfo = 0x2004,
	k_EMsgGCChatReportPublicSpam = 0x2005,
	k_EMsgClientToGCSetPartyBuilderOptions = 0x2006,
	k_EMsgClientToGCSetPartyBuilderOptionsResponse = 0x2007,
	k_EMsgGCToClientPlaytestStatus = 0x2008,
	k_EMsgClientToGCJoinPlaytest = 0x2009,
	k_EMsgClientToGCJoinPlaytestResponse = 0x200a,
	k_EMsgLobbyPlaytestDetails = 0x200b,
	k_EMsgDOTASetFavoriteTeam = 0x200c,
	k_EMsgGCToClientBattlePassRollupListRequest = 0x200d,
	k_EMsgGCToClientBattlePassRollupListResponse = 0x200e,
	k_EMsgDOTAClaimEventAction = 0x2011,
	k_EMsgDOTAClaimEventActionResponse = 0x2012,
	k_EMsgDOTAGetPeriodicResource = 0x2013,
	k_EMsgDOTAGetPeriodicResourceResponse = 0x2014,
	k_EMsgDOTAPeriodicResourceUpdated = 0x2015,
	k_EMsgServerToGCSpendWager = 0x2016,
	k_EMsgGCToGCSignoutSpendWagerToken = 0x2017,
	k_EMsgSubmitTriviaQuestionAnswer = 0x2018,
	k_EMsgSubmitTriviaQuestionAnswerResponse = 0x2019,
	k_EMsgClientToGCGiveTip = 0x201a,
	k_EMsgClientToGCGiveTipResponse = 0x201b,
	k_EMsgStartTriviaSession = 0x201c,
	k_EMsgStartTriviaSessionResponse = 0x201d,
	k_EMsgAnchorPhoneNumberRequest = 0x201e,
	k_EMsgAnchorPhoneNumberResponse = 0x201f,
	k_EMsgUnanchorPhoneNumberRequest = 0x2020,
	k_EMsgUnanchorPhoneNumberResponse = 0x2021,
	k_EMsgGCToGCSignoutSpendRankWager = 0x2025,
	k_EMsgGCToGCGetFavoriteTeam = 0x2026,
	k_EMsgGCToGCGetFavoriteTeamResponse = 0x2027,
	k_EMsgSignOutEventGameData = 0x2028,
	k_EMsgClientToGCQuickStatsRequest = 0x202e,
	k_EMsgClientToGCQuickStatsResponse = 0x202f,
	k_EMsgGCToGCSubtractEventPointsFromUser = 0x2030,
	k_EMsgSelectionPriorityChoiceRequest = 0x2031,
	k_EMsgSelectionPriorityChoiceResponse = 0x2032,
	k_EMsgGCToGCCompendiumInGamePredictionResults = 0x2033,
	k_EMsgGameAutographReward = 0x2034,
	k_EMsgGameAutographRewardResponse = 0x2035,
	k_EMsgDestroyLobbyRequest = 0x2036,
	k_EMsgDestroyLobbyResponse = 0x2037,
	k_EMsgPurchaseItemWithEventPoints = 0x2038,
	k_EMsgPurchaseItemWithEventPointsResponse = 0x2039,
	k_EMsgServerToGCMatchPlayerItemPurchaseHistory = 0x203a,
	k_EMsgGCToGCGrantPlusHeroMatchResults = 0x203b,
	k_EMsgServerToGCMatchStateHistory = 0x203f,
	k_EMsgPurchaseHeroRandomRelic = 0x2042,
	k_EMsgPurchaseHeroRandomRelicResponse = 0x2043,
	k_EMsgClientToGCClaimEventActionUsingItem = 0x2044,
	k_EMsgClientToGCClaimEventActionUsingItemResponse = 0x2045,
	k_EMsgPartyReadyCheckRequest = 0x2046,
	k_EMsgPartyReadyCheckResponse = 0x2047,
	k_EMsgPartyReadyCheckAcknowledge = 0x2048,
	k_EMsgGetRecentPlayTimeFriendsRequest = 0x2049,
	k_EMsgGetRecentPlayTimeFriendsResponse = 0x204a,
	k_EMsgGCToClientCommendNotification = 0x204b,
	k_EMsgProfileRequest = 0x204c,
	k_EMsgProfileResponse = 0x204d,
	k_EMsgProfileUpdate = 0x204e,
	k_EMsgProfileUpdateResponse = 0x204f,
	k_EMsgHeroGlobalDataRequest = 0x2052,
	k_EMsgHeroGlobalDataResponse = 0x2053,
	k_EMsgClientToGCRequestPlusWeeklyChallengeResult = 0x2054,
	k_EMsgClientToGCRequestPlusWeeklyChallengeResultResponse = 0x2055,
	k_EMsgGCToGCGrantPlusPrepaidTime = 0x2056,
	k_EMsgPrivateMetadataKeyRequest = 0x2057,
	k_EMsgPrivateMetadataKeyResponse = 0x2058,
	k_EMsgGCToGCReconcilePlusStatus = 0x2059,
	k_EMsgGCToGCCheckPlusStatus = 0x205a,
	k_EMsgGCToGCCheckPlusStatusResponse = 0x205b,
	k_EMsgGCToGCReconcilePlusAutoGrantItems = 0x205c,
	k_EMsgGCToGCReconcilePlusStatusUnreliable = 0x205d,
	k_EMsgGCToClientCavernCrawlMapPathCompleted = 0x2060,
	k_EMsgClientToGCCavernCrawlClaimRoom = 0x2061,
	k_EMsgClientToGCCavernCrawlClaimRoomResponse = 0x2062,
	k_EMsgClientToGCCavernCrawlUseItemOnRoom = 0x2063,
	k_EMsgClientToGCCavernCrawlUseItemOnRoomResponse = 0x2064,
	k_EMsgClientToGCCavernCrawlUseItemOnPath = 0x2065,
	k_EMsgClientToGCCavernCrawlUseItemOnPathResponse = 0x2066,
	k_EMsgClientToGCCavernCrawlRequestMapState = 0x2067,
	k_EMsgClientToGCCavernCrawlRequestMapStateResponse = 0x2068,
	k_EMsgSignOutTips = 0x2069,
	k_EMsgClientToGCRequestEventPointLogV2 = 0x206a,
	k_EMsgClientToGCRequestEventPointLogResponseV2 = 0x206b,
	k_EMsgClientToGCRequestEventTipsSummary = 0x206c,
	k_EMsgClientToGCRequestEventTipsSummaryResponse = 0x206d,
	k_EMsgClientToGCRequestSocialFeed = 0x206f,
	k_EMsgClientToGCRequestSocialFeedResponse = 0x2070,
	k_EMsgClientToGCRequestSocialFeedComments = 0x2071,
	k_EMsgClientToGCRequestSocialFeedCommentsResponse = 0x2072,
	k_EMsgClientToGCCavernCrawlGetClaimedRoomCount = 0x2074,
	k_EMsgClientToGCCavernCrawlGetClaimedRoomCountResponse = 0x2075,
	k_EMsgGCToGCReconcilePlusAutoGrantItemsUnreliable = 0x2076,
	k_EMsgServerToGCAddBroadcastTimelineEvent = 0x2077,
	k_EMsgGCToServerUpdateSteamBroadcasting = 0x2078,
	k_EMsgClientToGCRecordContestVote = 0x2079,
	k_EMsgGCToClientRecordContestVoteResponse = 0x207a,
	k_EMsgGCToGCGrantAutograph = 0x207b,
	k_EMsgGCToGCGrantAutographResponse = 0x207c,
	k_EMsgSignOutConsumableUsage = 0x207d,
	k_EMsgLobbyEventGameDetails = 0x207e,
	k_EMsgDevGrantEventPoints = 0x207f,
	k_EMsgDevGrantEventPointsResponse = 0x2080,
	k_EMsgDevGrantEventAction = 0x2081,
	k_EMsgDevGrantEventActionResponse = 0x2082,
	k_EMsgDevResetEventState = 0x2083,
	k_EMsgDevResetEventStateResponse = 0x2084,
	k_EMsgGCToGCReconcileEventOwnership = 0x2085,
	k_EMsgConsumeEventSupportGrantItem = 0x2086,
	k_EMsgConsumeEventSupportGrantItemResponse = 0x2087,
	k_EMsgGCToClientClaimEventActionUsingItemCompleted = 0x2088,
	k_EMsgGCToClientCavernCrawlMapUpdated = 0x2089,
	k_EMsgServerToGCRequestPlayerRecentAccomplishments = 0x208a,
	k_EMsgServerToGCRequestPlayerRecentAccomplishmentsResponse = 0x208b,
	k_EMsgClientToGCRequestPlayerRecentAccomplishments = 0x208c,
	k_EMsgClientToGCRequestPlayerRecentAccomplishmentsResponse = 0x208d,
	k_EMsgClientToGCRequestPlayerHeroRecentAccomplishments = 0x208e,
	k_EMsgClientToGCRequestPlayerHeroRecentAccomplishmentsResponse = 0x208f,
	k_EMsgSignOutEventActionGrants = 0x2090,
	k_EMsgClientToGCRequestPlayerCoachMatches = 0x2091,
	k_EMsgClientToGCRequestPlayerCoachMatchesResponse = 0x2092,
	k_EMsgClientToGCSubmitCoachTeammateRating = 0x2095,
	k_EMsgClientToGCSubmitCoachTeammateRatingResponse = 0x2096,
	k_EMsgGCToClientCoachTeammateRatingsChanged = 0x2097,
	k_EMsgClientToGCRequestPlayerCoachMatch = 0x2099,
	k_EMsgClientToGCRequestPlayerCoachMatchResponse = 0x209a,
	k_EMsgClientToGCRequestContestVotes = 0x209b,
	k_EMsgClientToGCRequestContestVotesResponse = 0x209c,
	k_EMsgClientToGCMVPVoteTimeout = 0x209d,
	k_EMsgClientToGCMVPVoteTimeoutResponse = 0x209e,
	k_EMsgMatchMatchmakingStats = 0x20a8,
	k_EMsgClientToGCSubmitPlayerMatchSurvey = 0x20a9,
	k_EMsgClientToGCSubmitPlayerMatchSurveyResponse = 0x20aa,
	k_EMsgSQLGCToGCGrantAllHeroProgressAccount = 0x20ab,
	k_EMsgSQLGCToGCGrantAllHeroProgressVictory = 0x20ac,
	k_EMsgDevDeleteEventActions = 0x20ad,
	k_EMsgDevDeleteEventActionsResponse = 0x20ae,
	k_EMsgGCToGCGetAllHeroCurrent = 0x21bb,
	k_EMsgGCToGCGetAllHeroCurrentResponse = 0x21bc,
	k_EMsgGCSubmitPlayerAvoidRequest = 0x21bd,
	k_EMsgGCSubmitPlayerAvoidRequestResponse = 0x21be,
	k_EMsgGCToClientNotificationsUpdated = 0x21bf,
	k_EMsgGCtoGCAssociatedExploiterAccountInfo = 0x21c0,
	k_EMsgGCtoGCAssociatedExploiterAccountInfoResponse = 0x21c1,
	k_EMsgGCtoGCRequestRecalibrationCheck = 0x21c2,
	k_EMsgGCToClientVACReminder = 0x21c3,
	k_EMsgClientToGCUnderDraftBuy = 0x21c4,
	k_EMsgClientToGCUnderDraftBuyResponse = 0x21c5,
	k_EMsgClientToGCUnderDraftReroll = 0x21c6,
	k_EMsgClientToGCUnderDraftRerollResponse = 0x21c7,
	k_EMsgNeutralItemStats = 0x21c8,
	k_EMsgClientToGCCreateGuild = 0x21c9,
	k_EMsgClientToGCCreateGuildResponse = 0x21ca,
	k_EMsgClientToGCSetGuildInfo = 0x21cb,
	k_EMsgClientToGCSetGuildInfoResponse = 0x21cc,
	k_EMsgClientToGCAddGuildRole = 0x21cd,
	k_EMsgClientToGCAddGuildRoleResponse = 0x21ce,
	k_EMsgClientToGCModifyGuildRole = 0x21cf,
	k_EMsgClientToGCModifyGuildRoleResponse = 0x21d0,
	k_EMsgClientToGCRemoveGuildRole = 0x21d1,
	k_EMsgClientToGCRemoveGuildRoleResponse = 0x21d2,
	k_EMsgClientToGCJoinGuild = 0x21d3,
	k_EMsgClientToGCJoinGuildResponse = 0x21d4,
	k_EMsgClientToGCLeaveGuild = 0x21d5,
	k_EMsgClientToGCLeaveGuildResponse = 0x21d6,
	k_EMsgClientToGCInviteToGuild = 0x21d7,
	k_EMsgClientToGCInviteToGuildResponse = 0x21d8,
	k_EMsgClientToGCDeclineInviteToGuild = 0x21d9,
	k_EMsgClientToGCDeclineInviteToGuildResponse = 0x21da,
	k_EMsgClientToGCCancelInviteToGuild = 0x21db,
	k_EMsgClientToGCCancelInviteToGuildResponse = 0x21dc,
	k_EMsgClientToGCKickGuildMember = 0x21dd,
	k_EMsgClientToGCKickGuildMemberResponse = 0x21de,
	k_EMsgClientToGCSetGuildMemberRole = 0x21df,
	k_EMsgClientToGCSetGuildMemberRoleResponse = 0x21e0,
	k_EMsgClientToGCRequestGuildData = 0x21e1,
	k_EMsgClientToGCRequestGuildDataResponse = 0x21e2,
	k_EMsgGCToClientGuildDataUpdated = 0x21e3,
	k_EMsgClientToGCRequestGuildMembership = 0x21e4,
	k_EMsgClientToGCRequestGuildMembershipResponse = 0x21e5,
	k_EMsgGCToClientGuildMembershipUpdated = 0x21e6,
	k_EMsgClientToGCAcceptInviteToGuild = 0x21e9,
	k_EMsgClientToGCAcceptInviteToGuildResponse = 0x21ea,
	k_EMsgClientToGCSetGuildRoleOrder = 0x21eb,
	k_EMsgClientToGCSetGuildRoleOrderResponse = 0x21ec,
	k_EMsgClientToGCRequestGuildFeed = 0x21ed,
	k_EMsgClientToGCRequestGuildFeedResponse = 0x21ee,
	k_EMsgClientToGCRequestAccountGuildEventData = 0x21ef,
	k_EMsgClientToGCRequestAccountGuildEventDataResponse = 0x21f0,
	k_EMsgGCToClientAccountGuildEventDataUpdated = 0x21f1,
	k_EMsgClientToGCRequestActiveGuildContracts = 0x21f2,
	k_EMsgClientToGCRequestActiveGuildContractsResponse = 0x21f3,
	k_EMsgGCToClientActiveGuildContractsUpdated = 0x21f4,
	k_EMsgGCToClientGuildFeedUpdated = 0x21f5,
	k_EMsgClientToGCSelectGuildContract = 0x21f6,
	k_EMsgClientToGCSelectGuildContractResponse = 0x21f7,
	k_EMsgGCToGCCompleteGuildContracts = 0x21f8,
	k_EMsgClientToGCAddPlayerToGuildChat = 0x21fa,
	k_EMsgClientToGCAddPlayerToGuildChatResponse = 0x21fb,
	k_EMsgClientToGCUnderDraftSell = 0x21fc,
	k_EMsgClientToGCUnderDraftSellResponse = 0x21fd,
	k_EMsgClientToGCUnderDraftRequest = 0x21fe,
	k_EMsgClientToGCUnderDraftResponse = 0x21ff,
	k_EMsgClientToGCUnderDraftRedeemReward = 0x2200,
	k_EMsgClientToGCUnderDraftRedeemRewardResponse = 0x2201,
	k_EMsgGCToServerLobbyHeroBanRates = 0x2204,
	k_EMsgSignOutGuildContractProgress = 0x2207,
	k_EMsgSignOutMVPStats = 0x2208,
	k_EMsgClientToGCRequestActiveGuildChallenge = 0x2209,
	k_EMsgClientToGCRequestActiveGuildChallengeResponse = 0x220a,
	k_EMsgGCToClientActiveGuildChallengeUpdated = 0x220b,
	k_EMsgClientToGCRequestReporterUpdates = 0x220c,
	k_EMsgClientToGCRequestReporterUpdatesResponse = 0x220d,
	k_EMsgClientToGCAcknowledgeReporterUpdates = 0x220e,
	k_EMsgSignOutGuildChallengeProgress = 0x2210,
	k_EMsgClientToGCRequestGuildEventMembers = 0x2211,
	k_EMsgClientToGCRequestGuildEventMembersResponse = 0x2212,
	k_EMsgClientToGCReportGuildContent = 0x2215,
	k_EMsgClientToGCReportGuildContentResponse = 0x2216,
	k_EMsgClientToGCRequestAccountGuildPersonaInfo = 0x2217,
	k_EMsgClientToGCRequestAccountGuildPersonaInfoResponse = 0x2218,
	k_EMsgClientToGCRequestAccountGuildPersonaInfoBatch = 0x2219,
	k_EMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse = 0x221a,
	k_EMsgGCToClientUnderDraftGoldUpdated = 0x221b,
	k_EMsgGCToServerRecordTrainingData = 0x221c,
	k_EMsgSignOutBounties = 0x221d,
	k_EMsgLobbyFeaturedGamemodeProgress = 0x221e,
	k_EMsgLobbyGauntletProgress = 0x221f,
	k_EMsgClientToGCSubmitDraftTriviaMatchAnswer = 0x2220,
	k_EMsgClientToGCSubmitDraftTriviaMatchAnswerResponse = 0x2221,
	k_EMsgGCToGCSignoutSpendBounty = 0x2222,
	k_EMsgClientToGCApplyGauntletTicket = 0x2223,
	k_EMsgClientToGCUnderDraftRollBackBench = 0x2224,
	k_EMsgClientToGCUnderDraftRollBackBenchResponse = 0x2225,
	k_EMsgGCToGCGetEventActionScore = 0x2226,
	k_EMsgGCToGCGetEventActionScoreResponse = 0x2227,
	k_EMsgServerToGCGetGuildContracts = 0x2228,
	k_EMsgServerToGCGetGuildContractsResponse = 0x2229,
	k_EMsgLobbyEventGameData = 0x222a,
	k_EMsgGCToClientGuildMembersDataUpdated = 0x222b,
	k_EMsgSignOutReportActivityMarkers = 0x222c,
	k_EMsgSignOutDiretideCandy = 0x222d,
	k_EMsgGCToClientPostGameItemAwardNotification = 0x222e,
	k_EMsgClientToGCGetOWMatchDetails = 0x222f,
	k_EMsgClientToGCGetOWMatchDetailsResponse = 0x2230,
	k_EMsgClientToGCSubmitOWConviction = 0x2231,
	k_EMsgClientToGCSubmitOWConvictionResponse = 0x2232,
	k_EMsgGCToGCGetAccountSteamChina = 0x2233,
	k_EMsgGCToGCGetAccountSteamChinaResponse = 0x2234,
	k_EMsgClientToGCClaimLeaderboardRewards = 0x2235,
	k_EMsgClientToGCClaimLeaderboardRewardsResponse = 0x2236,
	k_EMsgClientToGCRecalibrateMMR = 0x2237,
	k_EMsgClientToGCRecalibrateMMRResponse = 0x2238,
	k_EMsgGCToGCGrantEventPointActionList = 0x2239,
	k_EMsgClientToGCChinaSSAURLRequest = 0x223c,
	k_EMsgClientToGCChinaSSAURLResponse = 0x223d,
	k_EMsgClientToGCChinaSSAAcceptedRequest = 0x223e,
	k_EMsgClientToGCChinaSSAAcceptedResponse = 0x223f,
	k_EMsgSignOutOverwatchSuspicion = 0x2240,
	k_EMsgServerToGCGetSuspicionConfig = 0x2241,
	k_EMsgServerToGCGetSuspicionConfigResponse = 0x2242,
	k_EMsgGCToGCGrantPlusHeroChallengeMatchResults = 0x2243,
	k_EMsgGCToClientOverwatchCasesAvailable = 0x2244,
	k_EMsgServerToGCAccountCheck = 0x2245,
	k_EMsgClientToGCStartWatchingOverwatch = 0x2246,
	k_EMsgClientToGCStopWatchingOverwatch = 0x2247,
	k_EMsgSignOutPerfData = 0x2248,
	k_EMsgClientToGCGetDPCFavorites = 0x2249,
	k_EMsgClientToGCGetDPCFavoritesResponse = 0x224a,
	k_EMsgClientToGCSetDPCFavoriteState = 0x224b,
	k_EMsgClientToGCSetDPCFavoriteStateResponse = 0x224c,
	k_EMsgClientToGCOverwatchReplayError = 0x224d,
	k_EMsgServerToGCPlayerChallengeHistory = 0x224e,
	k_EMsgSignOutBanData = 0x224f,
	k_EMsgWebapiDPCSeasonResults = 0x2250,
	k_EMsgClientToGCCoachFriend = 0x2251,
	k_EMsgClientToGCCoachFriendResponse = 0x2252,
	k_EMsgClientToGCRequestPrivateCoachingSession = 0x2253,
	k_EMsgClientToGCRequestPrivateCoachingSessionResponse = 0x2254,
	k_EMsgClientToGCAcceptPrivateCoachingSession = 0x2255,
	k_EMsgClientToGCAcceptPrivateCoachingSessionResponse = 0x2256,
	k_EMsgClientToGCLeavePrivateCoachingSession = 0x2257,
	k_EMsgClientToGCLeavePrivateCoachingSessionResponse = 0x2258,
	k_EMsgClientToGCGetCurrentPrivateCoachingSession = 0x2259,
	k_EMsgClientToGCGetCurrentPrivateCoachingSessionResponse = 0x225a,
	k_EMsgGCToClientPrivateCoachingSessionUpdated = 0x225b,
	k_EMsgClientToGCSubmitPrivateCoachingSessionRating = 0x225c,
	k_EMsgClientToGCSubmitPrivateCoachingSessionRatingResponse = 0x225d,
	k_EMsgClientToGCGetAvailablePrivateCoachingSessions = 0x225e,
	k_EMsgClientToGCGetAvailablePrivateCoachingSessionsResponse = 0x225f,
	k_EMsgClientToGCGetAvailablePrivateCoachingSessionsSummary = 0x2260,
	k_EMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse = 0x2261,
	k_EMsgClientToGCJoinPrivateCoachingSessionLobby = 0x2262,
	k_EMsgClientToGCJoinPrivateCoachingSessionLobbyResponse = 0x2263,
	k_EMsgClientToGCRespondToCoachFriendRequest = 0x2264,
	k_EMsgClientToGCRespondToCoachFriendRequestResponse = 0x2265,
	k_EMsgClientToGCSetEventActiveSeasonID = 0x2266,
	k_EMsgClientToGCSetEventActiveSeasonIDResponse = 0x2267,
	k_EMsgServerToGCMatchPlayerNeutralItemEquipHistory = 0x2268,
	k_EMsgServerToGCCompendiumChosenInGamePredictions = 0x2269,
	k_EMsgClientToGCCreateTeamPlayerCardPack = 0x226a,
	k_EMsgClientToGCCreateTeamPlayerCardPackResponse = 0x226b,
	k_EMsgGCToServerSubmitCheerData = 0x226c,
	k_EMsgGCToServerCheerConfig = 0x226d,
	k_EMsgServerToGCGetCheerConfig = 0x226e,
	k_EMsgServerToGCGetCheerConfigResponse = 0x226f,
	k_EMsgGCToGCGrantAutographByID = 0x2270,
	k_EMsgGCToServerCheerScalesOverride = 0x2271,
	k_EMsgGCToServerGetCheerState = 0x2272,
	k_EMsgServerToGCReportCheerState = 0x2273,
	k_EMsgGCToServerScenarioSave = 0x2274,
	k_EMsgGCToServerAbilityDraftLobbyData = 0x2275,
	k_EMsgSignOutReportCommunications = 0x2276,
	k_EMsgClientToGCBatchGetPlayerCardRosterRequest = 0x2277,
	k_EMsgClientToGCBatchGetPlayerCardRosterResponse = 0x2278,
	k_EMsgClientToGCGetStickerbookRequest = 0x2279,
	k_EMsgClientToGCGetStickerbookResponse = 0x227a,
	k_EMsgClientToGCCreateStickerbookPageRequest = 0x227b,
	k_EMsgClientToGCCreateStickerbookPageResponse = 0x227c,
	k_EMsgClientToGCDeleteStickerbookPageRequest = 0x227d,
	k_EMsgClientToGCDeleteStickerbookPageResponse = 0x227e,
	k_EMsgClientToGCPlaceStickersRequest = 0x227f,
	k_EMsgClientToGCPlaceStickersResponse = 0x2280,
	k_EMsgClientToGCPlaceCollectionStickersRequest = 0x2281,
	k_EMsgClientToGCPlaceCollectionStickersResponse = 0x2282,
	k_EMsgClientToGCOrderStickerbookTeamPageRequest = 0x2283,
	k_EMsgClientToGCOrderStickerbookTeamPageResponse = 0x2284,
	k_EMsgServerToGCGetStickerHeroes = 0x2285,
	k_EMsgServerToGCGetStickerHeroesResponse = 0x2286,
	k_EMsgClientToGCCandyShopGetUserData = 0x2288,
	k_EMsgClientToGCCandyShopGetUserDataResponse = 0x2289,
	k_EMsgGCToClientCandyShopUserDataUpdated = 0x228a,
	k_EMsgClientToGCCandyShopPurchaseReward = 0x228b,
	k_EMsgClientToGCCandyShopPurchaseRewardResponse = 0x228c,
	k_EMsgClientToGCCandyShopDoExchange = 0x228d,
	k_EMsgClientToGCCandyShopDoExchangeResponse = 0x228e,
	k_EMsgClientToGCCandyShopDoVariableExchange = 0x228f,
	k_EMsgClientToGCCandyShopDoVariableExchangeResponse = 0x2290,
	k_EMsgClientToGCCandyShopRerollRewards = 0x2291,
	k_EMsgClientToGCCandyShopRerollRewardsResponse = 0x2292,
	k_EMsgClientToGCSetHeroSticker = 0x2293,
	k_EMsgClientToGCSetHeroStickerResponse = 0x2294,
	k_EMsgClientToGCGetHeroStickers = 0x2295,
	k_EMsgClientToGCGetHeroStickersResponse = 0x2296,
	k_EMsgClientToGCSetFavoritePage = 0x2297,
	k_EMsgClientToGCSetFavoritePageResponse = 0x2298,
	k_EMsgClientToGCCandyShopDevGrantCandy = 0x2299,
	k_EMsgClientToGCCandyShopDevGrantCandyResponse = 0x229a,
	k_EMsgClientToGCCandyShopDevClearInventory = 0x229b,
	k_EMsgClientToGCCandyShopDevClearInventoryResponse = 0x229c,
	k_EMsgClientToGCCandyShopOpenBags = 0x229d,
	k_EMsgClientToGCCandyShopOpenBagsResponse = 0x229e,
	k_EMsgClientToGCCandyShopDevGrantCandyBags = 0x229f,
	k_EMsgClientToGCCandyShopDevGrantCandyBagsResponse = 0x22a0,
	k_EMsgClientToGCCandyShopDevShuffleExchange = 0x22a1,
	k_EMsgClientToGCCandyShopDevShuffleExchangeResponse = 0x22a2,
	k_EMsgClientToGCCandyShopDevGrantRerollCharges = 0x22a3,
	k_EMsgClientToGCCandyShopDevGrantRerollChargesResponse = 0x22a4,
	k_EMsgLobbyAdditionalAccountData = 0x22a5,
	k_EMsgServerToGCLobbyInitialized = 0x22a6,
	k_EMsgClientToGCCollectorsCacheAvailableDataRequest = 0x22a7,
	k_EMsgGCToClientCollectorsCacheAvailableDataResponse = 0x22a8,
	k_EMsgClientToGCUploadMatchClip = 0x22a9,
	k_EMsgGCToClientUploadMatchClipResponse = 0x22aa,
	k_EMsgGCToServerSetSteamLearnKeysChanged = 0x22ac,
	k_EMsgSignOutMuertaMinigame = 0x22ad,
	k_EMsgGCToServerLobbyHeroRoleStats = 0x22ae,
	k_EMsgClientToGCRankRequest = 0x22af,
	k_EMsgGCToClientRankResponse = 0x22b0,
	k_EMsgGCToClientRankUpdate = 0x22b1,
	k_EMsgSignOutMapStats = 0x22b2,
	k_EMsgClientToGCMapStatsRequest = 0x22b3,
	k_EMsgGCToClientMapStatsResponse = 0x22b4,
	k_EMsgGCToServerSetSteamLearnInferencing = 0x22b5,
	k_EMsgClientToGCShowcaseGetUserData = 0x22b6,
	k_EMsgClientToGCShowcaseGetUserDataResponse = 0x22b7,
	k_EMsgClientToGCShowcaseSetUserData = 0x22b8,
	k_EMsgClientToGCShowcaseSetUserDataResponse = 0x22b9,
	k_EMsgClientToGCFantasyCraftingGetData = 0x22ba,
	k_EMsgClientToGCFantasyCraftingGetDataResponse = 0x22bb,
	k_EMsgClientToGCFantasyCraftingPerformOperation = 0x22bc,
	k_EMsgClientToGCFantasyCraftingPerformOperationResponse = 0x22bd,
	k_EMsgGCToClientFantasyCraftingGetDataUpdated = 0x22be,
	k_EMsgClientToGCFantasyCraftingDevModifyTablet = 0x22bf,
	k_EMsgClientToGCFantasyCraftingDevModifyTabletResponse = 0x22c0,
	k_EMsgClientToGCRoadToTIGetQuests = 0x22c1,
	k_EMsgClientToGCRoadToTIGetQuestsResponse = 0x22c2,
	k_EMsgClientToGCRoadToTIGetActiveQuest = 0x22c3,
	k_EMsgClientToGCRoadToTIGetActiveQuestResponse = 0x22c4,
	k_EMsgClientToGCBingoGetUserData = 0x22c5,
	k_EMsgClientToGCBingoGetUserDataResponse = 0x22c6,
	k_EMsgClientToGCBingoClaimRow = 0x22c7,
	k_EMsgClientToGCBingoClaimRowResponse = 0x22c8,
	k_EMsgClientToGCBingoDevRerollCard = 0x22c9,
	k_EMsgClientToGCBingoDevRerollCardResponse = 0x22ca,
	k_EMsgClientToGCBingoGetStatsData = 0x22cb,
	k_EMsgClientToGCBingoGetStatsDataResponse = 0x22cc,
	k_EMsgGCToClientBingoUserDataUpdated = 0x22cd,
	k_EMsgGCToClientRoadToTIQuestDataUpdated = 0x22ce,
	k_EMsgClientToGCRoadToTIUseItem = 0x22cf,
	k_EMsgClientToGCRoadToTIUseItemResponse = 0x22d0,
	k_EMsgClientToGCShowcaseSubmitReport = 0x22d1,
	k_EMsgClientToGCShowcaseSubmitReportResponse = 0x22d2,
	k_EMsgClientToGCShowcaseAdminGetReportsRollupList = 0x22d3,
	k_EMsgClientToGCShowcaseAdminGetReportsRollupListResponse = 0x22d4,
	k_EMsgClientToGCShowcaseAdminGetReportsRollup = 0x22d5,
	k_EMsgClientToGCShowcaseAdminGetReportsRollupResponse = 0x22d6,
	k_EMsgClientToGCShowcaseAdminGetUserDetails = 0x22d7,
	k_EMsgClientToGCShowcaseAdminGetUserDetailsResponse = 0x22d8,
	k_EMsgClientToGCShowcaseAdminConvict = 0x22d9,
	k_EMsgClientToGCShowcaseAdminConvictResponse = 0x22da,
	k_EMsgClientToGCShowcaseAdminExonerate = 0x22db,
	k_EMsgClientToGCShowcaseAdminExonerateResponse = 0x22dc,
	k_EMsgClientToGCShowcaseAdminReset = 0x22dd,
	k_EMsgClientToGCShowcaseAdminResetResponse = 0x22de,
	k_EMsgClientToGCShowcaseAdminLockAccount = 0x22df,
	k_EMsgClientToGCShowcaseAdminLockAccountResponse = 0x22e0,
	k_EMsgClientToGCFantasyCraftingSelectPlayer = 0x22e1,
	k_EMsgClientToGCFantasyCraftingSelectPlayerResponse = 0x22e2,
	k_EMsgClientToGCFantasyCraftingGenerateTablets = 0x22e3,
	k_EMsgClientToGCFantasyCraftingGenerateTabletsResponse = 0x22e4,
	k_EMsgClientToGcFantasyCraftingUpgradeTablets = 0x22e5,
	k_EMsgClientToGcFantasyCraftingUpgradeTabletsResponse = 0x22e6,
	k_EMsgClientToGCFantasyCraftingRerollOptions = 0x22e8,
	k_EMsgClientToGCFantasyCraftingRerollOptionsResponse = 0x22e9,
	k_EMsgClientToGCRoadToTIDevForceQuest = 0x22e7,
	k_EMsgLobbyRoadToTIMatchQuestData = 0x22eb,
	k_EMsgClientToGCShowcaseModerationGetQueue = 0x22ec,
	k_EMsgClientToGCShowcaseModerationGetQueueResponse = 0x22ed,
	k_EMsgClientToGCShowcaseModerationApplyModeration = 0x22ee,
	k_EMsgClientToGCShowcaseModerationApplyModerationResponse = 0x22ef,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class EPoorNetworkConditionsType : uint32_t
{
	k_EPoorNetworkConditions_None = 0x0,
	k_EPoorNetworkConditions_Unknown = 0x1,
	k_EPoorNetworkConditions_MassDisconnect = 0x2,
	k_EPoorNetworkConditions_ExcessBadQosIntervals = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class EPingSource : uint32_t
{
	k_ePingSource_Default = 0x0,
	k_ePingSource_Warning = 0x1,
	k_ePingSource_Wheel = 0x2,
	k_ePingSource_System = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class EDOTAStatPopupTypes : uint32_t
{
	k_EDOTA_SPT_Textline = 0x0,
	k_EDOTA_SPT_Basic = 0x1,
	k_EDOTA_SPT_Poll = 0x2,
	k_EDOTA_SPT_Grid = 0x3,
	k_EDOTA_SPT_DualImage = 0x4,
	k_EDOTA_SPT_Movie = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x29
enum class dotaunitorder_t : uint32_t
{
	DOTA_UNIT_ORDER_NONE = 0x0,
	DOTA_UNIT_ORDER_MOVE_TO_POSITION = 0x1,
	DOTA_UNIT_ORDER_MOVE_TO_TARGET = 0x2,
	DOTA_UNIT_ORDER_ATTACK_MOVE = 0x3,
	DOTA_UNIT_ORDER_ATTACK_TARGET = 0x4,
	DOTA_UNIT_ORDER_CAST_POSITION = 0x5,
	DOTA_UNIT_ORDER_CAST_TARGET = 0x6,
	DOTA_UNIT_ORDER_CAST_TARGET_TREE = 0x7,
	DOTA_UNIT_ORDER_CAST_NO_TARGET = 0x8,
	DOTA_UNIT_ORDER_CAST_TOGGLE = 0x9,
	DOTA_UNIT_ORDER_HOLD_POSITION = 0xa,
	DOTA_UNIT_ORDER_TRAIN_ABILITY = 0xb,
	DOTA_UNIT_ORDER_DROP_ITEM = 0xc,
	DOTA_UNIT_ORDER_GIVE_ITEM = 0xd,
	DOTA_UNIT_ORDER_PICKUP_ITEM = 0xe,
	DOTA_UNIT_ORDER_PICKUP_RUNE = 0xf,
	DOTA_UNIT_ORDER_PURCHASE_ITEM = 0x10,
	DOTA_UNIT_ORDER_SELL_ITEM = 0x11,
	DOTA_UNIT_ORDER_DISASSEMBLE_ITEM = 0x12,
	DOTA_UNIT_ORDER_MOVE_ITEM = 0x13,
	DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO = 0x14,
	DOTA_UNIT_ORDER_STOP = 0x15,
	DOTA_UNIT_ORDER_TAUNT = 0x16,
	DOTA_UNIT_ORDER_BUYBACK = 0x17,
	DOTA_UNIT_ORDER_GLYPH = 0x18,
	DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH = 0x19,
	DOTA_UNIT_ORDER_CAST_RUNE = 0x1a,
	DOTA_UNIT_ORDER_PING_ABILITY = 0x1b,
	DOTA_UNIT_ORDER_MOVE_TO_DIRECTION = 0x1c,
	DOTA_UNIT_ORDER_PATROL = 0x1d,
	DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION = 0x1e,
	DOTA_UNIT_ORDER_RADAR = 0x1f,
	DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK = 0x20,
	DOTA_UNIT_ORDER_CONTINUE = 0x21,
	DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED = 0x22,
	DOTA_UNIT_ORDER_CAST_RIVER_PAINT = 0x23,
	DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT = 0x24,
	DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN = 0x25,
	DOTA_UNIT_ORDER_TAKE_ITEM_FROM_NEUTRAL_ITEM_STASH = 0x26,
	DOTA_UNIT_ORDER_MOVE_RELATIVE = 0x27,
	DOTA_UNIT_ORDER_CAST_TOGGLE_ALT = 0x28,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EDOTAVersusScenePlayerBehavior : uint32_t
{
	VS_PLAYER_BEHAVIOR_PLAY_ACTIVITY = 0x1,
	VS_PLAYER_BEHAVIOR_CHAT_WHEEL = 0x2,
	VS_PLAYER_BEHAVIOR_PLAYBACK_RATE = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x64
enum class EDotaClientMessages : uint32_t
{
	DOTA_CM_MapLine = 0x12d,
	DOTA_CM_AspectRatio = 0x12e,
	DOTA_CM_MapPing = 0x12f,
	DOTA_CM_UnitsAutoAttack = 0x130,
	DOTA_CM_SearchString = 0x133,
	DOTA_CM_Pause = 0x134,
	DOTA_CM_ShopViewMode = 0x135,
	DOTA_CM_SetUnitShareFlag = 0x136,
	DOTA_CM_SwapRequest = 0x137,
	DOTA_CM_SwapAccept = 0x138,
	DOTA_CM_WorldLine = 0x139,
	DOTA_CM_RequestGraphUpdate = 0x13a,
	DOTA_CM_ItemAlert = 0x13b,
	DOTA_CM_ChatWheel = 0x13c,
	DOTA_CM_SendStatPopup = 0x13d,
	DOTA_CM_BeginLastHitChallenge = 0x13e,
	DOTA_CM_UpdateQuickBuy = 0x13f,
	DOTA_CM_UpdateCoachListen = 0x140,
	DOTA_CM_CoachHUDPing = 0x141,
	DOTA_CM_RecordVote = 0x142,
	DOTA_CM_UnitsAutoAttackAfterSpell = 0x143,
	DOTA_CM_WillPurchaseAlert = 0x144,
	DOTA_CM_PlayerShowCase = 0x145,
	DOTA_CM_TeleportRequiresHalt = 0x146,
	DOTA_CM_CameraZoomAmount = 0x147,
	DOTA_CM_BroadcasterUsingCamerman = 0x148,
	DOTA_CM_BroadcasterUsingAssistedCameraOperator = 0x149,
	DOTA_CM_EnemyItemAlert = 0x14a,
	DOTA_CM_FreeInventory = 0x14b,
	DOTA_CM_BuyBackStateAlert = 0x14c,
	DOTA_CM_QuickBuyAlert = 0x14d,
	DOTA_CM_HeroStatueLike = 0x14e,
	DOTA_CM_ModifierAlert = 0x14f,
	DOTA_CM_TeamShowcaseEditor = 0x150,
	DOTA_CM_HPManaAlert = 0x151,
	DOTA_CM_GlyphAlert = 0x152,
	DOTA_CM_TeamShowcaseClientData = 0x153,
	DOTA_CM_PlayTeamShowcase = 0x154,
	DOTA_CM_EventCNY2015Cmd = 0x155,
	DOTA_CM_FillEmptySlotsWithBots = 0x156,
	DOTA_CM_DemoHero = 0x157,
	DOTA_CM_AbilityLearnModeToggled = 0x158,
	DOTA_CM_AbilityStartUse = 0x159,
	DOTA_CM_ChallengeSelect = 0x15a,
	DOTA_CM_ChallengeReroll = 0x15b,
	DOTA_CM_ClickedBuff = 0x15c,
	DOTA_CM_CoinWager = 0x15d,
	DOTA_CM_ExecuteOrders = 0x15e,
	DOTA_CM_XPAlert = 0x15f,
	DOTA_CM_EventPointsTip = 0x161,
	DOTA_CM_KillMyHero = 0x163,
	DOTA_CM_QuestStatus = 0x164,
	DOTA_CM_ToggleAutoattack = 0x165,
	DOTA_CM_SpecialAbility = 0x166,
	DOTA_CM_KillcamDamageTaken = 0x167,
	DOTA_CM_SetEnemyStartingPosition = 0x168,
	DOTA_CM_SetDesiredWardPlacement = 0x169,
	DOTA_CM_RollDice = 0x16a,
	DOTA_CM_FlipCoin = 0x16b,
	DOTA_CM_RequestItemSuggestions = 0x16c,
	DOTA_CM_MakeTeamCaptain = 0x16d,
	DOTA_CM_CoinWagerToken = 0x16e,
	DOTA_CM_RankWager = 0x16f,
	DOTA_CM_DismissAllStatPopups = 0x170,
	DOTA_CM_HelpTipSystemStateChanged = 0x171,
	DOTA_CM_ChannelRequiresHalt = 0x172,
	DOTA_CM_RequestBulkCombatLog = 0x173,
	DOTA_CM_AbilityDraftRequestAbility = 0x174,
	DOTA_CM_GuideSelectOption = 0x175,
	DOTA_CM_GuideSelected = 0x176,
	DOTA_CM_DamageReport = 0x177,
	DOTA_CM_SalutePlayer = 0x178,
	DOTA_CM_SprayWheel = 0x179,
	DOTA_CM_TipAlert = 0x17a,
	DOTA_CM_EmptyTeleportAlert = 0x17b,
	DOTA_CM_RadarAlert = 0x17c,
	DOTA_CM_TalentTreeAlert = 0x17d,
	DOTA_CM_SetCavernMapVariant = 0x17e,
	DOTA_CM_PauseGameOrder = 0x17f,
	DOTA_CM_VersusScene_PlayerBehavior = 0x180,
	DOTA_CM_PlayerBounty = 0x181,
	DOTA_CM_PlayerBountyCancel = 0x182,
	DOTA_CM_EmptyItemSlotAlert = 0x184,
	DOTA_CM_AddOverwatchReportMarker = 0x185,
	DOTA_CM_AghsStatusAlert = 0x186,
	DOTA_CM_PerfReport = 0x187,
	DOTA_CM_ContextualTips_Subscribe = 0x189,
	DOTA_CM_ChatMessage = 0x18a,
	DOTA_CM_AddCommunicationsReportMarker = 0x18b,
	DOTA_CM_AddCommunicationsBlockMarker = 0x18c,
	DOTA_CM_NeutralCampAlert = 0x18d,
	DOTA_CM_DuelAccepted = 0x18e,
	DOTA_CM_ChooseNeutralItem = 0x18f,
	DOTA_CM_PlayerDraftPick = 0x320,
	DOTA_CM_PlayerDraftSuggest = 0x321,
	DOTA_CM_PlayerDraftPreferRole = 0x322,
	DOTA_CM_PlayerDraftPreferTeam = 0x323,
	DOTA_CM_ChatWheelAlert = 0x324,
	DOTA_CM_AbilityAlert = 0x325,
	DOTA_CM_AllyAbilityAlert = 0x326,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9c
enum class EDotaUserMessages : uint32_t
{
	DOTA_UM_AddUnitToSelection = 0x1d0,
	DOTA_UM_AIDebugLine = 0x1d1,
	DOTA_UM_ChatEvent = 0x1d2,
	DOTA_UM_CombatHeroPositions = 0x1d3,
	DOTA_UM_CombatLogData = 0x1d4,
	DOTA_UM_CombatLogBulkData = 0x1d6,
	DOTA_UM_CreateLinearProjectile = 0x1d7,
	DOTA_UM_DestroyLinearProjectile = 0x1d8,
	DOTA_UM_DodgeTrackingProjectiles = 0x1d9,
	DOTA_UM_GlobalLightColor = 0x1da,
	DOTA_UM_GlobalLightDirection = 0x1db,
	DOTA_UM_InvalidCommand = 0x1dc,
	DOTA_UM_LocationPing = 0x1dd,
	DOTA_UM_MapLine = 0x1de,
	DOTA_UM_MiniKillCamInfo = 0x1df,
	DOTA_UM_MinimapDebugPoint = 0x1e0,
	DOTA_UM_MinimapEvent = 0x1e1,
	DOTA_UM_NevermoreRequiem = 0x1e2,
	DOTA_UM_OverheadEvent = 0x1e3,
	DOTA_UM_SetNextAutobuyItem = 0x1e4,
	DOTA_UM_SharedCooldown = 0x1e5,
	DOTA_UM_SpectatorPlayerClick = 0x1e6,
	DOTA_UM_TutorialTipInfo = 0x1e7,
	DOTA_UM_UnitEvent = 0x1e8,
	DOTA_UM_ParticleManager = 0x1e9,
	DOTA_UM_BotChat = 0x1ea,
	DOTA_UM_HudError = 0x1eb,
	DOTA_UM_ItemPurchased = 0x1ec,
	DOTA_UM_Ping = 0x1ed,
	DOTA_UM_ItemFound = 0x1ee,
	DOTA_UM_CharacterSpeakConcept = 0x1ef,
	DOTA_UM_SwapVerify = 0x1f0,
	DOTA_UM_WorldLine = 0x1f1,
	DOTA_UM_TournamentDrop = 0x1f2,
	DOTA_UM_ItemAlert = 0x1f3,
	DOTA_UM_HalloweenDrops = 0x1f4,
	DOTA_UM_ChatWheel = 0x1f5,
	DOTA_UM_ReceivedXmasGift = 0x1f6,
	DOTA_UM_UpdateSharedContent = 0x1f7,
	DOTA_UM_TutorialRequestExp = 0x1f8,
	DOTA_UM_TutorialPingMinimap = 0x1f9,
	DOTA_UM_GamerulesStateChanged = 0x1fa,
	DOTA_UM_ShowSurvey = 0x1fb,
	DOTA_UM_TutorialFade = 0x1fc,
	DOTA_UM_AddQuestLogEntry = 0x1fd,
	DOTA_UM_SendStatPopup = 0x1fe,
	DOTA_UM_TutorialFinish = 0x1ff,
	DOTA_UM_SendRoshanPopup = 0x200,
	DOTA_UM_SendGenericToolTip = 0x201,
	DOTA_UM_SendFinalGold = 0x202,
	DOTA_UM_CustomMsg = 0x203,
	DOTA_UM_CoachHUDPing = 0x204,
	DOTA_UM_ClientLoadGridNav = 0x205,
	DOTA_UM_TE_Projectile = 0x206,
	DOTA_UM_TE_ProjectileLoc = 0x207,
	DOTA_UM_TE_DotaBloodImpact = 0x208,
	DOTA_UM_TE_UnitAnimation = 0x209,
	DOTA_UM_TE_UnitAnimationEnd = 0x20a,
	DOTA_UM_AbilityPing = 0x20b,
	DOTA_UM_ShowGenericPopup = 0x20c,
	DOTA_UM_VoteStart = 0x20d,
	DOTA_UM_VoteUpdate = 0x20e,
	DOTA_UM_VoteEnd = 0x20f,
	DOTA_UM_BoosterState = 0x210,
	DOTA_UM_WillPurchaseAlert = 0x211,
	DOTA_UM_TutorialMinimapPosition = 0x212,
	DOTA_UM_PlayerMMR = 0x213,
	DOTA_UM_AbilitySteal = 0x214,
	DOTA_UM_CourierKilledAlert = 0x215,
	DOTA_UM_EnemyItemAlert = 0x216,
	DOTA_UM_StatsMatchDetails = 0x217,
	DOTA_UM_MiniTaunt = 0x218,
	DOTA_UM_BuyBackStateAlert = 0x219,
	DOTA_UM_SpeechBubble = 0x21a,
	DOTA_UM_CustomHeaderMessage = 0x21b,
	DOTA_UM_QuickBuyAlert = 0x21c,
	DOTA_UM_StatsHeroDetails = 0x21d,
	DOTA_UM_PredictionResult = 0x21e,
	DOTA_UM_ModifierAlert = 0x21f,
	DOTA_UM_HPManaAlert = 0x220,
	DOTA_UM_GlyphAlert = 0x221,
	DOTA_UM_BeastChat = 0x222,
	DOTA_UM_SpectatorPlayerUnitOrders = 0x223,
	DOTA_UM_CustomHudElement_Create = 0x224,
	DOTA_UM_CustomHudElement_Modify = 0x225,
	DOTA_UM_CustomHudElement_Destroy = 0x226,
	DOTA_UM_CompendiumState = 0x227,
	DOTA_UM_ProjectionAbility = 0x228,
	DOTA_UM_ProjectionEvent = 0x229,
	DOTA_UM_CombatLogDataHLTV = 0x22a,
	DOTA_UM_XPAlert = 0x22b,
	DOTA_UM_UpdateQuestProgress = 0x22c,
	DOTA_UM_MatchMetadata = 0x22d,
	DOTA_UM_MatchDetails = 0x22e,
	DOTA_UM_QuestStatus = 0x22f,
	DOTA_UM_SuggestHeroPick = 0x230,
	DOTA_UM_SuggestHeroRole = 0x231,
	DOTA_UM_KillcamDamageTaken = 0x232,
	DOTA_UM_SelectPenaltyGold = 0x233,
	DOTA_UM_RollDiceResult = 0x234,
	DOTA_UM_FlipCoinResult = 0x235,
	DOTA_UM_RequestItemSuggestions = 0x236,
	DOTA_UM_TeamCaptainChanged = 0x237,
	DOTA_UM_SendRoshanSpectatorPhase = 0x238,
	DOTA_UM_ChatWheelCooldown = 0x239,
	DOTA_UM_DismissAllStatPopups = 0x23a,
	DOTA_UM_TE_DestroyProjectile = 0x23b,
	DOTA_UM_HeroRelicProgress = 0x23c,
	DOTA_UM_AbilityDraftRequestAbility = 0x23d,
	DOTA_UM_ItemSold = 0x23e,
	DOTA_UM_DamageReport = 0x23f,
	DOTA_UM_SalutePlayer = 0x240,
	DOTA_UM_TipAlert = 0x241,
	DOTA_UM_ReplaceQueryUnit = 0x242,
	DOTA_UM_EmptyTeleportAlert = 0x243,
	DOTA_UM_MarsArenaOfBloodAttack = 0x244,
	DOTA_UM_ESArcanaCombo = 0x245,
	DOTA_UM_ESArcanaComboSummary = 0x246,
	DOTA_UM_HighFiveLeftHanging = 0x247,
	DOTA_UM_HighFiveCompleted = 0x248,
	DOTA_UM_ShovelUnearth = 0x249,
	DOTA_EM_InvokerSpellCast = 0x24a,
	DOTA_UM_RadarAlert = 0x24b,
	DOTA_UM_AllStarEvent = 0x24c,
	DOTA_UM_TalentTreeAlert = 0x24d,
	DOTA_UM_QueuedOrderRemoved = 0x24e,
	DOTA_UM_DebugChallenge = 0x24f,
	DOTA_UM_OMArcanaCombo = 0x250,
	DOTA_UM_FoundNeutralItem = 0x251,
	DOTA_UM_OutpostCaptured = 0x252,
	DOTA_UM_OutpostGrantedXP = 0x253,
	DOTA_UM_MoveCameraToUnit = 0x254,
	DOTA_UM_PauseMinigameData = 0x255,
	DOTA_UM_VersusScene_PlayerBehavior = 0x256,
	DOTA_UM_QoP_ArcanaSummary = 0x258,
	DOTA_UM_HotPotato_Created = 0x259,
	DOTA_UM_HotPotato_Exploded = 0x25a,
	DOTA_UM_WK_Arcana_Progress = 0x25b,
	DOTA_UM_GuildChallenge_Progress = 0x25c,
	DOTA_UM_WRArcanaProgress = 0x25d,
	DOTA_UM_WRArcanaSummary = 0x25e,
	DOTA_UM_EmptyItemSlotAlert = 0x25f,
	DOTA_UM_AghsStatusAlert = 0x260,
	DOTA_UM_PingConfirmation = 0x261,
	DOTA_UM_MutedPlayers = 0x262,
	DOTA_UM_ContextualTip = 0x263,
	DOTA_UM_ChatMessage = 0x264,
	DOTA_UM_NeutralCampAlert = 0x265,
	DOTA_UM_RockPaperScissorsStarted = 0x266,
	DOTA_UM_RockPaperScissorsFinished = 0x267,
	DOTA_UM_DuelOpponentKilled = 0x268,
	DOTA_UM_DuelAccepted = 0x269,
	DOTA_UM_DuelRequested = 0x26a,
	DOTA_UM_MuertaReleaseEvent_AssignedTargetKilled = 0x26b,
	DOTA_UM_PlayerDraftSuggestPick = 0x26c,
	DOTA_UM_PlayerDraftPick = 0x26d,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6f
enum class DOTA_CHAT_MESSAGE : uint32_t
{
	CHAT_MESSAGE_INVALID = 0xffffffffffffffff,
	CHAT_MESSAGE_HERO_KILL = 0x0,
	CHAT_MESSAGE_HERO_DENY = 0x1,
	CHAT_MESSAGE_BARRACKS_KILL = 0x2,
	CHAT_MESSAGE_TOWER_KILL = 0x3,
	CHAT_MESSAGE_TOWER_DENY = 0x4,
	CHAT_MESSAGE_FIRSTBLOOD = 0x5,
	CHAT_MESSAGE_STREAK_KILL = 0x6,
	CHAT_MESSAGE_BUYBACK = 0x7,
	CHAT_MESSAGE_AEGIS = 0x8,
	CHAT_MESSAGE_ROSHAN_KILL = 0x9,
	CHAT_MESSAGE_COURIER_LOST = 0xa,
	CHAT_MESSAGE_COURIER_RESPAWNED = 0xb,
	CHAT_MESSAGE_GLYPH_USED = 0xc,
	CHAT_MESSAGE_ITEM_PURCHASE = 0xd,
	CHAT_MESSAGE_CONNECT = 0xe,
	CHAT_MESSAGE_DISCONNECT = 0xf,
	CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 0x10,
	CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 0x11,
	CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 0x12,
	CHAT_MESSAGE_RECONNECT = 0x13,
	CHAT_MESSAGE_PLAYER_LEFT = 0x14,
	CHAT_MESSAGE_SAFE_TO_LEAVE = 0x15,
	CHAT_MESSAGE_RUNE_PICKUP = 0x16,
	CHAT_MESSAGE_RUNE_BOTTLE = 0x17,
	CHAT_MESSAGE_RUNE_DENY = 0x72,
	CHAT_MESSAGE_INTHEBAG = 0x18,
	CHAT_MESSAGE_SECRETSHOP = 0x19,
	CHAT_MESSAGE_ITEM_AUTOPURCHASED = 0x1a,
	CHAT_MESSAGE_ITEMS_COMBINED = 0x1b,
	CHAT_MESSAGE_SUPER_CREEPS = 0x1c,
	CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 0x1d,
	CHAT_MESSAGE_CANTPAUSE = 0x1f,
	CHAT_MESSAGE_NOPAUSESLEFT = 0x20,
	CHAT_MESSAGE_CANTPAUSEYET = 0x21,
	CHAT_MESSAGE_PAUSED = 0x22,
	CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 0x23,
	CHAT_MESSAGE_UNPAUSED = 0x24,
	CHAT_MESSAGE_AUTO_UNPAUSED = 0x25,
	CHAT_MESSAGE_YOUPAUSED = 0x26,
	CHAT_MESSAGE_CANTUNPAUSETEAM = 0x27,
	CHAT_MESSAGE_VOICE_TEXT_BANNED = 0x29,
	CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 0x2a,
	CHAT_MESSAGE_REPORT_REMINDER = 0x2b,
	CHAT_MESSAGE_ECON_ITEM = 0x2c,
	CHAT_MESSAGE_TAUNT = 0x2d,
	CHAT_MESSAGE_RANDOM = 0x2e,
	CHAT_MESSAGE_RD_TURN = 0x2f,
	CHAT_MESSAGE_DROP_RATE_BONUS = 0x31,
	CHAT_MESSAGE_NO_BATTLE_POINTS = 0x32,
	CHAT_MESSAGE_DENIED_AEGIS = 0x33,
	CHAT_MESSAGE_INFORMATIONAL = 0x34,
	CHAT_MESSAGE_AEGIS_STOLEN = 0x35,
	CHAT_MESSAGE_ROSHAN_CANDY = 0x36,
	CHAT_MESSAGE_ITEM_GIFTED = 0x37,
	CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 0x38,
	CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 0x39,
	CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 0x3a,
	CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 0x3b,
	CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 0x3e,
	CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 0x3f,
	CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 0x40,
	CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 0x41,
	CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 0x42,
	CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 0x43,
	CHAT_MESSAGE_PLAYER_LEFT_AFK = 0x49,
	CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 0x4a,
	CHAT_MESSAGE_PLAYER_ABANDONED = 0x4b,
	CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 0x4c,
	CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 0x4d,
	CHAT_MESSAGE_WILL_NOT_BE_SCORED = 0x4e,
	CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 0x4f,
	CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 0x50,
	CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 0x51,
	CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 0x52,
	CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 0x53,
	CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 0x54,
	CHAT_MESSAGE_COMPENDIUM_LEVEL = 0x55,
	CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 0x56,
	CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 0x57,
	CHAT_MESSAGE_ASSASSIN_SUCCESS = 0x58,
	CHAT_MESSAGE_ASSASSIN_DENIED = 0x59,
	CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 0x5a,
	CHAT_MESSAGE_EFFIGY_KILL = 0x5b,
	CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 0x5c,
	CHAT_MESSAGE_YEAR_BEAST_KILLED = 0x5d,
	CHAT_MESSAGE_PAUSE_COUNTDOWN = 0x5e,
	CHAT_MESSAGE_COINS_WAGERED = 0x5f,
	CHAT_MESSAGE_HERO_NOMINATED_BAN = 0x60,
	CHAT_MESSAGE_HERO_BANNED = 0x61,
	CHAT_MESSAGE_HERO_BAN_COUNT = 0x62,
	CHAT_MESSAGE_RIVER_PAINTED = 0x63,
	CHAT_MESSAGE_SCAN_USED = 0x64,
	CHAT_MESSAGE_SHRINE_KILLED = 0x65,
	CHAT_MESSAGE_WAGER_TOKEN_SPENT = 0x66,
	CHAT_MESSAGE_RANK_WAGER = 0x67,
	CHAT_MESSAGE_NEW_PLAYER_REMINDER = 0x68,
	CHAT_MESSAGE_OBSERVER_WARD_KILLED = 0x69,
	CHAT_MESSAGE_SENTRY_WARD_KILLED = 0x6a,
	CHAT_MESSAGE_ITEM_PLACED_IN_NEUTRAL_STASH = 0x6b,
	CHAT_MESSAGE_HERO_CHOICE_INVALID = 0x6c,
	CHAT_MESSAGE_BOUNTY = 0x6d,
	CHAT_MESSAGE_ABILITY_DRAFT_START = 0x6e,
	CHAT_MESSAGE_HERO_FOUND_CANDY = 0x6f,
	CHAT_MESSAGE_ABILITY_DRAFT_RANDOMED = 0x70,
	CHAT_MESSAGE_PRIVATE_COACH_CONNECTED = 0x71,
	CHAT_MESSAGE_CANT_PAUSE_TOO_EARLY = 0x73,
	CHAT_MESSAGE_HERO_KILL_WITH_PENGUIN = 0x74,
	CHAT_MESSAGE_MINIBOSS_KILL = 0x75,
	CHAT_MESSAGE_PLAYER_IN_GAME_BAN_TEXT = 0x76,
	CHAT_MESSAGE_BANNER_PLANTED = 0x77,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class DOTA_NO_BATTLE_POINTS_REASONS : uint32_t
{
	NO_BATTLE_POINTS_WRONG_LOBBY_TYPE = 0x1,
	NO_BATTLE_POINTS_PRACTICE_BOTS = 0x2,
	NO_BATTLE_POINTS_CHEATS_ENABLED = 0x3,
	NO_BATTLE_POINTS_LOW_PRIORITY = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTA_CHAT_INFORMATIONAL : uint32_t
{
	INFO_COOP_BATTLE_POINTS_RULES = 0x1,
	INFO_FROSTIVUS_ABANDON_REMINDER = 0x2,
	INFO_RANKED_REMINDER = 0x3,
	INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER = 0x4,
	INFO_CUSTOM_GAME_PENALTY_REMINDER = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
enum class DOTA_ABILITY_PING_TYPE : uint32_t
{
	ABILITY_PING_READY = 0x1,
	ABILITY_PING_MANA = 0x2,
	ABILITY_PING_COOLDOWN = 0x3,
	ABILITY_PING_ENEMY = 0x4,
	ABILITY_PING_UNLEARNED = 0x5,
	ABILITY_PING_INBACKPACK = 0x6,
	ABILITY_PING_INSTASH = 0x7,
	ABILITY_PING_ONCOURIER = 0x8,
	ABILITY_PING_ALLY = 0x9,
	ABILITY_PING_LEARN_READY = 0xa,
	ABILITY_PING_WILL_LEARN = 0xb,
	ABILITY_PING_FUTURE_LEARN = 0xc,
	ABILITY_PING_NEUTRAL_OFFER = 0xd,
	ABILITY_PING_NEUTRAL_REQUEST = 0xe,
	ABILITY_PING_NEUTRAL_EQUIP = 0xf,
	ABILITY_PING_INCOURIERBACKPACK = 0x10,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class DOTA_REPLAY_STATE_EVENT : uint32_t
{
	DOTA_REPLAY_STATE_EVENT_GAME_START = 0x1,
	DOTA_REPLAY_STATE_EVENT_STARTING_HORN = 0x2,
	DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD = 0x3,
	DOTA_REPLAY_STATE_EVENT_SHOWCASE = 0x4,
	DOTA_REPLAY_STATE_EVENT_POST_GAME = 0x5,
	DOTA_REPLAY_STATE_EVENT_WAIT_FOR_MAP = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class EDotaEntityMessages : uint32_t
{
	DOTA_UNIT_SPEECH = 0x0,
	DOTA_UNIT_SPEECH_MUTE = 0x1,
	DOTA_UNIT_ADD_GESTURE = 0x2,
	DOTA_UNIT_REMOVE_GESTURE = 0x3,
	DOTA_UNIT_REMOVE_ALL_GESTURES = 0x4,
	DOTA_UNIT_FADE_GESTURE = 0x6,
	DOTA_UNIT_SPEECH_CLIENTSIDE_RULES = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x19
enum class DOTA_OVERHEAD_ALERT : uint32_t
{
	OVERHEAD_ALERT_GOLD = 0x0,
	OVERHEAD_ALERT_DENY = 0x1,
	OVERHEAD_ALERT_CRITICAL = 0x2,
	OVERHEAD_ALERT_XP = 0x3,
	OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 0x4,
	OVERHEAD_ALERT_MISS = 0x5,
	OVERHEAD_ALERT_DAMAGE = 0x6,
	OVERHEAD_ALERT_EVADE = 0x7,
	OVERHEAD_ALERT_BLOCK = 0x8,
	OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 0x9,
	OVERHEAD_ALERT_HEAL = 0xa,
	OVERHEAD_ALERT_MANA_ADD = 0xb,
	OVERHEAD_ALERT_MANA_LOSS = 0xc,
	OVERHEAD_ALERT_LAST_HIT_EARLY = 0xd,
	OVERHEAD_ALERT_LAST_HIT_CLOSE = 0xe,
	OVERHEAD_ALERT_LAST_HIT_MISS = 0xf,
	OVERHEAD_ALERT_MAGICAL_BLOCK = 0x10,
	OVERHEAD_ALERT_INCOMING_DAMAGE = 0x11,
	OVERHEAD_ALERT_OUTGOING_DAMAGE = 0x12,
	OVERHEAD_ALERT_DISABLE_RESIST = 0x13,
	OVERHEAD_ALERT_DEATH = 0x14,
	OVERHEAD_ALERT_BLOCKED = 0x15,
	OVERHEAD_ALERT_ITEM_RECEIVED = 0x16,
	OVERHEAD_ALERT_SHARD = 0x17,
	OVERHEAD_ALERT_DEADLY_BLOW = 0x18,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class DOTA_ROSHAN_PHASE : uint32_t
{
	k_SRSP_ROSHAN_ALIVE = 0x0,
	k_SRSP_ROSHAN_BASE_TIMER = 0x1,
	k_SRSP_ROSHAN_VISIBLE_TIMER = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
enum class DOTA_POSITION_CATEGORY : uint32_t
{
	DOTA_POSITION_NONE = 0x0,
	DOTA_POSITION_BOTTOM_LANE = 0x1,
	DOTA_POSITION_MID_LANE = 0x2,
	DOTA_POSITION_TOP_LANE = 0x3,
	DOTA_POSITION_RADIANT_JUNGLE = 0x4,
	DOTA_POSITION_DIRE_JUNGLE = 0x5,
	DOTA_POSITION_RADIANT_ANCIENTS = 0x6,
	DOTA_POSITION_DIRE_ANCIENTS = 0x7,
	DOTA_POSITION_RADIANT_SECRET_SHOP = 0x8,
	DOTA_POSITION_DIRE_SECRET_SHOP = 0x9,
	DOTA_POSITION_RIVER = 0xa,
	DOTA_POSITION_ROSHAN_PIT = 0xb,
	DOTA_POSITION_RADIANT_BASE = 0xc,
	DOTA_POSITION_DIRE_BASE = 0xd,
	DOTA_POSITION_FOUNTAIN = 0xe,
	DOTA_POSITION_OTHER = 0xf,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class DOTA_ABILITY_TARGET_TYPE : uint32_t
{
	DOTA_ABILITY_TARGET_NONE = 0x0,
	DOTA_ABILITY_TARGET_SELF = 0x1,
	DOTA_ABILITY_TARGET_ALLY_HERO = 0x2,
	DOTA_ABILITY_TARGET_ALLY_CREEP = 0x3,
	DOTA_ABILITY_TARGET_ENEMY_HERO = 0x4,
	DOTA_ABILITY_TARGET_ENEMY_CREEP = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x16
enum class EHeroStatType : uint32_t
{
	k_EHeroStatType_None = 0x0,
	k_EHeroStatType_AxeTotalDamage = 0x7d0,
	k_EHeroStatType_BattleHungerDamage = 0x7d1,
	k_EHeroStatType_CounterHelixDamage = 0x7d2,
	k_EHeroStatType_CullingBladeDamage = 0x7d3,
	k_EHeroStatType_BerserkersCallCastCount = 0x7d4,
	k_EHeroStatType_BerserkersCallHeroesHitAverage = 0x7d5,
	k_EHeroStatType_BerserkersCallOtherUnitsHit = 0x7d6,
	k_EHeroStatType_BerserkersCallHeroAttacksTaken = 0x7d7,
	k_EHeroStatType_BerserkersCallOtherAttacksTaken = 0x7d8,
	k_EHeroStatType_BattleHungerCastCount = 0x7d9,
	k_EHeroStatType_BattleHungerPotentialDuration = 0x7da,
	k_EHeroStatType_BattleHungerAverageDuration = 0x7db,
	k_EHeroStatType_CounterHelixProcCount = 0x7dc,
	k_EHeroStatType_CounterHelixHeroProcCount = 0x7dd,
	k_EHeroStatType_CounterHelixHeroesHitAverage = 0x7de,
	k_EHeroStatType_CounterHelixOtherUnitsHitCount = 0x7df,
	k_EHeroStatType_CullingBladeCastCount = 0x7e0,
	k_EHeroStatType_CullingBladeKillCount = 0x7e1,
	k_EHeroStatType_CullingBladeAverageHealthCulled = 0x7e2,
	k_EHeroStatType_CullingBladeAverageDamageAvailable = 0x7e3,
	k_EHeroStatType_CullingBladeHeroBuffAverage = 0x7e4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
enum class EPlayerVoiceListenState : uint32_t
{
	kPVLS_None = 0x0,
	kPVLS_DeniedChatBanned = 0x1,
	kPVLS_DeniedPartner = 0x2,
	kPVLS_DeniedHLTVTalkerNotSpectator = 0x3,
	kPVLS_DeniedHLTVNoTalkerPlayerID = 0x4,
	kPVLS_DeniedHLTVTalkerNotBroadcaster = 0x5,
	kPVLS_DeniedTeamSpectator = 0x6,
	kPVLS_DeniedStudent = 0x8,
	kPVLS_DeniedPrivateCoach = 0x9,
	kPVLS_Denied = 0x40,
	kPVLS_AllowHLTVTalkerIsBroadcaster = 0x41,
	kPVLS_AllowCoBroadcaster = 0x42,
	kPVLS_AllowAllChat = 0x43,
	kPVLS_AllowStudentToCoach = 0x44,
	kPVLS_AllowFellowStudent = 0x45,
	kPVLS_AllowTalkerIsCoach = 0x46,
	kPVLS_AllowCoachHearTeam = 0x47,
	kPVLS_AllowSameTeam = 0x48,
	kPVLS_AllowShowcase = 0x49,
	kPVLS_AllowPrivateCoach = 0x4a,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class EProjectionEvent : uint32_t
{
	ePE_FirstBlood = 0x0,
	ePE_Killstreak_godlike = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class EDotaBroadcastMessages : uint32_t
{
	DOTA_BM_LANLobbyRequest = 0x1,
	DOTA_BM_LANLobbyReply = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class DOTA_MODIFIER_ENTRY_TYPE : uint32_t
{
	DOTA_MODIFIER_ENTRY_TYPE_ACTIVE = 0x1,
	DOTA_MODIFIER_ENTRY_TYPE_REMOVED = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x400
enum class BaseActivity_t : uint32_t
{
	ACT_RESET = 0x0,
	ACT_IDLE = 0x1,
	ACT_TRANSITION = 0x2,
	ACT_COVER = 0x3,
	ACT_COVER_MED = 0x4,
	ACT_COVER_LOW = 0x5,
	ACT_WALK = 0x6,
	ACT_WALK_AIM = 0x7,
	ACT_WALK_CROUCH = 0x8,
	ACT_WALK_CROUCH_AIM = 0x9,
	ACT_RUN = 0xa,
	ACT_RUN_AIM = 0xb,
	ACT_RUN_CROUCH = 0xc,
	ACT_RUN_CROUCH_AIM = 0xd,
	ACT_RUN_PROTECTED = 0xe,
	ACT_SCRIPT_CUSTOM_MOVE = 0xf,
	ACT_RANGE_ATTACK1 = 0x10,
	ACT_RANGE_ATTACK2 = 0x11,
	ACT_RANGE_ATTACK1_LOW = 0x12,
	ACT_RANGE_ATTACK2_LOW = 0x13,
	ACT_DIESIMPLE = 0x14,
	ACT_DIEBACKWARD = 0x15,
	ACT_DIEFORWARD = 0x16,
	ACT_DIEVIOLENT = 0x17,
	ACT_DIERAGDOLL = 0x18,
	ACT_FLY = 0x19,
	ACT_HOVER = 0x1a,
	ACT_GLIDE = 0x1b,
	ACT_SWIM = 0x1c,
	ACT_JUMP = 0x1d,
	ACT_HOP = 0x1e,
	ACT_LEAP = 0x1f,
	ACT_LAND = 0x20,
	ACT_CLIMB_UP = 0x21,
	ACT_CLIMB_DOWN = 0x22,
	ACT_CLIMB_DISMOUNT = 0x23,
	ACT_SHIPLADDER_UP = 0x24,
	ACT_SHIPLADDER_DOWN = 0x25,
	ACT_STRAFE_LEFT = 0x26,
	ACT_STRAFE_RIGHT = 0x27,
	ACT_ROLL_LEFT = 0x28,
	ACT_ROLL_RIGHT = 0x29,
	ACT_TURN_LEFT = 0x2a,
	ACT_TURN_RIGHT = 0x2b,
	ACT_CROUCH = 0x2c,
	ACT_CROUCHIDLE = 0x2d,
	ACT_STAND = 0x2e,
	ACT_USE = 0x2f,
	ACT_ALIEN_BURROW_IDLE = 0x30,
	ACT_ALIEN_BURROW_OUT = 0x31,
	ACT_SIGNAL1 = 0x32,
	ACT_SIGNAL2 = 0x33,
	ACT_SIGNAL3 = 0x34,
	ACT_SIGNAL_ADVANCE = 0x35,
	ACT_SIGNAL_FORWARD = 0x36,
	ACT_SIGNAL_GROUP = 0x37,
	ACT_SIGNAL_HALT = 0x38,
	ACT_SIGNAL_LEFT = 0x39,
	ACT_SIGNAL_RIGHT = 0x3a,
	ACT_SIGNAL_TAKECOVER = 0x3b,
	ACT_LOOKBACK_RIGHT = 0x3c,
	ACT_LOOKBACK_LEFT = 0x3d,
	ACT_COWER = 0x3e,
	ACT_SMALL_FLINCH = 0x3f,
	ACT_BIG_FLINCH = 0x40,
	ACT_MELEE_ATTACK1 = 0x41,
	ACT_MELEE_ATTACK2 = 0x42,
	ACT_RELOAD = 0x43,
	ACT_RELOAD_START = 0x44,
	ACT_RELOAD_FINISH = 0x45,
	ACT_RELOAD_LOW = 0x46,
	ACT_ARM = 0x47,
	ACT_DISARM = 0x48,
	ACT_DROP_WEAPON = 0x49,
	ACT_DROP_WEAPON_SHOTGUN = 0x4a,
	ACT_PICKUP_GROUND = 0x4b,
	ACT_PICKUP_RACK = 0x4c,
	ACT_IDLE_ANGRY = 0x4d,
	ACT_IDLE_RELAXED = 0x4e,
	ACT_IDLE_STIMULATED = 0x4f,
	ACT_IDLE_AGITATED = 0x50,
	ACT_IDLE_STEALTH = 0x51,
	ACT_IDLE_HURT = 0x52,
	ACT_WALK_RELAXED = 0x53,
	ACT_WALK_STIMULATED = 0x54,
	ACT_WALK_AGITATED = 0x55,
	ACT_WALK_STEALTH = 0x56,
	ACT_RUN_RELAXED = 0x57,
	ACT_RUN_STIMULATED = 0x58,
	ACT_RUN_AGITATED = 0x59,
	ACT_RUN_STEALTH = 0x5a,
	ACT_IDLE_AIM_RELAXED = 0x5b,
	ACT_IDLE_AIM_STIMULATED = 0x5c,
	ACT_IDLE_AIM_AGITATED = 0x5d,
	ACT_IDLE_AIM_STEALTH = 0x5e,
	ACT_WALK_AIM_RELAXED = 0x5f,
	ACT_WALK_AIM_STIMULATED = 0x60,
	ACT_WALK_AIM_AGITATED = 0x61,
	ACT_WALK_AIM_STEALTH = 0x62,
	ACT_RUN_AIM_RELAXED = 0x63,
	ACT_RUN_AIM_STIMULATED = 0x64,
	ACT_RUN_AIM_AGITATED = 0x65,
	ACT_RUN_AIM_STEALTH = 0x66,
	ACT_CROUCHIDLE_STIMULATED = 0x67,
	ACT_CROUCHIDLE_AIM_STIMULATED = 0x68,
	ACT_CROUCHIDLE_AGITATED = 0x69,
	ACT_WALK_HURT = 0x6a,
	ACT_RUN_HURT = 0x6b,
	ACT_SPECIAL_ATTACK1 = 0x6c,
	ACT_SPECIAL_ATTACK2 = 0x6d,
	ACT_COMBAT_IDLE = 0x6e,
	ACT_WALK_SCARED = 0x6f,
	ACT_RUN_SCARED = 0x70,
	ACT_VICTORY_DANCE = 0x71,
	ACT_DIE_HEADSHOT = 0x72,
	ACT_DIE_CHESTSHOT = 0x73,
	ACT_DIE_GUTSHOT = 0x74,
	ACT_DIE_BACKSHOT = 0x75,
	ACT_FLINCH_HEAD = 0x76,
	ACT_FLINCH_CHEST = 0x77,
	ACT_FLINCH_STOMACH = 0x78,
	ACT_FLINCH_LEFTARM = 0x79,
	ACT_FLINCH_RIGHTARM = 0x7a,
	ACT_FLINCH_LEFTLEG = 0x7b,
	ACT_FLINCH_RIGHTLEG = 0x7c,
	ACT_FLINCH_PHYSICS = 0x7d,
	ACT_FLINCH_HEAD_BACK = 0x7e,
	ACT_FLINCH_CHEST_BACK = 0x7f,
	ACT_FLINCH_STOMACH_BACK = 0x80,
	ACT_FLINCH_CROUCH_FRONT = 0x81,
	ACT_FLINCH_CROUCH_BACK = 0x82,
	ACT_FLINCH_CROUCH_LEFT = 0x83,
	ACT_FLINCH_CROUCH_RIGHT = 0x84,
	ACT_IDLE_ON_FIRE = 0x85,
	ACT_WALK_ON_FIRE = 0x86,
	ACT_RUN_ON_FIRE = 0x87,
	ACT_180_LEFT = 0x89,
	ACT_180_RIGHT = 0x8a,
	ACT_90_LEFT = 0x8b,
	ACT_90_RIGHT = 0x8c,
	ACT_STEP_LEFT = 0x8d,
	ACT_STEP_RIGHT = 0x8e,
	ACT_STEP_BACK = 0x8f,
	ACT_STEP_FORE = 0x90,
	ACT_GESTURE_RANGE_ATTACK1 = 0x91,
	ACT_GESTURE_RANGE_ATTACK2 = 0x92,
	ACT_GESTURE_MELEE_ATTACK1 = 0x93,
	ACT_GESTURE_MELEE_ATTACK2 = 0x94,
	ACT_GESTURE_RANGE_ATTACK1_LOW = 0x95,
	ACT_GESTURE_RANGE_ATTACK2_LOW = 0x96,
	ACT_MELEE_ATTACK_SWING_GESTURE = 0x97,
	ACT_GESTURE_SMALL_FLINCH = 0x98,
	ACT_GESTURE_BIG_FLINCH = 0x99,
	ACT_GESTURE_FLINCH_BLAST = 0x9a,
	ACT_GESTURE_FLINCH_BLAST_SHOTGUN = 0x9b,
	ACT_GESTURE_FLINCH_BLAST_DAMAGED = 0x9c,
	ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN = 0x9d,
	ACT_GESTURE_FLINCH_HEAD = 0x9e,
	ACT_GESTURE_FLINCH_CHEST = 0x9f,
	ACT_GESTURE_FLINCH_STOMACH = 0xa0,
	ACT_GESTURE_FLINCH_LEFTARM = 0xa1,
	ACT_GESTURE_FLINCH_RIGHTARM = 0xa2,
	ACT_GESTURE_FLINCH_LEFTLEG = 0xa3,
	ACT_GESTURE_FLINCH_RIGHTLEG = 0xa4,
	ACT_GESTURE_TURN_LEFT = 0xa5,
	ACT_GESTURE_TURN_RIGHT = 0xa6,
	ACT_GESTURE_TURN_LEFT45 = 0xa7,
	ACT_GESTURE_TURN_RIGHT45 = 0xa8,
	ACT_GESTURE_TURN_LEFT90 = 0xa9,
	ACT_GESTURE_TURN_RIGHT90 = 0xaa,
	ACT_GESTURE_TURN_LEFT45_FLAT = 0xab,
	ACT_GESTURE_TURN_RIGHT45_FLAT = 0xac,
	ACT_GESTURE_TURN_LEFT90_FLAT = 0xad,
	ACT_GESTURE_TURN_RIGHT90_FLAT = 0xae,
	ACT_BARNACLE_HIT = 0xaf,
	ACT_BARNACLE_PULL = 0xb0,
	ACT_BARNACLE_CHOMP = 0xb1,
	ACT_BARNACLE_CHEW = 0xb2,
	ACT_DO_NOT_DISTURB = 0xb3,
	ACT_SPECIFIC_SEQUENCE = 0xb4,
	ACT_VM_DEPLOY = 0xb5,
	ACT_VM_RELOAD_EMPTY = 0xb6,
	ACT_VM_DRAW = 0xb7,
	ACT_VM_HOLSTER = 0xb8,
	ACT_VM_IDLE = 0xb9,
	ACT_VM_FIDGET = 0xba,
	ACT_VM_PULLBACK = 0xbb,
	ACT_VM_PULLBACK_HIGH = 0xbc,
	ACT_VM_PULLBACK_LOW = 0xbd,
	ACT_VM_THROW = 0xbe,
	ACT_VM_DROP = 0xbf,
	ACT_VM_PULLPIN = 0xc0,
	ACT_VM_PRIMARYATTACK = 0xc1,
	ACT_VM_SECONDARYATTACK = 0xc2,
	ACT_VM_RELOAD = 0xc3,
	ACT_VM_DRYFIRE = 0xc4,
	ACT_VM_HITLEFT = 0xc5,
	ACT_VM_HITLEFT2 = 0xc6,
	ACT_VM_HITRIGHT = 0xc7,
	ACT_VM_HITRIGHT2 = 0xc8,
	ACT_VM_HITCENTER = 0xc9,
	ACT_VM_HITCENTER2 = 0xca,
	ACT_VM_MISSLEFT = 0xcb,
	ACT_VM_MISSLEFT2 = 0xcc,
	ACT_VM_MISSRIGHT = 0xcd,
	ACT_VM_MISSRIGHT2 = 0xce,
	ACT_VM_MISSCENTER = 0xcf,
	ACT_VM_MISSCENTER2 = 0xd0,
	ACT_VM_HAULBACK = 0xd1,
	ACT_VM_SWINGHARD = 0xd2,
	ACT_VM_SWINGMISS = 0xd3,
	ACT_VM_SWINGHIT = 0xd4,
	ACT_VM_IDLE_TO_LOWERED = 0xd5,
	ACT_VM_IDLE_LOWERED = 0xd6,
	ACT_VM_LOWERED_TO_IDLE = 0xd7,
	ACT_VM_RECOIL1 = 0xd8,
	ACT_VM_RECOIL2 = 0xd9,
	ACT_VM_RECOIL3 = 0xda,
	ACT_VM_PICKUP = 0xdb,
	ACT_VM_RELEASE = 0xdc,
	ACT_VM_MAUL_LOOP = 0xdd,
	ACT_VM_ATTACH_SILENCER = 0xde,
	ACT_VM_DETACH_SILENCER = 0xdf,
	ACT_SLAM_STICKWALL_IDLE = 0xe0,
	ACT_SLAM_STICKWALL_ND_IDLE = 0xe1,
	ACT_SLAM_STICKWALL_ATTACH = 0xe2,
	ACT_SLAM_STICKWALL_ATTACH2 = 0xe3,
	ACT_SLAM_STICKWALL_ND_ATTACH = 0xe4,
	ACT_SLAM_STICKWALL_ND_ATTACH2 = 0xe5,
	ACT_SLAM_STICKWALL_DETONATE = 0xe6,
	ACT_SLAM_STICKWALL_DETONATOR_HOLSTER = 0xe7,
	ACT_SLAM_STICKWALL_DRAW = 0xe8,
	ACT_SLAM_STICKWALL_ND_DRAW = 0xe9,
	ACT_SLAM_STICKWALL_TO_THROW = 0xea,
	ACT_SLAM_STICKWALL_TO_THROW_ND = 0xeb,
	ACT_SLAM_STICKWALL_TO_TRIPMINE_ND = 0xec,
	ACT_SLAM_THROW_IDLE = 0xed,
	ACT_SLAM_THROW_ND_IDLE = 0xee,
	ACT_SLAM_THROW_THROW = 0xef,
	ACT_SLAM_THROW_THROW2 = 0xf0,
	ACT_SLAM_THROW_THROW_ND = 0xf1,
	ACT_SLAM_THROW_THROW_ND2 = 0xf2,
	ACT_SLAM_THROW_DRAW = 0xf3,
	ACT_SLAM_THROW_ND_DRAW = 0xf4,
	ACT_SLAM_THROW_TO_STICKWALL = 0xf5,
	ACT_SLAM_THROW_TO_STICKWALL_ND = 0xf6,
	ACT_SLAM_THROW_DETONATE = 0xf7,
	ACT_SLAM_THROW_DETONATOR_HOLSTER = 0xf8,
	ACT_SLAM_THROW_TO_TRIPMINE_ND = 0xf9,
	ACT_SLAM_TRIPMINE_IDLE = 0xfa,
	ACT_SLAM_TRIPMINE_DRAW = 0xfb,
	ACT_SLAM_TRIPMINE_ATTACH = 0xfc,
	ACT_SLAM_TRIPMINE_ATTACH2 = 0xfd,
	ACT_SLAM_TRIPMINE_TO_STICKWALL_ND = 0xfe,
	ACT_SLAM_TRIPMINE_TO_THROW_ND = 0xff,
	ACT_SLAM_DETONATOR_IDLE = 0x100,
	ACT_SLAM_DETONATOR_DRAW = 0x101,
	ACT_SLAM_DETONATOR_DETONATE = 0x102,
	ACT_SLAM_DETONATOR_HOLSTER = 0x103,
	ACT_SLAM_DETONATOR_STICKWALL_DRAW = 0x104,
	ACT_SLAM_DETONATOR_THROW_DRAW = 0x105,
	ACT_SHOTGUN_RELOAD_START = 0x106,
	ACT_SHOTGUN_RELOAD_FINISH = 0x107,
	ACT_SHOTGUN_PUMP = 0x108,
	ACT_SMG2_IDLE2 = 0x109,
	ACT_SMG2_FIRE2 = 0x10a,
	ACT_SMG2_DRAW2 = 0x10b,
	ACT_SMG2_RELOAD2 = 0x10c,
	ACT_SMG2_DRYFIRE2 = 0x10d,
	ACT_SMG2_TOAUTO = 0x10e,
	ACT_SMG2_TOBURST = 0x10f,
	ACT_PHYSCANNON_UPGRADE = 0x110,
	ACT_RANGE_ATTACK_AR1 = 0x111,
	ACT_RANGE_ATTACK_AR2 = 0x112,
	ACT_RANGE_ATTACK_AR2_LOW = 0x113,
	ACT_RANGE_ATTACK_AR2_GRENADE = 0x114,
	ACT_RANGE_ATTACK_HMG1 = 0x115,
	ACT_RANGE_ATTACK_ML = 0x116,
	ACT_RANGE_ATTACK_SMG1 = 0x117,
	ACT_RANGE_ATTACK_SMG1_LOW = 0x118,
	ACT_RANGE_ATTACK_SMG2 = 0x119,
	ACT_RANGE_ATTACK_SHOTGUN = 0x11a,
	ACT_RANGE_ATTACK_SHOTGUN_LOW = 0x11b,
	ACT_RANGE_ATTACK_PISTOL = 0x11c,
	ACT_RANGE_ATTACK_PISTOL_LOW = 0x11d,
	ACT_RANGE_ATTACK_SLAM = 0x11e,
	ACT_RANGE_ATTACK_TRIPWIRE = 0x11f,
	ACT_RANGE_ATTACK_THROW = 0x120,
	ACT_RANGE_ATTACK_SNIPER_RIFLE = 0x121,
	ACT_RANGE_ATTACK_RPG = 0x122,
	ACT_MELEE_ATTACK_SWING = 0x123,
	ACT_RANGE_AIM_LOW = 0x124,
	ACT_RANGE_AIM_SMG1_LOW = 0x125,
	ACT_RANGE_AIM_PISTOL_LOW = 0x126,
	ACT_RANGE_AIM_AR2_LOW = 0x127,
	ACT_COVER_PISTOL_LOW = 0x128,
	ACT_COVER_SMG1_LOW = 0x129,
	ACT_GESTURE_RANGE_ATTACK_AR1 = 0x12a,
	ACT_GESTURE_RANGE_ATTACK_AR2 = 0x12b,
	ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE = 0x12c,
	ACT_GESTURE_RANGE_ATTACK_HMG1 = 0x12d,
	ACT_GESTURE_RANGE_ATTACK_ML = 0x12e,
	ACT_GESTURE_RANGE_ATTACK_SMG1 = 0x12f,
	ACT_GESTURE_RANGE_ATTACK_SMG1_LOW = 0x130,
	ACT_GESTURE_RANGE_ATTACK_SMG2 = 0x131,
	ACT_GESTURE_RANGE_ATTACK_SHOTGUN = 0x132,
	ACT_GESTURE_RANGE_ATTACK_PISTOL = 0x133,
	ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW = 0x134,
	ACT_GESTURE_RANGE_ATTACK_SLAM = 0x135,
	ACT_GESTURE_RANGE_ATTACK_TRIPWIRE = 0x136,
	ACT_GESTURE_RANGE_ATTACK_THROW = 0x137,
	ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE = 0x138,
	ACT_GESTURE_MELEE_ATTACK_SWING = 0x139,
	ACT_IDLE_RIFLE = 0x13a,
	ACT_IDLE_SMG1 = 0x13b,
	ACT_IDLE_ANGRY_SMG1 = 0x13c,
	ACT_IDLE_PISTOL = 0x13d,
	ACT_IDLE_ANGRY_PISTOL = 0x13e,
	ACT_IDLE_ANGRY_SHOTGUN = 0x13f,
	ACT_IDLE_STEALTH_PISTOL = 0x140,
	ACT_IDLE_PACKAGE = 0x141,
	ACT_WALK_PACKAGE = 0x142,
	ACT_IDLE_SUITCASE = 0x143,
	ACT_WALK_SUITCASE = 0x144,
	ACT_IDLE_SMG1_RELAXED = 0x145,
	ACT_IDLE_SMG1_STIMULATED = 0x146,
	ACT_WALK_RIFLE_RELAXED = 0x147,
	ACT_RUN_RIFLE_RELAXED = 0x148,
	ACT_WALK_RIFLE_STIMULATED = 0x149,
	ACT_RUN_RIFLE_STIMULATED = 0x14a,
	ACT_IDLE_AIM_RIFLE_STIMULATED = 0x14b,
	ACT_WALK_AIM_RIFLE_STIMULATED = 0x14c,
	ACT_RUN_AIM_RIFLE_STIMULATED = 0x14d,
	ACT_IDLE_SHOTGUN_RELAXED = 0x14e,
	ACT_IDLE_SHOTGUN_STIMULATED = 0x14f,
	ACT_IDLE_SHOTGUN_AGITATED = 0x150,
	ACT_WALK_ANGRY = 0x151,
	ACT_POLICE_HARASS1 = 0x152,
	ACT_POLICE_HARASS2 = 0x153,
	ACT_IDLE_MANNEDGUN = 0x154,
	ACT_IDLE_MELEE = 0x155,
	ACT_IDLE_ANGRY_MELEE = 0x156,
	ACT_IDLE_RPG_RELAXED = 0x157,
	ACT_IDLE_RPG = 0x158,
	ACT_IDLE_ANGRY_RPG = 0x159,
	ACT_COVER_LOW_RPG = 0x15a,
	ACT_WALK_RPG = 0x15b,
	ACT_RUN_RPG = 0x15c,
	ACT_WALK_CROUCH_RPG = 0x15d,
	ACT_RUN_CROUCH_RPG = 0x15e,
	ACT_WALK_RPG_RELAXED = 0x15f,
	ACT_RUN_RPG_RELAXED = 0x160,
	ACT_WALK_RIFLE = 0x161,
	ACT_WALK_AIM_RIFLE = 0x162,
	ACT_WALK_CROUCH_RIFLE = 0x163,
	ACT_WALK_CROUCH_AIM_RIFLE = 0x164,
	ACT_RUN_RIFLE = 0x165,
	ACT_RUN_AIM_RIFLE = 0x166,
	ACT_RUN_CROUCH_RIFLE = 0x167,
	ACT_RUN_CROUCH_AIM_RIFLE = 0x168,
	ACT_RUN_STEALTH_PISTOL = 0x169,
	ACT_WALK_AIM_SHOTGUN = 0x16a,
	ACT_RUN_AIM_SHOTGUN = 0x16b,
	ACT_WALK_PISTOL = 0x16c,
	ACT_RUN_PISTOL = 0x16d,
	ACT_WALK_AIM_PISTOL = 0x16e,
	ACT_RUN_AIM_PISTOL = 0x16f,
	ACT_WALK_STEALTH_PISTOL = 0x170,
	ACT_WALK_AIM_STEALTH_PISTOL = 0x171,
	ACT_RUN_AIM_STEALTH_PISTOL = 0x172,
	ACT_RELOAD_PISTOL = 0x173,
	ACT_RELOAD_PISTOL_LOW = 0x174,
	ACT_RELOAD_SMG1 = 0x175,
	ACT_RELOAD_SMG1_LOW = 0x176,
	ACT_RELOAD_SHOTGUN = 0x177,
	ACT_RELOAD_SHOTGUN_LOW = 0x178,
	ACT_GESTURE_RELOAD = 0x179,
	ACT_GESTURE_RELOAD_PISTOL = 0x17a,
	ACT_GESTURE_RELOAD_SMG1 = 0x17b,
	ACT_GESTURE_RELOAD_SHOTGUN = 0x17c,
	ACT_BUSY_LEAN_LEFT = 0x17d,
	ACT_BUSY_LEAN_LEFT_ENTRY = 0x17e,
	ACT_BUSY_LEAN_LEFT_EXIT = 0x17f,
	ACT_BUSY_LEAN_BACK = 0x180,
	ACT_BUSY_LEAN_BACK_ENTRY = 0x181,
	ACT_BUSY_LEAN_BACK_EXIT = 0x182,
	ACT_BUSY_SIT_GROUND = 0x183,
	ACT_BUSY_SIT_GROUND_ENTRY = 0x184,
	ACT_BUSY_SIT_GROUND_EXIT = 0x185,
	ACT_BUSY_SIT_CHAIR = 0x186,
	ACT_BUSY_SIT_CHAIR_ENTRY = 0x187,
	ACT_BUSY_SIT_CHAIR_EXIT = 0x188,
	ACT_BUSY_STAND = 0x189,
	ACT_BUSY_QUEUE = 0x18a,
	ACT_DUCK_DODGE = 0x18b,
	ACT_DIE_BARNACLE_SWALLOW = 0x18c,
	ACT_GESTURE_BARNACLE_STRANGLE = 0x18d,
	ACT_DIE_FRONTSIDE = 0x192,
	ACT_DIE_RIGHTSIDE = 0x193,
	ACT_DIE_BACKSIDE = 0x194,
	ACT_DIE_LEFTSIDE = 0x195,
	ACT_DIE_CROUCH_FRONTSIDE = 0x196,
	ACT_DIE_CROUCH_RIGHTSIDE = 0x197,
	ACT_DIE_CROUCH_BACKSIDE = 0x198,
	ACT_DIE_CROUCH_LEFTSIDE = 0x199,
	ACT_DIE_INCAP = 0x19a,
	ACT_DIE_STANDING = 0x19b,
	ACT_OPEN_DOOR = 0x19c,
	ACT_DI_ALYX_ZOMBIE_MELEE = 0x19d,
	ACT_DI_ALYX_ZOMBIE_TORSO_MELEE = 0x19e,
	ACT_DI_ALYX_HEADCRAB_MELEE = 0x19f,
	ACT_DI_ALYX_ANTLION = 0x1a0,
	ACT_DI_ALYX_ZOMBIE_SHOTGUN64 = 0x1a1,
	ACT_DI_ALYX_ZOMBIE_SHOTGUN26 = 0x1a2,
	ACT_READINESS_RELAXED_TO_STIMULATED = 0x1a3,
	ACT_READINESS_RELAXED_TO_STIMULATED_WALK = 0x1a4,
	ACT_READINESS_AGITATED_TO_STIMULATED = 0x1a5,
	ACT_READINESS_STIMULATED_TO_RELAXED = 0x1a6,
	ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED = 0x1a7,
	ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK = 0x1a8,
	ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED = 0x1a9,
	ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED = 0x1aa,
	ACT_IDLE_CARRY = 0x1ab,
	ACT_WALK_CARRY = 0x1ac,
	ACT_STARTDYING = 0x1ad,
	ACT_DYINGLOOP = 0x1ae,
	ACT_DYINGTODEAD = 0x1af,
	ACT_RIDE_MANNED_GUN = 0x1b0,
	ACT_VM_SPRINT_ENTER = 0x1b1,
	ACT_VM_SPRINT_IDLE = 0x1b2,
	ACT_VM_SPRINT_LEAVE = 0x1b3,
	ACT_FIRE_START = 0x1b4,
	ACT_FIRE_LOOP = 0x1b5,
	ACT_FIRE_END = 0x1b6,
	ACT_CROUCHING_GRENADEIDLE = 0x1b7,
	ACT_CROUCHING_GRENADEREADY = 0x1b8,
	ACT_CROUCHING_PRIMARYATTACK = 0x1b9,
	ACT_OVERLAY_GRENADEIDLE = 0x1ba,
	ACT_OVERLAY_GRENADEREADY = 0x1bb,
	ACT_OVERLAY_PRIMARYATTACK = 0x1bc,
	ACT_OVERLAY_SHIELD_UP = 0x1bd,
	ACT_OVERLAY_SHIELD_DOWN = 0x1be,
	ACT_OVERLAY_SHIELD_UP_IDLE = 0x1bf,
	ACT_OVERLAY_SHIELD_ATTACK = 0x1c0,
	ACT_OVERLAY_SHIELD_KNOCKBACK = 0x1c1,
	ACT_SHIELD_UP = 0x1c2,
	ACT_SHIELD_DOWN = 0x1c3,
	ACT_SHIELD_UP_IDLE = 0x1c4,
	ACT_SHIELD_ATTACK = 0x1c5,
	ACT_SHIELD_KNOCKBACK = 0x1c6,
	ACT_CROUCHING_SHIELD_UP = 0x1c7,
	ACT_CROUCHING_SHIELD_DOWN = 0x1c8,
	ACT_CROUCHING_SHIELD_UP_IDLE = 0x1c9,
	ACT_CROUCHING_SHIELD_ATTACK = 0x1ca,
	ACT_CROUCHING_SHIELD_KNOCKBACK = 0x1cb,
	ACT_TURNRIGHT45 = 0x1cc,
	ACT_TURNLEFT45 = 0x1cd,
	ACT_TURN = 0x1ce,
	ACT_OBJ_ASSEMBLING = 0x1cf,
	ACT_OBJ_DISMANTLING = 0x1d0,
	ACT_OBJ_STARTUP = 0x1d1,
	ACT_OBJ_RUNNING = 0x1d2,
	ACT_OBJ_IDLE = 0x1d3,
	ACT_OBJ_PLACING = 0x1d4,
	ACT_OBJ_DETERIORATING = 0x1d5,
	ACT_OBJ_UPGRADING = 0x1d6,
	ACT_DEPLOY = 0x1d7,
	ACT_DEPLOY_IDLE = 0x1d8,
	ACT_UNDEPLOY = 0x1d9,
	ACT_CROSSBOW_DRAW_UNLOADED = 0x1da,
	ACT_GAUSS_SPINUP = 0x1db,
	ACT_GAUSS_SPINCYCLE = 0x1dc,
	ACT_VM_PRIMARYATTACK_SILENCED = 0x1dd,
	ACT_VM_RELOAD_SILENCED = 0x1de,
	ACT_VM_DRYFIRE_SILENCED = 0x1df,
	ACT_VM_IDLE_SILENCED = 0x1e0,
	ACT_VM_DRAW_SILENCED = 0x1e1,
	ACT_VM_IDLE_EMPTY_LEFT = 0x1e2,
	ACT_VM_DRYFIRE_LEFT = 0x1e3,
	ACT_VM_IS_DRAW = 0x1e4,
	ACT_VM_IS_HOLSTER = 0x1e5,
	ACT_VM_IS_IDLE = 0x1e6,
	ACT_VM_IS_PRIMARYATTACK = 0x1e7,
	ACT_PLAYER_IDLE_FIRE = 0x1e8,
	ACT_PLAYER_CROUCH_FIRE = 0x1e9,
	ACT_PLAYER_CROUCH_WALK_FIRE = 0x1ea,
	ACT_PLAYER_WALK_FIRE = 0x1eb,
	ACT_PLAYER_RUN_FIRE = 0x1ec,
	ACT_IDLETORUN = 0x1ed,
	ACT_RUNTOIDLE = 0x1ee,
	ACT_VM_DRAW_DEPLOYED = 0x1ef,
	ACT_HL2MP_IDLE_MELEE = 0x1f0,
	ACT_HL2MP_RUN_MELEE = 0x1f1,
	ACT_HL2MP_IDLE_CROUCH_MELEE = 0x1f2,
	ACT_HL2MP_WALK_CROUCH_MELEE = 0x1f3,
	ACT_HL2MP_GESTURE_RANGE_ATTACK_MELEE = 0x1f4,
	ACT_HL2MP_GESTURE_RELOAD_MELEE = 0x1f5,
	ACT_HL2MP_JUMP_MELEE = 0x1f6,
	ACT_MP_STAND_IDLE = 0x1f7,
	ACT_MP_CROUCH_IDLE = 0x1f8,
	ACT_MP_CROUCH_DEPLOYED_IDLE = 0x1f9,
	ACT_MP_CROUCH_DEPLOYED = 0x1fa,
	ACT_MP_DEPLOYED_IDLE = 0x1fb,
	ACT_MP_RUN = 0x1fc,
	ACT_MP_WALK = 0x1fd,
	ACT_MP_AIRWALK = 0x1fe,
	ACT_MP_CROUCHWALK = 0x1ff,
	ACT_MP_SPRINT = 0x200,
	ACT_MP_JUMP = 0x201,
	ACT_MP_JUMP_START = 0x202,
	ACT_MP_JUMP_FLOAT = 0x203,
	ACT_MP_JUMP_LAND = 0x204,
	ACT_MP_DOUBLEJUMP = 0x205,
	ACT_MP_SWIM = 0x206,
	ACT_MP_DEPLOYED = 0x207,
	ACT_MP_SWIM_DEPLOYED = 0x208,
	ACT_MP_VCD = 0x209,
	ACT_MP_ATTACK_STAND_PRIMARYFIRE = 0x20a,
	ACT_MP_ATTACK_STAND_PRIMARYFIRE_DEPLOYED = 0x20b,
	ACT_MP_ATTACK_STAND_SECONDARYFIRE = 0x20c,
	ACT_MP_ATTACK_STAND_GRENADE = 0x20d,
	ACT_MP_ATTACK_CROUCH_PRIMARYFIRE = 0x20e,
	ACT_MP_ATTACK_CROUCH_PRIMARYFIRE_DEPLOYED = 0x20f,
	ACT_MP_ATTACK_CROUCH_SECONDARYFIRE = 0x210,
	ACT_MP_ATTACK_CROUCH_GRENADE = 0x211,
	ACT_MP_ATTACK_SWIM_PRIMARYFIRE = 0x212,
	ACT_MP_ATTACK_SWIM_SECONDARYFIRE = 0x213,
	ACT_MP_ATTACK_SWIM_GRENADE = 0x214,
	ACT_MP_ATTACK_AIRWALK_PRIMARYFIRE = 0x215,
	ACT_MP_ATTACK_AIRWALK_SECONDARYFIRE = 0x216,
	ACT_MP_ATTACK_AIRWALK_GRENADE = 0x217,
	ACT_MP_RELOAD_STAND = 0x218,
	ACT_MP_RELOAD_STAND_LOOP = 0x219,
	ACT_MP_RELOAD_STAND_END = 0x21a,
	ACT_MP_RELOAD_CROUCH = 0x21b,
	ACT_MP_RELOAD_CROUCH_LOOP = 0x21c,
	ACT_MP_RELOAD_CROUCH_END = 0x21d,
	ACT_MP_RELOAD_SWIM = 0x21e,
	ACT_MP_RELOAD_SWIM_LOOP = 0x21f,
	ACT_MP_RELOAD_SWIM_END = 0x220,
	ACT_MP_RELOAD_AIRWALK = 0x221,
	ACT_MP_RELOAD_AIRWALK_LOOP = 0x222,
	ACT_MP_RELOAD_AIRWALK_END = 0x223,
	ACT_MP_ATTACK_STAND_PREFIRE = 0x224,
	ACT_MP_ATTACK_STAND_POSTFIRE = 0x225,
	ACT_MP_ATTACK_STAND_STARTFIRE = 0x226,
	ACT_MP_ATTACK_CROUCH_PREFIRE = 0x227,
	ACT_MP_ATTACK_CROUCH_POSTFIRE = 0x228,
	ACT_MP_ATTACK_SWIM_PREFIRE = 0x229,
	ACT_MP_ATTACK_SWIM_POSTFIRE = 0x22a,
	ACT_MP_STAND_PRIMARY = 0x22b,
	ACT_MP_CROUCH_PRIMARY = 0x22c,
	ACT_MP_RUN_PRIMARY = 0x22d,
	ACT_MP_WALK_PRIMARY = 0x22e,
	ACT_MP_AIRWALK_PRIMARY = 0x22f,
	ACT_MP_CROUCHWALK_PRIMARY = 0x230,
	ACT_MP_JUMP_PRIMARY = 0x231,
	ACT_MP_JUMP_START_PRIMARY = 0x232,
	ACT_MP_JUMP_FLOAT_PRIMARY = 0x233,
	ACT_MP_JUMP_LAND_PRIMARY = 0x234,
	ACT_MP_SWIM_PRIMARY = 0x235,
	ACT_MP_DEPLOYED_PRIMARY = 0x236,
	ACT_MP_SWIM_DEPLOYED_PRIMARY = 0x237,
	ACT_MP_ATTACK_STAND_PRIMARY = 0x238,
	ACT_MP_ATTACK_STAND_PRIMARY_DEPLOYED = 0x239,
	ACT_MP_ATTACK_CROUCH_PRIMARY = 0x23a,
	ACT_MP_ATTACK_CROUCH_PRIMARY_DEPLOYED = 0x23b,
	ACT_MP_ATTACK_SWIM_PRIMARY = 0x23c,
	ACT_MP_ATTACK_AIRWALK_PRIMARY = 0x23d,
	ACT_MP_RELOAD_STAND_PRIMARY = 0x23e,
	ACT_MP_RELOAD_STAND_PRIMARY_LOOP = 0x23f,
	ACT_MP_RELOAD_STAND_PRIMARY_END = 0x240,
	ACT_MP_RELOAD_CROUCH_PRIMARY = 0x241,
	ACT_MP_RELOAD_CROUCH_PRIMARY_LOOP = 0x242,
	ACT_MP_RELOAD_CROUCH_PRIMARY_END = 0x243,
	ACT_MP_RELOAD_SWIM_PRIMARY = 0x244,
	ACT_MP_RELOAD_SWIM_PRIMARY_LOOP = 0x245,
	ACT_MP_RELOAD_SWIM_PRIMARY_END = 0x246,
	ACT_MP_RELOAD_AIRWALK_PRIMARY = 0x247,
	ACT_MP_RELOAD_AIRWALK_PRIMARY_LOOP = 0x248,
	ACT_MP_RELOAD_AIRWALK_PRIMARY_END = 0x249,
	ACT_MP_ATTACK_STAND_GRENADE_PRIMARY = 0x24a,
	ACT_MP_ATTACK_CROUCH_GRENADE_PRIMARY = 0x24b,
	ACT_MP_ATTACK_SWIM_GRENADE_PRIMARY = 0x24c,
	ACT_MP_ATTACK_AIRWALK_GRENADE_PRIMARY = 0x24d,
	ACT_MP_STAND_SECONDARY = 0x24e,
	ACT_MP_CROUCH_SECONDARY = 0x24f,
	ACT_MP_RUN_SECONDARY = 0x250,
	ACT_MP_WALK_SECONDARY = 0x251,
	ACT_MP_AIRWALK_SECONDARY = 0x252,
	ACT_MP_CROUCHWALK_SECONDARY = 0x253,
	ACT_MP_JUMP_SECONDARY = 0x254,
	ACT_MP_JUMP_START_SECONDARY = 0x255,
	ACT_MP_JUMP_FLOAT_SECONDARY = 0x256,
	ACT_MP_JUMP_LAND_SECONDARY = 0x257,
	ACT_MP_SWIM_SECONDARY = 0x258,
	ACT_MP_ATTACK_STAND_SECONDARY = 0x259,
	ACT_MP_ATTACK_CROUCH_SECONDARY = 0x25a,
	ACT_MP_ATTACK_SWIM_SECONDARY = 0x25b,
	ACT_MP_ATTACK_AIRWALK_SECONDARY = 0x25c,
	ACT_MP_RELOAD_STAND_SECONDARY = 0x25d,
	ACT_MP_RELOAD_STAND_SECONDARY_LOOP = 0x25e,
	ACT_MP_RELOAD_STAND_SECONDARY_END = 0x25f,
	ACT_MP_RELOAD_CROUCH_SECONDARY = 0x260,
	ACT_MP_RELOAD_CROUCH_SECONDARY_LOOP = 0x261,
	ACT_MP_RELOAD_CROUCH_SECONDARY_END = 0x262,
	ACT_MP_RELOAD_SWIM_SECONDARY = 0x263,
	ACT_MP_RELOAD_SWIM_SECONDARY_LOOP = 0x264,
	ACT_MP_RELOAD_SWIM_SECONDARY_END = 0x265,
	ACT_MP_RELOAD_AIRWALK_SECONDARY = 0x266,
	ACT_MP_RELOAD_AIRWALK_SECONDARY_LOOP = 0x267,
	ACT_MP_RELOAD_AIRWALK_SECONDARY_END = 0x268,
	ACT_MP_ATTACK_STAND_GRENADE_SECONDARY = 0x269,
	ACT_MP_ATTACK_CROUCH_GRENADE_SECONDARY = 0x26a,
	ACT_MP_ATTACK_SWIM_GRENADE_SECONDARY = 0x26b,
	ACT_MP_ATTACK_AIRWALK_GRENADE_SECONDARY = 0x26c,
	ACT_MP_STAND_MELEE = 0x26d,
	ACT_MP_CROUCH_MELEE = 0x26e,
	ACT_MP_RUN_MELEE = 0x26f,
	ACT_MP_WALK_MELEE = 0x270,
	ACT_MP_AIRWALK_MELEE = 0x271,
	ACT_MP_CROUCHWALK_MELEE = 0x272,
	ACT_MP_JUMP_MELEE = 0x273,
	ACT_MP_JUMP_START_MELEE = 0x274,
	ACT_MP_JUMP_FLOAT_MELEE = 0x275,
	ACT_MP_JUMP_LAND_MELEE = 0x276,
	ACT_MP_SWIM_MELEE = 0x277,
	ACT_MP_ATTACK_STAND_MELEE = 0x278,
	ACT_MP_ATTACK_STAND_MELEE_SECONDARY = 0x279,
	ACT_MP_ATTACK_CROUCH_MELEE = 0x27a,
	ACT_MP_ATTACK_CROUCH_MELEE_SECONDARY = 0x27b,
	ACT_MP_ATTACK_SWIM_MELEE = 0x27c,
	ACT_MP_ATTACK_AIRWALK_MELEE = 0x27d,
	ACT_MP_ATTACK_STAND_GRENADE_MELEE = 0x27e,
	ACT_MP_ATTACK_CROUCH_GRENADE_MELEE = 0x27f,
	ACT_MP_ATTACK_SWIM_GRENADE_MELEE = 0x280,
	ACT_MP_ATTACK_AIRWALK_GRENADE_MELEE = 0x281,
	ACT_MP_STAND_ITEM1 = 0x282,
	ACT_MP_CROUCH_ITEM1 = 0x283,
	ACT_MP_RUN_ITEM1 = 0x284,
	ACT_MP_WALK_ITEM1 = 0x285,
	ACT_MP_AIRWALK_ITEM1 = 0x286,
	ACT_MP_CROUCHWALK_ITEM1 = 0x287,
	ACT_MP_JUMP_ITEM1 = 0x288,
	ACT_MP_JUMP_START_ITEM1 = 0x289,
	ACT_MP_JUMP_FLOAT_ITEM1 = 0x28a,
	ACT_MP_JUMP_LAND_ITEM1 = 0x28b,
	ACT_MP_SWIM_ITEM1 = 0x28c,
	ACT_MP_ATTACK_STAND_ITEM1 = 0x28d,
	ACT_MP_ATTACK_STAND_ITEM1_SECONDARY = 0x28e,
	ACT_MP_ATTACK_CROUCH_ITEM1 = 0x28f,
	ACT_MP_ATTACK_CROUCH_ITEM1_SECONDARY = 0x290,
	ACT_MP_ATTACK_SWIM_ITEM1 = 0x291,
	ACT_MP_ATTACK_AIRWALK_ITEM1 = 0x292,
	ACT_MP_STAND_ITEM2 = 0x293,
	ACT_MP_CROUCH_ITEM2 = 0x294,
	ACT_MP_RUN_ITEM2 = 0x295,
	ACT_MP_WALK_ITEM2 = 0x296,
	ACT_MP_AIRWALK_ITEM2 = 0x297,
	ACT_MP_CROUCHWALK_ITEM2 = 0x298,
	ACT_MP_JUMP_ITEM2 = 0x299,
	ACT_MP_JUMP_START_ITEM2 = 0x29a,
	ACT_MP_JUMP_FLOAT_ITEM2 = 0x29b,
	ACT_MP_JUMP_LAND_ITEM2 = 0x29c,
	ACT_MP_SWIM_ITEM2 = 0x29d,
	ACT_MP_ATTACK_STAND_ITEM2 = 0x29e,
	ACT_MP_ATTACK_STAND_ITEM2_SECONDARY = 0x29f,
	ACT_MP_ATTACK_CROUCH_ITEM2 = 0x2a0,
	ACT_MP_ATTACK_CROUCH_ITEM2_SECONDARY = 0x2a1,
	ACT_MP_ATTACK_SWIM_ITEM2 = 0x2a2,
	ACT_MP_ATTACK_AIRWALK_ITEM2 = 0x2a3,
	ACT_MP_GESTURE_FLINCH = 0x2a4,
	ACT_MP_GESTURE_FLINCH_PRIMARY = 0x2a5,
	ACT_MP_GESTURE_FLINCH_SECONDARY = 0x2a6,
	ACT_MP_GESTURE_FLINCH_MELEE = 0x2a7,
	ACT_MP_GESTURE_FLINCH_ITEM1 = 0x2a8,
	ACT_MP_GESTURE_FLINCH_ITEM2 = 0x2a9,
	ACT_MP_GESTURE_FLINCH_HEAD = 0x2aa,
	ACT_MP_GESTURE_FLINCH_CHEST = 0x2ab,
	ACT_MP_GESTURE_FLINCH_STOMACH = 0x2ac,
	ACT_MP_GESTURE_FLINCH_LEFTARM = 0x2ad,
	ACT_MP_GESTURE_FLINCH_RIGHTARM = 0x2ae,
	ACT_MP_GESTURE_FLINCH_LEFTLEG = 0x2af,
	ACT_MP_GESTURE_FLINCH_RIGHTLEG = 0x2b0,
	ACT_MP_GRENADE1_DRAW = 0x2b1,
	ACT_MP_GRENADE1_IDLE = 0x2b2,
	ACT_MP_GRENADE1_ATTACK = 0x2b3,
	ACT_MP_GRENADE2_DRAW = 0x2b4,
	ACT_MP_GRENADE2_IDLE = 0x2b5,
	ACT_MP_GRENADE2_ATTACK = 0x2b6,
	ACT_MP_PRIMARY_GRENADE1_DRAW = 0x2b7,
	ACT_MP_PRIMARY_GRENADE1_IDLE = 0x2b8,
	ACT_MP_PRIMARY_GRENADE1_ATTACK = 0x2b9,
	ACT_MP_PRIMARY_GRENADE2_DRAW = 0x2ba,
	ACT_MP_PRIMARY_GRENADE2_IDLE = 0x2bb,
	ACT_MP_PRIMARY_GRENADE2_ATTACK = 0x2bc,
	ACT_MP_SECONDARY_GRENADE1_DRAW = 0x2bd,
	ACT_MP_SECONDARY_GRENADE1_IDLE = 0x2be,
	ACT_MP_SECONDARY_GRENADE1_ATTACK = 0x2bf,
	ACT_MP_SECONDARY_GRENADE2_DRAW = 0x2c0,
	ACT_MP_SECONDARY_GRENADE2_IDLE = 0x2c1,
	ACT_MP_SECONDARY_GRENADE2_ATTACK = 0x2c2,
	ACT_MP_MELEE_GRENADE1_DRAW = 0x2c3,
	ACT_MP_MELEE_GRENADE1_IDLE = 0x2c4,
	ACT_MP_MELEE_GRENADE1_ATTACK = 0x2c5,
	ACT_MP_MELEE_GRENADE2_DRAW = 0x2c6,
	ACT_MP_MELEE_GRENADE2_IDLE = 0x2c7,
	ACT_MP_MELEE_GRENADE2_ATTACK = 0x2c8,
	ACT_MP_ITEM1_GRENADE1_DRAW = 0x2c9,
	ACT_MP_ITEM1_GRENADE1_IDLE = 0x2ca,
	ACT_MP_ITEM1_GRENADE1_ATTACK = 0x2cb,
	ACT_MP_ITEM1_GRENADE2_DRAW = 0x2cc,
	ACT_MP_ITEM1_GRENADE2_IDLE = 0x2cd,
	ACT_MP_ITEM1_GRENADE2_ATTACK = 0x2ce,
	ACT_MP_ITEM2_GRENADE1_DRAW = 0x2cf,
	ACT_MP_ITEM2_GRENADE1_IDLE = 0x2d0,
	ACT_MP_ITEM2_GRENADE1_ATTACK = 0x2d1,
	ACT_MP_ITEM2_GRENADE2_DRAW = 0x2d2,
	ACT_MP_ITEM2_GRENADE2_IDLE = 0x2d3,
	ACT_MP_ITEM2_GRENADE2_ATTACK = 0x2d4,
	ACT_MP_STAND_BUILDING = 0x2d5,
	ACT_MP_CROUCH_BUILDING = 0x2d6,
	ACT_MP_RUN_BUILDING = 0x2d7,
	ACT_MP_WALK_BUILDING = 0x2d8,
	ACT_MP_AIRWALK_BUILDING = 0x2d9,
	ACT_MP_CROUCHWALK_BUILDING = 0x2da,
	ACT_MP_JUMP_BUILDING = 0x2db,
	ACT_MP_JUMP_START_BUILDING = 0x2dc,
	ACT_MP_JUMP_FLOAT_BUILDING = 0x2dd,
	ACT_MP_JUMP_LAND_BUILDING = 0x2de,
	ACT_MP_SWIM_BUILDING = 0x2df,
	ACT_MP_ATTACK_STAND_BUILDING = 0x2e0,
	ACT_MP_ATTACK_CROUCH_BUILDING = 0x2e1,
	ACT_MP_ATTACK_SWIM_BUILDING = 0x2e2,
	ACT_MP_ATTACK_AIRWALK_BUILDING = 0x2e3,
	ACT_MP_ATTACK_STAND_GRENADE_BUILDING = 0x2e4,
	ACT_MP_ATTACK_CROUCH_GRENADE_BUILDING = 0x2e5,
	ACT_MP_ATTACK_SWIM_GRENADE_BUILDING = 0x2e6,
	ACT_MP_ATTACK_AIRWALK_GRENADE_BUILDING = 0x2e7,
	ACT_MP_STAND_PDA = 0x2e8,
	ACT_MP_CROUCH_PDA = 0x2e9,
	ACT_MP_RUN_PDA = 0x2ea,
	ACT_MP_WALK_PDA = 0x2eb,
	ACT_MP_AIRWALK_PDA = 0x2ec,
	ACT_MP_CROUCHWALK_PDA = 0x2ed,
	ACT_MP_JUMP_PDA = 0x2ee,
	ACT_MP_JUMP_START_PDA = 0x2ef,
	ACT_MP_JUMP_FLOAT_PDA = 0x2f0,
	ACT_MP_JUMP_LAND_PDA = 0x2f1,
	ACT_MP_SWIM_PDA = 0x2f2,
	ACT_MP_ATTACK_STAND_PDA = 0x2f3,
	ACT_MP_ATTACK_SWIM_PDA = 0x2f4,
	ACT_MP_GESTURE_VC_HANDMOUTH = 0x2f5,
	ACT_MP_GESTURE_VC_FINGERPOINT = 0x2f6,
	ACT_MP_GESTURE_VC_FISTPUMP = 0x2f7,
	ACT_MP_GESTURE_VC_THUMBSUP = 0x2f8,
	ACT_MP_GESTURE_VC_NODYES = 0x2f9,
	ACT_MP_GESTURE_VC_NODNO = 0x2fa,
	ACT_MP_GESTURE_VC_HANDMOUTH_PRIMARY = 0x2fb,
	ACT_MP_GESTURE_VC_FINGERPOINT_PRIMARY = 0x2fc,
	ACT_MP_GESTURE_VC_FISTPUMP_PRIMARY = 0x2fd,
	ACT_MP_GESTURE_VC_THUMBSUP_PRIMARY = 0x2fe,
	ACT_MP_GESTURE_VC_NODYES_PRIMARY = 0x2ff,
	ACT_MP_GESTURE_VC_NODNO_PRIMARY = 0x300,
	ACT_MP_GESTURE_VC_HANDMOUTH_SECONDARY = 0x301,
	ACT_MP_GESTURE_VC_FINGERPOINT_SECONDARY = 0x302,
	ACT_MP_GESTURE_VC_FISTPUMP_SECONDARY = 0x303,
	ACT_MP_GESTURE_VC_THUMBSUP_SECONDARY = 0x304,
	ACT_MP_GESTURE_VC_NODYES_SECONDARY = 0x305,
	ACT_MP_GESTURE_VC_NODNO_SECONDARY = 0x306,
	ACT_MP_GESTURE_VC_HANDMOUTH_MELEE = 0x307,
	ACT_MP_GESTURE_VC_FINGERPOINT_MELEE = 0x308,
	ACT_MP_GESTURE_VC_FISTPUMP_MELEE = 0x309,
	ACT_MP_GESTURE_VC_THUMBSUP_MELEE = 0x30a,
	ACT_MP_GESTURE_VC_NODYES_MELEE = 0x30b,
	ACT_MP_GESTURE_VC_NODNO_MELEE = 0x30c,
	ACT_MP_GESTURE_VC_HANDMOUTH_ITEM1 = 0x30d,
	ACT_MP_GESTURE_VC_FINGERPOINT_ITEM1 = 0x30e,
	ACT_MP_GESTURE_VC_FISTPUMP_ITEM1 = 0x30f,
	ACT_MP_GESTURE_VC_THUMBSUP_ITEM1 = 0x310,
	ACT_MP_GESTURE_VC_NODYES_ITEM1 = 0x311,
	ACT_MP_GESTURE_VC_NODNO_ITEM1 = 0x312,
	ACT_MP_GESTURE_VC_HANDMOUTH_ITEM2 = 0x313,
	ACT_MP_GESTURE_VC_FINGERPOINT_ITEM2 = 0x314,
	ACT_MP_GESTURE_VC_FISTPUMP_ITEM2 = 0x315,
	ACT_MP_GESTURE_VC_THUMBSUP_ITEM2 = 0x316,
	ACT_MP_GESTURE_VC_NODYES_ITEM2 = 0x317,
	ACT_MP_GESTURE_VC_NODNO_ITEM2 = 0x318,
	ACT_MP_GESTURE_VC_HANDMOUTH_BUILDING = 0x319,
	ACT_MP_GESTURE_VC_FINGERPOINT_BUILDING = 0x31a,
	ACT_MP_GESTURE_VC_FISTPUMP_BUILDING = 0x31b,
	ACT_MP_GESTURE_VC_THUMBSUP_BUILDING = 0x31c,
	ACT_MP_GESTURE_VC_NODYES_BUILDING = 0x31d,
	ACT_MP_GESTURE_VC_NODNO_BUILDING = 0x31e,
	ACT_MP_GESTURE_VC_HANDMOUTH_PDA = 0x31f,
	ACT_MP_GESTURE_VC_FINGERPOINT_PDA = 0x320,
	ACT_MP_GESTURE_VC_FISTPUMP_PDA = 0x321,
	ACT_MP_GESTURE_VC_THUMBSUP_PDA = 0x322,
	ACT_MP_GESTURE_VC_NODYES_PDA = 0x323,
	ACT_MP_GESTURE_VC_NODNO_PDA = 0x324,
	ACT_VM_UNUSABLE = 0x325,
	ACT_VM_UNUSABLE_TO_USABLE = 0x326,
	ACT_VM_USABLE_TO_UNUSABLE = 0x327,
	ACT_PRIMARY_VM_DRAW = 0x328,
	ACT_PRIMARY_VM_HOLSTER = 0x329,
	ACT_PRIMARY_VM_IDLE = 0x32a,
	ACT_PRIMARY_VM_PULLBACK = 0x32b,
	ACT_PRIMARY_VM_PRIMARYATTACK = 0x32c,
	ACT_PRIMARY_VM_SECONDARYATTACK = 0x32d,
	ACT_PRIMARY_VM_RELOAD = 0x32e,
	ACT_PRIMARY_VM_DRYFIRE = 0x32f,
	ACT_PRIMARY_VM_IDLE_TO_LOWERED = 0x330,
	ACT_PRIMARY_VM_IDLE_LOWERED = 0x331,
	ACT_PRIMARY_VM_LOWERED_TO_IDLE = 0x332,
	ACT_SECONDARY_VM_DRAW = 0x333,
	ACT_SECONDARY_VM_HOLSTER = 0x334,
	ACT_SECONDARY_VM_IDLE = 0x335,
	ACT_SECONDARY_VM_PULLBACK = 0x336,
	ACT_SECONDARY_VM_PRIMARYATTACK = 0x337,
	ACT_SECONDARY_VM_SECONDARYATTACK = 0x338,
	ACT_SECONDARY_VM_RELOAD = 0x339,
	ACT_SECONDARY_VM_DRYFIRE = 0x33a,
	ACT_SECONDARY_VM_IDLE_TO_LOWERED = 0x33b,
	ACT_SECONDARY_VM_IDLE_LOWERED = 0x33c,
	ACT_SECONDARY_VM_LOWERED_TO_IDLE = 0x33d,
	ACT_MELEE_VM_DRAW = 0x33e,
	ACT_MELEE_VM_HOLSTER = 0x33f,
	ACT_MELEE_VM_IDLE = 0x340,
	ACT_MELEE_VM_PULLBACK = 0x341,
	ACT_MELEE_VM_PRIMARYATTACK = 0x342,
	ACT_MELEE_VM_SECONDARYATTACK = 0x343,
	ACT_MELEE_VM_RELOAD = 0x344,
	ACT_MELEE_VM_DRYFIRE = 0x345,
	ACT_MELEE_VM_IDLE_TO_LOWERED = 0x346,
	ACT_MELEE_VM_IDLE_LOWERED = 0x347,
	ACT_MELEE_VM_LOWERED_TO_IDLE = 0x348,
	ACT_PDA_VM_DRAW = 0x349,
	ACT_PDA_VM_HOLSTER = 0x34a,
	ACT_PDA_VM_IDLE = 0x34b,
	ACT_PDA_VM_PULLBACK = 0x34c,
	ACT_PDA_VM_PRIMARYATTACK = 0x34d,
	ACT_PDA_VM_SECONDARYATTACK = 0x34e,
	ACT_PDA_VM_RELOAD = 0x34f,
	ACT_PDA_VM_DRYFIRE = 0x350,
	ACT_PDA_VM_IDLE_TO_LOWERED = 0x351,
	ACT_PDA_VM_IDLE_LOWERED = 0x352,
	ACT_PDA_VM_LOWERED_TO_IDLE = 0x353,
	ACT_ITEM1_VM_DRAW = 0x354,
	ACT_ITEM1_VM_HOLSTER = 0x355,
	ACT_ITEM1_VM_IDLE = 0x356,
	ACT_ITEM1_VM_PULLBACK = 0x357,
	ACT_ITEM1_VM_PRIMARYATTACK = 0x358,
	ACT_ITEM1_VM_SECONDARYATTACK = 0x359,
	ACT_ITEM1_VM_RELOAD = 0x35a,
	ACT_ITEM1_VM_DRYFIRE = 0x35b,
	ACT_ITEM1_VM_IDLE_TO_LOWERED = 0x35c,
	ACT_ITEM1_VM_IDLE_LOWERED = 0x35d,
	ACT_ITEM1_VM_LOWERED_TO_IDLE = 0x35e,
	ACT_ITEM2_VM_DRAW = 0x35f,
	ACT_ITEM2_VM_HOLSTER = 0x360,
	ACT_ITEM2_VM_IDLE = 0x361,
	ACT_ITEM2_VM_PULLBACK = 0x362,
	ACT_ITEM2_VM_PRIMARYATTACK = 0x363,
	ACT_ITEM2_VM_SECONDARYATTACK = 0x364,
	ACT_ITEM2_VM_RELOAD = 0x365,
	ACT_ITEM2_VM_DRYFIRE = 0x366,
	ACT_ITEM2_VM_IDLE_TO_LOWERED = 0x367,
	ACT_ITEM2_VM_IDLE_LOWERED = 0x368,
	ACT_ITEM2_VM_LOWERED_TO_IDLE = 0x369,
	ACT_RELOAD_SUCCEED = 0x36a,
	ACT_RELOAD_FAIL = 0x36b,
	ACT_WALK_AIM_AUTOGUN = 0x36c,
	ACT_RUN_AIM_AUTOGUN = 0x36d,
	ACT_IDLE_AUTOGUN = 0x36e,
	ACT_IDLE_AIM_AUTOGUN = 0x36f,
	ACT_RELOAD_AUTOGUN = 0x370,
	ACT_CROUCH_IDLE_AUTOGUN = 0x371,
	ACT_RANGE_ATTACK_AUTOGUN = 0x372,
	ACT_JUMP_AUTOGUN = 0x373,
	ACT_IDLE_AIM_PISTOL = 0x374,
	ACT_WALK_AIM_DUAL = 0x375,
	ACT_RUN_AIM_DUAL = 0x376,
	ACT_IDLE_DUAL = 0x377,
	ACT_IDLE_AIM_DUAL = 0x378,
	ACT_RELOAD_DUAL = 0x379,
	ACT_CROUCH_IDLE_DUAL = 0x37a,
	ACT_RANGE_ATTACK_DUAL = 0x37b,
	ACT_JUMP_DUAL = 0x37c,
	ACT_IDLE_AIM_SHOTGUN = 0x37d,
	ACT_CROUCH_IDLE_SHOTGUN = 0x37e,
	ACT_IDLE_AIM_RIFLE = 0x37f,
	ACT_CROUCH_IDLE_RIFLE = 0x380,
	ACT_RANGE_ATTACK_RIFLE = 0x381,
	ACT_SLEEP = 0x382,
	ACT_WAKE = 0x383,
	ACT_FLICK_LEFT = 0x384,
	ACT_FLICK_LEFT_MIDDLE = 0x385,
	ACT_FLICK_RIGHT_MIDDLE = 0x386,
	ACT_FLICK_RIGHT = 0x387,
	ACT_SPINAROUND = 0x388,
	ACT_PREP_TO_FIRE = 0x389,
	ACT_FIRE = 0x38a,
	ACT_FIRE_RECOVER = 0x38b,
	ACT_SPRAY = 0x38c,
	ACT_PREP_EXPLODE = 0x38d,
	ACT_EXPLODE = 0x38e,
	ACT_SCRIPT_CUSTOM_0 = 0x38f,
	ACT_SCRIPT_CUSTOM_1 = 0x390,
	ACT_SCRIPT_CUSTOM_2 = 0x391,
	ACT_SCRIPT_CUSTOM_3 = 0x392,
	ACT_SCRIPT_CUSTOM_4 = 0x393,
	ACT_SCRIPT_CUSTOM_5 = 0x394,
	ACT_SCRIPT_CUSTOM_6 = 0x395,
	ACT_SCRIPT_CUSTOM_7 = 0x396,
	ACT_SCRIPT_CUSTOM_8 = 0x397,
	ACT_SCRIPT_CUSTOM_9 = 0x398,
	ACT_SCRIPT_CUSTOM_10 = 0x399,
	ACT_SCRIPT_CUSTOM_11 = 0x39a,
	ACT_SCRIPT_CUSTOM_12 = 0x39b,
	ACT_SCRIPT_CUSTOM_13 = 0x39c,
	ACT_SCRIPT_CUSTOM_14 = 0x39d,
	ACT_SCRIPT_CUSTOM_15 = 0x39e,
	ACT_SCRIPT_CUSTOM_16 = 0x39f,
	ACT_SCRIPT_CUSTOM_17 = 0x3a0,
	ACT_SCRIPT_CUSTOM_18 = 0x3a1,
	ACT_SCRIPT_CUSTOM_19 = 0x3a2,
	ACT_SCRIPT_CUSTOM_20 = 0x3a3,
	ACT_SCRIPT_CUSTOM_21 = 0x3a4,
	ACT_SCRIPT_CUSTOM_22 = 0x3a5,
	ACT_SCRIPT_CUSTOM_23 = 0x3a6,
	ACT_SCRIPT_CUSTOM_24 = 0x3a7,
	ACT_SCRIPT_CUSTOM_25 = 0x3a8,
	ACT_SCRIPT_CUSTOM_26 = 0x3a9,
	ACT_SCRIPT_CUSTOM_27 = 0x3aa,
	ACT_SCRIPT_CUSTOM_28 = 0x3ab,
	ACT_SCRIPT_CUSTOM_29 = 0x3ac,
	ACT_SCRIPT_CUSTOM_30 = 0x3ad,
	ACT_SCRIPT_CUSTOM_31 = 0x3ae,
	ACT_VR_PISTOL_LAST_SHOT = 0x3af,
	ACT_VR_PISTOL_SLIDE_RELEASE = 0x3b0,
	ACT_VR_PISTOL_CLIP_OUT_CHAMBERED = 0x3b1,
	ACT_VR_PISTOL_CLIP_OUT_SLIDE_BACK = 0x3b2,
	ACT_VR_PISTOL_CLIP_IN_CHAMBERED = 0x3b3,
	ACT_VR_PISTOL_CLIP_IN_SLIDE_BACK = 0x3b4,
	ACT_VR_PISTOL_IDLE_SLIDE_BACK = 0x3b5,
	ACT_VR_PISTOL_IDLE_SLIDE_BACK_CLIP_READY = 0x3b6,
	ACT_RAGDOLL_RECOVERY_FRONT = 0x3b7,
	ACT_RAGDOLL_RECOVERY_BACK = 0x3b8,
	ACT_RAGDOLL_RECOVERY_LEFT = 0x3b9,
	ACT_RAGDOLL_RECOVERY_RIGHT = 0x3ba,
	ACT_GRABBITYGLOVES_GRAB = 0x3bb,
	ACT_GRABBITYGLOVES_RELEASE = 0x3bc,
	ACT_GRABBITYGLOVES_GRAB_IDLE = 0x3bd,
	ACT_GRABBITYGLOVES_ACTIVE = 0x3be,
	ACT_GRABBITYGLOVES_ACTIVE_IDLE = 0x3bf,
	ACT_GRABBITYGLOVES_DEACTIVATE = 0x3c0,
	ACT_GRABBITYGLOVES_PULL = 0x3c1,
	ACT_HEADCRAB_SMOKE_BOMB = 0x3c2,
	ACT_HEADCRAB_SPIT = 0x3c3,
	ACT_ZOMBIE_TRIP = 0x3c4,
	ACT_ZOMBIE_LUNGE = 0x3c5,
	ACT_NEUTRAL_REF_POSE = 0x3c6,
	ACT_ANTLION_SCUTTLE_FORWARD = 0x3c7,
	ACT_ANTLION_SCUTTLE_BACK = 0x3c8,
	ACT_ANTLION_SCUTTLE_LEFT = 0x3c9,
	ACT_ANTLION_SCUTTLE_RIGHT = 0x3ca,
	ACT_VR_PISTOL_EMPTY_CLIP_IN_SLIDE_BACK = 0x3cb,
	ACT_VR_SHOTGUN_IDLE = 0x3cc,
	ACT_VR_SHOTGUN_OPEN_CHAMBER = 0x3cd,
	ACT_VR_SHOTGUN_RELOAD_1 = 0x3ce,
	ACT_VR_SHOTGUN_RELOAD_2 = 0x3cf,
	ACT_VR_SHOTGUN_RELOAD_3 = 0x3d0,
	ACT_VR_SHOTGUN_CLOSE_CHAMBER = 0x3d1,
	ACT_VR_SHOTGUN_TRIGGER_SQUEEZE = 0x3d2,
	ACT_VR_SHOTGUN_SHOOT = 0x3d3,
	ACT_VR_SHOTGUN_SLIDE_BACK = 0x3d4,
	ACT_VR_SHOTGUN_SLIDE_FORWARD = 0x3d5,
	ACT_VR_PISTOL_LONG_CLIP_IN_CHAMBERED = 0x3d6,
	ACT_VR_PISTOL_LONG_CLIP_IN_SLIDE_BACK = 0x3d7,
	ACT_VR_PISTOL_BURST_TOGGLE = 0x3d8,
	ACT_VR_PISTOL_LOW_KICK = 0x3d9,
	ACT_VR_PISTOL_BURST_ATTACK = 0x3da,
	ACT_VR_SHOTGUN_GRENADE_TWIST = 0x3db,
	ACT_DIE_STAND = 0x3dc,
	ACT_DIE_STAND_HEADSHOT = 0x3dd,
	ACT_DIE_CROUCH = 0x3de,
	ACT_DIE_CROUCH_HEADSHOT = 0x3df,
	ACT_CSGO_NULL = 0x3e0,
	ACT_CSGO_DEFUSE = 0x3e1,
	ACT_CSGO_DEFUSE_WITH_KIT = 0x3e2,
	ACT_CSGO_FLASHBANG_REACTION = 0x3e3,
	ACT_CSGO_FIRE_PRIMARY = 0x3e4,
	ACT_CSGO_FIRE_PRIMARY_OPT_1 = 0x3e5,
	ACT_CSGO_FIRE_PRIMARY_OPT_2 = 0x3e6,
	ACT_CSGO_FIRE_SECONDARY = 0x3e7,
	ACT_CSGO_FIRE_SECONDARY_OPT_1 = 0x3e8,
	ACT_CSGO_FIRE_SECONDARY_OPT_2 = 0x3e9,
	ACT_CSGO_RELOAD = 0x3ea,
	ACT_CSGO_RELOAD_START = 0x3eb,
	ACT_CSGO_RELOAD_LOOP = 0x3ec,
	ACT_CSGO_RELOAD_END = 0x3ed,
	ACT_CSGO_OPERATE = 0x3ee,
	ACT_CSGO_DEPLOY = 0x3ef,
	ACT_CSGO_CATCH = 0x3f0,
	ACT_CSGO_SILENCER_DETACH = 0x3f1,
	ACT_CSGO_SILENCER_ATTACH = 0x3f2,
	ACT_CSGO_TWITCH = 0x3f3,
	ACT_CSGO_TWITCH_BUYZONE = 0x3f4,
	ACT_CSGO_PLANT_BOMB = 0x3f5,
	ACT_CSGO_IDLE_TURN_BALANCEADJUST = 0x3f6,
	ACT_CSGO_IDLE_ADJUST_STOPPEDMOVING = 0x3f7,
	ACT_CSGO_ALIVE_LOOP = 0x3f8,
	ACT_CSGO_FLINCH = 0x3f9,
	ACT_CSGO_FLINCH_HEAD = 0x3fa,
	ACT_CSGO_FLINCH_MOLOTOV = 0x3fb,
	ACT_CSGO_JUMP = 0x3fc,
	ACT_CSGO_FALL = 0x3fd,
	ACT_CSGO_CLIMB_LADDER = 0x3fe,
	ACT_CSGO_LAND_LIGHT = 0x3ff,
	ACT_CSGO_LAND_HEAVY = 0x400,
	ACT_CSGO_EXIT_LADDER_TOP = 0x401,
	ACT_CSGO_EXIT_LADDER_BOTTOM = 0x402,
	ACT_CSGO_PARACHUTE = 0x403,
	ACT_CSGO_TAUNT = 0x404,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x109
enum class GameActivity_t : uint32_t
{
	ACT_DOTA_IDLE = 0x5dc,
	ACT_DOTA_IDLE_RARE = 0x5dd,
	ACT_DOTA_RUN = 0x5de,
	ACT_DOTA_ATTACK = 0x5df,
	ACT_DOTA_ATTACK2 = 0x5e0,
	ACT_DOTA_ATTACK_EVENT = 0x5e1,
	ACT_DOTA_DIE = 0x5e2,
	ACT_DOTA_FLINCH = 0x5e3,
	ACT_DOTA_FLAIL = 0x5e4,
	ACT_DOTA_DISABLED = 0x5e5,
	ACT_DOTA_CAST_ABILITY_1 = 0x5e6,
	ACT_DOTA_CAST_ABILITY_2 = 0x5e7,
	ACT_DOTA_CAST_ABILITY_3 = 0x5e8,
	ACT_DOTA_CAST_ABILITY_4 = 0x5e9,
	ACT_DOTA_CAST_ABILITY_5 = 0x5ea,
	ACT_DOTA_CAST_ABILITY_6 = 0x5eb,
	ACT_DOTA_OVERRIDE_ABILITY_1 = 0x5ec,
	ACT_DOTA_OVERRIDE_ABILITY_2 = 0x5ed,
	ACT_DOTA_OVERRIDE_ABILITY_3 = 0x5ee,
	ACT_DOTA_OVERRIDE_ABILITY_4 = 0x5ef,
	ACT_DOTA_CHANNEL_ABILITY_1 = 0x5f0,
	ACT_DOTA_CHANNEL_ABILITY_2 = 0x5f1,
	ACT_DOTA_CHANNEL_ABILITY_3 = 0x5f2,
	ACT_DOTA_CHANNEL_ABILITY_4 = 0x5f3,
	ACT_DOTA_CHANNEL_ABILITY_5 = 0x5f4,
	ACT_DOTA_CHANNEL_ABILITY_6 = 0x5f5,
	ACT_DOTA_CHANNEL_END_ABILITY_1 = 0x5f6,
	ACT_DOTA_CHANNEL_END_ABILITY_2 = 0x5f7,
	ACT_DOTA_CHANNEL_END_ABILITY_3 = 0x5f8,
	ACT_DOTA_CHANNEL_END_ABILITY_4 = 0x5f9,
	ACT_DOTA_CHANNEL_END_ABILITY_5 = 0x5fa,
	ACT_DOTA_CHANNEL_END_ABILITY_6 = 0x5fb,
	ACT_DOTA_CONSTANT_LAYER = 0x5fc,
	ACT_DOTA_CAPTURE = 0x5fd,
	ACT_DOTA_SPAWN = 0x5fe,
	ACT_DOTA_KILLTAUNT = 0x5ff,
	ACT_DOTA_TAUNT = 0x600,
	ACT_DOTA_THIRST = 0x601,
	ACT_DOTA_CAST_DRAGONBREATH = 0x602,
	ACT_DOTA_ECHO_SLAM = 0x603,
	ACT_DOTA_CAST_ABILITY_1_END = 0x604,
	ACT_DOTA_CAST_ABILITY_2_END = 0x605,
	ACT_DOTA_CAST_ABILITY_3_END = 0x606,
	ACT_DOTA_CAST_ABILITY_4_END = 0x607,
	ACT_MIRANA_LEAP_END = 0x608,
	ACT_WAVEFORM_START = 0x609,
	ACT_WAVEFORM_END = 0x60a,
	ACT_DOTA_CAST_ABILITY_ROT = 0x60b,
	ACT_DOTA_DIE_SPECIAL = 0x60c,
	ACT_DOTA_RATTLETRAP_BATTERYASSAULT = 0x60d,
	ACT_DOTA_RATTLETRAP_POWERCOGS = 0x60e,
	ACT_DOTA_RATTLETRAP_HOOKSHOT_START = 0x60f,
	ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP = 0x610,
	ACT_DOTA_RATTLETRAP_HOOKSHOT_END = 0x611,
	ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE = 0x612,
	ACT_DOTA_TINKER_REARM1 = 0x613,
	ACT_DOTA_TINKER_REARM2 = 0x614,
	ACT_DOTA_TINKER_REARM3 = 0x615,
	ACT_TINY_AVALANCHE = 0x616,
	ACT_TINY_TOSS = 0x617,
	ACT_TINY_GROWL = 0x618,
	ACT_DOTA_WEAVERBUG_ATTACH = 0x619,
	ACT_DOTA_CAST_WILD_AXES_END = 0x61a,
	ACT_DOTA_CAST_LIFE_BREAK_START = 0x61b,
	ACT_DOTA_CAST_LIFE_BREAK_END = 0x61c,
	ACT_DOTA_NIGHTSTALKER_TRANSITION = 0x61d,
	ACT_DOTA_LIFESTEALER_RAGE = 0x61e,
	ACT_DOTA_LIFESTEALER_OPEN_WOUNDS = 0x61f,
	ACT_DOTA_SAND_KING_BURROW_IN = 0x620,
	ACT_DOTA_SAND_KING_BURROW_OUT = 0x621,
	ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK = 0x622,
	ACT_DOTA_WHEEL_LAYER = 0x623,
	ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START = 0x624,
	ACT_DOTA_ALCHEMIST_CONCOCTION = 0x625,
	ACT_DOTA_JAKIRO_LIQUIDFIRE_START = 0x626,
	ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP = 0x627,
	ACT_DOTA_LIFESTEALER_INFEST = 0x628,
	ACT_DOTA_LIFESTEALER_INFEST_END = 0x629,
	ACT_DOTA_LASSO_LOOP = 0x62a,
	ACT_DOTA_ALCHEMIST_CONCOCTION_THROW = 0x62b,
	ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END = 0x62c,
	ACT_DOTA_CAST_COLD_SNAP = 0x62d,
	ACT_DOTA_CAST_GHOST_WALK = 0x62e,
	ACT_DOTA_CAST_TORNADO = 0x62f,
	ACT_DOTA_CAST_EMP = 0x630,
	ACT_DOTA_CAST_ALACRITY = 0x631,
	ACT_DOTA_CAST_CHAOS_METEOR = 0x632,
	ACT_DOTA_CAST_SUN_STRIKE = 0x633,
	ACT_DOTA_CAST_FORGE_SPIRIT = 0x634,
	ACT_DOTA_CAST_ICE_WALL = 0x635,
	ACT_DOTA_CAST_DEAFENING_BLAST = 0x636,
	ACT_DOTA_VICTORY = 0x637,
	ACT_DOTA_DEFEAT = 0x638,
	ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE = 0x639,
	ACT_DOTA_SPIRIT_BREAKER_CHARGE_END = 0x63a,
	ACT_DOTA_TELEPORT = 0x63b,
	ACT_DOTA_TELEPORT_END = 0x63c,
	ACT_DOTA_CAST_REFRACTION = 0x63d,
	ACT_DOTA_CAST_ABILITY_7 = 0x63e,
	ACT_DOTA_CANCEL_SIREN_SONG = 0x63f,
	ACT_DOTA_CHANNEL_ABILITY_7 = 0x640,
	ACT_DOTA_LOADOUT = 0x641,
	ACT_DOTA_FORCESTAFF_END = 0x642,
	ACT_DOTA_POOF_END = 0x643,
	ACT_DOTA_SLARK_POUNCE = 0x644,
	ACT_DOTA_MAGNUS_SKEWER_START = 0x645,
	ACT_DOTA_MAGNUS_SKEWER_END = 0x646,
	ACT_DOTA_MEDUSA_STONE_GAZE = 0x647,
	ACT_DOTA_RELAX_START = 0x648,
	ACT_DOTA_RELAX_LOOP = 0x649,
	ACT_DOTA_RELAX_END = 0x64a,
	ACT_DOTA_CENTAUR_STAMPEDE = 0x64b,
	ACT_DOTA_BELLYACHE_START = 0x64c,
	ACT_DOTA_BELLYACHE_LOOP = 0x64d,
	ACT_DOTA_BELLYACHE_END = 0x64e,
	ACT_DOTA_ROQUELAIRE_LAND = 0x64f,
	ACT_DOTA_ROQUELAIRE_LAND_IDLE = 0x650,
	ACT_DOTA_GREEVIL_CAST = 0x651,
	ACT_DOTA_GREEVIL_OVERRIDE_ABILITY = 0x652,
	ACT_DOTA_GREEVIL_HOOK_START = 0x653,
	ACT_DOTA_GREEVIL_HOOK_END = 0x654,
	ACT_DOTA_GREEVIL_BLINK_BONE = 0x655,
	ACT_DOTA_IDLE_SLEEPING = 0x656,
	ACT_DOTA_INTRO = 0x657,
	ACT_DOTA_GESTURE_POINT = 0x658,
	ACT_DOTA_GESTURE_ACCENT = 0x659,
	ACT_DOTA_SLEEPING_END = 0x65a,
	ACT_DOTA_AMBUSH = 0x65b,
	ACT_DOTA_ITEM_LOOK = 0x65c,
	ACT_DOTA_STARTLE = 0x65d,
	ACT_DOTA_FRUSTRATION = 0x65e,
	ACT_DOTA_TELEPORT_REACT = 0x65f,
	ACT_DOTA_TELEPORT_END_REACT = 0x660,
	ACT_DOTA_SHRUG = 0x661,
	ACT_DOTA_RELAX_LOOP_END = 0x662,
	ACT_DOTA_PRESENT_ITEM = 0x663,
	ACT_DOTA_IDLE_IMPATIENT = 0x664,
	ACT_DOTA_SHARPEN_WEAPON = 0x665,
	ACT_DOTA_SHARPEN_WEAPON_OUT = 0x666,
	ACT_DOTA_IDLE_SLEEPING_END = 0x667,
	ACT_DOTA_BRIDGE_DESTROY = 0x668,
	ACT_DOTA_TAUNT_SNIPER = 0x669,
	ACT_DOTA_DEATH_BY_SNIPER = 0x66a,
	ACT_DOTA_LOOK_AROUND = 0x66b,
	ACT_DOTA_CAGED_CREEP_RAGE = 0x66c,
	ACT_DOTA_CAGED_CREEP_RAGE_OUT = 0x66d,
	ACT_DOTA_CAGED_CREEP_SMASH = 0x66e,
	ACT_DOTA_CAGED_CREEP_SMASH_OUT = 0x66f,
	ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP = 0x670,
	ACT_DOTA_INTRO_LOOP = 0x671,
	ACT_DOTA_BRIDGE_THREAT = 0x672,
	ACT_DOTA_DAGON = 0x673,
	ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START = 0x674,
	ACT_DOTA_CAST_ABILITY_2_ES_ROLL = 0x675,
	ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END = 0x676,
	ACT_DOTA_NIAN_PIN_START = 0x677,
	ACT_DOTA_NIAN_PIN_LOOP = 0x678,
	ACT_DOTA_NIAN_PIN_END = 0x679,
	ACT_DOTA_LEAP_STUN = 0x67a,
	ACT_DOTA_LEAP_SWIPE = 0x67b,
	ACT_DOTA_NIAN_INTRO_LEAP = 0x67c,
	ACT_DOTA_AREA_DENY = 0x67d,
	ACT_DOTA_NIAN_PIN_TO_STUN = 0x67e,
	ACT_DOTA_RAZE_1 = 0x67f,
	ACT_DOTA_RAZE_2 = 0x680,
	ACT_DOTA_RAZE_3 = 0x681,
	ACT_DOTA_UNDYING_DECAY = 0x682,
	ACT_DOTA_UNDYING_SOUL_RIP = 0x683,
	ACT_DOTA_UNDYING_TOMBSTONE = 0x684,
	ACT_DOTA_WHIRLING_AXES_RANGED = 0x685,
	ACT_DOTA_SHALLOW_GRAVE = 0x686,
	ACT_DOTA_COLD_FEET = 0x687,
	ACT_DOTA_ICE_VORTEX = 0x688,
	ACT_DOTA_CHILLING_TOUCH = 0x689,
	ACT_DOTA_ENFEEBLE = 0x68a,
	ACT_DOTA_FATAL_BONDS = 0x68b,
	ACT_DOTA_MIDNIGHT_PULSE = 0x68c,
	ACT_DOTA_ANCESTRAL_SPIRIT = 0x68d,
	ACT_DOTA_THUNDER_STRIKE = 0x68e,
	ACT_DOTA_KINETIC_FIELD = 0x68f,
	ACT_DOTA_STATIC_STORM = 0x690,
	ACT_DOTA_MINI_TAUNT = 0x691,
	ACT_DOTA_ARCTIC_BURN_END = 0x692,
	ACT_DOTA_LOADOUT_RARE = 0x693,
	ACT_DOTA_SWIM = 0x694,
	ACT_DOTA_FLEE = 0x695,
	ACT_DOTA_TROT = 0x696,
	ACT_DOTA_SHAKE = 0x697,
	ACT_DOTA_SWIM_IDLE = 0x698,
	ACT_DOTA_WAIT_IDLE = 0x699,
	ACT_DOTA_GREET = 0x69a,
	ACT_DOTA_TELEPORT_COOP_START = 0x69b,
	ACT_DOTA_TELEPORT_COOP_WAIT = 0x69c,
	ACT_DOTA_TELEPORT_COOP_END = 0x69d,
	ACT_DOTA_TELEPORT_COOP_EXIT = 0x69e,
	ACT_DOTA_SHOPKEEPER_PET_INTERACT = 0x69f,
	ACT_DOTA_ITEM_PICKUP = 0x6a0,
	ACT_DOTA_ITEM_DROP = 0x6a1,
	ACT_DOTA_CAPTURE_PET = 0x6a2,
	ACT_DOTA_PET_WARD_OBSERVER = 0x6a3,
	ACT_DOTA_PET_WARD_SENTRY = 0x6a4,
	ACT_DOTA_PET_LEVEL = 0x6a5,
	ACT_DOTA_CAST_BURROW_END = 0x6a6,
	ACT_DOTA_LIFESTEALER_ASSIMILATE = 0x6a7,
	ACT_DOTA_LIFESTEALER_EJECT = 0x6a8,
	ACT_DOTA_ATTACK_EVENT_BASH = 0x6a9,
	ACT_DOTA_CAPTURE_RARE = 0x6aa,
	ACT_DOTA_AW_MAGNETIC_FIELD = 0x6ab,
	ACT_DOTA_CAST_GHOST_SHIP = 0x6ac,
	ACT_DOTA_FXANIM = 0x6ad,
	ACT_DOTA_VICTORY_START = 0x6ae,
	ACT_DOTA_DEFEAT_START = 0x6af,
	ACT_DOTA_DP_SPIRIT_SIPHON = 0x6b0,
	ACT_DOTA_TRICKS_END = 0x6b1,
	ACT_DOTA_ES_STONE_CALLER = 0x6b2,
	ACT_DOTA_MK_STRIKE = 0x6b3,
	ACT_DOTA_VERSUS = 0x6b4,
	ACT_DOTA_CAPTURE_CARD = 0x6b5,
	ACT_DOTA_MK_SPRING_SOAR = 0x6b6,
	ACT_DOTA_MK_SPRING_END = 0x6b7,
	ACT_DOTA_MK_TREE_SOAR = 0x6b8,
	ACT_DOTA_MK_TREE_END = 0x6b9,
	ACT_DOTA_MK_FUR_ARMY = 0x6ba,
	ACT_DOTA_MK_SPRING_CAST = 0x6bb,
	ACT_DOTA_NECRO_GHOST_SHROUD = 0x6bc,
	ACT_DOTA_OVERRIDE_ARCANA = 0x6bd,
	ACT_DOTA_SLIDE = 0x6be,
	ACT_DOTA_SLIDE_LOOP = 0x6bf,
	ACT_DOTA_GENERIC_CHANNEL_1 = 0x6c0,
	ACT_DOTA_GS_SOUL_CHAIN = 0x6c1,
	ACT_DOTA_GS_INK_CREATURE = 0x6c2,
	ACT_DOTA_TRANSITION = 0x6c3,
	ACT_DOTA_BLINK_DAGGER = 0x6c4,
	ACT_DOTA_BLINK_DAGGER_END = 0x6c5,
	ACT_DOTA_CUSTOM_TOWER_ATTACK = 0x6c6,
	ACT_DOTA_CUSTOM_TOWER_IDLE = 0x6c7,
	ACT_DOTA_CUSTOM_TOWER_DIE = 0x6c8,
	ACT_DOTA_CAST_COLD_SNAP_ORB = 0x6c9,
	ACT_DOTA_CAST_GHOST_WALK_ORB = 0x6ca,
	ACT_DOTA_CAST_TORNADO_ORB = 0x6cb,
	ACT_DOTA_CAST_EMP_ORB = 0x6cc,
	ACT_DOTA_CAST_ALACRITY_ORB = 0x6cd,
	ACT_DOTA_CAST_CHAOS_METEOR_ORB = 0x6ce,
	ACT_DOTA_CAST_SUN_STRIKE_ORB = 0x6cf,
	ACT_DOTA_CAST_FORGE_SPIRIT_ORB = 0x6d0,
	ACT_DOTA_CAST_ICE_WALL_ORB = 0x6d1,
	ACT_DOTA_CAST_DEAFENING_BLAST_ORB = 0x6d2,
	ACT_DOTA_NOTICE = 0x6d3,
	ACT_DOTA_CAST_ABILITY_2_ALLY = 0x6d4,
	ACT_DOTA_SHUFFLE_L = 0x6d5,
	ACT_DOTA_SHUFFLE_R = 0x6d6,
	ACT_DOTA_OVERRIDE_LOADOUT = 0x6d7,
	ACT_DOTA_TAUNT_SPECIAL = 0x6d8,
	ACT_DOTA_TELEPORT_START = 0x6d9,
	ACT_DOTA_GENERIC_CHANNEL_1_START = 0x6da,
	ACT_DOTA_CUSTOM_TOWER_IDLE_RARE = 0x6db,
	ACT_DOTA_CUSTOM_TOWER_TAUNT = 0x6dc,
	ACT_DOTA_CUSTOM_TOWER_HIGH_FIVE = 0x6dd,
	ACT_DOTA_ATTACK_SPECIAL = 0x6de,
	ACT_DOTA_TRANSITION_IDLE = 0x6df,
	ACT_DOTA_PIERCE_THE_VEIL = 0x6e0,
	ACT_DOTA_RUN_RARE = 0x6e1,
	ACT_DOTA_VIPER_DIVE = 0x6e2,
	ACT_DOTA_VIPER_DIVE_END = 0x6e3,
	ACT_DOTA_MK_STRIKE_END = 0x6e4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x22
enum class DOTAHUDVisibility_t : uint32_t
{
	DOTA_HUD_VISIBILITY_INVALID = 0xffffffffffffffff,
	DOTA_HUD_VISIBILITY_TOP_TIMEOFDAY = 0x0,
	DOTA_HUD_VISIBILITY_TOP_HEROES = 0x1,
	DOTA_HUD_VISIBILITY_TOP_SCOREBOARD = 0x2,
	DOTA_HUD_VISIBILITY_ACTION_PANEL = 0x3,
	DOTA_HUD_VISIBILITY_ACTION_MINIMAP = 0x4,
	DOTA_HUD_VISIBILITY_INVENTORY_PANEL = 0x5,
	DOTA_HUD_VISIBILITY_INVENTORY_SHOP = 0x6,
	DOTA_HUD_VISIBILITY_INVENTORY_ITEMS = 0x7,
	DOTA_HUD_VISIBILITY_INVENTORY_QUICKBUY = 0x8,
	DOTA_HUD_VISIBILITY_INVENTORY_COURIER = 0x9,
	DOTA_HUD_VISIBILITY_INVENTORY_PROTECT = 0xa,
	DOTA_HUD_VISIBILITY_INVENTORY_GOLD = 0xb,
	DOTA_HUD_VISIBILITY_SHOP_SUGGESTEDITEMS = 0xc,
	DOTA_HUD_VISIBILITY_SHOP_COMMONITEMS = 0xd,
	DOTA_HUD_VISIBILITY_HERO_SELECTION_TEAMS = 0xe,
	DOTA_HUD_VISIBILITY_HERO_SELECTION_GAME_NAME = 0xf,
	DOTA_HUD_VISIBILITY_HERO_SELECTION_CLOCK = 0x10,
	DOTA_HUD_VISIBILITY_HERO_SELECTION_HEADER = 0x11,
	DOTA_HUD_VISIBILITY_TOP_MENU_BUTTONS = 0x12,
	DOTA_HUD_VISIBILITY_TOP_BAR_BACKGROUND = 0x13,
	DOTA_HUD_VISIBILITY_TOP_BAR_RADIANT_TEAM = 0x14,
	DOTA_HUD_VISIBILITY_TOP_BAR_DIRE_TEAM = 0x15,
	DOTA_HUD_VISIBILITY_TOP_BAR_SCORE = 0x16,
	DOTA_HUD_VISIBILITY_ENDGAME = 0x17,
	DOTA_HUD_VISIBILITY_ENDGAME_CHAT = 0x18,
	DOTA_HUD_VISIBILITY_QUICK_STATS = 0x19,
	DOTA_HUD_VISIBILITY_PREGAME_STRATEGYUI = 0x1a,
	DOTA_HUD_VISIBILITY_KILLCAM = 0x1b,
	DOTA_HUD_VISIBILITY_FIGHT_RECAP = 0x1c,
	DOTA_HUD_VISIBILITY_TOP_BAR = 0x1d,
	DOTA_HUD_CUSTOMUI_BEHIND_HUD_ELEMENTS = 0x1e,
	DOTA_HUD_VISIBILITY_AGHANIMS_STATUS = 0x1f,
	DOTA_HUD_VISIBILITY_COUNT = 0x20,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x6
enum class EDOTASpecialBonusOperation : uint8_t
{
	SPECIAL_BONUS_ADD = 0x0,
	SPECIAL_BONUS_MULTIPLY = 0x1,
	SPECIAL_BONUS_SUBTRACT = 0x2,
	SPECIAL_BONUS_PERCENTAGE_ADD = 0x3,
	SPECIAL_BONUS_PERCENTAGE_SUBTRACT = 0x4,
	SPECIAL_BONUS_SET = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class ItemQuality_t : uint32_t
{
	DOTA_ITEM_QUALITY_CONSUMABLE = 0x0,
	DOTA_ITEM_QUALITY_PLAIN = 0x1,
	DOTA_ITEM_QUALITY_COMMON = 0x2,
	DOTA_ITEM_QUALITY_RARE = 0x3,
	DOTA_ITEM_QUALITY_EPIC = 0x4,
	DOTA_ITEM_QUALITY_ARTIFACT = 0x5,
	DOTA_ITEM_QUALITY_SECRET_SHOP = 0x6,
	NUM_ITEM_QUALITY_LEVELS = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xe
enum class DOTAMinimapEvent_t : uint32_t
{
	DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK = 0x2,
	DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK = 0x4,
	DOTA_MINIMAP_EVENT_BASE_GLYPHED = 0x8,
	DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK = 0x10,
	DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING = 0x20,
	DOTA_MINIMAP_EVENT_TEAMMATE_DIED = 0x40,
	DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE = 0x80,
	DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED = 0x100,
	DOTA_MINIMAP_EVENT_HINT_LOCATION = 0x200,
	DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING = 0x400,
	DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING = 0x800,
	DOTA_MINIMAP_EVENT_RADAR = 0x1000,
	DOTA_MINIMAP_EVENT_RADAR_TARGET = 0x2000,
	DOTA_MINIMAP_EVENT_MOVE_TO_TARGET = 0x4000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class ERoshanSpawnPhase : uint32_t
{
	ROSHAN_SPAWN_PHASE_ALIVE = 0x0,
	ROSHAN_SPAWN_PHASE_BASE_TIMER = 0x1,
	ROSHAN_SPAWN_PHASE_VISIBLE_TIMER = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3f
enum class DOTA_HeroPickState : uint32_t
{
	DOTA_HEROPICK_STATE_NONE = 0x0,
	DOTA_HEROPICK_STATE_AP_SELECT = 0x1,
	DOTA_HEROPICK_STATE_SD_SELECT = 0x2,
	DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED = 0x3,
	DOTA_HEROPICK_STATE_RD_SELECT_UNUSED = 0x4,
	DOTA_HEROPICK_STATE_CM_INTRO = 0x5,
	DOTA_HEROPICK_STATE_CM_CAPTAINPICK = 0x6,
	DOTA_HEROPICK_STATE_CM_BAN1 = 0x7,
	DOTA_HEROPICK_STATE_CM_BAN2 = 0x8,
	DOTA_HEROPICK_STATE_CM_BAN3 = 0x9,
	DOTA_HEROPICK_STATE_CM_BAN4 = 0xa,
	DOTA_HEROPICK_STATE_CM_BAN5 = 0xb,
	DOTA_HEROPICK_STATE_CM_BAN6 = 0xc,
	DOTA_HEROPICK_STATE_CM_BAN7 = 0xd,
	DOTA_HEROPICK_STATE_CM_BAN8 = 0xe,
	DOTA_HEROPICK_STATE_CM_BAN9 = 0xf,
	DOTA_HEROPICK_STATE_CM_BAN10 = 0x10,
	DOTA_HEROPICK_STATE_CM_BAN11 = 0x11,
	DOTA_HEROPICK_STATE_CM_BAN12 = 0x12,
	DOTA_HEROPICK_STATE_CM_BAN13 = 0x13,
	DOTA_HEROPICK_STATE_CM_BAN14 = 0x14,
	DOTA_HEROPICK_STATE_CM_SELECT1 = 0x15,
	DOTA_HEROPICK_STATE_CM_SELECT2 = 0x16,
	DOTA_HEROPICK_STATE_CM_SELECT3 = 0x17,
	DOTA_HEROPICK_STATE_CM_SELECT4 = 0x18,
	DOTA_HEROPICK_STATE_CM_SELECT5 = 0x19,
	DOTA_HEROPICK_STATE_CM_SELECT6 = 0x1a,
	DOTA_HEROPICK_STATE_CM_SELECT7 = 0x1b,
	DOTA_HEROPICK_STATE_CM_SELECT8 = 0x1c,
	DOTA_HEROPICK_STATE_CM_SELECT9 = 0x1d,
	DOTA_HEROPICK_STATE_CM_SELECT10 = 0x1e,
	DOTA_HEROPICK_STATE_CM_PICK = 0x1f,
	DOTA_HEROPICK_STATE_AR_SELECT = 0x20,
	DOTA_HEROPICK_STATE_MO_SELECT = 0x21,
	DOTA_HEROPICK_STATE_FH_SELECT = 0x22,
	DOTA_HEROPICK_STATE_CD_INTRO = 0x23,
	DOTA_HEROPICK_STATE_CD_CAPTAINPICK = 0x24,
	DOTA_HEROPICK_STATE_CD_BAN1 = 0x25,
	DOTA_HEROPICK_STATE_CD_BAN2 = 0x26,
	DOTA_HEROPICK_STATE_CD_BAN3 = 0x27,
	DOTA_HEROPICK_STATE_CD_BAN4 = 0x28,
	DOTA_HEROPICK_STATE_CD_BAN5 = 0x29,
	DOTA_HEROPICK_STATE_CD_BAN6 = 0x2a,
	DOTA_HEROPICK_STATE_CD_SELECT1 = 0x2b,
	DOTA_HEROPICK_STATE_CD_SELECT2 = 0x2c,
	DOTA_HEROPICK_STATE_CD_SELECT3 = 0x2d,
	DOTA_HEROPICK_STATE_CD_SELECT4 = 0x2e,
	DOTA_HEROPICK_STATE_CD_SELECT5 = 0x2f,
	DOTA_HEROPICK_STATE_CD_SELECT6 = 0x30,
	DOTA_HEROPICK_STATE_CD_SELECT7 = 0x31,
	DOTA_HEROPICK_STATE_CD_SELECT8 = 0x32,
	DOTA_HEROPICK_STATE_CD_SELECT9 = 0x33,
	DOTA_HEROPICK_STATE_CD_SELECT10 = 0x34,
	DOTA_HEROPICK_STATE_CD_PICK = 0x35,
	DOTA_HEROPICK_STATE_BD_SELECT = 0x36,
	DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT = 0x37,
	DOTA_HERO_PICK_STATE_ARDM_SELECT = 0x38,
	DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT = 0x39,
	DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT = 0x3a,
	DOTA_HEROPICK_STATE_SELECT_PENALTY = 0x3b,
	DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES = 0x3c,
	DOTA_HEROPICK_STATE_SCENARIO_PICK = 0x3d,
	DOTA_HEROPICK_STATE_COUNT = 0x3e,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTA_PlayerDraftState : uint32_t
{
	DOTA_PLAYERDRAFT_STATE_INACTIVE = 0x0,
	DOTA_PLAYERDRAFT_STATE_INTRO = 0x1,
	DOTA_PLAYERDRAFT_STATE_DRAFT = 0x2,
	DOTA_PLAYERDRAFT_STATE_OUTRO = 0x3,
	DOTA_PLAYERDRAFT_STATE_COUNT = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class HeroPickType : uint32_t
{
	HERO_PICK = 0x0,
	HERO_BAN = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class DOTACustomHeroPickRulesPhase_t : uint32_t
{
	PHASE_Ban = 0x0,
	PHASE_Pick = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class DOTAModifierAttribute_t : uint32_t
{
	MODIFIER_ATTRIBUTE_NONE = 0x0,
	MODIFIER_ATTRIBUTE_PERMANENT = 0x1,
	MODIFIER_ATTRIBUTE_MULTIPLE = 0x2,
	MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE = 0x4,
	MODIFIER_ATTRIBUTE_AURA_PRIORITY = 0x8,
	MODIFIER_ATTRIBUTE_IGNORE_DODGE = 0x10,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class Attributes : uint32_t
{
	DOTA_ATTRIBUTE_STRENGTH = 0x0,
	DOTA_ATTRIBUTE_AGILITY = 0x1,
	DOTA_ATTRIBUTE_INTELLECT = 0x2,
	DOTA_ATTRIBUTE_ALL = 0x3,
	DOTA_ATTRIBUTE_MAX = 0x4,
	DOTA_ATTRIBUTE_INVALID = 0xffffffffffffffff,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xb
enum class AttributeDerivedStats : uint32_t
{
	DOTA_ATTRIBUTE_STRENGTH_DAMAGE = 0x0,
	DOTA_ATTRIBUTE_STRENGTH_HP = 0x1,
	DOTA_ATTRIBUTE_STRENGTH_HP_REGEN = 0x2,
	DOTA_ATTRIBUTE_AGILITY_DAMAGE = 0x3,
	DOTA_ATTRIBUTE_AGILITY_ARMOR = 0x4,
	DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED = 0x5,
	DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE = 0x6,
	DOTA_ATTRIBUTE_INTELLIGENCE_MANA = 0x7,
	DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN = 0x8,
	DOTA_ATTRIBUTE_INTELLIGENCE_MAGIC_RESIST = 0x9,
	DOTA_ATTRIBUTE_ALL_DAMAGE = 0xa,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class AbilityBarType_t : uint32_t
{
	ABILITY_BAR_TYPE_MAIN = 0x0,
	ABILITY_BAR_TYPE_SECONDARY = 0x1,
	ABILITY_BAR_TYPE_TERTIARY = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
// 
// MEnumFlagsWithOverlappingBits
enum class DAMAGE_TYPES : uint32_t
{
	DAMAGE_TYPE_NONE = 0x0,
	DAMAGE_TYPE_PHYSICAL = 0x1,
	DAMAGE_TYPE_MAGICAL = 0x2,
	DAMAGE_TYPE_PURE = 0x4,
	DAMAGE_TYPE_HP_REMOVAL = 0x8,
	DAMAGE_TYPE_ABILITY_DEFINED = 0x16,
	DAMAGE_TYPE_ALL = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ABILITY_TYPES : uint32_t
{
	ABILITY_TYPE_BASIC = 0x0,
	ABILITY_TYPE_ULTIMATE = 0x1,
	ABILITY_TYPE_ATTRIBUTES = 0x2,
	ABILITY_TYPE_HIDDEN = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class SPELL_IMMUNITY_TYPES : uint32_t
{
	SPELL_IMMUNITY_NONE = 0x0,
	SPELL_IMMUNITY_ALLIES_YES = 0x1,
	SPELL_IMMUNITY_ALLIES_NO = 0x2,
	SPELL_IMMUNITY_ENEMIES_YES = 0x3,
	SPELL_IMMUNITY_ENEMIES_NO = 0x4,
	SPELL_IMMUNITY_ALLIES_YES_ENEMIES_NO = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class SPELL_DISPELLABLE_TYPES : uint32_t
{
	SPELL_DISPELLABLE_NONE = 0x0,
	SPELL_DISPELLABLE_YES_STRONG = 0x1,
	SPELL_DISPELLABLE_YES = 0x2,
	SPELL_DISPELLABLE_NO = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class DOTAUnitMoveCapability_t : uint32_t
{
	DOTA_UNIT_CAP_MOVE_NONE = 0x0,
	DOTA_UNIT_CAP_MOVE_GROUND = 0x1,
	DOTA_UNIT_CAP_MOVE_FLY = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTAUnitAttackCapability_t : uint32_t
{
	DOTA_UNIT_CAP_NO_ATTACK = 0x0,
	DOTA_UNIT_CAP_MELEE_ATTACK = 0x1,
	DOTA_UNIT_CAP_RANGED_ATTACK = 0x2,
	DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL = 0x4,
	DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xd
enum class CLICK_BEHAVIORS : uint32_t
{
	DOTA_CLICK_BEHAVIOR_NONE = 0x0,
	DOTA_CLICK_BEHAVIOR_MOVE = 0x1,
	DOTA_CLICK_BEHAVIOR_ATTACK = 0x2,
	DOTA_CLICK_BEHAVIOR_CAST = 0x3,
	DOTA_CLICK_BEHAVIOR_DROP_ITEM = 0x4,
	DOTA_CLICK_BEHAVIOR_DROP_SHOP_ITEM = 0x5,
	DOTA_CLICK_BEHAVIOR_DRAG = 0x6,
	DOTA_CLICK_BEHAVIOR_LEARN_ABILITY = 0x7,
	DOTA_CLICK_BEHAVIOR_PATROL = 0x8,
	DOTA_CLICK_BEHAVIOR_VECTOR_CAST = 0x9,
	DOTA_CLICK_BEHAVIOR_UNUSED = 0xa,
	DOTA_CLICK_BEHAVIOR_RADAR = 0xb,
	DOTA_CLICK_BEHAVIOR_LAST = 0xc,
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x2b
enum class DOTA_ABILITY_BEHAVIOR : uint64_t
{
	DOTA_ABILITY_BEHAVIOR_NONE = 0x0,
	DOTA_ABILITY_BEHAVIOR_HIDDEN = 0x1,
	DOTA_ABILITY_BEHAVIOR_PASSIVE = 0x2,
	DOTA_ABILITY_BEHAVIOR_NO_TARGET = 0x4,
	DOTA_ABILITY_BEHAVIOR_UNIT_TARGET = 0x8,
	DOTA_ABILITY_BEHAVIOR_POINT = 0x10,
	DOTA_ABILITY_BEHAVIOR_AOE = 0x20,
	DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE = 0x40,
	DOTA_ABILITY_BEHAVIOR_CHANNELLED = 0x80,
	DOTA_ABILITY_BEHAVIOR_ITEM = 0x100,
	DOTA_ABILITY_BEHAVIOR_TOGGLE = 0x200,
	DOTA_ABILITY_BEHAVIOR_DIRECTIONAL = 0x400,
	DOTA_ABILITY_BEHAVIOR_IMMEDIATE = 0x800,
	DOTA_ABILITY_BEHAVIOR_AUTOCAST = 0x1000,
	DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET = 0x2000,
	DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT = 0x4000,
	DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET = 0x8000,
	DOTA_ABILITY_BEHAVIOR_AURA = 0x10000,
	DOTA_ABILITY_BEHAVIOR_ATTACK = 0x20000,
	DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT = 0x40000,
	DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES = 0x80000,
	DOTA_ABILITY_BEHAVIOR_UNRESTRICTED = 0x100000,
	DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE = 0x200000,
	DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL = 0x400000,
	DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT = 0x800000,
	DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET = 0x1000000,
	DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK = 0x2000000,
	DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN = 0x4000000,
	DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING = 0x8000000,
	DOTA_ABILITY_BEHAVIOR_RUNE_TARGET = 0x10000000,
	DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL = 0x20000000,
	DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING = 0x40000000,
	DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT = 0x80000000,
	DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST = 0x100000000,
	DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES = 0x200000000,
	DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX = 0x400000000,
	DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE = 0x800000000,
	DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING = 0x1000000000,
	DOTA_ABILITY_BEHAVIOR_IGNORE_SILENCE = 0x2000000000,
	DOTA_ABILITY_BEHAVIOR_OVERSHOOT = 0x4000000000,
	DOTA_ABILITY_BEHAVIOR_IGNORE_MUTED = 0x8000000000,
	DOTA_ABILITY_BEHAVIOR_ALT_CASTABLE = 0x10000000000,
	DOTA_ABILITY_BEHAVIOR_BREAK_DISABLES = 0x20000000000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x16
enum class EDOTA_ModifyGold_Reason : uint32_t
{
	DOTA_ModifyGold_Unspecified = 0x0,
	DOTA_ModifyGold_Death = 0x1,
	DOTA_ModifyGold_Buyback = 0x2,
	DOTA_ModifyGold_PurchaseConsumable = 0x3,
	DOTA_ModifyGold_PurchaseItem = 0x4,
	DOTA_ModifyGold_AbandonedRedistribute = 0x5,
	DOTA_ModifyGold_SellItem = 0x6,
	DOTA_ModifyGold_AbilityCost = 0x7,
	DOTA_ModifyGold_CheatCommand = 0x8,
	DOTA_ModifyGold_SelectionPenalty = 0x9,
	DOTA_ModifyGold_GameTick = 0xa,
	DOTA_ModifyGold_Building = 0xb,
	DOTA_ModifyGold_HeroKill = 0xc,
	DOTA_ModifyGold_CreepKill = 0xd,
	DOTA_ModifyGold_NeutralKill = 0xe,
	DOTA_ModifyGold_RoshanKill = 0xf,
	DOTA_ModifyGold_CourierKill = 0x10,
	DOTA_ModifyGold_BountyRune = 0x11,
	DOTA_ModifyGold_SharedGold = 0x12,
	DOTA_ModifyGold_AbilityGold = 0x13,
	DOTA_ModifyGold_WardKill = 0x14,
	DOTA_ModifyGold_CourierKilledByThisPlayer = 0x15,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class EDOTA_ModifyXP_Reason : uint32_t
{
	DOTA_ModifyXP_Unspecified = 0x0,
	DOTA_ModifyXP_HeroKill = 0x1,
	DOTA_ModifyXP_CreepKill = 0x2,
	DOTA_ModifyXP_RoshanKill = 0x3,
	DOTA_ModifyXP_TomeOfKnowledge = 0x4,
	DOTA_ModifyXP_Outpost = 0x5,
	DOTA_ModifyXP_MAX = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x1d
enum class UnitFilterResult : uint32_t
{
	UF_SUCCESS = 0x0,
	UF_FAIL_FRIENDLY = 0x1,
	UF_FAIL_ENEMY = 0x2,
	UF_FAIL_HERO = 0x3,
	UF_FAIL_CONSIDERED_HERO = 0x4,
	UF_FAIL_CREEP = 0x5,
	UF_FAIL_BUILDING = 0x6,
	UF_FAIL_COURIER = 0x7,
	UF_FAIL_OTHER = 0x8,
	UF_FAIL_ANCIENT = 0x9,
	UF_FAIL_ILLUSION = 0xa,
	UF_FAIL_SUMMONED = 0xb,
	UF_FAIL_DOMINATED = 0xc,
	UF_FAIL_MELEE = 0xd,
	UF_FAIL_RANGED = 0xe,
	UF_FAIL_DEAD = 0xf,
	UF_FAIL_MAGIC_IMMUNE_ALLY = 0x10,
	UF_FAIL_MAGIC_IMMUNE_ENEMY = 0x11,
	UF_FAIL_INVULNERABLE = 0x12,
	UF_FAIL_IN_FOW = 0x13,
	UF_FAIL_INVISIBLE = 0x14,
	UF_FAIL_NOT_PLAYER_CONTROLLED = 0x15,
	UF_FAIL_ATTACK_IMMUNE = 0x16,
	UF_FAIL_CUSTOM = 0x17,
	UF_FAIL_INVALID_LOCATION = 0x18,
	UF_FAIL_DISABLE_HELP = 0x19,
	UF_FAIL_OUT_OF_WORLD = 0x1a,
	UF_FAIL_NIGHTMARED = 0x1b,
	UF_FAIL_OBSTRUCTED = 0x1c,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
// 
// MEnumFlagsWithOverlappingBits
enum class DOTA_UNIT_TARGET_TEAM : uint32_t
{
	DOTA_UNIT_TARGET_TEAM_NONE = 0x0,
	DOTA_UNIT_TARGET_TEAM_FRIENDLY = 0x1,
	DOTA_UNIT_TARGET_TEAM_ENEMY = 0x2,
	DOTA_UNIT_TARGET_TEAM_CUSTOM = 0x4,
	DOTA_UNIT_TARGET_TEAM_BOTH = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xb
// 
// MEnumFlagsWithOverlappingBits
enum class DOTA_UNIT_TARGET_TYPE : uint32_t
{
	DOTA_UNIT_TARGET_NONE = 0x0,
	DOTA_UNIT_TARGET_HERO = 0x1,
	DOTA_UNIT_TARGET_CREEP = 0x2,
	DOTA_UNIT_TARGET_BUILDING = 0x4,
	DOTA_UNIT_TARGET_COURIER = 0x10,
	DOTA_UNIT_TARGET_OTHER = 0x20,
	DOTA_UNIT_TARGET_TREE = 0x40,
	DOTA_UNIT_TARGET_CUSTOM = 0x80,
	DOTA_UNIT_TARGET_SELF = 0x100,
	DOTA_UNIT_TARGET_BASIC = 0x12,
	DOTA_UNIT_TARGET_ALL = 0x37,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x16
enum class DOTA_UNIT_TARGET_FLAGS : uint32_t
{
	DOTA_UNIT_TARGET_FLAG_NONE = 0x0,
	DOTA_UNIT_TARGET_FLAG_RANGED_ONLY = 0x2,
	DOTA_UNIT_TARGET_FLAG_MELEE_ONLY = 0x4,
	DOTA_UNIT_TARGET_FLAG_DEAD = 0x8,
	DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES = 0x10,
	DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES = 0x20,
	DOTA_UNIT_TARGET_FLAG_INVULNERABLE = 0x40,
	DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE = 0x80,
	DOTA_UNIT_TARGET_FLAG_NO_INVIS = 0x100,
	DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS = 0x200,
	DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED = 0x400,
	DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED = 0x800,
	DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED = 0x1000,
	DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS = 0x2000,
	DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE = 0x4000,
	DOTA_UNIT_TARGET_FLAG_MANA_ONLY = 0x8000,
	DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP = 0x10000,
	DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO = 0x20000,
	DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD = 0x40000,
	DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED = 0x80000,
	DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES = 0x100000,
	DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS = 0x200000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class DOTA_PURGE_FLAGS : uint32_t
{
	DOTA_PURGE_FLAG_NONE = 0x0,
	DOTA_PURGE_FLAG_REMOVE_BUFFS = 0x2,
	DOTA_PURGE_FLAG_REMOVE_DEBUFFS = 0x4,
	DOTA_PURGE_FLAG_REMOVE_STUNS = 0x8,
	DOTA_PURGE_FLAG_REMOVE_EXCEPTIONS = 0x10,
	DOTA_PURGE_FLAG_REMOVE_THIS_FRAME_ONLY = 0x20,
	DOTA_PURGE_FLAG_REMOVE_UNPURGABLE = 0x40,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x12
enum class DOTATeam_t : uint32_t
{
	DOTA_TEAM_FIRST = 0x2,
	DOTA_TEAM_GOODGUYS = 0x2,
	DOTA_TEAM_BADGUYS = 0x3,
	DOTA_TEAM_NEUTRALS = 0x4,
	DOTA_TEAM_NOTEAM = 0x5,
	DOTA_TEAM_CUSTOM_1 = 0x6,
	DOTA_TEAM_CUSTOM_2 = 0x7,
	DOTA_TEAM_CUSTOM_3 = 0x8,
	DOTA_TEAM_CUSTOM_4 = 0x9,
	DOTA_TEAM_CUSTOM_5 = 0xa,
	DOTA_TEAM_CUSTOM_6 = 0xb,
	DOTA_TEAM_CUSTOM_7 = 0xc,
	DOTA_TEAM_CUSTOM_8 = 0xd,
	DOTA_TEAM_DRAFT_POOL = 0xe,
	DOTA_TEAM_COUNT = 0xf,
	DOTA_TEAM_CUSTOM_MIN = 0x6,
	DOTA_TEAM_CUSTOM_MAX = 0xd,
	DOTA_TEAM_CUSTOM_COUNT = 0x8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3d
enum class modifierstate : uint32_t
{
	MODIFIER_STATE_ROOTED = 0x0,
	MODIFIER_STATE_DISARMED = 0x1,
	MODIFIER_STATE_ATTACK_IMMUNE = 0x2,
	MODIFIER_STATE_SILENCED = 0x3,
	MODIFIER_STATE_MUTED = 0x4,
	MODIFIER_STATE_STUNNED = 0x5,
	MODIFIER_STATE_HEXED = 0x6,
	MODIFIER_STATE_INVISIBLE = 0x7,
	MODIFIER_STATE_INVULNERABLE = 0x8,
	MODIFIER_STATE_MAGIC_IMMUNE = 0x9,
	MODIFIER_STATE_PROVIDES_VISION = 0xa,
	MODIFIER_STATE_NIGHTMARED = 0xb,
	MODIFIER_STATE_BLOCK_DISABLED = 0xc,
	MODIFIER_STATE_EVADE_DISABLED = 0xd,
	MODIFIER_STATE_UNSELECTABLE = 0xe,
	MODIFIER_STATE_CANNOT_TARGET_ENEMIES = 0xf,
	MODIFIER_STATE_CANNOT_TARGET_BUILDINGS = 0x10,
	MODIFIER_STATE_CANNOT_MISS = 0x11,
	MODIFIER_STATE_SPECIALLY_DENIABLE = 0x12,
	MODIFIER_STATE_FROZEN = 0x13,
	MODIFIER_STATE_COMMAND_RESTRICTED = 0x14,
	MODIFIER_STATE_NOT_ON_MINIMAP = 0x15,
	MODIFIER_STATE_LOW_ATTACK_PRIORITY = 0x16,
	MODIFIER_STATE_NO_HEALTH_BAR = 0x17,
	MODIFIER_STATE_NO_HEALTH_BAR_FOR_ENEMIES = 0x18,
	MODIFIER_STATE_NO_HEALTH_BAR_FOR_OTHER_PLAYERS = 0x19,
	MODIFIER_STATE_FLYING = 0x1a,
	MODIFIER_STATE_NO_UNIT_COLLISION = 0x1b,
	MODIFIER_STATE_NO_TEAM_MOVE_TO = 0x1c,
	MODIFIER_STATE_NO_TEAM_SELECT = 0x1d,
	MODIFIER_STATE_PASSIVES_DISABLED = 0x1e,
	MODIFIER_STATE_DOMINATED = 0x1f,
	MODIFIER_STATE_BLIND = 0x20,
	MODIFIER_STATE_OUT_OF_GAME = 0x21,
	MODIFIER_STATE_FAKE_ALLY = 0x22,
	MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY = 0x23,
	MODIFIER_STATE_TRUESIGHT_IMMUNE = 0x24,
	MODIFIER_STATE_UNTARGETABLE = 0x25,
	MODIFIER_STATE_UNTARGETABLE_ALLIED = 0x26,
	MODIFIER_STATE_UNTARGETABLE_ENEMY = 0x27,
	MODIFIER_STATE_UNTARGETABLE_SELF = 0x28,
	MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS = 0x29,
	MODIFIER_STATE_ALLOW_PATHING_THROUGH_TREES = 0x2a,
	MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES = 0x2b,
	MODIFIER_STATE_UNSLOWABLE = 0x2c,
	MODIFIER_STATE_TETHERED = 0x2d,
	MODIFIER_STATE_IGNORING_STOP_ORDERS = 0x2e,
	MODIFIER_STATE_FEARED = 0x2f,
	MODIFIER_STATE_TAUNTED = 0x30,
	MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED = 0x31,
	MODIFIER_STATE_FORCED_FLYING_VISION = 0x32,
	MODIFIER_STATE_ATTACK_ALLIES = 0x33,
	MODIFIER_STATE_ALLOW_PATHING_THROUGH_CLIFFS = 0x34,
	MODIFIER_STATE_ALLOW_PATHING_THROUGH_FISSURE = 0x35,
	MODIFIER_STATE_SPECIALLY_UNDENIABLE = 0x36,
	MODIFIER_STATE_ALLOW_PATHING_THROUGH_OBSTRUCTIONS = 0x37,
	MODIFIER_STATE_DEBUFF_IMMUNE = 0x38,
	MODIFIER_STATE_NO_INVISIBILITY_VISUALS = 0x39,
	MODIFIER_STATE_ALLOW_PATHING_THROUGH_BASE_BLOCKER = 0x3a,
	MODIFIER_STATE_IGNORING_MOVE_ORDERS = 0x3b,
	MODIFIER_STATE_LAST = 0x3c,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTA_LANE : uint32_t
{
	DOTA_LANE_NONE = 0x0,
	DOTA_LANE_TOP = 0x1,
	DOTA_LANE_MIDDLE = 0x2,
	DOTA_LANE_BOTTOM = 0x3,
	DOTA_LANE_MAX = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x9
enum class DOTA_SHOP_TYPE : uint32_t
{
	DOTA_SHOP_HOME = 0x0,
	DOTA_SHOP_SIDE = 0x1,
	DOTA_SHOP_SECRET = 0x2,
	DOTA_SHOP_GROUND = 0x3,
	DOTA_SHOP_SIDE2 = 0x4,
	DOTA_SHOP_SECRET2 = 0x5,
	DOTA_SHOP_CUSTOM = 0x6,
	DOTA_SHOP_NEUTRALS = 0x7,
	DOTA_SHOP_NONE = 0x8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTA_HOLDOUT_TOWER_TYPE : uint32_t
{
	DOTA_HOLDOUT_TOWER_NONE = 0x0,
	DOTA_HOLDOUT_TOWER_LIGHTFAST = 0x1,
	DOTA_HOLDOUT_TOWER_HEAVYSLOW = 0x2,
	DOTA_HOLDOUT_TOWER_REDUCESPEED = 0x3,
	DOTA_HOLDOUT_TOWER_COUNT = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ECrowdLevel : uint32_t
{
	CROWD_NONE = 0x0,
	CROWD_LOW = 0x1,
	CROWD_MEDIUM = 0x2,
	CROWD_HIGH = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class ShopItemViewMode_t : uint32_t
{
	SHOP_VIEW_MODE_LIST = 0x0,
	SHOP_VIEW_MODE_GRID = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x11
enum class DOTA_SHOP_CATEGORY : uint32_t
{
	DOTA_SHOP_CATEGORY_NONE = 0xffffffffffffffff,
	DOTA_SHOP_CATEGORY_CONSUMABLES = 0x0,
	DOTA_SHOP_CATEGORY_ATTRIBUTES = 0x1,
	DOTA_SHOP_CATEGORY_WEAPONS_ARMOR = 0x2,
	DOTA_SHOP_CATEGORY_MISC = 0x3,
	DOTA_SHOP_CATEGORY_BASICS = 0x4,
	DOTA_SHOP_CATEGORY_SUPPORT = 0x5,
	DOTA_SHOP_CATEGORY_MAGICS = 0x6,
	DOTA_SHOP_CATEGORY_WEAPONS = 0x7,
	DOTA_SHOP_CATEGORY_DEFENSE = 0x8,
	DOTA_SHOP_CATEGORY_ARTIFACTS = 0x9,
	DOTA_SHOP_CATEGORY_SIDE_SHOP_PAGE_1 = 0xa,
	DOTA_SHOP_CATEGORY_SIDE_SHOP_PAGE_2 = 0xb,
	DOTA_SHOP_CATEGORY_SECRET_SHOP = 0xc,
	DOTA_SHOP_CATEGORY_RECOMMENDED_ITEMS = 0xd,
	DOTA_SHOP_CATEGORY_SEARCH_RESULTS = 0xe,
	NUM_SHOP_CATEGORIES = 0xf,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
enum class DOTA_RUNES : uint32_t
{
	DOTA_RUNE_INVALID = 0xffffffffffffffff,
	DOTA_RUNE_DOUBLEDAMAGE = 0x0,
	DOTA_RUNE_HASTE = 0x1,
	DOTA_RUNE_ILLUSION = 0x2,
	DOTA_RUNE_INVISIBILITY = 0x3,
	DOTA_RUNE_REGENERATION = 0x4,
	DOTA_RUNE_BOUNTY = 0x5,
	DOTA_RUNE_ARCANE = 0x6,
	DOTA_RUNE_WATER = 0x7,
	DOTA_RUNE_XP = 0x8,
	DOTA_RUNE_SHIELD = 0x9,
	DOTA_RUNE_COUNT = 0xa,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x79
enum class DOTA_INVALID_ORDERS : uint32_t
{
	DOTA_ORDER_SUCCESS = 0xffffffffffffffff,
	DOTA_INVALID_ORDER_NOT_CONTROLLABLE_BY_PLAYER = 0x0,
	DOTA_INVALID_ORDER_UNIT_IS_NOT_NPC = 0x1,
	DOTA_INVALID_ORDER_BAD_ABILITY_ENTITY = 0x2,
	DOTA_INVALID_ORDER_UNRECOGNIZED_ORDER = 0x3,
	DOTA_INVALID_ORDER_ABILITY_REQUIRED = 0x4,
	DOTA_INVALID_ORDER_NPC_TARGET_REQUIRED = 0x5,
	DOTA_INVALID_ORDER_TARGET_TREE_INDEX_NOT_A_TREE = 0x6,
	DOTA_INVALID_ORDER_TARGET_ENTITY_INDEX_OUT_OF_RANGE = 0x7,
	DOTA_INVALID_ORDER_ABILITY_NOT_AN_ITEM = 0x8,
	DOTA_INVALID_ORDER_PHYSICAL_ITEM_TARGET_REQUIRED = 0x9,
	DOTA_INVALID_ORDER_RUNE_TARGET_REQUIRED = 0xa,
	DOTA_INVALID_ORDER_ABILITY_NOT_OWNED_BY_UNIT = 0xb,
	DOTA_INVALID_ORDER_ABILITY_CANT_BE_UPGRADED = 0xc,
	DOTA_INVALID_ORDER_NO_POINTS_FOR_ABILITY_UPGRADE = 0xd,
	DOTA_INVALID_ORDER_NOT_ENOUGH_MANA = 0xe,
	DOTA_INVALID_ORDER_ABILITY_IN_COOLDOWN = 0xf,
	DOTA_INVALID_ORDER_ABILITY_NOT_LEARNED = 0x10,
	DOTA_INVALID_ORDER_CANT_CAST_PASSIVE_ABILITY = 0x11,
	DOTA_INVALID_ORDER_PHANTOM_TARGET = 0x12,
	DOTA_INVALID_ORDER_DEAD_TARGET = 0x13,
	DOTA_INVALID_ORDER_UNIT_IS_DEAD = 0x14,
	DOTA_INVALID_ORDER_TARGET_MAGIC_IMMUNE_ENEMY = 0x15,
	DOTA_INVALID_ORDER_TARGET_INVULNERABLE = 0x16,
	DOTA_INVALID_ORDER_TARGET_ATTACK_IMMUNE = 0x17,
	DOTA_INVALID_ORDER_UNIT_SILENCED = 0x18,
	DOTA_INVALID_ORDER_ABILITY_CANT_BE_TOGGLED = 0x19,
	DOTA_INVALID_ORDER_TARGET_CANT_BE_SEEN = 0x1a,
	DOTA_INVALID_ORDER_TARGET_INVISIBLE = 0x1b,
	DOTA_INVALID_ORDER_HERO_CANT_BE_DENIED = 0x1c,
	DOTA_INVALID_ORDER_CANT_CAST_ON_TEAMMATE = 0x1d,
	DOTA_INVALID_ORDER_CANT_CAST_ON_ENEMY = 0x1e,
	DOTA_INVALID_ORDER_UNIT_CANT_MOVE = 0x1f,
	DOTA_INVALID_ORDER_CANT_CAST_ON_ATTACK_IMMUNE = 0x20,
	DOTA_INVALID_ORDER_PURCHASE_INVALID_ITEM = 0x21,
	DOTA_INVALID_ORDER_ITEM_NOT_IN_INVENTORY = 0x22,
	DOTA_INVALID_ORDER_ITEM_NOT_IN_UNIT_INVENTORY = 0x23,
	DOTA_INVALID_ORDER_TARGET_UNSELECTABLE = 0x24,
	DOTA_INVALID_ORDER_ITEM_NOT_IN_ACTIVE_INVENTORY = 0x25,
	DOTA_INVALID_ORDER_UNIT_CANT_PICK_UP_RUNES = 0x26,
	DOTA_INVALID_ORDER_UNIT_CANT_MANIPULATE_ITEMS = 0x27,
	DOTA_INVALID_ORDER_UNIT_IS_ILLUSION = 0x28,
	DOTA_INVALID_ORDER_UNIT_CANT_ATTACK = 0x29,
	DOTA_INVALID_ORDER_ITEM_CANT_BE_DROPPED = 0x2a,
	DOTA_INVALID_ORDER_TARGET_TREE_NOT_ACTIVE = 0x2b,
	DOTA_INVALID_ORDER_ABILITY_CANT_AUTO_CAST = 0x2c,
	DOTA_INVALID_ORDER_TARGET_POSITION_OFF_MAP = 0x2d,
	DOTA_INVALID_ORDER_UNIT_CANT_MOVE_TARGET_OUT_OF_RANGE = 0x2e,
	DOTA_INVALID_ORDER_CANT_CAST_ON_HERO = 0x2f,
	DOTA_INVALID_ORDER_CANT_CAST_ON_OTHER = 0x30,
	DOTA_INVALID_ORDER_CANT_CAST_ON_BUILDING = 0x31,
	DOTA_INVALID_ORDER_CANT_CAST_ON_ANCIENT = 0x32,
	DOTA_INVALID_ORDER_ITEM_CANT_BE_MOVED_TO_STASH = 0x33,
	DOTA_INVALID_ORDER_ITEM_CANT_BE_MOVED_TO_SLOT = 0x34,
	DOTA_INVALID_ORDER_CANT_CAST_ON_MECHANICAL = 0x35,
	DOTA_INVALID_ORDER_CANT_ACCEPT_ATTACK_TARGET = 0x36,
	DOTA_INVALID_ORDER_CANT_CAST_NO_CHARGES = 0x37,
	DOTA_INVALID_ORDER_CANT_CAST_ON_CREEP = 0x38,
	DOTA_INVALID_ORDER_TARGET_CANT_TAKE_ITEMS = 0x39,
	DOTA_INVALID_ORDER_CANT_GIVE_ITEM_TO_ENEMY = 0x3a,
	DOTA_INVALID_ORDER_CANT_CAST_ON_COURIER = 0x3b,
	DOTA_INVALID_ORDER_ABILITY_IS_HIDDEN = 0x3c,
	DOTA_INVALID_ORDER_ITEM_IN_COOLDOWN = 0x3d,
	DOTA_INVALID_ORDER_SECRET_SHOP_NOT_IN_RANGE = 0x3e,
	DOTA_INVALID_ORDER_NOT_ENOUGH_GOLD = 0x3f,
	DOTA_INVALID_ORDER_PURCHASE_AUTOCOMBINE_RECIPE = 0x40,
	DOTA_INVALID_ORDER_CANT_DENY_HEALTH_TOO_HIGH = 0x41,
	DOTA_INVALID_ORDER_SIDE_SHOP_NOT_IN_RANGE = 0x42,
	DOTA_INVALID_ORDER_HOME_SHOP_NOT_IN_RANGE = 0x43,
	DOTA_INVALID_ORDER_CANT_PICK_UP_ITEM = 0x44,
	DOTA_INVALID_ORDER_CANT_SELL_NO_SHOP_IN_RANGE = 0x45,
	DOTA_INVALID_ORDER_CANT_SELL_ITEM = 0x46,
	DOTA_INVALID_ORDER_CANT_SELL_ITEM_WHILE_DEAD = 0x47,
	DOTA_INVALID_ORDER_TARGET_CANT_BE_DENIED = 0x48,
	DOTA_INVALID_ORDER_ABILITY_DISABLED_BY_ROOT = 0x49,
	DOTA_INVALID_ORDER_UNIT_COMMAND_RESTRICTED = 0x4a,
	DOTA_INVALID_ORDER_UNIT_MUTED = 0x4b,
	DOTA_INVALID_ORDER_CANT_CAST_ON_SUMMONED = 0x4c,
	DOTA_INVALID_ORDER_TARGET_MAGIC_IMMUNE_ALLY = 0x4d,
	DOTA_INVALID_ORDER_CANT_PURCHASE_DISALLOWED_ITEM = 0x4e,
	DOTA_INVALID_ORDER_CANT_CAST_ON_DOMINATED = 0x4f,
	DOTA_INVALID_ORDER_CAST_CUSTOM = 0x50,
	DOTA_INVALID_ORDER_ITEM_NOT_DISASSEMBLABLE = 0x51,
	DOTA_INVALID_ORDER_ITEM_OUT_OF_STOCK = 0x52,
	DOTA_INVALID_ORDER_ABILITY_CANT_BE_UPGRADED_AT_MAX = 0x53,
	DOTA_INVALID_ORDER_ABILITY_INACTIVE = 0x54,
	DOTA_INVALID_ORDER_ITEM_NOT_IN_MAIN_INVENTORY = 0x55,
	DOTA_INVALID_ORDER_CANT_GLYPH = 0x56,
	DOTA_INVALID_ORDER_CANT_DRAG_CHANNELING_ITEM = 0x57,
	DOTA_INVALID_ORDER_CANT_BUYBACK_UNIT_NOT_A_HERO = 0x58,
	DOTA_INVALID_ORDER_CANT_BUYBACK_UNIT_NOT_DEAD = 0x59,
	DOTA_INVALID_ORDER_CANT_BUYBACK_NOT_ENOUGH_GOLD = 0x5a,
	DOTA_INVALID_ORDER_CANT_BUYBACK_IN_COOLDOWN = 0x5b,
	DOTA_INVALID_ORDER_CANT_DISASSEMBLE_STASH_OUT_OF_RANGE = 0x5c,
	DOTA_INVALID_ORDER_CANT_EJECT_ITEM_NOT_IN_STASH = 0x5d,
	DOTA_INVALID_ORDER_GAME_IS_PAUSED = 0x5e,
	DOTA_INVALID_ORDER_CANT_CAST_ON_CONSIDERED_HERO = 0x5f,
	DOTA_INVALID_ORDER_CANT_SHOP_AUTO_BUY_ENABLED = 0x60,
	DOTA_INVALID_ORDER_ONLY_DELIBERATE_CHANNELING_CANCEL = 0x61,
	DOTA_INVALID_ORDER_CANT_BUYBACK_REAPERS_SCYTHE = 0x62,
	DOTA_INVALID_ORDER_CANT_BUYBACK_DISABLED_BY_GAME_MODE = 0x63,
	DOTA_INVALID_ORDER_CANT_ABILITY_PING_BAD_TEAM = 0x64,
	DOTA_INVALID_ORDER_ABILITY_NOT_POSITIONED = 0x65,
	DOTA_INVALID_ORDER_ABILITY_NOT_TARGETTED = 0x66,
	DOTA_INVALID_ORDER_ABILITY_REQUIRES_TARGET = 0x67,
	DOTA_INVALID_ORDER_CANT_RADAR = 0x68,
	DOTA_INVALID_ORDER_NO_COURIER = 0x69,
	DOTA_INVALID_ORDER_CUSTOM_SHOP_NOT_IN_RANGE = 0x6a,
	DOTA_INVALID_ORDER_CANT_CAST_RIVER_PAINT = 0x6b,
	DOTA_INVALID_ORDER_UNIT_OBSTRUCTED = 0x6c,
	DOTA_INVALID_ORDER_CANT_CAST_DRAG_REQUIRED = 0x6d,
	DOTA_INVALID_ORDER_ABILITY_DISABLED_BY_TETHER = 0x6e,
	DOTA_INVALID_ORDER_ABILITY_NOT_UNLOCKED = 0x6f,
	DOTA_INVALID_ORDER_CANT_FOUNTAIN_DROP_UNIT_NOT_DEAD = 0x70,
	DOTA_INVALID_ORDER_ITEM_NOT_IN_NEUTRAL_ITEM_STASH = 0x71,
	DOTA_INVALID_ORDER_ITEM_ALREADY_PURCHASED = 0x72,
	DOTA_INVALID_ORDER_BEYOND_PHYSICAL_ITEM_LIMIT = 0x73,
	DOTA_INVALID_ORDER_ABILITY_PING_DEAD_ALLY = 0x74,
	DOTA_INVALID_ORDER_CANT_LOCKCOMBINE_NEUTRAL_ITEMS = 0x75,
	DOTA_INVALID_ORDER_ABILITY_CANT_ALT_CAST = 0x76,
	DOTA_INVALID_ORDER_COUNT = 0x77,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x22
enum class DotaDefaultUIElement_t : uint32_t
{
	DOTA_DEFAULT_UI_INVALID = 0xffffffffffffffff,
	DOTA_DEFAULT_UI_TOP_TIMEOFDAY = 0x0,
	DOTA_DEFAULT_UI_TOP_HEROES = 0x1,
	DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD = 0x2,
	DOTA_DEFAULT_UI_ACTION_PANEL = 0x3,
	DOTA_DEFAULT_UI_ACTION_MINIMAP = 0x4,
	DOTA_DEFAULT_UI_INVENTORY_PANEL = 0x5,
	DOTA_DEFAULT_UI_INVENTORY_SHOP = 0x6,
	DOTA_DEFAULT_UI_INVENTORY_ITEMS = 0x7,
	DOTA_DEFAULT_UI_INVENTORY_QUICKBUY = 0x8,
	DOTA_DEFAULT_UI_INVENTORY_COURIER = 0x9,
	DOTA_DEFAULT_UI_INVENTORY_PROTECT = 0xa,
	DOTA_DEFAULT_UI_INVENTORY_GOLD = 0xb,
	DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS = 0xc,
	DOTA_DEFAULT_UI_SHOP_COMMONITEMS = 0xd,
	DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS = 0xe,
	DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME = 0xf,
	DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK = 0x10,
	DOTA_DEFAULT_UI_HERO_SELECTION_HEADER = 0x11,
	DOTA_DEFAULT_UI_TOP_MENU_BUTTONS = 0x12,
	DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND = 0x13,
	DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM = 0x14,
	DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM = 0x15,
	DOTA_DEFAULT_UI_TOP_BAR_SCORE = 0x16,
	DOTA_DEFAULT_UI_ENDGAME = 0x17,
	DOTA_DEFAULT_UI_ENDGAME_CHAT = 0x18,
	DOTA_DEFAULT_UI_QUICK_STATS = 0x19,
	DOTA_DEFAULT_UI_PREGAME_STRATEGYUI = 0x1a,
	DOTA_DEFAULT_UI_KILLCAM = 0x1b,
	DOTA_DEFAULT_UI_FIGHT_RECAP = 0x1c,
	DOTA_DEFAULT_UI_TOP_BAR = 0x1d,
	DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS = 0x1e,
	DOTA_DEFAULT_UI_AGHANIMS_STATUS = 0x1f,
	DOTA_DEFAULT_UI_ELEMENT_COUNT = 0x20,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class DOTALimits_t : uint32_t
{
	// MScriptDescription "Max number of players connected to the server including spectators."
	DOTA_MAX_PLAYERS = 0x40,
	// MScriptDescription "Max number of players per team."
	DOTA_MAX_TEAM = 0x18,
	// MScriptDescription "Max number of player teams supported."
	DOTA_MAX_PLAYER_TEAMS = 0xa,
	// MScriptDescription "Max number of non-spectator players supported."
	DOTA_MAX_TEAM_PLAYERS = 0x18,
	// MScriptDescription "How many spectators can watch."
	DOTA_MAX_SPECTATOR_TEAM_SIZE = 0x28,
	// MScriptDescription "Max number of viewers in a spectator lobby."
	DOTA_MAX_SPECTATOR_LOBBY_SIZE = 0xf,
	// MScriptDescription "Default number of players per team."
	DOTA_DEFAULT_MAX_TEAM = 0x5,
	// MScriptDescription "Default number of non-spectator players supported."
	DOTA_DEFAULT_MAX_TEAM_PLAYERS = 0xa,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class DOTA_MOTION_CONTROLLER_PRIORITY : uint32_t
{
	DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST = 0x0,
	DOTA_MOTION_CONTROLLER_PRIORITY_LOW = 0x1,
	DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM = 0x2,
	DOTA_MOTION_CONTROLLER_PRIORITY_HIGH = 0x3,
	DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST = 0x4,
	DOTA_MOTION_CONTROLLER_PRIORITY_ULTRA = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class DOTAMusicStatus_t : uint32_t
{
	DOTA_MUSIC_STATUS_NONE = 0x0,
	DOTA_MUSIC_STATUS_EXPLORATION = 0x1,
	DOTA_MUSIC_STATUS_BATTLE = 0x2,
	DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION = 0x3,
	DOTA_MUSIC_STATUS_DEAD = 0x4,
	DOTA_MUSIC_STATUS_LAST = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xa
enum class DOTAPortraitEnvironmentType_t : uint32_t
{
	DOTA_PORTRAIT_ENVIRONMENT_INVALID = 0xffffffffffffffff,
	DOTA_PORTRAIT_ENVIRONMENT_DEFAULT = 0x0,
	DOTA_PORTRAIT_ENVIRONMENT_FULL_BODY = 0x1,
	DOTA_PORTRAIT_ENVIRONMENT_CARD = 0x2,
	DOTA_PORTRAIT_ENVIRONMENT_WEBPAGE = 0x3,
	DOTA_PORTRAIT_ENVIRONMENT_FULL_BODY_RIGHT_SIDE = 0x4,
	DOTA_PORTRAIT_ENVIRONMENT_FULL_BODY_LOADOUT = 0x5,
	DOTA_PORTRAIT_ENVIRONMENT_ICON = 0x6,
	DOTA_PORTRAIT_ENVIRONMENT_SHOWCASE = 0x7,
	DOTA_PORTRAIT_ENVIRONMENT_TYPE_COUNT = 0x8,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class PortraitSoundMode_t : uint32_t
{
	PORTRAIT_SOUND_MODE_INVALID = 0xffffffffffffffff,
	PORTRAIT_SOUND_MODE_NO_SOUNDS = 0x0,
	PORTRAIT_SOUND_MODE_ONLY_TAUNT_SOUNDS = 0x1,
	PORTRAIT_SOUND_MODE_ALL_SOUNDS = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class PortraitSummonsDisplayMode_t : uint32_t
{
	PORTRAIT_SUMMONS_DISPLAY_MODE_INVALID = 0xffffffffffffffff,
	PORTRAIT_SUMMONS_DISPLAY_MODE_NONE = 0x0,
	PORTRAIT_SUMMONS_DISPLAY_MODE_ALL = 0x1,
	PORTRAIT_SUMMONS_DISPLAY_MODE_NON_DEFAULT = 0x2,
	PORTRAIT_SUMMONS_DISPLAY_MODE_TYPE_COUNT = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class DOTAPostGameLayout_t : uint32_t
{
	DOTA_POST_GAME_LAYOUT_DOUBLE_COLUMN = 0x0,
	DOTA_POST_GAME_LAYOUT_SINGLE_COLUMN = 0x1,
	DOTA_POST_GAME_LAYOUT_MAX = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xb
enum class DOTAPostGameColumn_t : uint32_t
{
	DOTA_POST_GAME_COLUMN_LEVEL = 0x0,
	DOTA_POST_GAME_COLUMN_ITEMS = 0x1,
	DOTA_POST_GAME_COLUMN_KILLS = 0x2,
	DOTA_POST_GAME_COLUMN_DEATHS = 0x3,
	DOTA_POST_GAME_COLUMN_ASSISTS = 0x4,
	DOTA_POST_GAME_COLUMN_NET_WORTH = 0x5,
	DOTA_POST_GAME_COLUMN_LAST_HITS = 0x6,
	DOTA_POST_GAME_COLUMN_DENIES = 0x7,
	DOTA_POST_GAME_COLUMN_DAMAGE = 0x8,
	DOTA_POST_GAME_COLUMN_HEALING = 0x9,
	DOTA_POST_GAME_COLUMN_MAX = 0xa,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class attackfail : uint32_t
{
	DOTA_ATTACK_RECORD_FAIL_NO = 0x0,
	DOTA_ATTACK_RECORD_FAIL_TERRAIN_MISS = 0x1,
	DOTA_ATTACK_RECORD_FAIL_SOURCE_MISS = 0x2,
	DOTA_ATTACK_RECORD_FAIL_TARGET_EVADED = 0x3,
	DOTA_ATTACK_RECORD_FAIL_TARGET_INVULNERABLE = 0x4,
	DOTA_ATTACK_RECORD_FAIL_TARGET_OUT_OF_RANGE = 0x5,
	DOTA_ATTACK_RECORD_CANNOT_FAIL = 0x6,
	DOTA_ATTACK_RECORD_FAIL_BLOCKED_BY_OBSTRUCTION = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class DOTAProjectileAttachment_t : uint32_t
{
	DOTA_PROJECTILE_ATTACHMENT_NONE = 0x0,
	DOTA_PROJECTILE_ATTACHMENT_ATTACK_1 = 0x1,
	DOTA_PROJECTILE_ATTACHMENT_ATTACK_2 = 0x2,
	DOTA_PROJECTILE_ATTACHMENT_HITLOCATION = 0x3,
	DOTA_PROJECTILE_ATTACHMENT_ATTACK_3 = 0x4,
	DOTA_PROJECTILE_ATTACHMENT_ATTACK_4 = 0x5,
	DOTA_PROJECTILE_ATTACHMENT_LAST = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class DamageCategory_t : uint32_t
{
	DOTA_DAMAGE_CATEGORY_SPELL = 0x0,
	DOTA_DAMAGE_CATEGORY_ATTACK = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x13
enum class DOTADamageFlag_t : uint32_t
{
	DOTA_DAMAGE_FLAG_NONE = 0x0,
	DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR = 0x1,
	DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR = 0x2,
	DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY = 0x4,
	DOTA_DAMAGE_FLAG_BYPASSES_BLOCK = 0x8,
	DOTA_DAMAGE_FLAG_REFLECTION = 0x10,
	DOTA_DAMAGE_FLAG_HPLOSS = 0x20,
	DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT = 0x40,
	DOTA_DAMAGE_FLAG_NON_LETHAL = 0x80,
	DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS = 0x200,
	DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION = 0x400,
	DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN = 0x800,
	DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL = 0x1000,
	DOTA_DAMAGE_FLAG_PROPERTY_FIRE = 0x2000,
	DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR = 0x4000,
	DOTA_DAMAGE_FLAG_SECONDARY_PROJECTILE_ATTACK = 0x8000,
	DOTA_DAMAGE_FLAG_FORCE_SPELL_AMPLIFICATION = 0x10000,
	DOTA_DAMAGE_FLAG_MAGIC_AUTO_ATTACK = 0x20000,
	DOTA_DAMAGE_FLAG_ATTACK_MODIFIER = 0x40000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class DOTAAbilitySpeakTrigger_t : uint32_t
{
	DOTA_ABILITY_SPEAK_START_ACTION_PHASE = 0x0,
	DOTA_ABILITY_SPEAK_CAST = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EShareAbility : uint32_t
{
	ITEM_FULLY_SHAREABLE = 0x0,
	ITEM_PARTIALLY_SHAREABLE = 0x1,
	ITEM_NOT_SHAREABLE = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class AbilityLearnResult_t : uint32_t
{
	ABILITY_CAN_BE_UPGRADED = 0x0,
	ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE = 0x1,
	ABILITY_CANNOT_BE_UPGRADED_AT_MAX = 0x2,
	ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL = 0x3,
	ABILITY_NOT_LEARNABLE = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xf
enum class DOTAScriptInventorySlot_t : uint32_t
{
	DOTA_ITEM_SLOT_1 = 0x0,
	DOTA_ITEM_SLOT_2 = 0x1,
	DOTA_ITEM_SLOT_3 = 0x2,
	DOTA_ITEM_SLOT_4 = 0x3,
	DOTA_ITEM_SLOT_5 = 0x4,
	DOTA_ITEM_SLOT_6 = 0x5,
	DOTA_ITEM_SLOT_7 = 0x6,
	DOTA_ITEM_SLOT_8 = 0x7,
	DOTA_ITEM_SLOT_9 = 0x8,
	DOTA_STASH_SLOT_1 = 0x9,
	DOTA_STASH_SLOT_2 = 0xa,
	DOTA_STASH_SLOT_3 = 0xb,
	DOTA_STASH_SLOT_4 = 0xc,
	DOTA_STASH_SLOT_5 = 0xd,
	DOTA_STASH_SLOT_6 = 0xe,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class DOTA_ITEM_STATE : uint32_t
{
	DOTA_ITEM_NEEDS_EQUIPPED = 0x0,
	DOTA_ITEM_READY = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class DOTAInventoryFlags_t : uint32_t
{
	DOTA_INVENTORY_ALLOW_NONE = 0x0,
	DOTA_INVENTORY_ALLOW_MAIN = 0x1,
	DOTA_INVENTORY_ALLOW_STASH = 0x2,
	DOTA_INVENTORY_ALLOW_DROP_ON_GROUND = 0x4,
	DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN = 0x8,
	DOTA_INVENTORY_LIMIT_DROP_ON_GROUND = 0x10,
	DOTA_INVENTORY_ALL_ACCESS = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
enum class DotaGestureSlot_t : uint32_t
{
	GESTURE_SLOT_NONE = 0xffffffffffffffff,
	GESTURE_SLOT_ATTACK = 0x0,
	GESTURE_SLOT_ABILITY = 0x1,
	GESTURE_SLOT_OVERRIDE = 0x2,
	GESTURE_SLOT_CUSTOM = 0x3,
	GESTURE_SLOT_CUSTOM2 = 0x4,
	GESTURE_SLOT_CUSTOM3 = 0x5,
	GESTURE_SLOT_CONSTANT = 0x6,
	GESTURE_SLOT_TAUNT = 0x7,
	GESTURE_SLOT_ABSOLUTE = 0x8,
	GESTURE_SLOT_COUNT = 0x9,
	GESTURE_SLOT_STOLEN_ABILITY_BIT = 0x80,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x56
enum class DotaPseudoRandomType : uint32_t
{
	DOTA_PSEUDO_RANDOM_NONE = 0x0,
	DOTA_PSEUDO_RANDOM_MAGNUS_SHARD = 0x1,
	DOTA_PSEUDO_RANDOM_PHANTOMASSASSIN_CRIT = 0x2,
	DOTA_PSEUDO_RANDOM_PHANTOMASSASSIN_DAGGER = 0x3,
	DOTA_PSEUDO_RANDOM_PHANTOMLANCER_JUXTAPOSE = 0x4,
	DOTA_PSEUDO_RANDOM_TINY_CRAGGY = 0x5,
	DOTA_PSEUDO_RANDOM_COLD_REBUKE = 0x6,
	DOTA_PSEUDO_RANDOM_WOLF_CRIT = 0x7,
	DOTA_PSEUDO_RANDOM_AXE_HELIX = 0x8,
	DOTA_PSEUDO_RANDOM_AXE_HELIX_ATTACK = 0x9,
	DOTA_PSEUDO_RANDOM_LEGION_MOMENT = 0xa,
	DOTA_PSEUDO_RANDOM_SLARDAR_BASH = 0xb,
	DOTA_PSEUDO_RANDOM_OD_ESSENCE = 0xc,
	DOTA_PSEUDO_RANDOM_DROW_MARKSMANSHIP = 0xd,
	DOTA_PSEUDO_RANDOM_OGRE_MAGI_FIREBLAST = 0xe,
	DOTA_PSEUDO_RANDOM_OGRE_ITEM_MULTICAST = 0xf,
	DOTA_PSEUDO_RANDOM_SPIRITBREAKER_GREATERBASH = 0x10,
	DOTA_PSEUDO_RANDOM_LONE_DRUID_ENTANGLE = 0x11,
	DOTA_PSEUDO_RANDOM_FACELESS_BASH = 0x12,
	DOTA_PSEUDO_RANDOM_FACELESS_EVADE_SPELL = 0x13,
	DOTA_PSEUDO_RANDOM_FACELESS_EVADE_ATTACK = 0x14,
	DOTA_PSEUDO_RANDOM_FACELESS_VOID_BACKTRACK = 0x15,
	DOTA_PSEUDO_RANDOM_BREWMASTER_CRIT = 0x16,
	DOTA_PSEUDO_RANDOM_BREWMASTER_CINDER_BREW = 0x17,
	DOTA_PSEUDO_RANDOM_SNIPER_HEADSHOT = 0x18,
	DOTA_PSEUDO_RANDOM_ATOS = 0x19,
	DOTA_PSEUDO_RANDOM_JUGG_CRIT = 0x1a,
	DOTA_PSEUDO_RANDOM_DAZZLE_SCEPTER = 0x1b,
	DOTA_PSEUDO_RANDOM_CHAOS_CRIT = 0x1c,
	DOTA_PSEUDO_RANDOM_LYCAN_CRIT = 0x1d,
	DOTA_PSEUDO_RANDOM_TUSK_CRIT = 0x1e,
	DOTA_PSEUDO_RANDOM_CM_FREEZING_FIELD = 0x1f,
	DOTA_PSEUDO_RANDOM_GENERIC_BASHER = 0x20,
	DOTA_PSEUDO_RANDOM_SKELETONKING_CRIT = 0x21,
	DOTA_PSEUDO_RANDOM_SKELETONKING_CRIT_MORTAL = 0x22,
	DOTA_PSEUDO_RANDOM_ITEM_GREATERCRIT = 0x23,
	DOTA_PSEUDO_RANDOM_ITEM_LESSERCRIT = 0x24,
	DOTA_PSEUDO_RANDOM_ITEM_BASHER = 0x25,
	DOTA_PSEUDO_RANDOM_ITEM_SOLAR_CREST = 0x26,
	DOTA_PSEUDO_RANDOM_ITEM_JAVELIN_ACCURACY = 0x27,
	DOTA_PSEUDO_RANDOM_ITEM_TRIDENT = 0x28,
	DOTA_PSEUDO_RANDOM_ITEM_ABYSSAL = 0x29,
	DOTA_PSEUDO_RANDOM_ITEM_ABYSSAL_BLOCK = 0x2a,
	DOTA_PSEUDO_RANDOM_ITEM_STOUT = 0x2b,
	DOTA_PSEUDO_RANDOM_ITEM_VANGUARD = 0x2c,
	DOTA_PSEUDO_RANDOM_ITEM_CRIMSON_GUARD = 0x2d,
	DOTA_PSEUDO_RANDOM_ITEM_PMS = 0x2e,
	DOTA_PSEUDO_RANDOM_ITEM_HALBRED_MAIM = 0x2f,
	DOTA_PSEUDO_RANDOM_ITEM_SANGEYASHA_MAIM = 0x30,
	DOTA_PSEUDO_RANDOM_ITEM_SANGEKAYA_MAIM = 0x31,
	DOTA_PSEUDO_RANDOM_ITEM_SANGE_MAIM = 0x32,
	DOTA_PSEUDO_RANDOM_ITEM_BUTTERFLY = 0x33,
	DOTA_PSEUDO_RANDOM_ITEM_MAELSTROM = 0x34,
	DOTA_PSEUDO_RANDOM_ITEM_MJOLLNIR = 0x35,
	DOTA_PSEUDO_RANDOM_ITEM_MJOLLNIR_STATIC = 0x36,
	DOTA_PSEUDO_RANDOM_ITEM_MKB = 0x37,
	DOTA_PSEUDO_RANDOM_ITEM_SILVER_EDGE = 0x38,
	DOTA_PSEUDO_RANDOM_ITEM_NAGINATA = 0x39,
	DOTA_PSEUDO_RANDOM_TROLL_BASH = 0x3a,
	DOTA_PSEUDO_RANDOM_RIKI_SMOKE_SCREEN = 0x3b,
	DOTA_PSEUDO_RANDOM_CHAOS_DOUBLE_CRIT = 0x3c,
	DOTA_PSEUDO_RANDOM_CHAOS_TRIPLE_CRIT = 0x3d,
	DOTA_PSEUDO_RANDOM_GENERIC_EVASION = 0x3e,
	DOTA_PSEUDO_RANDOM_GENERIC_HEIGHT_MISS = 0x3f,
	DOTA_PSEUDO_RANDOM_GENERIC_MISS = 0x40,
	DOTA_PSEUDO_RANDOM_ARMADILLO_HEARTPIERCER = 0x41,
	DOTA_PSEUDO_RANDOM_MARS_SHIELD = 0x42,
	DOTA_PSEUDO_RANDOM_ANTIMAGE_SILENT = 0x43,
	DOTA_PSEUDO_RANDOM_NEUTRAL_DROP_TIER1 = 0x44,
	DOTA_PSEUDO_RANDOM_NEUTRAL_DROP_TIER2 = 0x45,
	DOTA_PSEUDO_RANDOM_NEUTRAL_DROP_TIER3 = 0x46,
	DOTA_PSEUDO_RANDOM_NEUTRAL_DROP_TIER4 = 0x47,
	DOTA_PSEUDO_RANDOM_NEUTRAL_DROP_TIER5 = 0x48,
	DOTA_PSEUDO_RANDOM_MARS_BULWARK = 0x49,
	DOTA_PSEUDO_RANDOM_MUERTA_GUNSLINGER = 0x4a,
	DOTA_PSEUDO_RANDOM_TROLL_FERVOR_SHARD = 0x4b,
	DOTA_PSEUDO_RANDOM_CUSTOM_GENERIC = 0x4c,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_1 = 0x4d,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_2 = 0x4e,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_3 = 0x4f,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_4 = 0x50,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_5 = 0x51,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_6 = 0x52,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_7 = 0x53,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_8 = 0x54,
	DOTA_PSEUDO_RANDOM_CUSTOM_GAME_9 = 0x55,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class modifierremove : uint32_t
{
	DOTA_BUFF_REMOVE_ALL = 0x0,
	DOTA_BUFF_REMOVE_ENEMY = 0x1,
	DOTA_BUFF_REMOVE_ALLY = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class modifierpriority : uint32_t
{
	MODIFIER_PRIORITY_LOW = 0x0,
	MODIFIER_PRIORITY_NORMAL = 0x1,
	MODIFIER_PRIORITY_HIGH = 0x2,
	MODIFIER_PRIORITY_ULTRA = 0x3,
	MODIFIER_PRIORITY_SUPER_ULTRA = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x126
enum class modifierfunction : uint32_t
{
	// MScriptDescription "GetModifierPreAttack_BonusDamage"
	MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE = 0x0,
	// MScriptDescription "GetModifierPreAttack_BonusDamage_Target"
	MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_TARGET = 0x1,
	// MScriptDescription "GetModifierPreAttack_BonusDamage_Proc"
	MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_PROC = 0x2,
	// MScriptDescription "GetModifierPreAttack_BonusDamagePostCrit"
	MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_POST_CRIT = 0x3,
	// MScriptDescription "GetModifierBaseAttack_BonusDamage"
	MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE = 0x4,
	// MScriptDescription "GetModifierProcAttack_BonusDamage_Physical"
	MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PHYSICAL = 0x5,
	// MScriptDescription "GetModifierProcAttack_ConvertPhysicalToMagical"
	MODIFIER_PROPERTY_PROCATTACK_CONVERT_PHYSICAL_TO_MAGICAL = 0x6,
	// MScriptDescription "GetModifierProcAttack_BonusDamage_Magical"
	MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL = 0x7,
	// MScriptDescription "GetModifierProcAttack_BonusDamage_Pure"
	MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PURE = 0x8,
	// MScriptDescription "GetModifierProcAttack_BonusDamage_Magical_Target"
	MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL_TARGET = 0x9,
	// MScriptDescription "GetModifierProcAttack_Feedback"
	MODIFIER_PROPERTY_PROCATTACK_FEEDBACK = 0xa,
	// MScriptDescription "GetModifierOverrideAttackDamage"
	MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE = 0xb,
	// MScriptDescription "GetModifierPreAttack"
	MODIFIER_PROPERTY_PRE_ATTACK = 0xc,
	// MScriptDescription "GetModifierInvisibilityLevel"
	MODIFIER_PROPERTY_INVISIBILITY_LEVEL = 0xd,
	// MScriptDescription "GetModifierInvisibilityAttackBehaviorException"
	MODIFIER_PROPERTY_INVISIBILITY_ATTACK_BEHAVIOR_EXCEPTION = 0xe,
	// MScriptDescription "GetModifierPersistentInvisibility"
	MODIFIER_PROPERTY_PERSISTENT_INVISIBILITY = 0xf,
	// MScriptDescription "GetModifierMoveSpeedBonus_Constant"
	MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT = 0x10,
	// MScriptDescription "GetModifierMoveSpeedOverride"
	MODIFIER_PROPERTY_MOVESPEED_BASE_OVERRIDE = 0x11,
	// MScriptDescription "GetModifierMoveSpeedBonus_Percentage"
	MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE = 0x12,
	// MScriptDescription "GetModifierMoveSpeedBonus_Percentage_Unique"
	MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE = 0x13,
	// MScriptDescription "GetModifierMoveSpeedBonus_Special_Boots"
	MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE = 0x14,
	// MScriptDescription "GetModifierMoveSpeedBonus_Special_Boots_2"
	MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE_2 = 0x15,
	// MScriptDescription "GetModifierMoveSpeedBonus_Constant_Unique"
	MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE = 0x16,
	// MScriptDescription "GetModifierMoveSpeedBonus_Constant_Unique_2"
	MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE_2 = 0x17,
	// MScriptDescription "GetModifierMoveSpeed_Absolute"
	MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE = 0x18,
	// MScriptDescription "GetModifierMoveSpeed_AbsoluteMin"
	MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MIN = 0x19,
	// MScriptDescription "GetModifierMoveSpeed_AbsoluteMax"
	MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MAX = 0x1a,
	// MScriptDescription "GetModifierIgnoreMovespeedLimit"
	MODIFIER_PROPERTY_IGNORE_MOVESPEED_LIMIT = 0x1b,
	// MScriptDescription "GetModifierMoveSpeed_Limit"
	MODIFIER_PROPERTY_MOVESPEED_LIMIT = 0x1c,
	// MScriptDescription "GetModifierAttackSpeedBaseOverride"
	MODIFIER_PROPERTY_ATTACKSPEED_BASE_OVERRIDE = 0x1d,
	// MScriptDescription "GetModifierFixedAttackRate"
	MODIFIER_PROPERTY_FIXED_ATTACK_RATE = 0x1e,
	// MScriptDescription "GetModifierAttackSpeedBonus_Constant"
	MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT = 0x1f,
	// MScriptDescription "GetModifierAttackSpeed_Limit"
	MODIFIER_PROPERTY_IGNORE_ATTACKSPEED_LIMIT = 0x20,
	// MScriptDescription "GetModifierCooldownReduction_Constant"
	MODIFIER_PROPERTY_COOLDOWN_REDUCTION_CONSTANT = 0x21,
	// MScriptDescription "GetModifierManacostReduction_Constant"
	MODIFIER_PROPERTY_MANACOST_REDUCTION_CONSTANT = 0x22,
	// MScriptDescription "GetModifierHealthcostReduction_Constant"
	MODIFIER_PROPERTY_HEALTHCOST_REDUCTION_CONSTANT = 0x23,
	// MScriptDescription "GetModifierBaseAttackTimeConstant"
	MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT = 0x24,
	// MScriptDescription "GetModifierBaseAttackTimeConstant_Adjust"
	MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT_ADJUST = 0x25,
	// MScriptDescription "GetModifierBaseAttackTimePercentage"
	MODIFIER_PROPERTY_BASE_ATTACK_TIME_PERCENTAGE = 0x26,
	// MScriptDescription "GetModifierAttackPointConstant"
	MODIFIER_PROPERTY_ATTACK_POINT_CONSTANT = 0x27,
	// MScriptDescription "GetModifierBonusDamageOutgoing_Percentage"
	MODIFIER_PROPERTY_BONUSDAMAGEOUTGOING_PERCENTAGE = 0x28,
	// MScriptDescription "GetModifierDamageOutgoing_Percentage"
	MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE = 0x29,
	// MScriptDescription "GetModifierDamageOutgoing_Percentage_Illusion"
	MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION = 0x2a,
	// MScriptDescription "GetModifierDamageOutgoing_Percentage_Illusion_Amplify"
	MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION_AMPLIFY = 0x2b,
	// MScriptDescription "GetModifierTotalDamageOutgoing_Percentage"
	MODIFIER_PROPERTY_TOTALDAMAGEOUTGOING_PERCENTAGE = 0x2c,
	// MScriptDescription "GetModifierSpellAmplify_PercentageCreep"
	MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_CREEP = 0x2d,
	// MScriptDescription "GetModifierSpellAmplify_Percentage"
	MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE = 0x2e,
	// MScriptDescription "GetModifierSpellAmplify_PercentageUnique"
	MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_UNIQUE = 0x2f,
	// MScriptDescription "GetModifierHealAmplify_PercentageSource"
	MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_SOURCE = 0x30,
	// MScriptDescription "GetModifierHealAmplify_PercentageTarget"
	MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_TARGET = 0x31,
	// MScriptDescription "GetModifierHPRegen_CanBeNegative"
	MODIFIER_PROPERTY_HP_REGEN_CAN_BE_NEGATIVE = 0x32,
	// MScriptDescription "GetModifierHPRegenAmplify_Percentage"
	MODIFIER_PROPERTY_HP_REGEN_AMPLIFY_PERCENTAGE = 0x33,
	// MScriptDescription "GetModifierLifestealRegenAmplify_Percentage"
	MODIFIER_PROPERTY_LIFESTEAL_AMPLIFY_PERCENTAGE = 0x34,
	// MScriptDescription "GetModifierSpellLifestealRegenAmplify_Percentage"
	MODIFIER_PROPERTY_SPELL_LIFESTEAL_AMPLIFY_PERCENTAGE = 0x35,
	// MScriptDescription "GetModifierMPRegenAmplify_Percentage"
	MODIFIER_PROPERTY_MP_REGEN_AMPLIFY_PERCENTAGE = 0x36,
	// MScriptDescription "GetModifierManaDrainAmplify_Percentage"
	MODIFIER_PROPERTY_MANA_DRAIN_AMPLIFY_PERCENTAGE = 0x37,
	// MScriptDescription "GetModifierMPRestoreAmplify_Percentage"
	MODIFIER_PROPERTY_MP_RESTORE_AMPLIFY_PERCENTAGE = 0x38,
	// MScriptDescription "GetModifierBaseDamageOutgoing_Percentage"
	MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE = 0x39,
	// MScriptDescription "GetModifierBaseDamageOutgoing_PercentageUnique"
	MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE_UNIQUE = 0x3a,
	// MScriptDescription "GetModifierIncomingDamage_Percentage"
	MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE = 0x3b,
	// MScriptDescription "GetModifierIncomingPhysicalDamage_Percentage"
	MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_PERCENTAGE = 0x3c,
	// MScriptDescription "GetModifierIncomingPhysicalDamageConstant"
	MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_CONSTANT = 0x3d,
	// MScriptDescription "GetModifierIncomingSpellDamageConstant"
	MODIFIER_PROPERTY_INCOMING_SPELL_DAMAGE_CONSTANT = 0x3e,
	// MScriptDescription "GetModifierEvasion_Constant"
	MODIFIER_PROPERTY_EVASION_CONSTANT = 0x3f,
	// MScriptDescription "GetModifierNegativeEvasion_Constant"
	MODIFIER_PROPERTY_NEGATIVE_EVASION_CONSTANT = 0x40,
	// MScriptDescription "GetModifierStatusResistance"
	MODIFIER_PROPERTY_STATUS_RESISTANCE = 0x41,
	// MScriptDescription "GetModifierStatusResistanceStacking"
	MODIFIER_PROPERTY_STATUS_RESISTANCE_STACKING = 0x42,
	// MScriptDescription "GetModifierStatusResistanceCaster"
	MODIFIER_PROPERTY_STATUS_RESISTANCE_CASTER = 0x43,
	// MScriptDescription "GetModifierAvoidDamage"
	MODIFIER_PROPERTY_AVOID_DAMAGE = 0x44,
	// MScriptDescription "GetModifierAvoidSpell"
	MODIFIER_PROPERTY_AVOID_SPELL = 0x45,
	// MScriptDescription "GetModifierMiss_Percentage"
	MODIFIER_PROPERTY_MISS_PERCENTAGE = 0x46,
	// MScriptDescription "GetModifierPhysicalArmorBase_Percentage"
	MODIFIER_PROPERTY_PHYSICAL_ARMOR_BASE_PERCENTAGE = 0x47,
	// MScriptDescription "GetModifierPhysicalArmorTotal_Percentage"
	MODIFIER_PROPERTY_PHYSICAL_ARMOR_TOTAL_PERCENTAGE = 0x48,
	// MScriptDescription "GetModifierPhysicalArmorBonus"
	MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS = 0x49,
	// MScriptDescription "GetModifierPhysicalArmorBonusUnique"
	MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE = 0x4a,
	// MScriptDescription "GetModifierPhysicalArmorBonusUniqueActive"
	MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE_ACTIVE = 0x4b,
	// MScriptDescription "GetModifierPhysicalArmorBonusPost"
	MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_POST = 0x4c,
	// MScriptDescription "GetModifierMinPhysicalArmor"
	MODIFIER_PROPERTY_MIN_PHYSICAL_ARMOR = 0x4d,
	// MScriptDescription "GetModifierIgnorePhysicalArmor"
	MODIFIER_PROPERTY_IGNORE_PHYSICAL_ARMOR = 0x4e,
	// MScriptDescription "GetModifierMagicalResistanceBaseReduction"
	MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BASE_REDUCTION = 0x4f,
	// MScriptDescription "GetModifierMagicalResistanceDirectModification"
	MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DIRECT_MODIFICATION = 0x50,
	// MScriptDescription "GetModifierMagicalResistanceBonus"
	MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS = 0x51,
	// MScriptDescription "GetModifierMagicalResistanceBonusIllusions"
	MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_ILLUSIONS = 0x52,
	// MScriptDescription "GetModifierMagicalResistanceBonusUnique"
	MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_UNIQUE = 0x53,
	// MScriptDescription "GetModifierMagicalResistanceDecrepifyUnique"
	MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DECREPIFY_UNIQUE = 0x54,
	// MScriptDescription "GetModifierBaseRegen"
	MODIFIER_PROPERTY_BASE_MANA_REGEN = 0x55,
	// MScriptDescription "GetModifierConstantManaRegen"
	MODIFIER_PROPERTY_MANA_REGEN_CONSTANT = 0x56,
	// MScriptDescription "GetModifierConstantManaRegenUnique"
	MODIFIER_PROPERTY_MANA_REGEN_CONSTANT_UNIQUE = 0x57,
	// MScriptDescription "GetModifierTotalPercentageManaRegen"
	MODIFIER_PROPERTY_MANA_REGEN_TOTAL_PERCENTAGE = 0x58,
	// MScriptDescription "GetModifierConstantHealthRegen"
	MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT = 0x59,
	// MScriptDescription "GetModifierHealthRegenPercentage"
	MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE = 0x5a,
	// MScriptDescription "GetModifierHealthRegenPercentageUnique"
	MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE_UNIQUE = 0x5b,
	// MScriptDescription "GetModifierHealthBonus"
	MODIFIER_PROPERTY_HEALTH_BONUS = 0x5c,
	// MScriptDescription "GetModifierManaBonus"
	MODIFIER_PROPERTY_MANA_BONUS = 0x5d,
	// MScriptDescription "GetModifierExtraStrengthBonus"
	MODIFIER_PROPERTY_EXTRA_STRENGTH_BONUS = 0x5e,
	// MScriptDescription "GetModifierExtraHealthBonus"
	MODIFIER_PROPERTY_EXTRA_HEALTH_BONUS = 0x5f,
	// MScriptDescription "GetModifierExtraManaBonus"
	MODIFIER_PROPERTY_EXTRA_MANA_BONUS = 0x60,
	// MScriptDescription "GetModifierExtraManaBonusPercentage"
	MODIFIER_PROPERTY_EXTRA_MANA_BONUS_PERCENTAGE = 0x61,
	// MScriptDescription "GetModifierExtraHealthPercentage"
	MODIFIER_PROPERTY_EXTRA_HEALTH_PERCENTAGE = 0x62,
	// MScriptDescription "GetModifierExtraManaPercentage"
	MODIFIER_PROPERTY_EXTRA_MANA_PERCENTAGE = 0x63,
	// MScriptDescription "GetModifierBonusStats_Strength"
	MODIFIER_PROPERTY_STATS_STRENGTH_BONUS = 0x64,
	// MScriptDescription "GetModifierBonusStats_Agility"
	MODIFIER_PROPERTY_STATS_AGILITY_BONUS = 0x65,
	// MScriptDescription "GetModifierBonusStats_Intellect"
	MODIFIER_PROPERTY_STATS_INTELLECT_BONUS = 0x66,
	// MScriptDescription "GetModifierBonusStats_Strength_Percentage"
	MODIFIER_PROPERTY_STATS_STRENGTH_BONUS_PERCENTAGE = 0x67,
	// MScriptDescription "GetModifierBonusStats_Agility_Percentage"
	MODIFIER_PROPERTY_STATS_AGILITY_BONUS_PERCENTAGE = 0x68,
	// MScriptDescription "GetModifierBonusStats_Intellect_Percentage"
	MODIFIER_PROPERTY_STATS_INTELLECT_BONUS_PERCENTAGE = 0x69,
	// MScriptDescription "GetModifierCastRangeBonus"
	MODIFIER_PROPERTY_CAST_RANGE_BONUS = 0x6a,
	// MScriptDescription "GetModifierCastRangeBonusPercentage"
	MODIFIER_PROPERTY_CAST_RANGE_BONUS_PERCENTAGE = 0x6b,
	// MScriptDescription "GetModifierCastRangeBonusTarget"
	MODIFIER_PROPERTY_CAST_RANGE_BONUS_TARGET = 0x6c,
	// MScriptDescription "GetModifierCastRangeBonusStacking"
	MODIFIER_PROPERTY_CAST_RANGE_BONUS_STACKING = 0x6d,
	// MScriptDescription "GetModifierAttackRangeOverride"
	MODIFIER_PROPERTY_ATTACK_RANGE_BASE_OVERRIDE = 0x6e,
	// MScriptDescription "GetModifierAttackRangeBonus"
	MODIFIER_PROPERTY_ATTACK_RANGE_BONUS = 0x6f,
	// MScriptDescription "GetModifierAttackRangeBonusUnique"
	MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_UNIQUE = 0x70,
	// MScriptDescription "GetModifierAttackRangeBonusPercentage"
	MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_PERCENTAGE = 0x71,
	// MScriptDescription "GetModifierMaxAttackRange"
	MODIFIER_PROPERTY_MAX_ATTACK_RANGE = 0x72,
	// MScriptDescription "GetModifierProjectileSpeedBonus"
	MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS = 0x73,
	// MScriptDescription "GetModifierProjectileSpeedBonusPercentage"
	MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS_PERCENTAGE = 0x74,
	// MScriptDescription "GetModifierProjectileName"
	MODIFIER_PROPERTY_PROJECTILE_NAME = 0x75,
	// MScriptDescription "ReincarnateTime"
	MODIFIER_PROPERTY_REINCARNATION = 0x76,
	// MScriptDescription "ReincarnateSuppressFX"
	MODIFIER_PROPERTY_REINCARNATION_SUPPRESS_FX = 0x77,
	// MScriptDescription "GetModifierConstantRespawnTime"
	MODIFIER_PROPERTY_RESPAWNTIME = 0x78,
	// MScriptDescription "GetModifierPercentageRespawnTime"
	MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE = 0x79,
	// MScriptDescription "GetModifierStackingRespawnTime"
	MODIFIER_PROPERTY_RESPAWNTIME_STACKING = 0x7a,
	// MScriptDescription "GetModifierPercentageCooldown"
	MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE = 0x7b,
	// MScriptDescription "GetModifierPercentageCooldownOngoing"
	MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_ONGOING = 0x7c,
	// MScriptDescription "GetModifierPercentageCasttime"
	MODIFIER_PROPERTY_CASTTIME_PERCENTAGE = 0x7d,
	// MScriptDescription "GetModifierPercentageAttackAnimTime"
	MODIFIER_PROPERTY_ATTACK_ANIM_TIME_PERCENTAGE = 0x7e,
	// MScriptDescription "GetModifierPercentageManacost"
	MODIFIER_PROPERTY_MANACOST_PERCENTAGE = 0x7f,
	// MScriptDescription "GetModifierPercentageManacostStacking"
	MODIFIER_PROPERTY_MANACOST_PERCENTAGE_STACKING = 0x80,
	// MScriptDescription "GetModifierPercentageHealthcost"
	MODIFIER_PROPERTY_HEALTHCOST_PERCENTAGE = 0x81,
	// MScriptDescription "GetModifierPercentageHealthcostStacking"
	MODIFIER_PROPERTY_HEALTHCOST_PERCENTAGE_STACKING = 0x82,
	// MScriptDescription "GetModifierConstantDeathGoldCost"
	MODIFIER_PROPERTY_DEATHGOLDCOST = 0x83,
	// MScriptDescription "GetModifierPercentageExpRateBoost"
	MODIFIER_PROPERTY_EXP_RATE_BOOST = 0x84,
	// MScriptDescription "GetModifierPercentageGoldRateBoost"
	MODIFIER_PROPERTY_GOLD_RATE_BOOST = 0x85,
	// MScriptDescription "GetModifierPreAttack_CriticalStrike"
	MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE = 0x86,
	// MScriptDescription "GetModifierPreAttack_Target_CriticalStrike"
	MODIFIER_PROPERTY_PREATTACK_TARGET_CRITICALSTRIKE = 0x87,
	// MScriptDescription "GetModifierMagical_ConstantBlock"
	MODIFIER_PROPERTY_MAGICAL_CONSTANT_BLOCK = 0x88,
	// MScriptDescription "GetModifierPhysical_ConstantBlock"
	MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK = 0x89,
	// MScriptDescription "GetModifierPhysical_ConstantBlockSpecial"
	MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK_SPECIAL = 0x8a,
	// MScriptDescription "GetModifierPhysical_ConstantBlockUnavoidablePreArmor"
	MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_UNAVOIDABLE_PRE_ARMOR = 0x8b,
	// MScriptDescription "GetModifierTotal_ConstantBlock"
	MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK = 0x8c,
	// MScriptDescription "GetOverrideAnimation"
	MODIFIER_PROPERTY_OVERRIDE_ANIMATION = 0x8d,
	// MScriptDescription "GetOverrideAnimationWeight"
	MODIFIER_PROPERTY_OVERRIDE_ANIMATION_WEIGHT = 0x8e,
	// MScriptDescription "GetOverrideAnimationRate"
	MODIFIER_PROPERTY_OVERRIDE_ANIMATION_RATE = 0x8f,
	// MScriptDescription "GetAbsorbSpell"
	MODIFIER_PROPERTY_ABSORB_SPELL = 0x90,
	// MScriptDescription "GetReflectSpell"
	MODIFIER_PROPERTY_REFLECT_SPELL = 0x91,
	// MScriptDescription "GetDisableAutoAttack"
	MODIFIER_PROPERTY_DISABLE_AUTOATTACK = 0x92,
	// MScriptDescription "GetBonusDayVision"
	MODIFIER_PROPERTY_BONUS_DAY_VISION = 0x93,
	// MScriptDescription "GetBonusDayVisionPercentage"
	MODIFIER_PROPERTY_BONUS_DAY_VISION_PERCENTAGE = 0x94,
	// MScriptDescription "GetBonusNightVision"
	MODIFIER_PROPERTY_BONUS_NIGHT_VISION = 0x95,
	// MScriptDescription "GetBonusNightVisionUnique"
	MODIFIER_PROPERTY_BONUS_NIGHT_VISION_UNIQUE = 0x96,
	// MScriptDescription "GetBonusVisionPercentage"
	MODIFIER_PROPERTY_BONUS_VISION_PERCENTAGE = 0x97,
	// MScriptDescription "GetFixedDayVision"
	MODIFIER_PROPERTY_FIXED_DAY_VISION = 0x98,
	// MScriptDescription "GetFixedNightVision"
	MODIFIER_PROPERTY_FIXED_NIGHT_VISION = 0x99,
	// MScriptDescription "GetMinHealth"
	MODIFIER_PROPERTY_MIN_HEALTH = 0x9a,
	// MScriptDescription "GetAbsoluteNoDamagePhysical"
	MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL = 0x9b,
	// MScriptDescription "GetAbsoluteNoDamageMagical"
	MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL = 0x9c,
	// MScriptDescription "GetAbsoluteNoDamagePure"
	MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE = 0x9d,
	// MScriptDescription "GetIsIllusion"
	MODIFIER_PROPERTY_IS_ILLUSION = 0x9e,
	// MScriptDescription "GetModifierIllusionLabel"
	MODIFIER_PROPERTY_ILLUSION_LABEL = 0x9f,
	// MScriptDescription "GetModifierStrongIllusion"
	MODIFIER_PROPERTY_STRONG_ILLUSION = 0xa0,
	// MScriptDescription "GetModifierSuperIllusion"
	MODIFIER_PROPERTY_SUPER_ILLUSION = 0xa1,
	// MScriptDescription "GetModifierSuperIllusionWithUltimate"
	MODIFIER_PROPERTY_SUPER_ILLUSION_WITH_ULTIMATE = 0xa2,
	// MScriptDescription "GetModifierXPDuringDeath"
	MODIFIER_PROPERTY_XP_DURING_DEATH = 0xa3,
	// MScriptDescription "GetModifierTurnRate_Percentage"
	MODIFIER_PROPERTY_TURN_RATE_PERCENTAGE = 0xa4,
	// MScriptDescription "GetModifierTurnRate_Override"
	MODIFIER_PROPERTY_TURN_RATE_OVERRIDE = 0xa5,
	// MScriptDescription "GetDisableHealing"
	MODIFIER_PROPERTY_DISABLE_HEALING = 0xa6,
	// MScriptDescription "GetAlwaysAllowAttack"
	MODIFIER_PROPERTY_ALWAYS_ALLOW_ATTACK = 0xa7,
	// MScriptDescription "GetAllowEtherealAttack"
	MODIFIER_PROPERTY_ALWAYS_ETHEREAL_ATTACK = 0xa8,
	// MScriptDescription "GetOverrideAttackMagical"
	MODIFIER_PROPERTY_OVERRIDE_ATTACK_MAGICAL = 0xa9,
	// MScriptDescription "GetModifierUnitStatsNeedsRefresh"
	MODIFIER_PROPERTY_UNIT_STATS_NEEDS_REFRESH = 0xaa,
	// MScriptDescription "Unused"
	MODIFIER_PROPERTY_BOUNTY_CREEP_MULTIPLIER = 0xab,
	// MScriptDescription "Unused"
	MODIFIER_PROPERTY_BOUNTY_OTHER_MULTIPLIER = 0xac,
	// MScriptDescription "GetModifierUnitDisllowUpgrading"
	MODIFIER_PROPERTY_UNIT_DISALLOW_UPGRADING = 0xad,
	// MScriptDescription "GetModifierDodgeProjectile"
	MODIFIER_PROPERTY_DODGE_PROJECTILE = 0xae,
	// MScriptDescription "GetTriggerCosmeticAndEndAttack"
	MODIFIER_PROPERTY_TRIGGER_COSMETIC_AND_END_ATTACK = 0xaf,
	// MScriptDescription "GetModifierMaxDebuffDuration"
	MODIFIER_PROPERTY_MAX_DEBUFF_DURATION = 0xb0,
	// MScriptDescription "GetPrimaryStatDamageMultiplier"
	MODIFIER_PROPERTY_PRIMARY_STAT_DAMAGE_MULTIPLIER = 0xb1,
	// MScriptDescription "GetModifierPreAttack_DeadlyBlow"
	MODIFIER_PROPERTY_PREATTACK_DEADLY_BLOW = 0xb2,
	// MScriptDescription "GetAlwaysAutoAttackWhileHoldPosition"
	MODIFIER_PROPERTY_ALWAYS_AUTOATTACK_WHILE_HOLD_POSITION = 0xb3,
	// MScriptDescription "OnSpellTargetReady"
	MODIFIER_EVENT_ON_SPELL_TARGET_READY = 0xb4,
	// MScriptDescription "OnAttackRecord"
	MODIFIER_EVENT_ON_ATTACK_RECORD = 0xb5,
	// MScriptDescription "OnAttackStart"
	MODIFIER_EVENT_ON_ATTACK_START = 0xb6,
	// MScriptDescription "OnAttack"
	MODIFIER_EVENT_ON_ATTACK = 0xb7,
	// MScriptDescription "OnAttackLanded"
	MODIFIER_EVENT_ON_ATTACK_LANDED = 0xb8,
	// MScriptDescription "OnAttackFail"
	MODIFIER_EVENT_ON_ATTACK_FAIL = 0xb9,
	// MScriptDescription "OnAttackAllied"
	MODIFIER_EVENT_ON_ATTACK_ALLIED = 0xba,
	// MScriptDescription "OnProjectileDodge"
	MODIFIER_EVENT_ON_PROJECTILE_DODGE = 0xbb,
	// MScriptDescription "OnOrder"
	MODIFIER_EVENT_ON_ORDER = 0xbc,
	// MScriptDescription "OnUnitMoved"
	MODIFIER_EVENT_ON_UNIT_MOVED = 0xbd,
	// MScriptDescription "OnAbilityStart"
	MODIFIER_EVENT_ON_ABILITY_START = 0xbe,
	// MScriptDescription "OnAbilityExecuted"
	MODIFIER_EVENT_ON_ABILITY_EXECUTED = 0xbf,
	// MScriptDescription "OnAbilityFullyCast"
	MODIFIER_EVENT_ON_ABILITY_FULLY_CAST = 0xc0,
	// MScriptDescription "OnBreakInvisibility"
	MODIFIER_EVENT_ON_BREAK_INVISIBILITY = 0xc1,
	// MScriptDescription "OnAbilityEndChannel"
	MODIFIER_EVENT_ON_ABILITY_END_CHANNEL = 0xc2,
	// MScriptDescription "Unused"
	MODIFIER_EVENT_ON_PROCESS_UPGRADE = 0xc3,
	// MScriptDescription "Unused"
	MODIFIER_EVENT_ON_REFRESH = 0xc4,
	// MScriptDescription "OnTakeDamage"
	MODIFIER_EVENT_ON_TAKEDAMAGE = 0xc5,
	// MScriptDescription "OnDamagePrevented"
	MODIFIER_EVENT_ON_DEATH_PREVENTED = 0xc6,
	// MScriptDescription "OnStateChanged"
	MODIFIER_EVENT_ON_STATE_CHANGED = 0xc7,
	// MScriptDescription "Unused"
	MODIFIER_EVENT_ON_ORB_EFFECT = 0xc8,
	// MScriptDescription "OnProcessCleave"
	MODIFIER_EVENT_ON_PROCESS_CLEAVE = 0xc9,
	// MScriptDescription "OnDamageCalculated"
	MODIFIER_EVENT_ON_DAMAGE_CALCULATED = 0xca,
	// MScriptDescription "OnMagicDamageCalculated"
	MODIFIER_EVENT_ON_MAGIC_DAMAGE_CALCULATED = 0xcb,
	// MScriptDescription "OnAttacked"
	MODIFIER_EVENT_ON_ATTACKED = 0xcc,
	// MScriptDescription "OnDeath"
	MODIFIER_EVENT_ON_DEATH = 0xcd,
	// MScriptDescription "OnDeathCompleted"
	MODIFIER_EVENT_ON_DEATH_COMPLETED = 0xce,
	// MScriptDescription "OnRespawn"
	MODIFIER_EVENT_ON_RESPAWN = 0xcf,
	// MScriptDescription "OnSpentMana"
	MODIFIER_EVENT_ON_SPENT_MANA = 0xd0,
	// MScriptDescription "OnSpentHealth"
	MODIFIER_EVENT_ON_SPENT_HEALTH = 0xd1,
	// MScriptDescription "OnTeleporting"
	MODIFIER_EVENT_ON_TELEPORTING = 0xd2,
	// MScriptDescription "OnTeleported"
	MODIFIER_EVENT_ON_TELEPORTED = 0xd3,
	// MScriptDescription "OnSetLocation"
	MODIFIER_EVENT_ON_SET_LOCATION = 0xd4,
	// MScriptDescription "OnHealthGained"
	MODIFIER_EVENT_ON_HEALTH_GAINED = 0xd5,
	// MScriptDescription "OnManaGained"
	MODIFIER_EVENT_ON_MANA_GAINED = 0xd6,
	// MScriptDescription "OnTakeDamageKillCredit"
	MODIFIER_EVENT_ON_TAKEDAMAGE_KILLCREDIT = 0xd7,
	// MScriptDescription "OnHeroKilled"
	MODIFIER_EVENT_ON_HERO_KILLED = 0xd8,
	// MScriptDescription "OnHealReceived"
	MODIFIER_EVENT_ON_HEAL_RECEIVED = 0xd9,
	// MScriptDescription "OnBuildingKilled"
	MODIFIER_EVENT_ON_BUILDING_KILLED = 0xda,
	// MScriptDescription "OnModelChanged"
	MODIFIER_EVENT_ON_MODEL_CHANGED = 0xdb,
	// MScriptDescription "OnModifierAdded"
	MODIFIER_EVENT_ON_MODIFIER_ADDED = 0xdc,
	// MScriptDescription "OnTooltip"
	MODIFIER_PROPERTY_TOOLTIP = 0xdd,
	// MScriptDescription "GetModifierModelChange"
	MODIFIER_PROPERTY_MODEL_CHANGE = 0xde,
	// MScriptDescription "GetModifierModelScale"
	MODIFIER_PROPERTY_MODEL_SCALE = 0xdf,
	// MScriptDescription "GetModifierModelScaleAnimateTime"
	MODIFIER_PROPERTY_MODEL_SCALE_ANIMATE_TIME = 0xe0,
	// MScriptDescription "GetModifierModelScaleUseInOutEase"
	MODIFIER_PROPERTY_MODEL_SCALE_USE_IN_OUT_EASE = 0xe1,
	// MScriptDescription "GetModifierModelScaleConstant"
	MODIFIER_PROPERTY_MODEL_SCALE_CONSTANT = 0xe2,
	// MScriptDescription "GetModifierScepter"
	MODIFIER_PROPERTY_IS_SCEPTER = 0xe3,
	// MScriptDescription "GetModifierShard"
	MODIFIER_PROPERTY_IS_SHARD = 0xe4,
	// MScriptDescription "GetModifierRadarCooldownReduction"
	MODIFIER_PROPERTY_RADAR_COOLDOWN_REDUCTION = 0xe5,
	// MScriptDescription "GetActivityTranslationModifiers"
	MODIFIER_PROPERTY_TRANSLATE_ACTIVITY_MODIFIERS = 0xe6,
	// MScriptDescription "GetAttackSound"
	MODIFIER_PROPERTY_TRANSLATE_ATTACK_SOUND = 0xe7,
	// MScriptDescription "GetUnitLifetimeFraction"
	MODIFIER_PROPERTY_LIFETIME_FRACTION = 0xe8,
	// MScriptDescription "GetModifierProvidesFOWVision"
	MODIFIER_PROPERTY_PROVIDES_FOW_POSITION = 0xe9,
	// MScriptDescription "GetModifierSpellsRequireHP"
	MODIFIER_PROPERTY_SPELLS_REQUIRE_HP = 0xea,
	// MScriptDescription "GetForceDrawOnMinimap"
	MODIFIER_PROPERTY_FORCE_DRAW_MINIMAP = 0xeb,
	// MScriptDescription "GetModifierDisableTurning"
	MODIFIER_PROPERTY_DISABLE_TURNING = 0xec,
	// MScriptDescription "GetModifierIgnoreCastAngle"
	MODIFIER_PROPERTY_IGNORE_CAST_ANGLE = 0xed,
	// MScriptDescription "GetModifierChangeAbilityValue"
	MODIFIER_PROPERTY_CHANGE_ABILITY_VALUE = 0xee,
	// MScriptDescription "GetModifierOverrideAbilitySpecial"
	MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL = 0xef,
	// MScriptDescription "GetModifierOverrideAbilitySpecialValue"
	MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL_VALUE = 0xf0,
	// MScriptDescription "GetModifierAbilityLayout"
	MODIFIER_PROPERTY_ABILITY_LAYOUT = 0xf1,
	// MScriptDescription "OnDominated"
	MODIFIER_EVENT_ON_DOMINATED = 0xf2,
	// MScriptDescription "OnKill"
	MODIFIER_EVENT_ON_KILL = 0xf3,
	// MScriptDescription "OnAssist"
	MODIFIER_EVENT_ON_ASSIST = 0xf4,
	// MScriptDescription "GetModifierTempestDouble"
	MODIFIER_PROPERTY_TEMPEST_DOUBLE = 0xf5,
	// MScriptDescription "PreserveParticlesOnModelChanged"
	MODIFIER_PROPERTY_PRESERVE_PARTICLES_ON_MODEL_CHANGE = 0xf6,
	// MScriptDescription "OnAttackFinished"
	MODIFIER_EVENT_ON_ATTACK_FINISHED = 0xf7,
	// MScriptDescription "GetModifierIgnoreCooldown"
	MODIFIER_PROPERTY_IGNORE_COOLDOWN = 0xf8,
	// MScriptDescription "GetModifierCanAttackTrees"
	MODIFIER_PROPERTY_CAN_ATTACK_TREES = 0xf9,
	// MScriptDescription "GetVisualZDelta"
	MODIFIER_PROPERTY_VISUAL_Z_DELTA = 0xfa,
	// MScriptDescription "GetVisualZSpeedBaseOverride"
	MODIFIER_PROPERTY_VISUAL_Z_SPEED_BASE_OVERRIDE = 0xfb,
	// MScriptDescription
	MODIFIER_PROPERTY_INCOMING_DAMAGE_ILLUSION = 0xfc,
	// MScriptDescription "GetModifierNoVisionOfAttacker"
	MODIFIER_PROPERTY_DONT_GIVE_VISION_OF_ATTACKER = 0xfd,
	// MScriptDescription "OnTooltip2"
	MODIFIER_PROPERTY_TOOLTIP2 = 0xfe,
	// MScriptDescription "OnAttackRecordDestroy"
	MODIFIER_EVENT_ON_ATTACK_RECORD_DESTROY = 0xff,
	// MScriptDescription "OnProjectileObstructionHit"
	MODIFIER_EVENT_ON_PROJECTILE_OBSTRUCTION_HIT = 0x100,
	// MScriptDescription "GetSuppressTeleport"
	MODIFIER_PROPERTY_SUPPRESS_TELEPORT = 0x101,
	// MScriptDescription "OnAttackCancelled"
	MODIFIER_EVENT_ON_ATTACK_CANCELLED = 0x102,
	// MScriptDescription "GetSuppressCleave"
	MODIFIER_PROPERTY_SUPPRESS_CLEAVE = 0x103,
	// MScriptDescription "BotAttackScoreBonus"
	MODIFIER_PROPERTY_BOT_ATTACK_SCORE_BONUS = 0x104,
	// MScriptDescription "GetModifierAttackSpeedReductionPercentage"
	MODIFIER_PROPERTY_ATTACKSPEED_REDUCTION_PERCENTAGE = 0x105,
	// MScriptDescription "GetModifierMoveSpeedReductionPercentage"
	MODIFIER_PROPERTY_MOVESPEED_REDUCTION_PERCENTAGE = 0x106,
	// MScriptDescription
	MODIFIER_PROPERTY_ATTACK_WHILE_MOVING_TARGET = 0x107,
	// MScriptDescription "GetModifierAttackSpeedPercentage"
	MODIFIER_PROPERTY_ATTACKSPEED_PERCENTAGE = 0x108,
	// MScriptDescription "OnAttemptProjectileDodge"
	MODIFIER_EVENT_ON_ATTEMPT_PROJECTILE_DODGE = 0x109,
	// MScriptDescription "OnPreDebuffApplied"
	MODIFIER_EVENT_ON_PREDEBUFF_APPLIED = 0x10a,
	// MScriptDescription "GetModifierPercentageCooldownStacking"
	MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_STACKING = 0x10b,
	// MScriptDescription "GetModifierSpellRedirectTarget"
	MODIFIER_PROPERTY_SPELL_REDIRECT_TARGET = 0x10c,
	// MScriptDescription "GetModifierTurnRateConstant"
	MODIFIER_PROPERTY_TURN_RATE_CONSTANT = 0x10d,
	// MScriptDescription "GetModifierIsRatPack"
	MODIFIER_PROPERTY_RAT_PACK = 0x10e,
	// MScriptDescription "GetModifierPhysicalDamageOutgoing_Percentage"
	MODIFIER_PROPERTY_PHYSICALDAMAGEOUTGOING_PERCENTAGE = 0x10f,
	// MScriptDescription "GetModifierKnockbackAmplification_Percentage"
	MODIFIER_PROPERTY_KNOCKBACK_AMPLIFICATION_PERCENTAGE = 0x110,
	// MScriptDescription "GetModifierHealthBarPips"
	MODIFIER_PROPERTY_HEALTHBAR_PIPS = 0x111,
	// MScriptDescription "GetModifierIncomingDamageConstant"
	MODIFIER_PROPERTY_INCOMING_DAMAGE_CONSTANT = 0x112,
	// MScriptDescription "OnSpellAppliedSuccessfully"
	MODIFIER_EVENT_SPELL_APPLIED_SUCCESSFULLY = 0x113,
	// MScriptDescription "GetModifierAvoidDamageAfterReductions"
	MODIFIER_PROPERTY_AVOID_DAMAGE_AFTER_REDUCTIONS = 0x114,
	// MScriptDescription "GetModifierPropetyFailAttack"
	MODIFIER_PROPERTY_FAIL_ATTACK = 0x115,
	// MScriptDescription "GetModifierPrereduceIncomingDamage_Mult"
	MODIFIER_PROPERTY_PREREDUCE_INCOMING_DAMAGE_MULT = 0x116,
	// MScriptDescription "GetModifierSuppressFullscreenDeathFX"
	MODIFIER_PROPERTY_SUPPRESS_FULLSCREEN_DEATH_FX = 0x117,
	// MScriptDescription "MODIFIER_PROPERTY_INCOMING_DAMAGE_CONSTANT_POST"
	MODIFIER_PROPERTY_INCOMING_DAMAGE_CONSTANT_POST = 0x118,
	// MScriptDescription "GetModifierDamageOutgoing_PercentageMultiplicative"
	MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_MULTIPLICATIVE = 0x119,
	// MScriptDescription "GetModifierTickGold_Multiplier"
	MODIFIER_PROPERTY_TICK_GOLD_MULTIPLIER = 0x11a,
	// MScriptDescription "GetModifierSlowResistance"
	MODIFIER_PROPERTY_SLOW_RESISTANCE = 0x11b,
	// MScriptDescription "GetModifierAoEBonusPercentage"
	MODIFIER_PROPERTY_AOE_BONUS_PERCENTAGE = 0x11c,
	// MScriptDescription "GetModifierProjectileSpeed"
	MODIFIER_PROPERTY_PROJECTILE_SPEED = 0x11d,
	// MScriptDescription "GetModifierBecomeUniversal"
	MODIFIER_PROPERTY_BECOME_UNIVERSAL = 0x11e,
	// MScriptDescription "OnForceProcMagicStick"
	MODIFIER_EVENT_ON_FORCE_PROC_MAGIC_STICK = 0x11f,
	// MScriptDescription "GetModifierDoNotSinkAfterDeath"
	MODIFIER_PROPERTY_DO_NOT_SINK_AFTER_DEATH = 0x120,
	// MScriptDescription "OnDamageHPLoss"
	MODIFIER_EVENT_ON_DAMAGE_HPLOSS = 0x121,
	// MScriptDescription "GetModifierForceMaxHealth"
	MODIFIER_PROPERTY_FORCE_MAX_HEALTH = 0x122,
	// MScriptDescription "GetModifierAoEBonusConstant"
	MODIFIER_PROPERTY_AOE_BONUS_CONSTANT = 0x123,
	MODIFIER_FUNCTION_LAST = 0x124,
	MODIFIER_FUNCTION_INVALID = 0xffff,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class LuaModifierType : uint32_t
{
	LUA_MODIFIER_MOTION_NONE = 0x0,
	LUA_MODIFIER_MOTION_HORIZONTAL = 0x1,
	LUA_MODIFIER_MOTION_VERTICAL = 0x2,
	LUA_MODIFIER_MOTION_BOTH = 0x3,
	LUA_MODIFIER_INVALID = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class CourierState_t : uint32_t
{
	COURIER_STATE_INIT = 0xffffffffffffffff,
	COURIER_STATE_IDLE = 0x0,
	COURIER_STATE_AT_BASE = 0x1,
	COURIER_STATE_MOVING = 0x2,
	COURIER_STATE_DELIVERING_ITEMS = 0x3,
	COURIER_STATE_RETURNING_TO_BASE = 0x4,
	COURIER_STATE_DEAD = 0x5,
	COURIER_NUM_STATES = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class ScoutState_t : uint32_t
{
	SCOUT_STATE_INIT = 0xffffffffffffffff,
	SCOUT_STATE_IDLE = 0x0,
	SCOUT_STATE_AT_BASE = 0x1,
	SCOUT_STATE_MOVING = 0x2,
	SCOUT_STATE_DEAD = 0x3,
	SCOUT_NUM_STATES = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x68
enum class DOTASlotType_t : uint32_t
{
	DOTA_LOADOUT_TYPE_INVALID = 0xffffffffffffffff,
	DOTA_LOADOUT_TYPE_WEAPON = 0x0,
	DOTA_LOADOUT_TYPE_OFFHAND_WEAPON = 0x1,
	DOTA_LOADOUT_TYPE_WEAPON2 = 0x2,
	DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2 = 0x3,
	DOTA_LOADOUT_TYPE_HEAD = 0x4,
	DOTA_LOADOUT_TYPE_SHOULDER = 0x5,
	DOTA_LOADOUT_TYPE_ARMS = 0x6,
	DOTA_LOADOUT_TYPE_ARMOR = 0x7,
	DOTA_LOADOUT_TYPE_BELT = 0x8,
	DOTA_LOADOUT_TYPE_NECK = 0x9,
	DOTA_LOADOUT_TYPE_BACK = 0xa,
	DOTA_LOADOUT_TYPE_GLOVES = 0xb,
	DOTA_LOADOUT_TYPE_LEGS = 0xc,
	DOTA_LOADOUT_TYPE_TAIL = 0xd,
	DOTA_LOADOUT_TYPE_MISC = 0xe,
	DOTA_LOADOUT_TYPE_COSTUME = 0xf,
	DOTA_LOADOUT_TYPE_BODY_HEAD = 0x10,
	DOTA_LOADOUT_TYPE_MOUNT = 0x11,
	DOTA_LOADOUT_TYPE_SUMMON = 0x12,
	DOTA_LOADOUT_TYPE_SHAPESHIFT = 0x13,
	DOTA_LOADOUT_TYPE_TAUNT = 0x14,
	DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS = 0x15,
	DOTA_LOADOUT_TYPE_ABILITY_ATTACK = 0x16,
	DOTA_LOADOUT_TYPE_ABILITY1 = 0x17,
	DOTA_LOADOUT_TYPE_ABILITY2 = 0x18,
	DOTA_LOADOUT_TYPE_ABILITY3 = 0x19,
	DOTA_LOADOUT_TYPE_ABILITY4 = 0x1a,
	DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE = 0x1b,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_1 = 0x1c,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_2 = 0x1d,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_3 = 0x1e,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_4 = 0x1f,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_5 = 0x20,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_6 = 0x21,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_7 = 0x22,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_8 = 0x23,
	DOTA_LOADOUT_TYPE_ABILITY_EFFECTS_9 = 0x24,
	DOTA_LOADOUT_TYPE_VOICE = 0x25,
	DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1 = 0x26,
	DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1 = 0x27,
	DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1 = 0x28,
	DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1 = 0x29,
	DOTA_LOADOUT_TYPE_HEAD_PERSONA_1 = 0x2a,
	DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1 = 0x2b,
	DOTA_LOADOUT_TYPE_ARMS_PERSONA_1 = 0x2c,
	DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1 = 0x2d,
	DOTA_LOADOUT_TYPE_BELT_PERSONA_1 = 0x2e,
	DOTA_LOADOUT_TYPE_NECK_PERSONA_1 = 0x2f,
	DOTA_LOADOUT_TYPE_BACK_PERSONA_1 = 0x30,
	DOTA_LOADOUT_TYPE_LEGS_PERSONA_1 = 0x31,
	DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1 = 0x32,
	DOTA_LOADOUT_TYPE_TAIL_PERSONA_1 = 0x33,
	DOTA_LOADOUT_TYPE_MISC_PERSONA_1 = 0x34,
	DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1 = 0x35,
	DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1 = 0x36,
	DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1 = 0x37,
	DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1 = 0x38,
	DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1 = 0x39,
	DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1 = 0x3a,
	DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1 = 0x3b,
	DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1 = 0x3c,
	DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1 = 0x3d,
	DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1 = 0x3e,
	DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1 = 0x3f,
	DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1 = 0x40,
	DOTA_LOADOUT_TYPE_VOICE_PERSONA_1 = 0x41,
	DOTA_LOADOUT_PERSONA_1_START = 0x26,
	DOTA_LOADOUT_PERSONA_1_END = 0x41,
	DOTA_LOADOUT_TYPE_PERSONA_SELECTOR = 0x42,
	DOTA_LOADOUT_TYPE_COURIER = 0x43,
	DOTA_LOADOUT_TYPE_ANNOUNCER = 0x44,
	DOTA_LOADOUT_TYPE_MEGA_KILLS = 0x45,
	DOTA_LOADOUT_TYPE_MUSIC = 0x46,
	DOTA_LOADOUT_TYPE_WARD = 0x47,
	DOTA_LOADOUT_TYPE_HUD_SKIN = 0x48,
	DOTA_LOADOUT_TYPE_LOADING_SCREEN = 0x49,
	DOTA_LOADOUT_TYPE_WEATHER = 0x4a,
	DOTA_LOADOUT_TYPE_HEROIC_STATUE = 0x4b,
	DOTA_LOADOUT_TYPE_MULTIKILL_BANNER = 0x4c,
	DOTA_LOADOUT_TYPE_CURSOR_PACK = 0x4d,
	DOTA_LOADOUT_TYPE_TELEPORT_EFFECT = 0x4e,
	DOTA_LOADOUT_TYPE_BLINK_EFFECT = 0x4f,
	DOTA_LOADOUT_TYPE_EMBLEM = 0x50,
	DOTA_LOADOUT_TYPE_TERRAIN = 0x51,
	DOTA_LOADOUT_TYPE_RADIANT_CREEPS = 0x52,
	DOTA_LOADOUT_TYPE_DIRE_CREEPS = 0x53,
	DOTA_LOADOUT_TYPE_RADIANT_TOWER = 0x54,
	DOTA_LOADOUT_TYPE_DIRE_TOWER = 0x55,
	DOTA_LOADOUT_TYPE_VERSUS_SCREEN = 0x56,
	DOTA_LOADOUT_TYPE_STREAK_EFFECT = 0x57,
	DOTA_LOADOUT_TYPE_KILL_EFFECT = 0x58,
	DOTA_LOADOUT_TYPE_DEATH_EFFECT = 0x59,
	DOTA_LOADOUT_TYPE_HEAD_EFFECT = 0x5a,
	DOTA_LOADOUT_TYPE_MAP_EFFECT = 0x5b,
	DOTA_LOADOUT_TYPE_COURIER_EFFECT = 0x5c,
	DOTA_LOADOUT_TYPE_RADIANT_SIEGE_CREEPS = 0x5d,
	DOTA_LOADOUT_TYPE_DIRE_SIEGE_CREEPS = 0x5e,
	DOTA_LOADOUT_TYPE_ROSHAN = 0x5f,
	DOTA_LOADOUT_TYPE_TORMENTOR = 0x60,
	DOTA_PLAYER_LOADOUT_START = 0x43,
	DOTA_PLAYER_LOADOUT_END = 0x60,
	DOTA_LOADOUT_TYPE_NONE = 0x61,
	DOTA_LOADOUT_TYPE_COUNT = 0x62,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class DOTA_ThreatLevel : uint32_t
{
	DOTA_THREATLEVEL_Ultra = 0x0,
	DOTA_THREATLEVEL_High = 0x1,
	DOTA_THREATLEVEL_Medium = 0x2,
	DOTA_THREATLEVEL_Low = 0x3,
	DOTA_THREATLEVEL_None = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class PingConfirmationIconType : uint32_t
{
	PING_CONFIRMATION_STATE_ICON_TYPE_ATTACK = 0x0,
	PING_CONFIRMATION_STATE_ICON_TYPE_DEFEND = 0x1,
	PING_CONFIRMATION_STATE_ICON_TYPE_SMOKE = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class ObstructionRelationshipClass_t : uint32_t
{
	DOTA_OBSTRUCTION_RELATIONSHIP_NONE = 0x0,
	DOTA_OBSTRUCTION_RELATIONSHIP_BUILDING = 0x1,
	DOTA_OBSTRUCTION_RELATIONSHIP_PLAYER_CONTROLLED = 0x2,
	DOTA_OBSTRUCTION_RELATIONSHIP_NPC = 0x3,
	DOTA_OBSTRUCTION_RELATIONSHIP_LAST = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class quest_hud_types_t : uint32_t
{
	QUEST_HUD_TYPE_DEFAULT = 0x0,
	QUEST_HUD_TYPE_GOLD = 0x1,
	QUEST_HUD_TYPE_ATTACK = 0x2,
	QUEST_HUD_TYPE_DEFEND = 0x3,
	QUEST_NUM_HUD_TYPES = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class quest_text_replace_values_t : uint32_t
{
	QUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE = 0x0,
	QUEST_TEXT_REPLACE_VALUE_TARGET_VALUE = 0x1,
	QUEST_TEXT_REPLACE_VALUE_ROUND = 0x2,
	QUEST_TEXT_REPLACE_VALUE_REWARD = 0x3,
	QUEST_NUM_TEXT_REPLACE_VALUES = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class subquest_text_replace_values_t : uint32_t
{
	SUBQUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE = 0x0,
	SUBQUEST_TEXT_REPLACE_VALUE_TARGET_VALUE = 0x1,
	SUBQUEST_NUM_TEXT_REPLACE_VALUES = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class subquest_player_stat_types_t : uint32_t
{
	SUBQUEST_PLAYER_STAT_GOLD = 0x0,
	SUBQUEST_PLAYER_STAT_LEVEL = 0x1,
	SUBQUEST_PLAYER_STAT_LAST_HITS = 0x2,
	SUBQUEST_PLAYER_STAT_DENIES = 0x3,
	SUBQUEST_NUM_PLAYER_STATS = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xb
enum class DOTASpeechType_t : uint32_t
{
	DOTA_SPEECH_USER_INVALID = 0x0,
	DOTA_SPEECH_USER_SINGLE = 0x1,
	DOTA_SPEECH_USER_TEAM = 0x2,
	DOTA_SPEECH_USER_TEAM_NEARBY = 0x3,
	DOTA_SPEECH_USER_NEARBY = 0x4,
	DOTA_SPEECH_USER_ALL = 0x5,
	DOTA_SPEECH_GOOD_TEAM = 0x6,
	DOTA_SPEECH_BAD_TEAM = 0x7,
	DOTA_SPEECH_SPECTATOR = 0x8,
	DOTA_SPEECH_USER_TEAM_NOSPECTATOR = 0x9,
	DOTA_SPEECH_RECIPIENT_TYPE_MAX = 0xa,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class FowBlockerShape_t : uint32_t
{
	FOW_BLOCKER_SHAPE_RECTANGLE = 0x0,
	FOW_BLOCKER_SHAPE_RECTANGLE_OUTLINE = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class CDOTA_BaseNPC_AghsFort_Watch_Tower__ExitDirection_t : uint32_t
{
	EXIT_DIRECTION_LEFT = 0x0,
	EXIT_DIRECTION_TOP = 0x1,
	EXIT_DIRECTION_RIGHT = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class TowerState_t : uint32_t
{
	TOWER_STATE_ACTIVE = 0x0,
	TOWER_STATE_SELECTED = 0x1,
	TOWER_STATE_INACTIVE = 0x2,
	TOWER_STATE_NO_BEAM_MOVEMENT = 0x3,
	TOWER_STATE_ACTIVE_CHANNELED = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0xb
enum class CavernCrawlItemType_t : uint8_t
{
	CAVERN_CRAWL_ITEM_TYPE_INVALID = 0xff,
	CAVERN_CRAWL_ITEM_TYPE_KEY = 0x0,
	CAVERN_CRAWL_ITEM_TYPE_FLARE = 0x1,
	CAVERN_CRAWL_ITEM_TYPE_SWAP = 0x2,
	CAVERN_CRAWL_ITEM_TYPE_CULLING_BLADE = 0x3,
	CAVERN_CRAWL_ITEM_TYPE_SHOVEL = 0x4,
	CAVERN_CRAWL_ITEM_TYPE_COUNT = 0x5,
	CAVERN_CRAWL_ITEM_TYPE_FIRST_FAKE = 0x80,
	CAVERN_CRAWL_ITEM_TYPE_TREASURE_MAP = 0x80,
	CAVERN_CRAWL_ITEM_TYPE_AFTER_FAKES = 0x81,
	CAVERN_CRAWL_ITEM_TYPE_FAKE_COUNT = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x6
enum class CavernCrawlChallengeType_t : uint8_t
{
	CAVERN_CRAWL_CHALLENGE_TYPE_INVALID = 0x0,
	CAVERN_CRAWL_CHALLENGE_FIRST_CUSTOM_TYPE = 0xa0,
	CAVERN_CRAWL_CHALLENGE_FIRST_VALID_SPECIAL_TYPE = 0xf0,
	CAVERN_CRAWL_CHALLENGE_TYPE_LOCKED_DOOR = 0xf0,
	CAVERN_CRAWL_CHALLENGE_TYPE_CAVE_IN = 0xf1,
	CAVERN_CRAWL_CHALLENGE_LAST_VALID_TYPE_PLUS_ONE = 0xf2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class EPlayerTrackedStatImpl : uint32_t
{
	k_ePlayerTrackedStatImpl_Invalid = 0x0,
	k_ePlayerTrackedStatImpl_Direct = 0x1,
	k_ePlayerTrackedStatImpl_KillEater = 0x2,
	k_ePlayerTrackedStatImpl_CombatQuery = 0x3,
	k_ePlayerTrackedStatImpl_Expression = 0x4,
	k_ePlayerTrackedStatImpl_HeroAdjective = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
enum class ETeamTrackedStatImpl : uint32_t
{
	k_eTeamTrackedStatImpl_Invalid = 0x0,
	k_eTeamTrackedStatImpl_Direct = 0x1,
	k_eTeamTrackedStatImpl_Expression = 0x2,
	k_eTeamTrackedStatImpl_PlayerAggregate = 0x3,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x5
enum class EMatchTrackedStatImpl : uint32_t
{
	k_eMatchTrackedStatImpl_Invalid = 0x0,
	k_eMatchTrackedStatImpl_Direct = 0x1,
	k_eMatchTrackedStatImpl_Expression = 0x2,
	k_eMatchTrackedStatImpl_PlayerAggregate = 0x3,
	k_eMatchTrackedStatImpl_TeamAggregate = 0x4,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class ETrackedStatAggregate : uint32_t
{
	k_eTrackedStatAggregate_Invalid = 0x0,
	k_eTrackedStatAggregate_Sum = 0x1,
	k_eTrackedStatAggregate_Max = 0x2,
	k_eTrackedStatAggregate_Min = 0x3,
	k_eTrackedStatAggregate_Or = 0x4,
	k_eTrackedStatAggregate_And = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x7
enum class EFantasyShapeBehavior : uint32_t
{
	// MPropertySuppressEnumerator
	k_eFantasyShapeBehavior_Invalid = 0x0,
	k_eFantasyShapeBehavior_MinQuality = 0x1,
	k_eFantasyShapeBehavior_AdjBonus = 0x2,
	k_eFantasyShapeBehavior_StealBonus = 0x3,
	k_eFantasyShapeBehavior_OnlyOne = 0x4,
	k_eFantasyShapeBehavior_NeedMultiples = 0x5,
	// MPropertySuppressEnumerator
	k_eFantasyShapeBehavior_COUNT = 0x6,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class EFantasyStatType : uint32_t
{
	k_eFantasyStatType_Player = 0x0,
	k_eFantasyStatType_Team = 0x1,
	k_eFantasyStatType_Game = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2
enum class EFantasyStatMatchMode : uint32_t
{
	k_FantasyStatMatchMode_Any = 0x0,
	k_FantasyStatMatchMode_All = 0x1,
};

// Registered binary: server.dll (project 'server')
// Alignment: 2
// Size: 0xe
enum class EFantasyMutationTarget : uint16_t
{
	k_eFantasyMutationTarget_None = 0x0,
	k_eFantasyMutationTarget_Prefix = 0x1,
	k_eFantasyMutationTarget_Player = 0x2,
	k_eFantasyMutationTarget_Suffix = 0x4,
	k_eFantasyMutationTarget_Rubies = 0x8,
	k_eFantasyMutationTarget_Sapphires = 0x10,
	k_eFantasyMutationTarget_Emeralds = 0x20,
	k_eFantasyMutationTarget_Adjacent = 0x40,
	k_eFantasyMutationTarget_OperationChoice = 0x80,
	k_eFantasyMutationTarget_AllColor = 0x100,
	k_eFantasyMutationTarget_OneColor = 0x200,
	k_eFantasyMutationTarget_FirstColor = 0x400,
	k_eFantasyMutationTarget_LastColor = 0x800,
	k_eFantasyMutationTarget_All = 0x1000,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class EFantasyMutationOperation : uint32_t
{
	k_eFantasyMutationOperation_RollEverything = 0x0,
	k_eFantasyMutationOperation_RollShape = 0x1,
	k_eFantasyMutationOperation_RollQuality = 0x2,
	k_eFantasyMutationOperation_RollStat = 0x3,
	k_eFantasyMutationOperation_IncreaseQuality = 0x4,
	k_eFantasyMutationOperation_DecreaseQuality = 0x5,
	k_eFantasyMutationOperation_IncreaseOneQuality = 0x6,
	k_eFantasyMutationOperation_IncreaseTwoQualitiesDecreaseOne = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class EFantasyOperationTarget : uint32_t
{
	k_eFantasyOperationTarget_None = 0x0,
	k_eFantasyOperationTarget_GemType = 0x1,
	k_eFantasyOperationTarget_Region = 0x2,
	k_eFantasyOperationTarget_SpecificGem = 0x3,
	k_eFantasyOperationTarget_Title = 0x4,
	k_eFantasyOperationTarget_ExtraInput = 0x5,
	k_eFantasyOperationTarget_PlayerDraft = 0x6,
	k_eFantasyOperationTarget_TitleDraft = 0x7,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x6
enum class PetCoopStates_t : uint32_t
{
	COOP_IGNORE = 0x0,
	COOPTELEPORT_START_PERFORMING = 0x1,
	COOPTELEPORT_PLAY_ENDANIM = 0x2,
	COOPTELEPORT_PLAY_EXITANIM = 0x3,
	COOP_WARD_OBSERVER = 0x4,
	COOP_WARD_SENTRY = 0x5,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class CreatureAbilityType : uint32_t
{
	CREATURE_ABILITY_OFFENSIVE = 0x0,
	CREATURE_ABILITY_DEFENSIVE = 0x1,
	CREATURE_ABILITY_ESCAPE = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x3
enum class TrackOrientationType_t : uint32_t
{
	TrackOrientation_Fixed = 0x0,
	TrackOrientation_FacePath = 0x1,
	TrackOrientation_FacePathAngles = 0x2,
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
enum class MLBot_MessageId : uint32_t
{
	mlbot_MatchMetadata = 0x1,
	mlbot_TickBoundary = 0x2,
	mlbot_TeamState_Radiant = 0x3,
	mlbot_TeamState_Radiant_Delta = 0x4,
	mlbot_TeamState_Dire = 0x5,
	mlbot_TeamState_Dire_Delta = 0x6,
	mlbot_PlayerCommand = 0x7,
	mlbot_PlayerOrder = 0x8,
};

struct ChangeAccessorFieldPathIndex_t;
struct CEntityIdentity;
struct CScriptComponent;
struct CGameSceneNode;
struct CNetworkVarChainer;
struct CSkeletonInstance;
struct GameTime_t;
struct CSkillFloat;
struct fogplayerparams_t;
struct audioparams_t;
struct CInButtonState;
struct AmmoIndex_t;
struct CRangeInt;
struct CRangeFloat;
struct CBaseAnimGraphController;
struct ModelConfigHandle_t;
struct CEntityInstance;
struct CGameSceneNodeHandle;
struct CNetworkOriginCellCoordQuantizedVector;
struct HSequence;
struct CModelState;
struct ResponseFollowup;
struct ResponseParams;
struct CRR_Response;
struct CBaseFlex;
struct CResponseCriteriaSet;
struct CSoundEnvelope;
struct CCopyRecipientFilter;
struct CBodyComponent;
struct CNetworkTransmitComponent;
struct GameTick_t;
struct CEntityIOOutput;
struct CNetworkVelocityVector;
struct CCollisionProperty;
struct VelocitySampler;
struct SimpleConstraintSoundProfile;
struct sky3dparams_t;
struct CSkyCamera;
struct ParticleIndex_t;
struct VPhysicsCollisionAttribute_t;
struct AttachmentHandle_t;
struct fogparams_t;
struct CTakeDamageInfo;
struct CTakeDamageResult;
struct CAttributeManager;
struct attrib_definition_index_t;
struct CEconItemView;
struct INextBotReply;
struct CNetworkedSequenceOperation;
struct CSequenceTransitioner2;
struct CBaseAnimatingController;
struct CBaseAnimatingOverlayController;
struct CDOTAGameManager;
struct DOTALevelingAbilityBonus_t;
struct AbilityID_t;
struct item_definition_index_t;
struct DOTASpecialAbility_t;
struct PlayerID_t;
struct CDOTAGameRules;
struct AABB_t;
struct CountdownTimer;
struct itemid_t;
struct DOTA_AssassinMinigameNetworkState;
struct MatchID_t;
struct EngineCountdownTimer;
struct LeagueID_t;
struct CDOTA_Orb;
struct CDOTA_BaseNPC;
struct CDOTA_ArcanaDataEntity_DrowRanger;
struct CDOTA_ArcanaDataEntity_FacelessVoid;
struct CDOTA_ArcanaDataEntity_Razor;
struct CavernCrawlPathID_t;
struct CavernCrawlRoomID_t;
struct CDOTA_Buff;
struct CDOTABaseAbility;
struct PeriodicResourceID_t;
struct GuildID_t;
struct CavernCrawlMapVariant_t;
struct CDOTA_UnitInventory;
struct CDotaEntityFilterFlags;
struct CDOTASpectatorGraphManager;
struct CModifierParams;
struct CavernCrawlRewardType_t;
struct style_index_t;
struct BlessingTypeID_t;
struct BlessingID_t;
struct PingWheelMessageID_t;
struct TrackedStatID_t;
struct TrackedStatKillEaterData_t;
struct TrackedStatCombatQueryData_t;
struct TrackedStatExpressionData_t;
struct TrackedStatHeroAdjectiveData_t;
struct TrackedStatAggregateData_t;
struct FantasyTitle_t;
struct FantasyGemShape_t;
struct FantasyGemQuality_t;
struct FantasyGemSlot_t;
struct FantasyTabletID_t;
struct FantasyOperationID_t;
struct FantasyCraftDataID_t;
struct FantasyPeriod_t;
struct FantasyLeagueID_t;
struct CDOTA_TeamCommander;
struct CDOTABehaviorMoveTo;
struct CPointCamera;
struct AnimationUpdateListHandle_t;
struct CRenderComponent;
struct CHitboxComponent;
struct CGlowProperty;
struct CNetworkViewOffsetVector;
struct CPhysicsShake;
struct CPathKeyFrame;
struct CConstantForceController;
struct CMotorController;
struct ConstraintSoundInfo;
struct constraint_hingeparams_t;
struct dynpitchvol_t;
struct CAttributeList;
struct CSoundPatch;
struct sSpiritInfo;
struct CDOTA_Tree;
struct CPathTrack;
struct CLightComponent;
struct IChoreoServices;
struct PhysicsRagdollPose_t;
struct CFuncTrackTrain;
struct ragdoll_t;
struct CAttributeContainer;
struct CPlayer_WeaponServices;
struct CPlayer_ItemServices;
struct CPlayer_AutoaimServices;
struct CPlayer_ObserverServices;
struct CPlayer_WaterServices;
struct CPlayer_UseServices;
struct CPlayer_FlashlightServices;
struct CPlayer_CameraServices;
struct CPlayer_MovementServices;
struct CAI_Expresser;
struct CDOTA_ModifierManager;
struct CLocomotionBase;
struct IBody;
struct CUnitOrders;
struct CLocalNPCObstructionsCache;
struct CDOTA_CreepKillInfo;
struct CDOTA_BaseNPC_Hero::KillInfo_t;
struct sLoadoutItem;
struct CDOTAMusicProbabilityEntry;

// Registered binary: server.dll (project 'tier2')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
// 
// MPropertyCustomEditor
class CRangeFloat
{
public:
	float m_pValue[2]; // 0x0	
};

// Registered binary: server.dll (project 'tier2')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
// 
// MPropertyCustomEditor
class CRangeInt
{
public:
	int32_t m_pValue[2]; // 0x0	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 4
// Size: 0x18
// Has Trivial Destructor
class Extent
{
public:
	Vector lo; // 0x0	
	Vector hi; // 0xc	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x70
// Has VTable
// Is Abstract
class CNavVolume
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x70]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x98
// Has VTable
class CNavVolumeVector : public CNavVolume
{
private:
	[[maybe_unused]] uint8_t __pad0070[0x8]; // 0x70
public:
	bool m_bHasBeenPreFiltered; // 0x78	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x98
// Has VTable
class CNavVolumeAll : public CNavVolumeVector
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x80
// Has VTable
class CNavVolumeSphere : public CNavVolume
{
public:
	Vector m_vCenter; // 0x70	
	float m_flRadius; // 0x7c	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x88
// Has VTable
class CNavVolumeSphericalShell : public CNavVolumeSphere
{
public:
	float m_flRadiusInner; // 0x80	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 4
// Size: 0x2c
// Has Trivial Destructor
// 
// MVDataRoot
// MGetKV3ClassDefaults
class CNavHullVData
{
public:
	// MPropertyFriendlyName "Enabled"
	// MPropertyDescription "Is this agent enabled for generation? ( will result in 0 nav areas for this agent if not )."
	bool m_bAgentEnabled; // 0x0	
	// MPropertyFriendlyName "Radius"
	// MPropertyDescription "Radius of navigating agent capsule."
	float m_agentRadius; // 0x4	
	// MPropertyFriendlyName "Height"
	// MPropertyDescription "Height of navigating agent capsule."
	float m_agentHeight; // 0x8	
	// MPropertyFriendlyName "Enable Short Height"
	// MPropertyDescription "Enable shorter navigating agent capsules ( e.g. crouch ) in addition to regular height capsules."
	bool m_agentShortHeightEnabled; // 0xc	
private:
	[[maybe_unused]] uint8_t __pad000d[0x3]; // 0xd
public:
	// MPropertyFriendlyName "Short height"
	// MPropertyDescription "Short Height of navigating agent capsules if enabled."
	float m_agentShortHeight; // 0x10	
	// MPropertyFriendlyName "Max Climb"
	// MPropertyDescription "Max vertical offset that the agent simply ignores and walks over."
	float m_agentMaxClimb; // 0x14	
	// MPropertyFriendlyName "Max Slope"
	// MPropertyDescription "Max ground slope to be considered walkable."
	int32_t m_agentMaxSlope; // 0x18	
	// MPropertyFriendlyName "Max Jump Down Distance"
	// MPropertyDescription "Max vertical offset at which to create a jump connection ( possibly one-way )."
	float m_agentMaxJumpDownDist; // 0x1c	
	// MPropertyFriendlyName "Max Horizontal Jump Distance"
	// MPropertyDescription "Max horizontal offset over which to create a jump connection ( actually a parameter into the true threshold function )."
	float m_agentMaxJumpHorizDistBase; // 0x20	
	// MPropertyFriendlyName "Max Jump Up Distance"
	// MPropertyDescription "Max vertical offset at which to make a jump connection two-way."
	float m_agentMaxJumpUpDist; // 0x24	
	// MPropertyFriendlyName "Border Erosion"
	// MPropertyDescription "Border erosion in voxel units ( -1 to use default value based on agent radius )."
	int32_t m_agentBorderErosion; // 0x28	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x18
// 
// MVDataRoot
// MGetKV3ClassDefaults
class CNavHullPresetVData
{
public:
	// MPropertyFriendlyName "Nav Hulls"
	// MPropertyDescription "List of nav hulls belonging to this preset."
	// MPropertyAttributeEditor "VDataChoice( scripts/nav_hulls.vdata )"
	CUtlVector< CUtlString > m_vecNavHulls; // 0x0	
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x8
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x78
// 
// MNetworkVarNames "int32 m_nameStringableIndex"
class CEntityIdentity
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x14]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "entityIdentityNameChanged"
	int32_t m_nameStringableIndex; // 0x14	
	CUtlSymbolLarge m_name; // 0x18	
	CUtlSymbolLarge m_designerName; // 0x20	
private:
	[[maybe_unused]] uint8_t __pad0028[0x8]; // 0x28
public:
	uint32_t m_flags; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0034[0x4]; // 0x34
public:
	// MNetworkDisable
	WorldGroupId_t m_worldGroupId; // 0x38	
	uint32_t m_fDataObjectTypes; // 0x3c	
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	ChangeAccessorFieldPathIndex_t m_PathIndex; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0042[0x16]; // 0x42
public:
	CEntityIdentity* m_pPrev; // 0x58	
	CEntityIdentity* m_pNext; // 0x60	
	CEntityIdentity* m_pPrevByClass; // 0x68	
	CEntityIdentity* m_pNextByClass; // 0x70	
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x30
// Has VTable
// 
// MNetworkVarNames "CEntityIdentity * m_pEntity"
// MNetworkVarNames "CScriptComponent::Storage_t m_CScriptComponent"
class CEntityInstance
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	CUtlSymbolLarge m_iszPrivateVScripts; // 0x8	
	// MNetworkEnable
	// MNetworkPriority "56"
	CEntityIdentity* m_pEntity; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0018[0x10]; // 0x18
public:
	// MNetworkEnable
	// MNetworkDisable
	CScriptComponent* m_CScriptComponent; // 0x28	
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x38
// Has VTable
class CScriptComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x28]; // 0x8
public:
	CUtlSymbolLarge m_scriptClassName; // 0x30	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CScriptComponent")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CScriptComponent")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
class CBodyComponent : public CEntityComponent
{
public:
	// MNetworkDisable
	CGameSceneNode* m_pSceneNode; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0010[0x10]; // 0x10
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x20	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponent")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponent")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x30
// Has Trivial Destructor
// 
// MNetworkVarsAtomic
class CNetworkOriginCellCoordQuantizedVector
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnCellChanged"
	// MNetworkPriority "31"
	// MNetworkSerializer "cellx"
	uint16_t m_cellX; // 0x10	
	// MNetworkEnable
	// MNetworkChangeCallback "OnCellChanged"
	// MNetworkPriority "31"
	// MNetworkSerializer "celly"
	uint16_t m_cellY; // 0x12	
	// MNetworkEnable
	// MNetworkChangeCallback "OnCellChanged"
	// MNetworkPriority "31"
	// MNetworkSerializer "cellz"
	uint16_t m_cellZ; // 0x14	
	// MNetworkEnable
	uint16_t m_nOutsideWorld; // 0x16	
	// MNetworkBitCount "13"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "256.000000"
	// MNetworkEncodeFlags "1"
	// MNetworkChangeCallback "OnCellChanged"
	// MNetworkPriority "31"
	// MNetworkSerializer "posx"
	CNetworkedQuantizedFloat m_vecX; // 0x18	
	// MNetworkBitCount "13"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "256.000000"
	// MNetworkEncodeFlags "1"
	// MNetworkChangeCallback "OnCellChanged"
	// MNetworkPriority "31"
	// MNetworkSerializer "posy"
	CNetworkedQuantizedFloat m_vecY; // 0x20	
	// MNetworkBitCount "13"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "256.000000"
	// MNetworkEncodeFlags "1"
	// MNetworkChangeCallback "OnCellChanged"
	// MNetworkPriority "31"
	// MNetworkSerializer "posz"
	CNetworkedQuantizedFloat m_vecZ; // 0x28	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "CEntityHandle m_hOwner"
// MNetworkVarNames "CUtlStringToken m_name"
class CGameSceneNodeHandle
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	CEntityHandle m_hOwner; // 0x8	
	// MNetworkEnable
	CUtlStringToken m_name; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
// 
// MNetworkVarNames "uint32 m_bvDisabledHitGroups"
class CHitboxComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x1c]; // 0x8
public:
	// MNetworkEnable
	uint32_t m_bvDisabledHitGroups[1]; // 0x24	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CHitboxComponent")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_referenced_but_impl_is_contained(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CHitboxComponent")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedFloatType
struct GameTime_t
{
public:
	float m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_FLOAT(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("GameTime_t")->m_static_fields[0]->m_instance);};
	static GameTime_t &Get_Zero(){return *reinterpret_cast<GameTime_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("GameTime_t")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1b0
// Has VTable
class CNetworkTransmitComponent
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x16c]; // 0x0
public:
	uint8_t m_nTransmitStateOwnedCounter; // 0x16c	
	
	// Static fields:
	static int32_t &Get_s_nDebugStateChange(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CNetworkTransmitComponent")->m_static_fields[0]->m_instance);};
	static int32_t &Get_s_nWatchTransmitEntity(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CNetworkTransmitComponent")->m_static_fields[1]->m_instance);};
	static bool &Get_s_bUseNetworkVars(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CNetworkTransmitComponent")->m_static_fields[2]->m_instance);};
	static bool &Get_s_bNetworkVarPerFieldTracking(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CNetworkTransmitComponent")->m_static_fields[3]->m_instance);};
	static bool &Get_s_bNetworkVarValidate(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CNetworkTransmitComponent")->m_static_fields[4]->m_instance);};
	static bool &Get_s_bUsingPVSConvars(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CNetworkTransmitComponent")->m_static_fields[5]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb8
// Has VTable
class CRenderComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x8]; // 0x8
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0038[0x18]; // 0x38
public:
	bool m_bIsRenderingWithViewModels; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	uint32_t m_nSplitscreenFlags; // 0x54	
private:
	[[maybe_unused]] uint8_t __pad0058[0x8]; // 0x58
public:
	bool m_bEnableRendering; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0061[0x4f]; // 0x61
public:
	bool m_bInterpolationReadyToDraw; // 0xb0	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CRenderComponent")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CRenderComponent")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct AnimationUpdateListHandle_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("AnimationUpdateListHandle_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CAnimEventListenerBase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x18]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CAnimEventListener : public CAnimEventListenerBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
class CAnimEventQueueListener : public CAnimEventListenerBase
{
private:
	[[maybe_unused]] uint8_t __pad0018[0x8]; // 0x18
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
class CAnimGraphTagRef
{
public:
	int32_t m_nTagIndex; // 0x0	
	CGlobalSymbol m_tagName; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CBuoyancyHelper
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x18]; // 0x0
public:
	float m_flFluidDensity; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
// 
// MPropertyCustomEditor
class CSkillFloat
{
public:
	float m_pValue[4]; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
// 
// MPropertyCustomEditor
class CSkillInt
{
public:
	int32_t m_pValue[4]; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
// Has Trivial Destructor
// 
// MGetKV3ClassDefaults
class CSkillDamage
{
public:
	// MPropertyDescription "Damage Dealt (in the case of NPC vs NPC damage, medium skill is used)"
	CSkillFloat m_flDamage; // 0x0	
	// MPropertyDescription "If specified, the damage used to compute physics forces. Otherwise normal damage is used."
	float m_flPhysicsForceDamage; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
// 
// MPropertyCustomEditor
class CRemapFloat
{
public:
	float m_pValue[4]; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa0
// Has VTable
class CScriptUniformRandomStream
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	HSCRIPT m_hScriptScope; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0010[0x8c]; // 0x10
public:
	int32_t m_nInitialSeed; // 0x9c	
	
	// Static fields:
	static CUtlVector< CScriptUniformRandomStream* > &Get_sm_UniformStreams(){return *reinterpret_cast<CUtlVector< CScriptUniformRandomStream* >*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CScriptUniformRandomStream")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
class CBreakableStageHelper
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	int32_t m_nCurrentStage; // 0x8	
	int32_t m_nStageCount; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// 
// MGetKV3ClassDefaults
struct CommandToolCommand_t
{
public:
	bool m_bEnabled; // 0x0	
	bool m_bOpened; // 0x1	
private:
	[[maybe_unused]] uint8_t __pad0002[0x2]; // 0x2
public:
	uint32_t m_InternalId; // 0x4	
	CUtlString m_ShortName; // 0x8	
	CommandExecMode_t m_ExecMode; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0014[0x4]; // 0x14
public:
	CUtlString m_SpawnGroup; // 0x18	
	float m_PeriodicExecDelay; // 0x20	
	CommandEntitySpecType_t m_SpecType; // 0x24	
	CUtlString m_EntitySpec; // 0x28	
	CUtlString m_Commands; // 0x30	
	DebugOverlayBits_t m_SetDebugBits; // 0x38	
	DebugOverlayBits_t m_ClearDebugBits; // 0x40	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
class CPlayerPawnComponent
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
class CPlayerControllerComponent
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// Is Abstract
class CPlayer_AutoaimServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "Vector localSound"
// MNetworkVarNames "int32 soundscapeIndex"
// MNetworkVarNames "uint8 localBits"
// MNetworkVarNames "int soundscapeEntityListIndex"
// MNetworkVarNames "uint32 soundEventHash"
struct audioparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector localSound[8]; // 0x8	
	// MNetworkEnable
	int32_t soundscapeIndex; // 0x68	
	// MNetworkEnable
	uint8_t localBits; // 0x6c	
private:
	[[maybe_unused]] uint8_t __pad006d[0x3]; // 0x6d
public:
	// MNetworkEnable
	int32_t soundscapeEntityListIndex; // 0x70	
	// MNetworkEnable
	uint32_t soundEventHash; // 0x74	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "CHandle< CFogController> m_hCtrl"
struct fogplayerparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkUserGroup "PlayerFogController"
	CHandle< CFogController > m_hCtrl; // 0x8	
	float m_flTransitionTime; // 0xc	
	Color m_OldColor; // 0x10	
	float m_flOldStart; // 0x14	
	float m_flOldEnd; // 0x18	
	float m_flOldMaxDensity; // 0x1c	
	float m_flOldHDRColorScale; // 0x20	
	float m_flOldFarZ; // 0x24	
	Color m_NewColor; // 0x28	
	float m_flNewStart; // 0x2c	
	float m_flNewEnd; // 0x30	
	float m_flNewMaxDensity; // 0x34	
	float m_flNewHDRColorScale; // 0x38	
	float m_flNewFarZ; // 0x3c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
class CPlayer_FlashlightServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
class CPlayer_ItemServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CInButtonState
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	uint64_t m_pButtonStates[3]; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d0
// Has VTable
// 
// MNetworkVarNames "ButtonBitMask_t m_nToggleButtonDownMask"
// MNetworkVarNames "float32 m_flMaxspeed"
// MNetworkVarNames "float32 m_arrForceSubtickMoveWhen"
class CPlayer_MovementServices : public CPlayerPawnComponent
{
public:
	int32_t m_nImpulse; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0044[0x4]; // 0x44
public:
	CInButtonState m_nButtons; // 0x48	
	uint64_t m_nQueuedButtonDownMask; // 0x68	
	uint64_t m_nQueuedButtonChangeMask; // 0x70	
	uint64_t m_nButtonDoublePressed; // 0x78	
	uint32_t m_pButtonPressedCmdNumber[64]; // 0x80	
	uint32_t m_nLastCommandNumberProcessed; // 0x180	
private:
	[[maybe_unused]] uint8_t __pad0184[0x4]; // 0x184
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint64_t m_nToggleButtonDownMask; // 0x188	
	// MNetworkEnable
	// MNetworkBitCount "12"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "2048.000000"
	// MNetworkEncodeFlags "1"
	float m_flMaxspeed; // 0x190	
	// MNetworkEnable
	float m_arrForceSubtickMoveWhen[4]; // 0x194	
	float m_flForwardMove; // 0x1a4	
	float m_flLeftMove; // 0x1a8	
	float m_flUpMove; // 0x1ac	
	Vector m_vecLastMovementImpulses; // 0x1b0	
	QAngle m_vecOldViewAngles; // 0x1bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// 
// MNetworkVarNames "uint8 m_iObserverMode"
// MNetworkVarNames "CHandle< CBaseEntity> m_hObserverTarget"
class CPlayer_ObserverServices : public CPlayerPawnComponent
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnObserverModeChanged"
	uint8_t m_iObserverMode; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0041[0x3]; // 0x41
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnObserverTargetChanged"
	CHandle< CBaseEntity > m_hObserverTarget; // 0x44	
	ObserverMode_t m_iObserverLastMode; // 0x48	
	bool m_bForcedObserverMode; // 0x4c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
class CPlayer_UseServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
class CPlayer_WaterServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb0
// Has VTable
// 
// MNetworkVarNames "CHandle< CBasePlayerWeapon > m_hMyWeapons"
// MNetworkVarNames "CHandle< CBasePlayerWeapon> m_hActiveWeapon"
// MNetworkVarNames "CHandle< CBasePlayerWeapon> m_hLastWeapon"
// MNetworkVarNames "uint16 m_iAmmo"
class CPlayer_WeaponServices : public CPlayerPawnComponent
{
public:
	bool m_bAllowSwitchToNoWeapon; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0041[0x7]; // 0x41
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBasePlayerWeapon > > m_hMyWeapons; // 0x48	
	// MNetworkEnable
	CHandle< CBasePlayerWeapon > m_hActiveWeapon; // 0x60	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	CHandle< CBasePlayerWeapon > m_hLastWeapon; // 0x64	
	// MNetworkEnable
	uint16_t m_iAmmo[32]; // 0x68	
	bool m_bPreventWeaponPickup; // 0xa8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct AmmoIndex_t
{
public:
	int8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("AmmoIndex_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// 
// MGetKV3ClassDefaults
struct AmmoTypeInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	int32_t m_nMaxCarry; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0014[0x8]; // 0x14
public:
	CRangeInt m_nSplashSize; // 0x1c	
	AmmoFlags_t m_nFlags; // 0x24	
	float m_flMass; // 0x28	
	CRangeFloat m_flSpeed; // 0x2c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Is Abstract
class CAnimGraphControllerBase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x18]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x150
// Has VTable
// 
// MNetworkVarNames "CGameSceneNodeHandle m_hParent"
// MNetworkVarNames "CNetworkOriginCellCoordQuantizedVector m_vecOrigin"
// MNetworkVarNames "QAngle m_angRotation"
// MNetworkVarNames "float m_flScale"
// MNetworkVarNames "CUtlStringToken m_name"
// MNetworkVarNames "CUtlStringToken m_hierarchyAttachName"
class CGameSceneNode
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkDisable
	CTransform m_nodeToWorld; // 0x10	
	// MNetworkDisable
	CEntityInstance* m_pOwner; // 0x30	
	// MNetworkDisable
	CGameSceneNode* m_pParent; // 0x38	
	// MNetworkDisable
	CGameSceneNode* m_pChild; // 0x40	
	// MNetworkDisable
	CGameSceneNode* m_pNextSibling; // 0x48	
private:
	[[maybe_unused]] uint8_t __pad0050[0x20]; // 0x50
public:
	// MNetworkEnable
	// MNetworkSerializer "gameSceneNode"
	// MNetworkChangeCallback "gameSceneNodeHierarchyParentChanged"
	// MNetworkPriority "32"
	// MNetworkVarEmbeddedFieldOffsetDelta "8"
	CGameSceneNodeHandle m_hParent; // 0x70	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Origin"
	// MNetworkChangeCallback "gameSceneNodeLocalOriginChanged"
	CNetworkOriginCellCoordQuantizedVector m_vecOrigin; // 0x80	
private:
	[[maybe_unused]] uint8_t __pad00b0[0x8]; // 0xb0
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkSerializer "gameSceneNodeStepSimulationAnglesSerializer"
	// MNetworkChangeCallback "gameSceneNodeLocalAnglesChanged"
	QAngle m_angRotation; // 0xb8	
	// MNetworkEnable
	// MNetworkChangeCallback "gameSceneNodeLocalScaleChanged"
	// MNetworkPriority "32"
	float m_flScale; // 0xc4	
	// MNetworkDisable
	Vector m_vecAbsOrigin; // 0xc8	
	// MNetworkDisable
	QAngle m_angAbsRotation; // 0xd4	
	// MNetworkDisable
	float m_flAbsScale; // 0xe0	
	// MNetworkDisable
	int16_t m_nParentAttachmentOrBone; // 0xe4	
	// MNetworkDisable
	bool m_bDebugAbsOriginChanges; // 0xe6	
	// MNetworkDisable
	bool m_bDormant; // 0xe7	
	// MNetworkDisable
	bool m_bForceParentToBeNetworked; // 0xe8	
	struct 
	{
		// MNetworkDisable
		uint8_t m_bDirtyHierarchy: 1; 		
		// MNetworkDisable
		uint8_t m_bDirtyBoneMergeInfo: 1; 		
		// MNetworkDisable
		uint8_t m_bNetworkedPositionChanged: 1; 		
		// MNetworkDisable
		uint8_t m_bNetworkedAnglesChanged: 1; 		
		// MNetworkDisable
		uint8_t m_bNetworkedScaleChanged: 1; 		
		// MNetworkDisable
		uint8_t m_bWillBeCallingPostDataUpdate: 1; 		
		// MNetworkDisable
		uint8_t m_bNotifyBoneTransformsChanged: 1; 		
		// MNetworkDisable
		uint8_t m_bBoneMergeFlex: 1; 		
		// MNetworkDisable
		uint8_t m_nLatchAbsOrigin: 2; 		
		// MNetworkDisable
		uint8_t m_bDirtyBoneMergeBoneToRoot: 1; 		
		uint16_t __pad0: 13;
	}; // 24 bits
	// MNetworkDisable
	uint8_t m_nHierarchicalDepth; // 0xeb	
	// MNetworkDisable
	uint8_t m_nHierarchyType; // 0xec	
	// MNetworkDisable
	uint8_t m_nDoNotSetAnimTimeInInvalidatePhysicsCount; // 0xed	
private:
	[[maybe_unused]] uint8_t __pad00ee[0x2]; // 0xee
public:
	// MNetworkEnable
	CUtlStringToken m_name; // 0xf0	
private:
	[[maybe_unused]] uint8_t __pad00f4[0x3c]; // 0xf4
public:
	// MNetworkEnable
	// MNetworkChangeCallback "gameSceneNodeHierarchyAttachmentChanged"
	CUtlStringToken m_hierarchyAttachName; // 0x130	
	// MNetworkDisable
	float m_flZOffset; // 0x134	
	// MNetworkDisable
	Vector m_vRenderOrigin; // 0x138	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "CUtlStringToken m_ID"
// MNetworkVarNames "Vector4D m_Values"
struct EntityRenderAttribute_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CUtlStringToken m_ID; // 0x30	
	// MNetworkEnable
	Vector4D m_Values; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct ModelConfigHandle_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("ModelConfigHandle_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// 
// MNetworkVarNames "ModelConfigHandle_t m_Handle"
// MNetworkVarNames "string_t m_Name"
// MNetworkVarNames "CHandle< CBaseModelEntity > m_AssociatedEntities"
// MNetworkVarNames "string_t m_AssociatedEntityNames"
struct ActiveModelConfig_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkEnable
	ModelConfigHandle_t m_Handle; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad002c[0x4]; // 0x2c
public:
	// MNetworkEnable
	CUtlSymbolLarge m_Name; // 0x30	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseModelEntity > > m_AssociatedEntities; // 0x38	
	// MNetworkEnable
	CNetworkUtlVectorBase< CUtlSymbolLarge > m_AssociatedEntityNames; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x230
// Has VTable
// 
// MNetworkVarNames "HModelStrong m_hModel"
// MNetworkVarNames "bool m_bClientClothCreationSuppressed"
// MNetworkVarNames "MeshGroupMask_t m_MeshGroupMask"
// MNetworkVarNames "int8 m_nIdealMotionType"
class CModelState
{
private:
	[[maybe_unused]] uint8_t __pad0000[0xa0]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonModelChanged"
	CStrongHandle< InfoForResourceTypeCModel > m_hModel; // 0xa0	
	// MNetworkDisable
	CUtlSymbolLarge m_ModelName; // 0xa8	
private:
	[[maybe_unused]] uint8_t __pad00b0[0x38]; // 0xb0
public:
	// MNetworkEnable
	bool m_bClientClothCreationSuppressed; // 0xe8	
private:
	[[maybe_unused]] uint8_t __pad00e9[0x97]; // 0xe9
public:
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonMeshGroupMaskChanged"
	uint64_t m_MeshGroupMask; // 0x180	
private:
	[[maybe_unused]] uint8_t __pad0188[0x9a]; // 0x188
public:
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonMotionTypeChanged"
	int8_t m_nIdealMotionType; // 0x222	
	// MNetworkDisable
	int8_t m_nForceLOD; // 0x223	
	// MNetworkDisable
	int8_t m_nClothUpdateFlags; // 0x224	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x3f0
// Has VTable
// 
// MNetworkVarNames "CModelState m_modelState"
// MNetworkVarNames "bool m_bIsAnimationEnabled"
// MNetworkVarNames "bool m_bUseParentRenderBounds"
// MNetworkVarNames "CUtlStringToken m_materialGroup"
// MNetworkVarNames "uint8 m_nHitboxSet"
class CSkeletonInstance : public CGameSceneNode
{
private:
	[[maybe_unused]] uint8_t __pad0150[0x10]; // 0x150
public:
	// MNetworkEnable
	CModelState m_modelState; // 0x160	
	// MNetworkEnable
	bool m_bIsAnimationEnabled; // 0x390	
	// MNetworkEnable
	bool m_bUseParentRenderBounds; // 0x391	
	// MNetworkDisable
	bool m_bDisableSolidCollisionsForHierarchy; // 0x392	
	struct 
	{
		// MNetworkDisable
		uint8_t m_bDirtyMotionType: 1; 		
		// MNetworkDisable
		uint8_t m_bIsGeneratingLatchedParentSpaceState: 1; 		
		uint16_t __pad1: 14;
	}; // 16 bits
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonMaterialGroupChanged"
	CUtlStringToken m_materialGroup; // 0x394	
	// MNetworkEnable
	uint8_t m_nHitboxSet; // 0x398	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x28
// Has Trivial Destructor
// 
// MNetworkVarsAtomic
class CNetworkOriginQuantizedVector
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkBitCount "19"
	// MNetworkMinValue "-16384.000000"
	// MNetworkMaxValue "16384.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkOriginQuantizedVector"
	CNetworkedQuantizedFloat m_vecX; // 0x10	
	// MNetworkBitCount "19"
	// MNetworkMinValue "-16384.000000"
	// MNetworkMaxValue "16384.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkOriginQuantizedVector"
	CNetworkedQuantizedFloat m_vecY; // 0x18	
	// MNetworkBitCount "19"
	// MNetworkMinValue "-16384.000000"
	// MNetworkMaxValue "16384.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkOriginQuantizedVector"
	CNetworkedQuantizedFloat m_vecZ; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x28
// Has Trivial Destructor
// 
// MNetworkVarsAtomic
class CNetworkVelocityVector
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkBitCount "18"
	// MNetworkMinValue "-4096.000000"
	// MNetworkMaxValue "4096.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkVelocityVector"
	CNetworkedQuantizedFloat m_vecX; // 0x10	
	// MNetworkBitCount "18"
	// MNetworkMinValue "-4096.000000"
	// MNetworkMaxValue "4096.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkVelocityVector"
	CNetworkedQuantizedFloat m_vecY; // 0x18	
	// MNetworkBitCount "18"
	// MNetworkMinValue "-4096.000000"
	// MNetworkMaxValue "4096.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkVelocityVector"
	CNetworkedQuantizedFloat m_vecZ; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x28
// Has Trivial Destructor
// 
// MNetworkVarsAtomic
class CNetworkViewOffsetVector
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkBitCount "10"
	// MNetworkMinValue "-64.000000"
	// MNetworkMaxValue "64.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkViewOffsetVector"
	CNetworkedQuantizedFloat m_vecX; // 0x10	
	// MNetworkBitCount "10"
	// MNetworkMinValue "-64.000000"
	// MNetworkMaxValue "64.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkViewOffsetVector"
	CNetworkedQuantizedFloat m_vecY; // 0x18	
	// MNetworkBitCount "20"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "128.000000"
	// MNetworkEncodeFlags "4"
	// MNetworkChangeCallback "CNetworkViewOffsetVector"
	CNetworkedQuantizedFloat m_vecZ; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d0
// Has VTable
// 
// MNetworkVarNames "Color m_Color"
// MNetworkVarNames "Color m_SecondaryColor"
// MNetworkVarNames "float m_flBrightness"
// MNetworkVarNames "float m_flBrightnessScale"
// MNetworkVarNames "float m_flBrightnessMult"
// MNetworkVarNames "float m_flRange"
// MNetworkVarNames "float m_flFalloff"
// MNetworkVarNames "float m_flAttenuation0"
// MNetworkVarNames "float m_flAttenuation1"
// MNetworkVarNames "float m_flAttenuation2"
// MNetworkVarNames "float m_flTheta"
// MNetworkVarNames "float m_flPhi"
// MNetworkVarNames "HRenderTextureStrong m_hLightCookie"
// MNetworkVarNames "int m_nCascades"
// MNetworkVarNames "int m_nCastShadows"
// MNetworkVarNames "int m_nShadowWidth"
// MNetworkVarNames "int m_nShadowHeight"
// MNetworkVarNames "bool m_bRenderDiffuse"
// MNetworkVarNames "int m_nRenderSpecular"
// MNetworkVarNames "bool m_bRenderTransmissive"
// MNetworkVarNames "float m_flOrthoLightWidth"
// MNetworkVarNames "float m_flOrthoLightHeight"
// MNetworkVarNames "int m_nStyle"
// MNetworkVarNames "CUtlString m_Pattern"
// MNetworkVarNames "int m_nCascadeRenderStaticObjects"
// MNetworkVarNames "float m_flShadowCascadeCrossFade"
// MNetworkVarNames "float m_flShadowCascadeDistanceFade"
// MNetworkVarNames "float m_flShadowCascadeDistance0"
// MNetworkVarNames "float m_flShadowCascadeDistance1"
// MNetworkVarNames "float m_flShadowCascadeDistance2"
// MNetworkVarNames "float m_flShadowCascadeDistance3"
// MNetworkVarNames "int m_nShadowCascadeResolution0"
// MNetworkVarNames "int m_nShadowCascadeResolution1"
// MNetworkVarNames "int m_nShadowCascadeResolution2"
// MNetworkVarNames "int m_nShadowCascadeResolution3"
// MNetworkVarNames "bool m_bUsesBakedShadowing"
// MNetworkVarNames "int m_nShadowPriority"
// MNetworkVarNames "int m_nBakedShadowIndex"
// MNetworkVarNames "bool m_bRenderToCubemaps"
// MNetworkVarNames "string_t m_LightGroups"
// MNetworkVarNames "int m_nDirectLight"
// MNetworkVarNames "int m_nIndirectLight"
// MNetworkVarNames "float m_flFadeMinDist"
// MNetworkVarNames "float m_flFadeMaxDist"
// MNetworkVarNames "float m_flShadowFadeMinDist"
// MNetworkVarNames "float m_flShadowFadeMaxDist"
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bFlicker"
// MNetworkVarNames "bool m_bPrecomputedFieldsValid"
// MNetworkVarNames "Vector m_vPrecomputedBoundsMins"
// MNetworkVarNames "Vector m_vPrecomputedBoundsMaxs"
// MNetworkVarNames "Vector m_vPrecomputedOBBOrigin"
// MNetworkVarNames "QAngle m_vPrecomputedOBBAngles"
// MNetworkVarNames "Vector m_vPrecomputedOBBExtent"
// MNetworkVarNames "float m_flPrecomputedMaxRange"
// MNetworkVarNames "int m_nFogLightingMode"
// MNetworkVarNames "float m_flFogContributionStength"
// MNetworkVarNames "float m_flNearClipPlane"
// MNetworkVarNames "Color m_SkyColor"
// MNetworkVarNames "float m_flSkyIntensity"
// MNetworkVarNames "Color m_SkyAmbientBounce"
// MNetworkVarNames "bool m_bUseSecondaryColor"
// MNetworkVarNames "bool m_bMixedShadows"
// MNetworkVarNames "GameTime_t m_flLightStyleStartTime"
// MNetworkVarNames "float m_flCapsuleLength"
// MNetworkVarNames "float m_flMinRoughness"
class CLightComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x40]; // 0x8
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x48	
private:
	[[maybe_unused]] uint8_t __pad0070[0x15]; // 0x70
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	Color m_Color; // 0x85	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	Color m_SecondaryColor; // 0x89	
private:
	[[maybe_unused]] uint8_t __pad008d[0x3]; // 0x8d
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flBrightness; // 0x90	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flBrightnessScale; // 0x94	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flBrightnessMult; // 0x98	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flRange; // 0x9c	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flFalloff; // 0xa0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flAttenuation0; // 0xa4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flAttenuation1; // 0xa8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flAttenuation2; // 0xac	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flTheta; // 0xb0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flPhi; // 0xb4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightCookie; // 0xb8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nCascades; // 0xc0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nCastShadows; // 0xc4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowWidth; // 0xc8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowHeight; // 0xcc	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bRenderDiffuse; // 0xd0	
private:
	[[maybe_unused]] uint8_t __pad00d1[0x3]; // 0xd1
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nRenderSpecular; // 0xd4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bRenderTransmissive; // 0xd8	
private:
	[[maybe_unused]] uint8_t __pad00d9[0x3]; // 0xd9
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flOrthoLightWidth; // 0xdc	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flOrthoLightHeight; // 0xe0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nStyle; // 0xe4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	CUtlString m_Pattern; // 0xe8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nCascadeRenderStaticObjects; // 0xf0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeCrossFade; // 0xf4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistanceFade; // 0xf8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance0; // 0xfc	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance1; // 0x100	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance2; // 0x104	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance3; // 0x108	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution0; // 0x10c	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution1; // 0x110	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution2; // 0x114	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution3; // 0x118	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	// MNetworkAlias "m_bUsesIndexedBakedLighting"
	bool m_bUsesBakedShadowing; // 0x11c	
private:
	[[maybe_unused]] uint8_t __pad011d[0x3]; // 0x11d
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowPriority; // 0x120	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nBakedShadowIndex; // 0x124	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bRenderToCubemaps; // 0x128	
private:
	[[maybe_unused]] uint8_t __pad0129[0x7]; // 0x129
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	CUtlSymbolLarge m_LightGroups; // 0x130	
	// MNetworkEnable
	int32_t m_nDirectLight; // 0x138	
	// MNetworkEnable
	int32_t m_nIndirectLight; // 0x13c	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flFadeMinDist; // 0x140	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flFadeMaxDist; // 0x144	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowFadeMinDist; // 0x148	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowFadeMaxDist; // 0x14c	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bEnabled; // 0x150	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bFlicker; // 0x151	
	// MNetworkEnable
	bool m_bPrecomputedFieldsValid; // 0x152	
private:
	[[maybe_unused]] uint8_t __pad0153[0x1]; // 0x153
public:
	// MNetworkEnable
	Vector m_vPrecomputedBoundsMins; // 0x154	
	// MNetworkEnable
	Vector m_vPrecomputedBoundsMaxs; // 0x160	
	// MNetworkEnable
	Vector m_vPrecomputedOBBOrigin; // 0x16c	
	// MNetworkEnable
	QAngle m_vPrecomputedOBBAngles; // 0x178	
	// MNetworkEnable
	Vector m_vPrecomputedOBBExtent; // 0x184	
	// MNetworkEnable
	float m_flPrecomputedMaxRange; // 0x190	
	// MNetworkEnable
	int32_t m_nFogLightingMode; // 0x194	
	// MNetworkEnable
	float m_flFogContributionStength; // 0x198	
	// MNetworkEnable
	float m_flNearClipPlane; // 0x19c	
	// MNetworkEnable
	Color m_SkyColor; // 0x1a0	
	// MNetworkEnable
	float m_flSkyIntensity; // 0x1a4	
	// MNetworkEnable
	Color m_SkyAmbientBounce; // 0x1a8	
	// MNetworkEnable
	bool m_bUseSecondaryColor; // 0x1ac	
	// MNetworkEnable
	// MNetworkChangeCallback "MixedShadowsChanged"
	bool m_bMixedShadows; // 0x1ad	
private:
	[[maybe_unused]] uint8_t __pad01ae[0x2]; // 0x1ae
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	GameTime_t m_flLightStyleStartTime; // 0x1b0	
	// MNetworkEnable
	float m_flCapsuleLength; // 0x1b4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flMinRoughness; // 0x1b8	
private:
	[[maybe_unused]] uint8_t __pad01bc[0xc]; // 0x1bc
public:
	bool m_bPvsModifyEntity; // 0x1c8	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CLightComponent")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CLightComponent")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct GameTick_t
{
public:
	int32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("GameTick_t")->m_static_fields[0]->m_instance);};
	static GameTick_t &Get_Zero(){return *reinterpret_cast<GameTick_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("GameTick_t")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x470
// Has VTable
// 
// MNetworkVarNames "CSkeletonInstance m_skeletonInstance"
class CBodyComponentSkeletonInstance : public CBodyComponent
{
public:
	// MNetworkEnable
	CSkeletonInstance m_skeletonInstance; // 0x50	
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x440	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentSkeletonInstance")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentSkeletonInstance")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d0
// Has VTable
// 
// MNetworkVarNames "CGameSceneNode m_sceneNode"
class CBodyComponentPoint : public CBodyComponent
{
public:
	// MNetworkEnable
	CGameSceneNode m_sceneNode; // 0x50	
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x1a0	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentPoint")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentPoint")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Is Abstract
class IChoreoServices
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// Static fields:
	static uint32_t &Get_ms_uSequenceId(){return *reinterpret_cast<uint32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("IChoreoServices")->m_static_fields[0]->m_instance);};
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x220
// Has VTable
// 
// MNetworkVarNames "float32 m_flFallVelocity"
// MNetworkVarNames "bool m_bInCrouch"
// MNetworkVarNames "uint32 m_nCrouchState"
// MNetworkVarNames "GameTime_t m_flCrouchTransitionStartTime"
// MNetworkVarNames "bool m_bDucked"
// MNetworkVarNames "bool m_bDucking"
// MNetworkVarNames "bool m_bInDuckJump"
class CPlayer_MovementServices_Humanoid : public CPlayer_MovementServices
{
public:
	float m_flStepSoundTime; // 0x1d0	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	// MNetworkBitCount "17"
	// MNetworkMinValue "-4096.000000"
	// MNetworkMaxValue "4096.000000"
	// MNetworkEncodeFlags "4"
	float m_flFallVelocity; // 0x1d4	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bInCrouch; // 0x1d8	
private:
	[[maybe_unused]] uint8_t __pad01d9[0x3]; // 0x1d9
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint32_t m_nCrouchState; // 0x1dc	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	GameTime_t m_flCrouchTransitionStartTime; // 0x1e0	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bDucked; // 0x1e4	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bDucking; // 0x1e5	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bInDuckJump; // 0x1e6	
private:
	[[maybe_unused]] uint8_t __pad01e7[0x1]; // 0x1e7
public:
	Vector m_groundNormal; // 0x1e8	
	float m_flSurfaceFriction; // 0x1f4	
	CUtlStringToken m_surfaceProps; // 0x1f8	
private:
	[[maybe_unused]] uint8_t __pad01fc[0xc]; // 0x1fc
public:
	int32_t m_nStepside; // 0x208	
	int32_t m_iTargetVolume; // 0x20c	
	Vector m_vecSmoothedVelocity; // 0x210	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Is Abstract
// Has Trivial Destructor
class ISkeletonAnimationController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Is Abstract
class CSkeletonAnimationController : public ISkeletonAnimationController
{
public:
	// MNetworkDisable
	CSkeletonInstance* m_pSkeletonInstance; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "HSequence m_hSequence"
// MNetworkVarNames "float32 m_flPrevCycle"
// MNetworkVarNames "float32 m_flCycle"
class CNetworkedSequenceOperation
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkSerializer "minusone"
	// MNetworkChangeCallback "sequenceOpSequenceChanged"
	// MNetworkPriority "32"
	HSequence m_hSequence; // 0x8	
	// MNetworkEnable
	// MNetworkBitCount "15"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1.000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkUserGroup "m_flCycle"
	float m_flPrevCycle; // 0xc	
	// MNetworkEnable
	// MNetworkBitCount "15"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1.000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkUserGroup "m_flCycle"
	// MNetworkChangeCallback "sequenceOpCycleChanged"
	float m_flCycle; // 0x10	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1.000000"
	// MNetworkEncodeFlags "0"
	CNetworkedQuantizedFloat m_flWeight; // 0x14	
	// MNetworkDisable
	bool m_bSequenceChangeNetworked; // 0x1c	
	// MNetworkDisable
	bool m_bDiscontinuity; // 0x1d	
private:
	[[maybe_unused]] uint8_t __pad001e[0x2]; // 0x1e
public:
	// MNetworkDisable
	float m_flPrevCycleFromDiscontinuity; // 0x20	
	// MNetworkDisable
	float m_flPrevCycleForAnimEventDetection; // 0x24	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a0
// Has VTable
class CBodyComponentBaseModelEntity : public CBodyComponentSkeletonInstance
{
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x470	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseModelEntity")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseModelEntity")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x108
// Has VTable
// 
// MNetworkOverride "m_baseLayer.m_hSequence"
// MNetworkVarNames "CNetworkedSequenceOperation m_baseLayer"
// MNetworkVarNames "bool m_bClientSideAnimation"
// MNetworkVarNames "int m_nNewSequenceParity"
// MNetworkVarNames "int m_nResetEventsParity"
// MNetworkVarNames "AnimLoopMode_t m_nAnimLoopMode"
class CBaseAnimGraphController : public CSkeletonAnimationController
{
private:
	[[maybe_unused]] uint8_t __pad0010[0x8]; // 0x10
public:
	// MNetworkEnable
	// MNetworkChangeCallback "baseAnimBaseLayerChangedCompat"
	CNetworkedSequenceOperation m_baseLayer; // 0x18	
	// MNetworkDisable
	bool m_bSequenceFinished; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0041[0x3]; // 0x41
public:
	// MNetworkDisable
	float m_flLastEventCycle; // 0x44	
	// MNetworkDisable
	float m_flLastEventAnimTime; // 0x48	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "5.000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkChangeCallback "playbackRateChangedCompat"
	CNetworkedQuantizedFloat m_flPlaybackRate; // 0x4c	
	// MNetworkDisable
	float m_flPrevAnimTime; // 0x54	
	// MNetworkEnable
	// MNetworkChangeCallback "clientSideAnimationChangedCompat"
	bool m_bClientSideAnimation; // 0x58	
	// MNetworkDisable
	bool m_bNetworkedAnimationInputsChanged; // 0x59	
private:
	[[maybe_unused]] uint8_t __pad005a[0x2]; // 0x5a
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkChangeCallback "clientSideAnimCycleResetCompat"
	int32_t m_nNewSequenceParity; // 0x5c	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nResetEventsParity; // 0x60	
	// MNetworkEnable
	AnimLoopMode_t m_nAnimLoopMode; // 0x64	
private:
	[[maybe_unused]] uint8_t __pad0068[0x9c]; // 0x68
public:
	// MNetworkDisable
	AnimationUpdateListHandle_t m_hAnimationUpdate; // 0x104	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "GameTime_t m_timestamp"
// MNetworkVarNames "WorldGroupId_t m_nWorldGroupId"
class IntervalTimer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	GameTime_t m_timestamp; // 0x8	
	// MNetworkEnable
	WorldGroupId_t m_nWorldGroupId; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "float32 m_duration"
// MNetworkVarNames "GameTime_t m_timestamp"
// MNetworkVarNames "float32 m_timescale"
// MNetworkVarNames "WorldGroupId_t m_nWorldGroupId"
class CountdownTimer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	float m_duration; // 0x8	
	// MNetworkEnable
	GameTime_t m_timestamp; // 0xc	
	// MNetworkEnable
	float m_timescale; // 0x10	
	// MNetworkEnable
	WorldGroupId_t m_nWorldGroupId; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "float32 m_duration"
// MNetworkVarNames "float32 m_timestamp"
// MNetworkVarNames "float32 m_timescale"
class EngineCountdownTimer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	float m_duration; // 0x8	
	// MNetworkEnable
	float m_timestamp; // 0xc	
	// MNetworkEnable
	float m_timescale; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x228
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "float m_flValues"
// MNetworkVarNames "int m_nValueCounts"
// MNetworkVarNames "int m_nBucketCount"
// MNetworkVarNames "float m_flInterval"
// MNetworkVarNames "float m_flFinalValue"
// MNetworkVarNames "TimelineCompression_t m_nCompressionType"
// MNetworkVarNames "bool m_bStopped"
class CTimeline : public IntervalTimer
{
public:
	// MNetworkEnable
	float m_flValues[64]; // 0x10	
	// MNetworkEnable
	int32_t m_nValueCounts[64]; // 0x110	
	// MNetworkEnable
	int32_t m_nBucketCount; // 0x210	
	// MNetworkEnable
	float m_flInterval; // 0x214	
	// MNetworkEnable
	float m_flFinalValue; // 0x218	
	// MNetworkEnable
	TimelineCompression_t m_nCompressionType; // 0x21c	
	// MNetworkEnable
	bool m_bStopped; // 0x220	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d8
// Has VTable
// 
// MNetworkVarNames "uint32 m_PredNetBoolVariables"
// MNetworkVarNames "byte m_PredNetByteVariables"
// MNetworkVarNames "uint16 m_PredNetUInt16Variables"
// MNetworkVarNames "int32 m_PredNetIntVariables"
// MNetworkVarNames "uint32 m_PredNetUInt32Variables"
// MNetworkVarNames "uint64 m_PredNetUInt64Variables"
// MNetworkVarNames "float m_PredNetFloatVariables"
// MNetworkVarNames "Vector m_PredNetVectorVariables"
// MNetworkVarNames "Quaternion m_PredNetQuaternionVariables"
// MNetworkVarNames "uint32 m_OwnerOnlyPredNetBoolVariables"
// MNetworkVarNames "byte m_OwnerOnlyPredNetByteVariables"
// MNetworkVarNames "uint16 m_OwnerOnlyPredNetUInt16Variables"
// MNetworkVarNames "int32 m_OwnerOnlyPredNetIntVariables"
// MNetworkVarNames "uint32 m_OwnerOnlyPredNetUInt32Variables"
// MNetworkVarNames "uint64 m_OwnerOnlyPredNetUInt64Variables"
// MNetworkVarNames "float m_OwnerOnlyPredNetFloatVariables"
// MNetworkVarNames "Vector m_OwnerOnlyPredNetVectorVariables"
// MNetworkVarNames "Quaternion m_OwnerOnlyPredNetQuaternionVariables"
// MNetworkVarNames "int m_nBoolVariablesCount"
// MNetworkVarNames "int m_nOwnerOnlyBoolVariablesCount"
// MNetworkVarNames "int m_nRandomSeedOffset"
// MNetworkVarNames "float m_flLastTeleportTime"
class CAnimGraphNetworkedVariables
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetBoolVarChanged"
	// MNetworkAlias "m_PredBoolVariables"
	CNetworkUtlVectorBase< uint32 > m_PredNetBoolVariables; // 0x8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetByteVarChanged"
	// MNetworkAlias "m_PredByteVariables"
	CNetworkUtlVectorBase< uint8 > m_PredNetByteVariables; // 0x20	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetUInt16VarChanged"
	// MNetworkAlias "m_PredUInt16Variables"
	CNetworkUtlVectorBase< uint16 > m_PredNetUInt16Variables; // 0x38	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetIntVarChanged"
	// MNetworkAlias "m_PredIntVariables"
	CNetworkUtlVectorBase< int32 > m_PredNetIntVariables; // 0x50	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetUInt32VarChanged"
	// MNetworkAlias "m_PredUInt32Variables"
	CNetworkUtlVectorBase< uint32 > m_PredNetUInt32Variables; // 0x68	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetUInt64VarChanged"
	// MNetworkAlias "m_PredUInt64Variables"
	CNetworkUtlVectorBase< uint64 > m_PredNetUInt64Variables; // 0x80	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetFloatVarChanged"
	// MNetworkAlias "m_PredFloatVariables"
	CNetworkUtlVectorBase< float32 > m_PredNetFloatVariables; // 0x98	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetVectorVarChanged"
	// MNetworkAlias "m_PredVectorVariables"
	CNetworkUtlVectorBase< Vector > m_PredNetVectorVariables; // 0xb0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetQuaternionVarChanged"
	// MNetworkAlias "m_PredQuaternionVariables"
	CNetworkUtlVectorBase< Quaternion > m_PredNetQuaternionVariables; // 0xc8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOBoolVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetBoolVariables"
	CNetworkUtlVectorBase< uint32 > m_OwnerOnlyPredNetBoolVariables; // 0xe0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOByteVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetByteVariables"
	CNetworkUtlVectorBase< uint8 > m_OwnerOnlyPredNetByteVariables; // 0xf8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOUInt16VarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetUInt16Variables"
	CNetworkUtlVectorBase< uint16 > m_OwnerOnlyPredNetUInt16Variables; // 0x110	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOIntVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetIntVariables"
	CNetworkUtlVectorBase< int32 > m_OwnerOnlyPredNetIntVariables; // 0x128	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOUInt32VarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetUInt32Variables"
	CNetworkUtlVectorBase< uint32 > m_OwnerOnlyPredNetUInt32Variables; // 0x140	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOUInt64VarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetUInt64Variables"
	CNetworkUtlVectorBase< uint64 > m_OwnerOnlyPredNetUInt64Variables; // 0x158	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOFloatVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetFloatVariables"
	CNetworkUtlVectorBase< float32 > m_OwnerOnlyPredNetFloatVariables; // 0x170	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOVectorVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetVectorVariables"
	CNetworkUtlVectorBase< Vector > m_OwnerOnlyPredNetVectorVariables; // 0x188	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOQuaternionVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetQuaternionVariables"
	CNetworkUtlVectorBase< Quaternion > m_OwnerOnlyPredNetQuaternionVariables; // 0x1a0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	int32_t m_nBoolVariablesCount; // 0x1b8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	int32_t m_nOwnerOnlyBoolVariablesCount; // 0x1bc	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	int32_t m_nRandomSeedOffset; // 0x1c0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	float m_flLastTeleportTime; // 0x1c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Destructor
// 
// MPropertyCustomFGDType
class CFootstepTableHandle
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x31
// Has Trivial Destructor
class ResponseFollowup
{
public:
	char* followup_concept; // 0x0	
	char* followup_contexts; // 0x8	
	float followup_delay; // 0x10	
	char* followup_target; // 0x14	
	char* followup_entityiotarget; // 0x1c	
	char* followup_entityioinput; // 0x24	
	float followup_entityiodelay; // 0x2c	
	bool bFired; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
class ResponseParams
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	int16_t odds; // 0x10	
	int16_t flags; // 0x12	
private:
	[[maybe_unused]] uint8_t __pad0014[0x4]; // 0x14
public:
	ResponseFollowup* m_pFollowup; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// Has VTable
class CResponseCriteriaSet
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	int32_t m_nNumPrefixedContexts; // 0x28	
	bool m_bOverrideOnAppend; // 0x2c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1e8
class CRR_Response
{
public:
	uint8_t m_Type; // 0x0	
	char m_szResponseName[192]; // 0x1	
	char m_szMatchingRule[128]; // 0xc1	
private:
	[[maybe_unused]] uint8_t __pad0141[0x7]; // 0x141
public:
	ResponseParams m_Params; // 0x148	
	float m_fMatchScore; // 0x168	
private:
	[[maybe_unused]] uint8_t __pad016c[0x4]; // 0x16c
public:
	char* m_szSpeakerContext; // 0x170	
	char* m_szWorldContext; // 0x178	
	ResponseFollowup m_Followup; // 0x180	
private:
	[[maybe_unused]] uint8_t __pad01b1[0x7]; // 0x1b1
public:
	CUtlVector< CUtlSymbol > m_pchCriteriaNames; // 0x1b8	
	CUtlVector< char* > m_pchCriteriaValues; // 0x1d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1f0
struct ConceptHistory_t
{
public:
	float timeSpoken; // 0x0	
	CRR_Response m_response; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
class CAI_Expresser
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x38]; // 0x0
public:
	GameTime_t m_flStopTalkTime; // 0x38	
	GameTime_t m_flStopTalkTimeWithoutDelay; // 0x3c	
	GameTime_t m_flBlockedTalkTime; // 0x40	
	int32_t m_voicePitch; // 0x44	
	GameTime_t m_flLastTimeAcceptedSpeak; // 0x48	
	bool m_bAllowSpeakingInterrupts; // 0x4c	
	bool m_bConsiderSceneInvolvementAsSpeech; // 0x4d	
private:
	[[maybe_unused]] uint8_t __pad004e[0x2]; // 0x4e
public:
	int32_t m_nLastSpokenPriority; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0054[0x4]; // 0x54
public:
	CBaseFlex* m_pOuter; // 0x58	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// Has VTable
class CResponseQueue
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x50]; // 0x0
public:
	CUtlVector< CAI_Expresser* > m_ExpresserTargets; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x240
// Has VTable
class CResponseQueue::CDeferredResponse
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	CResponseCriteriaSet m_contexts; // 0x10	
	float m_fDispatchTime; // 0x40	
	CHandle< CBaseEntity > m_hIssuer; // 0x44	
private:
	[[maybe_unused]] uint8_t __pad0048[0x8]; // 0x48
public:
	CRR_Response m_response; // 0x50	
	bool m_bResponseValid; // 0x238	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x70
// Has VTable
class CAI_ExpresserWithFollowup : public CAI_Expresser
{
public:
	ResponseFollowup* m_pPostponedFollowup; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
class CMultiplayer_Expresser : public CAI_ExpresserWithFollowup
{
public:
	bool m_bAllowMultipleScenes; // 0x70	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
class CCommentarySystem
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x11]; // 0x0
public:
	bool m_bCommentaryConvarsChanging; // 0x11	
	bool m_bCommentaryEnabledMidGame; // 0x12	
private:
	[[maybe_unused]] uint8_t __pad0013[0x1]; // 0x13
public:
	GameTime_t m_flNextTeleportTime; // 0x14	
	int32_t m_iTeleportStage; // 0x18	
	bool m_bCheatState; // 0x1c	
	bool m_bIsFirstSpawnGroupToLoad; // 0x1d	
private:
	[[maybe_unused]] uint8_t __pad001e[0x1a]; // 0x1e
public:
	CHandle< CPointCommentaryNode > m_hCurrentNode; // 0x38	
	CHandle< CPointCommentaryNode > m_hActiveCommentaryNode; // 0x3c	
	CHandle< CPointCommentaryNode > m_hLastCommentaryNode; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0044[0x4]; // 0x44
public:
	CUtlVector< CHandle< CPointCommentaryNode > > m_vecNodes; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Has Trivial Destructor
class CPhysicsShake
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	Vector m_force; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x60
// Has Trivial Destructor
// 
// MGetKV3ClassDefaults
class CGameScriptedMoveData
{
public:
	Vector m_vDest; // 0x0	
	Vector m_vSrc; // 0xc	
	QAngle m_angSrc; // 0x18	
	QAngle m_angDst; // 0x24	
	QAngle m_angCurrent; // 0x30	
	float m_flAngRate; // 0x3c	
	float m_flDuration; // 0x40	
	GameTime_t m_flStartTime; // 0x44	
	MoveType_t m_nPrevMoveType; // 0x48	
	bool m_bActive; // 0x49	
	bool m_bTeleportOnEnd; // 0x4a	
	bool m_bEndOnDestinationReached; // 0x4b	
	bool m_bIgnoreRotation; // 0x4c	
private:
	[[maybe_unused]] uint8_t __pad004d[0x3]; // 0x4d
public:
	ScriptedMoveType_t m_nType; // 0x50	
	bool m_bSuccess; // 0x54	
private:
	[[maybe_unused]] uint8_t __pad0055[0x3]; // 0x55
public:
	ForcedCrouchState_t m_nForcedCrouchState; // 0x58	
	bool m_bIgnoreCollisions; // 0x5c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
class CGameChoreoServices : public IChoreoServices
{
public:
	CHandle< CBaseAnimGraph > m_hOwner; // 0x8	
	CHandle< CScriptedSequence > m_hScriptedSequence; // 0xc	
	IChoreoServices::ScriptState_t m_scriptState; // 0x10	
	IChoreoServices::ChoreoState_t m_choreoState; // 0x14	
	GameTime_t m_flTimeStartedState; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0xa
// Has Trivial Destructor
struct HullFlags_t
{
public:
	bool m_bHull_Human; // 0x0	
	bool m_bHull_SmallCentered; // 0x1	
	bool m_bHull_WideHuman; // 0x2	
	bool m_bHull_Tiny; // 0x3	
	bool m_bHull_Medium; // 0x4	
	bool m_bHull_TinyCentered; // 0x5	
	bool m_bHull_Large; // 0x6	
	bool m_bHull_LargeCentered; // 0x7	
	bool m_bHull_MediumTall; // 0x8	
	bool m_bHull_Small; // 0x9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// Has Trivial Destructor
class CConstantForceController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0xc]; // 0x0
public:
	Vector m_linear; // 0xc	
	RotationVector m_angular; // 0x18	
	Vector m_linearSave; // 0x24	
	RotationVector m_angularSave; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CMotorController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	float m_speed; // 0x8	
	float m_maxTorque; // 0xc	
	Vector m_axis; // 0x10	
	float m_inertiaFactor; // 0x1c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
class CSoundEnvelope
{
public:
	float m_current; // 0x0	
	float m_target; // 0x4	
	float m_rate; // 0x8	
	bool m_forceupdate; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
class CCopyRecipientFilter
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	int32_t m_Flags; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad000c[0x4]; // 0xc
public:
	CUtlVector< CPlayerSlot > m_Recipients; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x90
// Has VTable
class CSoundPatch
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CSoundEnvelope m_pitch; // 0x8	
	CSoundEnvelope m_volume; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0028[0x8]; // 0x28
public:
	float m_shutdownTime; // 0x30	
	float m_flLastTime; // 0x34	
	CUtlSymbolLarge m_iszSoundScriptName; // 0x38	
	CHandle< CBaseEntity > m_hEnt; // 0x40	
	CEntityIndex m_soundEntityIndex; // 0x44	
	Vector m_soundOrigin; // 0x48	
	int32_t m_isPlaying; // 0x54	
	CCopyRecipientFilter m_Filter; // 0x58	
	float m_flCloseCaptionDuration; // 0x80	
	bool m_bUpdatedSoundOrigin; // 0x84	
private:
	[[maybe_unused]] uint8_t __pad0085[0x3]; // 0x85
public:
	CUtlSymbolLarge m_iszClassName; // 0x88	
	
	// Static fields:
	static int32_t &Get_g_SoundPatchCount(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CSoundPatch")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
class CTouchExpansionComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x40]; // 0x8
public:
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CTouchExpansionComponent")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_referenced_but_impl_is_contained(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CTouchExpansionComponent")->m_static_fields[1]->m_instance);};
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x64
// Has Trivial Constructor
// Has Trivial Destructor
struct dynpitchvol_base_t
{
public:
	int32_t preset; // 0x0	
	int32_t pitchrun; // 0x4	
	int32_t pitchstart; // 0x8	
	int32_t spinup; // 0xc	
	int32_t spindown; // 0x10	
	int32_t volrun; // 0x14	
	int32_t volstart; // 0x18	
	int32_t fadein; // 0x1c	
	int32_t fadeout; // 0x20	
	int32_t lfotype; // 0x24	
	int32_t lforate; // 0x28	
	int32_t lfomodpitch; // 0x2c	
	int32_t lfomodvol; // 0x30	
	int32_t cspinup; // 0x34	
	int32_t cspincount; // 0x38	
	int32_t pitch; // 0x3c	
	int32_t spinupsav; // 0x40	
	int32_t spindownsav; // 0x44	
	int32_t pitchfrac; // 0x48	
	int32_t vol; // 0x4c	
	int32_t fadeinsav; // 0x50	
	int32_t fadeoutsav; // 0x54	
	int32_t volfrac; // 0x58	
	int32_t lfofrac; // 0x5c	
	int32_t lfomult; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x64
// Has Trivial Constructor
// Has Trivial Destructor
struct dynpitchvol_t : public dynpitchvol_base_t
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
struct ResponseContext_t
{
public:
	CUtlSymbolLarge m_iszName; // 0x0	
	CUtlSymbolLarge m_iszValue; // 0x8	
	GameTime_t m_fExpirationTime; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
struct Relationship_t
{
public:
	Disposition_t disposition; // 0x0	
	int32_t priority; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_bClientSideRagdoll"
// MNetworkExcludeByName "m_iMaxHealth"
// MNetworkExcludeByUserGroup "Water"
// MNetworkExcludeByUserGroup "Player"
// MNetworkExcludeByUserGroup "LocalPlayerExclusive"
// MNetworkExcludeByName "m_spawnflags"
// MNetworkExcludeByName "m_bTakesDamage"
// MNetworkExcludeByName "m_nTakeDamageFlags"
// MNetworkVarNames "CBodyComponent::Storage_t m_CBodyComponent"
// MNetworkVarNames "int32 m_iHealth"
// MNetworkVarNames "int32 m_iMaxHealth"
// MNetworkVarNames "uint8 m_lifeState"
// MNetworkVarNames "DamageOptions_t m_takedamage"
// MNetworkVarNames "bool m_bTakesDamage"
// MNetworkVarNames "TakeDamageFlags_t m_nTakeDamageFlags"
// MNetworkVarNames "MoveCollide_t m_MoveCollide"
// MNetworkVarNames "MoveType_t m_MoveType"
// MNetworkVarNames "EntitySubclassID_t m_nSubclassID"
// MNetworkVarNames "float32 m_flAnimTime"
// MNetworkVarNames "float32 m_flSimulationTime"
// MNetworkVarNames "GameTime_t m_flCreateTime"
// MNetworkVarNames "bool m_bClientSideRagdoll"
// MNetworkVarNames "uint8 m_ubInterpolationFrame"
// MNetworkVarNames "uint8 m_iTeamNum"
// MNetworkVarNames "uint32 m_spawnflags"
// MNetworkVarNames "GameTick_t m_nNextThinkTick"
// MNetworkVarNames "uint32 m_fFlags"
// MNetworkVarNames "CNetworkVelocityVector m_vecVelocity"
// MNetworkVarNames "CHandle< CBaseEntity> m_hEffectEntity"
// MNetworkVarNames "CHandle< CBaseEntity> m_hOwnerEntity"
// MNetworkVarNames "uint32 m_fEffects"
// MNetworkVarNames "CHandle< CBaseEntity> m_hGroundEntity"
// MNetworkVarNames "float32 m_flFriction"
// MNetworkVarNames "float32 m_flElasticity"
// MNetworkVarNames "float32 m_flGravityScale"
// MNetworkVarNames "float32 m_flTimeScale"
// MNetworkVarNames "float m_flWaterLevel"
// MNetworkVarNames "bool m_bSimulatedEveryTick"
// MNetworkVarNames "bool m_bAnimatedEveryTick"
// MNetworkVarNames "GameTime_t m_flNavIgnoreUntilTime"
// MPulseProvideFeatureTag
// MPulseLibraryBindings
class CBaseEntity : public CEntityInstance
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "CBodyComponent"
	// MNetworkAlias "CBodyComponent"
	// MNetworkTypeAlias "CBodyComponent"
	// MNetworkPriority "48"
	CBodyComponent* m_CBodyComponent; // 0x30	
	CNetworkTransmitComponent m_NetworkTransmitComponent; // 0x38	
private:
	[[maybe_unused]] uint8_t __pad01e8[0x40]; // 0x1e8
public:
	CUtlVector< thinkfunc_t > m_aThinkFunctions; // 0x228	
	int32_t m_iCurrentThinkContext; // 0x240	
	GameTick_t m_nLastThinkTick; // 0x244	
private:
	[[maybe_unused]] uint8_t __pad0248[0x8]; // 0x248
public:
	CBitVec< 64 > m_isSteadyState; // 0x250	
	float m_lastNetworkChange; // 0x258	
private:
	[[maybe_unused]] uint8_t __pad025c[0xc]; // 0x25c
public:
	CUtlVector< ResponseContext_t > m_ResponseContexts; // 0x268	
	CUtlSymbolLarge m_iszResponseContext; // 0x280	
private:
	[[maybe_unused]] uint8_t __pad0288[0x20]; // 0x288
public:
	// MNetworkEnable
	// MNetworkSerializer "ClampHealth"
	// MNetworkUserGroup "Player"
	// MNetworkPriority "32"
	int32_t m_iHealth; // 0x2a8	
	// MNetworkEnable
	int32_t m_iMaxHealth; // 0x2ac	
	// MNetworkEnable
	// MNetworkUserGroup "Player"
	// MNetworkPriority "32"
	uint8_t m_lifeState; // 0x2b0	
private:
	[[maybe_unused]] uint8_t __pad02b1[0x3]; // 0x2b1
public:
	float m_flDamageAccumulator; // 0x2b4	
	// MNetworkEnable
	DamageOptions_t m_takedamage; // 0x2b8	
	// MNetworkEnable
	bool m_bTakesDamage; // 0x2b9	
private:
	[[maybe_unused]] uint8_t __pad02ba[0x2]; // 0x2ba
public:
	// MNetworkEnable
	TakeDamageFlags_t m_nTakeDamageFlags; // 0x2bc	
private:
	[[maybe_unused]] uint8_t __pad02c0[0x1]; // 0x2c0
public:
	// MNetworkEnable
	MoveCollide_t m_MoveCollide; // 0x2c1	
	// MNetworkEnable
	MoveType_t m_MoveType; // 0x2c2	
	uint8_t m_nWaterTouch; // 0x2c3	
	uint8_t m_nSlimeTouch; // 0x2c4	
	bool m_bRestoreInHierarchy; // 0x2c5	
private:
	[[maybe_unused]] uint8_t __pad02c6[0x2]; // 0x2c6
public:
	CUtlSymbolLarge m_target; // 0x2c8	
	float m_flMoveDoneTime; // 0x2d0	
	CHandle< CBaseFilter > m_hDamageFilter; // 0x2d4	
	CUtlSymbolLarge m_iszDamageFilterName; // 0x2d8	
	// MNetworkEnable
	// MNetworkSendProxyRecipientsFilter
	CUtlStringToken m_nSubclassID; // 0x2e0	
private:
	[[maybe_unused]] uint8_t __pad02e4[0xc]; // 0x2e4
public:
	// MNetworkEnable
	// MNetworkPriority "0"
	// MNetworkSerializer "animTimeSerializer"
	// MNetworkSendProxyRecipientsFilter
	float m_flAnimTime; // 0x2f0	
	// MNetworkEnable
	// MNetworkPriority "1"
	// MNetworkSerializer "simulationTimeSerializer"
	// MNetworkSendProxyRecipientsFilter
	float m_flSimulationTime; // 0x2f4	
	// MNetworkEnable
	GameTime_t m_flCreateTime; // 0x2f8	
	// MNetworkEnable
	bool m_bClientSideRagdoll; // 0x2fc	
	// MNetworkEnable
	uint8_t m_ubInterpolationFrame; // 0x2fd	
private:
	[[maybe_unused]] uint8_t __pad02fe[0x2]; // 0x2fe
public:
	Vector m_vPrevVPhysicsUpdatePos; // 0x300	
	// MNetworkEnable
	uint8_t m_iTeamNum; // 0x30c	
private:
	[[maybe_unused]] uint8_t __pad030d[0x3]; // 0x30d
public:
	CUtlSymbolLarge m_iGlobalname; // 0x310	
	int32_t m_iSentToClients; // 0x318	
	float m_flSpeed; // 0x31c	
	CUtlString m_sUniqueHammerID; // 0x320	
	// MNetworkEnable
	uint32_t m_spawnflags; // 0x328	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	GameTick_t m_nNextThinkTick; // 0x32c	
	int32_t m_nSimulationTick; // 0x330	
private:
	[[maybe_unused]] uint8_t __pad0334[0x4]; // 0x334
public:
	CEntityIOOutput m_OnKilled; // 0x338	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Player"
	uint32_t m_fFlags; // 0x360	
	Vector m_vecAbsVelocity; // 0x364	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	// MNetworkPriority "32"
	CNetworkVelocityVector m_vecVelocity; // 0x370	
private:
	[[maybe_unused]] uint8_t __pad0398[0x8]; // 0x398
public:
	int32_t m_nPushEnumCount; // 0x3a0	
private:
	[[maybe_unused]] uint8_t __pad03a4[0x4]; // 0x3a4
public:
	CCollisionProperty* m_pCollision; // 0x3a8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEffectEntity; // 0x3b0	
	// MNetworkEnable
	// MNetworkPriority "32"
	CHandle< CBaseEntity > m_hOwnerEntity; // 0x3b4	
	// MNetworkEnable
	// MNetworkChangeCallback "OnEffectsChanged"
	uint32_t m_fEffects; // 0x3b8	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Player"
	CHandle< CBaseEntity > m_hGroundEntity; // 0x3bc	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "4.000000"
	// MNetworkEncodeFlags "1"
	// MNetworkUserGroup "LocalPlayerExclusive"
	float m_flFriction; // 0x3c0	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	float m_flElasticity; // 0x3c4	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	float m_flGravityScale; // 0x3c8	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	float m_flTimeScale; // 0x3cc	
	// MNetworkEnable
	// MNetworkUserGroup "Water"
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1.000000"
	// MNetworkEncodeFlags "8"
	float m_flWaterLevel; // 0x3d0	
	// MNetworkEnable
	bool m_bSimulatedEveryTick; // 0x3d4	
	// MNetworkEnable
	bool m_bAnimatedEveryTick; // 0x3d5	
	bool m_bDisableLowViolence; // 0x3d6	
	uint8_t m_nWaterType; // 0x3d7	
	int32_t m_iEFlags; // 0x3d8	
private:
	[[maybe_unused]] uint8_t __pad03dc[0x4]; // 0x3dc
public:
	CEntityIOOutput m_OnUser1; // 0x3e0	
	CEntityIOOutput m_OnUser2; // 0x408	
	CEntityIOOutput m_OnUser3; // 0x430	
	CEntityIOOutput m_OnUser4; // 0x458	
	int32_t m_iInitialTeamNum; // 0x480	
	// MNetworkEnable
	GameTime_t m_flNavIgnoreUntilTime; // 0x484	
	QAngle m_vecAngVelocity; // 0x488	
	bool m_bNetworkQuantizeOriginAndAngles; // 0x494	
	bool m_bLagCompensate; // 0x495	
private:
	[[maybe_unused]] uint8_t __pad0496[0x2]; // 0x496
public:
	float m_flOverriddenFriction; // 0x498	
	CHandle< CBaseEntity > m_pBlocker; // 0x49c	
	float m_flLocalTime; // 0x4a0	
	float m_flVPhysicsUpdateLocalTime; // 0x4a4	
	
	// Static fields:
	static Relationship_t** &Get_sm_DefaultRelationship(){return *reinterpret_cast<Relationship_t***>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[0]->m_instance);};
	static bool &Get_sm_bAccurateTriggerBboxChecks(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[1]->m_instance);};
	static bool &Get_sm_bDisableTouchFuncs(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[2]->m_instance);};
	static bool &Get_m_bAllowPrecache(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[3]->m_instance);};
	static bool &Get_s_bAbsQueriesValid(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[4]->m_instance);};
	static bool &Get_s_bPreventingSetAnimRunAnimEvents(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[5]->m_instance);};
	static int32_t &Get_m_nPredictionRandomSeed(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[6]->m_instance);};
	static int32_t &Get_m_nPredictionRandomSeedServer(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[7]->m_instance);};
	static CBasePlayerController* &Get_m_pPredictionPlayerController(){return *reinterpret_cast<CBasePlayerController**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[8]->m_instance);};
	static bool &Get_sm_bDatadescValidating(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->m_static_fields[9]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CServerOnlyEntity : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CServerOnlyPointEntity : public CServerOnlyEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicalEntity : public CServerOnlyEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByUserGroup "Origin"
// MNetworkVarNames "float32 m_flFadeInDuration"
// MNetworkVarNames "float32 m_flFadeOutDuration"
// MNetworkVarNames "float32 m_flMaxWeight"
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bMaster"
// MNetworkVarNames "bool m_bClientSide"
// MNetworkVarNames "bool m_bExclusive"
// MNetworkVarNames "float32 m_MinFalloff"
// MNetworkVarNames "float32 m_MaxFalloff"
// MNetworkVarNames "float32 m_flCurWeight"
// MNetworkVarNames "char m_netlookupFilename"
class CColorCorrection : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flFadeInDuration; // 0x4a8	
	// MNetworkEnable
	float m_flFadeOutDuration; // 0x4ac	
	float m_flStartFadeInWeight; // 0x4b0	
	float m_flStartFadeOutWeight; // 0x4b4	
	GameTime_t m_flTimeStartFadeIn; // 0x4b8	
	GameTime_t m_flTimeStartFadeOut; // 0x4bc	
	// MNetworkEnable
	float m_flMaxWeight; // 0x4c0	
	bool m_bStartDisabled; // 0x4c4	
	// MNetworkEnable
	bool m_bEnabled; // 0x4c5	
	// MNetworkEnable
	bool m_bMaster; // 0x4c6	
	// MNetworkEnable
	bool m_bClientSide; // 0x4c7	
	// MNetworkEnable
	bool m_bExclusive; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x3]; // 0x4c9
public:
	// MNetworkEnable
	float m_MinFalloff; // 0x4cc	
	// MNetworkEnable
	float m_MaxFalloff; // 0x4d0	
	// MNetworkEnable
	float m_flCurWeight; // 0x4d4	
	// MNetworkEnable
	char m_netlookupFilename[512]; // 0x4d8	
	CUtlSymbolLarge m_lookupFilename; // 0x6d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBaseFilter : public CLogicalEntity
{
public:
	bool m_bNegated; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CEntityIOOutput m_OnPass; // 0x4b0	
	CEntityIOOutput m_OnFail; // 0x4d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterMultiple : public CBaseFilter
{
public:
	filter_t m_nFilterType; // 0x500	
private:
	[[maybe_unused]] uint8_t __pad0504[0x4]; // 0x504
public:
	CUtlSymbolLarge m_iFilterName[10]; // 0x508	
	CHandle< CBaseEntity > m_hFilter[10]; // 0x558	
	int32_t m_nFilterCount; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterProximity : public CBaseFilter
{
public:
	float m_flRadius; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterLOS : public CBaseFilter
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterClass : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterClass; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x840
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoData : public CServerOnlyEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
struct locksound_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlSymbolLarge sLockedSound; // 0x8	
	CUtlSymbolLarge sUnlockedSound; // 0x10	
	GameTime_t flwaitSound; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicBranch : public CLogicalEntity
{
public:
	bool m_bInValue; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CUtlVector< CHandle< CBaseEntity > > m_Listeners; // 0x4b0	
	CEntityIOOutput m_OnTrue; // 0x4c8	
	CEntityIOOutput m_OnFalse; // 0x4f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicDistanceCheck : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszEntityA; // 0x4a8	
	CUtlSymbolLarge m_iszEntityB; // 0x4b0	
	float m_flZone1Distance; // 0x4b8	
	float m_flZone2Distance; // 0x4bc	
	CEntityIOOutput m_InZone1; // 0x4c0	
	CEntityIOOutput m_InZone2; // 0x4e8	
	CEntityIOOutput m_InZone3; // 0x510	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
// Has Trivial Destructor
class VelocitySampler
{
public:
	Vector m_prevSample; // 0x0	
	GameTime_t m_fPrevSampleTime; // 0xc	
	float m_fIdealSampleRate; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class SimpleConstraintSoundProfile
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	SimpleConstraintSoundProfile::SimpleConstraintsSoundProfileKeypoints_t eKeypoints; // 0x8	
	float m_keyPoints[2]; // 0xc	
	float m_reversalSoundThresholds[3]; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x88
// Has VTable
class ConstraintSoundInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	VelocitySampler m_vSampler; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad001c[0x4]; // 0x1c
public:
	SimpleConstraintSoundProfile m_soundProfile; // 0x20	
	Vector m_forwardAxis; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad004c[0x4]; // 0x4c
public:
	CUtlSymbolLarge m_iszTravelSoundFwd; // 0x50	
	CUtlSymbolLarge m_iszTravelSoundBack; // 0x58	
private:
	[[maybe_unused]] uint8_t __pad0060[0x8]; // 0x60
public:
	CUtlSymbolLarge m_iszReversalSounds[3]; // 0x68	
	bool m_bPlayTravelSound; // 0x80	
	bool m_bPlayReversalSound; // 0x81	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CSmoothFunc
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	float m_flSmoothAmplitude; // 0x8	
	float m_flSmoothBias; // 0xc	
	float m_flSmoothDuration; // 0x10	
	float m_flSmoothRemainingTime; // 0x14	
	int32_t m_nSmoothDir; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
struct magnetted_objects_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CHandle< CBaseEntity > hEntity; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointPrefab : public CServerOnlyPointEntity
{
public:
	CUtlSymbolLarge m_targetMapName; // 0x4a8	
	CUtlSymbolLarge m_forceWorldGroupID; // 0x4b0	
	CUtlSymbolLarge m_associatedRelayTargetName; // 0x4b8	
	bool m_fixupNames; // 0x4c0	
	bool m_bLoadDynamic; // 0x4c1	
private:
	[[maybe_unused]] uint8_t __pad04c2[0x2]; // 0x4c2
public:
	CHandle< CPointPrefab > m_associatedRelayEntity; // 0x4c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSkyboxReference : public CBaseEntity
{
public:
	WorldGroupId_t m_worldGroupId; // 0x4a8	
	CHandle< CSkyCamera > m_hSkyCamera; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "Vector dirPrimary"
// MNetworkVarNames "Color colorPrimary"
// MNetworkVarNames "Color colorSecondary"
// MNetworkVarNames "Color colorPrimaryLerpTo"
// MNetworkVarNames "Color colorSecondaryLerpTo"
// MNetworkVarNames "float32 start"
// MNetworkVarNames "float32 end"
// MNetworkVarNames "float32 farz"
// MNetworkVarNames "float32 maxdensity"
// MNetworkVarNames "float32 exponent"
// MNetworkVarNames "float32 HDRColorScale"
// MNetworkVarNames "float32 skyboxFogFactor"
// MNetworkVarNames "float32 skyboxFogFactorLerpTo"
// MNetworkVarNames "float32 startLerpTo"
// MNetworkVarNames "float32 endLerpTo"
// MNetworkVarNames "float32 maxdensityLerpTo"
// MNetworkVarNames "GameTime_t lerptime"
// MNetworkVarNames "float32 duration"
// MNetworkVarNames "float32 blendtobackground"
// MNetworkVarNames "float32 scattering"
// MNetworkVarNames "float32 locallightscale"
// MNetworkVarNames "bool enable"
// MNetworkVarNames "bool blend"
// MNetworkVarNames "bool m_bNoReflectionFog"
struct fogparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector dirPrimary; // 0x8	
	// MNetworkEnable
	Color colorPrimary; // 0x14	
	// MNetworkEnable
	Color colorSecondary; // 0x18	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	Color colorPrimaryLerpTo; // 0x1c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	Color colorSecondaryLerpTo; // 0x20	
	// MNetworkEnable
	float start; // 0x24	
	// MNetworkEnable
	float end; // 0x28	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float farz; // 0x2c	
	// MNetworkEnable
	float maxdensity; // 0x30	
	// MNetworkEnable
	float exponent; // 0x34	
	// MNetworkEnable
	float HDRColorScale; // 0x38	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float skyboxFogFactor; // 0x3c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float skyboxFogFactorLerpTo; // 0x40	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float startLerpTo; // 0x44	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float endLerpTo; // 0x48	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float maxdensityLerpTo; // 0x4c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	GameTime_t lerptime; // 0x50	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float duration; // 0x54	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float blendtobackground; // 0x58	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float scattering; // 0x5c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float locallightscale; // 0x60	
	// MNetworkEnable
	bool enable; // 0x64	
	// MNetworkEnable
	bool blend; // 0x65	
	// MNetworkEnable
	bool m_bNoReflectionFog; // 0x66	
	bool m_bPadding; // 0x67	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x34
// Has Trivial Destructor
class CSound
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0x0	
	CHandle< CBaseEntity > m_hTarget; // 0x4	
	int32_t m_iVolume; // 0x8	
	float m_flOcclusionScale; // 0xc	
	int32_t m_iType; // 0x10	
	int32_t m_iNextAudible; // 0x14	
	GameTime_t m_flExpireTime; // 0x18	
	int16_t m_iNext; // 0x1c	
	bool m_bNoExpirationTime; // 0x1e	
private:
	[[maybe_unused]] uint8_t __pad001f[0x1]; // 0x1f
public:
	int32_t m_ownerChannelIndex; // 0x20	
	Vector m_vecOrigin; // 0x24	
	bool m_bHasOwner; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvSoundscape : public CServerOnlyEntity
{
public:
	CEntityIOOutput m_OnPlay; // 0x4a8	
	float m_flRadius; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_soundscapeName; // 0x4d8	
	CUtlSymbolLarge m_soundEventName; // 0x4e0	
	bool m_bOverrideWithEvent; // 0x4e8	
private:
	[[maybe_unused]] uint8_t __pad04e9[0x3]; // 0x4e9
public:
	int32_t m_soundscapeIndex; // 0x4ec	
	int32_t m_soundscapeEntityListId; // 0x4f0	
	uint32_t m_soundEventHash; // 0x4f4	
	CUtlSymbolLarge m_positionNames[8]; // 0x4f8	
	CHandle< CEnvSoundscape > m_hProxySoundscape; // 0x538	
	bool m_bDisabled; // 0x53c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvSoundscapeProxy : public CEnvSoundscape
{
public:
	CUtlSymbolLarge m_MainSoundscapeName; // 0x540	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvSoundscapeTriggerable : public CEnvSoundscape
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct ParticleIndex_t
{
public:
	int32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("ParticleIndex_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// 
// MGetKV3ClassDefaults
class CNavLinkAnimgraphVar
{
public:
	// MPropertyFriendlyName "Animgraph Variable"
	// MPropertyDescription "Animgraph variable to use for animation for this movement."
	CUtlString m_strAnimgraphVar; // 0x0	
	// MPropertyFriendlyName "Alignment Degrees"
	// MPropertyDescription "Amount of angular slack the animation has when aligning to the navlink. 0 indicates that it must be strictly aligned."
	uint32_t m_unAlignmentDegrees; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CNavLinkMovementVData
{
public:
	// MPropertyFriendlyName "Is Interpolated"
	// MPropertyDescription "Indicates that the animation has a segment that's interpolated. In general using this on navlinks that traverse +/- 50% of the recommended distance should look okay."
	bool m_bIsInterpolated; // 0x0	
	// MPropertyFriendlyName "Recommended Distance"
	// MPropertyDescription "Recommended distance this movement traverses"
	uint32_t m_unRecommendedDistance; // 0x4	
	// MPropertyFriendlyName "Animgraph Variables"
	// MPropertyDescription "List of animgraph variables to use when moving through this navlink. Can include multiple, with different amounts of angular slack. The most permissive animgraph variable that exists on the entity's animgraph will be used,"
	// MPropertyAutoExpandSelf
	CUtlVector< CNavLinkAnimgraphVar > m_vecAnimgraphVars; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xd8
// Has VTable
class CNavVolumeMarkupVolume : public CNavVolume
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x98
// Has VTable
// Is Abstract
class CNavVolumeCalculatedVector : public CNavVolume
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb8
// Has VTable
class CNavVolumeBreadthFirstSearch : public CNavVolumeCalculatedVector
{
private:
	[[maybe_unused]] uint8_t __pad0098[0x8]; // 0x98
public:
	Vector m_vStartPos; // 0xa0	
	float m_flSearchDist; // 0xac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "uint64 m_nInteractsAs"
// MNetworkVarNames "uint64 m_nInteractsWith"
// MNetworkVarNames "uint64 m_nInteractsExclude"
// MNetworkVarNames "uint32 m_nEntityId"
// MNetworkVarNames "uint32 m_nOwnerId"
// MNetworkVarNames "uint16 m_nHierarchyId"
// MNetworkVarNames "uint8 m_nCollisionGroup"
// MNetworkVarNames "uint8 m_nCollisionFunctionMask"
struct VPhysicsCollisionAttribute_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	uint64_t m_nInteractsAs; // 0x8	
	// MNetworkEnable
	uint64_t m_nInteractsWith; // 0x10	
	// MNetworkEnable
	uint64_t m_nInteractsExclude; // 0x18	
	// MNetworkEnable
	uint32_t m_nEntityId; // 0x20	
	// MNetworkEnable
	uint32_t m_nOwnerId; // 0x24	
	// MNetworkEnable
	uint16_t m_nHierarchyId; // 0x28	
	// MNetworkEnable
	uint8_t m_nCollisionGroup; // 0x2a	
	// MNetworkEnable
	uint8_t m_nCollisionFunctionMask; // 0x2b	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb0
// Has VTable
// 
// MNetworkVarNames "VPhysicsCollisionAttribute_t m_collisionAttribute"
// MNetworkVarNames "Vector m_vecMins"
// MNetworkVarNames "Vector m_vecMaxs"
// MNetworkVarNames "uint8 m_usSolidFlags"
// MNetworkVarNames "SolidType_t m_nSolidType"
// MNetworkVarNames "uint8 m_triggerBloat"
// MNetworkVarNames "SurroundingBoundsType_t m_nSurroundType"
// MNetworkVarNames "uint8 m_CollisionGroup"
// MNetworkVarNames "uint8 m_nEnablePhysics"
// MNetworkVarNames "Vector m_vecSpecifiedSurroundingMins"
// MNetworkVarNames "Vector m_vecSpecifiedSurroundingMaxs"
// MNetworkVarNames "Vector m_vCapsuleCenter1"
// MNetworkVarNames "Vector m_vCapsuleCenter2"
// MNetworkVarNames "float m_flCapsuleRadius"
class CCollisionProperty
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "CollisionAttributeChanged"
	VPhysicsCollisionAttribute_t m_collisionAttribute; // 0x10	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateOBB"
	Vector m_vecMins; // 0x40	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateOBB"
	Vector m_vecMaxs; // 0x4c	
private:
	[[maybe_unused]] uint8_t __pad0058[0x2]; // 0x58
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateSolidFlags"
	uint8_t m_usSolidFlags; // 0x5a	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateSolidType"
	SolidType_t m_nSolidType; // 0x5b	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	uint8_t m_triggerBloat; // 0x5c	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	SurroundingBoundsType_t m_nSurroundType; // 0x5d	
	// MNetworkEnable
	uint8_t m_CollisionGroup; // 0x5e	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateEnablePhysics"
	uint8_t m_nEnablePhysics; // 0x5f	
	float m_flBoundingRadius; // 0x60	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	Vector m_vecSpecifiedSurroundingMins; // 0x64	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	Vector m_vecSpecifiedSurroundingMaxs; // 0x70	
	Vector m_vecSurroundingMaxs; // 0x7c	
	Vector m_vecSurroundingMins; // 0x88	
	// MNetworkEnable
	Vector m_vCapsuleCenter1; // 0x94	
	// MNetworkEnable
	Vector m_vCapsuleCenter2; // 0xa0	
	// MNetworkEnable
	float m_flCapsuleRadius; // 0xac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x70
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "Vector m_vOrigin"
// MNetworkVarNames "Vector m_vStart"
// MNetworkVarNames "Vector m_vNormal"
// MNetworkVarNames "QAngle m_vAngles"
// MNetworkVarNames "CEntityHandle m_hEntity"
// MNetworkVarNames "CEntityHandle m_hOtherEntity"
// MNetworkVarNames "float32 m_flScale"
// MNetworkVarNames "float32 m_flMagnitude"
// MNetworkVarNames "float32 m_flRadius"
// MNetworkVarNames "CUtlStringToken m_nSurfaceProp"
// MNetworkVarNames "HParticleSystemDefinition m_nEffectIndex"
// MNetworkVarNames "uint32 m_nDamageType"
// MNetworkVarNames "uint8 m_nPenetrate"
// MNetworkVarNames "uint16 m_nMaterial"
// MNetworkVarNames "uint16 m_nHitBox"
// MNetworkVarNames "uint8 m_nColor"
// MNetworkVarNames "uint8 m_fFlags"
// MNetworkVarNames "AttachmentHandle_t m_nAttachmentIndex"
// MNetworkVarNames "CUtlStringToken m_nAttachmentName"
// MNetworkVarNames "uint16 m_iEffectName"
// MNetworkVarNames "uint8 m_nExplosionType"
class CEffectData
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkEncoder "coord_integral"
	Vector m_vOrigin; // 0x8	
	// MNetworkEnable
	// MNetworkEncoder "coord_integral"
	Vector m_vStart; // 0x14	
	// MNetworkEnable
	// MNetworkEncoder "normal"
	Vector m_vNormal; // 0x20	
	// MNetworkEnable
	// MNetworkEncoder "qangle"
	QAngle m_vAngles; // 0x2c	
	// MNetworkEnable
	CEntityHandle m_hEntity; // 0x38	
	// MNetworkEnable
	CEntityHandle m_hOtherEntity; // 0x3c	
	// MNetworkEnable
	float m_flScale; // 0x40	
	// MNetworkEnable
	// MNetworkBitCount "12"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1023.000000"
	// MNetworkEncodeFlags "1"
	float m_flMagnitude; // 0x44	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1023.000000"
	// MNetworkEncodeFlags "1"
	float m_flRadius; // 0x48	
	// MNetworkEnable
	CUtlStringToken m_nSurfaceProp; // 0x4c	
	// MNetworkEnable
	CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > m_nEffectIndex; // 0x50	
	// MNetworkEnable
	uint32_t m_nDamageType; // 0x58	
	// MNetworkEnable
	uint8_t m_nPenetrate; // 0x5c	
private:
	[[maybe_unused]] uint8_t __pad005d[0x1]; // 0x5d
public:
	// MNetworkEnable
	uint16_t m_nMaterial; // 0x5e	
	// MNetworkEnable
	uint16_t m_nHitBox; // 0x60	
	// MNetworkEnable
	uint8_t m_nColor; // 0x62	
	// MNetworkEnable
	uint8_t m_fFlags; // 0x63	
	// MNetworkEnable
	AttachmentHandle_t m_nAttachmentIndex; // 0x64	
private:
	[[maybe_unused]] uint8_t __pad0065[0x3]; // 0x65
public:
	// MNetworkEnable
	CUtlStringToken m_nAttachmentName; // 0x68	
	// MNetworkEnable
	uint16_t m_iEffectName; // 0x6c	
	// MNetworkEnable
	uint8_t m_nExplosionType; // 0x6e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float32 m_flFadeStartDist"
// MNetworkVarNames "float32 m_flFadeEndDist"
class CEnvDetailController : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flFadeStartDist; // 0x4a8	
	// MNetworkEnable
	float m_flFadeEndDist; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x258
// Has VTable
// 
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "uint32 m_iWindSeed"
// MNetworkVarNames "uint16 m_iMinWind"
// MNetworkVarNames "uint16 m_iMaxWind"
// MNetworkVarNames "int32 m_windRadius"
// MNetworkVarNames "uint16 m_iMinGust"
// MNetworkVarNames "uint16 m_iMaxGust"
// MNetworkVarNames "float32 m_flMinGustDelay"
// MNetworkVarNames "float32 m_flMaxGustDelay"
// MNetworkVarNames "float32 m_flGustDuration"
// MNetworkVarNames "uint16 m_iGustDirChange"
// MNetworkVarNames "Vector m_location"
// MNetworkVarNames "uint16 m_iInitialWindDir"
// MNetworkVarNames "float32 m_flInitialWindSpeed"
class CEnvWindShared
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x8	
	// MNetworkEnable
	uint32_t m_iWindSeed; // 0xc	
	// MNetworkEnable
	uint16_t m_iMinWind; // 0x10	
	// MNetworkEnable
	uint16_t m_iMaxWind; // 0x12	
	// MNetworkEnable
	int32_t m_windRadius; // 0x14	
	// MNetworkEnable
	uint16_t m_iMinGust; // 0x18	
	// MNetworkEnable
	uint16_t m_iMaxGust; // 0x1a	
	// MNetworkEnable
	float m_flMinGustDelay; // 0x1c	
	// MNetworkEnable
	float m_flMaxGustDelay; // 0x20	
	// MNetworkEnable
	float m_flGustDuration; // 0x24	
	// MNetworkEnable
	uint16_t m_iGustDirChange; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad002a[0x2]; // 0x2a
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_location; // 0x2c	
	int32_t m_iszGustSound; // 0x38	
	int32_t m_iWindDir; // 0x3c	
	float m_flWindSpeed; // 0x40	
	Vector m_currentWindVector; // 0x44	
	Vector m_CurrentSwayVector; // 0x50	
	Vector m_PrevSwayVector; // 0x5c	
	// MNetworkEnable
	uint16_t m_iInitialWindDir; // 0x68	
private:
	[[maybe_unused]] uint8_t __pad006a[0x2]; // 0x6a
public:
	// MNetworkEnable
	float m_flInitialWindSpeed; // 0x6c	
	CEntityIOOutput m_OnGustStart; // 0x70	
	CEntityIOOutput m_OnGustEnd; // 0x98	
	GameTime_t m_flVariationTime; // 0xc0	
	GameTime_t m_flSwayTime; // 0xc4	
	GameTime_t m_flSimTime; // 0xc8	
	GameTime_t m_flSwitchTime; // 0xcc	
	float m_flAveWindSpeed; // 0xd0	
	bool m_bGusting; // 0xd4	
private:
	[[maybe_unused]] uint8_t __pad00d5[0x3]; // 0xd5
public:
	float m_flWindAngleVariation; // 0xd8	
	float m_flWindSpeedVariation; // 0xdc	
	CEntityIndex m_iEntIndex; // 0xe0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Constructor
// Has Trivial Destructor
struct CEnvWindShared__WindAveEvent_t
{
public:
	float m_flStartWindSpeed; // 0x0	
	float m_flAveWindSpeed; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Constructor
// Has Trivial Destructor
struct CEnvWindShared__WindVariationEvent_t
{
public:
	float m_flWindAngleVariation; // 0x0	
	float m_flWindSpeedVariation; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CGameRulesProxy : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x90
// Has VTable
// Is Abstract
class CGameRules
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	char m_szQuestName[128]; // 0x8	
	int32_t m_nQuestPhase; // 0x88	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x58
// Has VTable
// 
// MNetworkVarNames "int32 m_iGlowType"
// MNetworkVarNames "int32 m_iGlowTeam"
// MNetworkVarNames "int32 m_nGlowRange"
// MNetworkVarNames "int32 m_nGlowRangeMin"
// MNetworkVarNames "Color m_glowColorOverride"
// MNetworkVarNames "bool m_bFlashing"
// MNetworkVarNames "float m_flGlowTime"
// MNetworkVarNames "float m_flGlowStartTime"
class CGlowProperty
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	Vector m_fGlowColor; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0014[0x1c]; // 0x14
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnGlowTypeChanged"
	int32_t m_iGlowType; // 0x30	
	// MNetworkEnable
	int32_t m_iGlowTeam; // 0x34	
	// MNetworkEnable
	int32_t m_nGlowRange; // 0x38	
	// MNetworkEnable
	int32_t m_nGlowRangeMin; // 0x3c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnGlowColorChanged"
	Color m_glowColorOverride; // 0x40	
	// MNetworkEnable
	bool m_bFlashing; // 0x44	
private:
	[[maybe_unused]] uint8_t __pad0045[0x3]; // 0x45
public:
	// MNetworkEnable
	float m_flGlowTime; // 0x48	
	// MNetworkEnable
	float m_flGlowStartTime; // 0x4c	
	bool m_bGlowing; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x90
// Has VTable
// Is Abstract
class CMultiplayRules : public CGameRules
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x90
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "int16 scale"
// MNetworkVarNames "Vector origin"
// MNetworkVarNames "bool bClip3DSkyBoxNearToWorldFar"
// MNetworkVarNames "float32 flClip3DSkyBoxNearToWorldFarOffset"
// MNetworkVarNames "fogparams_t fog"
// MNetworkVarNames "WorldGroupId_t m_nWorldGroupID"
struct sky3dparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	int16_t scale; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad000a[0x2]; // 0xa
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector origin; // 0xc	
	// MNetworkEnable
	bool bClip3DSkyBoxNearToWorldFar; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0019[0x3]; // 0x19
public:
	// MNetworkEnable
	float flClip3DSkyBoxNearToWorldFarOffset; // 0x1c	
	// MNetworkEnable
	fogparams_t fog; // 0x20	
	// MNetworkEnable
	WorldGroupId_t m_nWorldGroupID; // 0x88	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
// 
// MNetworkVarNames "fogplayerparams_t m_PlayerFog"
// MNetworkVarNames "CHandle< CColorCorrection> m_hColorCorrectionCtrl"
// MNetworkVarNames "CHandle< CBaseEntity> m_hViewEntity"
// MNetworkVarNames "CHandle< CTonemapController2> m_hTonemapController"
// MNetworkVarNames "audioparams_t m_audio"
// MNetworkVarNames "CHandle<CPostProcessingVolume> m_PostProcessingVolumes"
class CPlayer_CameraServices : public CPlayerPawnComponent
{
public:
	// MNetworkEnable
	fogplayerparams_t m_PlayerFog; // 0x40	
	// MNetworkEnable
	CHandle< CColorCorrection > m_hColorCorrectionCtrl; // 0x80	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hViewEntity; // 0x84	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerAndObserversExclusive"
	CHandle< CTonemapController2 > m_hTonemapController; // 0x88	
private:
	[[maybe_unused]] uint8_t __pad008c[0x4]; // 0x8c
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerAndObserversExclusive"
	audioparams_t m_audio; // 0x90	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerAndObserversExclusive"
	CNetworkUtlVectorBase< CHandle< CPostProcessingVolume > > m_PostProcessingVolumes; // 0x108	
	float m_flOldPlayerZ; // 0x120	
	float m_flOldPlayerViewOffsetZ; // 0x124	
private:
	[[maybe_unused]] uint8_t __pad0128[0x18]; // 0x128
public:
	CUtlVector< CHandle< CEnvSoundscapeTriggerable > > m_hTriggerSoundscapeList; // 0x140	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "sky3dparams_t m_skyboxData"
// MNetworkVarNames "CUtlStringToken m_skyboxSlotToken"
class CSkyCamera : public CBaseEntity
{
public:
	// MNetworkEnable
	sky3dparams_t m_skyboxData; // 0x4a8	
	// MNetworkEnable
	CUtlStringToken m_skyboxSlotToken; // 0x538	
	bool m_bUseAngles; // 0x53c	
private:
	[[maybe_unused]] uint8_t __pad053d[0x3]; // 0x53d
public:
	CSkyCamera* m_pNext; // 0x540	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Is Abstract
class IRagdoll
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has Trivial Constructor
// Has Trivial Destructor
struct ragdollelement_t
{
public:
	Vector originParentSpace; // 0x0	
	int32_t parentIndex; // 0x20	
	float m_flRadius; // 0x24	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
struct ragdoll_t
{
public:
	CUtlVector< ragdollelement_t > list; // 0x0	
	CUtlVector< int32 > boneIndex; // 0x18	
	bool allowStretch; // 0x30	
	bool unused; // 0x31	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// 
// MNetworkVarNames "CTransform m_Transforms"
// MNetworkVarNames "EHANDLE m_hOwner"
struct PhysicsRagdollPose_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnTransformChanged"
	CNetworkUtlVectorBase< CTransform > m_Transforms; // 0x30	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOwner; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has Trivial Destructor
class CSceneEventInfo
{
public:
	int32_t m_iLayer; // 0x0	
	int32_t m_iPriority; // 0x4	
	HSequence m_hSequence; // 0x8	
	float m_flWeight; // 0xc	
	bool m_bIsMoving; // 0x10	
	bool m_bHasArrived; // 0x11	
private:
	[[maybe_unused]] uint8_t __pad0012[0x2]; // 0x12
public:
	float m_flInitialYaw; // 0x14	
	float m_flTargetYaw; // 0x18	
	float m_flFacingYaw; // 0x1c	
	int32_t m_nType; // 0x20	
	GameTime_t m_flNext; // 0x24	
	bool m_bIsGesture; // 0x28	
	bool m_bShouldRemove; // 0x29	
private:
	[[maybe_unused]] uint8_t __pad002a[0x2a]; // 0x2a
public:
	CHandle< CBaseEntity > m_hTarget; // 0x54	
	uint32_t m_nSceneEventId; // 0x58	
	bool m_bClientSide; // 0x5c	
	bool m_bStarted; // 0x5d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x40
// Has Trivial Destructor
struct lerpdata_t
{
public:
	CHandle< CBaseEntity > m_hEnt; // 0x0	
	MoveType_t m_MoveType; // 0x4	
private:
	[[maybe_unused]] uint8_t __pad0005[0x3]; // 0x5
public:
	GameTime_t m_flStartTime; // 0x8	
	Vector m_vecStartOrigin; // 0xc	
private:
	[[maybe_unused]] uint8_t __pad0018[0x8]; // 0x18
public:
	Quaternion m_qStartRot; // 0x20	
	ParticleIndex_t m_nFXIndex; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x230
// Has VTable
// 
// MGetKV3ClassDefaults
class CBasePlayerWeaponVData
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MPropertyDescription "The name of the weapon entity to spawn for this NPC weapon."
	CUtlString m_szClassName; // 0x10	
	// MPropertyDescription "Model used on the ground or held by an entity"
	// MPropertyGroupName "Visuals"
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > > m_szWorldModel; // 0x18	
	// MPropertyDescription "Was the weapon was built right-handed?"
	// MPropertyGroupName "Visuals"
	bool m_bBuiltRightHanded; // 0xf8	
	// MPropertyDescription "Allows flipping the model, regardless of whether it is built left or right handed"
	// MPropertyGroupName "Visuals"
	bool m_bAllowFlipping; // 0xf9	
	bool m_bIsFullAuto; // 0xfa	
private:
	[[maybe_unused]] uint8_t __pad00fb[0x1]; // 0xfb
public:
	int32_t m_nNumBullets; // 0xfc	
	// MPropertyGroupName "Visuals"
	// MPropertyDescription "Attachment to fire bullets from"
	// MPropertyAttributeEditor "VDataModelAttachment( m_szWorldModel )"
	CUtlString m_sMuzzleAttachment; // 0x100	
	// MPropertyDescription "Effect when firing this weapon"
	// MPropertyGroupName "Visuals"
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > > m_szMuzzleFlashParticle; // 0x108	
	ItemFlagTypes_t m_iFlags; // 0x1e8	
	// MPropertyAttributeEditor "VDataChoice( scripts/ammo.vdata )"
	// MPropertyGroupName "Ammo"
	// MPropertyCustomFGDType "string"
	AmmoIndex_t m_nPrimaryAmmoType; // 0x1e9	
	// MPropertyAttributeEditor "VDataChoice( scripts/ammo.vdata )"
	// MPropertyGroupName "Ammo"
	// MPropertyCustomFGDType "string"
	AmmoIndex_t m_nSecondaryAmmoType; // 0x1ea	
private:
	[[maybe_unused]] uint8_t __pad01eb[0x1]; // 0x1eb
public:
	// MPropertyFriendlyName "Primary Clip Size"
	// MPropertyDescription "How many bullets this gun can fire before it reloads (0 if no clip)"
	// MPropertyAttributeRange "0 255"
	// MPropertyGroupName "Ammo"
	int32_t m_iMaxClip1; // 0x1ec	
	// MPropertyFriendlyName "Secondary Clip Size"
	// MPropertyDescription "How many secondary bullets this gun can fire before it reloads (0 if no clip)"
	// MPropertyGroupName "Ammo"
	// MPropertyAttributeRange "0 255"
	int32_t m_iMaxClip2; // 0x1f0	
	// MPropertyDescription "Primary Initial Clip (-1 means use clip size)"
	// MPropertyGroupName "Ammo"
	// MPropertyAttributeRange "-1 255"
	int32_t m_iDefaultClip1; // 0x1f4	
	// MPropertyDescription "Secondary Initial Clip (-1 means use clip size)"
	// MPropertyGroupName "Ammo"
	// MPropertyAttributeRange "-1 255"
	int32_t m_iDefaultClip2; // 0x1f8	
	// MPropertyDescription "This value used to determine this weapon's importance in autoselection"
	// MPropertyGroupName "UI"
	int32_t m_iWeight; // 0x1fc	
	// MPropertyFriendlyName "Safe To Auto-Switch To"
	// MPropertyDescription "Whether this weapon is safe to automatically switch to (should be false for eg. explosives that can the player may accidentally hurt themselves with)"
	// MPropertyGroupName "UI"
	bool m_bAutoSwitchTo; // 0x200	
	// MPropertyFriendlyName "Safe To Auto-Switch Away From"
	// MPropertyGroupName "UI"
	bool m_bAutoSwitchFrom; // 0x201	
private:
	[[maybe_unused]] uint8_t __pad0202[0x2]; // 0x202
public:
	// MPropertyGroupName "UI"
	RumbleEffect_t m_iRumbleEffect; // 0x204	
	CUtlMap< WeaponSound_t, CSoundEventName > m_aShootSounds; // 0x208	
	// MPropertyFriendlyName "HUD Bucket"
	// MPropertyDescription "Which 'column' to display this weapon in the HUD"
	// MPropertyGroupName "UI"
	int32_t m_iSlot; // 0x228	
	// MPropertyFriendlyName "HUD Bucket Position"
	// MPropertyDescription "Which 'row' to display this weapon in the HUD"
	// MPropertyGroupName "UI"
	int32_t m_iPosition; // 0x22c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
// 
// MGetKV3ClassDefaults
// MVDataRoot
// MVDataNodeType
// MVDataOverlayType
// MVDataUseLinkedEntityClasses
class CEntitySubclassVDataBase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
struct thinkfunc_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	HSCRIPT m_hFn; // 0x8	
	CUtlStringToken m_nContext; // 0x10	
	GameTick_t m_nNextThinkTick; // 0x14	
	GameTick_t m_nLastThinkTick; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
struct RagdollCreationParams_t
{
public:
	Vector m_vForce; // 0x0	
	int32_t m_nForceBone; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
// Has Trivial Destructor
struct hudtextparms_t
{
public:
	Color color1; // 0x0	
	Color color2; // 0x4	
	uint8_t effect; // 0x8	
	uint8_t channel; // 0x9	
private:
	[[maybe_unused]] uint8_t __pad000a[0x2]; // 0xa
public:
	float x; // 0xc	
	float y; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
class CSimpleSimTimer
{
public:
	GameTime_t m_next; // 0x0	
	WorldGroupId_t m_nWorldGroupId; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
class CSimTimer : public CSimpleSimTimer
{
public:
	float m_interval; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
class CRandSimTimer : public CSimpleSimTimer
{
public:
	float m_minInterval; // 0x8	
	float m_maxInterval; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
class CStopwatchBase : public CSimpleSimTimer
{
public:
	bool m_fIsRunning; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
class CSimpleStopwatch : public CStopwatchBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
class CStopwatch : public CStopwatchBase
{
public:
	float m_interval; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
// Has Trivial Destructor
class CRandStopwatch : public CStopwatchBase
{
public:
	float m_minInterval; // 0xc	
	float m_maxInterval; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x98
// Has VTable
class CSingleplayRules : public CGameRules
{
public:
	bool m_bSinglePlayerGameEnding; // 0x90	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "string_t m_iszStackName"
// MNetworkVarNames "string_t m_iszOperatorName"
// MNetworkVarNames "string_t m_iszOpvarName"
// MNetworkVarNames "int m_iOpvarIndex"
// MNetworkVarNames "bool m_bUseAutoCompare"
class CSoundOpvarSetPointBase : public CBaseEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	CEntityHandle m_hSource; // 0x4ac	
private:
	[[maybe_unused]] uint8_t __pad04b0[0x8]; // 0x4b0
public:
	CUtlSymbolLarge m_iszSourceEntityName; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04c0[0x50]; // 0x4c0
public:
	Vector m_vLastPosition; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad051c[0x4]; // 0x51c
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszStackName; // 0x520	
	// MNetworkEnable
	CUtlSymbolLarge m_iszOperatorName; // 0x528	
	// MNetworkEnable
	CUtlSymbolLarge m_iszOpvarName; // 0x530	
	// MNetworkEnable
	int32_t m_iOpvarIndex; // 0x538	
	// MNetworkEnable
	bool m_bUseAutoCompare; // 0x53c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundOpvarSetPointEntity : public CSoundOpvarSetPointBase
{
public:
	CEntityIOOutput m_OnEnter; // 0x540	
	CEntityIOOutput m_OnExit; // 0x568	
	bool m_bAutoDisable; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x43]; // 0x591
public:
	float m_flDistanceMin; // 0x5d4	
	float m_flDistanceMax; // 0x5d8	
	float m_flDistanceMapMin; // 0x5dc	
	float m_flDistanceMapMax; // 0x5e0	
	float m_flOcclusionRadius; // 0x5e4	
	float m_flOcclusionMin; // 0x5e8	
	float m_flOcclusionMax; // 0x5ec	
	float m_flValSetOnDisable; // 0x5f0	
	bool m_bSetValueOnDisable; // 0x5f4	
private:
	[[maybe_unused]] uint8_t __pad05f5[0x3]; // 0x5f5
public:
	int32_t m_nSimulationMode; // 0x5f8	
	int32_t m_nVisibilitySamples; // 0x5fc	
	Vector m_vDynamicProxyPoint; // 0x600	
	float m_flDynamicMaximumOcclusion; // 0x60c	
	CEntityHandle m_hDynamicEntity; // 0x610	
private:
	[[maybe_unused]] uint8_t __pad0614[0x4]; // 0x614
public:
	CUtlSymbolLarge m_iszDynamicEntityName; // 0x618	
	float m_flPathingDistanceNormFactor; // 0x620	
	Vector m_vPathingSourcePos; // 0x624	
	Vector m_vPathingListenerPos; // 0x630	
	int32_t m_nPathingSourceIndex; // 0x63c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundOpvarSetAABBEntity : public CSoundOpvarSetPointEntity
{
public:
	Vector m_vDistanceInnerMins; // 0x640	
	Vector m_vDistanceInnerMaxs; // 0x64c	
	Vector m_vDistanceOuterMins; // 0x658	
	Vector m_vDistanceOuterMaxs; // 0x664	
	int32_t m_nAABBDirection; // 0x670	
	Vector m_vInnerMins; // 0x674	
	Vector m_vInnerMaxs; // 0x680	
	Vector m_vOuterMins; // 0x68c	
	Vector m_vOuterMaxs; // 0x698	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundOpvarSetOBBEntity : public CSoundOpvarSetAABBEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x668
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundOpvarSetPathCornerEntity : public CSoundOpvarSetPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad0640[0x18]; // 0x640
public:
	float m_flDistMinSqr; // 0x658	
	float m_flDistMaxSqr; // 0x65c	
	CUtlSymbolLarge m_iszPathCornerEntityName; // 0x660	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundOpvarSetOBBWindEntity : public CSoundOpvarSetPointBase
{
public:
	Vector m_vMins; // 0x540	
	Vector m_vMaxs; // 0x54c	
	Vector m_vDistanceMins; // 0x558	
	Vector m_vDistanceMaxs; // 0x564	
	float m_flWindMin; // 0x570	
	float m_flWindMax; // 0x574	
	float m_flWindMapMin; // 0x578	
	float m_flWindMapMax; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa8
// Has VTable
class CTakeDamageInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	Vector m_vecDamageForce; // 0x8	
	Vector m_vecDamagePosition; // 0x14	
	Vector m_vecReportedPosition; // 0x20	
	Vector m_vecDamageDirection; // 0x2c	
	CHandle< CBaseEntity > m_hInflictor; // 0x38	
	CHandle< CBaseEntity > m_hAttacker; // 0x3c	
	CHandle< CBaseEntity > m_hAbility; // 0x40	
	float m_flDamage; // 0x44	
	int32_t m_bitsDamageType; // 0x48	
	int32_t m_iDamageCustom; // 0x4c	
	AmmoIndex_t m_iAmmoType; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0xf]; // 0x51
public:
	float m_flOriginalDamage; // 0x60	
	bool m_bShouldBleed; // 0x64	
	bool m_bShouldSpark; // 0x65	
private:
	[[maybe_unused]] uint8_t __pad0066[0xa]; // 0x66
public:
	TakeDamageFlags_t m_nDamageFlags; // 0x70	
	int32_t m_bitsDotaDamageType; // 0x74	
	int32_t m_nDotaDamageCategory; // 0x78	
	float m_flCombatLogCreditFactor; // 0x7c	
	int16_t m_iRecord; // 0x80	
private:
	[[maybe_unused]] uint8_t __pad0082[0x6]; // 0x82
public:
	HSCRIPT m_hScriptInstance; // 0x88	
private:
	[[maybe_unused]] uint8_t __pad0090[0x14]; // 0x90
public:
	bool m_bInTakeDamageFlow; // 0xa4	
	
	// Static fields:
	static CTakeDamageInfo &Get_EmptyInfo(){return *reinterpret_cast<CTakeDamageInfo*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CTakeDamageInfo")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
class CTakeDamageResult
{
public:
	int32_t m_nHealthLost; // 0x0	
	int32_t m_nDamageTaken; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc0
struct SummaryTakeDamageInfo_t
{
public:
	int32_t nSummarisedCount; // 0x0	
	CTakeDamageInfo info; // 0x8	
	CTakeDamageResult result; // 0xb0	
	CHandle< CBaseEntity > hTarget; // 0xb8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
class CTakeDamageSummaryScopeGuard
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< SummaryTakeDamageInfo_t* > m_vecSummaries; // 0x8	
	
	// Static fields:
	static SummaryTakeDamageInfo_t &Get_EmptySummary(){return *reinterpret_cast<SummaryTakeDamageInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CTakeDamageSummaryScopeGuard")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
// 
// MNetworkVarNames "CEconItemAttribute m_Attributes"
class CAttributeList
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CUtlVector< CEconItemAttribute >"
	CUtlVectorEmbeddedNetworkVar< CEconItemAttribute > m_Attributes; // 0x8	
	CAttributeManager* m_pManager; // 0x58	
};

// Registered binary: server.dll (project 'server')
// Alignment: 2
// Size: 0x2
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct attrib_definition_index_t
{
public:
	uint16_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("attrib_definition_index_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Is Abstract
class IEconItemInterface
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// Has VTable
// 
// MNetworkVarNames "int m_iReapplyProvisionParity"
// MNetworkVarNames "EHANDLE m_hOuter"
// MNetworkVarNames "attributeprovidertypes_t m_ProviderType"
class CAttributeManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< CHandle< CBaseEntity > > m_Providers; // 0x8	
	CUtlVector< CHandle< CBaseEntity > > m_Receivers; // 0x20	
	// MNetworkEnable
	int32_t m_iReapplyProvisionParity; // 0x38	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOuter; // 0x3c	
	bool m_bPreventLoopback; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0041[0x3]; // 0x41
public:
	// MNetworkEnable
	attributeprovidertypes_t m_ProviderType; // 0x44	
	CUtlVector< CAttributeManager::cached_attribute_float_t > m_CachedResults; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
struct CAttributeManager__cached_attribute_float_t
{
public:
	float flIn; // 0x0	
	CUtlSymbolLarge iAttribHook; // 0x8	
	float flOut; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct style_index_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("style_index_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Is Abstract
// Has Trivial Destructor
class IHasAttributes
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
struct CEconEntity__AttachedParticleInfo_t
{
public:
	ParticleIndex_t m_nAttachedParticleIndex; // 0x0	
	CUtlStringToken m_customType; // 0x4	
	bool m_bShouldDestroyImmediately; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct HeroPersona_t
{
public:
	int8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("HeroPersona_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// 
// MNetworkVarNames "attrib_definition_index_t m_iAttributeDefinitionIndex"
// MNetworkVarNames "float m_flValue"
class CEconItemAttribute
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	attrib_definition_index_t m_iAttributeDefinitionIndex; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0032[0x2]; // 0x32
public:
	// MNetworkEnable
	// MNetworkAlias "m_iRawValue32"
	float m_flValue; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct attrib_definition_index_db32_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("attrib_definition_index_db32_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct item_definition_index_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("item_definition_index_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct itemid_t
{
public:
	uint64_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("itemid_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct item_steam_cache_version_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("item_steam_cache_version_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc0
// Has VTable
// 
// MNetworkVarNames "item_definition_index_t m_iItemDefinitionIndex"
// MNetworkVarNames "int m_iEntityQuality"
// MNetworkVarNames "uint32 m_iEntityLevel"
// MNetworkVarNames "itemid_t m_iItemID"
// MNetworkVarNames "uint32 m_iAccountID"
// MNetworkVarNames "uint32 m_iInventoryPosition"
// MNetworkVarNames "bool m_bInitialized"
// MNetworkVarNames "style_index_t m_nOverrideStyle"
// MNetworkVarNames "CAttributeList m_AttributeList"
class CEconItemView : public IEconItemInterface
{
public:
	// MNetworkEnable
	item_definition_index_t m_iItemDefinitionIndex; // 0x8	
	// MNetworkEnable
	int32_t m_iEntityQuality; // 0xc	
	// MNetworkEnable
	uint32_t m_iEntityLevel; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0014[0x4]; // 0x14
public:
	// MNetworkEnable
	itemid_t m_iItemID; // 0x18	
	// MNetworkEnable
	uint32_t m_iAccountID; // 0x20	
	// MNetworkEnable
	uint32_t m_iInventoryPosition; // 0x24	
private:
	[[maybe_unused]] uint8_t __pad0028[0x8]; // 0x28
public:
	// MNetworkEnable
	bool m_bInitialized; // 0x30	
	// MNetworkEnable
	style_index_t m_nOverrideStyle; // 0x31	
	bool m_bIsStoreItem; // 0x32	
	bool m_bIsTradeItem; // 0x33	
	bool m_bHasComputedAttachedParticles; // 0x34	
	bool m_bHasAttachedParticles; // 0x35	
private:
	[[maybe_unused]] uint8_t __pad0036[0x2]; // 0x36
public:
	int32_t m_iEntityQuantity; // 0x38	
	uint8_t m_unClientFlags; // 0x3c	
private:
	[[maybe_unused]] uint8_t __pad003d[0x3]; // 0x3d
public:
	eEconItemOrigin m_unOverrideOrigin; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0044[0xc]; // 0x44
public:
	char* m_pszGrayedOutReason; // 0x50	
	// MNetworkEnable
	CAttributeList m_AttributeList; // 0x58	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
class CHeadLookParams
{
public:
	CHeadLookParams::HeadLookPriority_t m_LookPriority; // 0x0	
	float m_flLookDuration; // 0x4	
	INextBotReply* m_pReplyWhenAimed; // 0x8	
	char* m_pReasonStr; // 0x10	
	bool m_bWaitForSteady; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0019[0x3]; // 0x19
public:
	float m_flEaseInTime; // 0x1c	
	
	// Static fields:
	static CHeadLookParams &Get_ms_Defaults(){return *reinterpret_cast<CHeadLookParams*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CHeadLookParams")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Has Trivial Destructor
class INextBotReply
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
class INextBotEventResponder
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa0
// Has VTable
// 
// MNetworkVarNames "CNetworkedSequenceOperation m_op"
// MNetworkVarNames "int m_nOrder"
// MNetworkVarNames "bool m_bLooping"
// MNetworkVarNames "int m_nNewSequenceParity"
class CAnimationLayer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "animationLayerOpChanged"
	CNetworkedSequenceOperation m_op; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "animationLayerOrderChanged"
	int32_t m_nOrder; // 0x58	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "5.000000"
	// MNetworkEncodeFlags "8"
	// MNetworkSendProxyRecipientsFilter
	CNetworkedQuantizedFloat m_flPlaybackRate; // 0x5c	
	// MNetworkEnable
	// MNetworkSendProxyRecipientsFilter
	bool m_bLooping; // 0x64	
private:
	[[maybe_unused]] uint8_t __pad0065[0x3]; // 0x65
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkChangeCallback "animationLayerCycleReset"
	// MNetworkSendProxyRecipientsFilter
	int32_t m_nNewSequenceParity; // 0x68	
	// MNetworkDisable
	int32_t m_nFlags; // 0x6c	
	// MNetworkDisable
	bool m_bSequenceFinished; // 0x70	
private:
	[[maybe_unused]] uint8_t __pad0071[0x3]; // 0x71
public:
	// MNetworkDisable
	float m_flKillRate; // 0x74	
	// MNetworkDisable
	float m_flKillDelay; // 0x78	
	// MNetworkDisable
	float m_flLayerAnimtime; // 0x7c	
	// MNetworkDisable
	float m_flLayerFadeOuttime; // 0x80	
	// MNetworkDisable
	int32_t m_nActivity; // 0x84	
	// MNetworkDisable
	int32_t m_nPriority; // 0x88	
	// MNetworkDisable
	float m_flLastEventCycle; // 0x8c	
	// MNetworkDisable
	float m_flLastAccess; // 0x90	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x160
// Has VTable
// Has Trivial Destructor
class CSequenceTransitioner2
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CNetworkedSequenceOperation m_currentOp; // 0x8	
	float m_flCurrentPlaybackRate; // 0x30	
	float m_flCurrentAnimTime; // 0x34	
	TransitioningLayer_t m_transitioningLayers[4]; // 0x38	
	CBaseAnimatingController* m_pOwner; // 0x158	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x238
// Has VTable
// 
// MNetworkOverride "m_baseLayer.m_hSequence"
// MNetworkVarNames "CNetworkedSequenceOperation m_baseLayer"
// MNetworkVarNames "float m_flPoseParameter"
// MNetworkVarNames "bool m_bClientSideAnimation"
// MNetworkVarNames "int m_nNewSequenceParity"
// MNetworkVarNames "int m_nResetEventsParity"
// MNetworkVarNames "AnimLoopMode_t m_nAnimLoopMode"
class CBaseAnimatingController : public CSkeletonAnimationController
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "baseAnimBaseLayerChanged"
	CNetworkedSequenceOperation m_baseLayer; // 0x10	
	// MNetworkDisable
	bool m_bSequenceFinished; // 0x38	
private:
	[[maybe_unused]] uint8_t __pad0039[0x3]; // 0x39
public:
	// MNetworkDisable
	float m_flGroundSpeed; // 0x3c	
	// MNetworkDisable
	float m_flLastEventCycle; // 0x40	
	// MNetworkDisable
	float m_flLastEventAnimTime; // 0x44	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "5.000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkChangeCallback "playbackRateChanged"
	CNetworkedQuantizedFloat m_flPlaybackRate; // 0x48	
	// MNetworkDisable
	float m_flPrevAnimTime; // 0x50	
	// MNetworkEnable
	// MNetworkBitCount "11"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1.000000"
	// MNetworkUserGroup "m_flPoseParameter"
	// MNetworkChangeCallback "poseParametersChanged"
	float m_flPoseParameter[24]; // 0x54	
	// MNetworkEnable
	// MNetworkChangeCallback "clientSideAnimationChanged"
	bool m_bClientSideAnimation; // 0xb4	
	// MNetworkDisable
	bool m_bNetworkedAnimationInputsChanged; // 0xb5	
private:
	[[maybe_unused]] uint8_t __pad00b6[0x2]; // 0xb6
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkChangeCallback "clientSideAnimCycleReset"
	int32_t m_nNewSequenceParity; // 0xb8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nResetEventsParity; // 0xbc	
	// MNetworkEnable
	AnimLoopMode_t m_nAnimLoopMode; // 0xc0	
private:
	[[maybe_unused]] uint8_t __pad00c4[0x14]; // 0xc4
public:
	// MNetworkDisable
	CSequenceTransitioner2 m_SequenceTransitioner; // 0xd8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x290
// Has VTable
// 
// MNetworkVarNames "CAnimationLayer m_AnimOverlay"
class CBaseAnimatingOverlayController : public CBaseAnimatingController
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "overlay_vars"
	// MNetworkChangeCallback "OnOverlaysChanged2"
	CUtlVectorEmbeddedNetworkVar< CAnimationLayer > m_AnimOverlay; // 0x238	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x730
// Has VTable
// 
// MNetworkVarNames "CBaseAnimatingOverlayController m_animationController"
class CBodyComponentBaseAnimatingOverlay : public CBodyComponentSkeletonInstance
{
public:
	// MNetworkEnable
	CBaseAnimatingOverlayController m_animationController; // 0x470	
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x700	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimatingOverlay")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimatingOverlay")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// Has Trivial Destructor
struct TransitioningLayer_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CNetworkedSequenceOperation m_op; // 0x8	
	float m_flStartAnimTime; // 0x30	
	float m_flStartWeight; // 0x34	
	float m_flAnimTime; // 0x38	
	int32_t m_nOrder; // 0x3c	
	float m_flPlaybackRate; // 0x40	
	float m_flFadeOutDuration; // 0x44	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6d0
// Has VTable
// 
// MNetworkVarNames "CBaseAnimatingController m_animationController"
class CBodyComponentBaseAnimating : public CBodyComponentSkeletonInstance
{
public:
	// MNetworkEnable
	CBaseAnimatingController m_animationController; // 0x470	
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x6a8	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimating")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimating")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc0
// Has VTable
class CBaseAchievement
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x18]; // 0x0
public:
	char* m_pszName; // 0x18	
	int32_t m_iAchievementID; // 0x20	
	int32_t m_iFlags; // 0x24	
	int32_t m_iGoal; // 0x28	
	int32_t m_iProgressMsgIncrement; // 0x2c	
	int32_t m_iProgressMsgMinimum; // 0x30	
	int32_t m_iPointValue; // 0x34	
	bool m_bHideUntilAchieved; // 0x38	
	bool m_bStoreProgressInSteam; // 0x39	
private:
	[[maybe_unused]] uint8_t __pad003a[0x6]; // 0x3a
public:
	char* m_pInflictorClassNameFilter; // 0x40	
	char* m_pInflictorEntityNameFilter; // 0x48	
	char* m_pVictimClassNameFilter; // 0x50	
	char* m_pAttackerClassNameFilter; // 0x58	
	char* m_pMapNameFilter; // 0x60	
	char* m_pGameDirFilter; // 0x68	
	char** m_pszComponentNames; // 0x70	
	char** m_pszComponentDisplayNames; // 0x78	
	int32_t m_iNumComponents; // 0x80	
private:
	[[maybe_unused]] uint8_t __pad0084[0x4]; // 0x84
public:
	char* m_pszComponentPrefix; // 0x88	
	int32_t m_iComponentPrefixLen; // 0x90	
	bool m_bAchieved; // 0x94	
private:
	[[maybe_unused]] uint8_t __pad0095[0x3]; // 0x95
public:
	int32_t m_iCount; // 0x98	
	int32_t m_iProgressShown; // 0x9c	
	uint64_t m_iComponentBits; // 0xa0	
private:
	[[maybe_unused]] uint8_t __pad00a8[0x8]; // 0xa8
public:
	int32_t m_nUserSlot; // 0xb0	
	int32_t m_iDisplayOrder; // 0xb4	
	bool m_bShowOnHUD; // 0xb8	
private:
	[[maybe_unused]] uint8_t __pad00b9[0x3]; // 0xb9
public:
	int32_t m_iAssetAwardID; // 0xbc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc8
// Has VTable
// Is Abstract
class CFailableAchievement : public CBaseAchievement
{
public:
	bool m_bActivated; // 0xc0	
	bool m_bFailed; // 0xc1	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bBlockFoW"
class CDOTA_SimpleObstruction : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x18]; // 0x4a8
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x4c0	
	// MNetworkEnable
	bool m_bBlockFoW; // 0x4c1	
private:
	[[maybe_unused]] uint8_t __pad04c2[0x2]; // 0x4c2
public:
	uint32_t m_unOccluderID; // 0x4c4	
	bool m_bBlockingGridNav; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CDOTAGameManager * m_pGameManager"
class CDOTAGameManagerProxy : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTAGameManager*"
	CDOTAGameManager* m_pGameManager; // 0x4a8	
	
	// Static fields:
	static CDOTAGameManagerProxy* &Get_s_pGameManagerProxy(){return *reinterpret_cast<CDOTAGameManagerProxy**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTAGameManagerProxy")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xaa8
// Has VTable
// 
// MNetworkVarNames "bool m_CurrentHeroAvailable"
class CDOTAGameManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0058[0x390]; // 0x58
public:
	bool m_bCustomGame; // 0x3e8	
	bool m_bEventGame; // 0x3e9	
	bool m_bGameModeWantsDefaultNeutralItemSchema; // 0x3ea	
	bool m_bGameModeFilteredAbilities; // 0x3eb	
	char m_szAddOnGame[128]; // 0x3ec	
	char m_szAddOnMap[128]; // 0x46c	
private:
	[[maybe_unused]] uint8_t __pad04ec[0x37c]; // 0x4ec
public:
	KeyValues* m_pTutorialLessonKeyValues; // 0x868	
	KeyValues* m_pDivisionKeyValues; // 0x870	
	KeyValues* m_pMatchGroupsKeyValues; // 0x878	
	KeyValues* m_pAnimationStatues; // 0x880	
	KeyValues* m_pBotScriptsDedicatedServer; // 0x888	
	KeyValues* m_pkvWardPlacementLocations; // 0x890	
	KeyValues* m_pRegionKeyValues; // 0x898	
	KeyValues* m_pSurveyQuestionData; // 0x8a0	
	KeyValues3 m_AddonInfoKeyValues; // 0x8a8	
private:
	[[maybe_unused]] uint8_t __pad08b8[0x28]; // 0x8b8
public:
	KeyValues* m_pCountryKeyValues; // 0x8e0	
private:
	[[maybe_unused]] uint8_t __pad08e8[0xc0]; // 0x8e8
public:
	// MNetworkEnable
	bool m_CurrentHeroAvailable[256]; // 0x9a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
struct DOTASpecialAbilityBonus_t
{
public:
	char* m_pszName; // 0x0	
	float m_fValue; // 0x8	
	EDOTASpecialBonusOperation m_eOperation; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
struct DOTALevelingAbilityBonus_t
{
public:
	char* m_pszName; // 0x0	
	CUtlVector< float32 > m_vecValues; // 0x8	
	EDOTASpecialBonusOperation m_eOperation; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
struct DOTAOutgoingBonus_t
{
public:
	char* m_pszAbilityName; // 0x0	
	char* m_pszSpecialName; // 0x8	
	float m_fValue; // 0x10	
	EDOTASpecialBonusOperation m_eOperation; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x128
struct DOTASpecialAbility_t
{
public:
	char* m_pszName; // 0x0	
	char* m_pszValue; // 0x8	
	char* m_pszLevelKey; // 0x10	
	char* m_pszSpecialBonusAbility; // 0x18	
	char* m_pszSpecialBonusField; // 0x20	
	char* m_pszSpecialBonusADLinkedAbilities; // 0x28	
	int32_t m_nCount; // 0x30	
	float m_Values[20]; // 0x34	
	int32_t m_nBonusesCount; // 0x84	
	DOTASpecialAbilityBonus_t m_Bonuses[4]; // 0x88	
	DOTALevelingAbilityBonus_t m_ScepterBonus; // 0xc8	
	DOTALevelingAbilityBonus_t m_ShardBonus; // 0xf0	
	int32_t m_nDamageTypeField; // 0x118	
	bool m_bSpellDamageField; // 0x11c	
	bool m_bScepterField; // 0x11d	
	bool m_bShardField; // 0x11e	
	bool m_bAffectedByAoEIncrease; // 0x11f	
	EDOTASpecialBonusOperation m_eSpecialBonusOperation; // 0x120	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
struct ItemRecipe_t
{
public:
	CUtlVector< AbilityID_t > m_vecRecipeComponents; // 0x0	
	int32_t m_nPrimaryComponentIndex; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct AbilityID_t
{
public:
	int32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("AbilityID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTAGameEvents : public CBaseEntity
{
public:
	CEntityIOOutput m_OnDayStarted; // 0x4a8	
	CEntityIOOutput m_OnNightStarted; // 0x4d0	
	CEntityIOOutput m_OnRadiantFortDestroyed; // 0x4f8	
	CEntityIOOutput m_OnDireFortDestroyed; // 0x520	
	CEntityIOOutput m_OnGameEnded; // 0x548	
	CEntityIOOutput m_OnGameStarted; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct PlayerID_t
{
public:
	int32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("PlayerID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTACustomGameEvents : public CDOTAGameEvents
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CDOTAGameRules * m_pGameRules"
class CDOTAGamerulesProxy : public CGameRulesProxy
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTAGameRules*"
	// MNetworkPriority "32"
	CDOTAGameRules* m_pGameRules; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Constructor
// Has Trivial Destructor
struct HeroPickRecord_t
{
public:
	HeroPickType eType; // 0x0	
	int32_t nHeroID; // 0x4	
	int32_t nTeam; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
struct HeroDeathRecord_t
{
public:
	PlayerID_t nKillerPlayerID; // 0x0	
	PlayerID_t nVictimPlayerID; // 0x4	
	float fTime; // 0x8	
	float fTimeRespawn; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
struct NeutralSpawnBoxes_t
{
public:
	AABB_t neutralSpawnBoxes; // 0x0	
	Vector vSpawnBoxOrigin; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0024[0x4]; // 0x24
public:
	CUtlString strCampName; // 0x28	
	CEntityIndex iSpawnerEntIndex; // 0x30	
	int32_t nCampType; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
struct RegionTriggerBoxes_t
{
public:
	AABB_t regionBox; // 0x0	
	Vector vRegionBoxOrigin; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0024[0x4]; // 0x24
public:
	CUtlString strRegionName; // 0x28	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
class sMuertaPartingShotSoulDef
{
public:
	CHandle< CBaseEntity > hHeroOwner; // 0x0	
	CHandle< CBaseEntity > hSoulClone; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
class CDOTA_ReconnectInfo
{
public:
	uint64_t m_playerSteamId; // 0x0	
	int32_t m_iTeam; // 0x8	
	CEntityIndex m_iUnitControlled; // 0xc	
	bool m_bWantsRandomHero; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x58
// Has VTable
// 
// MNetworkVarNames "int iTeamNumber"
// MNetworkVarNames "AbilityID_t nItemAbilityID"
// MNetworkVarNames "float fStockDuration"
// MNetworkVarNames "GameTime_t fStockTime"
// MNetworkVarNames "int iStockCount"
// MNetworkVarNames "int iMaxCount"
// MNetworkVarNames "float fInitialStockDuration"
// MNetworkVarNames "PlayerID_t iPlayerID"
// MNetworkVarNames "int iBonusDelayedStockCount"
class CDOTA_ItemStockInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t iTeamNumber; // 0x30	
	// MNetworkEnable
	AbilityID_t nItemAbilityID; // 0x34	
	// MNetworkEnable
	float fStockDuration; // 0x38	
	// MNetworkEnable
	GameTime_t fStockTime; // 0x3c	
	// MNetworkEnable
	int32_t iStockCount; // 0x40	
	// MNetworkEnable
	int32_t iMaxCount; // 0x44	
	// MNetworkEnable
	float fInitialStockDuration; // 0x48	
	// MNetworkEnable
	PlayerID_t iPlayerID; // 0x4c	
	// MNetworkEnable
	int32_t iBonusDelayedStockCount; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "int m_vecHeroIDs"
class CHeroesPerPlayer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecHeroIDs; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// 
// MNetworkVarNames "PlayerID_t m_iPlayerIDLiker"
// MNetworkVarNames "PlayerID_t m_iPlayerIDLiked"
class CHeroStatueLiked
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	PlayerID_t m_iPlayerIDLiker; // 0x30	
	// MNetworkEnable
	PlayerID_t m_iPlayerIDLiked; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "uint16 nAssassinState"
// MNetworkVarNames "uint16 nVictimHeroID"
class DOTA_AssassinMinigameNetworkState
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	uint16_t nAssassinState; // 0x8	
	// MNetworkEnable
	uint16_t nVictimHeroID; // 0xa	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// 
// MNetworkVarNames "AbilityID_t m_nAbilityID"
// MNetworkVarNames "PlayerID_t m_unPlayerID"
// MNetworkVarNames "int m_unAbilityPlayerSlot"
class CDOTA_AbilityDraftAbilityState
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	AbilityID_t m_nAbilityID; // 0x30	
	// MNetworkEnable
	PlayerID_t m_unPlayerID; // 0x34	
	// MNetworkEnable
	int32_t m_unAbilityPlayerSlot; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct MatchID_t
{
public:
	uint64_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("MatchID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_HiddenDisplacement"
class CDOTA_DisplacementVisibility : public CBaseEntity
{
public:
	// MNetworkEnable
	int32_t m_HiddenDisplacement; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Is Abstract
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTABaseCustomHeroPickRules : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x138
// Has VTable
// 
// MNetworkVarNames "AbilityID_t m_nAbilityID"
// MNetworkVarNames "int m_nStockCount"
// MNetworkVarNames "char m_Category"
class CDOTACustomShopItemInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	AbilityID_t m_nAbilityID; // 0x30	
	// MNetworkEnable
	int32_t m_nStockCount; // 0x34	
	// MNetworkEnable
	char m_Category[256]; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a0
// Has VTable
// 
// MNetworkVarNames "char m_CustomShopName"
// MNetworkVarNames "CDOTACustomShopItemInfo m_CustomShopItems"
class CDOTACustomShopInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	char m_CustomShopName[256]; // 0x30	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTACustomShopItemInfo > m_CustomShopItems; // 0x130	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CUtlString m_ForcedHUDSkin"
// MNetworkVarNames "int m_nCustomGameForceHeroSelectionId"
// MNetworkVarNames "bool m_bAlwaysShowPlayerInventory"
// MNetworkVarNames "bool m_bGoldSoundDisabled"
// MNetworkVarNames "bool m_bRecommendedItemsDisabled"
// MNetworkVarNames "bool m_bStickyItemDisabled"
// MNetworkVarNames "bool m_bStashPurchasingDisabled"
// MNetworkVarNames "bool m_bFogOfWarDisabled"
// MNetworkVarNames "bool m_bUseUnseenFOW"
// MNetworkVarNames "bool m_bUseCustomBuybackCost"
// MNetworkVarNames "bool m_bUseCustomBuybackCooldown"
// MNetworkVarNames "bool m_bBuybackEnabled"
// MNetworkVarNames "bool m_bUseTurboCouriers"
// MNetworkVarNames "float m_flCameraDistanceOverride"
// MNetworkVarNames "int m_nCameraSmoothCountOverride"
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hOverrideSelectionEntity"
// MNetworkVarNames "bool m_bTopBarTeamValuesOverride"
// MNetworkVarNames "bool m_bTopBarTeamValuesVisible"
// MNetworkVarNames "int m_nTeamGoodGuysTopBarValue"
// MNetworkVarNames "int m_nTeamBadGuysTopBarValue"
// MNetworkVarNames "bool m_bAlwaysShowPlayerNames"
// MNetworkVarNames "bool m_bUseCustomHeroLevels"
// MNetworkVarNames "int m_nCustomXPRequiredToReachNextLevel"
// MNetworkVarNames "bool m_bTowerBackdoorProtectionEnabled"
// MNetworkVarNames "bool m_bBotThinkingEnabled"
// MNetworkVarNames "bool m_bAnnouncerDisabled"
// MNetworkVarNames "bool m_bAnnouncerGameModeAnnounceDisabled"
// MNetworkVarNames "bool m_bDeathTipsDisabled"
// MNetworkVarNames "bool m_bFilterPlayerHeroAvailability"
// MNetworkVarNames "bool m_bKillingSpreeAnnouncerDisabled"
// MNetworkVarNames "float m_flFixedRespawnTime"
// MNetworkVarNames "float m_flBuybackCostScale"
// MNetworkVarNames "float m_flRespawnTimeScale"
// MNetworkVarNames "bool m_bLoseGoldOnDeath"
// MNetworkVarNames "bool m_bKillableTombstones"
// MNetworkVarNames "uint32 m_nHUDVisibilityBits"
// MNetworkVarNames "float m_flMinimumAttackSpeed"
// MNetworkVarNames "float m_flMaximumAttackSpeed"
// MNetworkVarNames "bool m_bIsDaynightCycleDisabled"
// MNetworkVarNames "float m_flDaynightCycleAdvanceRate"
// MNetworkVarNames "bool m_bAreWeatherEffectsDisabled"
// MNetworkVarNames "bool m_bDisableHudFlip"
// MNetworkVarNames "bool m_bEnableFriendlyBuildingMoveTo"
// MNetworkVarNames "bool m_bIsDeathOverlayDisabled"
// MNetworkVarNames "bool m_bIsHudCombatEventsDisabled"
// MNetworkVarNames "CUtlString m_strDefaultStickyItem"
// MNetworkVarNames "CUtlString m_sCustomTerrainWeatherEffect"
// MNetworkVarNames "CUtlString m_strTPScrollSlotItemOverride"
// MNetworkVarNames "float m_flStrengthDamage"
// MNetworkVarNames "float m_flStrengthHP"
// MNetworkVarNames "float m_flStrengthHPRegen"
// MNetworkVarNames "float m_flAgilityDamage"
// MNetworkVarNames "float m_flAgilityArmor"
// MNetworkVarNames "float m_flAgilityAttackSpeed"
// MNetworkVarNames "float m_flAgilityMovementSpeedPercent"
// MNetworkVarNames "float m_flIntelligenceDamage"
// MNetworkVarNames "float m_flIntelligenceMana"
// MNetworkVarNames "float m_flIntelligenceManaRegen"
// MNetworkVarNames "float m_flIntelligenceMres"
// MNetworkVarNames "float m_flIntelligenceSpellAmpPercent"
// MNetworkVarNames "float m_flStrengthMagicResistancePercent"
// MNetworkVarNames "float m_flAttributeAllDamage"
// MNetworkVarNames "float m_flDraftingHeroPickSelectTimeOverride"
// MNetworkVarNames "float m_flDraftingBanningTimeOverride"
// MNetworkVarNames "bool m_bPauseEnabled"
// MNetworkVarNames "int m_iCustomScanMaxCharges"
// MNetworkVarNames "float m_flCustomScanCooldown"
// MNetworkVarNames "float m_flCustomGlyphCooldown"
// MNetworkVarNames "float m_flCustomBackpackSwapCooldown"
// MNetworkVarNames "float m_flCustomBackpackCooldownPercent"
// MNetworkVarNames "bool m_bDefaultRuneSpawnLogic"
// MNetworkVarNames "bool m_bEnableFreeCourierMode"
// MNetworkVarNames "bool m_bAllowNeutralItemDrops"
// MNetworkVarNames "bool m_bEnableNeutralStash"
// MNetworkVarNames "bool m_bEnableNeutralStashTeamViewOnly"
// MNetworkVarNames "bool m_bEnableNeutralItemHideUndiscovered"
// MNetworkVarNames "bool m_bEnableSendToStash"
// MNetworkVarNames "bool m_bForceRightClickAttackDisabled"
// MNetworkVarNames "CDOTACustomShopInfo m_vecCustomShopInfo"
// MNetworkVarNames "bool m_bCanSellAnywhere"
// MNetworkVarNames "float m_flCameraNearZ"
// MNetworkVarNames "float m_flCameraFarZ"
// MNetworkVarNames "int m_nCustomRadiantScore"
// MNetworkVarNames "int m_nCustomDireScore"
// MNetworkVarNames "bool m_bAbilityUpgradeWhitelistEnabled"
// MNetworkVarNames "AbilityID_t m_vecAbilityUpgradeWhitelist"
// MNetworkVarNames "bool m_bGiveFreeTPOnDeath"
// MNetworkVarNames "int m_nInnateMeleeDamageBlockPct"
// MNetworkVarNames "int m_nInnateMeleeDamageBlockAmount"
// MNetworkVarNames "int m_nInnateMeleeDamageBlockPerLevelAmount"
// MNetworkVarNames "float m_flWaterRuneSpawnInterval"
class CDOTABaseGameMode : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnForcedHUDSkinChanged"
	CUtlString m_ForcedHUDSkin; // 0x4b0	
	// MNetworkEnable
	int32_t m_nCustomGameForceHeroSelectionId; // 0x4b8	
	// MNetworkEnable
	bool m_bAlwaysShowPlayerInventory; // 0x4bc	
	// MNetworkEnable
	bool m_bGoldSoundDisabled; // 0x4bd	
	// MNetworkEnable
	bool m_bRecommendedItemsDisabled; // 0x4be	
	// MNetworkEnable
	bool m_bStickyItemDisabled; // 0x4bf	
	// MNetworkEnable
	bool m_bStashPurchasingDisabled; // 0x4c0	
	// MNetworkEnable
	bool m_bFogOfWarDisabled; // 0x4c1	
	// MNetworkEnable
	bool m_bUseUnseenFOW; // 0x4c2	
	// MNetworkEnable
	bool m_bUseCustomBuybackCost; // 0x4c3	
	// MNetworkEnable
	bool m_bUseCustomBuybackCooldown; // 0x4c4	
	// MNetworkEnable
	bool m_bBuybackEnabled; // 0x4c5	
	// MNetworkEnable
	bool m_bUseTurboCouriers; // 0x4c6	
private:
	[[maybe_unused]] uint8_t __pad04c7[0x1]; // 0x4c7
public:
	// MNetworkEnable
	float m_flCameraDistanceOverride; // 0x4c8	
	// MNetworkEnable
	int32_t m_nCameraSmoothCountOverride; // 0x4cc	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hOverrideSelectionEntity; // 0x4d0	
	// MNetworkEnable
	bool m_bTopBarTeamValuesOverride; // 0x4d4	
	// MNetworkEnable
	bool m_bTopBarTeamValuesVisible; // 0x4d5	
private:
	[[maybe_unused]] uint8_t __pad04d6[0x2]; // 0x4d6
public:
	// MNetworkEnable
	int32_t m_nTeamGoodGuysTopBarValue; // 0x4d8	
	// MNetworkEnable
	int32_t m_nTeamBadGuysTopBarValue; // 0x4dc	
	// MNetworkEnable
	bool m_bAlwaysShowPlayerNames; // 0x4e0	
	// MNetworkEnable
	bool m_bUseCustomHeroLevels; // 0x4e1	
private:
	[[maybe_unused]] uint8_t __pad04e2[0x6]; // 0x4e2
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_nCustomXPRequiredToReachNextLevel; // 0x4e8	
	// MNetworkEnable
	bool m_bTowerBackdoorProtectionEnabled; // 0x500	
	// MNetworkEnable
	bool m_bBotThinkingEnabled; // 0x501	
	// MNetworkEnable
	bool m_bAnnouncerDisabled; // 0x502	
	// MNetworkEnable
	bool m_bAnnouncerGameModeAnnounceDisabled; // 0x503	
	// MNetworkEnable
	bool m_bDeathTipsDisabled; // 0x504	
	// MNetworkEnable
	bool m_bFilterPlayerHeroAvailability; // 0x505	
	// MNetworkEnable
	bool m_bKillingSpreeAnnouncerDisabled; // 0x506	
private:
	[[maybe_unused]] uint8_t __pad0507[0x1]; // 0x507
public:
	// MNetworkEnable
	float m_flFixedRespawnTime; // 0x508	
	// MNetworkEnable
	float m_flBuybackCostScale; // 0x50c	
	// MNetworkEnable
	float m_flRespawnTimeScale; // 0x510	
	// MNetworkEnable
	bool m_bLoseGoldOnDeath; // 0x514	
	// MNetworkEnable
	bool m_bKillableTombstones; // 0x515	
private:
	[[maybe_unused]] uint8_t __pad0516[0x2]; // 0x516
public:
	// MNetworkEnable
	uint32_t m_nHUDVisibilityBits; // 0x518	
	// MNetworkEnable
	float m_flMinimumAttackSpeed; // 0x51c	
	// MNetworkEnable
	float m_flMaximumAttackSpeed; // 0x520	
	// MNetworkEnable
	bool m_bIsDaynightCycleDisabled; // 0x524	
private:
	[[maybe_unused]] uint8_t __pad0525[0x3]; // 0x525
public:
	// MNetworkEnable
	float m_flDaynightCycleAdvanceRate; // 0x528	
	// MNetworkEnable
	bool m_bAreWeatherEffectsDisabled; // 0x52c	
	// MNetworkEnable
	bool m_bDisableHudFlip; // 0x52d	
	// MNetworkEnable
	bool m_bEnableFriendlyBuildingMoveTo; // 0x52e	
	// MNetworkEnable
	bool m_bIsDeathOverlayDisabled; // 0x52f	
	// MNetworkEnable
	bool m_bIsHudCombatEventsDisabled; // 0x530	
private:
	[[maybe_unused]] uint8_t __pad0531[0x7]; // 0x531
public:
	// MNetworkEnable
	CUtlString m_strDefaultStickyItem; // 0x538	
	// MNetworkEnable
	CUtlString m_sCustomTerrainWeatherEffect; // 0x540	
	// MNetworkEnable
	CUtlString m_strTPScrollSlotItemOverride; // 0x548	
	// MNetworkEnable
	float m_flStrengthDamage; // 0x550	
	// MNetworkEnable
	float m_flStrengthHP; // 0x554	
	// MNetworkEnable
	float m_flStrengthHPRegen; // 0x558	
	// MNetworkEnable
	float m_flAgilityDamage; // 0x55c	
	// MNetworkEnable
	float m_flAgilityArmor; // 0x560	
	// MNetworkEnable
	float m_flAgilityAttackSpeed; // 0x564	
	// MNetworkEnable
	float m_flAgilityMovementSpeedPercent; // 0x568	
	// MNetworkEnable
	float m_flIntelligenceDamage; // 0x56c	
	// MNetworkEnable
	float m_flIntelligenceMana; // 0x570	
	// MNetworkEnable
	float m_flIntelligenceManaRegen; // 0x574	
	// MNetworkEnable
	float m_flIntelligenceMres; // 0x578	
	// MNetworkEnable
	float m_flIntelligenceSpellAmpPercent; // 0x57c	
	// MNetworkEnable
	float m_flStrengthMagicResistancePercent; // 0x580	
	// MNetworkEnable
	float m_flAttributeAllDamage; // 0x584	
	// MNetworkEnable
	float m_flDraftingHeroPickSelectTimeOverride; // 0x588	
	// MNetworkEnable
	float m_flDraftingBanningTimeOverride; // 0x58c	
	// MNetworkEnable
	bool m_bPauseEnabled; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x3]; // 0x591
public:
	// MNetworkEnable
	int32_t m_iCustomScanMaxCharges; // 0x594	
	// MNetworkEnable
	float m_flCustomScanCooldown; // 0x598	
	// MNetworkEnable
	float m_flCustomGlyphCooldown; // 0x59c	
	// MNetworkEnable
	float m_flCustomBackpackSwapCooldown; // 0x5a0	
	// MNetworkEnable
	float m_flCustomBackpackCooldownPercent; // 0x5a4	
	// MNetworkEnable
	bool m_bDefaultRuneSpawnLogic; // 0x5a8	
	// MNetworkEnable
	bool m_bEnableFreeCourierMode; // 0x5a9	
	// MNetworkEnable
	bool m_bAllowNeutralItemDrops; // 0x5aa	
	// MNetworkEnable
	bool m_bEnableNeutralStash; // 0x5ab	
	// MNetworkEnable
	bool m_bEnableNeutralStashTeamViewOnly; // 0x5ac	
	// MNetworkEnable
	bool m_bEnableNeutralItemHideUndiscovered; // 0x5ad	
	// MNetworkEnable
	bool m_bEnableSendToStash; // 0x5ae	
	// MNetworkEnable
	bool m_bForceRightClickAttackDisabled; // 0x5af	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTACustomShopInfo > m_vecCustomShopInfo; // 0x5b0	
	// MNetworkEnable
	bool m_bCanSellAnywhere; // 0x600	
private:
	[[maybe_unused]] uint8_t __pad0601[0x3]; // 0x601
public:
	// MNetworkEnable
	float m_flCameraNearZ; // 0x604	
	// MNetworkEnable
	float m_flCameraFarZ; // 0x608	
	// MNetworkEnable
	int32_t m_nCustomRadiantScore; // 0x60c	
	// MNetworkEnable
	int32_t m_nCustomDireScore; // 0x610	
	// MNetworkEnable
	bool m_bAbilityUpgradeWhitelistEnabled; // 0x614	
private:
	[[maybe_unused]] uint8_t __pad0615[0x3]; // 0x615
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< AbilityID_t > m_vecAbilityUpgradeWhitelist; // 0x618	
	// MNetworkEnable
	bool m_bGiveFreeTPOnDeath; // 0x630	
private:
	[[maybe_unused]] uint8_t __pad0631[0x3]; // 0x631
public:
	// MNetworkEnable
	int32_t m_nInnateMeleeDamageBlockPct; // 0x634	
	// MNetworkEnable
	int32_t m_nInnateMeleeDamageBlockAmount; // 0x638	
	// MNetworkEnable
	int32_t m_nInnateMeleeDamageBlockPerLevelAmount; // 0x63c	
	// MNetworkEnable
	float m_flWaterRuneSpawnInterval; // 0x640	
private:
	[[maybe_unused]] uint8_t __pad0644[0x1c]; // 0x644
public:
	bool m_bSelectionGoldPenaltyEnabled; // 0x660	
	bool m_bRemoveIllusionsOnDeath; // 0x661	
	bool m_bRandomHeroBonusItemGrantDisabled; // 0x662	
	bool m_bDisableClumpingBehaviorByDefault; // 0x663	
	bool m_bRuneTypeEnabled[10]; // 0x664	
	bool m_bOverrideBotLateGame; // 0x66e	
	bool m_bBotsAlwaysPushWithHuman; // 0x66f	
	bool m_bBotsInLateGame; // 0x670	
private:
	[[maybe_unused]] uint8_t __pad0671[0x3]; // 0x671
public:
	int32_t m_nBotMaxPushTier; // 0x674	
	float m_flFountainPercentageHealthRegen; // 0x678	
	float m_flFountainPercentageManaRegen; // 0x67c	
	float m_flFountainConstantManaRegen; // 0x680	
	float m_flPowerRuneSpawnInterval; // 0x684	
	float m_flBountyRuneSpawnInterval; // 0x688	
	float m_flXPRuneSpawnInterval; // 0x68c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x820
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTATurboGameMode : public CDOTABaseGameMode
{
private:
	[[maybe_unused]] uint8_t __pad0770[0x18]; // 0x770
public:
	int32_t m_nHighestLevelInCurrentGame; // 0x788	
private:
	[[maybe_unused]] uint8_t __pad078c[0x34]; // 0x78c
public:
	CUtlVector< float32 > m_ExtraMeleeCreepTimes; // 0x7c0	
	CUtlVector< float32 > m_ExtraRangedCreepTimes; // 0x7d8	
	CUtlVector< float32 > m_ExtraSiegeCreepTimes; // 0x7f0	
	int32_t m_nExtraGoldPerWave; // 0x808	
	int32_t m_nExtraXPPerWave; // 0x80c	
	float m_flNextRewardDistributionTime; // 0x810	
	float m_flNextWaveRecalculationTime; // 0x814	
	float m_flNextNeutralItemDistributionTime; // 0x818	
	bool m_bInOvertime; // 0x81c	
	bool m_bDistributingPassiveGoldAndXp; // 0x81d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x828
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTANewPlayerPoolGameMode : public CDOTABaseGameMode
{
public:
	int32_t m_nHighestLevelInCurrentGame; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0774[0x64]; // 0x774
public:
	CUtlVector< float32 > m_ExtraMeleeCreepTimes; // 0x7d8	
	CUtlVector< float32 > m_ExtraRangedCreepTimes; // 0x7f0	
	CUtlVector< float32 > m_ExtraSiegeCreepTimes; // 0x808	
	bool m_bInOvertime; // 0x820	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTAMutationGameMode : public CDOTABaseGameMode
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "DOTACustomHeroPickRulesPhase_t m_Phase"
class CDOTATurboHeroPickRules : public CDOTABaseCustomHeroPickRules
{
public:
	// MNetworkEnable
	DOTACustomHeroPickRulesPhase_t m_Phase; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "DOTACustomHeroPickRulesPhase_t m_Phase"
// MNetworkVarNames "int32 m_nNumBansPerTeam"
// MNetworkVarNames "GameTime_t m_flEnterTime"
class CDOTACustomGameHeroPickRules : public CDOTABaseCustomHeroPickRules
{
public:
	// MNetworkEnable
	DOTACustomHeroPickRulesPhase_t m_Phase; // 0x4a8	
	// MNetworkEnable
	int32_t m_nNumBansPerTeam; // 0x4ac	
	// MNetworkEnable
	GameTime_t m_flEnterTime; // 0x4b0	
	int32_t m_nNumHeroesPicked; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
struct GameChatLogEntry_t
{
public:
	int32_t m_nTeam; // 0x0	
	PlayerID_t m_nPlayerID; // 0x4	
	CUtlString m_sText; // 0x8	
	GameTime_t m_flGameTime; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct GCPlayerSlot_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("GCPlayerSlot_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x248
struct DOTAAbilityDefinition_t
{
public:
	char* m_pszAbilityName; // 0x0	
	char* m_pszTextureName; // 0x8	
	char* m_pszSharedCooldownName; // 0x10	
	char* m_pszKeyOverride; // 0x18	
	char* m_pszItemRecipeName; // 0x20	
	char* m_pszLinkedAbility; // 0x28	
	int32_t m_castActivity; // 0x30	
	DotaGestureSlot_t m_castActivityGestureSlot; // 0x34	
	KeyValues* m_pKVData; // 0x38	
	AbilityID_t m_iAbilityID; // 0x40	
	int32_t m_iAbilityType; // 0x44	
	uint64_t m_iAbilityBehavior; // 0x48	
	int32_t m_iAbilityTargetTeam; // 0x50	
	int32_t m_iAbilityTargetType; // 0x54	
	int32_t m_iAbilityTargetFlags; // 0x58	
	int32_t m_iAbilityDamageType; // 0x5c	
	int32_t m_iAbilityImmunityType; // 0x60	
	int32_t m_iAbilityDispellableType; // 0x64	
	int32_t m_iFightRecapLevel; // 0x68	
	int32_t m_iTokenTier; // 0x6c	
	item_definition_index_t m_iAssociatedConsumableItemDef; // 0x70	
	uint32_t m_nRequiredEffectsMask; // 0x74	
	int32_t m_iAssociatedEventID; // 0x78	
	int32_t m_iMaxLevel; // 0x7c	
	int32_t m_iItemBaseLevel; // 0x80	
	float m_flItemLevelByGameTime; // 0x84	
	int32_t m_iItemCost; // 0x88	
	int32_t m_iItemInitialCharges; // 0x8c	
	int32_t m_iItemNeutralTierIndex; // 0x90	
	int32_t m_iItemStockMax; // 0x94	
	float m_fItemStockTime; // 0x98	
private:
	[[maybe_unused]] uint8_t __pad009c[0x4]; // 0x9c
public:
	int32* m_pItemShopTagKeys; // 0xa0	
	AbilityID_t m_nRecipeResultAbilityID; // 0xa8	
private:
	[[maybe_unused]] uint8_t __pad00ac[0x4]; // 0xac
public:
	CUtlVector< AbilityID_t > m_vecItemCombinesInto; // 0xb0	
	CUtlVector< ItemRecipe_t > m_vecItemRecipes; // 0xc8	
	int32_t m_nUpgradeGoal; // 0xe0	
	ItemQuality_t m_ItemQuality; // 0xe4	
	float m_flModifierValue; // 0xe8	
	float m_flModifierValueBonus; // 0xec	
	CUtlVector< CUtlString > m_InvalidHeroes; // 0xf0	
private:
	[[maybe_unused]] uint8_t __pad0108[0xcc]; // 0x108
public:
	bool m_bHasScepterUpgrade; // 0x1d4	
	bool m_bHasShardUpgrade; // 0x1d5	
	bool m_bSharedWithTeammates; // 0x1d6	
private:
	[[maybe_unused]] uint8_t __pad01d7[0x1]; // 0x1d7
public:
	int32_t m_nCastRangeBuffer; // 0x1d8	
	int32_t m_nSpecialAbilities; // 0x1dc	
	DOTASpecialAbility_t* m_pSpecialAbilities; // 0x1e0	
	CUtlVector< DOTAOutgoingBonus_t > m_OutgoingBonuses; // 0x1e8	
	char* m_pModelName; // 0x200	
	char* m_pModelAlternateName; // 0x208	
	char* m_pEffectName; // 0x210	
	char* m_pPingOverrideText; // 0x218	
	char* m_pszRequiredCustomShopName; // 0x220	
	char* m_pszLinkedScepterAbility; // 0x228	
	char* m_pszLinkedShardAbility; // 0x230	
	int32_t m_nKillToastOverride; // 0x238	
	int32_t m_iLevelsBetweenUpgrades; // 0x23c	
	int32_t m_iRequiredLevel; // 0x240	
	struct 
	{
		uint8_t m_bIsItem: 1; 		
		uint8_t m_bItemIsRecipe: 1; 		
		uint8_t m_bItemIsRecipeGenerated: 1; 		
		uint8_t m_bItemRecipeConsumesCharges: 1; 		
		uint8_t m_bItemAvailableAtSecretShop: 1; 		
		uint8_t m_bItemAvailableAtGlobalShop: 1; 		
		uint8_t m_bItemAvailableAtSideShop: 1; 		
		uint8_t m_bItemAvailableAtCustomShop: 1; 		
		uint8_t m_bItemIsPureSupport: 1; 		
		uint8_t m_bItemIsPurchasable: 1; 		
		uint8_t m_bItemIsUpgradeable: 1; 		
		uint8_t m_bItemStackable: 1; 		
		uint8_t m_bDisplayAdditionalHeroes: 1; 		
		uint8_t m_bItemContributesToNetWorthWhenDropped: 1; 		
		uint8_t m_bOnCastbar: 1; 		
		uint8_t m_bOnLearnbar: 1; 		
		uint8_t m_bIsGrantedByScepter: 1; 		
		uint8_t m_bIsGrantedByShard: 1; 		
		uint8_t m_bIsCastableWhileHidden: 1; 		
		uint8_t m_bAnimationIgnoresModelScale: 1; 		
		uint8_t m_bIsPlayerSpecificCooldown: 1; 		
		uint8_t m_bIsAllowedInBackpack: 1; 		
		uint8_t m_bIsObsolete: 1; 		
		uint8_t m_bItemRequiresCustomShop: 1; 		
		uint8_t m_bShouldBeSuggested: 1; 		
		uint8_t m_bShouldBeInitiallySuggested: 1; 		
		uint8_t m_bIsAffectedByAoEIncrease: 1; 		
		uint8_t m_bHasCastAnimation: 1; 		
		uint8_t m_bItemHasPassive: 1; 		
		uint8_t m_bDisplayOverheadAlertOnReceived: 1; 		
		uint8_t __pad2: 6;
	}; // 36 bits
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct LeagueID_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("LeagueID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5748
// Has VTable
// 
// MNetworkVarNames "int m_nTotalPausedTicks"
// MNetworkVarNames "int m_nPauseStartTick"
// MNetworkVarNames "int m_nRuneCycle"
// MNetworkVarNames "bool m_bGamePaused"
// MNetworkVarNames "int m_iMiscHeroPickCounter"
// MNetworkVarNames "CHandle< CBaseEntity> m_hEndGameCinematicEntity"
// MNetworkVarNames "CHandle< CDOTA_BaseNPC> m_hOverlayHealthBarUnit"
// MNetworkVarNames "int m_nOverlayHealthBarType"
// MNetworkVarNames "bool m_bIsInCinematicMode"
// MNetworkVarNames "bool m_bFreeCourierMode"
// MNetworkVarNames "uint32 m_unFanfareGoodGuys"
// MNetworkVarNames "uint32 m_unFanfareBadGuys"
// MNetworkVarNames "int m_nGameState"
// MNetworkVarNames "DOTA_HeroPickState m_nHeroPickState"
// MNetworkVarNames "bool m_bAlternateHeroGridsEnabled"
// MNetworkVarNames "GameTime_t m_flStateTransitionTime"
// MNetworkVarNames "float m_flOverride_dota_hero_selection_time"
// MNetworkVarNames "float m_flOverride_dota_pregame_time"
// MNetworkVarNames "float m_flOverride_dota_postgame_time"
// MNetworkVarNames "float m_flOverride_dota_strategy_time"
// MNetworkVarNames "float m_flOverride_dota_team_showcase_duration"
// MNetworkVarNames "float m_flOverride_dota_rune_spawn_time"
// MNetworkVarNames "float m_flShowcaseTime"
// MNetworkVarNames "float m_flNeutralInitialSpawnOffset"
// MNetworkVarNames "int m_iGameMode"
// MNetworkVarNames "CHandle< CBaseEntity> m_hGameModeEntity"
// MNetworkVarNames "CHandle< CBaseEntity> m_hCustomHeroPickRulesEntity"
// MNetworkVarNames "GameTime_t m_flHeroPickStateTransitionTime"
// MNetworkVarNames "uint64 m_iPlayerIDsInControl"
// MNetworkVarNames "bool m_bSameHeroSelectionEnabled"
// MNetworkVarNames "bool m_bUseCustomHeroXPValue"
// MNetworkVarNames "bool m_bUseBaseGoldBountyOnHeroes"
// MNetworkVarNames "bool m_bUseUniversalShopMode"
// MNetworkVarNames "bool m_bHideKillMessageHeaders"
// MNetworkVarNames "float m_flHeroMinimapIconScale"
// MNetworkVarNames "float m_flCreepMinimapIconScale"
// MNetworkVarNames "bool m_bCreepSpawningEnabled"
// MNetworkVarNames "float m_flRuneMinimapIconScale"
// MNetworkVarNames "char m_CustomVictoryMessage"
// MNetworkVarNames "float m_flCustomGameEndDelay"
// MNetworkVarNames "float m_flCustomGameSetupAutoLaunchDelay"
// MNetworkVarNames "float m_flCustomGameSetupTimeout"
// MNetworkVarNames "float m_flCustomVictoryMessageDuration"
// MNetworkVarNames "float m_flHeroSelectPenaltyTime"
// MNetworkVarNames "bool m_bCustomGameSetupAutoLaunchEnabled"
// MNetworkVarNames "bool m_bCustomGameTeamSelectionLocked"
// MNetworkVarNames "bool m_bCustomGameEnablePickRules"
// MNetworkVarNames "bool m_bCustomGameAllowHeroPickMusic"
// MNetworkVarNames "bool m_bCustomGameAllowMusicAtGameStart"
// MNetworkVarNames "bool m_bCustomGameAllowBattleMusic"
// MNetworkVarNames "bool m_bCustomGameDisableIK"
// MNetworkVarNames "bool m_bCustomGameAllowSecondaryAbilitiesOnOtherUnits"
// MNetworkVarNames "int m_iCMModePickBanOrder"
// MNetworkVarNames "int m_iCDModePickBanOrder"
// MNetworkVarNames "int m_nGGTeam"
// MNetworkVarNames "GameTime_t m_flGGEndsAtTime"
// MNetworkVarNames "bool m_bGGCalled"
// MNetworkVarNames "bool m_bWhiteListEnabled"
// MNetworkVarNames "uint64 m_bItemWhiteList"
// MNetworkVarNames "int m_nLastHitUIMode"
// MNetworkVarNames "bool m_bHUDTimerTutorialMode"
// MNetworkVarNames "float m_fExtraTimeRemaining"
// MNetworkVarNames "bool m_bHeroRespawnEnabled"
// MNetworkVarNames "bool m_bIsRandomingEnabled"
// MNetworkVarNames "PlayerID_t m_iCaptainPlayerIDs"
// MNetworkVarNames "int m_BannedHeroes"
// MNetworkVarNames "int m_SelectedHeroes"
// MNetworkVarNames "int m_iActiveTeam"
// MNetworkVarNames "int m_iStartingTeam"
// MNetworkVarNames "int m_iPenaltyLevelRadiant"
// MNetworkVarNames "int m_iPenaltyLevelDire"
// MNetworkVarNames "bool m_bIsLoadingScenario"
// MNetworkVarNames "int m_vecNewBannedHeroes"
// MNetworkVarNames "int m_vecWhitelistedHeroes"
// MNetworkVarNames "int m_vecBlacklistedHeroes"
// MNetworkVarNames "bool m_bHideBlacklistedHeroes"
// MNetworkVarNames "int m_nSeriesType"
// MNetworkVarNames "int m_nRadiantSeriesWins"
// MNetworkVarNames "int m_nDireSeriesWins"
// MNetworkVarNames "CHeroesPerPlayer m_vecAvailableHerosPerPlayerID"
// MNetworkVarNames "CHeroesPerPlayer m_vecLockedHerosByPlayerID"
// MNetworkVarNames "CHeroesPerPlayer m_vecDisabledRandomHerosByPlayerID"
// MNetworkVarNames "int m_iGoodTomeCount"
// MNetworkVarNames "int m_iBadTomeCount"
// MNetworkVarNames "GameTime_t m_flPreGameStartTime"
// MNetworkVarNames "GameTime_t m_flGameStartTime"
// MNetworkVarNames "GameTime_t m_flGameEndTime"
// MNetworkVarNames "float m_flGameLoadTime"
// MNetworkVarNames "int m_iCustomGameScore"
// MNetworkVarNames "int m_nCustomGameDifficulty"
// MNetworkVarNames "GameTime_t m_fGoodGlyphCooldown"
// MNetworkVarNames "GameTime_t m_fBadGlyphCooldown"
// MNetworkVarNames "GameTime_t m_flGlyphCooldowns"
// MNetworkVarNames "GameTime_t m_fGoodRadarCooldown"
// MNetworkVarNames "GameTime_t m_fBadRadarCooldown"
// MNetworkVarNames "GameTime_t m_flRadarCooldowns"
// MNetworkVarNames "int m_iGoodRadarCharges"
// MNetworkVarNames "int m_iBadRadarCharges"
// MNetworkVarNames "int m_iRadarCharges"
// MNetworkVarNames "float m_flOutpostTimes"
// MNetworkVarNames "bool m_bIsNightstalkerNight"
// MNetworkVarNames "bool m_bIsTemporaryNight"
// MNetworkVarNames "bool m_bIsTemporaryDay"
// MNetworkVarNames "int m_nRiverType"
// MNetworkVarNames "PlayerID_t m_nTeamFeaturedPlayerID"
// MNetworkVarNames "item_definition_index_t m_nTeamVersusScreen"
// MNetworkVarNames "CDOTA_ItemStockInfo m_vecItemStockInfo"
// MNetworkVarNames "DOTA_AssassinMinigameNetworkState m_AssassinMiniGameNetData"
// MNetworkVarNames "int m_nGameWinner"
// MNetworkVarNames "MatchID_t m_unMatchID64"
// MNetworkVarNames "bool m_bMatchSignoutComplete"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSideShop1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSideShop2"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSecretShop1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSecretShop2"
// MNetworkVarNames "EHANDLE m_hTeamFountains"
// MNetworkVarNames "EHANDLE m_hTeamForts"
// MNetworkVarNames "EHANDLE m_hTeamShops"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerGood"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerBad"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerSpectator"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerGood_KillingSpree"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerBad_KillingSpree"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerSpectator_KillingSpree"
// MNetworkVarNames "bool m_arrTier1TowerDestroyed"
// MNetworkVarNames "bool m_arrTier2TowerDestroyed"
// MNetworkVarNames "bool m_arrTier3TowerDestroyed"
// MNetworkVarNames "bool m_bTier1TowerDestroyed"
// MNetworkVarNames "bool m_bTier2TowerDestroyed"
// MNetworkVarNames "bool m_bTier3TowerDestroyed"
// MNetworkVarNames "int m_iNetTimeOfDay"
// MNetworkVarNames "int m_nLoadedPlayers"
// MNetworkVarNames "int m_nExpectedPlayers"
// MNetworkVarNames "int m_iMinimapDebugGridState"
// MNetworkVarNames "int m_iFoWFrameNumber"
// MNetworkVarNames "Vector m_vWeatherWindDirection"
// MNetworkVarNames "int m_vecRequiredPlaytestHeroesStorage"
// MNetworkVarNames "int m_vecRecommendedPlaytestHeroesStorage"
// MNetworkVarNames "bool m_bAllRequiredPlaytestHeroesPicked"
// MNetworkVarNames "int m_nLastPlaytestPickPhase"
// MNetworkVarNames "byte m_BotDebugPushLane"
// MNetworkVarNames "byte m_BotDebugDefendLane"
// MNetworkVarNames "byte m_BotDebugFarmLane"
// MNetworkVarNames "byte m_BotDebugRoam"
// MNetworkVarNames "EHANDLE m_hBotDebugRoamTarget"
// MNetworkVarNames "byte m_BotDebugRoshan"
// MNetworkVarNames "ERoshanSpawnPhase m_nRoshanRespawnPhase"
// MNetworkVarNames "GameTime_t m_flRoshanRespawnPhaseEndTime"
// MNetworkVarNames "CDOTA_AbilityDraftAbilityState m_AbilityDraftAbilities"
// MNetworkVarNames "bool m_bAbilityDraftCurrentPlayerHasPicked"
// MNetworkVarNames "int m_nAbilityDraftPlayerTracker"
// MNetworkVarNames "int m_nAbilityDraftRoundNumber"
// MNetworkVarNames "int m_nAbilityDraftAdvanceSteps"
// MNetworkVarNames "int m_nAbilityDraftPhase"
// MNetworkVarNames "int m_nAbilityDraftHeroesChosen"
// MNetworkVarNames "bool m_bIsPlayerDraft"
// MNetworkVarNames "DOTA_PlayerDraftState m_ePlayerDraftState"
// MNetworkVarNames "uint8 m_vecPlayerDraftPickOrder"
// MNetworkVarNames "int m_nPlayerDraftPick"
// MNetworkVarNames "int m_nPlayerDraftActiveTeam"
// MNetworkVarNames "float m_flPlayerDraftTimeBank"
// MNetworkVarNames "int m_nAllDraftPhase"
// MNetworkVarNames "bool m_bAllDraftRadiantFirst"
// MNetworkVarNames "bool m_bAllowOverrideVPK"
// MNetworkVarNames "int m_nARDMHeroesRemaining"
// MNetworkVarNames "bool m_bExperimentalGameplay"
// MNetworkVarNames "uint32 m_lobbyType"
// MNetworkVarNames "LeagueID_t m_lobbyLeagueID"
// MNetworkVarNames "char m_lobbyGameName"
// MNetworkVarNames "CHeroStatueLiked m_vecHeroStatueLiked"
// MNetworkVarNames "int m_CustomGameTeamMaxPlayers"
// MNetworkVarNames "int m_iMutations"
// MNetworkVarNames "CHandle<CIngameEvent_Base> m_vecIngameEvents"
// MNetworkVarNames "int8 m_nPrimaryIngameEventIndex"
// MNetworkVarNames "bool m_bOfrendaEnabled"
// MNetworkVarNames "NeutralSpawnBoxes_t m_NeutralSpawnBoxes"
// MNetworkVarNames "RegionTriggerBoxes_t m_RegionTriggerBoxes"
class CDOTAGameRules : public CMultiplayRules
{
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x90	
private:
	[[maybe_unused]] uint8_t __pad00b8[0x50]; // 0xb8
public:
	// MNetworkEnable
	int32_t m_nTotalPausedTicks; // 0x108	
	// MNetworkEnable
	int32_t m_nPauseStartTick; // 0x10c	
	// MNetworkEnable
	int32_t m_nRuneCycle; // 0x110	
	// MNetworkEnable
	bool m_bGamePaused; // 0x114	
private:
	[[maybe_unused]] uint8_t __pad0115[0x3]; // 0x115
public:
	double m_flPauseTime; // 0x118	
	PlayerID_t m_pausingPlayerId; // 0x120	
	PlayerID_t m_unpausingPlayerId; // 0x124	
	float m_fPauseRawTime; // 0x128	
	float m_fPauseCurTime; // 0x12c	
	float m_fUnpauseRawTime; // 0x130	
	float m_fUnpauseCurTime; // 0x134	
	int32_t m_nPausesRemaining[64]; // 0x138	
	float m_nLastPauseTime[64]; // 0x238	
private:
	[[maybe_unused]] uint8_t __pad0338[0x8]; // 0x338
public:
	// MNetworkEnable
	int32_t m_iMiscHeroPickCounter; // 0x340	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEndGameCinematicEntity; // 0x344	
	CountdownTimer m_EndGameCinematicTimer; // 0x348	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hOverlayHealthBarUnit; // 0x360	
	// MNetworkEnable
	int32_t m_nOverlayHealthBarType; // 0x364	
	// MNetworkEnable
	// MNetworkChangeCallback "OnCinematicModeChanged"
	bool m_bIsInCinematicMode; // 0x368	
	bool m_bIsInClientSideCinematicMode; // 0x369	
	// MNetworkEnable
	bool m_bFreeCourierMode; // 0x36a	
private:
	[[maybe_unused]] uint8_t __pad036b[0x1]; // 0x36b
public:
	int32_t m_nStartingGold; // 0x36c	
	int32_t m_nGoldPerTick; // 0x370	
	float m_flGoldTickTime; // 0x374	
	bool m_bEnableSuggestAbilities; // 0x378	
	bool m_bEnableSuggestItems; // 0x379	
private:
	[[maybe_unused]] uint8_t __pad037a[0x1e]; // 0x37a
public:
	// MNetworkEnable
	uint32_t m_unFanfareGoodGuys; // 0x398	
	// MNetworkEnable
	uint32_t m_unFanfareBadGuys; // 0x39c	
	GameTime_t m_flFanfareTime; // 0x3a0	
	bool m_bSpeechUseSpawnInsteadOfRespawnConcept; // 0x3a4	
	bool m_bSpeechSendTeamSpeaksToSpectators; // 0x3a5	
	bool m_bIgnoreLobbyTeamsInCustomGames; // 0x3a6	
private:
	[[maybe_unused]] uint8_t __pad03a7[0x1]; // 0x3a7
public:
	int32_t m_nCustomGameBansPerTeam; // 0x3a8	
	int32_t m_iFOWDefeatedTempViewer; // 0x3ac	
private:
	[[maybe_unused]] uint8_t __pad03b0[0x48]; // 0x3b0
public:
	// MNetworkEnable
	int32_t m_nGameState; // 0x3f8	
	// MNetworkEnable
	DOTA_HeroPickState m_nHeroPickState; // 0x3fc	
	// MNetworkEnable
	bool m_bAlternateHeroGridsEnabled; // 0x400	
private:
	[[maybe_unused]] uint8_t __pad0401[0x3]; // 0x401
public:
	// MNetworkEnable
	GameTime_t m_flStateTransitionTime; // 0x404	
	// MNetworkEnable
	float m_flOverride_dota_hero_selection_time; // 0x408	
	// MNetworkEnable
	float m_flOverride_dota_pregame_time; // 0x40c	
	// MNetworkEnable
	float m_flOverride_dota_postgame_time; // 0x410	
	// MNetworkEnable
	float m_flOverride_dota_strategy_time; // 0x414	
	// MNetworkEnable
	float m_flOverride_dota_team_showcase_duration; // 0x418	
	// MNetworkEnable
	float m_flOverride_dota_rune_spawn_time; // 0x41c	
	// MNetworkEnable
	float m_flShowcaseTime[15]; // 0x420	
	// MNetworkEnable
	float m_flNeutralInitialSpawnOffset; // 0x45c	
	float m_flOverride_dota_tree_regrow_time; // 0x460	
	// MNetworkEnable
	int32_t m_iGameMode; // 0x464	
	// MNetworkEnable
	// MNetworkChangeCallback "OnGameModeEntityChanged"
	CHandle< CBaseEntity > m_hGameModeEntity; // 0x468	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hCustomHeroPickRulesEntity; // 0x46c	
	// MNetworkEnable
	GameTime_t m_flHeroPickStateTransitionTime; // 0x470	
private:
	[[maybe_unused]] uint8_t __pad0474[0x4]; // 0x474
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_iPlayerIDsInControl; // 0x478	
	// MNetworkEnable
	bool m_bSameHeroSelectionEnabled; // 0x480	
	// MNetworkEnable
	bool m_bUseCustomHeroXPValue; // 0x481	
	// MNetworkEnable
	bool m_bUseBaseGoldBountyOnHeroes; // 0x482	
	// MNetworkEnable
	bool m_bUseUniversalShopMode; // 0x483	
	// MNetworkEnable
	bool m_bHideKillMessageHeaders; // 0x484	
private:
	[[maybe_unused]] uint8_t __pad0485[0x3]; // 0x485
public:
	// MNetworkEnable
	float m_flHeroMinimapIconScale; // 0x488	
	// MNetworkEnable
	float m_flCreepMinimapIconScale; // 0x48c	
	// MNetworkEnable
	bool m_bCreepSpawningEnabled; // 0x490	
private:
	[[maybe_unused]] uint8_t __pad0491[0x3]; // 0x491
public:
	// MNetworkEnable
	float m_flRuneMinimapIconScale; // 0x494	
	// MNetworkEnable
	char m_CustomVictoryMessage[256]; // 0x498	
	// MNetworkEnable
	float m_flCustomGameEndDelay; // 0x598	
	// MNetworkEnable
	float m_flCustomGameSetupAutoLaunchDelay; // 0x59c	
	// MNetworkEnable
	float m_flCustomGameSetupTimeout; // 0x5a0	
	// MNetworkEnable
	float m_flCustomVictoryMessageDuration; // 0x5a4	
	// MNetworkEnable
	float m_flHeroSelectPenaltyTime; // 0x5a8	
	// MNetworkEnable
	bool m_bCustomGameSetupAutoLaunchEnabled; // 0x5ac	
	// MNetworkEnable
	bool m_bCustomGameTeamSelectionLocked; // 0x5ad	
	// MNetworkEnable
	bool m_bCustomGameEnablePickRules; // 0x5ae	
	// MNetworkEnable
	bool m_bCustomGameAllowHeroPickMusic; // 0x5af	
	// MNetworkEnable
	bool m_bCustomGameAllowMusicAtGameStart; // 0x5b0	
	// MNetworkEnable
	bool m_bCustomGameAllowBattleMusic; // 0x5b1	
	// MNetworkEnable
	bool m_bCustomGameDisableIK; // 0x5b2	
	// MNetworkEnable
	bool m_bCustomGameAllowSecondaryAbilitiesOnOtherUnits; // 0x5b3	
	// MNetworkEnable
	int32_t m_iCMModePickBanOrder; // 0x5b4	
	// MNetworkEnable
	int32_t m_iCDModePickBanOrder; // 0x5b8	
	// MNetworkEnable
	int32_t m_nGGTeam; // 0x5bc	
	// MNetworkEnable
	GameTime_t m_flGGEndsAtTime; // 0x5c0	
	// MNetworkEnable
	bool m_bGGCalled; // 0x5c4	
	// MNetworkEnable
	bool m_bWhiteListEnabled; // 0x5c5	
private:
	[[maybe_unused]] uint8_t __pad05c6[0x2]; // 0x5c6
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnWhitelistChanged"
	uint64_t m_bItemWhiteList[4]; // 0x5c8	
	// MNetworkEnable
	int32_t m_nLastHitUIMode; // 0x5e8	
	// MNetworkEnable
	bool m_bHUDTimerTutorialMode; // 0x5ec	
private:
	[[maybe_unused]] uint8_t __pad05ed[0x3]; // 0x5ed
public:
	CountdownTimer m_HeroPickMiscTimer; // 0x5f0	
	CountdownTimer m_ExtraTimeTimer; // 0x608	
	// MNetworkEnable
	float m_fExtraTimeRemaining[2]; // 0x620	
	// MNetworkEnable
	bool m_bHeroRespawnEnabled; // 0x628	
	// MNetworkEnable
	bool m_bIsRandomingEnabled; // 0x629	
private:
	[[maybe_unused]] uint8_t __pad062a[0x6]; // 0x62a
public:
	CUtlVector< int32 > m_HeroPickPhaseBitfield; // 0x630	
	bool m_bHasSwapped[64]; // 0x648	
	// MNetworkEnable
	PlayerID_t m_iCaptainPlayerIDs[2]; // 0x688	
	// MNetworkEnable
	int32_t m_BannedHeroes[24]; // 0x690	
	// MNetworkEnable
	int32_t m_SelectedHeroes[24]; // 0x6f0	
	// MNetworkEnable
	int32_t m_iActiveTeam; // 0x750	
	// MNetworkEnable
	int32_t m_iStartingTeam; // 0x754	
	// MNetworkEnable
	int32_t m_iPenaltyLevelRadiant; // 0x758	
	// MNetworkEnable
	int32_t m_iPenaltyLevelDire; // 0x75c	
	// MNetworkEnable
	bool m_bIsLoadingScenario; // 0x760	
private:
	[[maybe_unused]] uint8_t __pad0761[0x7]; // 0x761
public:
	CUtlVector< int32 > m_vecBanNominatedHeroes; // 0x768	
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecNewBannedHeroes; // 0x780	
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecWhitelistedHeroes; // 0x798	
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecBlacklistedHeroes; // 0x7b0	
	// MNetworkEnable
	bool m_bHideBlacklistedHeroes; // 0x7c8	
private:
	[[maybe_unused]] uint8_t __pad07c9[0x3]; // 0x7c9
public:
	// MNetworkEnable
	int32_t m_nSeriesType; // 0x7cc	
	// MNetworkEnable
	int32_t m_nRadiantSeriesWins; // 0x7d0	
	// MNetworkEnable
	int32_t m_nDireSeriesWins; // 0x7d4	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CHeroesPerPlayer > m_vecAvailableHerosPerPlayerID; // 0x7d8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CHeroesPerPlayer > m_vecLockedHerosByPlayerID; // 0x848	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CHeroesPerPlayer > m_vecDisabledRandomHerosByPlayerID; // 0x8b8	
	int32_t m_CustomGameForceSelectHero[24]; // 0x928	
	float m_flGoldTime; // 0x988	
	float m_flXPTime; // 0x98c	
	GameTime_t m_flCreepSpawntime; // 0x990	
	float m_flAnnounceStartTime; // 0x994	
	// MNetworkEnable
	int32_t m_iGoodTomeCount; // 0x998	
	// MNetworkEnable
	int32_t m_iBadTomeCount; // 0x99c	
	// MNetworkEnable
	GameTime_t m_flPreGameStartTime; // 0x9a0	
	// MNetworkEnable
	GameTime_t m_flGameStartTime; // 0x9a4	
	// MNetworkEnable
	GameTime_t m_flGameEndTime; // 0x9a8	
	// MNetworkEnable
	float m_flGameLoadTime; // 0x9ac	
	// MNetworkEnable
	int32_t m_iCustomGameScore[2]; // 0x9b0	
	// MNetworkEnable
	int32_t m_nCustomGameDifficulty; // 0x9b8	
	bool m_bEnemyModifiersEnabled; // 0x9bc	
private:
	[[maybe_unused]] uint8_t __pad09bd[0x3]; // 0x9bd
public:
	int32_t m_iWaves; // 0x9c0	
	int32_t m_iCreepUpgradeState; // 0x9c4	
	// MNetworkEnable
	GameTime_t m_fGoodGlyphCooldown; // 0x9c8	
	// MNetworkEnable
	GameTime_t m_fBadGlyphCooldown; // 0x9cc	
	// MNetworkEnable
	GameTime_t m_flGlyphCooldowns[15]; // 0x9d0	
	// MNetworkEnable
	GameTime_t m_fGoodRadarCooldown; // 0xa0c	
	// MNetworkEnable
	GameTime_t m_fBadRadarCooldown; // 0xa10	
	// MNetworkEnable
	GameTime_t m_flRadarCooldowns[15]; // 0xa14	
	// MNetworkEnable
	int32_t m_iGoodRadarCharges; // 0xa50	
	// MNetworkEnable
	int32_t m_iBadRadarCharges; // 0xa54	
	// MNetworkEnable
	int32_t m_iRadarCharges[15]; // 0xa58	
	// MNetworkEnable
	float m_flOutpostTimes[24]; // 0xa94	
	// MNetworkEnable
	bool m_bIsNightstalkerNight; // 0xaf4	
	// MNetworkEnable
	bool m_bIsTemporaryNight; // 0xaf5	
	// MNetworkEnable
	bool m_bIsTemporaryDay; // 0xaf6	
private:
	[[maybe_unused]] uint8_t __pad0af7[0x1]; // 0xaf7
public:
	// MNetworkEnable
	int32_t m_nRiverType; // 0xaf8	
	// MNetworkEnable
	PlayerID_t m_nTeamFeaturedPlayerID[15]; // 0xafc	
	// MNetworkEnable
	item_definition_index_t m_nTeamVersusScreen[15]; // 0xb38	
	float m_flGoldRedistributeTime; // 0xb74	
	int32_t m_nGoldToRedistribute[2]; // 0xb78	
	GameTime_t m_flNextPreGameThink; // 0xb80	
	GameTime_t m_flNextAllDraftGoldThink; // 0xb84	
	double m_flTimeEnteredState; // 0xb88	
	uint32_t m_unRiverAccountID; // 0xb90	
private:
	[[maybe_unused]] uint8_t __pad0b94[0x4]; // 0xb94
public:
	itemid_t m_ulRiverItemID; // 0xb98	
private:
	[[maybe_unused]] uint8_t __pad0ba0[0x40]; // 0xba0
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTA_ItemStockInfo > m_vecItemStockInfo; // 0xbe0	
	// MNetworkEnable
	DOTA_AssassinMinigameNetworkState m_AssassinMiniGameNetData; // 0xc50	
	// MNetworkEnable
	int32_t m_nGameWinner; // 0xc60	
private:
	[[maybe_unused]] uint8_t __pad0c64[0x4]; // 0xc64
public:
	// MNetworkEnable
	MatchID_t m_unMatchID64; // 0xc68	
	// MNetworkEnable
	bool m_bMatchSignoutComplete; // 0xc70	
private:
	[[maybe_unused]] uint8_t __pad0c71[0x3]; // 0xc71
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSideShop1; // 0xc74	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSideShop2; // 0xc78	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSecretShop1; // 0xc7c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSecretShop2; // 0xc80	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTeamFountains[15]; // 0xc84	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTeamForts[15]; // 0xcc0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTeamShops[15]; // 0xcfc	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerGood; // 0xd38	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerBad; // 0xd3c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerSpectator; // 0xd40	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerGood_KillingSpree; // 0xd44	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerBad_KillingSpree; // 0xd48	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerSpectator_KillingSpree; // 0xd4c	
	// MNetworkEnable
	bool m_arrTier1TowerDestroyed[15]; // 0xd50	
	// MNetworkEnable
	bool m_arrTier2TowerDestroyed[15]; // 0xd5f	
	// MNetworkEnable
	bool m_arrTier3TowerDestroyed[15]; // 0xd6e	
	// MNetworkEnable
	bool m_bTier1TowerDestroyed; // 0xd7d	
	// MNetworkEnable
	bool m_bTier2TowerDestroyed; // 0xd7e	
	// MNetworkEnable
	bool m_bTier3TowerDestroyed; // 0xd7f	
	float m_fTimeOfDay; // 0xd80	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iNetTimeOfDay; // 0xd84	
	// MNetworkEnable
	int32_t m_nLoadedPlayers; // 0xd88	
	// MNetworkEnable
	int32_t m_nExpectedPlayers; // 0xd8c	
private:
	[[maybe_unused]] uint8_t __pad0d90[0x8]; // 0xd90
public:
	// MNetworkEnable
	int32_t m_iMinimapDebugGridState; // 0xd98	
private:
	[[maybe_unused]] uint8_t __pad0d9c[0x7c]; // 0xd9c
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iFoWFrameNumber; // 0xe18	
	// MNetworkEnable
	Vector m_vWeatherWindDirection; // 0xe1c	
	KeyValues* m_pKVPostGameTable; // 0xe28	
	KeyValues* m_pKVEventMatchMetadata; // 0xe30	
	KeyValues* m_pKVEventSignout; // 0xe38	
private:
	[[maybe_unused]] uint8_t __pad0e40[0x58]; // 0xe40
public:
	// MNetworkEnable
	int32_t m_vecRequiredPlaytestHeroesStorage[24]; // 0xe98	
	// MNetworkEnable
	int32_t m_vecRecommendedPlaytestHeroesStorage[24]; // 0xef8	
	// MNetworkEnable
	bool m_bAllRequiredPlaytestHeroesPicked; // 0xf58	
private:
	[[maybe_unused]] uint8_t __pad0f59[0x3]; // 0xf59
public:
	// MNetworkEnable
	int32_t m_nLastPlaytestPickPhase; // 0xf5c	
	int32_t m_nCustomGameFowTeamCount; // 0xf60	
	bool m_bUseAlternateABRules; // 0xf64	
	bool m_bLobbyIsAssociatedWithGame; // 0xf65	
private:
	[[maybe_unused]] uint8_t __pad0f66[0x2]; // 0xf66
public:
	CountdownTimer m_BotDebugTimer; // 0xf68	
	// MNetworkEnable
	// MNetworkPriority "48"
	uint8_t m_BotDebugPushLane[18]; // 0xf80	
	// MNetworkEnable
	uint8_t m_BotDebugDefendLane[18]; // 0xf92	
	// MNetworkEnable
	uint8_t m_BotDebugFarmLane[6]; // 0xfa4	
	// MNetworkEnable
	uint8_t m_BotDebugRoam[8]; // 0xfaa	
private:
	[[maybe_unused]] uint8_t __pad0fb2[0x2]; // 0xfb2
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBotDebugRoamTarget[2]; // 0xfb4	
	// MNetworkEnable
	uint8_t m_BotDebugRoshan[2]; // 0xfbc	
private:
	[[maybe_unused]] uint8_t __pad0fbe[0x2]; // 0xfbe
public:
	// MNetworkEnable
	ERoshanSpawnPhase m_nRoshanRespawnPhase; // 0xfc0	
	// MNetworkEnable
	GameTime_t m_flRoshanRespawnPhaseEndTime; // 0xfc4	
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTA_AbilityDraftAbilityState[MAX_ABILITY_DRAFT_ABILITIES]"
	CUtlVectorEmbeddedNetworkVar< CDOTA_AbilityDraftAbilityState > m_AbilityDraftAbilities; // 0xfc8	
	// MNetworkEnable
	bool m_bAbilityDraftCurrentPlayerHasPicked; // 0x1038	
private:
	[[maybe_unused]] uint8_t __pad1039[0x3]; // 0x1039
public:
	// MNetworkEnable
	int32_t m_nAbilityDraftPlayerTracker; // 0x103c	
	// MNetworkEnable
	int32_t m_nAbilityDraftRoundNumber; // 0x1040	
	// MNetworkEnable
	int32_t m_nAbilityDraftAdvanceSteps; // 0x1044	
	// MNetworkEnable
	int32_t m_nAbilityDraftPhase; // 0x1048	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityDraftHeroesChanged"
	int32_t m_nAbilityDraftHeroesChosen[13]; // 0x104c	
	// MNetworkEnable
	bool m_bIsPlayerDraft; // 0x1080	
private:
	[[maybe_unused]] uint8_t __pad1081[0x3]; // 0x1081
public:
	// MNetworkEnable
	DOTA_PlayerDraftState m_ePlayerDraftState; // 0x1084	
	// MNetworkEnable
	CNetworkUtlVectorBase< uint8 > m_vecPlayerDraftPickOrder; // 0x1088	
	// MNetworkEnable
	int32_t m_nPlayerDraftPick; // 0x10a0	
	// MNetworkEnable
	int32_t m_nPlayerDraftActiveTeam; // 0x10a4	
	// MNetworkEnable
	float m_flPlayerDraftTimeBank[2]; // 0x10a8	
	CUtlVector< KeyValues* > m_vecARDMHeroes[2]; // 0x10b0	
	int32_t m_nARDMHeroesPrecached; // 0x10e0	
	float m_fLastARDMPrecache; // 0x10e4	
	// MNetworkEnable
	int32_t m_nAllDraftPhase; // 0x10e8	
	// MNetworkEnable
	bool m_bAllDraftRadiantFirst; // 0x10ec	
	// MNetworkEnable
	bool m_bAllowOverrideVPK; // 0x10ed	
private:
	[[maybe_unused]] uint8_t __pad10ee[0x2]; // 0x10ee
public:
	// MNetworkEnable
	int32_t m_nARDMHeroesRemaining[2]; // 0x10f0	
	CUtlVector< CHandle< CDOTA_BaseNPC_Pet > > m_hGlobalPetList; // 0x10f8	
private:
	[[maybe_unused]] uint8_t __pad1110[0x50]; // 0x1110
public:
	int32_t m_nRadiantRoshanKills; // 0x1160	
	int32_t m_nDireRoshanKills; // 0x1164	
	int32_t m_nRoshanKillsDay; // 0x1168	
	int32_t m_nRoshanKillsNight; // 0x116c	
	int32_t m_nTormentorKills; // 0x1170	
	int32_t m_nOutpostCaptures; // 0x1174	
private:
	[[maybe_unused]] uint8_t __pad1178[0xc]; // 0x1178
public:
	int32_t m_nDistanceCalculations; // 0x1184	
	bool m_bLaneVictoryPredicted; // 0x1188	
private:
	[[maybe_unused]] uint8_t __pad1189[0x7]; // 0x1189
public:
	CUtlOrderedMap< PlayerID_t, int32, F( size=1 ) > m_mapSuccessfulSmokes; // 0x1190	
private:
	[[maybe_unused]] uint8_t __pad11b8[0x10]; // 0x11b8
public:
	// MNetworkEnable
	bool m_bExperimentalGameplay; // 0x11c8	
private:
	[[maybe_unused]] uint8_t __pad11c9[0x1f]; // 0x11c9
public:
	CUtlVector< HeroPickRecord_t > m_vecHeroPickRecord; // 0x11e8	
private:
	[[maybe_unused]] uint8_t __pad1200[0x20]; // 0x1200
public:
	CUtlVector< HeroDeathRecord_t > m_vecHeroDeathRecord; // 0x1220	
private:
	[[maybe_unused]] uint8_t __pad1238[0x18]; // 0x1238
public:
	CUtlVector< CHandle< CBaseEntity > > m_BadResultPositionTriggers; // 0x1250	
	CUtlVector< CHandle< CBaseEntity > > m_RoshanPositionTriggers; // 0x1268	
	CUtlVector< HeroPickRecord_t > m_vecAllDraftHeroPickRecord; // 0x1280	
	CUtlOrderedMap< PlayerID_t, CUtlVector< AbilityID_t >, F( size=1 ) > m_vecAbilityDraftOrder; // 0x1298	
private:
	[[maybe_unused]] uint8_t __pad12c0[0x18]; // 0x12c0
public:
	int32_t m_nAllDraftHeroPickCollisionsThisPhase; // 0x12d8	
private:
	[[maybe_unused]] uint8_t __pad12dc[0x4]; // 0x12dc
public:
	CUtlVector< CHandle< CBaseEntity > > m_hRuneSpawners; // 0x12e0	
	CUtlVector< CHandle< CBaseEntity > > m_hBountyRuneSpawners; // 0x12f8	
	CUtlVector< CHandle< CBaseEntity > > m_hXPRuneSpawners; // 0x1310	
	CUtlVector< CHandle< CBaseEntity > > m_hNeutralSpawners[2]; // 0x1328	
	int32_t m_iPreviousRune1; // 0x1358	
	int32_t m_iPreviousRune2; // 0x135c	
	CUtlVector< int32 > m_vecAvailableRunes; // 0x1360	
	float m_fNextPowerupRuneSpawnTime; // 0x1378	
	float m_fNextBountyRuneSpawnTime; // 0x137c	
	float m_fNextBountyRunePrepTime; // 0x1380	
	float m_fNextXPRuneSpawnTime; // 0x1384	
	bool m_aNeutralChoicesLoaded[5]; // 0x1388	
	bool m_bFirstPowerupRune; // 0x138d	
	bool m_bFirstBountyRune; // 0x138e	
	bool m_bFilterMoreGold; // 0x138f	
	bool m_bAllowOutpostXP; // 0x1390	
private:
	[[maybe_unused]] uint8_t __pad1391[0x3]; // 0x1391
public:
	CHandle< CBaseEntity > m_hRoshanSpawner; // 0x1394	
	int32_t m_iPreviousSpectators; // 0x1398	
	uint32_t m_nMaxSpectators; // 0x139c	
	CUtlVector< CHandle< CBaseEntity > > m_hDroppedItems; // 0x13a0	
	CUtlVector< CHandle< CBaseEntity > > m_hWards; // 0x13b8	
	CHandle< CBaseEntity > m_hGameEvents; // 0x13d0	
private:
	[[maybe_unused]] uint8_t __pad13d4[0x1c]; // 0x13d4
public:
	CUtlVector< CHandle< CBaseEntity > > m_Towers; // 0x13f0	
	CUtlVector< CHandle< CDOTA_BaseNPC_Tower > > m_TeamTowers[10]; // 0x1408	
	CUtlVector< CHandle< CBaseEntity > > m_Outposts; // 0x14f8	
	CUtlVector< Vector > m_TeamTowerPositions[10]; // 0x1510	
	CUtlVector< int32 > m_TeamTowerLevels[10]; // 0x1600	
	CUtlVector< int32 > m_TeamTowerLanes[10]; // 0x16f0	
	CUtlVector< CHandle< CDOTA_BaseNPC_Building > > m_TeamBarracks[10]; // 0x17e0	
	CUtlVector< CHandle< CDOTA_BaseNPC_Building > > m_TeamShrines[10]; // 0x18d0	
	CountdownTimer m_TempDayTimer; // 0x19c0	
	CountdownTimer m_TempNightTimer; // 0x19d8	
	CountdownTimer m_NightstalkerNightTimer; // 0x19f0	
	CountdownTimer m_TempRiverTimer; // 0x1a08	
	bool m_bUseLenientAFK[2]; // 0x1a20	
	bool m_bFirstBlood; // 0x1a22	
private:
	[[maybe_unused]] uint8_t __pad1a23[0x1]; // 0x1a23
public:
	int32_t m_nFirstBloodTime; // 0x1a24	
	CountdownTimer m_CheckIdleTimer; // 0x1a28	
	PlayerID_t m_nAnnounceHeroPickRadiantPlayerID; // 0x1a40	
	PlayerID_t m_nAnnounceHeroPickDirePlayerID; // 0x1a44	
	CUtlString m_pszLastUsedAbility[64]; // 0x1a48	
	CUtlVector< CDOTA_ReconnectInfo > m_reconnectinfos; // 0x1c48	
	CUtlVector< CHandle< CBaseEntity > > m_hEnemyCreepsInBase[10]; // 0x1c60	
	bool m_bTeamHasAbandonedPlayer[10]; // 0x1d50	
	bool m_bLobbyHasLeaverDetected; // 0x1d5a	
	bool m_bGameIsForcedSafeToLeave; // 0x1d5b	
	bool m_bLobbyHasDicardMatchResults; // 0x1d5c	
private:
	[[maybe_unused]] uint8_t __pad1d5d[0x3]; // 0x1d5d
public:
	int32_t m_iGameEndReason; // 0x1d60	
	bool m_bNotifiedPlayerLeaverStatus[64]; // 0x1d64	
	bool m_bUploadedReplay; // 0x1da4	
private:
	[[maybe_unused]] uint8_t __pad1da5[0x3]; // 0x1da5
public:
	float m_flLobbyWaitTime; // 0x1da8	
	bool m_bGameWasLoaded; // 0x1dac	
private:
	[[maybe_unused]] uint8_t __pad1dad[0x3]; // 0x1dad
public:
	int32_t m_nLoadPauseFrameCount; // 0x1db0	
private:
	[[maybe_unused]] uint8_t __pad1db4[0x4]; // 0x1db4
public:
	double m_flStateFallbackTransitionTime; // 0x1db8	
	EngineCountdownTimer m_timerFinishReplay; // 0x1dc0	
	CUtlVector< GameChatLogEntry_t > m_vecChatLog; // 0x1dd8	
private:
	[[maybe_unused]] uint8_t __pad1df0[0x2658]; // 0x1df0
public:
	bool m_bFatalErrorAbortGame; // 0x4448	
	bool m_bFillEmptySlotsWithBots; // 0x4449	
private:
	[[maybe_unused]] uint8_t __pad444a[0x2]; // 0x444a
public:
	uint32_t m_dotaMapSpawnGroup; // 0x444c	
private:
	[[maybe_unused]] uint8_t __pad4450[0x28]; // 0x4450
public:
	// MNetworkEnable
	uint32_t m_lobbyType; // 0x4478	
	// MNetworkEnable
	LeagueID_t m_lobbyLeagueID; // 0x447c	
	// MNetworkEnable
	char m_lobbyGameName[256]; // 0x4480	
	// MNetworkEnable
	// MNetworkChangeCallback "OnHeroStatueLiked"
	CUtlVectorEmbeddedNetworkVar< CHeroStatueLiked > m_vecHeroStatueLiked; // 0x4580	
	// MNetworkEnable
	int32_t m_CustomGameTeamMaxPlayers[15]; // 0x45f0	
private:
	[[maybe_unused]] uint8_t __pad462c[0x3c]; // 0x462c
public:
	// MNetworkEnable
	int32_t m_iMutations[5]; // 0x4668	
private:
	[[maybe_unused]] uint8_t __pad467c[0x4]; // 0x467c
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CIngameEvent_Base > > m_vecIngameEvents; // 0x4680	
	// MNetworkEnable
	int8_t m_nPrimaryIngameEventIndex; // 0x4698	
private:
	[[maybe_unused]] uint8_t __pad4699[0x3]; // 0x4699
public:
	uint32_t m_nOfrendaPledges; // 0x469c	
	uint32_t m_nRadiantOfrendas; // 0x46a0	
	uint32_t m_nDireOfrendas; // 0x46a4	
	// MNetworkEnable
	bool m_bOfrendaEnabled; // 0x46a8	
private:
	[[maybe_unused]] uint8_t __pad46a9[0x7]; // 0x46a9
public:
	CUtlVector< sMuertaPartingShotSoulDef > m_vecMuertaPartingShotSouls; // 0x46b0	
private:
	[[maybe_unused]] uint8_t __pad46c8[0x18]; // 0x46c8
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< NeutralSpawnBoxes_t > m_NeutralSpawnBoxes; // 0x46e0	
	// MNetworkEnable
	CNetworkUtlVectorBase< RegionTriggerBoxes_t > m_RegionTriggerBoxes; // 0x46f8	
	double m_flLastItemSuggestionRequestTime[15]; // 0x4710	
private:
	[[maybe_unused]] uint8_t __pad4788[0xfb8]; // 0x4788
public:
	double m_flLastPerfSampleTime; // 0x5740	
	
	// Static fields:
	static int32_t &Get_s_GameStateTransitionsIndex(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTAGameRules")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyPeriod_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyPeriod_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 2
// Size: 0x2
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct LeagueNodeID_t
{
public:
	uint16_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("LeagueNodeID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 2
// Size: 0x2
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct LeagueNodeGroupID_t
{
public:
	uint16_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("LeagueNodeGroupID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct GuildID_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("GuildID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct PeriodicResourceID_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("PeriodicResourceID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct ChatWheelMessageID_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("ChatWheelMessageID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct PingWheelMessageID_t
{
public:
	uint32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("PingWheelMessageID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x148
// Has VTable
// 
// MNetworkVarNames "char m_LocalizationStr"
// MNetworkVarNames "CHandle< CBaseEntity> m_hNPC"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "float m_flDuration"
// MNetworkVarNames "uint32 m_unOffsetX"
// MNetworkVarNames "uint32 m_unOffsetY"
// MNetworkVarNames "uint16 m_unCount"
class CSpeechBubbleInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	char m_LocalizationStr[256]; // 0x30	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hNPC; // 0x130	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x134	
	// MNetworkEnable
	float m_flDuration; // 0x138	
	// MNetworkEnable
	uint32_t m_unOffsetX; // 0x13c	
	// MNetworkEnable
	uint32_t m_unOffsetY; // 0x140	
	// MNetworkEnable
	uint16_t m_unCount; // 0x144	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
class CUnitOrders
{
public:
	CUtlVector< CEntityIndex > m_nUnits; // 0x0	
	Vector m_vPosition; // 0x18	
	PlayerID_t m_nIssuerPlayerIndex; // 0x24	
	int32_t m_nOrderSequenceNumber; // 0x28	
	int32_t m_nOrderType; // 0x2c	
	CEntityIndex m_nTargetIndex; // 0x30	
	CEntityIndex m_nAbilityIndex; // 0x34	
	uint32_t m_nFlags; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
struct WeightedAbilitySuggestion_t
{
public:
	// MNetworkEnable
	AbilityID_t nSuggestion; // 0x0	
	// MNetworkEnable
	float fWeight; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Constructor
// Has Trivial Destructor
struct WeightedSuggestion_t
{
public:
	// MNetworkEnable
	int32_t nSuggestion; // 0x0	
	// MNetworkEnable
	float fWeight; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xe0
class CDOTA_AttackRecord
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CHandle< CBaseEntity > m_hSource; // 0x8	
	CHandle< CDOTABaseAbility > m_hInflictor; // 0xc	
	CHandle< CBaseEntity > m_hTarget; // 0x10	
	CHandle< CBaseEntity > m_hProjectileSource; // 0x14	
	float m_flDamage; // 0x18	
	float m_flOriginalDamage; // 0x1c	
	float m_flDamagePhysical; // 0x20	
	float m_flDamagePhysical_IllusionDisplay; // 0x24	
	float m_flDamageMagical; // 0x28	
	float m_flDamageComposite; // 0x2c	
	float m_flDamagePure; // 0x30	
	int16_t m_iRecord; // 0x34	
private:
	[[maybe_unused]] uint8_t __pad0036[0x2]; // 0x36
public:
	int32_t m_iDamageCategory; // 0x38	
	int32_t m_iFailType; // 0x3c	
	int32_t m_iDamageType; // 0x40	
	int32_t m_iFlags; // 0x44	
	int32_t m_animation; // 0x48	
private:
	[[maybe_unused]] uint8_t __pad004c[0x4]; // 0x4c
public:
	CDOTA_Orb* m_pOrb; // 0x50	
	CDOTA_Orb* m_pOrb2; // 0x58	
	struct 
	{
		uint8_t m_bAttack: 1; 		
		uint8_t m_bRangedAttack: 1; 		
		uint8_t m_bDirectionalRangedAttack: 1; 		
		uint8_t m_bSkipRangeCheck: 1; 		
		uint8_t m_bFakeAttack: 1; 		
		uint8_t m_bNeverMiss: 1; 		
		uint8_t m_bLethalAttack: 1; 		
		uint8_t m_bTriggeredAttack: 1; 		
		uint8_t m_bNoCooldown: 1; 		
		uint8_t m_bProcessProcs: 1; 		
		uint8_t m_bUseProjectile: 1; 		
		uint8_t m_bUseCastAttackOrb: 1; 		
		uint8_t m_bAutoCastAttack: 1; 		
		uint8_t m_bIgnoreBaseArmor: 1; 		
		uint8_t m_bIgnoreObstructions: 1; 		
		uint8_t m_bSuppressAttackSounds: 1; 		
		uint8_t m_bSuppressDamageSounds: 1; 		
		uint8_t m_bSuppressDamageEffects: 1; 		
		uint128_t __pad3: 78;
	}; // 96 bits
	int32_t m_nBashSource; // 0x64	
	float m_flAttackHeight; // 0x68	
	float m_flCombatLogCreditFactor; // 0x6c	
	float m_flCriticalBonus; // 0x70	
	float m_flCriticalDamage; // 0x74	
	float m_flCriticalDisplay; // 0x78	
	float m_flDeadlyBlowBonus; // 0x7c	
	float m_flDeadlyBlowDamage; // 0x80	
	float m_flDeadlyBlowDisplay; // 0x84	
	int32_t m_iProjectileSpeed; // 0x88	
	Vector m_vForceDirectionOverride; // 0x8c	
	Vector m_vTargetLoc; // 0x98	
	Vector m_vBlockLoc; // 0xa4	
	CUtlSymbolLarge m_iszAutoAttackRangedParticle; // 0xb0	
private:
	[[maybe_unused]] uint8_t __pad00b8[0x8]; // 0xb8
public:
	ParticleIndex_t m_iCustomFXIndex; // 0xc0	
	DOTAProjectileAttachment_t m_iCustomProjectileAttachment; // 0xc4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x20
class sSpiritInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x4]; // 0x0
public:
	Vector vTargetLoc; // 0x4	
	CHandle< CBaseEntity > hTarget; // 0x10	
	bool bHit; // 0x14	
private:
	[[maybe_unused]] uint8_t __pad0015[0x3]; // 0x15
public:
	int32_t iHealAmount; // 0x18	
	ParticleIndex_t nFXAmbientIndex; // 0x1c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
class sSpiritDef
{
public:
	CDOTA_BaseNPC* pSpirit; // 0x0	
	ParticleIndex_t nSpiritFXIndex; // 0x8	
	int32_t nSpiritState; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
class sSharedCooldownInfo
{
public:
	CUtlString cooldownName; // 0x0	
	float cooldownLength; // 0x8	
	GameTime_t cooldownTime; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xd8
// Has VTable
// 
// MNetworkExcludeByName "m_hInventoryParent"
// MNetworkVarNames "EHANDLE m_hItems"
// MNetworkVarNames "int m_iParity"
// MNetworkVarNames "EHANDLE m_hInventoryParent"
// MNetworkVarNames "bool m_bStashEnabled"
// MNetworkVarNames "EHANDLE m_hTransientCastItem"
class CDOTA_UnitInventory
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< sSharedCooldownInfo > m_SharedCooldownList; // 0x8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnInventoryChanged"
	CHandle< CBaseEntity > m_hItems[19]; // 0x20	
	bool m_bItemQueried[21]; // 0x6c	
private:
	[[maybe_unused]] uint8_t __pad0081[0x3]; // 0x81
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnInventoryParityChanged"
	int32_t m_iParity; // 0x84	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hInventoryParent; // 0x88	
	bool m_bIsActive; // 0x8c	
	// MNetworkEnable
	bool m_bStashEnabled; // 0x8d	
private:
	[[maybe_unused]] uint8_t __pad008e[0x2]; // 0x8e
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTransientCastItem; // 0x90	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BinaryObject : public CBaseEntity
{
public:
	bool m_bActive; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	int32_t m_nBinaryID; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// Has VTable
class CDOTA_ArcanaDataEntity_Base
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x108
// Has VTable
// 
// MNetworkVarNames "int8 m_vecDrowRangerArcanaTargetPlayerID"
// MNetworkVarNames "GameTime_t m_vecDrowRangerArcanaDeathTime"
// MNetworkVarNames "GameTime_t m_vecDrowRangerArcanaKillTime"
class CDOTA_ArcanaDataEntity_DrowRanger : public CDOTA_ArcanaDataEntity_Base
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnDrowArcanaChanged"
	int8_t m_vecDrowRangerArcanaTargetPlayerID[24]; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDrowArcanaChanged"
	GameTime_t m_vecDrowRangerArcanaDeathTime[24]; // 0x48	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDrowArcanaChanged"
	GameTime_t m_vecDrowRangerArcanaKillTime[24]; // 0xa8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "int m_nNumPoints"
// MNetworkVarNames "GameTime_t m_flShowPopupTime"
class CDOTA_ArcanaDataEntity_FacelessVoid : public CDOTA_ArcanaDataEntity_Base
{
private:
	[[maybe_unused]] uint8_t __pad0030[0xc]; // 0x30
public:
	// MNetworkEnable
	int32_t m_nNumPoints; // 0x3c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFacelessVoidArcanaChanged"
	GameTime_t m_flShowPopupTime; // 0x40	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// 
// MNetworkVarNames "int m_nEmpoweredKills"
class CDOTA_ArcanaDataEntity_Razor : public CDOTA_ArcanaDataEntity_Base
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnRazorArcanaChanged"
	int32_t m_nEmpoweredKills; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CDOTA_ArcanaDataEntity_DrowRanger * m_pArcanaData_CDOTA_ArcanaDataEntity_DrowRanger"
// MNetworkVarNames "CDOTA_ArcanaDataEntity_FacelessVoid * m_pArcanaData_CDOTA_ArcanaDataEntity_FacelessVoid"
// MNetworkVarNames "CDOTA_ArcanaDataEntity_Razor * m_pArcanaData_CDOTA_ArcanaDataEntity_Razor"
class CDOTA_ArcanaDataEntity : public CBaseEntity
{
public:
	// MNetworkEnable
	CDOTA_ArcanaDataEntity_DrowRanger* m_pArcanaData_CDOTA_ArcanaDataEntity_DrowRanger; // 0x4a8	
	// MNetworkEnable
	CDOTA_ArcanaDataEntity_FacelessVoid* m_pArcanaData_CDOTA_ArcanaDataEntity_FacelessVoid; // 0x4b0	
	// MNetworkEnable
	CDOTA_ArcanaDataEntity_Razor* m_pArcanaData_CDOTA_ArcanaDataEntity_Razor; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
class CDOTA_Orb
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	CHandle< CBaseEntity > m_hCaster; // 0x10	
	CHandle< CBaseEntity > m_hAbility; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x70
// Has VTable
// 
// MNetworkVarNames "int nType"
// MNetworkVarNames "int nQuestID"
// MNetworkVarNames "int nQuestChallengeID"
// MNetworkVarNames "int nTier"
// MNetworkVarNames "int nParam0"
// MNetworkVarNames "int nParam1"
// MNetworkVarNames "int nSlotID"
// MNetworkVarNames "int nProgress"
// MNetworkVarNames "int nCompletionThreshold"
// MNetworkVarNames "PlayerID_t nPlayerID"
// MNetworkVarNames "int nQueryIndex"
// MNetworkVarNames "int nEventID"
// MNetworkVarNames "int nSequenceID"
// MNetworkVarNames "int nCompleted"
// MNetworkVarNames "int nRank"
class CDOTA_PlayerChallengeInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t nType; // 0x30	
	// MNetworkEnable
	int32_t nQuestID; // 0x34	
	// MNetworkEnable
	int32_t nQuestChallengeID; // 0x38	
	// MNetworkEnable
	int32_t nTier; // 0x3c	
	// MNetworkEnable
	int32_t nParam0; // 0x40	
	// MNetworkEnable
	int32_t nParam1; // 0x44	
	// MNetworkEnable
	int32_t nSlotID; // 0x48	
	// MNetworkEnable
	int32_t nProgress; // 0x4c	
	// MNetworkEnable
	int32_t nCompletionThreshold; // 0x50	
	// MNetworkEnable
	PlayerID_t nPlayerID; // 0x54	
	// MNetworkEnable
	int32_t nQueryIndex; // 0x58	
	// MNetworkEnable
	int32_t nEventID; // 0x5c	
	// MNetworkEnable
	int32_t nSequenceID; // 0x60	
	// MNetworkEnable
	int32_t nCompleted; // 0x64	
	// MNetworkEnable
	int32_t nRank; // 0x68	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
// 
// MNetworkVarNames "int nType"
// MNetworkVarNames "int nTier"
// MNetworkVarNames "int nSlotID"
// MNetworkVarNames "int nProgress"
// MNetworkVarNames "int nCompletionThreshold"
// MNetworkVarNames "PlayerID_t nPlayerID"
// MNetworkVarNames "int nQueryIndex"
// MNetworkVarNames "int nEventID"
// MNetworkVarNames "int nSequenceID"
// MNetworkVarNames "int nRequiredHero"
// MNetworkVarNames "int nCompleted"
class CDOTASubChallengeInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t nType; // 0x30	
	// MNetworkEnable
	int32_t nTier; // 0x34	
	// MNetworkEnable
	int32_t nSlotID; // 0x38	
	// MNetworkEnable
	int32_t nProgress; // 0x3c	
	// MNetworkEnable
	int32_t nCompletionThreshold; // 0x40	
	// MNetworkEnable
	PlayerID_t nPlayerID; // 0x44	
	// MNetworkEnable
	int32_t nQueryIndex; // 0x48	
	// MNetworkEnable
	int32_t nEventID; // 0x4c	
	// MNetworkEnable
	int32_t nSequenceID; // 0x50	
	// MNetworkEnable
	int32_t nRequiredHero; // 0x54	
	// MNetworkEnable
	int32_t nCompleted; // 0x58	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct CavernCrawlRoomID_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CavernCrawlRoomID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// 
// MNetworkVarNames "PlayerID_t m_nPlayerID"
// MNetworkVarNames "int m_nQueryID"
// MNetworkVarNames "int m_nQueryRank"
// MNetworkVarNames "int m_nMultiQueryID"
class CDOTA_CombatLogQueryProgress
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkEnable
	PlayerID_t m_nPlayerID; // 0x28	
	// MNetworkEnable
	int32_t m_nQueryID; // 0x2c	
	// MNetworkEnable
	int32_t m_nQueryRank; // 0x30	
	// MNetworkEnable
	int32_t m_nMultiQueryID; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Is Abstract
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_CompendiumChallengeEventID"
// MNetworkVarNames "int m_CompendiumChallengeSequenceID"
// MNetworkVarNames "int m_CompendiumChallengeCoinReward"
// MNetworkVarNames "int m_CompendiumChallengeCoinSplash"
// MNetworkVarNames "int m_CompendiumChallengePointReward"
// MNetworkVarNames "bool m_CompendiumChallengeCompleted"
// MNetworkVarNames "bool m_CompendiumChallengeFailed"
// MNetworkVarNames "int m_CompendiumChallengeProgress"
// MNetworkVarNames "int m_QueryIDForProgress"
// MNetworkVarNames "CDOTASubChallengeInfo m_SubChallenges"
// MNetworkVarNames "int m_CompendiumCoinWager"
// MNetworkVarNames "itemid_t m_CompendiumTokenWagerItemID"
// MNetworkVarNames "int m_CompendiumWagerTokenBonusPct"
// MNetworkVarNames "int m_CompendiumCoinWagerResults"
// MNetworkVarNames "int m_CompendiumRankWagers"
// MNetworkVarNames "float m_flWagerTimer"
// MNetworkVarNames "GameTime_t m_flWagerEndTime"
// MNetworkVarNames "CDOTA_PlayerChallengeInfo m_CompendiumChallengeInfo"
// MNetworkVarNames "CDOTA_CombatLogQueryProgress m_PlayerQueryIDs"
// MNetworkVarNames "int m_ProgressForQueryID"
// MNetworkVarNames "int m_GoalForQueryID"
// MNetworkVarNames "int m_PlayerQuestRankPreviouslyCompleted"
// MNetworkVarNames "int m_PlayerQuestRankCompleted"
// MNetworkVarNames "PlayerID_t m_PlayerBountyTarget"
// MNetworkVarNames "GameTime_t m_flPlayerBountyTimestamp"
// MNetworkVarNames "int m_PlayerBountyCount"
class CIngameEvent_Base : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x20]; // 0x4a8
public:
	bool m_bInitialized; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x3]; // 0x4c9
public:
	// MNetworkEnable
	int32_t m_CompendiumChallengeEventID[24]; // 0x4cc	
	// MNetworkEnable
	int32_t m_CompendiumChallengeSequenceID[24]; // 0x52c	
	// MNetworkEnable
	int32_t m_CompendiumChallengeCoinReward[24]; // 0x58c	
	// MNetworkEnable
	int32_t m_CompendiumChallengeCoinSplash[24]; // 0x5ec	
	// MNetworkEnable
	int32_t m_CompendiumChallengePointReward[24]; // 0x64c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	bool m_CompendiumChallengeCompleted[24]; // 0x6ac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	bool m_CompendiumChallengeFailed[24]; // 0x6c4	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	int32_t m_CompendiumChallengeProgress[24]; // 0x6dc	
	// MNetworkEnable
	int32_t m_QueryIDForProgress[24]; // 0x73c	
private:
	[[maybe_unused]] uint8_t __pad079c[0x4]; // 0x79c
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTASubChallengeInfo > m_SubChallenges; // 0x7a0	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	int32_t m_CompendiumCoinWager[10]; // 0x7f0	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	itemid_t m_CompendiumTokenWagerItemID[10]; // 0x818	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	int32_t m_CompendiumWagerTokenBonusPct[10]; // 0x868	
	// MNetworkEnable
	int32_t m_CompendiumCoinWagerResults[10]; // 0x890	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	int32_t m_CompendiumRankWagers[10]; // 0x8b8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerTimeChanged"
	float m_flWagerTimer; // 0x8e0	
	// MNetworkEnable
	GameTime_t m_flWagerEndTime; // 0x8e4	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTA_PlayerChallengeInfo > m_CompendiumChallengeInfo; // 0x8e8	
	// MNetworkEnable
	// MNetworkTypeAlias "DOTA_CombatLogQueryProgress"
	CUtlVectorEmbeddedNetworkVar< CDOTA_CombatLogQueryProgress > m_PlayerQueryIDs; // 0x13a8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	int32_t m_ProgressForQueryID[100]; // 0x13f8	
	// MNetworkEnable
	int32_t m_GoalForQueryID[100]; // 0x1588	
	// MNetworkEnable
	int32_t m_PlayerQuestRankPreviouslyCompleted[10]; // 0x1718	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerQuestRankChanged"
	int32_t m_PlayerQuestRankCompleted[10]; // 0x1740	
	// MNetworkEnable
	PlayerID_t m_PlayerBountyTarget[10]; // 0x1768	
	// MNetworkEnable
	GameTime_t m_flPlayerBountyTimestamp[10]; // 0x1790	
	// MNetworkEnable
	int32_t m_PlayerBountyCount[10]; // 0x17b8	
	bool m_bHasSpentWager[10]; // 0x17e0	
	bool m_bPendingWagerSpend[10]; // 0x17ea	
	bool m_bCavernCrawlActive[24]; // 0x17f4	
	CavernCrawlMapVariant_t m_nCavernCrawlMapVariant[24]; // 0x180c	
	bool m_bCavernHalfCredit; // 0x1824	
	bool m_bBountyReminded[24]; // 0x1825	
	bool m_bBountyAnnounced[24]; // 0x183d	
private:
	[[maybe_unused]] uint8_t __pad1855[0x3]; // 0x1855
public:
	uint32_t m_pCavernCrawlWinnings[24]; // 0x1858	
	uint32_t m_pCavernCrawlPlusShardWinnings[24]; // 0x18b8	
	CUtlVector< DOTACavernCrawlMapResult_t >* m_ppVecCavernCrawlMapResult[24]; // 0x1918	
	int32_t m_event_lobby_updated; // 0x19d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_FM2015 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_WM2016 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_TI6 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_FM2016 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_WM2017 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_TI7 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a28
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_TI8 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_DotaPlus : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_DotaPrime : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_FV2018 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_NewBloom2019 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_TI9 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_FV2019 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_NB2020 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_TI2020 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a28
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_Diretide2020 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_Spring2021 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_Fall2021 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_TI2022 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_10thAnniversary : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_TI2023 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_FV2023 : public CIngameEvent_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a68
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bMiniGameActive"
// MNetworkVarNames "int8 m_vecTargetAssignments"
// MNetworkVarNames "uint8 m_vecMiniGamePoints"
// MNetworkVarNames "uint8 m_vecMiniGameKills"
class CIngameEvent_MuertaReleaseSpring2023 : public CIngameEvent_Base
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnMuertaReleaseEventMiniGameActiveChanged"
	bool m_bMiniGameActive; // 0x1a20	
	// MNetworkEnable
	// MNetworkChangeCallback "OnMuertaReleaseEventTargetAssignmentsChanged"
	int8_t m_vecTargetAssignments[10]; // 0x1a21	
	// MNetworkEnable
	// MNetworkChangeCallback "OnMuertaReleaseEventMiniGamePointsChanged"
	uint8_t m_vecMiniGamePoints[10]; // 0x1a2b	
	// MNetworkEnable
	uint8_t m_vecMiniGameKills[10]; // 0x1a35	
private:
	[[maybe_unused]] uint8_t __pad1a3f[0x11]; // 0x1a3f
public:
	CUtlVector< ParticleIndex_t > m_activeGravestones; // 0x1a50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x2a0
// Has VTable
class CDOTA_ModifierManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	bool m_bCompactBuffListPending; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad0029[0x267]; // 0x29
public:
	uint16_t m_nHasTruesightForTeam; // 0x290	
	uint16_t m_nHasTruesightForTeamValid; // 0x292	
	uint16_t m_nProvidesFOWPositionForTeam; // 0x294	
	uint16_t m_nProvidesFOWPositionForTeamValid; // 0x296	
	int32_t m_iBuffIndex; // 0x298	
	int32_t m_iLockRefCount; // 0x29c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1e0
// Has Trivial Destructor
class CModifierParams
{
public:
	CHandle< CDOTABaseAbility > ability; // 0x0	
	float fDamage; // 0x4	
	float fOriginalDamage; // 0x8	
	int32_t nActivity; // 0xc	
	bool bTooltip; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0011[0x3]; // 0x11
public:
	int32_t nTooltipParam; // 0x14	
	bool bIgnoreInvis; // 0x18	
	bool bNoCooldown; // 0x19	
	bool bIgnoreBaseArmor; // 0x1a	
	bool bReincarnate; // 0x1b	
	bool bDoNotConsume; // 0x1c	
	bool bReportMax; // 0x1d	
private:
	[[maybe_unused]] uint8_t __pad001e[0x2]; // 0x1e
public:
	float fDistance; // 0x20	
	float fGain; // 0x24	
	float fAttackTimeRemaining; // 0x28	
	PlayerID_t m_nIssuerPlayerIndex; // 0x2c	
	PlayerID_t m_nVictimPlayerID; // 0x30	
	int32_t nDamageType; // 0x34	
	int32_t nDamageflags; // 0x38	
	int32_t nDamageCategory; // 0x3c	
	int32_t iFailType; // 0x40	
	int16_t iRecord; // 0x44	
private:
	[[maybe_unused]] uint8_t __pad0046[0x2]; // 0x46
public:
	CDOTA_Orb* pOrb; // 0x48	
	CDOTA_Orb* pOrb2; // 0x50	
	int32_t nCost; // 0x58	
	int32_t nHealthCost; // 0x5c	
	int32_t nOrdertype; // 0x60	
	Vector vOldLoc; // 0x64	
	Vector vNewLoc; // 0x70	
	Vector vCastLocation; // 0x7c	
	bool bCraniumBasherTested; // 0x88	
	bool bMKBTested; // 0x89	
	bool bOctarineTested; // 0x8a	
	bool bHeartRegenApplied; // 0x8b	
	bool bSangeAmpApplied; // 0x8c	
	bool bLocketAmpApplied; // 0x8d	
	bool bPaladinAmpApplied; // 0x8e	
	bool bBlademailApplied; // 0x8f	
	bool bForceFieldApplied; // 0x90	
	bool bKayaApplied; // 0x91	
	bool bStoutConsidered; // 0x92	
	bool bInterrupted; // 0x93	
	bool bDiffusalApplied; // 0x94	
	bool bChainLightningConsidered; // 0x95	
	bool bSuppressDamage; // 0x96	
	bool bRangedAttack; // 0x97	
	bool bProcessProcs; // 0x98	
	bool bProjectileIsFromIllusion; // 0x99	
	bool bHasMagicComponent; // 0x9a	
	bool bIsSpellLifesteal; // 0x9b	
	CEntityIndex pnMagicStickProcEntityIndices[64]; // 0x9c	
	bool bBloodstoneRegenApplied; // 0x19c	
	bool bShroudManaRestoreApplied; // 0x19d	
	bool bPhylacteryApplied; // 0x19e	
	bool bAllowZeroDamageFromPostReductionBlock; // 0x19f	
	bool bForceMagicStickProc; // 0x1a0	
	bool bIgnoreNegativeValuesIfDebuffImmune; // 0x1a1	
	bool bIgnorePositiveValuesIfDebuffImmune; // 0x1a2	
	bool bIgnoreAllIfDebuffImmune; // 0x1a3	
	bool bAlsoIgnoreBuffsIfDebuffImmune; // 0x1a4	
	bool bIgnoreLowerIfDebuffImmune; // 0x1a5	
private:
	[[maybe_unused]] uint8_t __pad01a6[0x2]; // 0x1a6
public:
	float flIgnoreLowerIfDebuffImmune; // 0x1a8	
	bool bIgnoreHigherIfDebuffImmune; // 0x1ac	
private:
	[[maybe_unused]] uint8_t __pad01ad[0x3]; // 0x1ad
public:
	float flIgnoreHigherIfDebuffImmune; // 0x1b0	
	bool bIgnoreTemporaryAttackSpeedModifiers; // 0x1b4	
private:
	[[maybe_unused]] uint8_t __pad01b5[0x3]; // 0x1b5
public:
	char* pszAbilitySpecialName; // 0x1b8	
	int32_t nAbilitySpecialLevel; // 0x1c0	
	CHandle< CBaseEntity > hattacker; // 0x1c4	
	CHandle< CBaseEntity > htarget; // 0x1c8	
	CHandle< CBaseEntity > hunit; // 0x1cc	
	CHandle< CDOTABaseAbility > inflictor; // 0x1d0	
private:
	[[maybe_unused]] uint8_t __pad01d4[0x4]; // 0x1d4
public:
	CDOTA_Buff* pAddedBuff; // 0x1d8	
	
	// Static fields:
	static CModifierParams &Get_s_Default(){return *reinterpret_cast<CModifierParams*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CModifierParams")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
class CDOTA_BuffParticle
{
public:
	ParticleIndex_t m_iIndex; // 0x0	
	int32_t m_iPriority; // 0x4	
	bool m_bDestroyImmediatly; // 0x8	
	bool m_bStatusEffect; // 0x9	
	bool m_bHeroEffect; // 0xa	
	bool m_bOverheadEffectOffset; // 0xb	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class sLilShredderBounceInfo
{
public:
	int32_t iAttackIndex; // 0x0	
	int32_t iBounceCount; // 0x4	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class sAghsfortWardBounceInfo
{
public:
	int32_t iAttackIndex; // 0x0	
	int32_t iBounceCount; // 0x4	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class sAghsFortGlaiveInfo
{
public:
	int32_t iAttackIndex; // 0x0	
	int32_t iBounceCount; // 0x4	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
class sGlaiveDef
{
public:
	CDOTA_BaseNPC* pGlaive; // 0x0	
	ParticleIndex_t nGlaiveFXIndex; // 0x8	
	int32_t nGlaiveState; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
struct WaveData_t
{
public:
	Vector m_vStart; // 0x0	
	CUtlVector< CHandle< CBaseEntity > > m_hAlreadyHitList; // 0x10	
	int32_t m_hProjectileHandle; // 0x28	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class sGlaiveInfoStorm
{
public:
	int32_t iAttackIndex; // 0x0	
	int32_t iBounceCount; // 0x4	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class sBounceInfo
{
public:
	int32_t iAttackIndex; // 0x0	
	int32_t iBounceCount; // 0x4	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x14
// Has Trivial Destructor
struct NianDamageTaken_t
{
public:
	int32_t nDamage; // 0x0	
	PlayerID_t nPlayerID; // 0x4	
	Vector vPos; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
class sAbilityHistory
{
public:
	GameTime_t flAppliedTime; // 0x0	
	CDOTABaseAbility* pAbility; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class sGlaiveInfo
{
public:
	int32_t iAttackIndex; // 0x0	
	int32_t iBounceCount; // 0x4	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class sGlaiveInfoSilencer
{
public:
	int32_t iAttackIndex; // 0x0	
	int32_t iBounceCount; // 0x4	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
struct RemnantData_t
{
public:
	CHandle< CBaseEntity > m_hRemnant; // 0x0	
	int32_t m_nProjectileHandle; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
class sRevenantDef
{
public:
	CDOTA_BaseNPC* pRevenant; // 0x0	
	ParticleIndex_t nRevenantFXIndex; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x558
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int16 m_nRadiantCheers"
// MNetworkVarNames "int16 m_nRadiantBronzeCheers"
// MNetworkVarNames "int16 m_nRadiantSilverCheers"
// MNetworkVarNames "int16 m_nRadiantGoldCheers"
// MNetworkVarNames "ECrowdLevel m_nRadiantCrowdLevel"
// MNetworkVarNames "int16 m_nDireCheers"
// MNetworkVarNames "int16 m_nDireBronzeCheers"
// MNetworkVarNames "int16 m_nDireSilverCheers"
// MNetworkVarNames "int16 m_nDireGoldCheers"
// MNetworkVarNames "ECrowdLevel m_nDireCrowdLevel"
class CDOTAAppCheers : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x96]; // 0x4a8
public:
	// MNetworkEnable
	int16_t m_nRadiantCheers; // 0x53e	
	// MNetworkEnable
	int16_t m_nRadiantBronzeCheers; // 0x540	
	// MNetworkEnable
	int16_t m_nRadiantSilverCheers; // 0x542	
	// MNetworkEnable
	int16_t m_nRadiantGoldCheers; // 0x544	
private:
	[[maybe_unused]] uint8_t __pad0546[0x2]; // 0x546
public:
	// MNetworkEnable
	ECrowdLevel m_nRadiantCrowdLevel; // 0x548	
	// MNetworkEnable
	int16_t m_nDireCheers; // 0x54c	
	// MNetworkEnable
	int16_t m_nDireBronzeCheers; // 0x54e	
	// MNetworkEnable
	int16_t m_nDireSilverCheers; // 0x550	
	// MNetworkEnable
	int16_t m_nDireGoldCheers; // 0x552	
	// MNetworkEnable
	ECrowdLevel m_nDireCrowdLevel; // 0x554	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int16 m_nRadiantCheers"
// MNetworkVarNames "int16 m_nDireCheers"
// MNetworkVarNames "int16 m_nRadiantPremiumCheers"
// MNetworkVarNames "int16 m_nDirePremiumCheers"
// MNetworkVarNames "ECrowdLevel m_nRadiantCrowdLevel"
// MNetworkVarNames "ECrowdLevel m_nDireCrowdLevel"
class CDOTACheers : public CBaseEntity
{
public:
	// MNetworkEnable
	int16_t m_nRadiantCheers; // 0x4a8	
	// MNetworkEnable
	int16_t m_nDireCheers; // 0x4aa	
	// MNetworkEnable
	int16_t m_nRadiantPremiumCheers; // 0x4ac	
	// MNetworkEnable
	int16_t m_nDirePremiumCheers; // 0x4ae	
	// MNetworkEnable
	ECrowdLevel m_nRadiantCrowdLevel; // 0x4b0	
	// MNetworkEnable
	ECrowdLevel m_nDireCrowdLevel; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bStartRecording"
// MNetworkVarNames "CHandle< CDOTA_BaseNPC> m_hHero"
// MNetworkVarNames "CHandle< CDOTAPlayerController> m_hPlayer"
class CDOTA_Hero_Recorder : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bStartRecording; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hHero; // 0x4ac	
	// MNetworkEnable
	CHandle< CDOTAPlayerController > m_hPlayer; // 0x4b0	
	GameTime_t m_flStartRecordingTime; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTAPlayer_CameraServices : public CPlayer_CameraServices
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d0
// Has VTable
class CDOTAPlayer_MovementServices : public CPlayer_MovementServices
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_cellX"
// MNetworkExcludeByName "m_cellY"
// MNetworkExcludeByName "m_cellZ"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_nHitboxSet"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_vecMaxs"
// MNetworkExcludeByName "m_vecMins"
// MNetworkExcludeByName "m_vecOrigin"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
// MNetworkExcludeByName "m_vLookTargetPosition"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_hOwnerEntity"
// MNetworkExcludeByName "m_hParent"
// MNetworkExcludeByName "m_flCreateTime"
// MNetworkExcludeByName "m_flScale"
// MParticleDomainTag
// MPulseProvideFeatureTag
// MPulseLibraryBindings
// MNetworkVarNames "bool m_bRefCountsModifiers"
// MNetworkVarNames "bool m_bHidden"
// MNetworkVarNames "bool m_bActivated"
// MNetworkVarNames "AbilityBarType_t m_nAbilityBarType"
// MNetworkVarNames "int m_iDirtyButtons"
// MNetworkVarNames "int m_iLevel"
// MNetworkVarNames "bool m_bToggleState"
// MNetworkVarNames "bool m_bInAbilityPhase"
// MNetworkVarNames "float m_flAbilityMuteDuration"
// MNetworkVarNames "float m_fCooldown"
// MNetworkVarNames "float m_flCooldownLength"
// MNetworkVarNames "int m_iManaCost"
// MNetworkVarNames "bool m_bAutoCastState"
// MNetworkVarNames "bool m_bAltCastState"
// MNetworkVarNames "GameTime_t m_flChannelStartTime"
// MNetworkVarNames "GameTime_t m_flCastStartTime"
// MNetworkVarNames "bool m_bInIndefiniteCooldown"
// MNetworkVarNames "bool m_bFrozenCooldown"
// MNetworkVarNames "float m_flOverrideCastPoint"
// MNetworkVarNames "bool m_bStolen"
// MNetworkVarNames "bool m_bReplicated"
// MNetworkVarNames "bool m_bStealable"
// MNetworkVarNames "int m_nAbilityCurrentCharges"
// MNetworkVarNames "float m_fAbilityChargeRestoreTimeRemaining"
// MNetworkVarNames "bool m_bUpgradeRecommended"
// MNetworkVarNames "int m_nMaxLevelOverride"
class CDOTABaseAbility : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	int32_t m_iAbilityIndex; // 0x4b0	
	int32_t m_nStolenActivity; // 0x4b4	
	bool m_bChanneling; // 0x4b8	
	bool m_bReflection; // 0x4b9	
	// MNetworkEnable
	bool m_bRefCountsModifiers; // 0x4ba	
private:
	[[maybe_unused]] uint8_t __pad04bb[0x1]; // 0x4bb
public:
	int32_t m_iModifierRefCount; // 0x4bc	
	bool m_bWantsToNeutralCast; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c1[0x3]; // 0x4c1
public:
	CHandle< CBaseEntity > m_hNeutralCastTarget; // 0x4c4	
	bool m_bServerOnlyAbility; // 0x4c8	
	bool m_bGrantedAbilityChargesFromScepter; // 0x4c9	
	bool m_bGrantedAbilityChargesFromShard; // 0x4ca	
	bool m_bIsDefaultHeroAbility; // 0x4cb	
	bool m_bConsiderOvershootInGetCastRange; // 0x4cc	
	// MNetworkEnable
	bool m_bHidden; // 0x4cd	
	// MNetworkEnable
	bool m_bActivated; // 0x4ce	
private:
	[[maybe_unused]] uint8_t __pad04cf[0x1]; // 0x4cf
public:
	// MNetworkEnable
	AbilityBarType_t m_nAbilityBarType; // 0x4d0	
	// MNetworkEnable
	int32_t m_iDirtyButtons; // 0x4d4	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iLevel; // 0x4d8	
	// MNetworkEnable
	bool m_bToggleState; // 0x4dc	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bInAbilityPhase; // 0x4dd	
private:
	[[maybe_unused]] uint8_t __pad04de[0x2]; // 0x4de
public:
	// MNetworkEnable
	float m_flAbilityMuteDuration; // 0x4e0	
	// MNetworkEnable
	// MNetworkPriority "32"
	float m_fCooldown; // 0x4e4	
	// MNetworkEnable
	// MNetworkBitCount "15"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1024.000000"
	float m_flCooldownLength; // 0x4e8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iManaCost; // 0x4ec	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bAutoCastState; // 0x4f0	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bAltCastState; // 0x4f1	
private:
	[[maybe_unused]] uint8_t __pad04f2[0x2]; // 0x4f2
public:
	// MNetworkEnable
	GameTime_t m_flChannelStartTime; // 0x4f4	
	// MNetworkEnable
	GameTime_t m_flCastStartTime; // 0x4f8	
	// MNetworkEnable
	bool m_bInIndefiniteCooldown; // 0x4fc	
	// MNetworkEnable
	bool m_bFrozenCooldown; // 0x4fd	
private:
	[[maybe_unused]] uint8_t __pad04fe[0x2]; // 0x4fe
public:
	int32_t m_nFrozenCooldownStack; // 0x500	
	// MNetworkEnable
	float m_flOverrideCastPoint; // 0x504	
	// MNetworkEnable
	bool m_bStolen; // 0x508	
	// MNetworkEnable
	bool m_bReplicated; // 0x509	
	// MNetworkEnable
	bool m_bStealable; // 0x50a	
private:
	[[maybe_unused]] uint8_t __pad050b[0x1]; // 0x50b
public:
	// MNetworkEnable
	int32_t m_nAbilityCurrentCharges; // 0x50c	
	// MNetworkEnable
	// MNetworkPriority "32"
	float m_fAbilityChargeRestoreTimeRemaining; // 0x510	
	// MNetworkEnable
	bool m_bUpgradeRecommended; // 0x514	
private:
	[[maybe_unused]] uint8_t __pad0515[0x3]; // 0x515
public:
	// MNetworkEnable
	int32_t m_nMaxLevelOverride; // 0x518	
	CHandle< CBaseEntity > m_hReflectionCause; // 0x51c	
private:
	[[maybe_unused]] uint8_t __pad0520[0x20]; // 0x520
public:
	CHandle< CBaseEntity > m_pReflectionSourceAbility; // 0x540	
private:
	[[maybe_unused]] uint8_t __pad0544[0xc]; // 0x544
public:
	item_definition_index_t m_nBackedByEconItemIndex; // 0x550	
private:
	[[maybe_unused]] uint8_t __pad0554[0xd]; // 0x554
public:
	bool m_bAltCastOrdered; // 0x561	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bCombinable"
// MNetworkVarNames "bool m_bPermanent"
// MNetworkVarNames "bool m_bStackable"
// MNetworkVarNames "int m_iStackableMax"
// MNetworkVarNames "bool m_bRecipe"
// MNetworkVarNames "bool m_bRecipeConsumesCharges"
// MNetworkVarNames "int m_iSharability"
// MNetworkVarNames "bool m_bDroppable"
// MNetworkVarNames "bool m_bPurchasable"
// MNetworkVarNames "bool m_bSellable"
// MNetworkVarNames "bool m_bInitiallySellable"
// MNetworkVarNames "bool m_bForceUnsellable"
// MNetworkVarNames "bool m_bRequiresCharges"
// MNetworkVarNames "bool m_bKillable"
// MNetworkVarNames "bool m_bGloballyCombinable"
// MNetworkVarNames "bool m_bDisassemblable"
// MNetworkVarNames "bool m_bIsNeutralDrop"
// MNetworkVarNames "int m_nNeutralDropTeam"
// MNetworkVarNames "bool m_bAlertable"
// MNetworkVarNames "int m_iInitialCharges"
// MNetworkVarNames "bool m_bCastOnPickup"
// MNetworkVarNames "bool m_bOnlyPlayerHeroPickup"
// MNetworkVarNames "bool m_bCreepHeroPickup"
// MNetworkVarNames "bool m_bCanBeUsedOutOfInventory"
// MNetworkVarNames "bool m_bItemEnabled"
// MNetworkVarNames "GameTime_t m_flEnableTime"
// MNetworkVarNames "GameTime_t m_flReclaimTime"
// MNetworkVarNames "bool m_bDisplayOwnership"
// MNetworkVarNames "bool m_bShowOnMinimap"
// MNetworkVarNames "float m_flMinimapIconSize"
// MNetworkVarNames "bool m_bIsUpgradeable"
// MNetworkVarNames "int m_nUpgradeProgress"
// MNetworkVarNames "int m_nUpgradeGoal"
// MNetworkVarNames "uint8 m_vecPreGameTransferPlayerIDs"
// MNetworkVarNames "GameTime_t m_flPurchaseTime"
// MNetworkVarNames "GameTime_t m_flAssembledTime"
// MNetworkVarNames "int m_iCurrentCharges"
// MNetworkVarNames "int m_iValuelessCharges"
// MNetworkVarNames "int m_iSecondaryCharges"
// MNetworkVarNames "bool m_bCombineLocked"
// MNetworkVarNames "PlayerID_t m_iPlayerOwnerID"
// MNetworkVarNames "bool m_bPurchasedWhileDead"
class CDOTA_Item : public CDOTABaseAbility
{
public:
	int32_t m_iState; // 0x568	
	int32_t m_CastAnimation; // 0x56c	
	// MNetworkEnable
	bool m_bCombinable; // 0x570	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bPermanent; // 0x571	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bStackable; // 0x572	
private:
	[[maybe_unused]] uint8_t __pad0573[0x1]; // 0x573
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iStackableMax; // 0x574	
	// MNetworkEnable
	bool m_bRecipe; // 0x578	
	// MNetworkEnable
	bool m_bRecipeConsumesCharges; // 0x579	
private:
	[[maybe_unused]] uint8_t __pad057a[0x2]; // 0x57a
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iSharability; // 0x57c	
	// MNetworkEnable
	bool m_bDroppable; // 0x580	
	// MNetworkEnable
	bool m_bPurchasable; // 0x581	
	// MNetworkEnable
	bool m_bSellable; // 0x582	
	// MNetworkEnable
	bool m_bInitiallySellable; // 0x583	
	// MNetworkEnable
	bool m_bForceUnsellable; // 0x584	
	// MNetworkEnable
	bool m_bRequiresCharges; // 0x585	
	// MNetworkEnable
	bool m_bKillable; // 0x586	
	// MNetworkEnable
	bool m_bGloballyCombinable; // 0x587	
	// MNetworkEnable
	bool m_bDisassemblable; // 0x588	
	bool m_bNeverDisassemble; // 0x589	
	bool m_bIsTempestDoubleClonable; // 0x58a	
	// MNetworkEnable
	bool m_bIsNeutralDrop; // 0x58b	
	// MNetworkEnable
	int32_t m_nNeutralDropTeam; // 0x58c	
	// MNetworkEnable
	bool m_bAlertable; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x3]; // 0x591
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iInitialCharges; // 0x594	
	// MNetworkEnable
	bool m_bCastOnPickup; // 0x598	
	// MNetworkEnable
	bool m_bOnlyPlayerHeroPickup; // 0x599	
	// MNetworkEnable
	bool m_bCreepHeroPickup; // 0x59a	
	// MNetworkEnable
	bool m_bCanBeUsedOutOfInventory; // 0x59b	
	// MNetworkEnable
	bool m_bItemEnabled; // 0x59c	
private:
	[[maybe_unused]] uint8_t __pad059d[0x3]; // 0x59d
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	GameTime_t m_flEnableTime; // 0x5a0	
	// MNetworkEnable
	GameTime_t m_flReclaimTime; // 0x5a4	
	// MNetworkEnable
	bool m_bDisplayOwnership; // 0x5a8	
	// MNetworkEnable
	bool m_bShowOnMinimap; // 0x5a9	
private:
	[[maybe_unused]] uint8_t __pad05aa[0x2]; // 0x5aa
public:
	// MNetworkEnable
	float m_flMinimapIconSize; // 0x5ac	
	// MNetworkEnable
	bool m_bIsUpgradeable; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x3]; // 0x5b1
public:
	// MNetworkEnable
	int32_t m_nUpgradeProgress; // 0x5b4	
	// MNetworkEnable
	int32_t m_nUpgradeGoal; // 0x5b8	
private:
	[[maybe_unused]] uint8_t __pad05bc[0x4]; // 0x5bc
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< uint8 > m_vecPreGameTransferPlayerIDs; // 0x5c0	
	bool m_bStackWithOtherOwners; // 0x5d8	
	bool m_bTemporarilyUncombinable; // 0x5d9	
	bool m_bHasCommentedOnEquip; // 0x5da	
private:
	[[maybe_unused]] uint8_t __pad05db[0x1]; // 0x5db
public:
	int32_t m_iDeclarationFlags; // 0x5dc	
	bool m_bCreatedByDisassemble; // 0x5e0	
	bool m_bHasMixedOwnership; // 0x5e1	
	bool m_bIsClonedItemProxy; // 0x5e2	
	bool m_bNeutralItemRequestDrop; // 0x5e3	
	// MNetworkEnable
	// MNetworkPriority "32"
	GameTime_t m_flPurchaseTime; // 0x5e4	
	// MNetworkEnable
	GameTime_t m_flAssembledTime; // 0x5e8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iCurrentCharges; // 0x5ec	
	// MNetworkEnable
	int32_t m_iValuelessCharges; // 0x5f0	
	// MNetworkEnable
	int32_t m_iSecondaryCharges; // 0x5f4	
	// MNetworkEnable
	bool m_bCombineLocked; // 0x5f8	
private:
	[[maybe_unused]] uint8_t __pad05f9[0x3]; // 0x5f9
public:
	CHandle< CDOTA_Item_Physical > m_hContainer; // 0x5fc	
	// MNetworkEnable
	PlayerID_t m_iPlayerOwnerID; // 0x600	
	// MNetworkEnable
	bool m_bPurchasedWhileDead; // 0x604	
private:
	[[maybe_unused]] uint8_t __pad0605[0x3]; // 0x605
public:
	int32_t m_nCombineVersion; // 0x608	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
struct TimedKillEvent_t
{
public:
	int32_t m_nKillTime; // 0x0	
	float m_flKillValue; // 0x4	
	PlayerID_t m_nPlayerID; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
struct DamageShareEvent_t
{
public:
	float m_flOriginalDamage; // 0x0	
	float m_flTakenDamage; // 0x4	
	PlayerID_t m_nPlayerID; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
class sPendingTreeRemoval
{
public:
	int32_t nTeam; // 0x0	
	int32_t nIndex; // 0x4	
	GameTime_t fTimestamp; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
class sPendingTreeModelChange
{
public:
	int32_t nTeam; // 0x0	
	int32_t nIndex; // 0x4	
	CUtlString strModel; // 0x8	
	int32_t nChangeToken; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Constructor
// Has Trivial Destructor
struct PurchasedItem_t
{
public:
	int32_t nItemID; // 0x0	
	float flPurchaseTime; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Constructor
// Has Trivial Destructor
struct TimedTeamStats_t
{
public:
	uint32_t m_nTime; // 0x0	
	uint16_t m_nEnemyTowerStatus; // 0x4	
	uint16_t m_nEnemyBarracksStatus; // 0x6	
	uint8_t m_nEnemyTowersKilled; // 0x8	
	uint8_t m_nEnemyBarracksKilled; // 0x9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xe270
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "PlayerResourcePlayerTeamData_t m_vecPlayerTeamData"
// MNetworkVarNames "PlayerResourcePlayerData_t m_vecPlayerData"
// MNetworkVarNames "PlayerResourceBroadcasterData_t m_vecBrodcasterData"
// MNetworkVarNames "uint32 m_vecEventsForDisplay"
// MNetworkVarNames "int8 m_nPrimaryEventIndex"
class CDOTA_PlayerResource : public CBaseEntity
{
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerTeamData_t > m_vecPlayerTeamData; // 0x4a8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerData_t > m_vecPlayerData; // 0x4f8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourceBroadcasterData_t > m_vecBrodcasterData; // 0x548	
	// MNetworkEnable
	CNetworkUtlVectorBase< uint32 > m_vecEventsForDisplay; // 0x598	
	// MNetworkEnable
	int8_t m_nPrimaryEventIndex; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x13]; // 0x5b1
public:
	CHandle< CBaseEntity > m_playerIDToPlayer[64]; // 0x5c4	
private:
	[[maybe_unused]] uint8_t __pad06c4[0x244]; // 0x6c4
public:
	CUtlVector< sPendingTreeRemoval > m_vecPendingTreeRemovals; // 0x908	
	CUtlVector< sPendingTreeModelChange > m_vecPendingTreeModelChanges; // 0x920	
	float m_flClaimedFarm[24]; // 0x938	
	float m_flEarnedCreepFarm[24]; // 0x998	
	int32_t m_iScaledPlayerDamage[24]; // 0x9f8	
	int32_t m_iScaledTowerDamage[24]; // 0xa58	
	int32_t m_iScaledHealing[24]; // 0xab8	
	int32_t m_iSupportAbilityValue[24]; // 0xb18	
	int32_t m_nNumMouseClickCastOrders[24]; // 0xb78	
	float m_flTimeWithUnspentSkillPoints[24]; // 0xbd8	
	int32_t m_iRawPlayerDamage[24]; // 0xc38	
	int32_t m_iRawTowerDamage[24]; // 0xc98	
	int32_t m_iRawHealing[24]; // 0xcf8	
	int32_t m_iRawPlayerDamageReceivedPreReduction[3][24]; // 0xd58	
	int32_t m_iRawPlayerDamageReceivedPostReduction[3][24]; // 0xe78	
	int32_t m_iTotalPlayerDamageMatrix[24][24]; // 0xf98	
	int32_t m_iRawPlayerDamageMatrix[24][24]; // 0x1898	
	int32_t m_iAssistsMatrix[24][24]; // 0x2198	
	int32_t m_iTimeLastSeen[24]; // 0x2a98	
	int32_t m_iTotalDisconnectedTime[24]; // 0x2af8	
	double m_dTimeLastRecieved[24]; // 0x2b58	
	int32_t m_iGoldBonusEarned[24]; // 0x2c18	
	int32_t m_iExperimentalGoldEarned[24]; // 0x2c78	
	int32_t m_iExperimental2GoldEarned[24]; // 0x2cd8	
	int32_t m_iCreepDenyGoldEarned[24]; // 0x2d38	
	int32_t m_iTPScrollsPurchased[24]; // 0x2d98	
private:
	[[maybe_unused]] uint8_t __pad2df8[0x240]; // 0x2df8
public:
	int32_t m_iAegisPickups[24]; // 0x3038	
	int32_t m_iTeleportsUsed[24]; // 0x3098	
	int32_t m_iNumConsumablesPurchased[24]; // 0x30f8	
	int32_t m_iNumItemsPurchased[24]; // 0x3158	
	CUtlVector< PurchasedItem_t > m_vecItemsPurchased[24]; // 0x31b8	
	float m_flTimeOfLastItemPurchase[24]; // 0x33f8	
	float m_flTimeOfLastConsumablePurchase[24]; // 0x3458	
	float m_flTimeOfLastDeath[24]; // 0x34b8	
	int32_t m_iTowerDamageTaken[24]; // 0x3518	
	int32_t m_iCreepDamageTaken[24]; // 0x3578	
	int32_t m_iHeroDamageTaken[24]; // 0x35d8	
	int32_t m_iTotalTowerDamageTaken[24]; // 0x3638	
	int32_t m_iTotalCreepDamageTaken[24]; // 0x3698	
	int32_t m_iTotalHeroDamageTaken[24]; // 0x36f8	
private:
	[[maybe_unused]] uint8_t __pad3758[0x240]; // 0x3758
public:
	int32_t m_iRank[24]; // 0x3998	
	bool m_bRankCalibrated[24]; // 0x39f8	
	bool m_bLowPriority[24]; // 0x3a10	
	bool m_bWasHeroPickDotaPlusSuggestion[24]; // 0x3a28	
	bool m_bIdleInFountain[24]; // 0x3a40	
	bool m_bLoggedInElsewhere[24]; // 0x3a58	
	bool m_bPlayerLoadedCompletely[64]; // 0x3a70	
	int32_t m_iDisconnectionReason[64]; // 0x3ab0	
private:
	[[maybe_unused]] uint8_t __pad3bb0[0x600]; // 0x3bb0
public:
	uint64_t m_SelectedGuide[64]; // 0x41b0	
	bool m_bIsUsingPlusGuide[64]; // 0x43b0	
	int32_t m_iCustomTeamAssignments[24]; // 0x43f0	
	CUtlVector< float32 > m_vecPlayerLevelUpTimes[24]; // 0x4450	
	int32_t m_iManaSpent[64][6]; // 0x4690	
	int32_t m_iNeutralOption[64][6][6]; // 0x4c90	
	bool m_bLeaverAlreadyDetected; // 0x7090	
private:
	[[maybe_unused]] uint8_t __pad7091[0x427]; // 0x7091
public:
	CUtlVector< TimedKillEvent_t > m_TimedKillList; // 0x74b8	
	CUtlVector< TimedKillEvent_t > m_TimedAssistList; // 0x74d0	
	CUtlVector< TimedKillEvent_t > m_TimedDeathList; // 0x74e8	
	uint32_t m_unLastHeroPickOrder; // 0x7500	
	int32_t m_iBountyGoldEarned[24]; // 0x7504	
	int32_t m_iRangeCreepUpgradeGoldEarned[24]; // 0x7564	
	int32_t m_iObserverWardsDestroyed[24]; // 0x75c4	
	int32_t m_iReliableGoldEarned[24]; // 0x7624	
	int32_t m_iGoldLossPrevented[24]; // 0x7684	
private:
	[[maybe_unused]] uint8_t __pad76e4[0x5c]; // 0x76e4
public:
	CUtlVector< CHandle< CDOTA_Unit_Courier > > m_hTeamCouriers[15]; // 0x7740	
	CUtlVector< CHandle< CDOTA_Unit_Courier > > m_hPlayerCouriers[64]; // 0x78a8	
	float m_flAvailableLaneGold[15]; // 0x7ea8	
private:
	[[maybe_unused]] uint8_t __pad7ee4[0x4]; // 0x7ee4
public:
	CUtlVector< DamageShareEvent_t > m_DamageShareList[24]; // 0x7ee8	
	DamageShareEvent_t m_AbsorbedDamageRollup[24][25]; // 0x8128	
	AbilityID_t m_playerAbilityUpgradeOrder[24][25]; // 0x9d48	
	int32_t m_playerAbilityUpgradeTimes[24][25]; // 0xa6a8	
	int32_t m_playerAbilityUpgradeCount[24]; // 0xb008	
private:
	[[maybe_unused]] uint8_t __padb068[0x40]; // 0xb068
public:
	int32_t m_fullUpdateCount[64]; // 0xb0a8	
	int32_t m_iCouriersDeployed[24]; // 0xb1a8	
	int32_t m_iCouriersPotentiallyKilled[24]; // 0xb208	
	int32_t m_iCommandsIssued[24]; // 0xb268	
	uint32_t m_hHeroSpawnGroup[24]; // 0xb2c8	
private:
	[[maybe_unused]] uint8_t __padb328[0x17c0]; // 0xb328
public:
	float m_fNextLaneDetectionUpdate; // 0xcae8	
	float m_fNextTimedHeroStatsUpdate; // 0xcaec	
private:
	[[maybe_unused]] uint8_t __padcaf0[0x2a0]; // 0xcaf0
public:
	bool m_bInitializedLaneWaypoints; // 0xcd90	
private:
	[[maybe_unused]] uint8_t __padcd91[0x757]; // 0xcd91
public:
	uint32_t m_nLastWardSuggestionBuildingState; // 0xd4e8	
	uint32_t m_nLastWardSuggestionUpdateNum; // 0xd4ec	
	bool m_bLastWardSuggestionRoshanAlive; // 0xd4f0	
	bool bDoFinalPregameSuggestion[10]; // 0xd4f1	
private:
	[[maybe_unused]] uint8_t __padd4fb[0x1]; // 0xd4fb
public:
	int32_t m_hAbilitiesSuggestion[10]; // 0xd4fc	
	int32_t m_hPregameItemsSuggestion[10]; // 0xd524	
	int32_t m_hItemsSuggestion[10]; // 0xd54c	
	int32_t m_hTopNItemsSuggestion[10]; // 0xd574	
	int32_t m_hNeutralItemsSuggestion[10][5]; // 0xd59c	
	int32_t m_hLanesSuggestion[15]; // 0xd664	
	int32_t m_hWinProbabilitySuggestion; // 0xd6a0	
	int32_t m_hHeroSuggestion[10]; // 0xd6a4	
	int32_t m_hWardLocationsSuggestion[15]; // 0xd6cc	
	float m_fNextCreepDistanceUpdate; // 0xd708	
	float m_fCreepDistanceSafe[15]; // 0xd70c	
	float m_fCreepDistanceMid[15]; // 0xd748	
	float m_fCreepDistanceOff[15]; // 0xd784	
	GameTime_t m_fLastSuggestionTime; // 0xd7c0	
	bool m_bHasRevealedAnonymizedEnemyPlayerInfo; // 0xd7c4	
private:
	[[maybe_unused]] uint8_t __padd7c5[0x603]; // 0xd7c5
public:
	PlayerID_t m_nRequestedBotPlayerID; // 0xddc8	
	float m_fNextCombatLogLocationUpdateTime; // 0xddcc	
	float m_fNextAPMUpdateTime; // 0xddd0	
private:
	[[maybe_unused]] uint8_t __padddd4[0x4]; // 0xddd4
public:
	CUtlVector< uint32 > m_vecPendingPlayerResourceRequests; // 0xddd8	
	int32_t m_iRampages[24]; // 0xddf0	
	int32_t m_iTripleKills[24]; // 0xde50	
	int32_t m_iCouriersKilled[24]; // 0xdeb0	
	int32_t m_iAegisesSnatched[24]; // 0xdf10	
	int32_t m_iCheesesEaten[24]; // 0xdf70	
	int32_t m_iRapiersPurchased[24]; // 0xdfd0	
	float m_flPushingDamage[24]; // 0xe030	
	int32_t m_iRoshanKillsNight[24]; // 0xe090	
	int32_t m_iRoshanKillsDay[24]; // 0xe0f0	
	int32_t m_iPortalsUsed[24]; // 0xe150	
	int32_t m_iWisdomRunesGained[24]; // 0xe1b0	
	int32_t m_iShieldRunesGained[24]; // 0xe210	
	
	// Static fields:
	static uint64_t &Get_s_unLobbySteamID(){return *reinterpret_cast<uint64_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_PlayerResource")->m_static_fields[0]->m_instance);};
	static uint64_t &Get_s_unLobbyPartyID(){return *reinterpret_cast<uint64_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_PlayerResource")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb0
// Has VTable
// 
// MNetworkVarNames "int m_nInitiatingPlayerID"
// MNetworkVarNames "int m_PingWheelMessageID"
// MNetworkVarNames "float m_flActiveUntilTime"
// MNetworkVarNames "Vector2D m_vLocation"
// MNetworkVarNames "int m_nPingedEntityEntIndex"
// MNetworkVarNames "int m_nID"
// MNetworkVarNames "PingConfirmationIconType m_IconType"
// MNetworkVarNames "int m_nAgreeState"
struct PingConfirmationState_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t m_nInitiatingPlayerID; // 0x30	
	// MNetworkEnable
	int32_t m_PingWheelMessageID; // 0x34	
	// MNetworkEnable
	float m_flActiveUntilTime; // 0x38	
	// MNetworkEnable
	Vector2D m_vLocation; // 0x3c	
	// MNetworkEnable
	int32_t m_nPingedEntityEntIndex; // 0x44	
	// MNetworkEnable
	int32_t m_nID; // 0x48	
	// MNetworkEnable
	PingConfirmationIconType m_IconType; // 0x4c	
	// MNetworkEnable
	int32_t m_nAgreeState[24]; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// 
// MNetworkVarNames "int m_nTier"
// MNetworkVarNames "AbilityID_t m_nAbilityID"
struct TierNeutralInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t m_nTier; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0034[0x4]; // 0x34
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< AbilityID_t > m_nAbilityID; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// 
// MNetworkVarNames "PeriodicResourceID_t m_unPeriodicResourceID"
// MNetworkVarNames "uint32 m_unPeriodicResourceMax"
// MNetworkVarNames "uint32 m_unPeriodicResourceRemaining"
struct PlayerResourcePlayerPeriodicResourceData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	PeriodicResourceID_t m_unPeriodicResourceID; // 0x30	
	// MNetworkEnable
	uint32_t m_unPeriodicResourceMax; // 0x34	
	// MNetworkEnable
	uint32_t m_unPeriodicResourceRemaining; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x100
// Has VTable
// 
// MNetworkVarNames "uint32 m_iEventID"
// MNetworkVarNames "uint32 m_iEventPoints"
// MNetworkVarNames "uint32 m_iEventPremiumPoints"
// MNetworkVarNames "uint32 m_iEventEffectsMask"
// MNetworkVarNames "uint16 m_iEventRanks"
// MNetworkVarNames "bool m_bIsEventOwned"
// MNetworkVarNames "TeamID_t m_iFavoriteTeam"
// MNetworkVarNames "uint16 m_iFavoriteTeamQuality"
// MNetworkVarNames "uint8 m_iAvailableSalutes"
// MNetworkVarNames "uint8 m_iSaluteAmountIndex"
// MNetworkVarNames "uint32 m_iEventWagerStreak"
// MNetworkVarNames "uint8 m_iEventTeleportFXLevel"
// MNetworkVarNames "int m_nCandyPointsReason"
// MNetworkVarNames "PlayerResourcePlayerPeriodicResourceData_t m_vecPeriodicResources"
// MNetworkVarNames "uint8 m_iObsoleteSaluteAmounts"
// MNetworkVarNames "uint32 m_iObsoleteEventArcanaPeriodicResourceRemaining"
// MNetworkVarNames "uint32 m_iObsoleteEventArcanaPeriodicResourceMax"
// MNetworkVarNames "uint32 m_iObsoleteEventWagerTokensRemaining"
// MNetworkVarNames "uint32 m_iObsoleteEventWagerTokensMax"
// MNetworkVarNames "uint32 m_iObsoleteEventBountiesRemaining"
// MNetworkVarNames "uint32 m_iObsoleteRankWagersAvailable"
// MNetworkVarNames "uint32 m_iObsoleteRankWagersMax"
// MNetworkVarNames "uint32 m_iObsoleteEventPointAdjustmentsRemaining"
struct PlayerResourcePlayerEventData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	uint32_t m_iEventID; // 0x30	
	// MNetworkEnable
	uint32_t m_iEventPoints; // 0x34	
	// MNetworkEnable
	uint32_t m_iEventPremiumPoints; // 0x38	
	// MNetworkEnable
	uint32_t m_iEventEffectsMask; // 0x3c	
	// MNetworkEnable
	uint16_t m_iEventRanks; // 0x40	
	// MNetworkEnable
	bool m_bIsEventOwned; // 0x42	
private:
	[[maybe_unused]] uint8_t __pad0043[0x1]; // 0x43
public:
	// MNetworkEnable
	uint32_t m_iFavoriteTeam; // 0x44	
	// MNetworkEnable
	uint16_t m_iFavoriteTeamQuality; // 0x48	
	// MNetworkEnable
	uint8_t m_iAvailableSalutes; // 0x4a	
	// MNetworkEnable
	uint8_t m_iSaluteAmountIndex; // 0x4b	
	// MNetworkEnable
	uint32_t m_iEventWagerStreak; // 0x4c	
	// MNetworkEnable
	uint8_t m_iEventTeleportFXLevel; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	// MNetworkEnable
	int32_t m_nCandyPointsReason[5]; // 0x54	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerPeriodicResourceData_t > m_vecPeriodicResources; // 0x68	
	// MNetworkEnable
	// MNetworkAlias "m_iSaluteAmounts"
	uint8_t m_iObsoleteSaluteAmounts; // 0xd8	
private:
	[[maybe_unused]] uint8_t __pad00d9[0x3]; // 0xd9
public:
	// MNetworkEnable
	// MNetworkAlias "m_iEventArcanaPeriodicResourceRemaining"
	uint32_t m_iObsoleteEventArcanaPeriodicResourceRemaining; // 0xdc	
	// MNetworkEnable
	// MNetworkAlias "m_iEventArcanaPeriodicResourceMax"
	uint32_t m_iObsoleteEventArcanaPeriodicResourceMax; // 0xe0	
	// MNetworkEnable
	// MNetworkAlias "m_iEventWagerTokensRemaining"
	uint32_t m_iObsoleteEventWagerTokensRemaining; // 0xe4	
	// MNetworkEnable
	// MNetworkAlias "m_iEventWagerTokensMax"
	uint32_t m_iObsoleteEventWagerTokensMax; // 0xe8	
	// MNetworkEnable
	// MNetworkAlias "m_iEventBountiesRemaining"
	uint32_t m_iObsoleteEventBountiesRemaining; // 0xec	
	// MNetworkEnable
	// MNetworkAlias "m_iRankWagersAvailable"
	uint32_t m_iObsoleteRankWagersAvailable; // 0xf0	
	// MNetworkEnable
	// MNetworkAlias "m_iRankWagersMax"
	uint32_t m_iObsoleteRankWagersMax; // 0xf4	
	// MNetworkEnable
	// MNetworkAlias "m_iEventPointAdjustmentsRemaining"
	uint32_t m_iObsoleteEventPointAdjustmentsRemaining; // 0xf8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// 
// MNetworkVarNames "float m_flKillability"
// MNetworkVarNames "int32 m_nEntIndex"
struct DOTAThreatLevelInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	float m_flKillability; // 0x30	
	// MNetworkEnable
	int32_t m_nEntIndex; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1e8
// Has VTable
// 
// MNetworkVarNames "DOTAThreatLevelInfo_t m_ThreatLevelInfos"
// MNetworkVarNames "int m_nSelectedHeroID"
// MNetworkVarNames "int m_iKills"
// MNetworkVarNames "int m_iAssists"
// MNetworkVarNames "int m_iDeaths"
// MNetworkVarNames "int m_iStreak"
// MNetworkVarNames "int m_iLevel"
// MNetworkVarNames "int m_iCustomIntParam"
// MNetworkVarNames "int m_iRespawnSeconds"
// MNetworkVarNames "GameTime_t m_flLastBuybackTime"
// MNetworkVarNames "EHANDLE m_hSelectedHero"
// MNetworkVarNames "bool m_bAFK"
// MNetworkVarNames "int m_nSuggestedHeroes"
// MNetworkVarNames "bool m_bBanSuggestedHeroes"
// MNetworkVarNames "item_definition_index_t m_iTimedRewardDrops"
// MNetworkVarNames "int m_iTimedRewardDropOrigins"
// MNetworkVarNames "item_definition_index_t m_iTimedRewardCrates"
// MNetworkVarNames "item_definition_index_t m_iTimedRewardEvents"
// MNetworkVarNames "uint16 m_unCompendiumLevel"
// MNetworkVarNames "bool m_bCanRepick"
// MNetworkVarNames "bool m_bCanEarnRewards"
// MNetworkVarNames "bool m_bHasRandomed"
// MNetworkVarNames "int m_nRandomedHeroID"
// MNetworkVarNames "bool m_bBattleBonusActive"
// MNetworkVarNames "uint16 m_iBattleBonusRate"
// MNetworkVarNames "int m_iCustomBuybackCost"
// MNetworkVarNames "Color m_CustomPlayerColor"
// MNetworkVarNames "bool m_bQualifiesForPAContractReward"
// MNetworkVarNames "bool m_bHasPredictedVictory"
// MNetworkVarNames "UnitShareMask_t m_UnitShareMasks"
// MNetworkVarNames "int m_iTeamSlot"
// MNetworkVarNames "uint8 m_iBattleCupWinStreak"
// MNetworkVarNames "uint64 m_iBattleCupWinDate"
// MNetworkVarNames "uint16 m_iBattleCupSkillLevel"
// MNetworkVarNames "uint32 m_iBattleCupTeamID"
// MNetworkVarNames "uint32 m_iBattleCupTournamentID"
// MNetworkVarNames "uint8 m_iBattleCupDivision"
// MNetworkVarNames "float m_flTeamFightParticipation"
// MNetworkVarNames "int m_iFirstBloodClaimed"
// MNetworkVarNames "int m_iFirstBloodGiven"
// MNetworkVarNames "uint32 m_unPickOrder"
// MNetworkVarNames "GameTime_t m_flTimeOfLastSaluteSent"
// MNetworkVarNames "PlayerResourcePlayerEventData_t m_vecPlayerEventData"
// MNetworkVarNames "uint32 m_unSelectedHeroBadgeXP"
// MNetworkVarNames "uint8 m_iBountyRunes"
// MNetworkVarNames "uint8 m_iPowerRunes"
// MNetworkVarNames "uint8 m_iWaterRunes"
// MNetworkVarNames "uint8 m_iOutpostsCaptured"
// MNetworkVarNames "uint8 m_unGuildTier"
// MNetworkVarNames "uint16 m_unGuildLevel"
// MNetworkVarNames "uint8 m_unGuildPrimaryColor"
// MNetworkVarNames "uint8 m_unGuildSecondaryColor"
// MNetworkVarNames "uint8 m_unGuildPattern"
// MNetworkVarNames "uint64 m_unGuildLogo"
// MNetworkVarNames "uint32 m_unGuildFlags"
// MNetworkVarNames "bool m_bIsPartyGuild"
// MNetworkVarNames "GuildID_t m_unGuildID"
// MNetworkVarNames "item_definition_index_t m_unHeroStickerDefIndex"
// MNetworkVarNames "uint8 m_eHeroStickerQuality"
// MNetworkVarNames "uint8 m_eLaneSelectionFlags"
// MNetworkVarNames "uint8 m_nPlayerDraftPreferredRoles"
// MNetworkVarNames "int8 m_nPlayerDraftPreferredTeam"
struct PlayerResourcePlayerTeamData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DOTAThreatLevelInfo_t > m_ThreatLevelInfos; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	int32_t m_nSelectedHeroID; // 0xa0	
	// MNetworkEnable
	int32_t m_iKills; // 0xa4	
	// MNetworkEnable
	int32_t m_iAssists; // 0xa8	
	// MNetworkEnable
	int32_t m_iDeaths; // 0xac	
	// MNetworkEnable
	int32_t m_iStreak; // 0xb0	
	// MNetworkEnable
	int32_t m_iLevel; // 0xb4	
	// MNetworkEnable
	int32_t m_iCustomIntParam; // 0xb8	
	// MNetworkEnable
	int32_t m_iRespawnSeconds; // 0xbc	
	// MNetworkEnable
	GameTime_t m_flLastBuybackTime; // 0xc0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSelectedHero; // 0xc4	
	// MNetworkEnable
	bool m_bAFK; // 0xc8	
private:
	[[maybe_unused]] uint8_t __pad00c9[0x3]; // 0xc9
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	int32_t m_nSuggestedHeroes[4]; // 0xcc	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	bool m_bBanSuggestedHeroes[4]; // 0xdc	
	// MNetworkEnable
	item_definition_index_t m_iTimedRewardDrops; // 0xe0	
	// MNetworkEnable
	int32_t m_iTimedRewardDropOrigins; // 0xe4	
	// MNetworkEnable
	item_definition_index_t m_iTimedRewardCrates; // 0xe8	
	// MNetworkEnable
	item_definition_index_t m_iTimedRewardEvents; // 0xec	
	// MNetworkEnable
	uint16_t m_unCompendiumLevel; // 0xf0	
	// MNetworkEnable
	bool m_bCanRepick; // 0xf2	
	// MNetworkEnable
	bool m_bCanEarnRewards; // 0xf3	
	// MNetworkEnable
	bool m_bHasRandomed; // 0xf4	
private:
	[[maybe_unused]] uint8_t __pad00f5[0x3]; // 0xf5
public:
	// MNetworkEnable
	int32_t m_nRandomedHeroID; // 0xf8	
	// MNetworkEnable
	bool m_bBattleBonusActive; // 0xfc	
private:
	[[maybe_unused]] uint8_t __pad00fd[0x1]; // 0xfd
public:
	// MNetworkEnable
	uint16_t m_iBattleBonusRate; // 0xfe	
	// MNetworkEnable
	int32_t m_iCustomBuybackCost; // 0x100	
	// MNetworkEnable
	Color m_CustomPlayerColor; // 0x104	
	// MNetworkEnable
	bool m_bQualifiesForPAContractReward; // 0x108	
	// MNetworkEnable
	bool m_bHasPredictedVictory; // 0x109	
private:
	[[maybe_unused]] uint8_t __pad010a[0x2]; // 0x10a
public:
	// MNetworkEnable
	int32_t m_UnitShareMasks; // 0x10c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnTeamChanged"
	int32_t m_iTeamSlot; // 0x110	
	// MNetworkEnable
	uint8_t m_iBattleCupWinStreak; // 0x114	
private:
	[[maybe_unused]] uint8_t __pad0115[0x3]; // 0x115
public:
	// MNetworkEnable
	uint64_t m_iBattleCupWinDate; // 0x118	
	// MNetworkEnable
	uint16_t m_iBattleCupSkillLevel; // 0x120	
private:
	[[maybe_unused]] uint8_t __pad0122[0x2]; // 0x122
public:
	// MNetworkEnable
	uint32_t m_iBattleCupTeamID; // 0x124	
	// MNetworkEnable
	uint32_t m_iBattleCupTournamentID; // 0x128	
	// MNetworkEnable
	uint8_t m_iBattleCupDivision; // 0x12c	
private:
	[[maybe_unused]] uint8_t __pad012d[0x3]; // 0x12d
public:
	// MNetworkEnable
	float m_flTeamFightParticipation; // 0x130	
	// MNetworkEnable
	int32_t m_iFirstBloodClaimed; // 0x134	
	// MNetworkEnable
	int32_t m_iFirstBloodGiven; // 0x138	
	// MNetworkEnable
	uint32_t m_unPickOrder; // 0x13c	
	// MNetworkEnable
	GameTime_t m_flTimeOfLastSaluteSent; // 0x140	
private:
	[[maybe_unused]] uint8_t __pad0144[0x4]; // 0x144
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerEventData_t > m_vecPlayerEventData; // 0x148	
	// MNetworkEnable
	uint32_t m_unSelectedHeroBadgeXP; // 0x1b8	
	// MNetworkEnable
	uint8_t m_iBountyRunes; // 0x1bc	
	// MNetworkEnable
	uint8_t m_iPowerRunes; // 0x1bd	
	// MNetworkEnable
	uint8_t m_iWaterRunes; // 0x1be	
	// MNetworkEnable
	uint8_t m_iOutpostsCaptured; // 0x1bf	
	// MNetworkEnable
	uint8_t m_unGuildTier; // 0x1c0	
private:
	[[maybe_unused]] uint8_t __pad01c1[0x1]; // 0x1c1
public:
	// MNetworkEnable
	uint16_t m_unGuildLevel; // 0x1c2	
	// MNetworkEnable
	uint8_t m_unGuildPrimaryColor; // 0x1c4	
	// MNetworkEnable
	uint8_t m_unGuildSecondaryColor; // 0x1c5	
	// MNetworkEnable
	uint8_t m_unGuildPattern; // 0x1c6	
private:
	[[maybe_unused]] uint8_t __pad01c7[0x1]; // 0x1c7
public:
	// MNetworkEnable
	uint64_t m_unGuildLogo; // 0x1c8	
	// MNetworkEnable
	uint32_t m_unGuildFlags; // 0x1d0	
	// MNetworkEnable
	bool m_bIsPartyGuild; // 0x1d4	
private:
	[[maybe_unused]] uint8_t __pad01d5[0x3]; // 0x1d5
public:
	// MNetworkEnable
	GuildID_t m_unGuildID; // 0x1d8	
	// MNetworkEnable
	item_definition_index_t m_unHeroStickerDefIndex; // 0x1dc	
	// MNetworkEnable
	uint8_t m_eHeroStickerQuality; // 0x1e0	
	// MNetworkEnable
	uint8_t m_eLaneSelectionFlags; // 0x1e1	
	// MNetworkEnable
	uint8_t m_nPlayerDraftPreferredRoles; // 0x1e2	
	// MNetworkEnable
	int8_t m_nPlayerDraftPreferredTeam; // 0x1e3	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct CavernCrawlMapVariant_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CavernCrawlMapVariant_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "string_t m_iszBroadcasterChannelDescription"
// MNetworkVarNames "string_t m_iszBroadcasterChannelCountryCode"
// MNetworkVarNames "string_t m_iszBroadcasterChannelLanguageCode"
struct PlayerResourceBroadcasterData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszBroadcasterChannelDescription; // 0x30	
	// MNetworkEnable
	CUtlSymbolLarge m_iszBroadcasterChannelCountryCode; // 0x38	
	// MNetworkEnable
	CUtlSymbolLarge m_iszBroadcasterChannelLanguageCode; // 0x40	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// 
// MNetworkVarNames "int m_iReliableGold"
// MNetworkVarNames "int m_iUnreliableGold"
// MNetworkVarNames "int m_iStartingPosition"
// MNetworkVarNames "int m_iTotalEarnedGold"
// MNetworkVarNames "int m_iTotalEarnedXP"
// MNetworkVarNames "int m_iSharedGold"
// MNetworkVarNames "int m_iHeroKillGold"
// MNetworkVarNames "int m_iCreepKillGold"
// MNetworkVarNames "int m_iNeutralKillGold"
// MNetworkVarNames "int m_iCourierGold"
// MNetworkVarNames "int m_iBountyGold"
// MNetworkVarNames "int m_iRoshanGold"
// MNetworkVarNames "int m_iBuildingGold"
// MNetworkVarNames "int m_iOtherGold"
// MNetworkVarNames "int m_iComebackGold"
// MNetworkVarNames "int m_iExperimentalGold"
// MNetworkVarNames "int m_iExperimental2Gold"
// MNetworkVarNames "int m_iCreepDenyGold"
// MNetworkVarNames "int m_iTPScrollsPurchased"
// MNetworkVarNames "float m_flCustomStats"
// MNetworkVarNames "int m_iIncomeGold"
// MNetworkVarNames "int m_iWardKillGold"
// MNetworkVarNames "int m_iAbilityGold"
// MNetworkVarNames "int m_iNetWorth"
// MNetworkVarNames "int m_iDenyCount"
// MNetworkVarNames "int m_iLastHitCount"
// MNetworkVarNames "int m_iLastHitStreak"
// MNetworkVarNames "int m_iLastHitMultikill"
// MNetworkVarNames "int m_iNearbyCreepDeathCount"
// MNetworkVarNames "int m_iClaimedDenyCount"
// MNetworkVarNames "int m_iClaimedMissCount"
// MNetworkVarNames "int m_iMissCount"
// MNetworkVarNames "int m_nPossibleHeroSelection"
// MNetworkVarNames "uint16 m_iMetaLevel"
// MNetworkVarNames "uint16 m_iMetaExperience"
// MNetworkVarNames "uint16 m_iMetaExperienceAwarded"
// MNetworkVarNames "GameTime_t m_flBuybackCooldownTime"
// MNetworkVarNames "GameTime_t m_flBuybackGoldLimitTime"
// MNetworkVarNames "float m_flBuybackCostTime"
// MNetworkVarNames "float m_flCustomBuybackCooldown"
// MNetworkVarNames "float m_fStuns"
// MNetworkVarNames "float m_fHealing"
// MNetworkVarNames "float m_fRegeneratedHealth"
// MNetworkVarNames "int m_iTowerKills"
// MNetworkVarNames "int m_iRoshanKills"
// MNetworkVarNames "EHANDLE m_hCameraTarget"
// MNetworkVarNames "EHANDLE m_hOverrideSelectionEntity"
// MNetworkVarNames "int m_iObserverWardsPlaced"
// MNetworkVarNames "int m_iSentryWardsPlaced"
// MNetworkVarNames "int m_iCreepsStacked"
// MNetworkVarNames "int m_iCampsStacked"
// MNetworkVarNames "int m_iRunePickups"
// MNetworkVarNames "int m_iGoldSpentOnSupport"
// MNetworkVarNames "int m_iHeroDamage"
// MNetworkVarNames "int m_iTowerDamage"
// MNetworkVarNames "int m_iWardsPurchased"
// MNetworkVarNames "int m_iWardsDestroyed"
// MNetworkVarNames "CDOTA_UnitInventory m_PreGameInventory"
// MNetworkVarNames "int m_nKillsPerOpposingTeamMember"
// MNetworkVarNames "AbilityID_t m_iSuggestedAbilities"
// MNetworkVarNames "float m_fSuggestedAbilityWeights"
// MNetworkVarNames "AbilityID_t m_iSuggestedPregameItems"
// MNetworkVarNames "AbilityID_t m_iSuggestedItemSequences"
// MNetworkVarNames "WeightedAbilitySuggestion_t m_iSuggestedWeightedItems"
// MNetworkVarNames "WeightedAbilitySuggestion_t m_iSuggestedTopNItems"
// MNetworkVarNames "WeightedAbilitySuggestion_t m_iSuggestedNeutralItems"
// MNetworkVarNames "uint32 m_iSuggestedHeroes"
// MNetworkVarNames "float m_flSuggestedHeroesWeights"
// MNetworkVarNames "int m_iDamageByTypeReceivedPreReduction"
// MNetworkVarNames "int m_iDamageByTypeReceivedPostReduction"
// MNetworkVarNames "int m_iOutgoingDamageByTypePreReduction"
// MNetworkVarNames "int m_iOutgoingDamageByTypePostReduction"
// MNetworkVarNames "int m_iCommandsIssued"
// MNetworkVarNames "int m_iGoldSpentOnConsumables"
// MNetworkVarNames "int m_iGoldSpentOnItems"
// MNetworkVarNames "int m_iGoldSpentOnBuybacks"
// MNetworkVarNames "int m_iGoldLostToDeath"
// MNetworkVarNames "bool m_bIsNewPlayer"
// MNetworkVarNames "bool m_bIsGuidePlayer"
// MNetworkVarNames "uint64 m_iPlayerSteamID"
// MNetworkVarNames "int m_iSmokesUsed"
// MNetworkVarNames "int m_iNeutralTokensFound"
// MNetworkVarNames "int m_iWatchersTaken"
// MNetworkVarNames "int m_iLotusesTaken"
// MNetworkVarNames "int m_iTormentorKills"
// MNetworkVarNames "int m_iCourierKills"
struct DataTeamPlayer_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	// MNetworkPriority "48"
	int32_t m_iReliableGold; // 0x30	
	// MNetworkEnable
	// MNetworkPriority "48"
	int32_t m_iUnreliableGold; // 0x34	
	// MNetworkEnable
	// MNetworkChangeCallback "OnStartingPositionsChanged"
	int32_t m_iStartingPosition; // 0x38	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iTotalEarnedGold; // 0x3c	
	// MNetworkEnable
	int32_t m_iTotalEarnedXP; // 0x40	
	// MNetworkEnable
	int32_t m_iSharedGold; // 0x44	
	// MNetworkEnable
	int32_t m_iHeroKillGold; // 0x48	
	// MNetworkEnable
	int32_t m_iCreepKillGold; // 0x4c	
	// MNetworkEnable
	int32_t m_iNeutralKillGold; // 0x50	
	// MNetworkEnable
	int32_t m_iCourierGold; // 0x54	
	// MNetworkEnable
	int32_t m_iBountyGold; // 0x58	
	// MNetworkEnable
	int32_t m_iRoshanGold; // 0x5c	
	// MNetworkEnable
	int32_t m_iBuildingGold; // 0x60	
	// MNetworkEnable
	int32_t m_iOtherGold; // 0x64	
	// MNetworkEnable
	int32_t m_iComebackGold; // 0x68	
	// MNetworkEnable
	int32_t m_iExperimentalGold; // 0x6c	
	// MNetworkEnable
	int32_t m_iExperimental2Gold; // 0x70	
	// MNetworkEnable
	int32_t m_iCreepDenyGold; // 0x74	
	// MNetworkEnable
	int32_t m_iTPScrollsPurchased; // 0x78	
	// MNetworkEnable
	float m_flCustomStats; // 0x7c	
	// MNetworkEnable
	int32_t m_iIncomeGold; // 0x80	
	// MNetworkEnable
	int32_t m_iWardKillGold; // 0x84	
	// MNetworkEnable
	int32_t m_iAbilityGold; // 0x88	
	// MNetworkEnable
	int32_t m_iNetWorth; // 0x8c	
	// MNetworkEnable
	int32_t m_iDenyCount; // 0x90	
	// MNetworkEnable
	int32_t m_iLastHitCount; // 0x94	
	// MNetworkEnable
	int32_t m_iLastHitStreak; // 0x98	
	// MNetworkEnable
	int32_t m_iLastHitMultikill; // 0x9c	
	// MNetworkEnable
	int32_t m_iNearbyCreepDeathCount; // 0xa0	
	// MNetworkEnable
	int32_t m_iClaimedDenyCount; // 0xa4	
	// MNetworkEnable
	int32_t m_iClaimedMissCount; // 0xa8	
	// MNetworkEnable
	int32_t m_iMissCount; // 0xac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	int32_t m_nPossibleHeroSelection; // 0xb0	
	// MNetworkEnable
	uint16_t m_iMetaLevel; // 0xb4	
	// MNetworkEnable
	uint16_t m_iMetaExperience; // 0xb6	
	// MNetworkEnable
	uint16_t m_iMetaExperienceAwarded; // 0xb8	
private:
	[[maybe_unused]] uint8_t __pad00ba[0x2]; // 0xba
public:
	// MNetworkEnable
	GameTime_t m_flBuybackCooldownTime; // 0xbc	
	// MNetworkEnable
	GameTime_t m_flBuybackGoldLimitTime; // 0xc0	
	// MNetworkEnable
	float m_flBuybackCostTime; // 0xc4	
	// MNetworkEnable
	float m_flCustomBuybackCooldown; // 0xc8	
	// MNetworkEnable
	float m_fStuns; // 0xcc	
	// MNetworkEnable
	float m_fHealing; // 0xd0	
	// MNetworkEnable
	float m_fRegeneratedHealth; // 0xd4	
	// MNetworkEnable
	int32_t m_iTowerKills; // 0xd8	
	// MNetworkEnable
	int32_t m_iRoshanKills; // 0xdc	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hCameraTarget; // 0xe0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOverrideSelectionEntity; // 0xe4	
	// MNetworkEnable
	int32_t m_iObserverWardsPlaced; // 0xe8	
	// MNetworkEnable
	int32_t m_iSentryWardsPlaced; // 0xec	
	// MNetworkEnable
	int32_t m_iCreepsStacked; // 0xf0	
	// MNetworkEnable
	int32_t m_iCampsStacked; // 0xf4	
	// MNetworkEnable
	int32_t m_iRunePickups; // 0xf8	
	// MNetworkEnable
	int32_t m_iGoldSpentOnSupport; // 0xfc	
	// MNetworkEnable
	int32_t m_iHeroDamage; // 0x100	
	// MNetworkEnable
	int32_t m_iTowerDamage; // 0x104	
	// MNetworkEnable
	int32_t m_iWardsPurchased; // 0x108	
	// MNetworkEnable
	int32_t m_iWardsDestroyed; // 0x10c	
	// MNetworkEnable
	CDOTA_UnitInventory m_PreGameInventory; // 0x110	
	// MNetworkEnable
	int32_t m_nKillsPerOpposingTeamMember[24]; // 0x1e8	
	// MNetworkEnable
	AbilityID_t m_iSuggestedAbilities[5]; // 0x248	
	// MNetworkEnable
	float m_fSuggestedAbilityWeights[5]; // 0x25c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	AbilityID_t m_iSuggestedPregameItems[15]; // 0x270	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	AbilityID_t m_iSuggestedItemSequences[30]; // 0x2ac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	WeightedAbilitySuggestion_t m_iSuggestedWeightedItems[15]; // 0x324	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	WeightedAbilitySuggestion_t m_iSuggestedTopNItems[3]; // 0x39c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	WeightedAbilitySuggestion_t m_iSuggestedNeutralItems[25]; // 0x3b4	
	// MNetworkEnable
	uint32_t m_iSuggestedHeroes[10]; // 0x47c	
	// MNetworkEnable
	float m_flSuggestedHeroesWeights[10]; // 0x4a4	
	// MNetworkEnable
	int32_t m_iDamageByTypeReceivedPreReduction[3]; // 0x4cc	
	// MNetworkEnable
	int32_t m_iDamageByTypeReceivedPostReduction[3]; // 0x4d8	
	// MNetworkEnable
	int32_t m_iOutgoingDamageByTypePreReduction[3]; // 0x4e4	
	// MNetworkEnable
	int32_t m_iOutgoingDamageByTypePostReduction[3]; // 0x4f0	
	// MNetworkEnable
	int32_t m_iCommandsIssued; // 0x4fc	
	// MNetworkEnable
	int32_t m_iGoldSpentOnConsumables; // 0x500	
	// MNetworkEnable
	int32_t m_iGoldSpentOnItems; // 0x504	
	// MNetworkEnable
	int32_t m_iGoldSpentOnBuybacks; // 0x508	
	// MNetworkEnable
	int32_t m_iGoldLostToDeath; // 0x50c	
	// MNetworkEnable
	bool m_bIsNewPlayer; // 0x510	
	// MNetworkEnable
	bool m_bIsGuidePlayer; // 0x511	
private:
	[[maybe_unused]] uint8_t __pad0512[0x6]; // 0x512
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnPlayerSteamIDsChanged"
	uint64_t m_iPlayerSteamID; // 0x518	
	// MNetworkEnable
	int32_t m_iSmokesUsed; // 0x520	
	// MNetworkEnable
	int32_t m_iNeutralTokensFound; // 0x524	
	// MNetworkEnable
	int32_t m_iWatchersTaken; // 0x528	
	// MNetworkEnable
	int32_t m_iLotusesTaken; // 0x52c	
	// MNetworkEnable
	int32_t m_iTormentorKills; // 0x530	
	// MNetworkEnable
	int32_t m_iCourierKills; // 0x534	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x238
// Has VTable
// 
// MNetworkVarNames "int m_nBinaryObjectID"
// MNetworkVarNames "char m_szModel"
struct TreeModelReplacement_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t m_nBinaryObjectID; // 0x30	
	// MNetworkEnable
	char m_szModel[512]; // 0x34	
	// MNetworkDisable
	int32_t m_nChangeToken; // 0x234	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// 
// MNetworkVarNames "GameTime_t m_flTime"
// MNetworkVarNames "Vector2D m_vPosition"
// MNetworkVarNames "bool m_bIsOutpost"
struct DOTATeleportInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	GameTime_t m_flTime; // 0x30	
	// MNetworkEnable
	Vector2D m_vPosition; // 0x34	
	// MNetworkEnable
	bool m_bIsOutpost; // 0x3c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_iTeamNum"
// MNetworkVarNames "DataTeamPlayer_t m_vecDataTeam"
// MNetworkVarNames "uint64 m_bWorldTreeState"
// MNetworkVarNames "TreeModelReplacement_t m_vecWorldTreeModelReplacements"
// MNetworkVarNames "Vector2D m_vDesiredWardPlacement"
// MNetworkVarNames "int m_nEnemyStartingPosition"
// MNetworkVarNames "int m_nCaptainInspectedHeroID"
// MNetworkVarNames "float m_flSuggestedWardWeights"
// MNetworkVarNames "uint8 m_nSuggestedWardIndexes"
// MNetworkVarNames "int m_iSuggestedLanes"
// MNetworkVarNames "float m_iSuggestedLaneWeights"
// MNetworkVarNames "bool m_bSuggestedLaneRoam"
// MNetworkVarNames "bool m_bSuggestedLaneJungle"
// MNetworkVarNames "TierNeutralInfo_t m_vecNeutralItemsTierInfo"
// MNetworkVarNames "EHANDLE m_vecNeutralStashItems"
// MNetworkVarNames "AbilityID_t m_vecNeutralItemsConsumed"
// MNetworkVarNames "PingConfirmationState_t m_PingConfirmationStates"
// MNetworkVarNames "EHANDLE m_vecKnownClearCamps"
// MNetworkVarNames "Vector2D m_vPossibleWardPlacement"
// MNetworkVarNames "float m_vPossibleWardRadii"
// MNetworkVarNames "DOTATeleportInfo_t m_vecTrackedTeleports"
class CDOTA_DataNonSpectator : public CBaseEntity
{
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DataTeamPlayer_t > m_vecDataTeam; // 0x4a8	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_bWorldTreeState[256]; // 0x4f8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< TreeModelReplacement_t > m_vecWorldTreeModelReplacements; // 0xcf8	
	// MNetworkEnable
	Vector2D m_vDesiredWardPlacement[2]; // 0xd48	
	// MNetworkEnable
	int32_t m_nEnemyStartingPosition[5]; // 0xd58	
	// MNetworkEnable
	int32_t m_nCaptainInspectedHeroID; // 0xd6c	
	// MNetworkEnable
	float m_flSuggestedWardWeights[20]; // 0xd70	
	// MNetworkEnable
	uint8_t m_nSuggestedWardIndexes[20]; // 0xdc0	
	// MNetworkEnable
	int32_t m_iSuggestedLanes[5]; // 0xdd4	
	// MNetworkEnable
	float m_iSuggestedLaneWeights[5]; // 0xde8	
	// MNetworkEnable
	bool m_bSuggestedLaneRoam[5]; // 0xdfc	
	// MNetworkEnable
	bool m_bSuggestedLaneJungle[5]; // 0xe01	
private:
	[[maybe_unused]] uint8_t __pad0e06[0x2]; // 0xe06
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< TierNeutralInfo_t > m_vecNeutralItemsTierInfo; // 0xe08	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_vecNeutralStashItems; // 0xe58	
	// MNetworkEnable
	CNetworkUtlVectorBase< AbilityID_t > m_vecNeutralItemsConsumed; // 0xe70	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PingConfirmationState_t > m_PingConfirmationStates; // 0xe88	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_vecKnownClearCamps; // 0xed8	
	// MNetworkEnable
	Vector2D m_vPossibleWardPlacement[100]; // 0xef0	
	// MNetworkEnable
	float m_vPossibleWardRadii[100]; // 0x1210	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DOTATeleportInfo_t > m_vecTrackedTeleports; // 0x13a0	
	int32_t m_iTowerKills; // 0x13f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_DataRadiant : public CDOTA_DataNonSpectator
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_DataDire : public CDOTA_DataNonSpectator
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_DataCustomTeam : public CDOTA_DataNonSpectator
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hPowerupRune_1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hPowerupRune_2"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_2"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_3"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_4"
// MNetworkVarNames "CHandle< CBaseEntity> m_hXPRune_1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hXPRune_2"
// MNetworkVarNames "int m_iNetWorth"
// MNetworkVarNames "float m_fRadiantWinProbability"
// MNetworkVarNames "DOTAThreatLevelInfo_t m_ThreatLevelInfos"
class CDOTA_DataSpectator : public CDOTA_DataNonSpectator
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hPowerupRune_1; // 0x13f8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hPowerupRune_2; // 0x13fc	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_1; // 0x1400	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_2; // 0x1404	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_3; // 0x1408	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_4; // 0x140c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hXPRune_1; // 0x1410	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hXPRune_2; // 0x1414	
	// MNetworkEnable
	int32_t m_iNetWorth[24]; // 0x1418	
	// MNetworkEnable
	float m_fRadiantWinProbability; // 0x1478	
private:
	[[maybe_unused]] uint8_t __pad147c[0x4]; // 0x147c
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DOTAThreatLevelInfo_t > m_ThreatLevelInfos; // 0x1480	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_MapTree : public CDOTA_BinaryObject
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// 
// MNetworkVarNames "uint32 m_nID"
// MNetworkVarNames "uint32 m_nValue"
// MNetworkVarNames "uint32 m_nRawValue"
// MNetworkVarNames "uint8 m_nValueState"
// MNetworkVarNames "bool m_bValueIsMask"
struct InGamePredictionData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkEnable
	uint32_t m_nID; // 0x28	
	// MNetworkEnable
	uint32_t m_nValue; // 0x2c	
	// MNetworkEnable
	uint32_t m_nRawValue; // 0x30	
	// MNetworkEnable
	uint8_t m_nValueState; // 0x34	
	// MNetworkEnable
	bool m_bValueIsMask; // 0x35	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bVotingClosed"
// MNetworkVarNames "bool m_bAllPredictionsFinished"
// MNetworkVarNames "InGamePredictionData_t m_vecPredictions"
// MNetworkVarNames "LeagueID_t m_nLeagueID"
class CDOTAInGamePredictionState : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bVotingClosed; // 0x4a8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAllPredictionsFinished"
	bool m_bAllPredictionsFinished; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x6]; // 0x4aa
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< InGamePredictionData_t > m_vecPredictions; // 0x4b0	
	// MNetworkEnable
	LeagueID_t m_nLeagueID; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CObstructionObject
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	int32_t m_nObstructionProperties; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
class CDotaEntityFilterFlags
{
public:
	bool m_bInvertFilter; // 0x0	
	bool m_bEveryUnit; // 0x1	
private:
	[[maybe_unused]] uint8_t __pad0002[0x2]; // 0x2
public:
	int32_t m_nTeamNumber; // 0x4	
	CUtlSymbolLarge m_UnitName; // 0x8	
	bool m_bIsAncient; // 0x10	
	bool m_bIsNeutralUnitType; // 0x11	
	bool m_bIsSummoned; // 0x12	
	bool m_bIsHero; // 0x13	
	bool m_bIsRealHero; // 0x14	
	bool m_bIsTower; // 0x15	
	bool m_bIsPhantom; // 0x16	
	bool m_bIsIllusion; // 0x17	
	bool m_bIsCreep; // 0x18	
	bool m_bIsLaneCreep; // 0x19	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterDotaEntities : public CBaseFilter
{
public:
	CDotaEntityFilterFlags m_FilterFlags; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaParticleRelay : public CBaseEntity
{
public:
	CUtlSymbolLarge m_particleSystemName; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc38
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nTutorialState"
// MNetworkVarNames "int m_nTaskProgress"
// MNetworkVarNames "int m_nTaskSteps"
// MNetworkVarNames "int m_nTaskSecondsRemianing"
// MNetworkVarNames "int m_nUIState"
// MNetworkVarNames "int m_nShopState"
// MNetworkVarNames "Vector m_TargetLocation"
// MNetworkVarNames "CSpeechBubbleInfo m_SpeechBubbles"
// MNetworkVarNames "int m_nLocationID"
// MNetworkVarNames "char m_GuideStr"
// MNetworkVarNames "char m_QuickBuyStr"
class CDotaTutorialNetworker : public CBaseEntity
{
public:
	// MNetworkEnable
	int32_t m_nTutorialState; // 0x4a8	
	// MNetworkEnable
	int32_t m_nTaskProgress; // 0x4ac	
	// MNetworkEnable
	int32_t m_nTaskSteps; // 0x4b0	
	// MNetworkEnable
	int32_t m_nTaskSecondsRemianing; // 0x4b4	
	// MNetworkEnable
	int32_t m_nUIState; // 0x4b8	
	// MNetworkEnable
	int32_t m_nShopState; // 0x4bc	
	// MNetworkEnable
	Vector m_TargetLocation; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04cc[0x4]; // 0x4cc
public:
	// MNetworkEnable
	// MNetworkTypeAlias "m_SpeechBubbles"
	CUtlVectorEmbeddedNetworkVar< CSpeechBubbleInfo > m_SpeechBubbles; // 0x4d0	
	// MNetworkEnable
	int32_t m_nLocationID; // 0xa30	
	// MNetworkEnable
	char m_GuideStr[256]; // 0xa34	
	// MNetworkEnable
	char m_QuickBuyStr[256]; // 0xb34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaQuestBase : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x700
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "char m_pszSubquestText"
// MNetworkVarNames "bool m_bHidden"
// MNetworkVarNames "bool m_bCompleted"
// MNetworkVarNames "bool m_bShowProgressBar"
// MNetworkVarNames "int m_nProgressBarHueShift"
// MNetworkVarNames "int m_pnTextReplaceValuesCDotaSubquestBase"
// MNetworkVarNames "char m_pszTextReplaceString"
// MNetworkVarNames "int m_nTextReplaceValueVersion"
class CDotaSubquestBase : public CBaseEntity
{
public:
	// MNetworkEnable
	char m_pszSubquestText[256]; // 0x4a8	
	// MNetworkEnable
	bool m_bHidden; // 0x5a8	
	// MNetworkEnable
	bool m_bCompleted; // 0x5a9	
	// MNetworkEnable
	bool m_bShowProgressBar; // 0x5aa	
private:
	[[maybe_unused]] uint8_t __pad05ab[0x1]; // 0x5ab
public:
	// MNetworkEnable
	int32_t m_nProgressBarHueShift; // 0x5ac	
	// MNetworkEnable
	int32_t m_pnTextReplaceValuesCDotaSubquestBase[2]; // 0x5b0	
	// MNetworkEnable
	char m_pszTextReplaceString[64]; // 0x5b8	
	// MNetworkEnable
	int32_t m_nTextReplaceValueVersion; // 0x5f8	
	char m_pszSubquestName[256]; // 0x5fc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "char m_pszQuestTitle"
// MNetworkVarNames "char m_pszQuestText"
// MNetworkVarNames "int m_nQuestType"
// MNetworkVarNames "CHandle< CDotaSubquestBase > m_hSubquests"
// MNetworkVarNames "bool m_bHidden"
// MNetworkVarNames "bool m_bCompleted"
// MNetworkVarNames "bool m_bWinIfCompleted"
// MNetworkVarNames "bool m_bLoseIfCompleted"
// MNetworkVarNames "char m_pszGameEndText"
// MNetworkVarNames "int m_pnTextReplaceValuesCDotaQuest"
// MNetworkVarNames "char m_pszTextReplaceString"
// MNetworkVarNames "int m_nTextReplaceValueVersion"
class CDotaQuest : public CBaseEntity
{
public:
	// MNetworkEnable
	char m_pszQuestTitle[256]; // 0x4a8	
	// MNetworkEnable
	char m_pszQuestText[256]; // 0x5a8	
	// MNetworkEnable
	int32_t m_nQuestType; // 0x6a8	
	// MNetworkEnable
	CHandle< CDotaSubquestBase > m_hSubquests[8]; // 0x6ac	
	// MNetworkEnable
	bool m_bHidden; // 0x6cc	
	// MNetworkEnable
	bool m_bCompleted; // 0x6cd	
	// MNetworkEnable
	bool m_bWinIfCompleted; // 0x6ce	
	// MNetworkEnable
	bool m_bLoseIfCompleted; // 0x6cf	
	// MNetworkEnable
	char m_pszGameEndText[256]; // 0x6d0	
	// MNetworkEnable
	int32_t m_pnTextReplaceValuesCDotaQuest[4]; // 0x7d0	
	// MNetworkEnable
	char m_pszTextReplaceString[64]; // 0x7e0	
	// MNetworkEnable
	int32_t m_nTextReplaceValueVersion; // 0x820	
	int32_t m_nQuestCompleteFadeAlpha; // 0x824	
	char m_pszQuestName[256]; // 0x828	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x718
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaSubquestBuyItems : public CDotaSubquestBase
{
public:
	CUtlVector< char* > m_itemList; // 0x700	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x718
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaSubquestEntityDeath : public CDotaSubquestBase
{
public:
	CUtlVector< CUtlSymbolLarge > m_entityNameList; // 0x700	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x708
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaSubquestTutorialEvent : public CDotaSubquestBase
{
public:
	CUtlSymbolLarge m_sTutorialEvent; // 0x700	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x710
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaSubquestPlayerStat : public CDotaSubquestBase
{
public:
	subquest_player_stat_types_t m_ePlayerStatType; // 0x700	
	int32_t m_nPlayerStatValue; // 0x704	
	int32_t m_nStartingStatOffset; // 0x708	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x710
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaSubquestAbilityCastCount : public CDotaSubquestBase
{
public:
	int32_t m_sAbilityNameSymbol; // 0x700	
	int32_t m_nTargetCastCount; // 0x704	
	int32_t m_nCurrentCastCount; // 0x708	
	bool m_bRequiresChannelSuccess; // 0x70c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDotaTutorialNPCBlocker : public CBaseEntity
{
public:
	CHandle< CDOTA_BaseNPC > m_hAura; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_iOtherBlockerName; // 0x4b0	
	CHandle< CBaseEntity > m_hOtherBlocker; // 0x4b8	
	bool m_bEndPoint; // 0x4bc	
	bool m_bEnabled; // 0x4bd	
	bool m_bStartDisabled; // 0x4be	
	bool m_bHidden; // 0x4bf	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Vector m_vecBoundsMin"
// MNetworkVarNames "Vector m_vecBoundsMax"
class CDOTACameraBounds : public CBaseEntity
{
public:
	// MNetworkEnable
	Vector m_vecBoundsMin; // 0x4a8	
	// MNetworkEnable
	Vector m_vecBoundsMax; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa10
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CSpeechBubbleInfo m_SpeechBubbles"
class CSpeechBubbleManager : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "m_SpeechBubbles"
	CUtlVectorEmbeddedNetworkVar< CSpeechBubbleInfo > m_SpeechBubbles; // 0x4a8	
	uint16_t m_unBubbleCount; // 0xa08	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Has Trivial Destructor
class dota_minimap_boundary : public CEmptyEntityInstance
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFoWBlockerEntity : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFoWRevealerEntity : public CBaseEntity
{
public:
	uint32_t m_unViewerTeam; // 0x4a8	
	int32_t m_nVisionRange; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "float m_flMinX"
// MNetworkVarNames "float m_flMaxX"
// MNetworkVarNames "float m_flMinY"
// MNetworkVarNames "float m_flMaxY"
// MNetworkVarNames "FowBlockerShape_t m_fowBlockerShape"
// MNetworkVarNames "bool m_bClearRegion"
struct FowBlocker_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	float m_flMinX; // 0x30	
	// MNetworkEnable
	float m_flMaxX; // 0x34	
	// MNetworkEnable
	float m_flMinY; // 0x38	
	// MNetworkEnable
	float m_flMaxY; // 0x3c	
	// MNetworkEnable
	FowBlockerShape_t m_fowBlockerShape; // 0x40	
	// MNetworkEnable
	bool m_bClearRegion; // 0x44	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "FowBlocker_t m_vecFowBlockers"
// MNetworkVarNames "float m_flMinX"
// MNetworkVarNames "float m_flMaxX"
// MNetworkVarNames "float m_flMinY"
// MNetworkVarNames "float m_flMaxY"
// MNetworkVarNames "float m_flGridSize"
class CFoWBlockerRegion : public CBaseEntity
{
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< FowBlocker_t > m_vecFowBlockers; // 0x4a8	
	// MNetworkEnable
	float m_flMinX; // 0x4f8	
	// MNetworkEnable
	float m_flMaxX; // 0x4fc	
	// MNetworkEnable
	float m_flMinY; // 0x500	
	// MNetworkEnable
	float m_flMaxY; // 0x504	
	// MNetworkEnable
	float m_flGridSize; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AttributeBonus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Base : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Undefined : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Ability_Draft : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_lvl15_r : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_lvl20_r : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_lvl25_r : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_lvl10_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_lvl15_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_lvl20_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_lvl25_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_125 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_175 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_225 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_275 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_300 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_325 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_350 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_375 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_400 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_450 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_475 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_500 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_600 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_650 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_700 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_800 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_900 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_1000 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_125 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_175 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_225 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_275 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_300 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_350 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_400 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_500 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_600 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_700 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_800 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_1000 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Base_Attack_Rate_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_45 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_55 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_70 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_80 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_90 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_110 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_120 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_140 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_160 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_175 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_225 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Speed_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Corruption_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Corruption_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Corruption_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Corruption_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_130 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_140 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cleave_175 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Haste : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_TrueStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Reincarnation_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Reincarnation_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Reincarnation_300 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Block_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Block_18 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Block_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Break_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Break_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Break_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Break_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Break_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Immunity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_HP_Regen_80 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_125 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_175 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_Amp_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Reduction_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Reduction_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Mana_Reduction_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_MP_Regen_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Speed_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_45 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_65 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_75 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_90 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Movement_Speed_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_All_Stats_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attributes : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_And_Intelligence_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Intelligence_75 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_18 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Strength_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_80 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Agility_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Armor_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Status_Resistance_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Status_Resistance_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Status_Resistance_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Status_Resistance_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_80 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Magic_Resistance_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Day_Vision_400 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Night_Vision_400 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Night_Vision_500 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Night_Vision_600 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Night_Vision_800 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Night_Vision_1000 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Vision_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_45 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_18 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_45 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_55 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_65 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_70 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_75 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_80 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_90 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_120 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_160 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_251 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_252 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Damage_400 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_75 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_125 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_175 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_275 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_300 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_325 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Attack_Range_400 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_75 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_125 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_175 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_200 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_225 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_250 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_275 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_300 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_325 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_350 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cast_Range_400 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_18 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Amplify_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_65 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_45 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_90 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_120 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_150 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_180 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_210 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_240 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_300 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Gold_Income_420 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_16 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Evasion_75 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_70 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_18 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Lifesteal_100 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_20_Bash_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_24_Crit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_20_Crit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_30_Crit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_20_Crit_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_50_Crit_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_15 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_20 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_25 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_30 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_35 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_40 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_50 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Exp_Boost_60 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wisp_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Techies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Techies_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Techies_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Techies_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Techies_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Invoker_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pugna_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pugna_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pugna_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pugna_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pugna_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pugna_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Windranger_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sniper_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sniper_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sniper_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sniper_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sniper_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sniper_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Riki_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tusk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tusk_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tusk_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tusk_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tusk_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tusk_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tusk_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Medusa : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Medusa_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Medusa_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Medusa_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Medusa_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Silencer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Silencer_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Silencer_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Silencer_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Silencer_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Silencer_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Silencer_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slark : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slark_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slark_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slark_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slark_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slark_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slark_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spectre : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spectre_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spectre_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spectre_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spectre_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spectre_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tinker : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tinker_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tinker_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tinker_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tinker_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tinker_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tinker_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Viper_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Viper_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Viper_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Viper_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Viper_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Viper_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Luna_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nyx : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nyx_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nyx_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nyx_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nyx_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nyx_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Weaver_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Weaver_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Weaver_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Weaver_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Weaver_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Weaver_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Ursa_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lycan_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bristleback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bristleback_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bristleback_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bristleback_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Abaddon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Alchemist : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Kunkka : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Huskar : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Huskar_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Huskar_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Huskar_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Huskar_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Huskar_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Huskar_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morphling_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bane_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Doom_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Warlock_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Visage_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Necrophos : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Antimage_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Mirana_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Mirana_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Mirana_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Mirana_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Mirana_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Mirana_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Mirana_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Treant_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pangolier : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x30
// Has Trivial Destructor
class sPlayerSnapshot
{
public:
	AbilityID_t m_nItemAbilityID[10]; // 0x0	
	float m_fGameTime; // 0x28	
	uint8_t unKills; // 0x2c	
	uint8_t unDeaths; // 0x2d	
	uint8_t unAssists; // 0x2e	
	uint8_t unLevel; // 0x2f	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9e0
// Has VTable
// 
// MNetworkVarNames "int m_rgRadiantTotalEarnedGold"
// MNetworkVarNames "int m_rgDireTotalEarnedGold"
// MNetworkVarNames "int m_rgRadiantTotalEarnedXP"
// MNetworkVarNames "int m_rgDireTotalEarnedXP"
// MNetworkVarNames "int m_rgRadiantNetWorth"
// MNetworkVarNames "int m_rgDireNetWorth"
// MNetworkVarNames "GameTime_t m_flTotalEarnedGoldStartTime"
// MNetworkVarNames "GameTime_t m_flTotalEarnedGoldEndTime"
// MNetworkVarNames "int m_nGoldGraphVersion"
// MNetworkVarNames "int m_rgRadiantWinChance"
class CDOTASpectatorGraphManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x28	
	bool m_bTrackingTeamStats; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	GameTime_t m_flStartTime; // 0x54	
	// MNetworkEnable
	int32_t m_rgRadiantTotalEarnedGold[64]; // 0x58	
	// MNetworkEnable
	int32_t m_rgDireTotalEarnedGold[64]; // 0x158	
	// MNetworkEnable
	int32_t m_rgRadiantTotalEarnedXP[64]; // 0x258	
	// MNetworkEnable
	int32_t m_rgDireTotalEarnedXP[64]; // 0x358	
	// MNetworkEnable
	int32_t m_rgRadiantNetWorth[64]; // 0x458	
	// MNetworkEnable
	int32_t m_rgDireNetWorth[64]; // 0x558	
	// MNetworkEnable
	GameTime_t m_flTotalEarnedGoldStartTime; // 0x658	
	// MNetworkEnable
	GameTime_t m_flTotalEarnedGoldEndTime; // 0x65c	
	// MNetworkEnable
	int32_t m_nGoldGraphVersion; // 0x660	
	// MNetworkEnable
	int32_t m_rgRadiantWinChance[64]; // 0x664	
private:
	[[maybe_unused]] uint8_t __pad0764[0x4]; // 0x764
public:
	CountdownTimer m_TeamStatsUpdateTimer; // 0x768	
	CountdownTimer m_HeroInventorySnapshotTimer; // 0x780	
	CUtlVector< sPlayerSnapshot > m_vecPlayerSnapshots[24]; // 0x798	
	int32_t m_event_dota_player_killed; // 0x9d8	
	int32_t m_event_server_pre_shutdown; // 0x9dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CDOTASpectatorGraphManager * m_pGraphManager"
class CDOTASpectatorGraphManagerProxy : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTASpectatorGraphManager*"
	CDOTASpectatorGraphManager* m_pGraphManager; // 0x4a8	
	
	// Static fields:
	static CDOTASpectatorGraphManagerProxy* &Get_s_pDotaSpectatorGraphProxy(){return *reinterpret_cast<CDOTASpectatorGraphManagerProxy**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTASpectatorGraphManagerProxy")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// 
// MNetworkVarNames "int m_nGridX"
// MNetworkVarNames "int m_nGridY"
// MNetworkVarNames "int m_nRadius"
// MNetworkVarNames "int8 m_nViewerType"
// MNetworkVarNames "bool m_bObstructedVision"
// MNetworkVarNames "bool m_bValid"
struct TempViewerInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int32_t m_nGridX; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int32_t m_nGridY; // 0x34	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int32_t m_nRadius; // 0x38	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int8_t m_nViewerType; // 0x3c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	bool m_bObstructedVision; // 0x3d	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	bool m_bValid; // 0x3e	
	// MNetworkDisable
	bool m_bDirty; // 0x3f	
	// MNetworkDisable
	GameTime_t flEndTime; // 0x40	
	// MNetworkDisable
	int32_t nFoWID; // 0x44	
	// MNetworkDisable
	CHandle< CBaseEntity > hOwner; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "uint32 m_FoWTempViewerVersion"
// MNetworkVarNames "TempViewerInfo_t m_TempViewerInfo"
class CDOTAFogOfWarTempViewers : public CBaseEntity
{
public:
	// MNetworkEnable
	uint32_t m_FoWTempViewerVersion; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< TempViewerInfo_t > m_TempViewerInfo; // 0x4b0	
	GameTime_t m_flEndTimeMin; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Consumable_Hidden : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Throw_Snowball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Throw_Coal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Healing_Campfire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ShootFirework : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Throw_Snowball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Summon_Snowman : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Summon_Penguin : public CDOTABaseAbility
{
public:
	int32_t spawn_offset; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Decorate_Tree : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Festive_Firework : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Firecrackers : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Summon_Dragon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Summon_CNY_Tree : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Summon_CNY_Balloon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_Summon_TI9_Balloon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI9_Banner : public CDOTABaseAbility
{
public:
	CUtlVectorFixedGrowable< CHandle< CBaseEntity > > m_vecBanners; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI9_Instruments : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI9_Shovel : public CDOTABaseAbility
{
public:
	Vector m_vChannelPos; // 0x568	
	bool m_bIsUnderwater; // 0x574	
private:
	[[maybe_unused]] uint8_t __pad0575[0x3]; // 0x575
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI9_Monkey : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_PartyHat : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Is Abstract
class CDOTA_ActionRunner
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	CModifierParams* m_pEventContext; // 0x8	
	// MNetworkDisable
	CDOTA_BaseNPC* m_pCaster; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lesser_NightCrawler_Pounce : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zombie_Berserk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Corspselord_Revive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slithereen_Riptide : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Creature_Fire_Breath : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x568	
	int32_t projectile_count; // 0x56c	
	float rotation_angle; // 0x570	
	float damage; // 0x574	
	float radius; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CountdownTimer ctTimer; // 0x580	
	Vector m_vecStartRot; // 0x598	
	Vector m_vecEndRot; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Creature_Ice_Breath : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x568	
	int32_t projectile_count; // 0x56c	
	float rotation_angle; // 0x570	
	float damage; // 0x574	
	float radius; // 0x578	
	float slow_duration; // 0x57c	
	CountdownTimer ctTimer; // 0x580	
	Vector m_vecStartRot; // 0x598	
	Vector m_vecEndRot; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Creature_IceSlam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GreaterClarity : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_UpgradedMortar : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_UpgradedBarricade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BagOfGold : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Throw_Snowball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Summon_Snowman : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Decorate_Tree : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Festive_Firework : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_FacelessVoid_TimeLock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
class CDOTA_Modifier_Frostivus2018_FacelessVoid_TimeWalk_Tracker::sDamageSources
{
public:
	GameTime_t flTime; // 0x0	
	float flAmount; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Luna_LucentBeam : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Luna_Eclipse : public CDOTABaseAbility
{
public:
	bool m_bIsScepterCast; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Clinkz_Strafe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Clinkz_SearingArrows : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Clinkz_WindWalk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Clinkz_Burning_Army : public CDOTABaseAbility
{
public:
	int32_t range; // 0x568	
	Vector m_vEndpoint; // 0x56c	
	Vector m_vSlashDir; // 0x578	
	int32_t m_nDashProjectileID; // 0x584	
	Vector m_vDashProjectileLocation; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_SnowballMeteor : public CDOTABaseAbility
{
public:
	int32_t area_of_effect; // 0x568	
	float damage_interval; // 0x56c	
	int32_t vision_distance; // 0x570	
	float end_vision_duration; // 0x574	
	float main_damage; // 0x578	
	float burn_duration; // 0x57c	
	float burn_dps; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Tusk_WalrusKick : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXKickIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Windrunner_Shackleshot : public CDOTABaseAbility
{
public:
	int32_t shackle_count; // 0x568	
	Vector m_vArrowStartPos; // 0x56c	
	CHandle< CBaseEntity > m_hTarget; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_DarkWillow_ShadowRealm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_DarkWillow_BrambleMaze : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_DarkWillow_Bedlam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Puck_DreamCoil : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Spectre_ActiveDispersion : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Centaur_Stampede : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	int32_t base_damage; // 0x56c	
	float strength_damage; // 0x570	
	float slow_duration; // 0x574	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x578	
	int32_t armor_amount; // 0x590	
	float armor_duration; // 0x594	
	int32_t max_armor_stacks; // 0x598	
	int32_t m_nHeroesHit; // 0x59c	
	bool m_bHitInvisibleHero; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Centaur_Return : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Centaur_DoubleEdge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Huskar_Inner_Fire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Huskar_Burning_Spear : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Omniknight_Purification : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Omniknight_Degen_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Omniknight_Repel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Magnataur_Skewer : public CDOTABaseAbility
{
public:
	int32_t skewer_radius; // 0x568	
	int32_t skewer_speed; // 0x56c	
	int32_t range; // 0x570	
	int32_t tree_radius; // 0x574	
	int32_t m_nProjectileID; // 0x578	
	int32_t m_nVisibleTargetCount; // 0x57c	
	int32_t m_nTargetsHit; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Pangolier_ShieldCrash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_TrollWarlord_BattleTrance : public CDOTABaseAbility
{
public:
	float trance_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_TrollWarlord_Fervor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Rubick_GhostShip : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x568	
	float stun_duration; // 0x56c	
	int32_t ghostship_width; // 0x570	
	int32_t ghostship_speed; // 0x574	
	int32_t ghostship_distance; // 0x578	
	Vector m_vFinalDestination; // 0x57c	
	Vector m_vStartingPoint; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Weaver_GeminateAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Tower_BlastWave : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TempBuff_CorpseExplosion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Reward_HPAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Reward_CritAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Reward_MagicResistAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Reward_ArmorAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ascension_PlasmaField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ascension_Bulwark : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ascension_AcidBlood : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ascension_Firefly : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ascension_Silence : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ascension_MagneticField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ascension_Invis : public CDOTABaseAbility
{
public:
	float warning_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morty_Hop : public CDOTABaseAbility
{
public:
	float max_distance; // 0x568	
	Vector m_vTarget; // 0x56c	
	int32_t m_iTrackerProjectile; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morty_Hop_Launch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_ExplosiveBarrel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ravage_Potion : public CDOTA_Item
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntsHit; // 0x610	
	int32_t damage; // 0x628	
	float duration; // 0x62c	
	float spend_charge_delay; // 0x630	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Dragon_Potion : public CDOTA_Item
{
public:
	int32_t bonus_movement_speed; // 0x610	
	int32_t bonus_attack_damage; // 0x614	
	int32_t bonus_attack_range; // 0x618	
	int32_t magic_resistance; // 0x61c	
	int32_t model_scale; // 0x620	
	int32_t skin_number; // 0x624	
	bool flying_movement; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Arcanist_Potion : public CDOTA_Item
{
public:
	int32_t cooldown_reduction_pct; // 0x610	
	int32_t manacost_reduction_pct; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_EchoSlamPotion : public CDOTA_Item
{
public:
	int32_t echo_slam_damage_range; // 0x610	
	int32_t echo_slam_echo_search_range; // 0x614	
	int32_t echo_slam_echo_range; // 0x618	
	int32_t echo_slam_echo_damage; // 0x61c	
	int32_t echo_slam_initial_damage; // 0x620	
	float spend_charge_delay; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_ShadowWaveEffectPotion : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AghsFort_RefresherOrb_Shard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Minor_Stats_Upgrade : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Aghsfort_BootsOfTravel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Aghsfort_BootsOfTravel_2 : public CDOTA_Item_Aghsfort_BootsOfTravel
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_RestorativeFlower : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_StonehallGeneral_OverwhelmingOdds : public CDOTABaseAbility
{
public:
	int32_t max_steps; // 0x568	
	Vector m_vTarget; // 0x56c	
	Vector m_vDir; // 0x578	
	int32_t m_nSteps; // 0x584	
	GameTime_t m_flChannelStartTime; // 0x588	
	ParticleIndex_t m_nFXIndex; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Spectre_ActiveDispersion : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_RockGolem_Smash : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
	Vector m_vTargetLoc; // 0x56c	
private:
	[[maybe_unused]] uint8_t __pad0578[0x8]; // 0x578
public:
	int32_t radius; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Creature_Phoenix_FireSpirits : public CDOTABaseAbility
{
public:
	int32_t hp_cost_perc; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Creature_Phoenix_LaunchFireSpirit : public CDOTABaseAbility
{
public:
	int32_t spirit_speed; // 0x568	
	float duration; // 0x56c	
	int32_t radius; // 0x570	
	int32_t hp_cost_perc; // 0x574	
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Creature_Phoenix_Supernova : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PudgeMiniboss_HatefulStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PudgeMiniboss_ArmorCorruption : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Wave_Blast : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
	float knockback_duration; // 0x56c	
	float disarm_duration; // 0x570	
private:
	[[maybe_unused]] uint8_t __pad0574[0x4]; // 0x574
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x578	
	ParticleIndex_t m_nPreviewFX; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Waveblaster_Leap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Creature_Impale : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
	int32_t width; // 0x56c	
	float duration; // 0x570	
	int32_t length; // 0x574	
	int32_t speed; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Creature_SpikedCarapace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Creature_Flamestrike : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_DragonKnight_BreatheFire : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
	int32_t start_radius; // 0x56c	
	int32_t end_radius; // 0x570	
	Vector m_vStartPos; // 0x574	
	GameTime_t m_fStartTime; // 0x580	
	float m_fTotalTime; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Gyrocopter_Multi_Homing_Missile : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PineCone_ShieldBash : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "DotaTreeId_t m_nAcornTree"
class CDOTA_Ability_PineCone_AcornShot : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x20]; // 0x568
public:
	// MNetworkEnable
	uint32_t m_nAcornTree; // 0x588	
	float projectile_speed; // 0x58c	
	float bounce_delay; // 0x590	
	int32_t bounce_range; // 0x594	
	int32_t bounce_count; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Lifestealer_Enraged_Pulse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghanim_UrnUpheaval : public CDOTABaseAbility
{
public:
	Vector m_vPosition; // 0x568	
	float aoe; // 0x574	
	float slow_rate; // 0x578	
	float slow_rate_duration; // 0x57c	
	float duration; // 0x580	
	float max_slow; // 0x584	
	float burn_damage; // 0x588	
	float m_flCurrentSlow; // 0x58c	
	ParticleIndex_t m_nFXIndex; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CountdownTimer m_SlowTimer; // 0x598	
	CountdownTimer m_timer; // 0x5b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_UpheavalUrn_Reincarnation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghanimsFortress_SkeletonKing_VampiricAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Shadow_Demon_Shadow_Poison : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hPoisonedUnits; // 0x568	
	int32_t radius; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Shadow_Demon_Shadow_Poison_Release : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hShackleTarget"
class CDOTA_Ability_AghsFort_ShadowShaman_Shackles : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hShackleTarget; // 0x568	
	ParticleIndex_t nShackleFXIndex; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghanim_Spear : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
	CUtlVector< int32 > m_vecProjectileHandles; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0598[0x8]; // 0x598
public:
	Vector m_vTarget; // 0x5a0	
	Vector m_vSourcePosition; // 0x5ac	
	int32_t damage; // 0x5b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Wildwing_Tornado_Blast : public CDOTABaseAbility
{
public:
	float disable_duration; // 0x568	
	float damage; // 0x56c	
	ParticleIndex_t m_nPreviewFX; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_TreantMiniboss_NaturesGuise : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Creature_Venomancer_PoisonNova : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXPreview; // 0x568	
	int32_t radius; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_Creature_Venomancer_PoisonSting : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Aziyog_Underlord_Firestorm : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Aziyog_Underlord_Portal_Warp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Aziyog_Underlord_Dark_Portal : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Aghsfort_Ability_CrystalMaiden_CrystalNova : public CDOTABaseAbility
{
public:
	int32_t nova_damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Aghsfort_AbilityCrystalMaiden_FreezingField : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nWarningFX; // 0x568	
	ParticleIndex_t m_nRadiusFX; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Aghsfort_Ability_Creature_Magnus_Push_Skewer : public CDOTABaseAbility
{
public:
	int32_t skewer_radius; // 0x568	
	int32_t skewer_speed; // 0x56c	
	int32_t range; // 0x570	
	int32_t tree_radius; // 0x574	
	int32_t m_nProjectileID; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Aghsfort_Ability_Hoodwink_HuntersBoomerang : public CDOTABaseAbility
{
public:
	int32_t min_distance; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Pugna_Grandmaster_NetherWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_AssaultCaptain_SearingChains : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nWarningFX; // 0x568	
	ParticleIndex_t m_nRadiusFX; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_AssaultCaptain_SunRay : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_TrapRoom_Hookshot : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	Vector m_vProjectileVelocity; // 0x56c	
	bool m_bRetract; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0xb]; // 0x579
public:
	CHandle< CBaseEntity > m_hSourceCaster; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_BossPreview : public CBaseEntity
{
public:
	CUtlSymbolLarge m_strBossUnit; // 0x4a8	
	CUtlSymbolLarge m_strModelName; // 0x4b0	
	float m_flBossModelScale; // 0x4b8	
	float m_flExtraModelScale; // 0x4bc	
	int32_t m_nEncounterType; // 0x4c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hTarget"
class CDOTA_Ability_AghsFort_Capture : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CDOTA_Buff* m_pMyBuff; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_HighFive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jungle_Spirit_Reductions : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jungle_Spirit_RiverRejuvenation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_TreantLevel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_CDOTA_Item_BagOfGold_Caster_Only : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morokai_JungleHealBeam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_JungleHeal_SummonCreeps : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_JungleHeal_SecondBeam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_JungleHeal_ThirdBeam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_JungleHeal_BeamRange : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_JungleHeal_BeamHeal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_JungleHeal_SummonCreeps_Interval : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_JungleHeal_Treant_Level : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_JungleSpirit_Volcano_Eruption : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	int32_t m_iProjectile; // 0x570	
	int32_t primary_explosion_radius; // 0x574	
	int32_t secondary_explosion_radius; // 0x578	
	int32_t split_radius; // 0x57c	
	char* szProjectileFXName; // 0x580	
	char* szGroundMarkerFXName; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_JungleSpirit_Volcano_Multitarget : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_JungleSpirit_Volcano_Splinter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_JungleSpirit_Volcano_Damage_Bonus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_JungleSpirit_Storm_Cyclone : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Jungle_Spirit_Storm_Cyclone_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Jungle_Spirit_Storm_Cyclone_Projectiles : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Jungle_Spirit_Storm_Cyclone_Debuff_Duration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jungle_Spirit_Range_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_Range_Attack_Projectile_Duration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Morokai_Range_Attack_Aoe_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Movement_Speed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Spell_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Evasion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Bonus_Health : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Cooldown_Reduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Magic_Resistance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Spell_Amplify : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Attack_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Health_Regen : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jungle_Spirit_Bonus_Armor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI10_Portal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI10_DiscoBall : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hTarget"
// MNetworkVarNames "float m_flChannelTime"
class CDOTA_Ability_TI10_DiscoBall_Channel : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x568	
	// MNetworkEnable
	float m_flChannelTime; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI10_SoccerBall : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x568	
	
	// Static fields:
	static char* &Get_PARTICLE_SPAWN(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[0]->m_instance);};
	static char* &Get_PARTICLE_POST(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[1]->m_instance);};
	static char* &Get_PARTICLE_IMPACT(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[2]->m_instance);};
	static char* &Get_PARTICLE_GOAL(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[3]->m_instance);};
	static char* &Get_PARTICLE_FAIL(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[4]->m_instance);};
	static char* &Get_PARTICLE_TRAIL(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[5]->m_instance);};
	static char* &Get_PARTICLE_POST_LEFT(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[6]->m_instance);};
	static char* &Get_PARTICLE_POST_RIGHT(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Ability_Seasonal_TI10_SoccerBall")->m_static_fields[7]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI10_HotPotato : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x8]; // 0x56c
public:
	int32_t projectile_speed; // 0x574	
	float time_to_explode; // 0x578	
	GameTime_t throw_time; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI10_HotPotato_ThrowExistingPotato : public CDOTA_Ability_Seasonal_TI10_HotPotato
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TI10_HighFive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI10_GuildBanner : public CDOTABaseAbility
{
public:
	CUtlVectorFixedGrowable< CHandle< CBaseEntity > > m_vecBanners; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_BubbleGun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_RockPaperScissors : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// Is Abstract
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_Rock : public CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_Paper : public CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_Scissors : public CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_Balloon : public CDOTABaseAbility
{
public:
	float charge_use_interval; // 0x568	
	float max_usable_charges; // 0x56c	
	GameTime_t m_flLastChargeUseTime; // 0x570	
	CHandle< CBaseEntity > m_hBalloon; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_Duel : public CDOTABaseAbility
{
public:
	float model_scale; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_TI11_CongaLine : public CDOTABaseAbility
{
public:
	float max_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SpookyTeleportScroll : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x610	
	ParticleIndex_t m_nFXOrigin; // 0x614	
	ParticleIndex_t m_nFXDestination; // 0x618	
	Vector m_vDestination; // 0x61c	
	int32_t m_iMinDistance; // 0x628	
	float m_flBaseTeleportTime; // 0x62c	
	float m_flExtraTeleportTime; // 0x630	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Diretide_Portal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hTarget"
class CDOTA_Ability_Diretide_Portal_Channel : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	CHandle< CBaseEntity > m_hInitialPortal; // 0x56c	
	Vector m_vDestination; // 0x570	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x57c	
	CDOTA_Buff* m_pMyBuff; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Diretide2020_HighFive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Spring2021_DefusalBomb : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x610	
	int32_t m_nOwnerTeamNumber; // 0x614	
	bool m_bInBombSite; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hTarget"
class CDOTA_Ability_Spring2021_DefusalBomb_Defuse : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spring2021_TowerDeathRing : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Plus_HighFive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Plus_GuildBanner : public CDOTABaseAbility
{
public:
	CUtlVectorFixedGrowable< CHandle< CBaseEntity > > m_vecBanners; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x660
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Muertas_Gun : public CDOTA_Item
{
public:
	int32_t radius; // 0x610	
	int32_t ricochet_radius_start; // 0x614	
	int32_t ricochet_radius_end; // 0x618	
	int32_t speed; // 0x61c	
	Vector m_vTargetPos; // 0x620	
	Vector m_vEndpoint; // 0x62c	
	CHandle< CBaseEntity > m_hTreeTarget; // 0x638	
	bool m_bHasRicocheted; // 0x63c	
	bool m_bHasRicochetDamaged; // 0x63d	
private:
	[[maybe_unused]] uint8_t __pad063e[0x2]; // 0x63e
public:
	Vector m_vRicochetDir; // 0x640	
private:
	[[maybe_unused]] uint8_t __pad064c[0x8]; // 0x64c
public:
	int32_t m_iTempViewerRadiant; // 0x654	
	int32_t m_iTempViewerDire; // 0x658	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ofrenda_Pledge : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ofrenda : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ofrenda_Shovel : public CDOTA_Item
{
public:
	Vector m_vTreasurePos; // 0x610	
	Vector m_vChannelPos; // 0x61c	
	bool m_bIsUnderwater; // 0x628	
private:
	[[maybe_unused]] uint8_t __pad0629[0x3]; // 0x629
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x62c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Seasonal_10thAnniversary_PartyHat : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_AghsFort_Bloodstone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AghsFort_Bloodstone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xe8
// Has VTable
// 
// MNetworkVarNames "bool m_bIsValid"
// MNetworkVarNames "string_t m_iszPlayerName"
// MNetworkVarNames "int m_iPlayerTeam"
// MNetworkVarNames "bool m_bFullyJoinedServer"
// MNetworkVarNames "bool m_bFakeClient"
// MNetworkVarNames "bool m_bIsBroadcaster"
// MNetworkVarNames "uint32 m_iBroadcasterChannel"
// MNetworkVarNames "uint32 m_iBroadcasterChannelSlot"
// MNetworkVarNames "bool m_bIsBroadcasterChannelCameraman"
// MNetworkVarNames "int m_iConnectionState"
// MNetworkVarNames "uint64 m_iPlayerSteamID"
// MNetworkVarNames "DOTATeam_t m_eCoachTeam"
// MNetworkVarNames "PlayerID_t m_vecPrivateCoachPlayerIDs"
// MNetworkVarNames "CoachRating_t m_unCoachRating"
// MNetworkVarNames "DOTATeam_t m_eLiveSpectatorTeam"
// MNetworkVarNames "int m_nLiveSpectatorSpectatedHeroIndex"
// MNetworkVarNames "bool m_bIsPlusSubscriber"
// MNetworkVarNames "bool m_bWasMVPLastGame"
// MNetworkVarNames "CavernCrawlMapVariant_t m_nCavernCrawlMapVariant"
// MNetworkVarNames "int m_eAccoladeType"
// MNetworkVarNames "uint64 m_unAccoladeData"
// MNetworkVarNames "int m_iRankTier"
// MNetworkVarNames "int m_iTitle"
// MNetworkVarNames "uint64 m_unFavTeamPacked"
// MNetworkVarNames "CPlayerSlot m_nPlayerSlot"
// MNetworkVarNames "bool m_bIsBot"
// MNetworkVarNames "bool m_bHasNeutralTier"
// MNetworkVarNames "bool m_bHasRedeemedNeutralTier"
// MNetworkVarNames "int m_nCommLevel"
// MNetworkVarNames "int m_nBehaviorLevel"
// MNetworkVarNames "float m_flLastCommsTime"
struct PlayerResourcePlayerData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	bool m_bIsValid; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0031[0x7]; // 0x31
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerNamesChanged"
	CUtlSymbolLarge m_iszPlayerName; // 0x38	
	// MNetworkEnable
	// MNetworkChangeCallback "OnTeamChanged"
	int32_t m_iPlayerTeam; // 0x40	
	// MNetworkEnable
	bool m_bFullyJoinedServer; // 0x44	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFakeClientChanged"
	bool m_bFakeClient; // 0x45	
	// MNetworkEnable
	bool m_bIsBroadcaster; // 0x46	
private:
	[[maybe_unused]] uint8_t __pad0047[0x1]; // 0x47
public:
	// MNetworkEnable
	uint32_t m_iBroadcasterChannel; // 0x48	
	// MNetworkEnable
	uint32_t m_iBroadcasterChannelSlot; // 0x4c	
	// MNetworkEnable
	bool m_bIsBroadcasterChannelCameraman; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerConnectionStateChanged"
	int32_t m_iConnectionState; // 0x54	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnPlayerSteamIDsChanged"
	uint64_t m_iPlayerSteamID; // 0x58	
	// MNetworkEnable
	DOTATeam_t m_eCoachTeam; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0064[0x4]; // 0x64
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerCoachedPlayerIDsChanged"
	CNetworkUtlVectorBase< PlayerID_t > m_vecPrivateCoachPlayerIDs; // 0x68	
	// MNetworkEnable
	uint32_t m_unCoachRating; // 0x80	
	// MNetworkEnable
	DOTATeam_t m_eLiveSpectatorTeam; // 0x84	
	// MNetworkEnable
	int32_t m_nLiveSpectatorSpectatedHeroIndex; // 0x88	
	// MNetworkEnable
	bool m_bIsPlusSubscriber; // 0x8c	
	// MNetworkEnable
	bool m_bWasMVPLastGame; // 0x8d	
	// MNetworkEnable
	CavernCrawlMapVariant_t m_nCavernCrawlMapVariant; // 0x8e	
private:
	[[maybe_unused]] uint8_t __pad008f[0x1]; // 0x8f
public:
	// MNetworkEnable
	int32_t m_eAccoladeType[3]; // 0x90	
private:
	[[maybe_unused]] uint8_t __pad009c[0x4]; // 0x9c
public:
	// MNetworkEnable
	uint64_t m_unAccoladeData[3]; // 0xa0	
	// MNetworkEnable
	int32_t m_iRankTier; // 0xb8	
	// MNetworkEnable
	int32_t m_iTitle; // 0xbc	
	// MNetworkEnable
	uint64_t m_unFavTeamPacked; // 0xc0	
	// MNetworkEnable
	CPlayerSlot m_nPlayerSlot; // 0xc8	
	// MNetworkEnable
	bool m_bIsBot; // 0xcc	
	// MNetworkEnable
	bool m_bHasNeutralTier[5]; // 0xcd	
	// MNetworkEnable
	bool m_bHasRedeemedNeutralTier[5]; // 0xd2	
private:
	[[maybe_unused]] uint8_t __pad00d7[0x1]; // 0xd7
public:
	// MNetworkEnable
	int32_t m_nCommLevel; // 0xd8	
	// MNetworkEnable
	int32_t m_nBehaviorLevel; // 0xdc	
	// MNetworkEnable
	float m_flLastCommsTime; // 0xe0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct CavernCrawlPathID_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CavernCrawlPathID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x2
// Has Trivial Destructor
struct DOTACavernCrawlMapResult_t
{
public:
	CavernCrawlPathID_t m_nCompletedPathID; // 0x0	
	CavernCrawlRoomID_t m_nClaimedRoomID; // 0x1	
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct CavernCrawlRewardType_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CavernCrawlRewardType_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
struct CavernCrawlReward_t
{
public:
	uint32_t m_nActionID; // 0x0	
	CUtlString m_rewardName; // 0x8	
	CavernCrawlItemType_t m_nItemType; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0011[0x7]; // 0x11
public:
	CUtlString m_locString; // 0x18	
	CUtlString m_tooltipString; // 0x20	
	CUtlString m_image; // 0x28	
	CavernCrawlRewardType_t m_nStyleUnlockRewardType; // 0x30	
	uint8_t m_nPriority; // 0x31	
	style_index_t m_nBundleItemDefStyle; // 0x32	
	bool m_bImageIsBundleItemDef; // 0x33	
	bool m_bCannotBeReplacedWithUltraRareReward; // 0x34	
	bool m_bIsUltraRareReward; // 0x35	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Constructor
// Has Trivial Destructor
struct CavernCrawlRoom_t
{
public:
	Vector2D m_vecPosition; // 0x0	
	char* m_pCSSClass; // 0x8	
	float m_flRoomRadius; // 0x10	
	bool m_bAlwaysVisible; // 0x14	
	bool m_bStartingRoom; // 0x15	
	bool m_bFinalTreasure; // 0x16	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
struct CavernCrawlPath_t
{
public:
	CavernCrawlRoomID_t m_nStartingRoomID; // 0x0	
	CavernCrawlRoomID_t m_nEndingRoomID; // 0x1	
private:
	[[maybe_unused]] uint8_t __pad0002[0x6]; // 0x2
public:
	char* m_pCSSClass; // 0x8	
	bool m_bCannotBeSwapped; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct BlessingTypeID_t
{
public:
	int32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("BlessingTypeID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct BlessingID_t
{
public:
	int32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("BlessingID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// 
// MGetKV3ClassDefaults
// MVDataOutlinerIconExpr
// MVDataAnonymousNode
struct BlessingPath_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MPropertyAttributeEditor "VDataNodePicker(//m_mapBlessings/*)"
	CUtlString Node1; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0010[0x8]; // 0x10
public:
	// MPropertyAttributeEditor "VDataNodePicker(//m_mapBlessings/*)"
	CUtlString Node2; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0020[0x4]; // 0x20
public:
	// MPropertyDescription "This edge only allows unlocks in the direction of the arrow."
	bool bOneWay; // 0x24	
private:
	[[maybe_unused]] uint8_t __pad0025[0x3]; // 0x25
public:
	// MPropertyAttributeRange "-1 1"
	// MPropertyDescription "0 = line, + = curve to the 'right' from node 1 to node 2, - = curve left"
	float flCircleInvRadius; // 0x28	
	// MPropertyDescription "path particle color"
	Color color; // 0x2c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x198
// 
// MGetKV3ClassDefaults
// MVDataRoot
// MVDataSingleton
// MVDataPreviewWidget
// MCustomFGDMetadata
class CDOTALabyrinthBlessingsMap
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlString m_strBlessingEventAction; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0010[0x8]; // 0x10
public:
	// MPropertyAttributeEditor "locked_int()"
	BlessingTypeID_t m_nNextBlessingTypeID; // 0x18	
	// MPropertyAttributeEditor "locked_int()"
	BlessingID_t m_nNextBlessingID; // 0x1c	
	// MPropertyAttributeEditor "VDataNodePicker(//m_mapBlessingTypes/*)"
	CUtlString m_UnlockHeroBlessingType; // 0x20	
private:
	[[maybe_unused]] uint8_t __pad0028[0x8]; // 0x28
public:
	CUtlVector< CUtlString > m_vecHeroNames; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0048[0x18]; // 0x48
public:
	int32_t m_nNumStartingHeroesUnlocked; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0064[0x4]; // 0x64
public:
	// MPropertyAttributeEditor "VDataNodePicker(//m_mapBlessingTypes/*)"
	CUtlString m_UnlockLegacyHeroBlessingType; // 0x68	
private:
	[[maybe_unused]] uint8_t __pad0070[0x8]; // 0x70
public:
	CUtlVector< CUtlString > m_vecLegacyHeroNames; // 0x78	
private:
	[[maybe_unused]] uint8_t __pad0090[0x18]; // 0x90
public:
	int32_t m_nNumStartingLegacyHeroesUnlocked; // 0xa8	
private:
	[[maybe_unused]] uint8_t __pad00ac[0x4]; // 0xac
public:
	// MVDataPromoteField
	CUtlDict< BlessingType_t, int32, F( size=1 ) > m_mapBlessingTypes; // 0xb0	
private:
	[[maybe_unused]] uint8_t __pad00d8[0x40]; // 0xd8
public:
	// MVDataPromoteField
	CUtlDict< Blessing_t, int32, F( size=1 ) > m_mapBlessings; // 0x118	
private:
	[[maybe_unused]] uint8_t __pad0140[0x28]; // 0x140
public:
	// MVDataPromoteField
	CUtlVector< BlessingPath_t > m_vecPaths; // 0x168	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// 
// MGetKV3ClassDefaults
// MVDataOutlinerIconExpr
struct BlessingType_t
{
public:
	// MVDataUniqueMonotonicInt "m_nNextBlessingTypeID"
	// MPropertyAttributeEditor "locked_int()"
	BlessingTypeID_t nID; // 0x0	
	CPanoramaImageName szIconImage; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// 
// MGetKV3ClassDefaults
// MVDataOutlinerIconExpr
struct Blessing_t
{
public:
	// MVDataUniqueMonotonicInt "m_nNextBlessingID"
	// MPropertyAttributeEditor "locked_int()"
	BlessingID_t nID; // 0x0	
	// MPropertyAttributeEditor "VDataNodePicker(//m_mapBlessingTypes/*)"
	CUtlString BlessingType; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0010[0x4]; // 0x10
public:
	// MPropertyDescription "fragment cost"
	int32_t nCost; // 0x14	
	// MPropertyDescription "number of grants of action to give"
	int32_t nValue; // 0x18	
	// MPropertyDescription "can you unlock this node without owning any connected nodes?"
	bool bStartNode; // 0x1c	
private:
	[[maybe_unused]] uint8_t __pad001d[0xb]; // 0x1d
public:
	Vector2D vecPos; // 0x28	
	// MPropertyAttributeRange "0 10"
	float flSize; // 0x30	
	// MPropertyDescription "node color"
	Color color; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct BlessingPathID_t
{
public:
	int32_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("BlessingPathID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct TrophyLevel_t
{
public:
	// MPropertyDescription "the score at which this level is unlocked"
	uint32_t m_nScore; // 0x0	
	// MPropertyDescription "points to award for achieving this trophy level"
	int32_t m_nBadgePoints; // 0x4	
	// MPropertyDescription "the image used to represent this level"
	CPanoramaImageName m_sImage; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CDOTATrophyDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MPropertyDescription "unique integer ID of this trophy"
	// MVDataUniqueMonotonicInt "_editor/next_trophy_id"
	// MPropertyAttributeEditor "locked_int()"
	uint16_t m_nID; // 0x8	
	// MPropertyDescription "is this trophy still obtainable? This way we can have different presentations based on past and current trophies"
	bool m_bObtainable; // 0xa	
	// MPropertyDescription "should we render a progrss bar of progress towards the next tier"
	bool m_bShowProgressBar; // 0xb	
	// MPropertyDescription "should we show the popup when you earn the first tier of this trophy"
	bool m_bShowInitialEarn; // 0xc	
private:
	[[maybe_unused]] uint8_t __pad000d[0x3]; // 0xd
public:
	// MPropertyDescription "the date this trophy was introduced (YYYY-MM-DD or YYYY-MM-DD hh:mm:ss)"
	CUtlString m_sCreationDate; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0018[0x4]; // 0x18
public:
	// MPropertyDescription "how many badge points to grant for each increment"
	// MPropertyHideField
	uint32_t m_nBadgePointsPerUnit; // 0x1c	
	// MPropertyDescription "how many units need to be leveled up in order to get the badge point grant"
	// MPropertyHideField
	uint32_t m_nUnitsPerBadgePoint; // 0x20	
	// MPropertyDescription "the cutoff for where badge points stop granting (0 is disable this limit)"
	// MPropertyHideField
	uint32_t m_nMaxUnitsForBadgePoints; // 0x24	
	// MPropertyDescription "higher sort tiers come first in presentation"
	// MPropertyHideField
	uint32_t m_nSortTier; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad002c[0x4]; // 0x2c
public:
	// MPropertyDescription "localization string ID to use for the user facing category trophy belongs to"
	CUtlString m_sLocCategory; // 0x30	
	// MPropertyDescription "localization string ID to use for the user facing name of this trophy"
	CUtlString m_sLocName; // 0x38	
	// MPropertyDescription "localization string ID to use for the user facing descriptiontrophy"
	CUtlString m_sLocDescription; // 0x40	
	// MPropertyDescription "pluralizable localization string ID to use for the user facing unit to display on the trophy tooltip (e.g. 1 Challenge Completed / 3 Challenges Completed)"
	CUtlString m_sLocUnitsPluralizable; // 0x48	
	// MPropertyAutoExpandSelf
	CUtlVector< TrophyLevel_t > m_vecLevels; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CDOTAFeaturedGamemodeDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x18]; // 0x0
public:
	// MPropertyDescription "unique integer ID of this weekly featured game mode"
	// MVDataUniqueMonotonicInt "_editor/next_featured_gamemode_id"
	// MPropertyAttributeEditor "locked_int()"
	uint16_t m_nID; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad001a[0x2]; // 0x1a
public:
	// MPropertyDescription "Game Mode; use DOTA_GAMEMODE_EVENT for custom games and include custom game name"
	DOTA_GameMode m_eGameMode; // 0x1c	
	// MPropertyDescription "custom game addon name if any; references event_games.txt"
	CUtlString m_sCustomGame; // 0x20	
	// MPropertyDescription "shards per win"
	int32_t m_nShardsPerWin; // 0x28	
	// MPropertyDescription "shards per loss"
	int32_t m_nShardsPerLoss; // 0x2c	
	// MPropertyDescription "the date/time this mode starts (YYYY-MM-DD hh:mm:ss) UTC"
	CUtlString m_sStartTime; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0038[0x8]; // 0x38
public:
	// MPropertyDescription "the date/time this mode ends (YYYY-MM-DD hh:mm:ss) UTC"
	CUtlString m_sEndTime; // 0x40	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x210
// 
// MGetKV3ClassDefaults
// MVDataRoot
class SPingWheelMessageDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0xc]; // 0x0
public:
	// MPropertyDescription "unique integer ID of this ping wheel message"
	// MVDataUniqueMonotonicInt "_editor/next_ping_wheel_id"
	// MPropertyAttributeEditor "locked_int()"
	PingWheelMessageID_t nID; // 0xc	
	// MPropertyDescription "localization string ID for name of ping"
	CUtlString sLocName; // 0x10	
	// MPropertyDescription "Particle system of ping effect"
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > > sParticle; // 0x18	
	// MPropertyDescription "Particle system of ping effect when targetting an npc (optional)"
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > > sParticleTarget; // 0xf8	
	// MPropertyDescription "Color of ping effect. Leave default to use pinging player color."
	// MPropertyColorPlusAlpha
	Color color; // 0x1d8	
private:
	[[maybe_unused]] uint8_t __pad01dc[0x4]; // 0x1dc
public:
	// MPropertyDescription "Image shown while customizing ping wheel"
	CPanoramaImageName sImage; // 0x1e0	
	// MPropertyDescription "Sound played when pinging"
	// MPropertyCustomFGDType "sound"
	CUtlString sSound; // 0x1f0	
	// MPropertyDescription "localization string ID for chat message when pinging"
	CUtlString sChat; // 0x1f8	
	// MPropertyDescription "Multiplier to apply to 3 second base duration (dota_minimap_ping_duration)"
	float fDurationMultiplier; // 0x200	
	// MPropertyDescription "Event for tracking expiration. See EEvent enum"
	EEvent eUnlockEvent; // 0x204	
	// MPropertyDescription "Action of the unlock event which awards this ping wheel"
	uint32_t nUnlockEventActionID; // 0x208	
	// MPropertyDescription "ID of icon to show on minimap. See scripts/minimap_icons.txt"
	int32_t nMinimapIcon; // 0x20c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x4
// Has Trivial Constructor
// Has Trivial Destructor
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct TrackedStatKillEaterData_t
{
public:
	// MPropertyDescription "the kill eater id"
	uint32_t unKillEaterEvent; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct TrackedStatCombatQueryData_t
{
public:
	// MPropertyDescription "the combat query file"
	CUtlString strCombatQueryPath; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct TrackedStatExpressionData_t
{
public:
	// MPropertyDescription "The expression"
	CUtlString strExpression; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct TrackedStatAggregateData_t
{
public:
	// MPropertyDescription "The stat to aggregate"
	CUtlString m_strIndividualStat; // 0x0	
	// MPropertyDescription "The aggregate function"
	ETrackedStatAggregate m_eAggregate; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct TrackedStatHeroAdjectiveData_t
{
public:
	// MPropertyDescription "The adjective"
	CUtlString m_strAdjective; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CPlayerTrackedStatDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MPropertyDescription "unique integer ID of this stat"
	// MVDataUniqueMonotonicInt "_editor/next_player_stat_id"
	// MPropertyAttributeEditor "locked_int()"
	TrackedStatID_t m_unStatID; // 0x8	
	// MPropertyDescription "how this stat is implemented"
	EPlayerTrackedStatImpl m_eStatImpl; // 0xc	
	// MPropertyDescription "For k_ePlayerTrackedStatImpl_KillEater, what is the kill eater information."
	// MPropertySuppressExpr "m_eStatImpl != k_ePlayerTrackedStatImpl_KillEater"
	TrackedStatKillEaterData_t m_killEaterData; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0014[0x4]; // 0x14
public:
	// MPropertyDescription "For k_ePlayerTrackedStatImpl_CombatQuery, what is the combat query information."
	// MPropertySuppressExpr "m_eStatImpl != k_ePlayerTrackedStatImpl_CombatQuery"
	TrackedStatCombatQueryData_t m_combatQueryData; // 0x18	
	// MPropertyDescription "For k_ePlayerTrackedStatImpl_Expression, what is the expression information."
	// MPropertySuppressExpr "m_eStatImpl != k_ePlayerTrackedStatImpl_Expression"
	TrackedStatExpressionData_t m_expressionData; // 0x20	
	// MPropertyDescription "For k_ePlayerTrackedStatImpl_HeroAdjective, what is the adjective information."
	// MPropertySuppressExpr "m_eStatImpl != k_ePlayerTrackedStatImpl_HeroAdjective"
	TrackedStatHeroAdjectiveData_t m_heroAdjectiveData; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CTeamTrackedStatDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MPropertyDescription "unique integer ID of this stat"
	// MVDataUniqueMonotonicInt "_editor/next_team_stat_id"
	// MPropertyAttributeEditor "locked_int()"
	TrackedStatID_t m_unStatID; // 0x8	
	// MPropertyDescription "how this stat is implemented"
	ETeamTrackedStatImpl m_eStatImpl; // 0xc	
	// MPropertyDescription "For k_eTeamTrackedStatImpl_Expression, what is the expression information."
	// MPropertySuppressExpr "m_eStatImpl != k_ePlayerTrackedStatImpl_Expression"
	TrackedStatExpressionData_t m_expressionData; // 0x10	
	// MPropertyDescription "For k_eTeamTrackedStatImpl_PlayerAggregate, what is the aggregate information."
	// MPropertySuppressExpr "m_eStatImpl != k_eTeamTrackedStatImpl_PlayerAggregate"
	TrackedStatAggregateData_t m_aggregateData; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CMatchTrackedStatDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MPropertyDescription "unique integer ID of this stat"
	// MVDataUniqueMonotonicInt "_editor/next_match_stat_id"
	// MPropertyAttributeEditor "locked_int()"
	TrackedStatID_t m_unStatID; // 0x8	
	// MPropertyDescription "how this stat is implemented"
	EMatchTrackedStatImpl m_eStatImpl; // 0xc	
	// MPropertyDescription "For k_eMatchTrackedStatImpl_Expression, what is the expression information."
	// MPropertySuppressExpr "m_eStatImpl != k_eMatchTrackedStatImpl_Expression"
	TrackedStatExpressionData_t m_expressionData; // 0x10	
	// MPropertyDescription "For k_eMatchTrackedStatImpl_PlayerAggregate or k_eMatchTrackedStatImpl_TeamAggregate, what is the aggregate information."
	// MPropertySuppressExpr "m_eStatImpl != k_eMatchTrackedStatImpl_PlayerAggregate && m_eStatImpl != k_eMatchTrackedStatImpl_TeamAggregate"
	TrackedStatAggregateData_t m_aggregateData; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x58
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CDOTABingoStatDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MPropertyDescription "Name of tracked match stat, used to look up match stat ID"
	CUtlString m_strMatchStatName; // 0x8	
	// MPropertyDescription "Expected value."
	float m_fStatAverage; // 0x10	
	// MPropertyDescription "Statistical standard deviation."
	float m_fStatStdDev; // 0x14	
	// MPropertyDescription "Short user-facing string that appears on a bingo square"
	CUtlString m_sNameLocString; // 0x18	
	// MPropertyDescription "User-facing tooltip with description"
	CUtlString m_sTooltipLocString; // 0x20	
	// MPropertyDescription "Optional value to use in loc string's dialog variable"
	int32_t m_nLocStringValue; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad002c[0x4]; // 0x2c
public:
	// MPropertyDescription "Optional information to include in a bingo stat tooltip"
	CUtlString m_strHeroAdjective; // 0x30	
	// MPropertyDescription "Whether we negate the hero adjective when displaying tooltip"
	bool m_bNegativeHeroAdjective; // 0x38	
private:
	[[maybe_unused]] uint8_t __pad0039[0x3]; // 0x39
public:
	// MPropertyDescription "At which league phase this stat unlocks"
	int32_t m_nMinLeaguePhase; // 0x3c	
	// MPropertyDescription "Up to which league phase this stat is usable"
	int32_t m_nMaxLeaguePhase; // 0x40	
	// MPropertyDescription "Expected value for League Phase Playoffs game."
	float m_fPlayoffsStatAverage; // 0x44	
	// MPropertyDescription "Statistical standard deviation of League Phase Playoffs game."
	float m_fPlayoffsStatStdDev; // 0x48	
	// MPropertyDescription "Expected value for League Phase Main Event game."
	float m_fMainEventStatAverage; // 0x4c	
	// MPropertyDescription "Statistical standard deviation of League Phase Main Event game."
	float m_fMainEventStatStdDev; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 2
// Size: 0x2
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyLeagueID_t
{
public:
	uint16_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyLeagueID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyTabletID_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyTabletID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyGemSlot_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyGemSlot_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyGemShape_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyGemShape_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyGemQuality_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyGemQuality_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 1
// Size: 0x1
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyTitle_t
{
public:
	uint8_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyTitle_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 2
// Size: 0x2
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyCraftDataID_t
{
public:
	uint16_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyCraftDataID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 2
// Size: 0x2
// Has Trivial Destructor
// 
// MIsBoxedIntegerType
struct FantasyOperationID_t
{
public:
	uint16_t m_Value; // 0x0	
	
	// Static fields:
	static bool &Get_IS_TYPESAFE_INTEGER(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("FantasyOperationID_t")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingTrackedStat_t
{
public:
	// MPropertyDescription "What Stats are we looking for"
	CUtlString m_sStatName; // 0x0	
	// MPropertyDescription "Is the match about the player, the player's team, or the match?"
	EFantasyStatType m_eStatType; // 0x8	
	// MPropertyDescription "Threshold Stat Value required"
	uint32_t m_unThresholdValue; // 0xc	
	// MPropertyDescription "Is the treshold a min or max?"
	bool m_bThresholdIsMin; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingTitleData_t
{
public:
	// MPropertyDescription "Unique integer ID of the title"
	FantasyTitle_t m_unTitle; // 0x0	
	// MPropertyDescription "Localization name of the title when used as an aggregate"
	CUtlString m_sLocName; // 0x8	
	// MPropertyDescription "Localization name of the title when used on it's own"
	CUtlString m_sLocNameIndividual; // 0x10	
	// MPropertyDescription "Localization token for explaining what the title does"
	CUtlString m_sLocExplanation; // 0x18	
	// MPropertyDescription "Localization token for explaining what the title does in sitations that allow mouseover"
	CUtlString m_sLocExplanationMouseOver; // 0x20	
	// MPropertyDescription "Controls how we decide to use the stat vector"
	EFantasyStatMatchMode m_eMode; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad002c[0x4]; // 0x2c
public:
	// MPropertyDescription "Stats to Track"
	CUtlVector< FantasyCraftingTrackedStat_t > m_vecStats; // 0x30	
	// MPropertyDescription "Bonus this title provides"
	int32_t m_nBonus; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingGemData_t
{
public:
	// MPropertyDescription "Unique Identifier for the Gem Type"
	Fantasy_Gem_Type m_eType; // 0x0	
	// MPropertyDescription "Localization name of the gem"
	CUtlString m_sLocName; // 0x8	
	// MPropertyDescription "Which stats can this gem roll"
	CUtlVector< Fantasy_Scoring > m_eStats; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingShapeData_t
{
public:
	// MPropertyDescription "Unique identifier for the Shape"
	FantasyGemShape_t m_unShapeID; // 0x0	
	// MPropertyDescription "Maps the shape to it's code behavior."
	EFantasyShapeBehavior m_eShapeBehavior; // 0x4	
	// MPropertyDescription "Localization token for the name of the shape"
	CUtlString m_sLocName; // 0x8	
	// MPropertyDescription "Localization token for explaining what the shape does"
	CUtlString m_sLocExplanation; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingQualityData_t
{
public:
	// MPropertyDescription "Unique Identifier for the Quality"
	FantasyGemQuality_t m_unQualityID; // 0x0	
	// MPropertyDescription "Localization token for the name of the quality"
	CUtlString m_sLocName; // 0x8	
	// MPropertyDescription "How much does this quality improve the stat?"
	int32_t m_nBonus; // 0x10	
	// MPropertyDescription "How likely are we to roll this quality?"
	int32_t m_nRollWeight; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingGemMutation_t
{
public:
	// MPropertyDescription "What this operation is targeting"
	EFantasyMutationTarget m_eTarget; // 0x0	
	// MPropertyDescription "What we are doing in this operation"
	EFantasyMutationOperation m_eOperation; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0xc
// Has Trivial Destructor
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingGemSlotData_t
{
public:
	// MPropertyDescription "Gem Slot"
	FantasyGemSlot_t m_unGemSlot; // 0x0	
	// MPropertyDescription "Gem Type"
	Fantasy_Gem_Type m_eGemType; // 0x4	
	// MPropertyDescription "Minimum tablet level to unlock this type of gem, -1 or 0 for always unlocked"
	int32_t m_nRequiredTabletLevel; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftingTabletData_t
{
public:
	// MPropertyDescription "Unique ID for the Tablet"
	FantasyTabletID_t m_unID; // 0x0	
	// MPropertyDescription "What role is this tablet for"
	Fantasy_Roles m_eRole; // 0x4	
	CUtlVector< FantasyCraftingGemSlotData_t > m_vecGemSlots; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftOperation_t
{
public:
	// MPropertyDescription "Unique identifier for this operation"
	FantasyOperationID_t m_unOperationID; // 0x0	
	// MPropertyDescription "Weight for when rolling which operations to add to the roll board"
	int32_t m_nRollWeight; // 0x4	
	// MPropertyDescription "What extra input is needed for the operation"
	EFantasyOperationTarget m_eTarget; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad000c[0x4]; // 0xc
public:
	// MPropertyDescription "Localization String describing the operation"
	CUtlString m_sLocDescription; // 0x10	
	// MPropertyDescription "What operations this will perform"
	CUtlVector< FantasyCraftingGemMutation_t > m_vecOperations; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftOperationBucket_t
{
public:
	// MPropertyDescription "How many operations should the user get from this bucket"
	uint16_t m_unOperationCount; // 0x0	
	CUtlVector< FantasyCraftOperation_t > m_vecOperations; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb8
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyCraftSetupData_t
{
public:
	// MPropertyDescription "Unique identifier for this set of crafting data"
	FantasyCraftDataID_t m_unID; // 0x0	
	CUtlVector< FantasyCraftingTitleData_t > m_vecPrefixes; // 0x8	
	CUtlVector< FantasyCraftingTitleData_t > m_vecSuffixes; // 0x20	
	CUtlVector< FantasyCraftingGemData_t > m_vecGems; // 0x38	
	CUtlVector< FantasyCraftingShapeData_t > m_vecShapes; // 0x50	
	CUtlVector< FantasyCraftingQualityData_t > m_vecQualities; // 0x68	
	CUtlVector< FantasyCraftingTabletData_t > m_vecTablets; // 0x80	
	CUtlVector< FantasyCraftOperationBucket_t > m_vecOperations; // 0x98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyPlayerData_t
{
public:
	// MPropertyDescription "Account ID of the Pro Player"
	uint32_t m_unAccountID; // 0x0	
	// MPropertyDescription "What team this player is competing with for the fantasy league"
	uint32_t m_unTeamID; // 0x4	
	// MPropertyDescription "What region does this player play for"
	ELeagueRegion m_eRegion; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad000c[0x4]; // 0xc
public:
	// MPropertyDescription "Name of the pro player"
	CUtlString m_strPlayerName; // 0x10	
	// MPropertyDescription "Is this player still playing in the league?"
	bool m_bIsValid; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyRoleData_t
{
public:
	// MPropertyDescription "What role are these players for"
	Fantasy_Roles m_eRole; // 0x0	
	// MPropertyDescription "List of Pro Players for the role"
	CUtlVector< FantasyPlayerData_t > m_vecPlayers; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyPeriodData_t
{
public:
	// MPropertyDescription "What Fantasy Period this data is for"
	FantasyPeriod_t m_unPeriod; // 0x0	
	// MPropertyDescription "What level are fantasy tablets when this is the active crafting period?"
	int32_t m_nTabletLevel; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x58
// 
// MGetKV3ClassDefaults
// MPropertyAutoExpandSelf
struct FantasyLeagueData_t
{
public:
	// MPropertyDescription "Unique identifier for the league"
	FantasyLeagueID_t m_nFantasyLeagueID; // 0x0	
	// MPropertyDescription "What event this data is tied to"
	EEvent m_eEvent; // 0x4	
	// MPropertyDescription "What data to use for crafting"
	FantasyCraftDataID_t m_nCraftingID; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad000a[0x6]; // 0xa
public:
	// MPropertyDescription "Which Leagues is this attached to"
	CUtlVector< LeagueID_t > m_nLeagues; // 0x10	
	CUtlVector< FantasyRoleData_t > m_vecPlayers; // 0x28	
	CUtlVector< FantasyPeriodData_t > m_vecPeriods; // 0x40	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// 
// MGetKV3ClassDefaults
// MVDataRoot
class CDOTAFantasyDefinition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< FantasyCraftSetupData_t > m_vecCraftingSetups; // 0x8	
	CUtlVector< FantasyLeagueData_t > m_vecLeagues; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8718
// Has VTable
class CDOTA_Bot
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	int32_t m_iLifesteal; // 0x10	
	int32_t m_iBlock; // 0x14	
	bool m_bForceIdle; // 0x18	
	bool m_bForceCreepAttack; // 0x19	
private:
	[[maybe_unused]] uint8_t __pad001a[0x2]; // 0x1a
public:
	float m_fExecutionTime[30]; // 0x1c	
	int32_t m_iCurExecutionTime; // 0x94	
	PlayerID_t m_iPlayerID; // 0x98	
	CHandle< CBaseEntity > m_hUnit; // 0x9c	
	CDOTA_TeamCommander* m_pTeamCommander; // 0xa0	
	int32_t m_iUnitType; // 0xa8	
	float m_fAggressionFactor; // 0xac	
	bool m_bBotControlled; // 0xb0	
	bool m_bLiquidate; // 0xb1	
	bool m_bDoNotPurchase; // 0xb2	
private:
	[[maybe_unused]] uint8_t __pad00b3[0x1]; // 0xb3
public:
	int32_t m_iDifficulty; // 0xb4	
	bool m_bIsFullScriptTakeover; // 0xb8	
private:
	[[maybe_unused]] uint8_t __pad00b9[0x3]; // 0xb9
public:
	DOTA_LANE m_CurrentLane; // 0xbc	
	DOTA_LANE m_MostRecentLane; // 0xc0	
	DOTA_LANE m_AssignedLane; // 0xc4	
	DOTA_LANE m_TargetLane; // 0xc8	
	DOTA_LANE m_ForcedLane; // 0xcc	
	float m_fCurrentLaneAmount; // 0xd0	
	bool m_bIsNPXCarry; // 0xd4	
private:
	[[maybe_unused]] uint8_t __pad00d5[0x3]; // 0xd5
public:
	float m_fEstimatedUnitDamage; // 0xd8	
	float m_fEstimatedMaxUnitDamage; // 0xdc	
	float m_fEstimatedBuildingDamage; // 0xe0	
	bool m_bWantsToCast; // 0xe4	
private:
	[[maybe_unused]] uint8_t __pad00e5[0x3]; // 0xe5
public:
	int32_t m_iWantsToCastFrame; // 0xe8	
	bool m_bWantsToAttack; // 0xec	
private:
	[[maybe_unused]] uint8_t __pad00ed[0x3]; // 0xed
public:
	int32_t m_iWantsToAttackFrame; // 0xf0	
private:
	[[maybe_unused]] uint8_t __pad00f4[0x4]; // 0xf4
public:
	CountdownTimer m_UpdateCurrentLaneTimer; // 0xf8	
	CountdownTimer m_UpdateModeTimer; // 0x110	
	CountdownTimer m_ModeThinkTimer; // 0x128	
	CountdownTimer m_InteralRatingsTimer; // 0x140	
	CountdownTimer m_BuybackDelayTimer; // 0x158	
	CountdownTimer m_CourierUsageTimer; // 0x170	
	CountdownTimer m_AbilityMutedTimer; // 0x188	
	CountdownTimer m_AbilityMutedCheckTimer; // 0x1a0	
	GameTime_t m_HitByTowerTime; // 0x1b8	
	GameTime_t m_HitByHeroTime[24]; // 0x1bc	
	GameTime_t m_HitByCreepTime; // 0x21c	
	GameTick_t m_nEstimatedDamageUpdatedTick; // 0x220	
	GameTick_t m_nNearbyUnitsUpdatedTick; // 0x224	
private:
	[[maybe_unused]] uint8_t __pad0228[0xc0]; // 0x228
public:
	CUtlVector< int32 > m_NearbyTrees; // 0x2e8	
	int32_t m_nNearbyEnemyCreeps; // 0x300	
	int32_t m_nAttackingCreeps; // 0x304	
	int32_t m_nAttackingTowers; // 0x308	
	int32_t m_nAttackingHeroes; // 0x30c	
	GameTime_t m_fLastSeen; // 0x310	
	int32_t m_nFailedPaths; // 0x314	
	CHandle< CBaseEntity > m_hTarget; // 0x318	
	Vector m_vTargetLoc; // 0x31c	
	GameTime_t m_fTargetLastSeen; // 0x328	
	CHandle< CBaseEntity > m_hTargetLastHitCreep; // 0x32c	
	bool m_bWasInvisible; // 0x330	
	bool m_bKnownInvisible; // 0x331	
private:
	[[maybe_unused]] uint8_t __pad0332[0x2]; // 0x332
public:
	Vector m_vLastSeenLoc; // 0x334	
	Vector m_vRequestedBlinkLoc; // 0x340	
	GameTime_t m_fRequestedBlinkStart; // 0x34c	
	GameTime_t m_fRequestedBlinkExpire; // 0x350	
private:
	[[maybe_unused]] uint8_t __pad0354[0x4]; // 0x354
public:
	CUtlVector< CHandle< CBaseEntity > > m_hMinions; // 0x358	
	CUtlVector< CDOTABaseAbility* > m_Build; // 0x370	
private:
	[[maybe_unused]] uint8_t __pad0388[0x82e0]; // 0x388
public:
	float m_fModeDesires[27]; // 0x8668	
	int32_t m_iPreviousBotModeType; // 0x86d4	
private:
	[[maybe_unused]] uint8_t __pad86d8[0x30]; // 0x86d8
public:
	GameTime_t m_fPendingActionExecuteTime; // 0x8708	
	bool m_bPendingActionBypass; // 0x870c	
private:
	[[maybe_unused]] uint8_t __pad870d[0x3]; // 0x870d
public:
	int32_t m_nForceAbility; // 0x8710	
	GameTime_t m_flLastDebugTime; // 0x8714	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1488
// Has VTable
class CDOTA_TeamCommander
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	GameTick_t m_nLastUnitsCollectTick; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0014[0x2b4]; // 0x14
public:
	CountdownTimer m_LaneFrontUpdate; // 0x2c8	
	uint64_t m_ulBotScriptUGC; // 0x2e0	
	uint32_t m_rtBotScriptUpdated; // 0x2e8	
private:
	[[maybe_unused]] uint8_t __pad02ec[0x4]; // 0x2ec
public:
	CountdownTimer m_AvoidanceGridTimer; // 0x2f0	
	CountdownTimer m_EnemyVisibilityGridTimer; // 0x308	
	CountdownTimer m_LaneStatusTimer; // 0x320	
	CountdownTimer m_ChatThrottleTimer; // 0x338	
	DOTATeam_t m_eTeam; // 0x350	
private:
	[[maybe_unused]] uint8_t __pad0354[0x6c]; // 0x354
public:
	bool m_bLateGame; // 0x3c0	
private:
	[[maybe_unused]] uint8_t __pad03c1[0x3]; // 0x3c1
public:
	float m_LaneLengths[4]; // 0x3c4	
	float m_LaneFrontCreepsAmounts[2][4]; // 0x3d4	
	float m_LaneFrontTowersAmounts[2][4]; // 0x3f4	
private:
	[[maybe_unused]] uint8_t __pad0414[0x4]; // 0x414
public:
	CountdownTimer m_LaneReassignTimer; // 0x418	
	CUtlVector< int32 > m_AvoidanceGrid; // 0x430	
	GameTime_t m_fNextPotentialLocationTick[24]; // 0x448	
	int32_t m_iPotentialLocationBuffer[24]; // 0x4a8	
	CUtlVector< uint8 > m_PotentialLocationGrid[2][24]; // 0x508	
	CHandle< CBaseEntity > m_hRoamingUnit; // 0x988	
	DOTA_LANE m_RoamTargetLane; // 0x98c	
private:
	[[maybe_unused]] uint8_t __pad0990[0x30]; // 0x990
public:
	CHandle< CBaseEntity > m_Buildings[4][8]; // 0x9c0	
	float m_fBuildingFortTimings[4][8]; // 0xa40	
	CHandle< CBaseEntity > m_LaneNodes[4][9]; // 0xac0	
	float m_fPushLaneDesire[4]; // 0xb50	
	float m_fPushLaneRawDesire[4]; // 0xb60	
	float m_fPushLaneConvenienceDesire[4]; // 0xb70	
	float m_fDefendLaneDesire[4]; // 0xb80	
	float m_fDefendLaneUrgencyDesire[4]; // 0xb90	
	float m_fDefendLanePowerDesire[4]; // 0xba0	
	float m_fFarmLaneDesire[4]; // 0xbb0	
	int32_t m_iLastSeenRoshanHealth; // 0xbc0	
	float m_fRoshanDesire; // 0xbc4	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedPushUnits[4]; // 0xbc8	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedDefendUnits[4]; // 0xc28	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedRoamUnits; // 0xc88	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedRoshanUnits; // 0xca0	
	float m_fRoamDesire; // 0xcb8	
	float m_fRoamOffensivePowerFactor; // 0xcbc	
	float m_fRoamDistanceFactor; // 0xcc0	
	float m_fRoamPositionFactor; // 0xcc4	
	CHandle< CBaseEntity > m_hRoamTarget; // 0xcc8	
	Vector m_vRoamTargetLoc; // 0xccc	
	float m_fHeroSelectionTimes[24]; // 0xcd8	
private:
	[[maybe_unused]] uint8_t __pad0d38[0x18]; // 0xd38
public:
	Vector m_vBaseLocation; // 0xd50	
private:
	[[maybe_unused]] uint8_t __pad0d5c[0x4]; // 0xd5c
public:
	CUtlVector< CHandle< CBaseEntity > > m_AllUnits; // 0xd60	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedUnits; // 0xd78	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedHeroes; // 0xd90	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedCreeps; // 0xda8	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedWards; // 0xdc0	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedBuildings; // 0xdd8	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedOther; // 0xdf0	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyUnits; // 0xe08	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyHeroes; // 0xe20	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyCreeps; // 0xe38	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyWards; // 0xe50	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyBuildings; // 0xe68	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyOther; // 0xe80	
	CUtlVector< CHandle< CBaseEntity > > m_AllNeutralCreeps; // 0xe98	
	CUtlVector< CHandle< CBaseEntity > > m_ThinkerUnits; // 0xeb0	
	CUtlVector< CHandle< CBaseEntity > > m_AllUnitsIncludingDead; // 0xec8	
private:
	[[maybe_unused]] uint8_t __pad0ee0[0x30]; // 0xee0
public:
	CUtlVector< CHandle< CBaseEntity > > m_hCouriers; // 0xf10	
	CUtlVector< CHandle< CBaseEntity > > m_hDisabledBots; // 0xf28	
private:
	[[maybe_unused]] uint8_t __pad0f40[0x380]; // 0xf40
public:
	GameTime_t m_fGoodLuckFlavorTextTime; // 0x12c0	
	GameTime_t m_fTeamfightFlavorTextTime; // 0x12c4	
	GameTime_t m_fCongratulateHeroFlavorTextTime; // 0x12c8	
	GameTime_t m_fLastAliveHeroHistorySnapshotTime; // 0x12cc	
	int32_t m_iAliveHeroHistoryIndex; // 0x12d0	
	int32_t m_iAliveHeroHistory[5]; // 0x12d4	
	GameTime_t m_fPlayerDraftChooseTime; // 0x12e8	
private:
	[[maybe_unused]] uint8_t __pad12ec[0xc]; // 0x12ec
public:
	CUtlString m_sScriptDirectory; // 0x12f8	
	HSCRIPT m_hHeroSelectionScriptScope; // 0x1300	
	HSCRIPT m_hTeamLevelDesiresScriptScope; // 0x1308	
private:
	[[maybe_unused]] uint8_t __pad1310[0x68]; // 0x1310
public:
	GameTick_t m_nScriptPathAvoidanceUpdateTick; // 0x1378	
	float m_fExecutionTime[30]; // 0x137c	
	int32_t m_iCurExecutionTime; // 0x13f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class CLocalNPCObstructionsCache
{
public:
	GameTick_t m_nLastUpdatedTick; // 0x0	
	float m_flRadius; // 0x4	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_hCachedNPCs; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x20
// Has Trivial Destructor
class CDOTA_CreepKillInfo
{
public:
	GameTime_t m_flTimeOfDeath; // 0x0	
	float m_flDeathFlightDuration; // 0x4	
	Vector m_vWsKillDirection; // 0x8	
	Vector m_vWsKillOrigin; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
// Is Abstract
class CDOTAMusicProbabilityEntry
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< float32 > m_flProbabilityElements; // 0x8	
	float m_flProbability; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
class sAcquireHistory
{
public:
	AbilityID_t m_nAbilityID; // 0x0	
	int32_t m_nLevel; // 0x4	
	int32_t m_nGold; // 0x8	
	int32_t m_nNetWorth; // 0xc	
	int32_t m_bCombinedItem; // 0x10	
	float m_fGameTime; // 0x14	
	CUtlVector< AbilityID_t > m_vecItemList; // 0x18	
	CUtlVector< AbilityID_t > m_vecTalentSkilledList; // 0x30	
	CUtlVector< AbilityID_t > m_vecAvailableNeutralItemList; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
class sLoadoutItem
{
public:
	CUtlSymbolLarge name; // 0x0	
	int32_t iFlags; // 0x8	
	AbilityID_t iAbilityID; // 0xc	
	bool bPurchased; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
class CDOTA_BaseNPC_Hero::sHeroDamageInfo
{
public:
	PlayerID_t nDamagingPlayerID; // 0x0	
	GameTime_t fTime; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
class CDOTA_BaseNPC_Hero::sHeroRecentModifierInfo
{
public:
	PlayerID_t nSourcePlayerID; // 0x0	
	bool bBuff; // 0x4	
private:
	[[maybe_unused]] uint8_t __pad0005[0x3]; // 0x5
public:
	int32_t nAbilityIndex; // 0x8	
	GameTime_t fTime; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
struct CDOTA_BaseNPC_Hero__KillInfo_t
{
public:
	CUtlSymbolLarge m_victimname; // 0x0	
	CUtlSymbolLarge m_inflictorname; // 0x8	
	bool m_bEnemyInFOW; // 0x10	
	bool m_bWasFirstBlood; // 0x11	
private:
	[[maybe_unused]] uint8_t __pad0012[0x2]; // 0x12
public:
	int32_t m_iKillCount; // 0x14	
	float m_flBlinkTime; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
struct CDOTA_ScriptedSpawner__scripted_moveto_t
{
public:
	CHandle< CBaseEntity > hMoveToTarget; // 0x0	
	CHandle< CBaseEntity > hGivenToNPC; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x2c
// Has Trivial Destructor
struct CreatureAbilityData_t
{
public:
	CHandle< CBaseEntity > hAbility; // 0x0	
	bool bIsDamage; // 0x4	
	bool bIsDebuff; // 0x5	
	bool bIsStun; // 0x6	
	bool bIsAOE; // 0x7	
	bool bIsLinear; // 0x8	
	bool bUseOnCreeps; // 0x9	
	bool bIsHeal; // 0xa	
	bool bIsBuff; // 0xb	
	bool bUseSelfishly; // 0xc	
	bool bCanHelpOthersEscape; // 0xd	
	bool bUseOnTrees; // 0xe	
	bool bUseOnStrongestAlly; // 0xf	
	int32_t nUseAtHealthPercent; // 0x10	
	int32_t nRadius; // 0x14	
	int32_t nMinimumTargets; // 0x18	
	int32_t nMaximumTargets; // 0x1c	
	int32_t nMinimumHP; // 0x20	
	int32_t nMinimumRange; // 0x24	
	CreatureAbilityType nAbilityType; // 0x28	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Constructor
// Has Trivial Destructor
struct CreatureStateData_t
{
public:
	char* pszName; // 0x0	
	float flAggression; // 0x8	
	float flAvoidance; // 0xc	
	float flSupport; // 0x10	
	float flRoamDistance; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
struct ItemDropData_t
{
public:
	CUtlVector< CUtlString > sItemNames; // 0x0	
	float flChance; // 0x18	
	int32_t nReqLevel; // 0x1c	
	bool bMustBeChampion; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x8
// Has Trivial Destructor
struct WearableData_t
{
public:
	item_definition_index_t nItemDef; // 0x0	
	int32_t nSkin; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
class CDOTABehaviorDie
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_timer; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
class CDOTABehaviorIdle
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_IdleRareAnimationTime; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xe0
// Has VTable
class CDOTABehaviorMoveTo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0xb8]; // 0x0
public:
	CountdownTimer m_repathTimer; // 0xb8	
	bool m_bSetAnimation; // 0xd0	
	bool m_bUseSwimAnimations; // 0xd1	
private:
	[[maybe_unused]] uint8_t __pad00d2[0x2]; // 0xd2
public:
	int32_t m_nRunActivity; // 0xd4	
	float m_flTargetDist; // 0xd8	
	bool m_bIsDirectional; // 0xdc	
	bool m_bIsRelative; // 0xdd	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa0
// Has VTable
class CDOTABehaviorNeutralAggro
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	Vector m_vHomePosition; // 0x60	
	bool m_bNoLeashTime; // 0x6c	
	bool m_bShortLeashTime; // 0x6d	
private:
	[[maybe_unused]] uint8_t __pad006e[0x2]; // 0x6e
public:
	CountdownTimer m_LeashTimer; // 0x70	
	CountdownTimer m_FleeAgainTimer; // 0x88	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToNPC
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	int32_t m_nMovementState; // 0x14c	
	bool m_bInRange; // 0x150	
	bool m_bWasAttacking; // 0x151	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToNPCToGive
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	int32_t m_nMovementState; // 0x14c	
	CHandle< CBaseEntity > m_hItem; // 0x150	
	float m_flRange; // 0x154	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x170
// Has VTable
class CDOTABehaviorCommandMoveToTargetToAttack
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	int32_t m_nMovementState; // 0x14c	
	bool m_bFailedCast; // 0x150	
private:
	[[maybe_unused]] uint8_t __pad0151[0x3]; // 0x151
public:
	float m_flTargetRange; // 0x154	
	bool m_bDeny; // 0x158	
	bool m_bInvisBreak; // 0x159	
	bool m_bNightmareAttack; // 0x15a	
	bool m_bTurningToTarget; // 0x15b	
	float m_flTargetAngle; // 0x15c	
	Vector m_vMoveToOrderPosition; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x180
// Has VTable
class CDOTABehaviorCommandVampireThrall
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
private:
	[[maybe_unused]] uint8_t __pad014c[0x4]; // 0x14c
public:
	float m_flTargetRange; // 0x150	
	bool m_bDeny; // 0x154	
	bool m_bInvisBreak; // 0x155	
	bool m_bNightmareAttack; // 0x156	
	bool m_bTurningToTarget; // 0x157	
	bool m_bHasPositionOrder; // 0x158	
	bool m_bIsAggressive; // 0x159	
private:
	[[maybe_unused]] uint8_t __pad015a[0x2]; // 0x15a
public:
	float m_flTargetAngle; // 0x15c	
	Vector m_vFollowOffset; // 0x160	
	Vector m_vMoveToPosition; // 0x16c	
	CHandle< CBaseEntity > m_hMaster; // 0x178	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x198
// Has VTable
class CDOTABehaviorMoveToNPCToAttack
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
private:
	[[maybe_unused]] uint8_t __pad0148[0x8]; // 0x148
public:
	bool m_bMovingToLastKnownTargetPosition; // 0x150	
private:
	[[maybe_unused]] uint8_t __pad0151[0x7]; // 0x151
public:
	CountdownTimer m_AttackDelay; // 0x158	
	CountdownTimer m_ChaseLimit; // 0x170	
	bool m_bInAttackPosition; // 0x188	
	bool m_bTurningToTarget; // 0x189	
private:
	[[maybe_unused]] uint8_t __pad018a[0x2]; // 0x18a
public:
	float m_flTargetAngle; // 0x18c	
	bool m_bAttackMove; // 0x190	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1b0
// Has VTable
class CDOTABehaviorTutorialRazorMoveToNPCToAttack : public CDOTABehaviorMoveToNPCToAttack
{
public:
	CountdownTimer m_PlasmaFieldDelay; // 0x198	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x180
// Has VTable
class CDOTABehaviorNeutralHome
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vHomePosition; // 0x148	
	Vector m_vHomeFacing; // 0x154	
	bool m_bHomePositionSet; // 0x160	
private:
	[[maybe_unused]] uint8_t __pad0161[0x7]; // 0x161
public:
	CountdownTimer m_IdleRareAnimationTime; // 0x168	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb8
// Has VTable
class CDOTABehaviorAttack
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CHandle< CBaseEntity > m_hTarget; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0064[0x24]; // 0x64
public:
	CountdownTimer m_backSwingTimer; // 0x88	
	bool m_bCastAttack; // 0xa0	
private:
	[[maybe_unused]] uint8_t __pad00a1[0x3]; // 0xa1
public:
	float m_flBackswingTime; // 0xa4	
	float m_flAnimSpeed; // 0xa8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorInvade
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_goalEntity; // 0x148	
	CHandle< CBaseEntity > m_nextGoalEntity; // 0x14c	
	bool m_bReachedFinalGoal; // 0x150	
	bool m_bRequireReachingEndPath; // 0x151	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToPosition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vPosition; // 0x148	
	bool m_bDirectional; // 0x154	
	bool m_bRelative; // 0x155	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorCommandPatrol
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vOrderPosition; // 0x148	
private:
	[[maybe_unused]] uint8_t __pad0154[0x4]; // 0x154
public:
	CUtlVector< Vector > m_vPatrolPoints; // 0x158	
	int32_t m_nCurrentTargetIndex; // 0x170	
	int32_t m_nDirection; // 0x174	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToPositionToDropItem
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vPosition; // 0x148	
	CHandle< CBaseEntity > m_hItem; // 0x154	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x150
// Has VTable
class CDOTABehaviorCommandMoveToRuneToTake
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hRune; // 0x148	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x150
// Has VTable
class CDOTABehaviorCommandMoveToItemToTake
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hItem; // 0x148	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc8
// Has VTable
class CDOTABehaviorAttackPhase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CHandle< CBaseEntity > m_hTarget; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0064[0x4]; // 0x64
public:
	CountdownTimer m_attackTimer; // 0x68	
	bool m_bAttackComplete; // 0x80	
private:
	[[maybe_unused]] uint8_t __pad0081[0x27]; // 0x81
public:
	bool m_bDeny; // 0xa8	
	bool m_bCastAttack; // 0xa9	
	bool m_bTargetTeleported; // 0xaa	
private:
	[[maybe_unused]] uint8_t __pad00ab[0x1]; // 0xab
public:
	float m_flBackswingDuration; // 0xac	
	float m_flAnimSpeed; // 0xb0	
	float m_flAttackPortionPriorToTimer; // 0xb4	
	HSequence m_iSequence; // 0xb8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa0
// Has VTable
class CDOTABehaviorAbilityPhase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_abilityTimer; // 0x60	
	CountdownTimer m_backSwingTimer; // 0x78	
	bool m_bBackswinging; // 0x90	
private:
	[[maybe_unused]] uint8_t __pad0091[0x3]; // 0x91
public:
	CHandle< CBaseEntity > m_hAbility; // 0x94	
	bool m_bActionLocked; // 0x98	
	bool m_bTargetTeleported; // 0x99	
	bool m_bOriginalTargetTeleported; // 0x9a	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x160
// Has VTable
class CDOTABehaviorCommandMoveToPositionToCast
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vPosition; // 0x148	
	CHandle< CBaseEntity > m_hAbility; // 0x154	
	bool m_bTurningToTarget; // 0x158	
private:
	[[maybe_unused]] uint8_t __pad0159[0x3]; // 0x159
public:
	float m_flTargetAngle; // 0x15c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x168
// Has VTable
class CDOTABehaviorCommandMoveToTargetToCast
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	CHandle< CBaseEntity > m_hAbility; // 0x14c	
	int32_t m_nMovementState; // 0x150	
	bool m_bFailedCast; // 0x154	
private:
	[[maybe_unused]] uint8_t __pad0155[0x3]; // 0x155
public:
	float m_flTargetRange; // 0x158	
	bool m_bTurningToTarget; // 0x15c	
private:
	[[maybe_unused]] uint8_t __pad015d[0x3]; // 0x15d
public:
	float m_flTargetAngle; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x88
// Has VTable
class CDOTABehaviorAbilityChannel
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_timer; // 0x60	
	float m_flAbilityChannelDuration; // 0x78	
	CHandle< CBaseEntity > m_hAbility; // 0x7c	
	CHandle< CBaseEntity > m_hTarget; // 0x80	
	bool m_bCompletedChanneling; // 0x84	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorCompanion
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_goalEntity; // 0x148	
	Vector m_vOffset; // 0x14c	
	int32_t m_iRightOffset; // 0x158	
	int32_t m_iForwardOffset; // 0x15c	
	CountdownTimer m_PositionFuzziness; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorCreatureCompanion : public CDOTABehaviorCompanion
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x2e8
// Has VTable
class CDOTABehaviorPet : public CDOTABehaviorCompanion
{
private:
	[[maybe_unused]] uint8_t __pad0178[0x10]; // 0x178
public:
	float m_flThreatLevel; // 0x188	
private:
	[[maybe_unused]] uint8_t __pad018c[0x4]; // 0x18c
public:
	CountdownTimer m_ThreatTimer; // 0x190	
	CountdownTimer m_StuckTimer; // 0x1a8	
	bool m_bHasVanished; // 0x1c0	
private:
	[[maybe_unused]] uint8_t __pad01c1[0x7]; // 0x1c1
public:
	CountdownTimer m_VanishOnThreatTimer; // 0x1c8	
	Vector m_vecFleeCurrentTarget; // 0x1e0	
	Vector m_vecFleeDirection; // 0x1ec	
	Vector m_vecOldFleeDirection; // 0x1f8	
private:
	[[maybe_unused]] uint8_t __pad0204[0x4]; // 0x204
public:
	CountdownTimer m_FleePersistTimer; // 0x208	
	CountdownTimer m_CombatRepositionTimer; // 0x220	
	CHandle< CDOTA_BaseNPC > m_hNearestEnemyHero; // 0x238	
	GameTime_t m_flLastInWater; // 0x23c	
	Vector m_vecHomeBasePosition; // 0x240	
	bool m_bReturnToBase; // 0x24c	
private:
	[[maybe_unused]] uint8_t __pad024d[0x3]; // 0x24d
public:
	CountdownTimer m_ReturnToBaseTimer; // 0x250	
	PetCoopStates_t m_nCoopTeleportState; // 0x268	
private:
	[[maybe_unused]] uint8_t __pad026c[0x4]; // 0x26c
public:
	CountdownTimer m_CarryItemTimer; // 0x270	
	CountdownTimer m_PickupDelayTimer; // 0x288	
	CountdownTimer m_LevelupCheckTimer; // 0x2a0	
	bool m_bIsEmoting; // 0x2b8	
private:
	[[maybe_unused]] uint8_t __pad02b9[0x3]; // 0x2b9
public:
	CHandle< CDOTA_BaseNPC > m_hEmoteTarget; // 0x2bc	
	CountdownTimer m_EmoteTimer; // 0x2c0	
	int32_t m_nEmoteActivity; // 0x2d8	
	CHandle< CBaseEntity > m_tempGoalEntity; // 0x2dc	
	bool m_bFollowingTempGoal; // 0x2e0	
private:
	[[maybe_unused]] uint8_t __pad02e1[0x3]; // 0x2e1
public:
	int32_t m_event_dota_illusions_created; // 0x2e4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorChase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hChaseEntity; // 0x148	
	bool m_bTargetMoves; // 0x14c	
private:
	[[maybe_unused]] uint8_t __pad014d[0x3]; // 0x14d
public:
	float m_flFollowDistance[2]; // 0x150	
	float m_flForwardDistance; // 0x158	
	float m_flRightDistance; // 0x15c	
	CountdownTimer m_PositionFuzziness; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CHorizontalMotionController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CVerticalMotionController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointEntity : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x15c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Color m_Color"
// MNetworkVarNames "float m_flBrightness"
// MNetworkVarNames "HRenderTextureStrong m_hCubemapTexture"
// MNetworkVarNames "bool m_bCustomCubemapTexture"
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeTexture"
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeDirectLightIndicesTexture"
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeDirectLightScalarsTexture"
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeDirectLightShadowsTexture"
// MNetworkVarNames "Vector m_vBoxMins"
// MNetworkVarNames "Vector m_vBoxMaxs"
// MNetworkVarNames "string_t m_LightGroups"
// MNetworkVarNames "bool m_bMoveable"
// MNetworkVarNames "int m_nHandshake"
// MNetworkVarNames "int m_nEnvCubeMapArrayIndex"
// MNetworkVarNames "int m_nPriority"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "float m_flEdgeFadeDist"
// MNetworkVarNames "Vector m_vEdgeFadeDists"
// MNetworkVarNames "int m_nLightProbeSizeX"
// MNetworkVarNames "int m_nLightProbeSizeY"
// MNetworkVarNames "int m_nLightProbeSizeZ"
// MNetworkVarNames "int m_nLightProbeAtlasX"
// MNetworkVarNames "int m_nLightProbeAtlasY"
// MNetworkVarNames "int m_nLightProbeAtlasZ"
// MNetworkVarNames "bool m_bEnabled"
class CEnvCombinedLightProbeVolume : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x1068]; // 0x4a8
public:
	// MNetworkEnable
	// MNetworkChangeCallback "StateChanged"
	Color m_Color; // 0x1510	
	// MNetworkEnable
	// MNetworkChangeCallback "StateChanged"
	float m_flBrightness; // 0x1514	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hCubemapTexture; // 0x1518	
	// MNetworkEnable
	bool m_bCustomCubemapTexture; // 0x1520	
private:
	[[maybe_unused]] uint8_t __pad1521[0x7]; // 0x1521
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeTexture; // 0x1528	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeDirectLightIndicesTexture; // 0x1530	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeDirectLightScalarsTexture; // 0x1538	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeDirectLightShadowsTexture; // 0x1540	
	// MNetworkEnable
	Vector m_vBoxMins; // 0x1548	
	// MNetworkEnable
	Vector m_vBoxMaxs; // 0x1554	
	// MNetworkEnable
	CUtlSymbolLarge m_LightGroups; // 0x1560	
	// MNetworkEnable
	bool m_bMoveable; // 0x1568	
private:
	[[maybe_unused]] uint8_t __pad1569[0x3]; // 0x1569
public:
	// MNetworkEnable
	int32_t m_nHandshake; // 0x156c	
	// MNetworkEnable
	int32_t m_nEnvCubeMapArrayIndex; // 0x1570	
	// MNetworkEnable
	int32_t m_nPriority; // 0x1574	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x1578	
private:
	[[maybe_unused]] uint8_t __pad1579[0x3]; // 0x1579
public:
	// MNetworkEnable
	float m_flEdgeFadeDist; // 0x157c	
	// MNetworkEnable
	Vector m_vEdgeFadeDists; // 0x1580	
	// MNetworkEnable
	int32_t m_nLightProbeSizeX; // 0x158c	
	// MNetworkEnable
	int32_t m_nLightProbeSizeY; // 0x1590	
	// MNetworkEnable
	int32_t m_nLightProbeSizeZ; // 0x1594	
	// MNetworkEnable
	int32_t m_nLightProbeAtlasX; // 0x1598	
	// MNetworkEnable
	int32_t m_nLightProbeAtlasY; // 0x159c	
	// MNetworkEnable
	int32_t m_nLightProbeAtlasZ; // 0x15a0	
private:
	[[maybe_unused]] uint8_t __pad15a4[0x15]; // 0x15a4
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x15b9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "HRenderTextureStrong m_hCubemapTexture"
// MNetworkVarNames "bool m_bCustomCubemapTexture"
// MNetworkVarNames "float m_flInfluenceRadius"
// MNetworkVarNames "Vector m_vBoxProjectMins"
// MNetworkVarNames "Vector m_vBoxProjectMaxs"
// MNetworkVarNames "string_t m_LightGroups"
// MNetworkVarNames "bool m_bMoveable"
// MNetworkVarNames "int m_nHandshake"
// MNetworkVarNames "int m_nEnvCubeMapArrayIndex"
// MNetworkVarNames "int m_nPriority"
// MNetworkVarNames "float m_flEdgeFadeDist"
// MNetworkVarNames "Vector m_vEdgeFadeDists"
// MNetworkVarNames "float m_flDiffuseScale"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "bool m_bDefaultEnvMap"
// MNetworkVarNames "bool m_bDefaultSpecEnvMap"
// MNetworkVarNames "bool m_bIndoorCubeMap"
// MNetworkVarNames "bool m_bCopyDiffuseFromDefaultCubemap"
// MNetworkVarNames "bool m_bEnabled"
class CEnvCubemap : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x88]; // 0x4a8
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hCubemapTexture; // 0x530	
	// MNetworkEnable
	bool m_bCustomCubemapTexture; // 0x538	
private:
	[[maybe_unused]] uint8_t __pad0539[0x3]; // 0x539
public:
	// MNetworkEnable
	float m_flInfluenceRadius; // 0x53c	
	// MNetworkEnable
	Vector m_vBoxProjectMins; // 0x540	
	// MNetworkEnable
	Vector m_vBoxProjectMaxs; // 0x54c	
	// MNetworkEnable
	CUtlSymbolLarge m_LightGroups; // 0x558	
	// MNetworkEnable
	bool m_bMoveable; // 0x560	
private:
	[[maybe_unused]] uint8_t __pad0561[0x3]; // 0x561
public:
	// MNetworkEnable
	int32_t m_nHandshake; // 0x564	
	// MNetworkEnable
	int32_t m_nEnvCubeMapArrayIndex; // 0x568	
	// MNetworkEnable
	int32_t m_nPriority; // 0x56c	
	// MNetworkEnable
	float m_flEdgeFadeDist; // 0x570	
	// MNetworkEnable
	Vector m_vEdgeFadeDists; // 0x574	
	// MNetworkEnable
	float m_flDiffuseScale; // 0x580	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x584	
	// MNetworkEnable
	bool m_bDefaultEnvMap; // 0x585	
	// MNetworkEnable
	bool m_bDefaultSpecEnvMap; // 0x586	
	// MNetworkEnable
	bool m_bIndoorCubeMap; // 0x587	
	// MNetworkEnable
	bool m_bCopyDiffuseFromDefaultCubemap; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0xf]; // 0x589
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvCubemapBox : public CEnvCubemap
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flEndDistance"
// MNetworkVarNames "float m_flStartDistance"
// MNetworkVarNames "float m_flFogFalloffExponent"
// MNetworkVarNames "bool m_bHeightFogEnabled"
// MNetworkVarNames "float m_flFogHeightWidth"
// MNetworkVarNames "float m_flFogHeightEnd"
// MNetworkVarNames "float m_flFogHeightStart"
// MNetworkVarNames "float m_flFogHeightExponent"
// MNetworkVarNames "float m_flLODBias"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "float m_flFogMaxOpacity"
// MNetworkVarNames "int m_nCubemapSourceType"
// MNetworkVarNames "HMaterialStrong m_hSkyMaterial"
// MNetworkVarNames "string_t m_iszSkyEntity"
// MNetworkVarNames "HRenderTextureStrong m_hFogCubemapTexture"
// MNetworkVarNames "bool m_bHasHeightFogEnd"
class CEnvCubemapFog : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flEndDistance; // 0x4a8	
	// MNetworkEnable
	float m_flStartDistance; // 0x4ac	
	// MNetworkEnable
	float m_flFogFalloffExponent; // 0x4b0	
	// MNetworkEnable
	bool m_bHeightFogEnabled; // 0x4b4	
private:
	[[maybe_unused]] uint8_t __pad04b5[0x3]; // 0x4b5
public:
	// MNetworkEnable
	float m_flFogHeightWidth; // 0x4b8	
	// MNetworkEnable
	float m_flFogHeightEnd; // 0x4bc	
	// MNetworkEnable
	float m_flFogHeightStart; // 0x4c0	
	// MNetworkEnable
	float m_flFogHeightExponent; // 0x4c4	
	// MNetworkEnable
	float m_flLODBias; // 0x4c8	
	// MNetworkEnable
	bool m_bActive; // 0x4cc	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x4cd	
private:
	[[maybe_unused]] uint8_t __pad04ce[0x2]; // 0x4ce
public:
	// MNetworkEnable
	float m_flFogMaxOpacity; // 0x4d0	
	// MNetworkEnable
	int32_t m_nCubemapSourceType; // 0x4d4	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSkyMaterial; // 0x4d8	
	// MNetworkEnable
	CUtlSymbolLarge m_iszSkyEntity; // 0x4e0	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hFogCubemapTexture; // 0x4e8	
	// MNetworkEnable
	bool m_bHasHeightFogEnd; // 0x4f0	
	bool m_bFirstTime; // 0x4f1	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeTexture"
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeDirectLightIndicesTexture"
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeDirectLightScalarsTexture"
// MNetworkVarNames "HRenderTextureStrong m_hLightProbeDirectLightShadowsTexture"
// MNetworkVarNames "Vector m_vBoxMins"
// MNetworkVarNames "Vector m_vBoxMaxs"
// MNetworkVarNames "string_t m_LightGroups"
// MNetworkVarNames "bool m_bMoveable"
// MNetworkVarNames "int m_nHandshake"
// MNetworkVarNames "int m_nPriority"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "int m_nLightProbeSizeX"
// MNetworkVarNames "int m_nLightProbeSizeY"
// MNetworkVarNames "int m_nLightProbeSizeZ"
// MNetworkVarNames "int m_nLightProbeAtlasX"
// MNetworkVarNames "int m_nLightProbeAtlasY"
// MNetworkVarNames "int m_nLightProbeAtlasZ"
// MNetworkVarNames "bool m_bEnabled"
class CEnvLightProbeVolume : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0xfe0]; // 0x4a8
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeTexture; // 0x1488	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeDirectLightIndicesTexture; // 0x1490	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeDirectLightScalarsTexture; // 0x1498	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightProbeDirectLightShadowsTexture; // 0x14a0	
	// MNetworkEnable
	Vector m_vBoxMins; // 0x14a8	
	// MNetworkEnable
	Vector m_vBoxMaxs; // 0x14b4	
	// MNetworkEnable
	CUtlSymbolLarge m_LightGroups; // 0x14c0	
	// MNetworkEnable
	bool m_bMoveable; // 0x14c8	
private:
	[[maybe_unused]] uint8_t __pad14c9[0x3]; // 0x14c9
public:
	// MNetworkEnable
	int32_t m_nHandshake; // 0x14cc	
	// MNetworkEnable
	int32_t m_nPriority; // 0x14d0	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x14d4	
private:
	[[maybe_unused]] uint8_t __pad14d5[0x3]; // 0x14d5
public:
	// MNetworkEnable
	int32_t m_nLightProbeSizeX; // 0x14d8	
	// MNetworkEnable
	int32_t m_nLightProbeSizeY; // 0x14dc	
	// MNetworkEnable
	int32_t m_nLightProbeSizeZ; // 0x14e0	
	// MNetworkEnable
	int32_t m_nLightProbeAtlasX; // 0x14e4	
	// MNetworkEnable
	int32_t m_nLightProbeAtlasY; // 0x14e8	
	// MNetworkEnable
	int32_t m_nLightProbeAtlasZ; // 0x14ec	
private:
	[[maybe_unused]] uint8_t __pad14f0[0x9]; // 0x14f0
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x14f9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flVisibilityStrength"
// MNetworkVarNames "float m_flFogDistanceMultiplier"
// MNetworkVarNames "float m_flFogMaxDensityMultiplier"
// MNetworkVarNames "float m_flFadeTime"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "bool m_bIsEnabled"
class CPlayerVisibility : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flVisibilityStrength; // 0x4a8	
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flFogDistanceMultiplier; // 0x4ac	
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flFogMaxDensityMultiplier; // 0x4b0	
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flFadeTime; // 0x4b4	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x4b8	
	// MNetworkEnable
	bool m_bIsEnabled; // 0x4b9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flAutoExposureMin"
// MNetworkVarNames "float m_flAutoExposureMax"
// MNetworkVarNames "float m_flTonemapPercentTarget"
// MNetworkVarNames "float m_flTonemapPercentBrightPixels"
// MNetworkVarNames "float m_flTonemapMinAvgLum"
// MNetworkVarNames "float m_flExposureAdaptationSpeedUp"
// MNetworkVarNames "float m_flExposureAdaptationSpeedDown"
// MNetworkVarNames "float m_flTonemapEVSmoothingRange"
class CTonemapController2 : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flAutoExposureMin; // 0x4a8	
	// MNetworkEnable
	float m_flAutoExposureMax; // 0x4ac	
	// MNetworkEnable
	float m_flTonemapPercentTarget; // 0x4b0	
	// MNetworkEnable
	float m_flTonemapPercentBrightPixels; // 0x4b4	
	// MNetworkEnable
	float m_flTonemapMinAvgLum; // 0x4b8	
	// MNetworkEnable
	float m_flExposureAdaptationSpeedUp; // 0x4bc	
	// MNetworkEnable
	float m_flExposureAdaptationSpeedDown; // 0x4c0	
	// MNetworkEnable
	float m_flTonemapEVSmoothingRange; // 0x4c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flScattering"
// MNetworkVarNames "float m_flAnisotropy"
// MNetworkVarNames "float m_flFadeSpeed"
// MNetworkVarNames "float m_flDrawDistance"
// MNetworkVarNames "float m_flFadeInStart"
// MNetworkVarNames "float m_flFadeInEnd"
// MNetworkVarNames "float m_flIndirectStrength"
// MNetworkVarNames "int m_nIndirectTextureDimX"
// MNetworkVarNames "int m_nIndirectTextureDimY"
// MNetworkVarNames "int m_nIndirectTextureDimZ"
// MNetworkVarNames "Vector m_vBoxMins"
// MNetworkVarNames "Vector m_vBoxMaxs"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "GameTime_t m_flStartAnisoTime"
// MNetworkVarNames "GameTime_t m_flStartScatterTime"
// MNetworkVarNames "GameTime_t m_flStartDrawDistanceTime"
// MNetworkVarNames "float m_flStartAnisotropy"
// MNetworkVarNames "float m_flStartScattering"
// MNetworkVarNames "float m_flStartDrawDistance"
// MNetworkVarNames "float m_flDefaultAnisotropy"
// MNetworkVarNames "float m_flDefaultScattering"
// MNetworkVarNames "float m_flDefaultDrawDistance"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "bool m_bEnableIndirect"
// MNetworkVarNames "bool m_bIsMaster"
// MNetworkVarNames "HRenderTextureStrong m_hFogIndirectTexture"
// MNetworkVarNames "int m_nForceRefreshCount"
class CEnvVolumetricFogController : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flScattering; // 0x4a8	
	// MNetworkEnable
	float m_flAnisotropy; // 0x4ac	
	// MNetworkEnable
	float m_flFadeSpeed; // 0x4b0	
	// MNetworkEnable
	float m_flDrawDistance; // 0x4b4	
	// MNetworkEnable
	float m_flFadeInStart; // 0x4b8	
	// MNetworkEnable
	float m_flFadeInEnd; // 0x4bc	
	// MNetworkEnable
	float m_flIndirectStrength; // 0x4c0	
	// MNetworkEnable
	int32_t m_nIndirectTextureDimX; // 0x4c4	
	// MNetworkEnable
	int32_t m_nIndirectTextureDimY; // 0x4c8	
	// MNetworkEnable
	int32_t m_nIndirectTextureDimZ; // 0x4cc	
	// MNetworkEnable
	Vector m_vBoxMins; // 0x4d0	
	// MNetworkEnable
	Vector m_vBoxMaxs; // 0x4dc	
	// MNetworkEnable
	bool m_bActive; // 0x4e8	
private:
	[[maybe_unused]] uint8_t __pad04e9[0x3]; // 0x4e9
public:
	// MNetworkEnable
	GameTime_t m_flStartAnisoTime; // 0x4ec	
	// MNetworkEnable
	GameTime_t m_flStartScatterTime; // 0x4f0	
	// MNetworkEnable
	GameTime_t m_flStartDrawDistanceTime; // 0x4f4	
	// MNetworkEnable
	float m_flStartAnisotropy; // 0x4f8	
	// MNetworkEnable
	float m_flStartScattering; // 0x4fc	
	// MNetworkEnable
	float m_flStartDrawDistance; // 0x500	
	// MNetworkEnable
	float m_flDefaultAnisotropy; // 0x504	
	// MNetworkEnable
	float m_flDefaultScattering; // 0x508	
	// MNetworkEnable
	float m_flDefaultDrawDistance; // 0x50c	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x510	
	// MNetworkEnable
	bool m_bEnableIndirect; // 0x511	
	// MNetworkEnable
	bool m_bIsMaster; // 0x512	
private:
	[[maybe_unused]] uint8_t __pad0513[0x5]; // 0x513
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hFogIndirectTexture; // 0x518	
	// MNetworkEnable
	int32_t m_nForceRefreshCount; // 0x520	
	bool m_bFirstTime; // 0x524	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "Vector m_vBoxMins"
// MNetworkVarNames "Vector m_vBoxMaxs"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "float m_flStrength"
// MNetworkVarNames "int m_nFalloffShape"
// MNetworkVarNames "float m_flFalloffExponent"
class CEnvVolumetricFogVolume : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bActive; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	// MNetworkEnable
	Vector m_vBoxMins; // 0x4ac	
	// MNetworkEnable
	Vector m_vBoxMaxs; // 0x4b8	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x4c4	
private:
	[[maybe_unused]] uint8_t __pad04c5[0x3]; // 0x4c5
public:
	// MNetworkEnable
	float m_flStrength; // 0x4c8	
	// MNetworkEnable
	int32_t m_nFalloffShape; // 0x4cc	
	// MNetworkEnable
	float m_flFalloffExponent; // 0x4d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "fogparams_t m_fog"
class CFogController : public CBaseEntity
{
public:
	// MNetworkEnable
	fogparams_t m_fog; // 0x4a8	
	bool m_bUseAngles; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0511[0x3]; // 0x511
public:
	int32_t m_iChangedVariables; // 0x514	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoTarget : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoTargetServerOnly : public CServerOnlyPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoParticleTarget : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nMode"
// MNetworkVarNames "Vector m_vBoxSize"
// MNetworkVarNames "bool m_bEnabled"
class CInfoVisibilityBox : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x4]; // 0x4a8
public:
	// MNetworkEnable
	int32_t m_nMode; // 0x4ac	
	// MNetworkEnable
	Vector m_vBoxSize; // 0x4b0	
	// MNetworkEnable
	bool m_bEnabled; // 0x4bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "string_t m_worldName"
// MNetworkVarNames "string_t m_layerName"
// MNetworkVarNames "bool m_bWorldLayerVisible"
// MNetworkVarNames "bool m_bEntitiesSpawned"
class CInfoWorldLayer : public CBaseEntity
{
public:
	CEntityIOOutput m_pOutputOnEntitiesSpawned; // 0x4a8	
	// MNetworkEnable
	CUtlSymbolLarge m_worldName; // 0x4d0	
	// MNetworkEnable
	CUtlSymbolLarge m_layerName; // 0x4d8	
	// MNetworkEnable
	bool m_bWorldLayerVisible; // 0x4e0	
	// MNetworkEnable
	bool m_bEntitiesSpawned; // 0x4e1	
	bool m_bCreateAsChildSpawnGroup; // 0x4e2	
private:
	[[maybe_unused]] uint8_t __pad04e3[0x1]; // 0x4e3
public:
	uint32_t m_hLayerSpawnGroup; // 0x4e4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMultiLightProxy : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszLightNameFilter; // 0x4a8	
	CUtlSymbolLarge m_iszLightClassFilter; // 0x4b0	
	float m_flLightRadiusFilter; // 0x4b8	
	float m_flBrightnessDelta; // 0x4bc	
	bool m_bPerformScreenFade; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c1[0x3]; // 0x4c1
public:
	float m_flTargetBrightnessMultiplier; // 0x4c4	
	float m_flCurrentBrightnessMultiplier; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04cc[0x4]; // 0x4cc
public:
	CUtlVector< CHandle< CLightEntity > > m_vecLights; // 0x4d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_FOV"
// MNetworkVarNames "float m_Resolution"
// MNetworkVarNames "bool m_bFogEnable"
// MNetworkVarNames "Color m_FogColor"
// MNetworkVarNames "float m_flFogStart"
// MNetworkVarNames "float m_flFogEnd"
// MNetworkVarNames "float m_flFogMaxDensity"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "bool m_bUseScreenAspectRatio"
// MNetworkVarNames "float m_flAspectRatio"
// MNetworkVarNames "bool m_bNoSky"
// MNetworkVarNames "float m_fBrightness"
// MNetworkVarNames "float m_flZFar"
// MNetworkVarNames "float m_flZNear"
// MNetworkVarNames "bool m_bCanHLTVUse"
// MNetworkVarNames "float m_flOverrideShadowFarZ"
// MNetworkVarNames "bool m_bDofEnabled"
// MNetworkVarNames "float m_flDofNearBlurry"
// MNetworkVarNames "float m_flDofNearCrisp"
// MNetworkVarNames "float m_flDofFarCrisp"
// MNetworkVarNames "float m_flDofFarBlurry"
// MNetworkVarNames "float m_flDofTiltToGround"
class CPointCamera : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_FOV; // 0x4a8	
	// MNetworkEnable
	float m_Resolution; // 0x4ac	
	// MNetworkEnable
	bool m_bFogEnable; // 0x4b0	
	// MNetworkEnable
	Color m_FogColor; // 0x4b1	
private:
	[[maybe_unused]] uint8_t __pad04b5[0x3]; // 0x4b5
public:
	// MNetworkEnable
	float m_flFogStart; // 0x4b8	
	// MNetworkEnable
	float m_flFogEnd; // 0x4bc	
	// MNetworkEnable
	float m_flFogMaxDensity; // 0x4c0	
	// MNetworkEnable
	bool m_bActive; // 0x4c4	
	// MNetworkEnable
	bool m_bUseScreenAspectRatio; // 0x4c5	
private:
	[[maybe_unused]] uint8_t __pad04c6[0x2]; // 0x4c6
public:
	// MNetworkEnable
	float m_flAspectRatio; // 0x4c8	
	// MNetworkEnable
	bool m_bNoSky; // 0x4cc	
private:
	[[maybe_unused]] uint8_t __pad04cd[0x3]; // 0x4cd
public:
	// MNetworkEnable
	float m_fBrightness; // 0x4d0	
	// MNetworkEnable
	float m_flZFar; // 0x4d4	
	// MNetworkEnable
	float m_flZNear; // 0x4d8	
	// MNetworkEnable
	bool m_bCanHLTVUse; // 0x4dc	
private:
	[[maybe_unused]] uint8_t __pad04dd[0x3]; // 0x4dd
public:
	// MNetworkEnable
	float m_flOverrideShadowFarZ; // 0x4e0	
	// MNetworkEnable
	bool m_bDofEnabled; // 0x4e4	
private:
	[[maybe_unused]] uint8_t __pad04e5[0x3]; // 0x4e5
public:
	// MNetworkEnable
	float m_flDofNearBlurry; // 0x4e8	
	// MNetworkEnable
	float m_flDofNearCrisp; // 0x4ec	
	// MNetworkEnable
	float m_flDofFarCrisp; // 0x4f0	
	// MNetworkEnable
	float m_flDofFarBlurry; // 0x4f4	
	// MNetworkEnable
	float m_flDofTiltToGround; // 0x4f8	
	float m_TargetFOV; // 0x4fc	
	float m_DegreesPerSecond; // 0x500	
	bool m_bIsOn; // 0x504	
private:
	[[maybe_unused]] uint8_t __pad0505[0x3]; // 0x505
public:
	CPointCamera* m_pNext; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointCameraVFOV : public CPointCamera
{
public:
	float m_flVerticalFOV; // 0x510	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointTemplate : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszWorldName; // 0x4a8	
	CUtlSymbolLarge m_iszSource2EntityLumpName; // 0x4b0	
	CUtlSymbolLarge m_iszEntityFilterName; // 0x4b8	
	float m_flTimeoutInterval; // 0x4c0	
	bool m_bAsynchronouslySpawnEntities; // 0x4c4	
private:
	[[maybe_unused]] uint8_t __pad04c5[0x3]; // 0x4c5
public:
	CEntityIOOutput m_pOutputOnSpawned; // 0x4c8	
	PointTemplateClientOnlyEntityBehavior_t m_clientOnlyEntityBehavior; // 0x4f0	
	PointTemplateOwnerSpawnGroupType_t m_ownerSpawnGroupType; // 0x4f4	
	CUtlVector< uint32 > m_createdSpawnGroupHandles; // 0x4f8	
	CUtlVector< CEntityHandle > m_SpawnedEntityHandles; // 0x510	
	HSCRIPT m_ScriptSpawnCallback; // 0x528	
	HSCRIPT m_ScriptCallbackScope; // 0x530	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CGameGibManager : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x20]; // 0x4a8
public:
	bool m_bAllowNewGibs; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x3]; // 0x4c9
public:
	int32_t m_iCurrentMaxPieces; // 0x4cc	
	int32_t m_iMaxPieces; // 0x4d0	
	int32_t m_iLastFrame; // 0x4d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "string_t m_iszSoundAreaType"
// MNetworkVarNames "Vector m_vPos"
class CSoundAreaEntityBase : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszSoundAreaType; // 0x4b0	
	// MNetworkEnable
	Vector m_vPos; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flRadius"
class CSoundAreaEntitySphere : public CSoundAreaEntityBase
{
public:
	// MNetworkEnable
	float m_flRadius; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Vector m_vMin"
// MNetworkVarNames "Vector m_vMax"
class CSoundAreaEntityOrientedBox : public CSoundAreaEntityBase
{
public:
	// MNetworkEnable
	Vector m_vMin; // 0x4c8	
	// MNetworkEnable
	Vector m_vMax; // 0x4d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x560
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_iTeamNum"
// MNetworkVarNames "CHandle< CBasePlayerController > m_aPlayerControllers"
// MNetworkVarNames "CHandle< CBasePlayerPawn > m_aPlayers"
// MNetworkVarNames "int32 m_iScore"
// MNetworkVarNames "char m_szTeamname"
class CTeam : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkAlias "m_aPlayers"
	CNetworkUtlVectorBase< CHandle< CBasePlayerController > > m_aPlayerControllers; // 0x4a8	
	// MNetworkEnable
	// MNetworkAlias "m_aPawns"
	CNetworkUtlVectorBase< CHandle< CBasePlayerPawn > > m_aPlayers; // 0x4c0	
	// MNetworkEnable
	int32_t m_iScore; // 0x4d8	
	// MNetworkEnable
	char m_szTeamname[129]; // 0x4dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x680
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_pEntity"
// MNetworkIncludeByName "m_flSimulationTime"
// MNetworkIncludeByName "m_flCreateTime"
// MNetworkIncludeByName "m_iTeamNum"
// MNetworkIncludeByName "m_nNextThinkTick"
// MNetworkIncludeByName "m_fFlags"
// MNetworkIncludeByName "m_bSimulatedEveryTick"
// MNetworkUserGroupProxy "CBasePlayerController"
// MNetworkUserGroupProxy "CBasePlayerController"
// MNetworkIncludeByUserGroup "LocalPlayerExclusive"
// MNetworkVarNames "uint32 m_nTickBase"
// MNetworkVarNames "CHandle< CBasePlayerPawn> m_hPawn"
// MNetworkVarNames "PlayerConnectedState m_iConnected"
// MNetworkVarNames "char m_iszPlayerName"
// MNetworkVarNames "uint64 m_steamID"
// MNetworkVarNames "uint32 m_iDesiredFOV"
class CBasePlayerController : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	uint64_t m_nInButtonsWhichAreToggles; // 0x4b0	
	// MNetworkEnable
	// MNetworkPriority "1"
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint32_t m_nTickBase; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x2c]; // 0x4bc
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPawnChanged"
	CHandle< CBasePlayerPawn > m_hPawn; // 0x4e8	
	CSplitScreenSlot m_nSplitScreenSlot; // 0x4ec	
	CHandle< CBasePlayerController > m_hSplitOwner; // 0x4f0	
private:
	[[maybe_unused]] uint8_t __pad04f4[0x4]; // 0x4f4
public:
	CUtlVector< CHandle< CBasePlayerController > > m_hSplitScreenPlayers; // 0x4f8	
	bool m_bIsHLTV; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0511[0x3]; // 0x511
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnConnectionStateChanged"
	PlayerConnectedState m_iConnected; // 0x514	
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerControllerNameChanged"
	char m_iszPlayerName[128]; // 0x518	
	CUtlString m_szNetworkIDString; // 0x598	
	float m_fLerpTime; // 0x5a0	
	bool m_bLagCompensation; // 0x5a4	
	bool m_bPredict; // 0x5a5	
	bool m_bAutoKickDisabled; // 0x5a6	
	bool m_bIsLowViolence; // 0x5a7	
	bool m_bGamePaused; // 0x5a8	
private:
	[[maybe_unused]] uint8_t __pad05a9[0x6f]; // 0x5a9
public:
	int32_t m_nHighestCommandNumberReceived; // 0x618	
private:
	[[maybe_unused]] uint8_t __pad061c[0x4]; // 0x61c
public:
	int64_t m_nUsecTimestampLastUserCmdReceived; // 0x620	
private:
	[[maybe_unused]] uint8_t __pad0628[0x10]; // 0x628
public:
	ChatIgnoreType_t m_iIgnoreGlobalChat; // 0x638	
	float m_flLastPlayerTalkTime; // 0x63c	
	float m_flLastEntitySteadyState; // 0x640	
	int32_t m_nAvailableEntitySteadyState; // 0x644	
	bool m_bHasAnySteadyStateEnts; // 0x648	
private:
	[[maybe_unused]] uint8_t __pad0649[0xf]; // 0x649
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnSteamIDChanged"
	uint64_t m_steamID; // 0x658	
	// MNetworkEnable
	uint32_t m_iDesiredFOV; // 0x660	
	
	// Static fields:
	static bool &Get_sm_bRunningPredictedClientStringCommands(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBasePlayerController")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
// 
// MGetKV3ClassDefaults
class CBasePlayerVData : public CEntitySubclassVDataBase
{
public:
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > > m_sModelName; // 0x28	
	CSkillFloat m_flHeadDamageMultiplier; // 0x108	
	CSkillFloat m_flChestDamageMultiplier; // 0x118	
	CSkillFloat m_flStomachDamageMultiplier; // 0x128	
	CSkillFloat m_flArmDamageMultiplier; // 0x138	
	CSkillFloat m_flLegDamageMultiplier; // 0x148	
	// MPropertyGroupName "Water"
	float m_flHoldBreathTime; // 0x158	
	// MPropertyGroupName "Water"
	// MPropertyDescription "Seconds between drowning ticks"
	float m_flDrowningDamageInterval; // 0x15c	
	// MPropertyGroupName "Water"
	// MPropertyDescription "Amount of damage done on the first drowning tick (+1 each subsequent interval)"
	int32_t m_nDrowningDamageInitial; // 0x160	
	// MPropertyGroupName "Water"
	// MPropertyDescription "Max damage done by a drowning tick"
	int32_t m_nDrowningDamageMax; // 0x164	
	// MPropertyGroupName "Water"
	int32_t m_nWaterSpeed; // 0x168	
	// MPropertyGroupName "Use"
	float m_flUseRange; // 0x16c	
	// MPropertyGroupName "Use"
	float m_flUseAngleTolerance; // 0x170	
	// MPropertyGroupName "Crouch"
	// MPropertyDescription "Time to move between crouch and stand"
	float m_flCrouchTime; // 0x174	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoGameEventProxy : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszEventName; // 0x4a8	
	float m_flRange; // 0x4b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CProjectedDecal : public CPointEntity
{
public:
	int32_t m_nTexture; // 0x4a8	
	float m_flDistance; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MNetworkVarNames "CBaseAnimGraphController m_animationController"
class CBodyComponentBaseAnimGraph : public CBodyComponentSkeletonInstance
{
public:
	// MNetworkEnable
	CBaseAnimGraphController m_animationController; // 0x470	
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x578	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimGraph")->m_static_fields[0]->m_instance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimGraph")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CRenderComponent::Storage_t m_CRenderComponent"
// MNetworkVarNames "CHitboxComponent::Storage_t m_CHitboxComponent"
// MNetworkVarNames "RenderMode_t m_nRenderMode"
// MNetworkVarNames "RenderFx_t m_nRenderFX"
// MNetworkVarNames "Color m_clrRender"
// MNetworkVarNames "EntityRenderAttribute_t m_vecRenderAttributes"
// MNetworkVarNames "CUtlStringToken m_LightGroup"
// MNetworkVarNames "bool m_bRenderToCubemaps"
// MNetworkVarNames "CCollisionProperty m_Collision"
// MNetworkVarNames "CGlowProperty m_Glow"
// MNetworkVarNames "float m_flGlowBackfaceMult"
// MNetworkVarNames "float32 m_fadeMinDist"
// MNetworkVarNames "float32 m_fadeMaxDist"
// MNetworkVarNames "float32 m_flFadeScale"
// MNetworkVarNames "float32 m_flShadowStrength"
// MNetworkVarNames "uint8 m_nObjectCulling"
// MNetworkVarNames "int m_nAddDecal"
// MNetworkVarNames "Vector m_vDecalPosition"
// MNetworkVarNames "Vector m_vDecalForwardAxis"
// MNetworkVarNames "float m_flDecalHealBloodRate"
// MNetworkVarNames "float m_flDecalHealHeightRate"
// MNetworkVarNames "CHandle< CBaseModelEntity > m_ConfigEntitiesToPropagateMaterialDecalsTo"
// MNetworkVarNames "CNetworkViewOffsetVector m_vecViewOffset"
class CBaseModelEntity : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "CRenderComponent"
	// MNetworkAlias "CRenderComponent"
	// MNetworkTypeAlias "CRenderComponent"
	CRenderComponent* m_CRenderComponent; // 0x4a8	
	// MNetworkEnable
	// MNetworkUserGroup "CHitboxComponent"
	// MNetworkAlias "CHitboxComponent"
	// MNetworkTypeAlias "CHitboxComponent"
	CHitboxComponent m_CHitboxComponent; // 0x4b0	
	GameTime_t m_flDissolveStartTime; // 0x4d8	
private:
	[[maybe_unused]] uint8_t __pad04dc[0x4]; // 0x4dc
public:
	CEntityIOOutput m_OnIgnite; // 0x4e0	
	int32_t m_iViewerID; // 0x508	
private:
	[[maybe_unused]] uint8_t __pad050c[0x44]; // 0x50c
public:
	int32_t m_iTeamVisibilityBitmask; // 0x550	
	// MNetworkEnable
	RenderMode_t m_nRenderMode; // 0x554	
	bool m_bVisibilityDirtyFlag; // 0x555	
	int16_t m_iFOWTempViewerID[10]; // 0x556	
	// MNetworkEnable
	RenderFx_t m_nRenderFX; // 0x56a	
	bool m_bAllowFadeInView; // 0x56b	
	// MNetworkEnable
	// MNetworkChangeCallback "OnColorChanged"
	Color m_clrRender; // 0x56c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnRenderAttributesChanged"
	CUtlVectorEmbeddedNetworkVar< EntityRenderAttribute_t > m_vecRenderAttributes; // 0x570	
	// MNetworkEnable
	// MNetworkChangeCallback "OnLightGroupChanged"
	CUtlStringToken m_LightGroup; // 0x5c0	
	// MNetworkEnable
	bool m_bRenderToCubemaps; // 0x5c4	
private:
	[[maybe_unused]] uint8_t __pad05c5[0x3]; // 0x5c5
public:
	// MNetworkEnable
	CCollisionProperty m_Collision; // 0x5c8	
	// MNetworkEnable
	CGlowProperty m_Glow; // 0x678	
	// MNetworkEnable
	float m_flGlowBackfaceMult; // 0x6d0	
	// MNetworkEnable
	float m_fadeMinDist; // 0x6d4	
	// MNetworkEnable
	float m_fadeMaxDist; // 0x6d8	
	// MNetworkEnable
	float m_flFadeScale; // 0x6dc	
	// MNetworkEnable
	float m_flShadowStrength; // 0x6e0	
	// MNetworkEnable
	uint8_t m_nObjectCulling; // 0x6e4	
private:
	[[maybe_unused]] uint8_t __pad06e5[0x3]; // 0x6e5
public:
	// MNetworkEnable
	int32_t m_nAddDecal; // 0x6e8	
	// MNetworkEnable
	Vector m_vDecalPosition; // 0x6ec	
	// MNetworkEnable
	Vector m_vDecalForwardAxis; // 0x6f8	
	// MNetworkEnable
	float m_flDecalHealBloodRate; // 0x704	
	// MNetworkEnable
	float m_flDecalHealHeightRate; // 0x708	
private:
	[[maybe_unused]] uint8_t __pad070c[0x4]; // 0x70c
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseModelEntity > > m_ConfigEntitiesToPropagateMaterialDecalsTo; // 0x710	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Player"
	CNetworkViewOffsetVector m_vecViewOffset; // 0x728	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CServerOnlyModelEntity : public CBaseModelEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CModelPointEntity : public CBaseModelEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicRelay : public CLogicalEntity
{
public:
	CEntityIOOutput m_OnTrigger; // 0x4a8	
	CEntityIOOutput m_OnSpawn; // 0x4d0	
	bool m_bDisabled; // 0x4f8	
	bool m_bWaitForRefire; // 0x4f9	
	bool m_bTriggerOnce; // 0x4fa	
	bool m_bFastRetrigger; // 0x4fb	
	bool m_bPassthoughCaller; // 0x4fc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xcd0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "CGameSceneNode::m_angRotation"
// MNetworkIncludeByName "m_hOwnerEntity"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkIncludeByName "CGameSceneNode::m_hierarchyAttachName"
// MNetworkIncludeByName "m_nameStringableIndex"
// MNetworkVarNames "char m_szSnapshotFileName"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "bool m_bFrozen"
// MNetworkVarNames "float m_flFreezeTransitionDuration"
// MNetworkVarNames "int m_nStopType"
// MNetworkVarNames "bool m_bAnimateDuringGameplayPause"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_iEffectIndex"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "float32 m_flPreSimTime"
// MNetworkVarNames "Vector m_vServerControlPoints"
// MNetworkVarNames "uint8 m_iServerControlPointAssignments"
// MNetworkVarNames "CHandle< CBaseEntity > m_hControlPointEnts"
// MNetworkVarNames "bool m_bNoSave"
// MNetworkVarNames "bool m_bNoFreeze"
// MNetworkVarNames "bool m_bNoRamp"
class CParticleSystem : public CBaseModelEntity
{
public:
	// MNetworkEnable
	char m_szSnapshotFileName[512]; // 0x758	
	// MNetworkEnable
	bool m_bActive; // 0x958	
	// MNetworkEnable
	bool m_bFrozen; // 0x959	
private:
	[[maybe_unused]] uint8_t __pad095a[0x2]; // 0x95a
public:
	// MNetworkEnable
	float m_flFreezeTransitionDuration; // 0x95c	
	// MNetworkEnable
	int32_t m_nStopType; // 0x960	
	// MNetworkEnable
	bool m_bAnimateDuringGameplayPause; // 0x964	
private:
	[[maybe_unused]] uint8_t __pad0965[0x3]; // 0x965
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_iEffectIndex; // 0x968	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x970	
	// MNetworkEnable
	float m_flPreSimTime; // 0x974	
	// MNetworkEnable
	Vector m_vServerControlPoints[4]; // 0x978	
	// MNetworkEnable
	uint8_t m_iServerControlPointAssignments[4]; // 0x9a8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hControlPointEnts[64]; // 0x9ac	
	// MNetworkEnable
	bool m_bNoSave; // 0xaac	
	// MNetworkEnable
	bool m_bNoFreeze; // 0xaad	
	// MNetworkEnable
	bool m_bNoRamp; // 0xaae	
	bool m_bStartActive; // 0xaaf	
	CUtlSymbolLarge m_iszEffectName; // 0xab0	
	CUtlSymbolLarge m_iszControlPointNames[64]; // 0xab8	
	int32_t m_nDataCP; // 0xcb8	
	Vector m_vecDataCPValue; // 0xcbc	
	int32_t m_nTintCP; // 0xcc8	
	Color m_clrTint; // 0xccc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flParticleSpacing"
// MNetworkVarNames "float m_flSlack"
// MNetworkVarNames "float m_flRadius"
// MNetworkVarNames "Color m_ColorTint"
// MNetworkVarNames "int m_nEffectState"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_iEffectIndex"
// MNetworkVarNames "Vector m_PathNodes_Position"
// MNetworkVarNames "Vector m_PathNodes_TangentIn"
// MNetworkVarNames "Vector m_PathNodes_TangentOut"
// MNetworkVarNames "Vector m_PathNodes_Color"
// MNetworkVarNames "bool m_PathNodes_PinEnabled"
// MNetworkVarNames "float m_PathNodes_RadiusScale"
class CPathParticleRope : public CBaseEntity
{
public:
	bool m_bStartActive; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flMaxSimulationTime; // 0x4ac	
	CUtlSymbolLarge m_iszEffectName; // 0x4b0	
	CUtlVector< CUtlSymbolLarge > m_PathNodes_Name; // 0x4b8	
	// MNetworkEnable
	float m_flParticleSpacing; // 0x4d0	
	// MNetworkEnable
	// MNetworkChangeCallback "parametersChanged"
	float m_flSlack; // 0x4d4	
	// MNetworkEnable
	// MNetworkChangeCallback "parametersChanged"
	float m_flRadius; // 0x4d8	
	// MNetworkEnable
	// MNetworkChangeCallback "parametersChanged"
	Color m_ColorTint; // 0x4dc	
	// MNetworkEnable
	// MNetworkChangeCallback "effectStateChanged"
	int32_t m_nEffectState; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e4[0x4]; // 0x4e4
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_iEffectIndex; // 0x4e8	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_Position; // 0x4f0	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_TangentIn; // 0x508	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_TangentOut; // 0x520	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_Color; // 0x538	
	// MNetworkEnable
	// MNetworkChangeCallback "pinStateChanged"
	CNetworkUtlVectorBase< bool > m_PathNodes_PinEnabled; // 0x550	
	// MNetworkEnable
	CNetworkUtlVectorBase< float32 > m_PathNodes_RadiusScale; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPathParticleRopeAlias_path_particle_rope_clientside : public CPathParticleRope
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncWall : public CBaseModelEntity
{
public:
	int32_t m_nState; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncWallToggle : public CFuncWall
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncVehicleClip : public CBaseModelEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncIllusionary : public CBaseModelEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncVPhysicsClip : public CBaseModelEntity
{
public:
	bool m_bDisabled; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncInteractionLayerClip : public CBaseModelEntity
{
public:
	bool m_bDisabled; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x7]; // 0x759
public:
	CUtlSymbolLarge m_iszInteractsAs; // 0x760	
	CUtlSymbolLarge m_iszInteractsWith; // 0x768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CCommentaryAuto : public CBaseEntity
{
public:
	CEntityIOOutput m_OnCommentaryNewGame; // 0x4a8	
	CEntityIOOutput m_OnCommentaryMidGame; // 0x4d0	
	CEntityIOOutput m_OnCommentaryMultiplayerSpawn; // 0x4f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "uint8 m_Flags"
// MNetworkVarNames "uint8 m_LightStyle"
// MNetworkVarNames "float32 m_Radius"
// MNetworkVarNames "int32 m_Exponent"
// MNetworkVarNames "float32 m_InnerAngle"
// MNetworkVarNames "float32 m_OuterAngle"
// MNetworkVarNames "float32 m_SpotRadius"
class CDynamicLight : public CBaseModelEntity
{
public:
	uint8_t m_ActualFlags; // 0x758	
	// MNetworkEnable
	uint8_t m_Flags; // 0x759	
	// MNetworkEnable
	uint8_t m_LightStyle; // 0x75a	
	bool m_On; // 0x75b	
	// MNetworkEnable
	float m_Radius; // 0x75c	
	// MNetworkEnable
	int32_t m_Exponent; // 0x760	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "360.000000"
	float m_InnerAngle; // 0x764	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "360.000000"
	float m_OuterAngle; // 0x768	
	// MNetworkEnable
	float m_SpotRadius; // 0x76c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1f5490
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDebugHistory : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x1f4040]; // 0x4a8
public:
	int32_t m_nNpcEvents; // 0x1f44e8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvEntityMaker : public CPointEntity
{
public:
	Vector m_vecEntityMins; // 0x4a8	
	Vector m_vecEntityMaxs; // 0x4b4	
	CHandle< CBaseEntity > m_hCurrentInstance; // 0x4c0	
	CHandle< CBaseEntity > m_hCurrentBlocker; // 0x4c4	
	Vector m_vecBlockerOrigin; // 0x4c8	
	QAngle m_angPostSpawnDirection; // 0x4d4	
	float m_flPostSpawnDirectionVariance; // 0x4e0	
	float m_flPostSpawnSpeed; // 0x4e4	
	bool m_bPostSpawnUseAngles; // 0x4e8	
private:
	[[maybe_unused]] uint8_t __pad04e9[0x7]; // 0x4e9
public:
	CUtlSymbolLarge m_iszTemplate; // 0x4f0	
	CEntityIOOutput m_pOutputOnSpawned; // 0x4f8	
	CEntityIOOutput m_pOutputOnFailedSpawn; // 0x520	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoInstructorHintTarget : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvInstructorHint : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszName; // 0x4a8	
	CUtlSymbolLarge m_iszReplace_Key; // 0x4b0	
	CUtlSymbolLarge m_iszHintTargetEntity; // 0x4b8	
	int32_t m_iTimeout; // 0x4c0	
	int32_t m_iDisplayLimit; // 0x4c4	
	CUtlSymbolLarge m_iszIcon_Onscreen; // 0x4c8	
	CUtlSymbolLarge m_iszIcon_Offscreen; // 0x4d0	
	CUtlSymbolLarge m_iszCaption; // 0x4d8	
	CUtlSymbolLarge m_iszActivatorCaption; // 0x4e0	
	Color m_Color; // 0x4e8	
	float m_fIconOffset; // 0x4ec	
	float m_fRange; // 0x4f0	
	uint8_t m_iPulseOption; // 0x4f4	
	uint8_t m_iAlphaOption; // 0x4f5	
	uint8_t m_iShakeOption; // 0x4f6	
	bool m_bStatic; // 0x4f7	
	bool m_bNoOffscreen; // 0x4f8	
	bool m_bForceCaption; // 0x4f9	
private:
	[[maybe_unused]] uint8_t __pad04fa[0x2]; // 0x4fa
public:
	int32_t m_iInstanceType; // 0x4fc	
	bool m_bSuppressRest; // 0x500	
private:
	[[maybe_unused]] uint8_t __pad0501[0x7]; // 0x501
public:
	CUtlSymbolLarge m_iszBinding; // 0x508	
	bool m_bAllowNoDrawTarget; // 0x510	
	bool m_bAutoStart; // 0x511	
	bool m_bLocalPlayerOnly; // 0x512	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvInstructorVRHint : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszName; // 0x4a8	
	CUtlSymbolLarge m_iszHintTargetEntity; // 0x4b0	
	int32_t m_iTimeout; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_iszCaption; // 0x4c0	
	CUtlSymbolLarge m_iszStartSound; // 0x4c8	
	int32_t m_iLayoutFileType; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_iszCustomLayoutFile; // 0x4d8	
	int32_t m_iAttachType; // 0x4e0	
	float m_flHeightOffset; // 0x4e4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInstructorEventEntity : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszName; // 0x4a8	
	CUtlSymbolLarge m_iszHintTargetEntity; // 0x4b0	
	CHandle< CBasePlayerPawn > m_hTargetPlayer; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x530
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "string_t m_iszOverlayNames"
// MNetworkVarNames "float32 m_flOverlayTimes"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "int32 m_iDesiredOverlay"
// MNetworkVarNames "bool m_bIsActive"
class CEnvScreenOverlay : public CPointEntity
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszOverlayNames[10]; // 0x4a8	
	// MNetworkEnable
	// MNetworkBitCount "11"
	// MNetworkMinValue "-1.000000"
	// MNetworkMaxValue "63.000000"
	float m_flOverlayTimes[10]; // 0x4f8	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x520	
	// MNetworkEnable
	int32_t m_iDesiredOverlay; // 0x524	
	// MNetworkEnable
	bool m_bIsActive; // 0x528	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Color m_fadeColor"
class CEnvFade : public CLogicalEntity
{
public:
	// MNetworkEnable
	Color m_fadeColor; // 0x4a8	
	float m_Duration; // 0x4ac	
	float m_HoldDuration; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b4[0x4]; // 0x4b4
public:
	CEntityIOOutput m_OnBeginFade; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CCredits : public CPointEntity
{
public:
	CEntityIOOutput m_OnCreditsDone; // 0x4a8	
	bool m_bRolledOutroCredits; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d1[0x3]; // 0x4d1
public:
	float m_flLogoLength; // 0x4d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvShake : public CPointEntity
{
public:
	CUtlSymbolLarge m_limitToEntity; // 0x4a8	
	float m_Amplitude; // 0x4b0	
	float m_Frequency; // 0x4b4	
	float m_Duration; // 0x4b8	
	float m_Radius; // 0x4bc	
	GameTime_t m_stopTime; // 0x4c0	
	GameTime_t m_nextShake; // 0x4c4	
	float m_currentAmp; // 0x4c8	
	Vector m_maxForce; // 0x4cc	
private:
	[[maybe_unused]] uint8_t __pad04d8[0x8]; // 0x4d8
public:
	CPhysicsShake m_shakeCallback; // 0x4e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvTilt : public CPointEntity
{
public:
	float m_Duration; // 0x4a8	
	float m_Radius; // 0x4ac	
	float m_TiltTime; // 0x4b0	
	GameTime_t m_stopTime; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvSpark : public CPointEntity
{
public:
	float m_flDelay; // 0x4a8	
	int32_t m_nMagnitude; // 0x4ac	
	int32_t m_nTrailLength; // 0x4b0	
	int32_t m_nType; // 0x4b4	
	CEntityIOOutput m_OnSpark; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CShower : public CModelPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvExplosion : public CModelPointEntity
{
public:
	int32_t m_iMagnitude; // 0x758	
	float m_flPlayerDamage; // 0x75c	
	int32_t m_iRadiusOverride; // 0x760	
	float m_flInnerRadius; // 0x764	
	int32_t m_spriteScale; // 0x768	
	float m_flDamageForce; // 0x76c	
	CHandle< CBaseEntity > m_hInflictor; // 0x770	
	int32_t m_iCustomDamageType; // 0x774	
private:
	[[maybe_unused]] uint8_t __pad0778[0x8]; // 0x778
public:
	CUtlSymbolLarge m_iszExplosionType; // 0x780	
	CUtlSymbolLarge m_iszCustomEffectName; // 0x788	
	CUtlSymbolLarge m_iszCustomSoundName; // 0x790	
	Class_T m_iClassIgnore; // 0x798	
	Class_T m_iClassIgnore2; // 0x79c	
	CUtlSymbolLarge m_iszEntityIgnoreName; // 0x7a0	
	CHandle< CBaseEntity > m_hEntityIgnore; // 0x7a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterName : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterName; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterModel : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterModel; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterContext : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterContext; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class FilterTeam : public CBaseFilter
{
public:
	int32_t m_iFilterTeam; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterMassGreater : public CBaseFilter
{
public:
	float m_fFilterMass; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class FilterDamageType : public CBaseFilter
{
public:
	int32_t m_iDamageType; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class FilterHealth : public CBaseFilter
{
public:
	bool m_bAdrenalineActive; // 0x500	
private:
	[[maybe_unused]] uint8_t __pad0501[0x3]; // 0x501
public:
	int32_t m_iHealthMin; // 0x504	
	int32_t m_iHealthMax; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterEnemy : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iszEnemyName; // 0x500	
	float m_flRadius; // 0x508	
	float m_flOuterRadius; // 0x50c	
	int32_t m_nMaxSquadmatesPerEnemy; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0514[0x4]; // 0x514
public:
	CUtlSymbolLarge m_iszPlayerName; // 0x518	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFilterAttributeInt : public CBaseFilter
{
public:
	CUtlStringToken m_sAttributeName; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncTimescale : public CBaseEntity
{
public:
	float m_flDesiredTimescale; // 0x4a8	
	float m_flAcceleration; // 0x4ac	
	float m_flMinBlendRate; // 0x4b0	
	float m_flBlendDeltaMultiplier; // 0x4b4	
	bool m_isStarted; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "CGameSceneNode::m_angRotation"
// MNetworkIncludeByName "m_clrRender"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkIncludeByName "m_spawnflags"
// MNetworkVarNames "uint32 m_nHorizontalSize"
// MNetworkVarNames "uint32 m_nVerticalSize"
// MNetworkVarNames "uint32 m_nMinDist"
// MNetworkVarNames "uint32 m_nMaxDist"
// MNetworkVarNames "uint32 m_nOuterMaxDist"
// MNetworkVarNames "float32 m_flGlowProxySize"
// MNetworkVarNames "float32 m_flHDRColorScale"
class CLightGlow : public CBaseModelEntity
{
public:
	// MNetworkEnable
	uint32_t m_nHorizontalSize; // 0x758	
	// MNetworkEnable
	uint32_t m_nVerticalSize; // 0x75c	
	// MNetworkEnable
	uint32_t m_nMinDist; // 0x760	
	// MNetworkEnable
	uint32_t m_nMaxDist; // 0x764	
	// MNetworkEnable
	uint32_t m_nOuterMaxDist; // 0x768	
	// MNetworkEnable
	// MNetworkBitCount "6"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "64.000000"
	// MNetworkEncodeFlags "2"
	float m_flGlowProxySize; // 0x76c	
	// MNetworkEnable
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "100.000000"
	float m_flHDRColorScale; // 0x770	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicAchievement : public CLogicalEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CUtlSymbolLarge m_iszAchievementEventID; // 0x4b0	
	CEntityIOOutput m_OnFired; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bEnabled"
class CLogicGameEventListener : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x10]; // 0x4a8
public:
	CEntityIOOutput m_OnEventFired; // 0x4b8	
	CUtlSymbolLarge m_iszGameEventName; // 0x4e0	
	CUtlSymbolLarge m_iszGameEventItem; // 0x4e8	
	// MNetworkEnable
	bool m_bEnabled; // 0x4f0	
	bool m_bStartDisabled; // 0x4f1	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicMeasureMovement : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_strMeasureTarget; // 0x4a8	
	CUtlSymbolLarge m_strMeasureReference; // 0x4b0	
	CUtlSymbolLarge m_strTargetReference; // 0x4b8	
	CHandle< CBaseEntity > m_hMeasureTarget; // 0x4c0	
	CHandle< CBaseEntity > m_hMeasureReference; // 0x4c4	
	CHandle< CBaseEntity > m_hTarget; // 0x4c8	
	CHandle< CBaseEntity > m_hTargetReference; // 0x4cc	
	float m_flScale; // 0x4d0	
	int32_t m_nMeasureType; // 0x4d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicNavigation : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	bool m_isOn; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b1[0x3]; // 0x4b1
public:
	navproperties_t m_navProperty; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicNPCCounter : public CBaseEntity
{
public:
	CEntityIOOutput m_OnMinCountAll; // 0x4a8	
	CEntityIOOutput m_OnMaxCountAll; // 0x4d0	
	CEntityOutputTemplate< float32 > m_OnFactorAll; // 0x4f8	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDistAll; // 0x520	
	CEntityIOOutput m_OnMinCount_1; // 0x548	
	CEntityIOOutput m_OnMaxCount_1; // 0x570	
	CEntityOutputTemplate< float32 > m_OnFactor_1; // 0x598	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDist_1; // 0x5c0	
	CEntityIOOutput m_OnMinCount_2; // 0x5e8	
	CEntityIOOutput m_OnMaxCount_2; // 0x610	
	CEntityOutputTemplate< float32 > m_OnFactor_2; // 0x638	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDist_2; // 0x660	
	CEntityIOOutput m_OnMinCount_3; // 0x688	
	CEntityIOOutput m_OnMaxCount_3; // 0x6b0	
	CEntityOutputTemplate< float32 > m_OnFactor_3; // 0x6d8	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDist_3; // 0x700	
	CEntityHandle m_hSource; // 0x728	
private:
	[[maybe_unused]] uint8_t __pad072c[0x4]; // 0x72c
public:
	CUtlSymbolLarge m_iszSourceEntityName; // 0x730	
	float m_flDistanceMax; // 0x738	
	bool m_bDisabled; // 0x73c	
private:
	[[maybe_unused]] uint8_t __pad073d[0x3]; // 0x73d
public:
	int32_t m_nMinCountAll; // 0x740	
	int32_t m_nMaxCountAll; // 0x744	
	int32_t m_nMinFactorAll; // 0x748	
	int32_t m_nMaxFactorAll; // 0x74c	
private:
	[[maybe_unused]] uint8_t __pad0750[0x8]; // 0x750
public:
	CUtlSymbolLarge m_iszNPCClassname_1; // 0x758	
	int32_t m_nNPCState_1; // 0x760	
	bool m_bInvertState_1; // 0x764	
private:
	[[maybe_unused]] uint8_t __pad0765[0x3]; // 0x765
public:
	int32_t m_nMinCount_1; // 0x768	
	int32_t m_nMaxCount_1; // 0x76c	
	int32_t m_nMinFactor_1; // 0x770	
	int32_t m_nMaxFactor_1; // 0x774	
private:
	[[maybe_unused]] uint8_t __pad0778[0x4]; // 0x778
public:
	float m_flDefaultDist_1; // 0x77c	
	CUtlSymbolLarge m_iszNPCClassname_2; // 0x780	
	int32_t m_nNPCState_2; // 0x788	
	bool m_bInvertState_2; // 0x78c	
private:
	[[maybe_unused]] uint8_t __pad078d[0x3]; // 0x78d
public:
	int32_t m_nMinCount_2; // 0x790	
	int32_t m_nMaxCount_2; // 0x794	
	int32_t m_nMinFactor_2; // 0x798	
	int32_t m_nMaxFactor_2; // 0x79c	
private:
	[[maybe_unused]] uint8_t __pad07a0[0x4]; // 0x7a0
public:
	float m_flDefaultDist_2; // 0x7a4	
	CUtlSymbolLarge m_iszNPCClassname_3; // 0x7a8	
	int32_t m_nNPCState_3; // 0x7b0	
	bool m_bInvertState_3; // 0x7b4	
private:
	[[maybe_unused]] uint8_t __pad07b5[0x3]; // 0x7b5
public:
	int32_t m_nMinCount_3; // 0x7b8	
	int32_t m_nMaxCount_3; // 0x7bc	
	int32_t m_nMinFactor_3; // 0x7c0	
	int32_t m_nMaxFactor_3; // 0x7c4	
private:
	[[maybe_unused]] uint8_t __pad07c8[0x4]; // 0x7c8
public:
	float m_flDefaultDist_3; // 0x7cc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicNPCCounterAABB : public CLogicNPCCounter
{
public:
	Vector m_vDistanceOuterMins; // 0x7e8	
	Vector m_vDistanceOuterMaxs; // 0x7f4	
	Vector m_vOuterMins; // 0x800	
	Vector m_vOuterMaxs; // 0x80c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicNPCCounterOBB : public CLogicNPCCounterAABB
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicPlayerProxy : public CLogicalEntity
{
public:
	CHandle< CBaseEntity > m_hPlayer; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CEntityIOOutput m_PlayerHasAmmo; // 0x4b0	
	CEntityIOOutput m_PlayerHasNoAmmo; // 0x4d8	
	CEntityIOOutput m_PlayerDied; // 0x500	
	CEntityOutputTemplate< int32 > m_RequestedPlayerHealth; // 0x528	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicAuto : public CBaseEntity
{
public:
	CEntityIOOutput m_OnMapSpawn; // 0x4a8	
	CEntityIOOutput m_OnDemoMapSpawn; // 0x4d0	
	CEntityIOOutput m_OnNewGame; // 0x4f8	
	CEntityIOOutput m_OnLoadGame; // 0x520	
	CEntityIOOutput m_OnMapTransition; // 0x548	
	CEntityIOOutput m_OnBackgroundMap; // 0x570	
	CEntityIOOutput m_OnMultiNewMap; // 0x598	
	CEntityIOOutput m_OnMultiNewRound; // 0x5c0	
	CEntityIOOutput m_OnVREnabled; // 0x5e8	
	CEntityIOOutput m_OnVRNotEnabled; // 0x610	
	CUtlSymbolLarge m_globalstate; // 0x638	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicScript : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTimerEntity : public CLogicalEntity
{
public:
	CEntityIOOutput m_OnTimer; // 0x4a8	
	CEntityIOOutput m_OnTimerHigh; // 0x4d0	
	CEntityIOOutput m_OnTimerLow; // 0x4f8	
	int32_t m_iDisabled; // 0x520	
	float m_flInitialDelay; // 0x524	
	float m_flRefireTime; // 0x528	
	bool m_bUpDownState; // 0x52c	
private:
	[[maybe_unused]] uint8_t __pad052d[0x3]; // 0x52d
public:
	int32_t m_iUseRandomTime; // 0x530	
	bool m_bPauseAfterFiring; // 0x534	
private:
	[[maybe_unused]] uint8_t __pad0535[0x3]; // 0x535
public:
	float m_flLowerRandomBound; // 0x538	
	float m_flUpperRandomBound; // 0x53c	
	float m_flRemainingTime; // 0x540	
	bool m_bPaused; // 0x544	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicLineToEntity : public CLogicalEntity
{
public:
	CEntityOutputTemplate< Vector > m_Line; // 0x4a8	
	CUtlSymbolLarge m_SourceName; // 0x4d0	
	CHandle< CBaseEntity > m_StartEntity; // 0x4d8	
	CHandle< CBaseEntity > m_EndEntity; // 0x4dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMathRemap : public CLogicalEntity
{
public:
	float m_flInMin; // 0x4a8	
	float m_flInMax; // 0x4ac	
	float m_flOut1; // 0x4b0	
	float m_flOut2; // 0x4b4	
	float m_flOldInValue; // 0x4b8	
	bool m_bEnabled; // 0x4bc	
private:
	[[maybe_unused]] uint8_t __pad04bd[0x3]; // 0x4bd
public:
	CEntityOutputTemplate< float32 > m_OutValue; // 0x4c0	
	CEntityIOOutput m_OnRoseAboveMin; // 0x4e8	
	CEntityIOOutput m_OnRoseAboveMax; // 0x510	
	CEntityIOOutput m_OnFellBelowMin; // 0x538	
	CEntityIOOutput m_OnFellBelowMax; // 0x560	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMathColorBlend : public CLogicalEntity
{
public:
	float m_flInMin; // 0x4a8	
	float m_flInMax; // 0x4ac	
	Color m_OutColor1; // 0x4b0	
	Color m_OutColor2; // 0x4b4	
	CEntityOutputTemplate< Color > m_OutValue; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvGlobal : public CLogicalEntity
{
public:
	CEntityOutputTemplate< int32 > m_outCounter; // 0x4a8	
	CUtlSymbolLarge m_globalstate; // 0x4d0	
	int32_t m_triggermode; // 0x4d8	
	int32_t m_initialstate; // 0x4dc	
	int32_t m_counter; // 0x4e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMultiSource : public CLogicalEntity
{
public:
	CHandle< CBaseEntity > m_rgEntities[32]; // 0x4a8	
	int32_t m_rgTriggered[32]; // 0x528	
	CEntityIOOutput m_OnTrigger; // 0x5a8	
	int32_t m_iTotal; // 0x5d0	
private:
	[[maybe_unused]] uint8_t __pad05d4[0x4]; // 0x5d4
public:
	CUtlSymbolLarge m_globalstate; // 0x5d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMathCounter : public CLogicalEntity
{
public:
	float m_flMin; // 0x4a8	
	float m_flMax; // 0x4ac	
	bool m_bHitMin; // 0x4b0	
	bool m_bHitMax; // 0x4b1	
	bool m_bDisabled; // 0x4b2	
private:
	[[maybe_unused]] uint8_t __pad04b3[0x5]; // 0x4b3
public:
	CEntityOutputTemplate< float32 > m_OutValue; // 0x4b8	
	CEntityOutputTemplate< float32 > m_OnGetValue; // 0x4e0	
	CEntityIOOutput m_OnHitMin; // 0x508	
	CEntityIOOutput m_OnHitMax; // 0x530	
	CEntityIOOutput m_OnChangedFromMin; // 0x558	
	CEntityIOOutput m_OnChangedFromMax; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xaf8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicCase : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nCase[32]; // 0x4a8	
	int32_t m_nShuffleCases; // 0x5a8	
	int32_t m_nLastShuffleCase; // 0x5ac	
	uint8_t m_uchShuffleCaseMap[32]; // 0x5b0	
	CEntityIOOutput m_OnCase[32]; // 0x5d0	
	CEntityOutputTemplate< CVariantBase< CVariantDefaultAllocator > > m_OnDefault; // 0xad0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicCompare : public CLogicalEntity
{
public:
	float m_flInValue; // 0x4a8	
	float m_flCompareValue; // 0x4ac	
	CEntityOutputTemplate< float32 > m_OnLessThan; // 0x4b0	
	CEntityOutputTemplate< float32 > m_OnEqualTo; // 0x4d8	
	CEntityOutputTemplate< float32 > m_OnNotEqualTo; // 0x500	
	CEntityOutputTemplate< float32 > m_OnGreaterThan; // 0x528	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicAutosave : public CLogicalEntity
{
public:
	bool m_bForceNewLevelUnit; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	int32_t m_minHitPoints; // 0x4ac	
	int32_t m_minHitPointsToCommit; // 0x4b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicActiveAutosave : public CLogicAutosave
{
public:
	int32_t m_TriggerHitPoints; // 0x4b8	
	float m_flTimeToTrigger; // 0x4bc	
	GameTime_t m_flStartTime; // 0x4c0	
	float m_flDangerousTime; // 0x4c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicDistanceAutosave : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszTargetEntity; // 0x4a8	
	float m_flDistanceToPlayer; // 0x4b0	
	bool m_bForceNewLevelUnit; // 0x4b4	
	bool m_bCheckCough; // 0x4b5	
	bool m_bThinkDangerous; // 0x4b6	
private:
	[[maybe_unused]] uint8_t __pad04b7[0x1]; // 0x4b7
public:
	float m_flDangerousTime; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicCollisionPair : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nameAttach1; // 0x4a8	
	CUtlSymbolLarge m_nameAttach2; // 0x4b0	
	bool m_disabled; // 0x4b8	
	bool m_succeeded; // 0x4b9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicBranchList : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nLogicBranchNames[16]; // 0x4a8	
	CUtlVector< CHandle< CBaseEntity > > m_LogicBranchList; // 0x528	
	CLogicBranchList::LogicBranchListenerLastState_t m_eLastState; // 0x540	
private:
	[[maybe_unused]] uint8_t __pad0544[0x4]; // 0x544
public:
	CEntityIOOutput m_OnAllTrue; // 0x548	
	CEntityIOOutput m_OnAllFalse; // 0x570	
	CEntityIOOutput m_OnMixed; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicGameEvent : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszEventName; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMessageEntity : public CPointEntity
{
public:
	int32_t m_radius; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_messageText; // 0x4b0	
	bool m_drawText; // 0x4b8	
	bool m_bDeveloperOnly; // 0x4b9	
	bool m_bEnabled; // 0x4ba	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerBrush : public CBaseModelEntity
{
public:
	CEntityIOOutput m_OnStartTouch; // 0x758	
	CEntityIOOutput m_OnEndTouch; // 0x780	
	CEntityIOOutput m_OnUse; // 0x7a8	
	int32_t m_iInputFilter; // 0x7d0	
	int32_t m_iDontMessageParent; // 0x7d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPathKeyFrame : public CLogicalEntity
{
public:
	Vector m_Origin; // 0x4a8	
	QAngle m_Angles; // 0x4b4	
	Quaternion m_qAngle; // 0x4c0	
	CUtlSymbolLarge m_iNextKey; // 0x4d0	
	float m_flNextTime; // 0x4d8	
private:
	[[maybe_unused]] uint8_t __pad04dc[0x4]; // 0x4dc
public:
	CPathKeyFrame* m_pNextKey; // 0x4e0	
	CPathKeyFrame* m_pPrevKey; // 0x4e8	
	float m_flSpeed; // 0x4f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x540
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBaseMoveBehavior : public CPathKeyFrame
{
public:
	int32_t m_iPositionInterpolator; // 0x500	
	int32_t m_iRotationInterpolator; // 0x504	
	float m_flAnimStartTime; // 0x508	
	float m_flAnimEndTime; // 0x50c	
	float m_flAverageSpeedAcrossFrame; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0514[0x4]; // 0x514
public:
	CPathKeyFrame* m_pCurrentKeyFrame; // 0x518	
	CPathKeyFrame* m_pTargetKeyFrame; // 0x520	
	CPathKeyFrame* m_pPreKeyFrame; // 0x528	
	CPathKeyFrame* m_pPostKeyFrame; // 0x530	
	float m_flTimeIntoFrame; // 0x538	
	int32_t m_iDirection; // 0x53c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPathCorner : public CPointEntity
{
public:
	float m_flWait; // 0x4a8	
	float m_flRadius; // 0x4ac	
	CEntityIOOutput m_OnPass; // 0x4b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Is Abstract
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysForce : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_nameAttach; // 0x4b0	
	float m_force; // 0x4b8	
	float m_forceTime; // 0x4bc	
	CHandle< CBaseEntity > m_attachedObject; // 0x4c0	
	bool m_wasRestored; // 0x4c4	
private:
	[[maybe_unused]] uint8_t __pad04c5[0x3]; // 0x4c5
public:
	CConstantForceController m_integrator; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysThruster : public CPhysForce
{
public:
	Vector m_localOrigin; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysTorque : public CPhysForce
{
public:
	Vector m_axis; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysMotor : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nameAttach; // 0x4a8	
	CHandle< CBaseEntity > m_hAttachedObject; // 0x4b0	
	float m_spinUp; // 0x4b4	
	float m_additionalAcceleration; // 0x4b8	
	float m_angularAcceleration; // 0x4bc	
	GameTime_t m_lastTime; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c4[0x14]; // 0x4c4
public:
	CMotorController m_motor; // 0x4d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CKeepUpright : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	Vector m_worldGoalAxis; // 0x4b0	
	Vector m_localTestAxis; // 0x4bc	
private:
	[[maybe_unused]] uint8_t __pad04c8[0x8]; // 0x4c8
public:
	CUtlSymbolLarge m_nameAttach; // 0x4d0	
	CHandle< CBaseEntity > m_attachedObject; // 0x4d8	
	float m_angularLimit; // 0x4dc	
	bool m_bActive; // 0x4e0	
	bool m_bDampAllRotation; // 0x4e1	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Is Abstract
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysConstraint : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_nameAttach1; // 0x4b0	
	CUtlSymbolLarge m_nameAttach2; // 0x4b8	
	CUtlSymbolLarge m_breakSound; // 0x4c0	
	float m_forceLimit; // 0x4c8	
	float m_torqueLimit; // 0x4cc	
	uint32_t m_teleportTick; // 0x4d0	
	float m_minTeleportDistance; // 0x4d4	
	CEntityIOOutput m_OnBreak; // 0x4d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysHinge : public CPhysConstraint
{
private:
	[[maybe_unused]] uint8_t __pad0500[0x8]; // 0x500
public:
	ConstraintSoundInfo m_soundInfo; // 0x508	
	CEntityIOOutput m_NotifyMinLimitReached; // 0x590	
	CEntityIOOutput m_NotifyMaxLimitReached; // 0x5b8	
	bool m_bAtMinLimit; // 0x5e0	
	bool m_bAtMaxLimit; // 0x5e1	
private:
	[[maybe_unused]] uint8_t __pad05e2[0x2]; // 0x5e2
public:
	constraint_hingeparams_t m_hinge; // 0x5e4	
	float m_hingeFriction; // 0x624	
	float m_systemLoadScale; // 0x628	
	bool m_bIsAxisLocal; // 0x62c	
private:
	[[maybe_unused]] uint8_t __pad062d[0x3]; // 0x62d
public:
	float m_flMinRotation; // 0x630	
	float m_flMaxRotation; // 0x634	
	float m_flInitialRotation; // 0x638	
	float m_flMotorFrequency; // 0x63c	
	float m_flMotorDampingRatio; // 0x640	
	float m_flAngleSpeed; // 0x644	
	float m_flAngleSpeedThreshold; // 0x648	
private:
	[[maybe_unused]] uint8_t __pad064c[0x4]; // 0x64c
public:
	CEntityIOOutput m_OnStartMoving; // 0x650	
	CEntityIOOutput m_OnStopMoving; // 0x678	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysHingeAlias_phys_hinge_local : public CPhysHinge
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysBallSocket : public CPhysConstraint
{
public:
	float m_flFriction; // 0x500	
	bool m_bEnableSwingLimit; // 0x504	
private:
	[[maybe_unused]] uint8_t __pad0505[0x3]; // 0x505
public:
	float m_flSwingLimit; // 0x508	
	bool m_bEnableTwistLimit; // 0x50c	
private:
	[[maybe_unused]] uint8_t __pad050d[0x3]; // 0x50d
public:
	float m_flMinTwistAngle; // 0x510	
	float m_flMaxTwistAngle; // 0x514	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysSlideConstraint : public CPhysConstraint
{
private:
	[[maybe_unused]] uint8_t __pad0500[0x8]; // 0x500
public:
	Vector m_axisEnd; // 0x508	
	float m_slideFriction; // 0x514	
	float m_systemLoadScale; // 0x518	
	float m_initialOffset; // 0x51c	
	bool m_bEnableLinearConstraint; // 0x520	
	bool m_bEnableAngularConstraint; // 0x521	
private:
	[[maybe_unused]] uint8_t __pad0522[0x2]; // 0x522
public:
	float m_flMotorFrequency; // 0x524	
	float m_flMotorDampingRatio; // 0x528	
	bool m_bUseEntityPivot; // 0x52c	
private:
	[[maybe_unused]] uint8_t __pad052d[0x3]; // 0x52d
public:
	ConstraintSoundInfo m_soundInfo; // 0x530	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysFixed : public CPhysConstraint
{
public:
	float m_flLinearFrequency; // 0x500	
	float m_flLinearDampingRatio; // 0x504	
	float m_flAngularFrequency; // 0x508	
	float m_flAngularDampingRatio; // 0x50c	
	bool m_bEnableLinearConstraint; // 0x510	
	bool m_bEnableAngularConstraint; // 0x511	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x530
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysPulley : public CPhysConstraint
{
public:
	Vector m_position2; // 0x500	
	Vector m_offset[2]; // 0x50c	
	float m_addLength; // 0x524	
	float m_gearRatio; // 0x528	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysLength : public CPhysConstraint
{
public:
	Vector m_offset[2]; // 0x500	
	Vector m_vecAttach; // 0x518	
	float m_addLength; // 0x524	
	float m_minLength; // 0x528	
	float m_totalLength; // 0x52c	
	bool m_bEnableCollision; // 0x530	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CRagdollConstraint : public CPhysConstraint
{
public:
	float m_xmin; // 0x500	
	float m_xmax; // 0x504	
	float m_ymin; // 0x508	
	float m_ymax; // 0x50c	
	float m_zmin; // 0x510	
	float m_zmax; // 0x514	
	float m_xfriction; // 0x518	
	float m_yfriction; // 0x51c	
	float m_zfriction; // 0x520	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CGenericConstraint : public CPhysConstraint
{
private:
	[[maybe_unused]] uint8_t __pad0500[0x8]; // 0x500
public:
	JointMotion_t m_nLinearMotionX; // 0x508	
	JointMotion_t m_nLinearMotionY; // 0x50c	
	JointMotion_t m_nLinearMotionZ; // 0x510	
	float m_flLinearFrequencyX; // 0x514	
	float m_flLinearFrequencyY; // 0x518	
	float m_flLinearFrequencyZ; // 0x51c	
	float m_flLinearDampingRatioX; // 0x520	
	float m_flLinearDampingRatioY; // 0x524	
	float m_flLinearDampingRatioZ; // 0x528	
	float m_flMaxLinearImpulseX; // 0x52c	
	float m_flMaxLinearImpulseY; // 0x530	
	float m_flMaxLinearImpulseZ; // 0x534	
	float m_flBreakAfterTimeX; // 0x538	
	float m_flBreakAfterTimeY; // 0x53c	
	float m_flBreakAfterTimeZ; // 0x540	
	GameTime_t m_flBreakAfterTimeStartTimeX; // 0x544	
	GameTime_t m_flBreakAfterTimeStartTimeY; // 0x548	
	GameTime_t m_flBreakAfterTimeStartTimeZ; // 0x54c	
	float m_flBreakAfterTimeThresholdX; // 0x550	
	float m_flBreakAfterTimeThresholdY; // 0x554	
	float m_flBreakAfterTimeThresholdZ; // 0x558	
	float m_flNotifyForceX; // 0x55c	
	float m_flNotifyForceY; // 0x560	
	float m_flNotifyForceZ; // 0x564	
	float m_flNotifyForceMinTimeX; // 0x568	
	float m_flNotifyForceMinTimeY; // 0x56c	
	float m_flNotifyForceMinTimeZ; // 0x570	
	GameTime_t m_flNotifyForceLastTimeX; // 0x574	
	GameTime_t m_flNotifyForceLastTimeY; // 0x578	
	GameTime_t m_flNotifyForceLastTimeZ; // 0x57c	
	bool m_bAxisNotifiedX; // 0x580	
	bool m_bAxisNotifiedY; // 0x581	
	bool m_bAxisNotifiedZ; // 0x582	
private:
	[[maybe_unused]] uint8_t __pad0583[0x1]; // 0x583
public:
	JointMotion_t m_nAngularMotionX; // 0x584	
	JointMotion_t m_nAngularMotionY; // 0x588	
	JointMotion_t m_nAngularMotionZ; // 0x58c	
	float m_flAngularFrequencyX; // 0x590	
	float m_flAngularFrequencyY; // 0x594	
	float m_flAngularFrequencyZ; // 0x598	
	float m_flAngularDampingRatioX; // 0x59c	
	float m_flAngularDampingRatioY; // 0x5a0	
	float m_flAngularDampingRatioZ; // 0x5a4	
	float m_flMaxAngularImpulseX; // 0x5a8	
	float m_flMaxAngularImpulseY; // 0x5ac	
	float m_flMaxAngularImpulseZ; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b4[0x4]; // 0x5b4
public:
	CEntityIOOutput m_NotifyForceReachedX; // 0x5b8	
	CEntityIOOutput m_NotifyForceReachedY; // 0x5e0	
	CEntityIOOutput m_NotifyForceReachedZ; // 0x608	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSplineConstraint : public CPhysConstraint
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x530
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysWheelConstraint : public CPhysConstraint
{
public:
	float m_flSuspensionFrequency; // 0x500	
	float m_flSuspensionDampingRatio; // 0x504	
	float m_flSuspensionHeightOffset; // 0x508	
	bool m_bEnableSuspensionLimit; // 0x50c	
private:
	[[maybe_unused]] uint8_t __pad050d[0x3]; // 0x50d
public:
	float m_flMinSuspensionOffset; // 0x510	
	float m_flMaxSuspensionOffset; // 0x514	
	bool m_bEnableSteeringLimit; // 0x518	
private:
	[[maybe_unused]] uint8_t __pad0519[0x3]; // 0x519
public:
	float m_flMinSteeringAngle; // 0x51c	
	float m_flMaxSteeringAngle; // 0x520	
	float m_flSteeringAxisFriction; // 0x524	
	float m_flSpinAxisFriction; // 0x528	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysicsEntitySolver : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CHandle< CBaseEntity > m_hMovingEntity; // 0x4b0	
	CHandle< CBaseEntity > m_hPhysicsBlocker; // 0x4b4	
	float m_separationDuration; // 0x4b8	
	GameTime_t m_cancelTime; // 0x4bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysicsSpring : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	float m_flFrequency; // 0x4b0	
	float m_flDampingRatio; // 0x4b4	
	float m_flRestLength; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_nameAttachStart; // 0x4c0	
	CUtlSymbolLarge m_nameAttachEnd; // 0x4c8	
	Vector m_start; // 0x4d0	
	Vector m_end; // 0x4dc	
	uint32_t m_teleportTick; // 0x4e8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointPush : public CPointEntity
{
public:
	bool m_bEnabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flMagnitude; // 0x4ac	
	float m_flRadius; // 0x4b0	
	float m_flInnerRadius; // 0x4b4	
	float m_flConeOfInfluence; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_iszFilterName; // 0x4c0	
	CHandle< CBaseFilter > m_hFilter; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoPlayerStart : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointEntityFinder : public CBaseEntity
{
public:
	CHandle< CBaseEntity > m_hEntity; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_iFilterName; // 0x4b0	
	CHandle< CBaseFilter > m_hFilter; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_iRefName; // 0x4c0	
	CHandle< CBaseEntity > m_hReference; // 0x4c8	
	EntFinderMethod_t m_FindMethod; // 0x4cc	
	CEntityIOOutput m_OnFoundEntity; // 0x4d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "bool m_bUpdateOnClient"
// MNetworkVarNames "ValueRemapperInputType_t m_nInputType"
// MNetworkVarNames "CHandle< CBaseEntity> m_hRemapLineStart"
// MNetworkVarNames "CHandle< CBaseEntity> m_hRemapLineEnd"
// MNetworkVarNames "float m_flMaximumChangePerSecond"
// MNetworkVarNames "float m_flDisengageDistance"
// MNetworkVarNames "float m_flEngageDistance"
// MNetworkVarNames "bool m_bRequiresUseKey"
// MNetworkVarNames "ValueRemapperOutputType_t m_nOutputType"
// MNetworkVarNames "CHandle< CBaseEntity > m_hOutputEntities"
// MNetworkVarNames "ValueRemapperHapticsType_t m_nHapticsType"
// MNetworkVarNames "ValueRemapperMomentumType_t m_nMomentumType"
// MNetworkVarNames "float m_flMomentumModifier"
// MNetworkVarNames "float m_flSnapValue"
// MNetworkVarNames "ValueRemapperRatchetType_t m_nRatchetType"
// MNetworkVarNames "float m_flInputOffset"
class CPointValueRemapper : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
	// MNetworkEnable
	bool m_bUpdateOnClient; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x2]; // 0x4aa
public:
	// MNetworkEnable
	ValueRemapperInputType_t m_nInputType; // 0x4ac	
	CUtlSymbolLarge m_iszRemapLineStartName; // 0x4b0	
	CUtlSymbolLarge m_iszRemapLineEndName; // 0x4b8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hRemapLineStart; // 0x4c0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hRemapLineEnd; // 0x4c4	
	// MNetworkEnable
	float m_flMaximumChangePerSecond; // 0x4c8	
	// MNetworkEnable
	float m_flDisengageDistance; // 0x4cc	
	// MNetworkEnable
	float m_flEngageDistance; // 0x4d0	
	// MNetworkEnable
	bool m_bRequiresUseKey; // 0x4d4	
private:
	[[maybe_unused]] uint8_t __pad04d5[0x3]; // 0x4d5
public:
	// MNetworkEnable
	ValueRemapperOutputType_t m_nOutputType; // 0x4d8	
private:
	[[maybe_unused]] uint8_t __pad04dc[0x4]; // 0x4dc
public:
	CUtlSymbolLarge m_iszOutputEntityName; // 0x4e0	
	CUtlSymbolLarge m_iszOutputEntity2Name; // 0x4e8	
	CUtlSymbolLarge m_iszOutputEntity3Name; // 0x4f0	
	CUtlSymbolLarge m_iszOutputEntity4Name; // 0x4f8	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_hOutputEntities; // 0x500	
	// MNetworkEnable
	ValueRemapperHapticsType_t m_nHapticsType; // 0x518	
	// MNetworkEnable
	ValueRemapperMomentumType_t m_nMomentumType; // 0x51c	
	// MNetworkEnable
	float m_flMomentumModifier; // 0x520	
	// MNetworkEnable
	float m_flSnapValue; // 0x524	
	float m_flCurrentMomentum; // 0x528	
	// MNetworkEnable
	ValueRemapperRatchetType_t m_nRatchetType; // 0x52c	
	float m_flRatchetOffset; // 0x530	
	// MNetworkEnable
	float m_flInputOffset; // 0x534	
	bool m_bEngaged; // 0x538	
	bool m_bFirstUpdate; // 0x539	
private:
	[[maybe_unused]] uint8_t __pad053a[0x2]; // 0x53a
public:
	float m_flPreviousValue; // 0x53c	
	GameTime_t m_flPreviousUpdateTickTime; // 0x540	
	Vector m_vecPreviousTestPoint; // 0x544	
	CHandle< CBasePlayerPawn > m_hUsingPlayer; // 0x550	
	float m_flCustomOutputValue; // 0x554	
	CUtlSymbolLarge m_iszSoundEngage; // 0x558	
	CUtlSymbolLarge m_iszSoundDisengage; // 0x560	
	CUtlSymbolLarge m_iszSoundReachedValueZero; // 0x568	
	CUtlSymbolLarge m_iszSoundReachedValueOne; // 0x570	
	CUtlSymbolLarge m_iszSoundMovingLoop; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0580[0x8]; // 0x580
public:
	CEntityOutputTemplate< float32 > m_Position; // 0x588	
	CEntityOutputTemplate< float32 > m_PositionDelta; // 0x5b0	
	CEntityIOOutput m_OnReachedValueZero; // 0x5d8	
	CEntityIOOutput m_OnReachedValueOne; // 0x600	
	CEntityIOOutput m_OnReachedValueCustom; // 0x628	
	CEntityIOOutput m_OnEngage; // 0x650	
	CEntityIOOutput m_OnDisengage; // 0x678	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "char m_messageText"
// MNetworkVarNames "char m_FontName"
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bFullbright"
// MNetworkVarNames "float m_flWorldUnitsPerPx"
// MNetworkVarNames "float m_flFontSize"
// MNetworkVarNames "float m_flDepthOffset"
// MNetworkVarNames "Color m_Color"
// MNetworkVarNames "PointWorldTextJustifyHorizontal_t m_nJustifyHorizontal"
// MNetworkVarNames "PointWorldTextJustifyVertical_t m_nJustifyVertical"
// MNetworkVarNames "PointWorldTextReorientMode_t m_nReorientMode"
class CPointWorldText : public CModelPointEntity
{
public:
	// MNetworkEnable
	char m_messageText[512]; // 0x758	
	// MNetworkEnable
	char m_FontName[64]; // 0x958	
	// MNetworkEnable
	bool m_bEnabled; // 0x998	
	// MNetworkEnable
	bool m_bFullbright; // 0x999	
private:
	[[maybe_unused]] uint8_t __pad099a[0x2]; // 0x99a
public:
	// MNetworkEnable
	float m_flWorldUnitsPerPx; // 0x99c	
	// MNetworkEnable
	float m_flFontSize; // 0x9a0	
	// MNetworkEnable
	float m_flDepthOffset; // 0x9a4	
	// MNetworkEnable
	Color m_Color; // 0x9a8	
	// MNetworkEnable
	PointWorldTextJustifyHorizontal_t m_nJustifyHorizontal; // 0x9ac	
	// MNetworkEnable
	PointWorldTextJustifyVertical_t m_nJustifyVertical; // 0x9b0	
	// MNetworkEnable
	PointWorldTextReorientMode_t m_nReorientMode; // 0x9b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointAngularVelocitySensor : public CPointEntity
{
public:
	CHandle< CBaseEntity > m_hTargetEntity; // 0x4a8	
	float m_flThreshold; // 0x4ac	
	int32_t m_nLastCompareResult; // 0x4b0	
	int32_t m_nLastFireResult; // 0x4b4	
	GameTime_t m_flFireTime; // 0x4b8	
	float m_flFireInterval; // 0x4bc	
	float m_flLastAngVelocity; // 0x4c0	
	QAngle m_lastOrientation; // 0x4c4	
	Vector m_vecAxis; // 0x4d0	
	bool m_bUseHelper; // 0x4dc	
private:
	[[maybe_unused]] uint8_t __pad04dd[0x3]; // 0x4dd
public:
	CEntityOutputTemplate< float32 > m_AngularVelocity; // 0x4e0	
	CEntityIOOutput m_OnLessThan; // 0x508	
	CEntityIOOutput m_OnLessThanOrEqualTo; // 0x530	
	CEntityIOOutput m_OnGreaterThan; // 0x558	
	CEntityIOOutput m_OnGreaterThanOrEqualTo; // 0x580	
	CEntityIOOutput m_OnEqualTo; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPointVelocitySensor : public CPointEntity
{
public:
	CHandle< CBaseEntity > m_hTargetEntity; // 0x4a8	
	Vector m_vecAxis; // 0x4ac	
	bool m_bEnabled; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04b9[0x3]; // 0x4b9
public:
	float m_fPrevVelocity; // 0x4bc	
	float m_flAvgInterval; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c4[0x4]; // 0x4c4
public:
	CEntityOutputTemplate< float32 > m_Velocity; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnableMotionFixup : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncPropRespawnZone : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int8 m_iCurrentMaxRagdollCount"
class CRagdollManager : public CBaseEntity
{
public:
	// MNetworkEnable
	int8_t m_iCurrentMaxRagdollCount; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	int32_t m_iMaxRagdollCount; // 0x4ac	
	bool m_bSaveImportant; // 0x4b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CRevertSaved : public CModelPointEntity
{
public:
	float m_loadTime; // 0x758	
	float m_Duration; // 0x75c	
	float m_HoldTime; // 0x760	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSceneListManager : public CLogicalEntity
{
public:
	CUtlVector< CHandle< CSceneListManager > > m_hListManagers; // 0x4a8	
	CUtlSymbolLarge m_iszScenes[16]; // 0x4c0	
	CHandle< CBaseEntity > m_hScenes[16]; // 0x540	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bIsPlayingBack"
// MNetworkVarNames "bool m_bPaused"
// MNetworkVarNames "bool m_bMultiplayer"
// MNetworkVarNames "bool m_bAutogenerated"
// MNetworkVarNames "float32 m_flForceClientTime"
// MNetworkVarNames "CHandle< CBaseFlex > m_hActorList"
// MNetworkVarNames "uint16 m_nSceneStringIndex"
class CSceneEntity : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_iszSceneFile; // 0x4b0	
	CUtlSymbolLarge m_iszResumeSceneFile; // 0x4b8	
	CUtlSymbolLarge m_iszTarget1; // 0x4c0	
	CUtlSymbolLarge m_iszTarget2; // 0x4c8	
	CUtlSymbolLarge m_iszTarget3; // 0x4d0	
	CUtlSymbolLarge m_iszTarget4; // 0x4d8	
	CUtlSymbolLarge m_iszTarget5; // 0x4e0	
	CUtlSymbolLarge m_iszTarget6; // 0x4e8	
	CUtlSymbolLarge m_iszTarget7; // 0x4f0	
	CUtlSymbolLarge m_iszTarget8; // 0x4f8	
	CHandle< CBaseEntity > m_hTarget1; // 0x500	
	CHandle< CBaseEntity > m_hTarget2; // 0x504	
	CHandle< CBaseEntity > m_hTarget3; // 0x508	
	CHandle< CBaseEntity > m_hTarget4; // 0x50c	
	CHandle< CBaseEntity > m_hTarget5; // 0x510	
	CHandle< CBaseEntity > m_hTarget6; // 0x514	
	CHandle< CBaseEntity > m_hTarget7; // 0x518	
	CHandle< CBaseEntity > m_hTarget8; // 0x51c	
	// MNetworkEnable
	bool m_bIsPlayingBack; // 0x520	
	// MNetworkEnable
	bool m_bPaused; // 0x521	
	// MNetworkEnable
	bool m_bMultiplayer; // 0x522	
	// MNetworkEnable
	bool m_bAutogenerated; // 0x523	
	// MNetworkEnable
	float m_flForceClientTime; // 0x524	
	float m_flCurrentTime; // 0x528	
	float m_flFrameTime; // 0x52c	
	bool m_bCancelAtNextInterrupt; // 0x530	
private:
	[[maybe_unused]] uint8_t __pad0531[0x3]; // 0x531
public:
	float m_fPitch; // 0x534	
	bool m_bAutomated; // 0x538	
private:
	[[maybe_unused]] uint8_t __pad0539[0x3]; // 0x539
public:
	int32_t m_nAutomatedAction; // 0x53c	
	float m_flAutomationDelay; // 0x540	
	float m_flAutomationTime; // 0x544	
	CHandle< CBaseEntity > m_hWaitingForThisResumeScene; // 0x548	
	bool m_bWaitingForResumeScene; // 0x54c	
	bool m_bPausedViaInput; // 0x54d	
	bool m_bPauseAtNextInterrupt; // 0x54e	
	bool m_bWaitingForActor; // 0x54f	
	bool m_bWaitingForInterrupt; // 0x550	
	bool m_bInterruptedActorsScenes; // 0x551	
	bool m_bBreakOnNonIdle; // 0x552	
private:
	[[maybe_unused]] uint8_t __pad0553[0x5]; // 0x553
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseFlex > > m_hActorList; // 0x558	
	CUtlVector< CHandle< CBaseEntity > > m_hRemoveActorList; // 0x570	
private:
	[[maybe_unused]] uint8_t __pad0588[0x10]; // 0x588
public:
	int32_t m_nSceneFlushCounter; // 0x598	
	// MNetworkEnable
	uint16_t m_nSceneStringIndex; // 0x59c	
private:
	[[maybe_unused]] uint8_t __pad059e[0x2]; // 0x59e
public:
	CEntityIOOutput m_OnStart; // 0x5a0	
	CEntityIOOutput m_OnCompletion; // 0x5c8	
	CEntityIOOutput m_OnCanceled; // 0x5f0	
	CEntityIOOutput m_OnPaused; // 0x618	
	CEntityIOOutput m_OnResumed; // 0x640	
	CEntityIOOutput m_OnTrigger[16]; // 0x668	
private:
	[[maybe_unused]] uint8_t __pad08e8[0x90]; // 0x8e8
public:
	CHandle< CSceneEntity > m_hInterruptScene; // 0x978	
	int32_t m_nInterruptCount; // 0x97c	
	bool m_bSceneMissing; // 0x980	
	bool m_bInterrupted; // 0x981	
	bool m_bCompletedEarly; // 0x982	
	bool m_bInterruptSceneFinished; // 0x983	
	bool m_bRestoring; // 0x984	
private:
	[[maybe_unused]] uint8_t __pad0985[0x3]; // 0x985
public:
	CUtlVector< CHandle< CSceneEntity > > m_hNotifySceneCompletion; // 0x988	
	CUtlVector< CHandle< CSceneListManager > > m_hListManagers; // 0x9a0	
private:
	[[maybe_unused]] uint8_t __pad09b8[0x18]; // 0x9b8
public:
	CUtlSymbolLarge m_iszSoundName; // 0x9d0	
	CHandle< CBaseFlex > m_hActor; // 0x9d8	
	CHandle< CBaseEntity > m_hActivator; // 0x9dc	
	int32_t m_BusyActor; // 0x9e0	
	SceneOnPlayerDeath_t m_iPlayerDeathBehavior; // 0x9e4	
	
	// Static fields:
	static int32_t &Get_s_nSceneFlushCounter(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CSceneEntity")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x7b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CScriptedSequence : public CBaseEntity
{
public:
	CUtlSymbolLarge m_iszEntry; // 0x4a8	
	CUtlSymbolLarge m_iszPreIdle; // 0x4b0	
	CUtlSymbolLarge m_iszPlay; // 0x4b8	
	CUtlSymbolLarge m_iszPostIdle; // 0x4c0	
	CUtlSymbolLarge m_iszModifierToAddOnPlay; // 0x4c8	
	CUtlSymbolLarge m_iszNextScript; // 0x4d0	
	CUtlSymbolLarge m_iszEntity; // 0x4d8	
	CUtlSymbolLarge m_iszSyncGroup; // 0x4e0	
	ScriptedMoveTo_t m_nMoveTo; // 0x4e8	
	bool m_bIsPlayingPreIdle; // 0x4ec	
	bool m_bIsPlayingEntry; // 0x4ed	
	bool m_bIsPlayingAction; // 0x4ee	
	bool m_bIsPlayingPostIdle; // 0x4ef	
	bool m_bLoopPreIdleSequence; // 0x4f0	
	bool m_bLoopActionSequence; // 0x4f1	
	bool m_bLoopPostIdleSequence; // 0x4f2	
	bool m_bSynchPostIdles; // 0x4f3	
	bool m_bIgnoreGravity; // 0x4f4	
	bool m_bDisableNPCCollisions; // 0x4f5	
	bool m_bKeepAnimgraphLockedPost; // 0x4f6	
	bool m_bDontAddModifiers; // 0x4f7	
	float m_flRadius; // 0x4f8	
	float m_flRepeat; // 0x4fc	
	float m_flPlayAnimFadeInTime; // 0x500	
	float m_flMoveInterpTime; // 0x504	
	float m_flAngRate; // 0x508	
	int32_t m_iDelay; // 0x50c	
	GameTime_t m_startTime; // 0x510	
	bool m_bWaitForBeginSequence; // 0x514	
private:
	[[maybe_unused]] uint8_t __pad0515[0x3]; // 0x515
public:
	int32_t m_saved_effects; // 0x518	
	int32_t m_savedFlags; // 0x51c	
	int32_t m_savedCollisionGroup; // 0x520	
	bool m_interruptable; // 0x524	
	bool m_sequenceStarted; // 0x525	
	bool m_bPrevAnimatedEveryTick; // 0x526	
	bool m_bForcedAnimatedEveryTick; // 0x527	
	bool m_bPositionRelativeToOtherEntity; // 0x528	
private:
	[[maybe_unused]] uint8_t __pad0529[0x3]; // 0x529
public:
	CHandle< CBaseEntity > m_hTargetEnt; // 0x52c	
	CHandle< CScriptedSequence > m_hNextCine; // 0x530	
	bool m_bThinking; // 0x534	
	bool m_bInitiatedSelfDelete; // 0x535	
	bool m_bIsTeleportingDueToMoveTo; // 0x536	
	bool m_bAllowCustomInterruptConditions; // 0x537	
	CHandle< CBaseEntity > m_hLastFoundEntity; // 0x538	
	CHandle< CBaseAnimGraph > m_hForcedTarget; // 0x53c	
	bool m_bDontCancelOtherSequences; // 0x540	
	bool m_bForceSynch; // 0x541	
	bool m_bTargetWasAsleep; // 0x542	
	bool m_bPreventUpdateYawOnFinish; // 0x543	
	bool m_bEnsureOnNavmeshOnFinish; // 0x544	
private:
	[[maybe_unused]] uint8_t __pad0545[0x3]; // 0x545
public:
	ScriptedOnDeath_t m_onDeathBehavior; // 0x548	
	ScriptedConflictResponse_t m_ConflictResponse; // 0x54c	
	CEntityIOOutput m_OnBeginSequence; // 0x550	
	CEntityIOOutput m_OnActionStartOrLoop; // 0x578	
	CEntityIOOutput m_OnEndSequence; // 0x5a0	
	CEntityIOOutput m_OnPostIdleEndSequence; // 0x5c8	
	CEntityIOOutput m_OnCancelSequence; // 0x5f0	
	CEntityIOOutput m_OnCancelFailedSequence; // 0x618	
	CEntityIOOutput m_OnScriptEvent[8]; // 0x640	
	CTransform m_matOtherToMain; // 0x780	
	CHandle< CBaseEntity > m_hInteractionMainEntity; // 0x7a0	
	int32_t m_iPlayerDeathBehavior; // 0x7a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundOpvarSetEntity : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_iszStackName; // 0x4b0	
	CUtlSymbolLarge m_iszOperatorName; // 0x4b8	
	CUtlSymbolLarge m_iszOpvarName; // 0x4c0	
	int32_t m_nOpvarType; // 0x4c8	
	int32_t m_nOpvarIndex; // 0x4cc	
	float m_flOpvarValue; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_OpvarValueString; // 0x4d8	
	bool m_bSetOnSpawn; // 0x4e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CAISound : public CPointEntity
{
public:
	int32_t m_iSoundType; // 0x4a8	
	int32_t m_iSoundContext; // 0x4ac	
	int32_t m_iVolume; // 0x4b0	
	int32_t m_iSoundIndex; // 0x4b4	
	float m_flDuration; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_iszProxyEntityName; // 0x4c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundStackSave : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszStackName; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundEventEntity : public CBaseEntity
{
public:
	bool m_bStartOnSpawn; // 0x4a8	
	bool m_bToLocalPlayer; // 0x4a9	
	bool m_bStopOnNew; // 0x4aa	
	bool m_bSaveRestore; // 0x4ab	
	bool m_bSavedIsPlaying; // 0x4ac	
private:
	[[maybe_unused]] uint8_t __pad04ad[0x3]; // 0x4ad
public:
	float m_flSavedElapsedTime; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b4[0x4]; // 0x4b4
public:
	CUtlSymbolLarge m_iszSourceEntityName; // 0x4b8	
	CUtlSymbolLarge m_iszAttachmentName; // 0x4c0	
	CEntityOutputTemplate< uint64 > m_onGUIDChanged; // 0x4c8	
	CEntityIOOutput m_onSoundFinished; // 0x4f0	
private:
	[[maybe_unused]] uint8_t __pad0518[0x20]; // 0x518
public:
	CUtlSymbolLarge m_iszSoundName; // 0x538	
private:
	[[maybe_unused]] uint8_t __pad0540[0x8]; // 0x540
public:
	CEntityHandle m_hSource; // 0x548	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundEventEntityAlias_snd_event_point : public CSoundEventEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundEventAABBEntity : public CSoundEventEntity
{
public:
	Vector m_vMins; // 0x550	
	Vector m_vMaxs; // 0x55c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundEventOBBEntity : public CSoundEventEntity
{
public:
	Vector m_vMins; // 0x550	
	Vector m_vMaxs; // 0x55c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundEventPathCornerEntity : public CSoundEventEntity
{
public:
	CUtlSymbolLarge m_iszPathCorner; // 0x550	
	int32_t m_iCountMax; // 0x558	
	float m_flDistanceMax; // 0x55c	
	float m_flDistMaxSqr; // 0x560	
	float m_flDotProductMax; // 0x564	
	bool bPlaying; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundEventParameter : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_iszParamName; // 0x4b0	
	float m_flFloatValue; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvSoundscapeProxyAlias_snd_soundscape_proxy : public CEnvSoundscapeProxy
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvSoundscapeAlias_snd_soundscape : public CEnvSoundscape
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable : public CEnvSoundscapeTriggerable
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CNullEntity : public CBaseEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBaseDMStart : public CPointEntity
{
public:
	CUtlSymbolLarge m_Master; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoLandmark : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPlatTrigger : public CBaseModelEntity
{
public:
	CHandle< CFuncPlat > m_pPlatform; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncTrainControls : public CBaseModelEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerVolume : public CBaseModelEntity
{
public:
	CUtlSymbolLarge m_iFilterName; // 0x758	
	CHandle< CBaseFilter > m_hFilter; // 0x760	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoTeleportDestination : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CAI_ChangeTarget : public CBaseEntity
{
public:
	CUtlSymbolLarge m_iszNewTarget; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CAI_ChangeHintGroup : public CBaseEntity
{
public:
	int32_t m_iSearchType; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_strSearchName; // 0x4b0	
	CUtlSymbolLarge m_strNewHintGroup; // 0x4b8	
	float m_flRadius; // 0x4c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLogicProximity : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoSpawnGroupLandmark : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoSpawnGroupLoadUnload : public CLogicalEntity
{
public:
	CEntityIOOutput m_OnSpawnGroupLoadStarted; // 0x4a8	
	CEntityIOOutput m_OnSpawnGroupLoadFinished; // 0x4d0	
	CEntityIOOutput m_OnSpawnGroupUnloadStarted; // 0x4f8	
	CEntityIOOutput m_OnSpawnGroupUnloadFinished; // 0x520	
	CUtlSymbolLarge m_iszSpawnGroupName; // 0x548	
	CUtlSymbolLarge m_iszSpawnGroupFilterName; // 0x550	
	CUtlSymbolLarge m_iszLandmarkName; // 0x558	
	CUtlString m_sFixedSpawnGroupName; // 0x560	
	float m_flTimeoutInterval; // 0x568	
	bool m_bStreamingStarted; // 0x56c	
	bool m_bUnloadingStarted; // 0x56d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoSpawnGroupLoadUnloadAlias_info_spawngroup_load : public CInfoSpawnGroupLoadUnload
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoSpawnGroupLoadUnloadAlias_info_spawngroup_unload : public CInfoSpawnGroupLoadUnload
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncNavObstruction : public CBaseModelEntity
{
private:
	[[maybe_unused]] uint8_t __pad0758[0x8]; // 0x758
public:
	bool m_bDisabled; // 0x760	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CAmbientGeneric : public CPointEntity
{
public:
	float m_radius; // 0x4a8	
	float m_flMaxRadius; // 0x4ac	
	soundlevel_t m_iSoundLevel; // 0x4b0	
	dynpitchvol_t m_dpv; // 0x4b4	
	bool m_fActive; // 0x518	
	bool m_fLooping; // 0x519	
private:
	[[maybe_unused]] uint8_t __pad051a[0x6]; // 0x51a
public:
	CUtlSymbolLarge m_iszSound; // 0x520	
	CUtlSymbolLarge m_sSourceEntName; // 0x528	
	CHandle< CBaseEntity > m_hSoundSource; // 0x530	
	CEntityIndex m_nSoundSourceEntIndex; // 0x534	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x10
// Has Trivial Destructor
struct RelationshipOverride_t : public Relationship_t
{
public:
	CHandle< CBaseEntity > entity; // 0x8	
	Class_T classType; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBaseToggle : public CBaseModelEntity
{
public:
	TOGGLE_STATE m_toggle_state; // 0x758	
	float m_flMoveDistance; // 0x75c	
	float m_flWait; // 0x760	
	float m_flLip; // 0x764	
	bool m_bAlwaysFireBlockedOutputs; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x3]; // 0x769
public:
	Vector m_vecPosition1; // 0x76c	
	Vector m_vecPosition2; // 0x778	
	QAngle m_vecMoveAng; // 0x784	
	QAngle m_vecAngle1; // 0x790	
	QAngle m_vecAngle2; // 0x79c	
	float m_flHeight; // 0x7a8	
	CHandle< CBaseEntity > m_hActivator; // 0x7ac	
	Vector m_vecFinalDest; // 0x7b0	
	QAngle m_vecFinalAngle; // 0x7bc	
	int32_t m_movementType; // 0x7c8	
private:
	[[maybe_unused]] uint8_t __pad07cc[0x4]; // 0x7cc
public:
	CUtlSymbolLarge m_sMaster; // 0x7d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CRagdollMagnet : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_radius; // 0x4ac	
	float m_force; // 0x4b0	
	Vector m_axis; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEntityBlocker : public CBaseModelEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x788
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float32 m_flFadeInStart"
// MNetworkVarNames "float32 m_flFadeInLength"
// MNetworkVarNames "float32 m_flFadeOutModelStart"
// MNetworkVarNames "float32 m_flFadeOutModelLength"
// MNetworkVarNames "float32 m_flFadeOutStart"
// MNetworkVarNames "float32 m_flFadeOutLength"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "EntityDisolveType_t m_nDissolveType"
// MNetworkVarNames "Vector m_vDissolverOrigin"
// MNetworkVarNames "uint32 m_nMagnitude"
class CEntityDissolve : public CBaseModelEntity
{
public:
	// MNetworkEnable
	float m_flFadeInStart; // 0x758	
	// MNetworkEnable
	float m_flFadeInLength; // 0x75c	
	// MNetworkEnable
	float m_flFadeOutModelStart; // 0x760	
	// MNetworkEnable
	float m_flFadeOutModelLength; // 0x764	
	// MNetworkEnable
	float m_flFadeOutStart; // 0x768	
	// MNetworkEnable
	float m_flFadeOutLength; // 0x76c	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x770	
	// MNetworkEnable
	EntityDisolveType_t m_nDissolveType; // 0x774	
	// MNetworkEnable
	Vector m_vDissolverOrigin; // 0x778	
	// MNetworkEnable
	uint32_t m_nMagnitude; // 0x784	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hTargetEntity"
// MNetworkVarNames "bool m_bState"
// MNetworkVarNames "bool m_bAlwaysUpdate"
// MNetworkVarNames "float32 m_flLightFOV"
// MNetworkVarNames "bool m_bEnableShadows"
// MNetworkVarNames "bool m_bSimpleProjection"
// MNetworkVarNames "bool m_bLightOnlyTarget"
// MNetworkVarNames "bool m_bLightWorld"
// MNetworkVarNames "bool m_bCameraSpace"
// MNetworkVarNames "float32 m_flBrightnessScale"
// MNetworkVarNames "Color m_LightColor"
// MNetworkVarNames "float32 m_flIntensity"
// MNetworkVarNames "float32 m_flLinearAttenuation"
// MNetworkVarNames "float32 m_flQuadraticAttenuation"
// MNetworkVarNames "bool m_bVolumetric"
// MNetworkVarNames "float32 m_flNoiseStrength"
// MNetworkVarNames "float32 m_flFlashlightTime"
// MNetworkVarNames "uint32 m_nNumPlanes"
// MNetworkVarNames "float32 m_flPlaneOffset"
// MNetworkVarNames "float32 m_flVolumetricIntensity"
// MNetworkVarNames "float32 m_flColorTransitionTime"
// MNetworkVarNames "float32 m_flAmbient"
// MNetworkVarNames "char m_SpotlightTextureName"
// MNetworkVarNames "int32 m_nSpotlightTextureFrame"
// MNetworkVarNames "uint32 m_nShadowQuality"
// MNetworkVarNames "float32 m_flNearZ"
// MNetworkVarNames "float32 m_flFarZ"
// MNetworkVarNames "float32 m_flProjectionSize"
// MNetworkVarNames "float32 m_flRotation"
// MNetworkVarNames "bool m_bFlipHorizontal"
class CEnvProjectedTexture : public CModelPointEntity
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTargetEntity; // 0x758	
	// MNetworkEnable
	bool m_bState; // 0x75c	
	// MNetworkEnable
	bool m_bAlwaysUpdate; // 0x75d	
private:
	[[maybe_unused]] uint8_t __pad075e[0x2]; // 0x75e
public:
	// MNetworkEnable
	float m_flLightFOV; // 0x760	
	// MNetworkEnable
	bool m_bEnableShadows; // 0x764	
	// MNetworkEnable
	bool m_bSimpleProjection; // 0x765	
	// MNetworkEnable
	bool m_bLightOnlyTarget; // 0x766	
	// MNetworkEnable
	bool m_bLightWorld; // 0x767	
	// MNetworkEnable
	bool m_bCameraSpace; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x3]; // 0x769
public:
	// MNetworkEnable
	float m_flBrightnessScale; // 0x76c	
	// MNetworkEnable
	Color m_LightColor; // 0x770	
	// MNetworkEnable
	float m_flIntensity; // 0x774	
	// MNetworkEnable
	float m_flLinearAttenuation; // 0x778	
	// MNetworkEnable
	float m_flQuadraticAttenuation; // 0x77c	
	// MNetworkEnable
	bool m_bVolumetric; // 0x780	
private:
	[[maybe_unused]] uint8_t __pad0781[0x3]; // 0x781
public:
	// MNetworkEnable
	float m_flNoiseStrength; // 0x784	
	// MNetworkEnable
	float m_flFlashlightTime; // 0x788	
	// MNetworkEnable
	uint32_t m_nNumPlanes; // 0x78c	
	// MNetworkEnable
	float m_flPlaneOffset; // 0x790	
	// MNetworkEnable
	float m_flVolumetricIntensity; // 0x794	
	// MNetworkEnable
	float m_flColorTransitionTime; // 0x798	
	// MNetworkEnable
	float m_flAmbient; // 0x79c	
	// MNetworkEnable
	char m_SpotlightTextureName[512]; // 0x7a0	
	// MNetworkEnable
	int32_t m_nSpotlightTextureFrame; // 0x9a0	
	// MNetworkEnable
	uint32_t m_nShadowQuality; // 0x9a4	
	// MNetworkEnable
	// MNetworkBitCount "16"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "500.000000"
	// MNetworkEncodeFlags "1"
	float m_flNearZ; // 0x9a8	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1500.000000"
	// MNetworkEncodeFlags "1"
	float m_flFarZ; // 0x9ac	
	// MNetworkEnable
	float m_flProjectionSize; // 0x9b0	
	// MNetworkEnable
	float m_flRotation; // 0x9b4	
	// MNetworkEnable
	bool m_bFlipHorizontal; // 0x9b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "HMaterialStrong m_hDecalMaterial"
// MNetworkVarNames "float m_flWidth"
// MNetworkVarNames "float m_flHeight"
// MNetworkVarNames "float m_flDepth"
// MNetworkVarNames "uint32 m_nRenderOrder"
// MNetworkVarNames "bool m_bProjectOnWorld"
// MNetworkVarNames "bool m_bProjectOnCharacters"
// MNetworkVarNames "bool m_bProjectOnWater"
// MNetworkVarNames "float m_flDepthSortBias"
class CEnvDecal : public CBaseModelEntity
{
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hDecalMaterial; // 0x758	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDecalDimensionsChanged"
	float m_flWidth; // 0x760	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDecalDimensionsChanged"
	float m_flHeight; // 0x764	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDecalDimensionsChanged"
	float m_flDepth; // 0x768	
	// MNetworkEnable
	uint32_t m_nRenderOrder; // 0x76c	
	// MNetworkEnable
	bool m_bProjectOnWorld; // 0x770	
	// MNetworkEnable
	bool m_bProjectOnCharacters; // 0x771	
	// MNetworkEnable
	bool m_bProjectOnWater; // 0x772	
private:
	[[maybe_unused]] uint8_t __pad0773[0x1]; // 0x773
public:
	// MNetworkEnable
	float m_flDepthSortBias; // 0x774	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMessage : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszMessage; // 0x4a8	
	float m_MessageVolume; // 0x4b0	
	int32_t m_MessageAttenuation; // 0x4b4	
	float m_Radius; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_sNoise; // 0x4c0	
	CEntityIOOutput m_OnShowMessage; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x668
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvMicrophone : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	CHandle< CBaseEntity > m_hMeasureTarget; // 0x4ac	
	int32_t m_nSoundMask; // 0x4b0	
	float m_flSensitivity; // 0x4b4	
	float m_flSmoothFactor; // 0x4b8	
	float m_flMaxRange; // 0x4bc	
	CUtlSymbolLarge m_iszSpeakerName; // 0x4c0	
	CHandle< CBaseEntity > m_hSpeaker; // 0x4c8	
	bool m_bAvoidFeedback; // 0x4cc	
private:
	[[maybe_unused]] uint8_t __pad04cd[0x3]; // 0x4cd
public:
	int32_t m_iSpeakerDSPPreset; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_iszListenFilter; // 0x4d8	
	CHandle< CBaseFilter > m_hListenFilter; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e4[0x4]; // 0x4e4
public:
	CEntityOutputTemplate< float32 > m_SoundLevel; // 0x4e8	
	CEntityIOOutput m_OnRoutedSound; // 0x510	
	CEntityIOOutput m_OnHeardSound; // 0x538	
	char m_szLastSound[256]; // 0x560	
	int32_t m_iLastRoutedFrame; // 0x660	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBreakable : public CBaseModelEntity
{
private:
	[[maybe_unused]] uint8_t __pad0758[0x10]; // 0x758
public:
	Materials m_Material; // 0x768	
	CHandle< CBaseEntity > m_hBreaker; // 0x76c	
	Explosions m_Explosion; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0774[0x4]; // 0x774
public:
	CUtlSymbolLarge m_iszSpawnObject; // 0x778	
	float m_flPressureDelay; // 0x780	
	int32_t m_iMinHealthDmg; // 0x784	
	CUtlSymbolLarge m_iszPropData; // 0x788	
	float m_impactEnergyScale; // 0x790	
	EOverrideBlockLOS_t m_nOverrideBlockLOS; // 0x794	
	CEntityIOOutput m_OnBreak; // 0x798	
	CEntityOutputTemplate< float32 > m_OnHealthChanged; // 0x7c0	
	float m_flDmgModBullet; // 0x7e8	
	float m_flDmgModClub; // 0x7ec	
	float m_flDmgModExplosive; // 0x7f0	
	float m_flDmgModFire; // 0x7f4	
	CUtlSymbolLarge m_iszPhysicsDamageTableName; // 0x7f8	
	CUtlSymbolLarge m_iszBasePropData; // 0x800	
	int32_t m_iInteractions; // 0x808	
	PerformanceMode_t m_PerformanceMode; // 0x80c	
	CHandle< CBasePlayerPawn > m_hPhysicsAttacker; // 0x810	
	GameTime_t m_flLastPhysicsInfluenceTime; // 0x814	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_fFlags"
// MNetworkIncludeByName "m_vecVelocity"
// MNetworkOverride "m_fFlags CBaseEntity"
class CFuncMoveLinear : public CBaseToggle
{
public:
	MoveLinearAuthoredPos_t m_authoredPosition; // 0x7d8	
	QAngle m_angMoveEntitySpace; // 0x7dc	
	Vector m_vecMoveDirParentSpace; // 0x7e8	
private:
	[[maybe_unused]] uint8_t __pad07f4[0x4]; // 0x7f4
public:
	CUtlSymbolLarge m_soundStart; // 0x7f8	
	CUtlSymbolLarge m_soundStop; // 0x800	
	CUtlSymbolLarge m_currentSound; // 0x808	
	float m_flBlockDamage; // 0x810	
	float m_flStartPosition; // 0x814	
	float m_flMoveDistance; // 0x818	
private:
	[[maybe_unused]] uint8_t __pad081c[0xc]; // 0x81c
public:
	CEntityIOOutput m_OnFullyOpen; // 0x828	
	CEntityIOOutput m_OnFullyClosed; // 0x850	
	bool m_bCreateMovableNavMesh; // 0x878	
	bool m_bCreateNavObstacle; // 0x879	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkOverride "m_angRotation CGameSceneNode"
// MNetworkOverride "m_flSimulationTime CBaseEntity"
class CFuncRotating : public CBaseModelEntity
{
public:
	QAngle m_vecMoveAng; // 0x758	
	float m_flFanFriction; // 0x764	
	float m_flAttenuation; // 0x768	
	float m_flVolume; // 0x76c	
	float m_flTargetSpeed; // 0x770	
	float m_flMaxSpeed; // 0x774	
	float m_flBlockDamage; // 0x778	
	float m_flTimeScale; // 0x77c	
	CUtlSymbolLarge m_NoiseRunning; // 0x780	
	bool m_bReversed; // 0x788	
private:
	[[maybe_unused]] uint8_t __pad0789[0xb]; // 0x789
public:
	QAngle m_angStart; // 0x794	
	bool m_bStopAtStartPos; // 0x7a0	
private:
	[[maybe_unused]] uint8_t __pad07a1[0x3]; // 0x7a1
public:
	Vector m_vecClientOrigin; // 0x7a4	
	QAngle m_vecClientAngles; // 0x7b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CItemGenericTriggerHelper : public CBaseModelEntity
{
public:
	CHandle< CItemGeneric > m_hParentItem; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMarkupVolume : public CBaseModelEntity
{
public:
	bool m_bEnabled; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x798
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMarkupVolumeTagged : public CMarkupVolume
{
private:
	[[maybe_unused]] uint8_t __pad0760[0x30]; // 0x760
public:
	bool m_bIsGroup; // 0x790	
	bool m_bGroupByPrefab; // 0x791	
	bool m_bGroupByVolume; // 0x792	
	bool m_bGroupOtherGroups; // 0x793	
	bool m_bIsInGroup; // 0x794	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMarkupVolumeWithRef : public CMarkupVolumeTagged
{
public:
	bool m_bUseRef; // 0x798	
private:
	[[maybe_unused]] uint8_t __pad0799[0x3]; // 0x799
public:
	Vector m_vRefPos; // 0x79c	
	float m_flRefDot; // 0x7a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncBrush : public CBaseModelEntity
{
public:
	BrushSolidities_e m_iSolidity; // 0x758	
	int32_t m_iDisabled; // 0x75c	
	bool m_bSolidBsp; // 0x760	
private:
	[[maybe_unused]] uint8_t __pad0761[0x7]; // 0x761
public:
	CUtlSymbolLarge m_iszExcludedClass; // 0x768	
	bool m_bInvertExclusion; // 0x770	
	bool m_bScriptedMovement; // 0x771	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysBox : public CBreakable
{
public:
	int32_t m_damageType; // 0x818	
	float m_massScale; // 0x81c	
	int32_t m_damageToEnableMotion; // 0x820	
	float m_flForceToEnableMotion; // 0x824	
	QAngle m_angPreferredCarryAngles; // 0x828	
	bool m_bNotSolidToWorld; // 0x834	
	bool m_bEnableUseOutput; // 0x835	
private:
	[[maybe_unused]] uint8_t __pad0836[0x2]; // 0x836
public:
	int32_t m_iExploitableByPlayer; // 0x838	
	float m_flTouchOutputPerEntityDelay; // 0x83c	
	CEntityIOOutput m_OnDamaged; // 0x840	
	CEntityIOOutput m_OnAwakened; // 0x868	
	CEntityIOOutput m_OnMotionEnabled; // 0x890	
	CEntityIOOutput m_OnPlayerUse; // 0x8b8	
	CEntityIOOutput m_OnStartTouch; // 0x8e0	
	CHandle< CBasePlayerPawn > m_hCarryingPlayer; // 0x908	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysExplosion : public CPointEntity
{
public:
	bool m_bExplodeOnSpawn; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flMagnitude; // 0x4ac	
	float m_flDamage; // 0x4b0	
	float m_radius; // 0x4b4	
	CUtlSymbolLarge m_targetEntityName; // 0x4b8	
	float m_flInnerRadius; // 0x4c0	
	float m_flPushScale; // 0x4c4	
	bool m_bConvertToDebrisWhenPossible; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x7]; // 0x4c9
public:
	CEntityIOOutput m_OnPushedPlayer; // 0x4d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysImpact : public CPointEntity
{
public:
	float m_damage; // 0x4a8	
	float m_distance; // 0x4ac	
	CUtlSymbolLarge m_directionEntityName; // 0x4b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkIncludeByName "CGameSceneNode::m_hierarchyAttachName"
// MNetworkIncludeByName "m_nMinCPULevel"
// MNetworkIncludeByName "m_nMaxCPULevel"
// MNetworkIncludeByName "m_nMinGPULevel"
// MNetworkIncludeByName "m_nMaxGPULevel"
// MNetworkVarNames "uint16 m_RopeFlags"
// MNetworkVarNames "int16 m_Slack"
// MNetworkVarNames "float32 m_Width"
// MNetworkVarNames "float32 m_TextureScale"
// MNetworkVarNames "uint8 m_nSegments"
// MNetworkVarNames "bool m_bConstrainBetweenEndpoints"
// MNetworkVarNames "HMaterialStrong m_iRopeMaterialModelIndex"
// MNetworkVarNames "uint8 m_Subdiv"
// MNetworkVarNames "uint8 m_nChangeCount"
// MNetworkVarNames "int16 m_RopeLength"
// MNetworkVarNames "uint8 m_fLockedPoints"
// MNetworkVarNames "float32 m_flScrollSpeed"
// MNetworkVarNames "CHandle< CBaseEntity> m_hStartPoint"
// MNetworkVarNames "CHandle< CBaseEntity> m_hEndPoint"
// MNetworkVarNames "AttachmentHandle_t m_iStartAttachment"
// MNetworkVarNames "AttachmentHandle_t m_iEndAttachment"
class CRopeKeyframe : public CBaseModelEntity
{
private:
	[[maybe_unused]] uint8_t __pad0758[0x8]; // 0x758
public:
	// MNetworkEnable
	uint16_t m_RopeFlags; // 0x760	
private:
	[[maybe_unused]] uint8_t __pad0762[0x6]; // 0x762
public:
	CUtlSymbolLarge m_iNextLinkName; // 0x768	
	// MNetworkEnable
	int16_t m_Slack; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0772[0x2]; // 0x772
public:
	// MNetworkEnable
	float m_Width; // 0x774	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0.100000"
	// MNetworkMaxValue "10.000000"
	float m_TextureScale; // 0x778	
	// MNetworkEnable
	uint8_t m_nSegments; // 0x77c	
	// MNetworkEnable
	bool m_bConstrainBetweenEndpoints; // 0x77d	
private:
	[[maybe_unused]] uint8_t __pad077e[0x2]; // 0x77e
public:
	CUtlSymbolLarge m_strRopeMaterialModel; // 0x780	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_iRopeMaterialModelIndex; // 0x788	
	// MNetworkEnable
	uint8_t m_Subdiv; // 0x790	
	// MNetworkEnable
	uint8_t m_nChangeCount; // 0x791	
	// MNetworkEnable
	int16_t m_RopeLength; // 0x792	
	// MNetworkEnable
	uint8_t m_fLockedPoints; // 0x794	
	bool m_bCreatedFromMapFile; // 0x795	
private:
	[[maybe_unused]] uint8_t __pad0796[0x2]; // 0x796
public:
	// MNetworkEnable
	float m_flScrollSpeed; // 0x798	
	bool m_bStartPointValid; // 0x79c	
	bool m_bEndPointValid; // 0x79d	
private:
	[[maybe_unused]] uint8_t __pad079e[0x2]; // 0x79e
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hStartPoint; // 0x7a0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEndPoint; // 0x7a4	
	// MNetworkEnable
	AttachmentHandle_t m_iStartAttachment; // 0x7a8	
	// MNetworkEnable
	AttachmentHandle_t m_iEndAttachment; // 0x7a9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1eb8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSoundEnt : public CPointEntity
{
public:
	int32_t m_iFreeSound; // 0x4a8	
	int32_t m_iActiveSound; // 0x4ac	
	int32_t m_cLastActiveSounds; // 0x4b0	
	CSound m_SoundPool[128]; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float32 m_flLightScale"
// MNetworkVarNames "float32 m_Radius"
class CSpotlightEnd : public CBaseModelEntity
{
public:
	// MNetworkEnable
	float m_flLightScale; // 0x758	
	// MNetworkEnable
	float m_Radius; // 0x75c	
	Vector m_vSpotlightDir; // 0x760	
	Vector m_vSpotlightOrg; // 0x76c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncTrackTrain : public CBaseModelEntity
{
public:
	CHandle< CPathTrack > m_ppath; // 0x758	
	float m_length; // 0x75c	
	Vector m_vPosPrev; // 0x760	
	QAngle m_angPrev; // 0x76c	
	Vector m_controlMins; // 0x778	
	Vector m_controlMaxs; // 0x784	
	Vector m_lastBlockPos; // 0x790	
	int32_t m_lastBlockTick; // 0x79c	
	float m_flVolume; // 0x7a0	
	float m_flBank; // 0x7a4	
	float m_oldSpeed; // 0x7a8	
	float m_flBlockDamage; // 0x7ac	
	float m_height; // 0x7b0	
	float m_maxSpeed; // 0x7b4	
	float m_dir; // 0x7b8	
private:
	[[maybe_unused]] uint8_t __pad07bc[0x4]; // 0x7bc
public:
	CUtlSymbolLarge m_iszSoundMove; // 0x7c0	
	CUtlSymbolLarge m_iszSoundMovePing; // 0x7c8	
	CUtlSymbolLarge m_iszSoundStart; // 0x7d0	
	CUtlSymbolLarge m_iszSoundStop; // 0x7d8	
	CUtlSymbolLarge m_strPathTarget; // 0x7e0	
	float m_flMoveSoundMinDuration; // 0x7e8	
	float m_flMoveSoundMaxDuration; // 0x7ec	
	GameTime_t m_flNextMoveSoundTime; // 0x7f0	
	float m_flMoveSoundMinPitch; // 0x7f4	
	float m_flMoveSoundMaxPitch; // 0x7f8	
	TrainOrientationType_t m_eOrientationType; // 0x7fc	
	TrainVelocityType_t m_eVelocityType; // 0x800	
private:
	[[maybe_unused]] uint8_t __pad0804[0xc]; // 0x804
public:
	CEntityIOOutput m_OnStart; // 0x810	
	CEntityIOOutput m_OnNext; // 0x838	
	CEntityIOOutput m_OnArrivedAtDestinationNode; // 0x860	
	bool m_bManualSpeedChanges; // 0x888	
private:
	[[maybe_unused]] uint8_t __pad0889[0x3]; // 0x889
public:
	float m_flDesiredSpeed; // 0x88c	
	GameTime_t m_flSpeedChangeTime; // 0x890	
	float m_flAccelSpeed; // 0x894	
	float m_flDecelSpeed; // 0x898	
	bool m_bAccelToSpeed; // 0x89c	
private:
	[[maybe_unused]] uint8_t __pad089d[0x3]; // 0x89d
public:
	float m_flTimeScale; // 0x8a0	
	GameTime_t m_flNextMPSoundTime; // 0x8a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x900
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_spawnflags"
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "bool m_bClientSidePredicted"
class CBaseTrigger : public CBaseToggle
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x7d8	
private:
	[[maybe_unused]] uint8_t __pad07d9[0x7]; // 0x7d9
public:
	CUtlSymbolLarge m_iFilterName; // 0x7e0	
	CHandle< CBaseFilter > m_hFilter; // 0x7e8	
private:
	[[maybe_unused]] uint8_t __pad07ec[0x4]; // 0x7ec
public:
	CEntityIOOutput m_OnStartTouch; // 0x7f0	
	CEntityIOOutput m_OnStartTouchAll; // 0x818	
	CEntityIOOutput m_OnEndTouch; // 0x840	
	CEntityIOOutput m_OnEndTouchAll; // 0x868	
	CEntityIOOutput m_OnTouching; // 0x890	
	CEntityIOOutput m_OnNotTouching; // 0x8b8	
	CUtlVector< CHandle< CBaseEntity > > m_hTouchingEntities; // 0x8e0	
	// MNetworkEnable
	bool m_bClientSidePredicted; // 0x8f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerMultiple : public CBaseTrigger
{
public:
	CEntityIOOutput m_OnTrigger; // 0x900	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc68
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerSndSosOpvar : public CBaseTrigger
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTouchingPlayers; // 0x900	
	Vector m_flPosition; // 0x918	
	float m_flCenterSize; // 0x924	
	float m_flMinVal; // 0x928	
	float m_flMaxVal; // 0x92c	
	float m_flWait; // 0x930	
private:
	[[maybe_unused]] uint8_t __pad0934[0x4]; // 0x934
public:
	CUtlSymbolLarge m_opvarName; // 0x938	
	CUtlSymbolLarge m_stackName; // 0x940	
	CUtlSymbolLarge m_operatorName; // 0x948	
	bool m_bVolIs2D; // 0x950	
	char m_opvarNameChar[256]; // 0x951	
	char m_stackNameChar[256]; // 0xa51	
	char m_operatorNameChar[256]; // 0xb51	
private:
	[[maybe_unused]] uint8_t __pad0c51[0x3]; // 0xc51
public:
	Vector m_VecNormPos; // 0xc54	
	float m_flNormCenterSize; // 0xc60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerHurt : public CBaseTrigger
{
public:
	float m_flOriginalDamage; // 0x900	
	float m_flDamage; // 0x904	
	float m_flDamageCap; // 0x908	
	GameTime_t m_flLastDmgTime; // 0x90c	
	float m_flForgivenessDelay; // 0x910	
	int32_t m_bitsDamageInflict; // 0x914	
	int32_t m_damageModel; // 0x918	
	bool m_bNoDmgForce; // 0x91c	
private:
	[[maybe_unused]] uint8_t __pad091d[0x3]; // 0x91d
public:
	Vector m_vDamageForce; // 0x920	
	bool m_thinkAlways; // 0x92c	
private:
	[[maybe_unused]] uint8_t __pad092d[0x3]; // 0x92d
public:
	float m_hurtThinkPeriod; // 0x930	
private:
	[[maybe_unused]] uint8_t __pad0934[0x4]; // 0x934
public:
	CEntityIOOutput m_OnHurt; // 0x938	
	CEntityIOOutput m_OnHurtPlayer; // 0x960	
	CUtlVector< CHandle< CBaseEntity > > m_hurtEntities; // 0x988	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerHurtGhost : public CTriggerHurt
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x908
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerCallback : public CBaseTrigger
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerLerpObject : public CBaseTrigger
{
public:
	CUtlSymbolLarge m_iszLerpTarget; // 0x900	
	CHandle< CBaseEntity > m_hLerpTarget; // 0x908	
private:
	[[maybe_unused]] uint8_t __pad090c[0x4]; // 0x90c
public:
	CUtlSymbolLarge m_iszLerpTargetAttachment; // 0x910	
	AttachmentHandle_t m_hLerpTargetAttachment; // 0x918	
private:
	[[maybe_unused]] uint8_t __pad0919[0x3]; // 0x919
public:
	float m_flLerpDuration; // 0x91c	
	bool m_bLerpRestoreMoveType; // 0x920	
	bool m_bSingleLerpObject; // 0x921	
private:
	[[maybe_unused]] uint8_t __pad0922[0x6]; // 0x922
public:
	CUtlVector< lerpdata_t > m_vecLerpingObjects; // 0x928	
	CUtlSymbolLarge m_iszLerpEffect; // 0x940	
	CUtlSymbolLarge m_iszLerpSound; // 0x948	
	CEntityIOOutput m_OnLerpStarted; // 0x950	
	CEntityIOOutput m_OnLerpFinished; // 0x978	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x940
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CChangeLevel : public CBaseTrigger
{
public:
	CUtlString m_sMapName; // 0x900	
	CUtlString m_sLandmarkName; // 0x908	
	CEntityIOOutput m_OnChangeLevel; // 0x910	
	bool m_bTouched; // 0x938	
	bool m_bNoTouch; // 0x939	
	bool m_bNewChapter; // 0x93a	
	bool m_bOnChangeLevelFired; // 0x93b	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x910
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerTeleport : public CBaseTrigger
{
public:
	CUtlSymbolLarge m_iLandmark; // 0x900	
	bool m_bUseLandmarkAngles; // 0x908	
	bool m_bMirrorPlayer; // 0x909	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x950
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerFan : public CBaseTrigger
{
public:
	Vector m_vFanOrigin; // 0x900	
	Vector m_vFanEnd; // 0x90c	
	Vector m_vNoise; // 0x918	
	float m_flForce; // 0x924	
	float m_flPlayerForce; // 0x928	
	float m_flRampTime; // 0x92c	
	bool m_bFalloff; // 0x930	
	bool m_bPushPlayer; // 0x931	
	bool m_bRampDown; // 0x932	
	bool m_bAddNoise; // 0x933	
private:
	[[maybe_unused]] uint8_t __pad0934[0x4]; // 0x934
public:
	CountdownTimer m_RampTimer; // 0x938	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CNavWalkable : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncNavBlocker : public CBaseModelEntity
{
public:
	bool m_bDisabled; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x3]; // 0x759
public:
	int32_t m_nBlockedTeamNumber; // 0x75c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CNavLinkAreaEntity : public CPointEntity
{
public:
	float m_flWidth; // 0x4a8	
	Vector m_vLocatorOffset; // 0x4ac	
	QAngle m_qLocatorAnglesOffset; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04c4[0x4]; // 0x4c4
public:
	CUtlSymbolLarge m_strMovementForward; // 0x4c8	
	CUtlSymbolLarge m_strMovementReverse; // 0x4d0	
	int32_t m_nNavLinkIdForward; // 0x4d8	
	int32_t m_nNavLinkIdReverse; // 0x4dc	
	bool m_bEnabled; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e1[0x7]; // 0x4e1
public:
	CUtlSymbolLarge m_strFilterName; // 0x4e8	
	CHandle< CBaseFilter > m_hFilter; // 0x4f0	
private:
	[[maybe_unused]] uint8_t __pad04f4[0x4]; // 0x4f4
public:
	CEntityIOOutput m_OnNavLinkStart; // 0x4f8	
	CEntityIOOutput m_OnNavLinkFinish; // 0x520	
	bool m_bIsTerminus; // 0x548	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CNavSpaceInfo : public CPointEntity
{
public:
	bool m_bCreateFlightSpace; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "m_nModelIndex"
// MNetworkIncludeByName "m_nRenderFX"
// MNetworkIncludeByName "m_nRenderMode"
// MNetworkIncludeByName "m_clrRender"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkOverride "m_clrRender"
// MNetworkVarNames "float32 m_flFrameRate"
// MNetworkVarNames "float32 m_flHDRColorScale"
// MNetworkVarNames "uint8 m_nNumBeamEnts"
// MNetworkVarNames "HMaterialStrong m_hBaseMaterial"
// MNetworkVarNames "HMaterialStrong m_nHaloIndex"
// MNetworkVarNames "BeamType_t m_nBeamType"
// MNetworkVarNames "uint32 m_nBeamFlags"
// MNetworkVarNames "CHandle< CBaseEntity > m_hAttachEntity"
// MNetworkVarNames "AttachmentHandle_t m_nAttachIndex"
// MNetworkVarNames "float32 m_fWidth"
// MNetworkVarNames "float32 m_fEndWidth"
// MNetworkVarNames "float32 m_fFadeLength"
// MNetworkVarNames "float32 m_fHaloScale"
// MNetworkVarNames "float32 m_fAmplitude"
// MNetworkVarNames "float32 m_fStartFrame"
// MNetworkVarNames "float32 m_fSpeed"
// MNetworkVarNames "float32 m_flFrame"
// MNetworkVarNames "BeamClipStyle_t m_nClipStyle"
// MNetworkVarNames "bool m_bTurnedOff"
// MNetworkVarNames "Vector m_vecEndPos"
class CBeam : public CBaseModelEntity
{
public:
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "-25.000000"
	// MNetworkMaxValue "25.000000"
	// MNetworkEncodeFlags "2"
	float m_flFrameRate; // 0x758	
	// MNetworkEnable
	float m_flHDRColorScale; // 0x75c	
	GameTime_t m_flFireTime; // 0x760	
	float m_flDamage; // 0x764	
	// MNetworkEnable
	uint8_t m_nNumBeamEnts; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x7]; // 0x769
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hBaseMaterial; // 0x770	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_nHaloIndex; // 0x778	
	// MNetworkEnable
	BeamType_t m_nBeamType; // 0x780	
	// MNetworkEnable
	uint32_t m_nBeamFlags; // 0x784	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAttachEntity[10]; // 0x788	
	// MNetworkEnable
	AttachmentHandle_t m_nAttachIndex[10]; // 0x7b0	
private:
	[[maybe_unused]] uint8_t __pad07ba[0x2]; // 0x7ba
public:
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "102.300003"
	// MNetworkEncodeFlags "2"
	float m_fWidth; // 0x7bc	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "102.300003"
	// MNetworkEncodeFlags "2"
	float m_fEndWidth; // 0x7c0	
	// MNetworkEnable
	float m_fFadeLength; // 0x7c4	
	// MNetworkEnable
	float m_fHaloScale; // 0x7c8	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "64.000000"
	// MNetworkEncodeFlags "1"
	float m_fAmplitude; // 0x7cc	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "256.000000"
	// MNetworkEncodeFlags "1"
	float m_fStartFrame; // 0x7d0	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "100.000000"
	float m_fSpeed; // 0x7d4	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "256.000000"
	// MNetworkEncodeFlags "1"
	// MNetworkPriority "32"
	float m_flFrame; // 0x7d8	
	// MNetworkEnable
	BeamClipStyle_t m_nClipStyle; // 0x7dc	
	// MNetworkEnable
	bool m_bTurnedOff; // 0x7e0	
private:
	[[maybe_unused]] uint8_t __pad07e1[0x3]; // 0x7e1
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_vecEndPos; // 0x7e4	
	CHandle< CBaseEntity > m_hEndEntity; // 0x7f0	
	int32_t m_nDissolveType; // 0x7f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x128
// Has VTable
// 
// MGetKV3ClassDefaults
class CPrecipitationVData : public CEntitySubclassVDataBase
{
public:
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > > m_szParticlePrecipitationEffect; // 0x28	
	float m_flInnerDistance; // 0x108	
	ParticleAttachment_t m_nAttachType; // 0x10c	
	bool m_bBatchSameVolumeType; // 0x110	
private:
	[[maybe_unused]] uint8_t __pad0111[0x3]; // 0x111
public:
	int32_t m_nRTEnvCP; // 0x114	
	int32_t m_nRTEnvCPComponent; // 0x118	
private:
	[[maybe_unused]] uint8_t __pad011c[0x4]; // 0x11c
public:
	CUtlString m_szModifier; // 0x120	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "HMaterialStrong m_hSpriteMaterial"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAttachedToEntity"
// MNetworkVarNames "AttachmentHandle_t m_nAttachment"
// MNetworkVarNames "float32 m_flSpriteFramerate"
// MNetworkVarNames "float32 m_flFrame"
// MNetworkVarNames "uint32 m_nBrightness"
// MNetworkVarNames "float32 m_flBrightnessDuration"
// MNetworkVarNames "float32 m_flSpriteScale"
// MNetworkVarNames "float32 m_flScaleDuration"
// MNetworkVarNames "bool m_bWorldSpaceScale"
// MNetworkVarNames "float32 m_flGlowProxySize"
// MNetworkVarNames "float32 m_flHDRColorScale"
class CSprite : public CBaseModelEntity
{
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSpriteMaterial; // 0x758	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAttachedToEntity; // 0x760	
	// MNetworkEnable
	AttachmentHandle_t m_nAttachment; // 0x764	
private:
	[[maybe_unused]] uint8_t __pad0765[0x3]; // 0x765
public:
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "60.000000"
	// MNetworkEncodeFlags "2"
	float m_flSpriteFramerate; // 0x768	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "256.000000"
	// MNetworkEncodeFlags "1"
	float m_flFrame; // 0x76c	
	GameTime_t m_flDieTime; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0774[0xc]; // 0x774
public:
	// MNetworkEnable
	uint32_t m_nBrightness; // 0x780	
	// MNetworkEnable
	float m_flBrightnessDuration; // 0x784	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpriteScaleChanged"
	float m_flSpriteScale; // 0x788	
	// MNetworkEnable
	float m_flScaleDuration; // 0x78c	
	// MNetworkEnable
	bool m_bWorldSpaceScale; // 0x790	
private:
	[[maybe_unused]] uint8_t __pad0791[0x3]; // 0x791
public:
	// MNetworkEnable
	// MNetworkBitCount "6"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "64.000000"
	// MNetworkEncodeFlags "2"
	float m_flGlowProxySize; // 0x794	
	// MNetworkEnable
	float m_flHDRColorScale; // 0x798	
	GameTime_t m_flLastTime; // 0x79c	
	float m_flMaxFrame; // 0x7a0	
	float m_flStartScale; // 0x7a4	
	float m_flDestScale; // 0x7a8	
	GameTime_t m_flScaleTimeStart; // 0x7ac	
	int32_t m_nStartBrightness; // 0x7b0	
	int32_t m_nDestBrightness; // 0x7b4	
	GameTime_t m_flBrightnessTimeStart; // 0x7b8	
	int32_t m_nSpriteWidth; // 0x7bc	
	int32_t m_nSpriteHeight; // 0x7c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSpriteOriented : public CSprite
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x908
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "string_t m_DialogXMLName"
// MNetworkVarNames "string_t m_PanelClassName"
// MNetworkVarNames "string_t m_PanelID"
class CBaseClientUIEntity : public CBaseModelEntity
{
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x7]; // 0x759
public:
	// MNetworkEnable
	CUtlSymbolLarge m_DialogXMLName; // 0x760	
	// MNetworkEnable
	CUtlSymbolLarge m_PanelClassName; // 0x768	
	// MNetworkEnable
	CUtlSymbolLarge m_PanelID; // 0x770	
	CEntityIOOutput m_CustomOutput0; // 0x778	
	CEntityIOOutput m_CustomOutput1; // 0x7a0	
	CEntityIOOutput m_CustomOutput2; // 0x7c8	
	CEntityIOOutput m_CustomOutput3; // 0x7f0	
	CEntityIOOutput m_CustomOutput4; // 0x818	
	CEntityIOOutput m_CustomOutput5; // 0x840	
	CEntityIOOutput m_CustomOutput6; // 0x868	
	CEntityIOOutput m_CustomOutput7; // 0x890	
	CEntityIOOutput m_CustomOutput8; // 0x8b8	
	CEntityIOOutput m_CustomOutput9; // 0x8e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x910
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hActivator"
class CPointClientUIDialog : public CBaseClientUIEntity
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnDialogActivatorChanged"
	CHandle< CBaseEntity > m_hActivator; // 0x908	
	bool m_bStartEnabled; // 0x90c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bIgnoreInput"
// MNetworkVarNames "bool m_bLit"
// MNetworkVarNames "bool m_bFollowPlayerAcrossTeleport"
// MNetworkVarNames "float m_flWidth"
// MNetworkVarNames "float m_flHeight"
// MNetworkVarNames "float m_flDPI"
// MNetworkVarNames "float m_flInteractDistance"
// MNetworkVarNames "float m_flDepthOffset"
// MNetworkVarNames "uint32 m_unOwnerContext"
// MNetworkVarNames "uint32 m_unHorizontalAlign"
// MNetworkVarNames "uint32 m_unVerticalAlign"
// MNetworkVarNames "uint32 m_unOrientation"
// MNetworkVarNames "bool m_bAllowInteractionFromAllSceneWorlds"
// MNetworkVarNames "string_t m_vecCSSClasses"
// MNetworkVarNames "bool m_bOpaque"
// MNetworkVarNames "bool m_bNoDepth"
// MNetworkVarNames "bool m_bRenderBackface"
// MNetworkVarNames "bool m_bUseOffScreenIndicator"
// MNetworkVarNames "bool m_bExcludeFromSaveGames"
// MNetworkVarNames "bool m_bGrabbable"
// MNetworkVarNames "bool m_bOnlyRenderToTexture"
// MNetworkVarNames "bool m_bDisableMipGen"
// MNetworkVarNames "int32 m_nExplicitImageLayout"
class CPointClientUIWorldPanel : public CBaseClientUIEntity
{
public:
	// MNetworkEnable
	bool m_bIgnoreInput; // 0x908	
	// MNetworkEnable
	bool m_bLit; // 0x909	
	// MNetworkEnable
	bool m_bFollowPlayerAcrossTeleport; // 0x90a	
private:
	[[maybe_unused]] uint8_t __pad090b[0x1]; // 0x90b
public:
	// MNetworkEnable
	float m_flWidth; // 0x90c	
	// MNetworkEnable
	float m_flHeight; // 0x910	
	// MNetworkEnable
	float m_flDPI; // 0x914	
	// MNetworkEnable
	float m_flInteractDistance; // 0x918	
	// MNetworkEnable
	float m_flDepthOffset; // 0x91c	
	// MNetworkEnable
	uint32_t m_unOwnerContext; // 0x920	
	// MNetworkEnable
	uint32_t m_unHorizontalAlign; // 0x924	
	// MNetworkEnable
	uint32_t m_unVerticalAlign; // 0x928	
	// MNetworkEnable
	uint32_t m_unOrientation; // 0x92c	
	// MNetworkEnable
	bool m_bAllowInteractionFromAllSceneWorlds; // 0x930	
private:
	[[maybe_unused]] uint8_t __pad0931[0x7]; // 0x931
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CUtlSymbolLarge > m_vecCSSClasses; // 0x938	
	// MNetworkEnable
	bool m_bOpaque; // 0x950	
	// MNetworkEnable
	bool m_bNoDepth; // 0x951	
	// MNetworkEnable
	bool m_bRenderBackface; // 0x952	
	// MNetworkEnable
	bool m_bUseOffScreenIndicator; // 0x953	
	// MNetworkEnable
	bool m_bExcludeFromSaveGames; // 0x954	
	// MNetworkEnable
	bool m_bGrabbable; // 0x955	
	// MNetworkEnable
	bool m_bOnlyRenderToTexture; // 0x956	
	// MNetworkEnable
	bool m_bDisableMipGen; // 0x957	
	// MNetworkEnable
	int32_t m_nExplicitImageLayout; // 0x958	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb60
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "char m_messageText"
class CPointClientUIWorldTextPanel : public CPointClientUIWorldPanel
{
public:
	// MNetworkEnable
	char m_messageText[512]; // 0x960	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "int m_nResolutionX"
// MNetworkVarNames "int m_nResolutionY"
// MNetworkVarNames "string_t m_szLayoutFileName"
// MNetworkVarNames "string_t m_RenderAttrName"
// MNetworkVarNames "CHandle< CBaseModelEntity > m_TargetEntities"
// MNetworkVarNames "int m_nTargetChangeCount"
// MNetworkVarNames "string_t m_vecCSSClasses"
class CInfoOffscreenPanoramaTexture : public CPointEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	// MNetworkEnable
	int32_t m_nResolutionX; // 0x4ac	
	// MNetworkEnable
	int32_t m_nResolutionY; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b4[0x4]; // 0x4b4
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szLayoutFileName; // 0x4b8	
	// MNetworkEnable
	CUtlSymbolLarge m_RenderAttrName; // 0x4c0	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseModelEntity > > m_TargetEntities; // 0x4c8	
	// MNetworkEnable
	int32_t m_nTargetChangeCount; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e4[0x4]; // 0x4e4
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CUtlSymbolLarge > m_vecCSSClasses; // 0x4e8	
	CUtlSymbolLarge m_szTargetsName; // 0x500	
	CUtlVector< CHandle< CBaseModelEntity > > m_AdditionalTargetEntities; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x128
// Has VTable
// 
// MNetworkIncludeByName "m_ProviderType"
// MNetworkIncludeByName "m_hOuter"
// MNetworkIncludeByName "m_iReapplyProvisionParity"
// MNetworkIncludeByName "m_Item"
// MNetworkVarNames "CEconItemView m_Item"
class CAttributeContainer : public CAttributeManager
{
public:
	// MNetworkEnable
	CEconItemView m_Item; // 0x68	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Is Abstract
class INextBotComponent : public INextBotEventResponder
{
public:
	GameTime_t m_lastUpdateTime; // 0x8	
	float m_curInterval; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
class IIntention : public INextBotComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x90
// Has VTable
class CLocomotionBase : public INextBotComponent
{
private:
	[[maybe_unused]] uint8_t __pad0020[0x50]; // 0x20
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bShouldAnimateDuringGameplayPause"
// MNetworkVarNames "bool m_bInitiallyPopulateInterpHistory"
class CBaseAnimatingActivity : public CBaseModelEntity
{
public:
	// MNetworkEnable
	bool m_bShouldAnimateDuringGameplayPause; // 0x758	
	// MNetworkEnable
	bool m_bInitiallyPopulateInterpHistory; // 0x759	
private:
	[[maybe_unused]] uint8_t __pad075a[0x6]; // 0x75a
public:
	CUtlVector< CUtlString >* m_pSuppressedAnimEventTags; // 0x760	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBaseAnimatingOverlay : public CBaseAnimatingActivity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_AutoDeliver : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hPrimary"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSecondary"
// MNetworkVarNames "CHandle< CBaseEntity> m_hTertiary"
// MNetworkVarNames "CHandle< CBaseEntity> m_hFourth"
class CDOTA_Ability_Brewmaster_PrimalSplit : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hPrimary; // 0x568	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSecondary; // 0x56c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTertiary; // 0x570	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hFourth; // 0x574	
	GameTime_t m_fHurlBoulder_CooldownTime; // 0x578	
	GameTime_t m_fHDispelMagic_CooldownTime; // 0x57c	
	GameTime_t m_fCyclone_CooldownTime; // 0x580	
	GameTime_t m_fWindWalk_CooldownTime; // 0x584	
	GameTime_t m_fAstralPulse_CooldownTime; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DeathProphet_Exorcism : public CDOTABaseAbility
{
public:
	CUtlVector< sSpiritInfo* > m_SpiritInfos; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Wisp_Spirits : public CDOTABaseAbility
{
public:
	CUtlVector< sSpiritDef > m_SpiritDefs; // 0x568	
	int32_t m_nWispDirection; // 0x580	
	int32_t spirit_amount; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_FurArmy : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
	ParticleIndex_t m_nFXIndex; // 0x56c	
	int32_t num_first_soldiers; // 0x570	
	int32_t num_second_soldiers; // 0x574	
	bool m_bCreateMonkeys; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0x3]; // 0x579
public:
	GameTime_t m_flNextCreationTime; // 0x57c	
	GameTime_t m_flScepterTime; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecSoldiers; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Generic_Hidden : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Book : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BookStrength : public CDOTA_Item_Book
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BookAgility : public CDOTA_Item_Book
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BookIntelligence : public CDOTA_Item_Book
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Jungle_Varmint_Dive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pudge_FleshHeap : public CDOTABaseAbility
{
public:
	int32_t m_iKills; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tombstone : public CDOTA_Item
{
public:
	float m_flTimer; // 0x610	
	CHandle< CDOTA_Item_Tombstone > m_hParent; // 0x614	
	CHandle< CDOTA_Item_Tombstone > m_hNextChild; // 0x618	
	Vector m_vContainerPosition; // 0x61c	
	ParticleIndex_t m_nFXIndex; // 0x628	
	ParticleIndex_t m_nFXIndex2; // 0x62c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hScepterIllusion"
class CDOTA_Ability_VengefulSpirit_Command_Aura : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnScepterIllusionChanged"
	CHandle< CBaseEntity > m_hScepterIllusion; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hTarget"
class CDOTA_Ability_Capture : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CDOTA_Buff* m_pMyBuff; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lamp_Use : public CDOTABaseAbility
{
public:
	GameTime_t m_flLastCaptureTime; // 0x568	
	ParticleIndex_t m_nChannelFXIndex; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Twin_Gate_Portal_Warp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tombstone_Mutation : public CDOTA_Item_Tombstone
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
class CDOTA_Item_DeathGoldDropped : public CBaseAnimatingActivity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Is Abstract
class CDOTA_Tree : public CObstructionObject
{
public:
	bool m_bStanding; // 0x18	
	bool m_bSpecialConsume; // 0x19	
	bool m_bSpecialToxic; // 0x1a	
	bool m_bSpecialPathing; // 0x1b	
	uint32_t m_unOccluderID; // 0x1c	
	
	// Static fields:
	static int32_t &Get_s_nNextChangeToken(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Tree")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Vector m_vecTreeCircleCenter"
// MNetworkVarNames "bool m_bCanApplyTreeCostume"
// MNetworkVarNames "bool m_bIsMangoTree"
// MNetworkVarNames "bool m_bIsPartOfFowSystem"
// MNetworkVarNames "bool m_bHasClientSideAnimation"
class CDOTA_TempTree : public CBaseAnimatingActivity
{
private:
	[[maybe_unused]] uint8_t __pad0768[0x20]; // 0x768
public:
	GameTime_t m_fExpireTime; // 0x788	
	// MNetworkEnable
	Vector m_vecTreeCircleCenter; // 0x78c	
	// MNetworkEnable
	bool m_bCanApplyTreeCostume; // 0x798	
	// MNetworkEnable
	bool m_bIsMangoTree; // 0x799	
private:
	[[maybe_unused]] uint8_t __pad079a[0x6]; // 0x79a
public:
	CUtlVector< ParticleIndex_t > m_Particles; // 0x7a0	
	// MNetworkEnable
	bool m_bIsPartOfFowSystem; // 0x7b8	
	// MNetworkEnable
	bool m_bHasClientSideAnimation; // 0x7b9	
	bool m_bForceVisible[15]; // 0x7ba	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KoboldTaskmaster_SpeedAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CentaurKhan_EnduranceAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CentaurKhan_WarStomp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spawnlord_Master_Stomp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spawnlord_Master_Freeze : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_GnollAssassin_EnvenomedWeapon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ghost_FrostAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PolarFurbolgUrsaWarrior_ThunderClap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_WarpineRaider_SeedShot : public CDOTABaseAbility
{
public:
	int32_t m_iBounces; // 0x568	
	int32_t bounces; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Neutral_SpellImmunity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_OgreMagi_FrostArmor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkTrollWarlord_Ensnare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkTrollWarlord_RaiseDead : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_GiantWolf_CriticalStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientGolem_Rockslide : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MudGolem_RockDestroy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MudGolem_HurlBoulder : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AlphaWolf_CriticalStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientRockGolem_Weakening_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BlackDrake_MagicAmplification_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AlphaWolf_CommandAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FrostbittenGolem_TimeWarpAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_IceShaman_IncendiaryBomb : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tornado_Tempest : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EnragedWildkin_Tornado : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTornado; // 0x568	
	CHandle< CBaseEntity > m_hNeutralTarget; // 0x56c	
	ParticleIndex_t m_nFXIndex; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EnragedWildkin_Hurricane : public CDOTABaseAbility
{
public:
	float distance; // 0x568	
	Vector m_vEndpoint; // 0x56c	
	Vector m_vDashPosition; // 0x578	
	Vector m_vFacePosition; // 0x584	
	Vector m_vTravelDir; // 0x590	
	float m_fTravelDistance; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BerserkerTroll_Break : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kobold_Disarm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EnragedWildkin_ToughnessAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_GraniteGolem_HPAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_GraniteGolem_Bash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spawnlord_Master_Bash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SatyrTrickster_Purge : public CDOTABaseAbility
{
public:
	GameTime_t m_flTargetTime; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SatyrSoulstealer_ManaBurn : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > hNeutralTarget; // 0x568	
	GameTime_t m_flTimeBuffer; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SatyrHellcaller_Shockwave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SatyrHellcaller_UnholyAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spawnlord_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ForestTrollHighPriest_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ForestTrollHighPriest_ManaAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ForestTrollHighPriest_HealAmp_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furbolg_Enrage_AttackSpeed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furbolg_Enrage_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FelBeast_Haunt : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KoboldTunneler_Prospecting : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_HillTroll_Rally : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_HarpyScout_TakeOff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_OgreBruiser_OgreSmash : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	float hero_stun_duration; // 0x56c	
	int32_t damage; // 0x570	
	float damage_pct; // 0x574	
	GameTime_t flCooldown; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_GiantWolf_Intimidate : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_HarpyStorm_ChainLightning : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BlackDragon_Fireball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BlackDragon_SplashAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BlackDragon_DragonhideAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MudGolem_CloakAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BlueDragonspawnSorcerer_Evasion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BlueDragonspawnOverseer_Evasion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BlueDragonspawnOverseer_DevotionAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BigThunderLizard_Wardrums : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BigThunderLizard_Slam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BigThunderLizard_Frenzy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Black_Nightmare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Black_BrainSap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Blue_ColdFeet : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Blue_IceVortex : public CDOTABaseAbility
{
public:
	int32_t vision_aoe; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Red_Earthshock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Red_Overpower : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Yellow_IonShell : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Yellow_Surge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_White_Purification : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_White_Degen_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Green_LivingArmor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Green_Overgrowth : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Orange_DragonSlave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Orange_LightStrikeArray : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Purple_VenomousGale : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Purple_PlagueWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Greevil_Miniboss_Sight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Neutral_Upgrade : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Creep_Siege : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Creep_Piercing : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Creep_Irresolute : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FlagBearer_Creep_Aura_Effect : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Filler_Tooltip : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
// Is Abstract
class CDOTA_Buff : public CHorizontalMotionController
{
private:
	[[maybe_unused]] uint8_t __pad0010[0x18]; // 0x10
public:
	CUtlSymbolLarge m_name; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad0030[0x8]; // 0x30
public:
	CUtlSymbolLarge m_szModifierAura; // 0x38	
private:
	[[maybe_unused]] uint8_t __pad0040[0x8]; // 0x40
public:
	int32_t m_iSerialNumber; // 0x48	
	// MFieldVerificationName "m_iStringIndex"
	int32_t m_iStringIndex; // 0x4c	
	int32_t m_iIndex; // 0x50	
	GameTime_t m_flCreationTime; // 0x54	
	int32_t m_iCreationFrame; // 0x58	
	GameTime_t m_flLastAppliedTime; // 0x5c	
	float m_flDuration; // 0x60	
	GameTime_t m_flDieTime; // 0x64	
	CHandle< CBaseEntity > m_hCaster; // 0x68	
	CHandle< CBaseEntity > m_hAbility; // 0x6c	
	CHandle< CBaseEntity > m_hParent; // 0x70	
	CHandle< CBaseEntity > m_hAuraOwner; // 0x74	
	int32_t m_iStackCount; // 0x78	
	int16_t m_iAuraSearchTeam; // 0x7c	
	int16_t m_iAuraSearchType; // 0x7e	
	int32_t m_iAuraSearchFlags; // 0x80	
	int32_t m_iAuraRadius; // 0x84	
	int32_t m_iTeam; // 0x88	
	int32_t m_iAttributes; // 0x8c	
	// MFieldVerificationName "m_iTooltipParity"
	int16_t m_iPaddingToMakeSchemaHappy2; // 0x90	
	struct 
	{
		uint8_t m_bIsAura: 1; 		
		uint8_t m_bIsAuraActiveOnDeath: 1; 		
		uint8_t m_bMarkedForDeletion: 1; 		
		uint8_t m_bAuraIsHeal: 1; 		
		uint8_t m_bProvidedByAura: 1; 		
		uint32_t __pad4: 19;
	}; // 24 bits
	bool m_bPurgedDestroy; // 0x93	
	GameTime_t m_flPreviousTick; // 0x94	
	float m_flThinkInterval; // 0x98	
	float m_flThinkTimeAccumulator; // 0x9c	
	CUtlVector< CDOTA_BuffParticle > m_iParticles; // 0xa0	
	CUtlVector< CHandle< CBaseEntity > > m_hAuraUnits; // 0xb8	
private:
	[[maybe_unused]] uint8_t __pad00d0[0x1240]; // 0xd0
public:
	HSCRIPT m_hScriptScope; // 0x1310	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
// Is Abstract
class CDOTA_Buff_Item : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// Is Abstract
class CDOTA_Modifier_Stacking_Base : public CDOTA_Buff
{
public:
	int32_t max_stacks; // 0x1318	
	bool destroy_on_zero_stacks; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	float sub_modifier_forced_duration; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlString m_szSubModifierName; // 0x1328	
	KeyValues* m_pSubModifierKV; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
// Is Abstract
class CDOTA_Modifier_Stacking_Multiple_Buff_Base : public CDOTA_Buff
{
public:
	int32_t m_nParentBuffIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Glyph_Reset : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SetScaleset : public CDOTA_Buff
{
public:
	CUtlString m_Scaleset; // 0x1318	
	bool m_bActive; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_StackedNeutral : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Filler_LastDitch : public CDOTA_Buff
{
public:
	float melee_number; // 0x1318	
	float ranged_number; // 0x131c	
	float siege_number; // 0x1320	
	int32_t lane; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_FillerThinker : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > hCasterList; // 0x1318	
	bool bStarted; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	int32_t nCount; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Filler_Buff_Icon : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Filler_Heal_Aura : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Filler_Heal : public CDOTA_Buff
{
public:
	int32_t hp_heal; // 0x1318	
	int32_t mp_heal; // 0x131c	
	int32_t hp_heal_growth; // 0x1320	
	float mp_heal_growth; // 0x1324	
	int32_t hp_heal_pct; // 0x1328	
	int32_t mp_heal_pct; // 0x132c	
	int32_t tota_hp_per_second; // 0x1330	
	int32_t tota_mp_per_second; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_FountainInvulnerabilityBuff : public CDOTA_Buff
{
public:
	Vector m_vecPosition; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Building_DispelsSmoke : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Truesight_Aura : public CDOTA_Buff
{
public:
	int32_t m_nAuraRadius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tower_Truesight_Aura : public CDOTA_Modifier_Truesight_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Fountain_Truesight_Aura : public CDOTA_Modifier_Truesight_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Tower_Aura : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
	bool m_bOverrideArmor; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	float hp_regen; // 0x1320	
	bool m_bOverrideRegen; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	int32_t m_nRadius; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Tower_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
	float hp_regen; // 0x131c	
	bool m_bOverrideArmor; // 0x1320	
	bool m_bOverrideRegen; // 0x1321	
	bool m_bSentFirstRefresh; // 0x1322	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tower_Armor_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Scout_Bonuses : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ScoutVisible : public CDOTA_Buff
{
public:
	int32_t reveal_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ScoutBonuses : public CDOTA_Buff
{
public:
	int32_t reveal_radius; // 0x1318	
	float increase_health; // 0x131c	
	int32_t max_health; // 0x1320	
	float increase_armor; // 0x1324	
	float max_armor; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BackdoorProtection : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BackdoorProtectionInBase : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FillerAbility : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_BackdoorProtection : public CDOTA_Buff
{
public:
	bool m_bActivated; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	float m_flHealthToRestore; // 0x131c	
	int32_t radius; // 0x1320	
	float activation_time; // 0x1324	
	int32_t regen_rate; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CountdownTimer m_TimerToActivate; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_BackdoorProtectionInBase : public CDOTA_Modifier_BackdoorProtection
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BackdoorProtectionActive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ProjectileVision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ProjectileVisionOnMinimap : public CDOTA_Modifier_ProjectileVision
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pet : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_HeroStatue : public CDOTA_Buff
{
public:
	uint32_t m_unStatusEffectIndex; // 0x1318	
	CHandle< CBaseEntity > m_hPedestal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_HeroStatuePedestal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BattleCupEffigy : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Hidden_NoDamage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tutorial_Disable_Healing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tutorial_SpeechBubble : public CDOTA_Buff
{
public:
	bool m_bFacePlayer; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tutorial_ForceAnimation : public CDOTA_Buff
{
public:
	int32_t m_nActivity; // 0x1318	
	bool m_bLoop; // 0x131c	
	bool m_bFacePlayer; // 0x131d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tutorial_HideNPC : public CDOTA_Buff
{
public:
	bool m_bRemoveOnDeath; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tutorial_LowAttackPriority : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tutorial_LastHittable : public CDOTA_Buff
{
public:
	bool m_bIsFriend; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Creep_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Creep_Haste : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Buyback_Gold_Penalty : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Provide_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_ScriptedMotionController : public CDOTA_Buff
{
public:
	HSCRIPT m_hHorizontalControlFunction; // 0x1318	
	HSCRIPT m_hVerticalControlFunction; // 0x1320	
	HSCRIPT m_hOnDestroyFunction; // 0x1328	
	CVariantBase< CVariantDefaultAllocator > m_parameterTable; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Generic_Hidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Disable_Healing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BaseBlocker_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BaseBlocker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BaseBlocker_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Rune_Shield : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1318	
	bool m_bStartedTimer; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	int32_t m_nDamageAbsorbed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bonus_Armor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bonus_Mres : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bonus_Damage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_HP_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MP_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MagicImmune : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DebuffImmune : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_CameraFollow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Hexed : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Editor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Prosperous_Soul : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MoveSpeed_Percentage : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kill : public CDOTA_Buff
{
public:
	bool m_bHideOnKill; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Phased : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Dominated : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TrueSight : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TrueSightFoW : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TrueSightAll : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Stunned : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bashed : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Taunt : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_PersistentInvisibility : public CDOTA_Buff
{
public:
	float fade_delay; // 0x1318	
	float m_flFadeTime; // 0x131c	
	GameTime_t m_flLastActionTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Invisible : public CDOTA_Buff
{
public:
	bool m_bSubtle; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	GameTime_t m_flFadeTime; // 0x131c	
	float m_flFadeTimeValue; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_InvisibleTrueSightImmune : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Followthrough : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Fear : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AttackImmune : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Disarmed : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Muted : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rooted : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_RootedUndispellable : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NoHealthBar : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NotOnMinimap : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
// Is Abstract
class CDOTA_Modifier_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FountainAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FountainAuraBuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Illusion : public CDOTA_Buff
{
public:
	int32_t outgoing_damage; // 0x1318	
	int32_t outgoing_damage_structure; // 0x131c	
	int32_t outgoing_damage_roshan; // 0x1320	
	int32_t incoming_damage; // 0x1324	
	int32_t bounty_base; // 0x1328	
	int32_t bounty_growth; // 0x132c	
	CUtlString m_strIllusionType; // 0x1330	
	char m_szIllusionLabel[64]; // 0x1338	
	bool m_bHidden; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rune_DoubleDamage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rune_ExtraDamage : public CDOTA_Modifier_Rune_DoubleDamage
{
public:
	int32_t m_iAdditionalDamagePct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rune_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rune_Haste : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rune_FlyingHaste : public CDOTA_Modifier_Rune_Haste
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Rune_Invisibility : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Rune_Super_Invisibility : public CDOTA_Modifier_PersistentInvisibility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rune_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rune_SuperRegen : public CDOTA_Modifier_Rune_Regen
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rune_Arcane : public CDOTA_Buff
{
public:
	int32_t m_iCooldownReductionPct; // 0x1318	
	int32_t m_iCostReductionPct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rune_SuperArcane : public CDOTA_Modifier_Rune_Arcane
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
class CDOTA_Modifier_Teleporting : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x20]; // 0x1318
public:
	float m_fStartTime; // 0x1338	
	char m_iszPortalLoopAppear[260]; // 0x133c	
	char m_iszPortalLoopDisappear[260]; // 0x1440	
	char m_iszHeroLoopAppear[260]; // 0x1544	
	char m_iszHeroLoopDisappear[260]; // 0x1648	
	bool m_bSkipTeleportAnim; // 0x174c	
	bool m_bPlayingCoopAnim; // 0x174d	
	bool m_bIsPlayingTauntGesture; // 0x174e	
private:
	[[maybe_unused]] uint8_t __pad174f[0x1]; // 0x174f
public:
	float m_fChannelTime; // 0x1750	
	Vector m_vStart; // 0x1754	
	Vector m_vEnd; // 0x1760	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Teleporting_Root_Logic : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Knockback : public CDOTA_Buff
{
public:
	float knockback_distance; // 0x1318	
	int32_t knockback_height; // 0x131c	
	float knockback_duration; // 0x1320	
	Vector m_vHorizOffset; // 0x1324	
	Vector m_vStartPosition; // 0x1330	
	float m_fCurrentTimeHoriz; // 0x133c	
	float m_fCurrentTimeVert; // 0x1340	
	bool m_bShouldStun; // 0x1344	
	bool m_bRespectLeash; // 0x1345	
	bool m_bReversePolarity; // 0x1346	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Cyclone : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1318	
	Vector m_vStartPos; // 0x131c	
	float m_flCurTime; // 0x1328	
	float m_flHeightT; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_IceSlide : public CDOTA_Buff
{
public:
	GameTime_t m_fLastUpdateTime; // 0x1318	
	Vector m_vVelocity; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tutorial_LastHitHelper : public CDOTA_Buff
{
public:
	bool m_bTargetFriendlies; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TeamShowcase_Global : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TeamShowcase_Showcase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_HallOfFame_Glow : public CDOTA_Buff
{
public:
	CUtlVector< PlayerID_t > m_vecGlowingPlayerIDs; // 0x1318	
	CUtlVector< PlayerID_t > m_vecGlowingPlayerIDs2; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DisableTauntAnimationCancel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_PreventTaunts : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Activity_Modifier : public CDOTA_Buff
{
public:
	CUtlSymbolLarge m_activityModifier; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_SecondaryUnit_Taunt : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_MonkeyKing_BouncePerch : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1318	
	bool m_bGroundToTree; // 0x131c	
	bool m_bTreeToGround; // 0x131d	
	bool m_bTreeToTree; // 0x131e	
private:
	[[maybe_unused]] uint8_t __pad131f[0x1]; // 0x131f
public:
	float perched_day_vision; // 0x1320	
	float perched_night_vision; // 0x1324	
	bool m_bAbilityIsStolen; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BookOfStrength : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BookOfAgility : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BookOfIntelligence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_No_Invisibility : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hide_On_Minimap : public CDOTA_Buff
{
public:
	bool m_bEnemiesOnly; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ChangeTreeModel_Thinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlString m_strModel; // 0x1320	
	int32_t m_nModelChangeToken; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
// Is Abstract
class CDOTA_Modifier_LegacyChargeCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FixedNumberOfHitsToKill : public CDOTA_Buff
{
public:
	int32_t creep_attack_divisor; // 0x1318	
	int32_t attack_count; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NPXBuff : public CDOTA_Buff
{
public:
	int32_t m_nCurReduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Muerta_PartingShot_PhysicalBodyDebuff : public CDOTA_Modifier_Stunned
{
public:
	CHandle< CBaseEntity > m_hSoulEntity; // 0x1318	
	int32_t damage_reduction_percent; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DataDriven : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x18]; // 0x568
public:
	bool m_bProcsMagicStick; // 0x580	
	bool m_bIsSharedWithTeammates; // 0x581	
	bool m_bCastFilterRejectCaster; // 0x582	
private:
	[[maybe_unused]] uint8_t __pad0583[0x1]; // 0x583
public:
	float m_fAOERadius; // 0x584	
	int32_t m_CastAnimation; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CUtlVector< KeyValues* > m_ModifierKVDescriptions; // 0x590	
	KeyValues* m_pOnChannelFinishKV; // 0x5a8	
	KeyValues* m_pOnChannelSucceededKV; // 0x5b0	
	KeyValues* m_pOnChannelInterruptedKV; // 0x5b8	
	KeyValues* m_pOnOwnerSpawnedKV; // 0x5c0	
	KeyValues* m_pOnOwnerDiedKV; // 0x5c8	
	KeyValues* m_pOnUpgradeKV; // 0x5d0	
	KeyValues* m_pOnProjectileHitUnitKV; // 0x5d8	
	KeyValues* m_pOnProjectileFinishKV; // 0x5e0	
	KeyValues* m_pOnSpellStartKV; // 0x5e8	
	KeyValues* m_pOnAbilityPhaseStartKV; // 0x5f0	
	KeyValues* m_pOnAbilityPhaseInterruptedKV; // 0x5f8	
	KeyValues* m_pOnToggleOnKV; // 0x600	
	KeyValues* m_pOnToggleOffKV; // 0x608	
	KeyValues* m_pOnCreatedKV; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DataDriven : public CDOTA_Item
{
private:
	[[maybe_unused]] uint8_t __pad0610[0x18]; // 0x610
public:
	bool m_bProcsMagicStick; // 0x628	
	bool m_bIsSharedWithTeammates; // 0x629	
	bool m_bCastFilterRejectCaster; // 0x62a	
private:
	[[maybe_unused]] uint8_t __pad062b[0x1]; // 0x62b
public:
	float m_fAnimationPlaybackRate; // 0x62c	
	float m_fAOERadius; // 0x630	
	int32_t m_CastAnimation; // 0x634	
	CUtlVector< KeyValues* > m_ModifierKVDescriptions; // 0x638	
	KeyValues* m_pOnChannelFinishKV; // 0x650	
	KeyValues* m_pOnChannelSucceededKV; // 0x658	
	KeyValues* m_pOnChannelInterruptedKV; // 0x660	
	KeyValues* m_pOnOwnerSpawnedKV; // 0x668	
	KeyValues* m_pOnOwnerDiedKV; // 0x670	
	KeyValues* m_pOnProjectileHitUnitKV; // 0x678	
	KeyValues* m_pOnProjectileFinishKV; // 0x680	
	KeyValues* m_pOnSpellStartKV; // 0x688	
	KeyValues* m_pOnAbilityPhaseStartKV; // 0x690	
	KeyValues* m_pOnToggleOnKV; // 0x698	
	KeyValues* m_pOnToggleOffKV; // 0x6a0	
	KeyValues* m_pOnEquipKV; // 0x6a8	
	KeyValues* m_pOnUnequipKV; // 0x6b0	
	KeyValues* m_pOnCreatedKV; // 0x6b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x3938
// Has VTable
class CDOTA_Modifier_DataDriven : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x18]; // 0x1318
public:
	AbilityID_t m_nAbilityID; // 0x1330	
	int32_t m_nIndexInAbility; // 0x1334	
	bool m_bIsHidden; // 0x1338	
	bool m_bIsDebuff; // 0x1339	
	bool m_bIsPurgable; // 0x133a	
	bool m_bIsStunDebuff; // 0x133b	
	bool m_bAllowIllusionDuplicate; // 0x133c	
	bool m_bRemoveOnDeath; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	char* m_pszAuraModifier; // 0x1340	
	int32_t m_nAuraModifierIndex; // 0x1348	
	int32_t m_nAuraRadius; // 0x134c	
	int32_t m_nAuraSearchTeam; // 0x1350	
	int32_t m_nAuraSearchType; // 0x1354	
	int32_t m_nAuraSearchFlags; // 0x1358	
	bool m_bAuraApplyToCaster; // 0x135c	
	bool m_bAuraApplyToParent; // 0x135d	
private:
	[[maybe_unused]] uint8_t __pad135e[0x2]; // 0x135e
public:
	int32_t m_nAttributes; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	char* m_pszEffectName; // 0x1368	
	int32_t m_nEffectAttachType; // 0x1370	
	int32_t m_nPriority; // 0x1374	
	char* m_pszStatusEffectName; // 0x1378	
	int32_t m_nStatusEffectPriority; // 0x1380	
	int32_t m_nOverrideAnimation; // 0x1384	
	int32_t m_nOrbPriority; // 0x1388	
	int32_t m_nOrbLabel; // 0x138c	
	bool m_bOrbIsCastAttack; // 0x1390	
private:
	[[maybe_unused]] uint8_t __pad1391[0x3]; // 0x1391
public:
	float m_flThinkInterval; // 0x1394	
	bool m_bNeedsReParseIfRefreshed; // 0x1398	
private:
	[[maybe_unused]] uint8_t __pad1399[0x7]; // 0x1399
public:
	char* m_pszModelName; // 0x13a0	
	char* m_pszOrbProjectileName; // 0x13a8	
private:
	[[maybe_unused]] uint8_t __pad13b0[0x2480]; // 0x13b0
public:
	uint64_t m_nModifierStatesEnabled; // 0x3830	
	uint64_t m_nModifierStatesDisabled; // 0x3838	
	KeyValues* m_pOnCreated; // 0x3840	
	KeyValues* m_pOnIntervalThink; // 0x3848	
	KeyValues* m_pOnDestroy; // 0x3850	
	KeyValues* m_pOnAttackStart; // 0x3858	
	KeyValues* m_pOnAttack; // 0x3860	
	KeyValues* m_pOnAttackLanded; // 0x3868	
	KeyValues* m_pOnAttackFailed; // 0x3870	
	KeyValues* m_pOnAttackAllied; // 0x3878	
	KeyValues* m_pOnProjectileDodge; // 0x3880	
	KeyValues* m_pOnOrder; // 0x3888	
	KeyValues* m_pOnUnitMoved; // 0x3890	
	KeyValues* m_pOnAbilityStart; // 0x3898	
	KeyValues* m_pOnAbilityExecuted; // 0x38a0	
	KeyValues* m_pOnBreakInvisibility; // 0x38a8	
	KeyValues* m_pOnAbilityEndChannel; // 0x38b0	
	KeyValues* m_pOnTakeDamage; // 0x38b8	
	KeyValues* m_pOnDealDamage; // 0x38c0	
	KeyValues* m_pOnStateChanged; // 0x38c8	
	KeyValues* m_pOnAttacked; // 0x38d0	
	KeyValues* m_pOnDeath; // 0x38d8	
	KeyValues* m_pOnKill; // 0x38e0	
	KeyValues* m_pOnRespawn; // 0x38e8	
	KeyValues* m_pOnSpentMana; // 0x38f0	
	KeyValues* m_pOnTeleporting; // 0x38f8	
	KeyValues* m_pOnTeleported; // 0x3900	
	KeyValues* m_pOnHealthGained; // 0x3908	
	KeyValues* m_pOnManaGained; // 0x3910	
	KeyValues* m_pOnHeroKilled; // 0x3918	
	KeyValues* m_pOnHealReceived; // 0x3920	
	KeyValues* m_pOnAttackFinished; // 0x3928	
	KeyValues* m_pOnAttackCancelled; // 0x3930	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lua : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1408
// Has VTable
class CDOTA_Modifier_Lua : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0xe8]; // 0x1318
public:
	bool m_bHasCustomTransmitterData; // 0x1400	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1408
// Has VTable
class CDOTA_Modifier_Lua_Horizontal_Motion : public CDOTA_Modifier_Lua
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1408
// Has VTable
class CDOTA_Modifier_Lua_Vertical_Motion : public CDOTA_Modifier_Lua
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1408
// Has VTable
class CDOTA_Modifier_Lua_Motion_Both : public CDOTA_Modifier_Lua
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x658
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Lua : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_Thunder_Strike_Interval_Upgrade : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_Thunder_Strike_Mana_Restore : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_Thunder_Strike_Crit_Chance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_Thunder_Strike_On_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Disruptor_Thunder_Strike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_Thunder_Strike : public CDOTA_Buff
{
public:
	float strike_interval; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t strike_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Disruptor_Thunder_Strike_On_Attack : public CDOTA_Buff
{
public:
	int32_t strike_chance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_Thunder_Strike_Slow : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_Glimpse_Cast_AoE : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_Glimpse_Hit_On_Arrival : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_Glimpse_Travel_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Disruptor_Glimpse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t m_nNPCSpawnedID; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_Glimpse : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[9]; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_Glimpse_Attack_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_Glimpse_Thinker : public CDOTA_Buff
{
public:
	Vector m_vStartLoc; // 0x1318	
	CHandle< CBaseEntity > m_hEntity; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_Glimpse_Travel_Damage : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	int32_t max_ticks; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_KineticField_Instant_Setup : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_KineticField_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_KineticField_DoubleRing : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_KineticField_Allied_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_KineticField_Allied_AttackBuff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Disruptor_KineticField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_KineticFieldThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float formation_time; // 0x131c	
	bool m_bActive; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_KineticField : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	Vector m_vOriginLoc; // 0x131c	
	bool m_bCanBeAffected; // 0x1328	
	bool m_bTruesight; // 0x1329	
private:
	[[maybe_unused]] uint8_t __pad132a[0x2]; // 0x132a
public:
	int32_t intellect_bonus; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_StaticStorm_Kinetic_Field_On_Cast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_StaticStorm_Crits_On_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Disruptor_StaticStorm_Damage_Reduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Disruptor_StaticStorm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_StaticStormThinker : public CDOTA_Buff
{
public:
	int32_t m_nCurrentPulse; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t damage_max; // 0x1320	
	int32_t pulses; // 0x1324	
	float duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_StaticStorm : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
	int32_t movement_speed_reduction; // 0x131c	
	int32_t attack_speed_reduction; // 0x1320	
	bool m_bHasScepter; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_StaticStormMute : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Disruptor_StaticStorm_Damage_Reduction : public CDOTA_Buff
{
public:
	int32_t damage_reduction_pct; // 0x1318	
	int32_t move_slow_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Disruptor_ThunderStrike_Int_Increase : public CDOTA_Buff
{
public:
	int32_t int_increase_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Disruptor_ThunderStrike_Int_Increase_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Magnataur_Horn_Toss : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Horn_Toss : public CDOTA_Buff
{
public:
	float air_duration; // 0x1318	
	int32_t air_height; // 0x131c	
	int32_t travel_distance; // 0x1320	
	Vector m_vDestination; // 0x1324	
	float m_flStartZ; // 0x1330	
	float m_flCurTime; // 0x1334	
	float m_flJumpDuration; // 0x1338	
	float m_flJumpHeight; // 0x133c	
	Vector m_vTargetHorizontalDirection; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Horn_Toss_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Magnataur_Shockwave : public CDOTABaseAbility
{
public:
	CUtlVector< ParticleIndex_t > m_nFXIndices; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Shockwave_Multishot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Shockwave_Damage_Reduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Shockwave_Damage_Increase : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Magnataur_Shockwave_Damage_Reduction : public CDOTA_Buff
{
public:
	int32_t damage_reduction_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Shockwave_Boomerang : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Shockwave : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Shockwave_Pull : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float pull_duration; // 0x132c	
	float effective_distance; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Magnataur_ReversePolarity : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	Vector m_vPullLocation; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Magnataur_Empower : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Empower : public CDOTA_Buff
{
public:
	int32_t bonus_damage_pct; // 0x1318	
	float cleave_damage_pct; // 0x131c	
	int32_t cleave_starting_width; // 0x1320	
	int32_t cleave_ending_width; // 0x1324	
	int32_t cleave_distance; // 0x1328	
	float splash_damage_pct; // 0x132c	
	int32_t splash_radius; // 0x1330	
	float self_multiplier; // 0x1334	
	int32_t lifesteal_pct; // 0x1338	
	GameTime_t m_fLastShockwaveProcTime; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Empower_All_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Empower_Charges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Empower_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Empower_ShockwaveOnAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Magnataur_Skewer : public CDOTABaseAbility
{
public:
	int32_t skewer_radius; // 0x568	
	int32_t skewer_speed; // 0x56c	
	int32_t range; // 0x570	
	int32_t tree_radius; // 0x574	
	int32_t m_nProjectileID; // 0x578	
	int32_t m_nVisibleTargetCount; // 0x57c	
	Vector m_vSkewerDirection; // 0x580	
	int32_t m_nTargetsHit; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Skewer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Skewer_Impact : public CDOTA_Buff
{
public:
	float slow_duration; // 0x1318	
	int32_t skewer_damage; // 0x131c	
	Vector m_vDirection; // 0x1320	
	float m_flEndTime; // 0x132c	
	float m_flCurTime; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_Skewer_Slow : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Magnataur_FriendlySkewer : public CDOTABaseAbility
{
public:
	int32_t skewer_radius; // 0x568	
	int32_t skewer_speed; // 0x56c	
	int32_t max_targets; // 0x570	
	int32_t range; // 0x574	
	int32_t tree_radius; // 0x578	
	int32_t affects_creeps; // 0x57c	
	int32_t m_nProjectileID; // 0x580	
	int32_t m_nTargetsHit; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Magnataur_Skewer_Bonus_Strength : public CDOTA_Buff
{
public:
	int32_t strength_gain; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Skewer_OriginalScepter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Skewer_BonusStrength : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Skewer_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Skewer_Shockwave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Skewer_HornToss : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_ReversePolarity : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_ReversePolarity_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Reverse_Polarity_Radius : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Reverse_Polarity_Allies_Crit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Reverse_Polarity_Steroid : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Magnataur_ReversePolarity_Steroid : public CDOTA_Buff
{
public:
	int32_t move_speed_percent; // 0x1318	
	int32_t attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Magnataur_Reverse_Polarity_Polarity_Dummy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Magnataur_Reverse_Polarity_Polarity_Dummy : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Magnataur_ReversePolarity_Polarity : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	Vector m_vPullLocation; // 0x56c	
	CDOTABaseAbility* pAbilityPrimaryPolarity; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_Stifling_Dagger_No_Secondary_Dagger_Restriction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_Stifling_Dagger_On_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_Stifling_Dagger_AutoDagger : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PhantomAssassin_Stifling_Dagger : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PhantomAssassin_StiflingDagger_Caster : public CDOTA_Buff
{
public:
	int32_t base_damage; // 0x1318	
	int32_t attack_factor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PhantomAssassin_StiflingDagger : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_PhantomAssassin_Stifling_Dagger_On_Attack : public CDOTA_Buff
{
public:
	int32_t strike_chance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_PhantomAssassin_Stifling_Dagger_AutoDagger : public CDOTA_Buff
{
public:
	float fire_rate; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_PhantomStrike_Buff_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_PhantomStrike_Mastery : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_PhantomStrike_Damage_Reduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PhantomAssassin_PhantomStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PhantomAssassin_PhantomStrike : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_evasion; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_PhantomAssassin_PhantomStrike_Damage_Reduction : public CDOTA_Buff
{
public:
	int32_t damage_reduction_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_Blur_Regen_When_Active : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_Blur_Dagger_On_End : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_PhantomAssassin_Blur_Immediate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PhantomAssassin_Blur : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PhantomAssassin_Blur : public CDOTA_Buff
{
public:
	int32_t bonus_evasion; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_PhantomAssassin_BlurActive : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1328	
	float fade_duration; // 0x132c	
	bool m_bDestroyNext; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PhantomAssassin_CoupdeGrace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_PhantomAssassin_CoupdeGrace : public CDOTA_Buff
{
public:
	int32_t crit_bonus; // 0x1318	
	int32_t crit_chance; // 0x131c	
	bool crit_active; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t m_nAttackRecord; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_PhantomAssassin_MarkedForDeath : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_PhantomAssassin_CoupDeGrace_MarksTarget : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_PhantomAssassin_CoupDeGrace_Execute : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_PhantomAssassin_CoupDeGrace_KillsRefresh : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_PhantomAssassin_CoupDeGrace_BloodyDebuff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_PhantomAssassin_CoupDeGrace_BloodyDebuff : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Arctic_Burn_Splitshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Winter_Wyvern_Arctic_Burn_Splitshot : public CDOTA_Buff
{
public:
	int32_t damage_modifier; // 0x1318	
	int32_t split_shot_bonus_range; // 0x131c	
	int32_t arrow_count; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Arctic_Burn_DoubleAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Winter_Wyvern_Arctic_Burn_DoubleAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_iAttacksRemaining; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Arctic_Burn_NoMana : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Arctic_Burn_Splash_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Winter_Wyvern_Arctic_Burn : public CDOTABaseAbility
{
public:
	CUtlVector< CEntityIndex > m_BurnedTargets; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Arctic_Burn_Frost_Attack : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Arctic_Burn_Flight : public CDOTA_Buff
{
public:
	float attack_point; // 0x1318	
	int32_t attack_range_bonus; // 0x131c	
	int32_t projectile_speed_bonus; // 0x1320	
	int32_t night_vision_bonus; // 0x1324	
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Arctic_Burn_Slow : public CDOTA_Buff
{
public:
	float damage_per_second; // 0x1318	
	int32_t move_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Splinter_Blast_Main_Target_Hit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Splinter_Blast_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Splinter_Blast_Vacuum : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Winter_Wyvern_Splinter_Blast : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	int32_t splinter_damage; // 0x570	
	CHandle< CBaseEntity > m_hMainTarget; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Splinter_Blast_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Winter_Wyvern_Splinter_Blast_Vacuum : public CDOTA_Buff
{
public:
	float pull_speed; // 0x1318	
	Vector vPullLocation; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Cold_Embrace_Blast_On_End : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Cold_Embrace_Charges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Cold_Embrace_Magic_Damage_Block : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Winter_Wyvern_Cold_Embrace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Cold_Embrace : public CDOTA_Buff
{
public:
	int32_t m_nOriginalAttackCapability; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x8]; // 0x131c
public:
	bool m_bDidBlast; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	int32_t heal_additive; // 0x1328	
	float heal_percentage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Winter_Wyvern_Cold_Embrace_Magic_Damage_Block : public CDOTA_Buff
{
public:
	int32_t barrier_amount; // 0x1318	
	int32_t barrier_block; // 0x131c	
	int32_t m_nMaxMovementSpeed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Winters_Curse_Transfer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Winters_Curse_Damage_Amp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Winter_Wyvern_Winters_Curse_Heal_On_Death : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Winter_Wyvern_Winters_Curse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Winters_Curse_Kill_Credit : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Winters_Curse_Aura : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_nAlliesTaunted; // 0x131c	
	bool m_bRelicTriggered; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t radius; // 0x1324	
	int32_t damage_amplification; // 0x1328	
	int32_t damage_reduction; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Winter_Wyvern_Winters_Curse : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1318	
	CHandle< CBaseEntity > m_hDesiredTarget; // 0x131c	
	int32_t damage_reduction; // 0x1320	
	int32_t bonus_attack_speed; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Snapfire_MortimerKisses : public CDOTABaseAbility
{
public:
	int32_t m_nDamagePerProjectile; // 0x568	
	int32_t damage_per_impact; // 0x56c	
	int32_t impact_radius; // 0x570	
	int32_t projectile_vision; // 0x574	
	int32_t m_nFragmentationImpactRadius; // 0x578	
	int32_t firetrail_radius; // 0x57c	
	int32_t firetrail_damage; // 0x580	
	int32_t firetrail_tick_interval; // 0x584	
	CUtlVector< Vector > m_vFirePoolLocations; // 0x588	
	float m_fNextDamageTick; // 0x5a0	
	Vector m_vLastFirePoolLoc; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Snapfire_Scatterblast : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
	float debuff_duration; // 0x56c	
	int32_t point_blank_range; // 0x570	
	float point_blank_dmg_bonus_pct; // 0x574	
	int32_t blast_width_end; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_Scatterblast_Slow : public CDOTA_Buff
{
public:
	bool m_bIsPointBlank; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t movement_slow_pct; // 0x131c	
	int32_t attack_slow_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_Scatterblast_Disarm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Snapfire_FiresnapCookie : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x8]; // 0x56c
public:
	int32_t projectile_speed; // 0x574	
	float pre_hop_duration; // 0x578	
	float cast_on_ally_gesture_time; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_FiresnapCookie_PreHop : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1318	
	bool m_bMovesHorizontal; // 0x131c	
	bool m_bSecondaryCookie; // 0x131d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_FiresnapCookie_ShortHop : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1318	
	int32_t jump_height; // 0x131c	
	int32_t jump_horizontal_distance; // 0x1320	
	float pre_land_anim_time; // 0x1324	
	float landing_gesture_duration; // 0x1328	
	int32_t impact_radius; // 0x132c	
	int32_t impact_damage; // 0x1330	
	float impact_stun_duration; // 0x1334	
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
	float m_flJumpDuration; // 0x1340	
	float m_flJumpDistance; // 0x1344	
	float m_flJumpHeight; // 0x1348	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	bool m_bSecondaryCookie; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_FiresnapCookie_AllyFlailAnim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_FiresnapCookie_LandingGesture : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Snapfire_FiresnapCookie_AlliedBuff : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
	int32_t bonus_attack_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Snapfire_LilShredder : public CDOTABaseAbility
{
public:
	int32_t m_iAttackIndex; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< sLilShredderBounceInfo > m_BounceInfo; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_LilShredder_Buff : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	int32_t m_nIsActive; // 0x1338	
	bool m_bHasAttackTalent; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	int32_t attack_range_bonus; // 0x1340	
	int32_t buffed_attacks; // 0x1344	
	float base_attack_time; // 0x1348	
	int32_t attack_speed_bonus; // 0x134c	
	float armor_duration; // 0x1350	
	int32_t damage; // 0x1354	
	int32_t bounce_range; // 0x1358	
	int32_t bounces; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_LilShredder_Attack : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_LilShredder_Debuff : public CDOTA_Buff
{
public:
	float armor_reduction_per_attack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_MortimerKisses : public CDOTA_Buff
{
public:
	float m_fIntervalPerRocket; // 0x1318	
	float m_flFacingTarget; // 0x131c	
	ParticleIndex_t m_nBeamFXIndex; // 0x1320	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1324	
	float m_flCurDistance; // 0x1328	
	Vector m_vAimTarget; // 0x132c	
	float m_fLastTurnAmount; // 0x1338	
	int32_t m_nProjectilesLaunched; // 0x133c	
	bool m_bDestroyOnNextThink; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t m_nProjectilesToLaunch; // 0x1344	
	bool m_bHasProjectileTalent; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0xb]; // 0x1349
public:
	int32_t projectile_count; // 0x1354	
	int32_t projectile_vision; // 0x1358	
	float turn_rate; // 0x135c	
	int32_t min_range; // 0x1360	
	float delay_after_last_projectile; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_MortimerKisses_VisionSource : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_Magma_Thinker : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1318	
	int32_t impact_radius; // 0x131c	
	int32_t move_slow_pct; // 0x1320	
	float burn_linger_duration; // 0x1324	
	ParticleIndex_t m_nPathEffectIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_Magma_Burn_Slow : public CDOTA_Buff
{
public:
	int32_t m_nMoveSlowPct; // 0x1318	
	float m_fBurnDamagePerTick; // 0x131c	
	int32_t move_slow_pct; // 0x1320	
	float burn_interval; // 0x1324	
	int32_t burn_damage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Snapfire_GobbleUp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x568	
	float max_time_in_belly; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_GobbleUp_Creep : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_GobbleUp_BellyHasUnit : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x1318	
	float max_time_in_belly; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Snapfire_SpitCreep : public CDOTABaseAbility
{
public:
	int32_t m_nDamagePerProjectile; // 0x568	
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x56c	
	int32_t m_nProjectileID; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_Aghsfort_Snapfire_SpitCreep_ArcingUnit : public CDOTA_Buff
{
public:
	float m_flPredictedTotalTime; // 0x1318	
	Vector m_vStartPosition; // 0x131c	
	float m_flCurrentTimeHoriz; // 0x1328	
	float m_flCurrentTimeVert; // 0x132c	
	bool m_bHorizontalMotionInterrupted; // 0x1330	
	bool m_bDamageApplied; // 0x1331	
	bool m_bTargetTeleported; // 0x1332	
private:
	[[maybe_unused]] uint8_t __pad1333[0x1]; // 0x1333
public:
	Vector m_vHorizontalVelocity; // 0x1334	
	Vector m_vLastKnownTargetPosition; // 0x1340	
	float m_flInitialVelocityZ; // 0x134c	
	float m_fClampedProjectileSpeed; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x1354	
	float m_fAcceleration; // 0x1358	
	int32_t min_range; // 0x135c	
	float min_lob_travel_time; // 0x1360	
	float max_lob_travel_time; // 0x1364	
	int32_t impact_radius; // 0x1368	
	int32_t projectile_vision; // 0x136c	
	float stun_duration; // 0x1370	
	int32_t impact_damage; // 0x1374	
	float min_height_above_lowest; // 0x1378	
	float min_height_above_highest; // 0x137c	
	float min_acceleration; // 0x1380	
	float max_acceleration; // 0x1384	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_Scatterblast_Double_Barrel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_Scatterblast_Knockback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_Scatterblast_FullRange_PointBlank : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_Scatterblast_Barrage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_FiresnapCookie_MultiCookie : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_FiresnapCookie_EnemyTarget : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_FiresnapCookie_Allied_Buff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_LilShredder_Explosives : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_LilShredder_AllyCast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_LilShredder_Bouncing_Bullets : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_MortimerKisses_Fragmentation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_MortimerKisses_Incoming_Damage_Reduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_MortimerKisses_Fire_Trail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Snapfire_MortimerKisses_Autoattack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Snapfire_MortimerKisses_Autoattack : public CDOTA_Buff
{
public:
	float fire_rate; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Snapfire_MortimerKisses_Incoming_Damage_Reduction : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x668
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Tusk_Snowball_Dummy : public CDOTABaseAbility
{
public:
	int32_t snowball_radius; // 0x568	
	int32_t snowball_grow_rate; // 0x56c	
	int32_t snowball_damage; // 0x570	
	int32_t snowball_damage_bonus; // 0x574	
	float stun_duration; // 0x578	
	int32_t bonus_damage; // 0x57c	
	float bonus_stun; // 0x580	
	int32_t snowball_speed; // 0x584	
	float snowball_duration; // 0x588	
	bool m_bIsExpired; // 0x58c	
private:
	[[maybe_unused]] uint8_t __pad058d[0x3]; // 0x58d
public:
	Vector m_vProjectileLocation; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad059c[0x4]; // 0x59c
public:
	CountdownTimer ctSnowball; // 0x5a0	
	CUtlVector< CHandle< CBaseEntity > > m_hSnowballedUnits; // 0x5b8	
	ParticleIndex_t m_nFXIndex; // 0x5d0	
	CHandle< CBaseEntity > m_hPrimaryTarget; // 0x5d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Tusk_IceShards_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Tusk_IceShards : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x568	
	int32_t shard_width; // 0x56c	
	int32_t shard_damage; // 0x570	
	int32_t shard_count; // 0x574	
	float shard_speed; // 0x578	
	float shard_duration; // 0x57c	
	float shard_angle_step; // 0x580	
	int32_t shard_distance; // 0x584	
	int32_t secondary_damage_pct; // 0x588	
	Vector m_vSpawnOrigin; // 0x58c	
	Vector m_vDirection; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad05a4[0xc]; // 0x5a4
public:
	CDOTABaseAbility* m_pIceShardsStop; // 0x5b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_IceShard : public CDOTA_Buff
{
public:
	Vector m_vPos; // 0x1318	
	int32_t radius; // 0x1324	
	float damage; // 0x1328	
	float explosion_interval; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x688
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Tusk_Snowball : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t snowball_windup_radius; // 0x578	
	int32_t snowball_radius; // 0x57c	
	int32_t snowball_grow_rate; // 0x580	
	int32_t snowball_damage; // 0x584	
	int32_t snowball_damage_bonus; // 0x588	
	float stun_duration; // 0x58c	
	int32_t bonus_damage; // 0x590	
	float bonus_stun; // 0x594	
	int32_t snowball_speed; // 0x598	
	float snowball_duration; // 0x59c	
	Vector m_vProjectileLocation; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05ac[0x4]; // 0x5ac
public:
	CUtlVector< CHandle< CBaseEntity > > m_hSnowballedUnits; // 0x5b0	
	ParticleIndex_t m_nFXIndex; // 0x5c8	
private:
	[[maybe_unused]] uint8_t __pad05cc[0x4]; // 0x5cc
public:
	CountdownTimer ctSnowball; // 0x5d0	
	bool m_bSpeakAlly; // 0x5e8	
	bool m_bIsExpired; // 0x5e9	
	bool m_bInWindup; // 0x5ea	
private:
	[[maybe_unused]] uint8_t __pad05eb[0x1]; // 0x5eb
public:
	CHandle< CBaseEntity > m_hPrimaryTarget; // 0x5ec	
	int32_t m_nContainedValidUnits; // 0x5f0	
	bool m_bEndingSnowball; // 0x5f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Snowball_Target : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Tusk_Launch_Snowball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Snowball_Visible : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Snowball_Movement : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Snowball_Movement_Friendly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Tusk_WalrusPunch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_WalrusPunch : public CDOTA_Buff
{
public:
	int32_t crit_multiplier; // 0x1318	
	float air_time; // 0x131c	
	float slow_duration; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x1330	
	bool m_bWalrusPunch; // 0x1334	
	bool m_bPunchKill; // 0x1335	
private:
	[[maybe_unused]] uint8_t __pad1336[0x2]; // 0x1336
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x1350	
	int32_t m_nAttackRecord; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_WalrusPunch_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_WalrusPunch_AirTime : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	float m_flOldPitch; // 0x1324	
	QAngle m_qRotation; // 0x1328	
	int32_t m_nRotations; // 0x1334	
	Vector m_vDirection; // 0x1338	
	float flAirTime; // 0x1344	
	float m_flEndTime; // 0x1348	
	float m_fHorizontalDistance; // 0x134c	
	float m_fVerticalDistance; // 0x1350	
	float m_fDamage; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Tusk_Tag_Team : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Tag_Team_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Tag_Team : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	float slow_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Tag_Team_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_IceShards_Circle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_IceShards_Explode : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_IceShards_Stun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_IceShards_Snowball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_IceShards_Secondary : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_Snowball_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Tusk_Snowball_SpellLifesteal : public CDOTA_Buff
{
public:
	float spell_lifesteal_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_Snowball_End_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_Snowball_Global : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_TagTeam_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_TagTeam_Toggle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_TagTeam_DeathCooldown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_TagTeam_Global : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_Walrus_Punch_Reset : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_Walrus_Punch_Land_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Tusk_Walrus_Punch_Wallop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Tusk_Ice_Shards_Explode_Dummy : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ursa_Overpower : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ursa_Fury_Swipes : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Fury_Swipes : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1318	
	float bonus_reset_time; // 0x131c	
	float bonus_reset_time_roshan; // 0x1320	
	int32_t max_swipe_stack; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Fury_Swipes_Damage_Increase : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1318	
	int32_t m_nArmorReductionPerStack; // 0x131c	
	int32_t m_nLifestealPerStack; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ursa_Earthshock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Earthshock_Move : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1318	
	int32_t hop_height; // 0x131c	
	int32_t hop_distance; // 0x1320	
	int32_t impact_damage; // 0x1324	
	float m_flStartZ; // 0x1328	
	float m_flCurTime; // 0x132c	
	float m_flJumpDuration; // 0x1330	
	float m_flJumpHeight; // 0x1334	
	Vector m_vTargetHorizontalDirection; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Overpower : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus_pct; // 0x1318	
	int32_t m_nEarthshockAttacks; // 0x131c	
	int32_t m_nOverpowerCritMultiplier; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Earthshock : public CDOTA_Buff
{
public:
	int32_t m_nMissChance; // 0x1318	
	bool m_bAddOverpower; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	float m_flOverpowerDuration; // 0x1320	
	int32_t m_nNumOverpowerAttacks; // 0x1324	
	int32_t movement_slow; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Earthshock_DeepInvis : public CDOTA_Modifier_Invisible
{
public:
	CHandle< CBaseEntity > m_hVisibleEntity; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Earthshock_DeepInvis_Visual : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Ursa_Earthshock_Knockback : public CDOTA_Modifier_Knockback
{
public:
	float value3; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Overpower_Evasion : public CDOTA_Buff
{
public:
	int32_t value2; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Ursa_Overpower_Taunt : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1318	
	bool m_bDidSetAttackTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Ursa_Overpower_Taunt_Armor : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Ursa_Enrage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Enrage : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	int32_t status_resistance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Enrage_Magic_Immunity : public CDOTA_Modifier_MagicImmune
{
public:
	int32_t m_nModelScale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Ursa_Enrage_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Ursa_Enrage_Armor : public CDOTA_Buff
{
public:
	int32_t value2; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Ursa_Enrage_AttackSpeed : public CDOTA_Buff
{
public:
	int32_t value2; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Earthshock_Invis : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Earthshock_ApplyFurySwipes : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Earthshock_OverpowerStack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Earthshock_Knockback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Earthshock_MissChance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Overpower_Crit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Overpower_Evasion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Overpower_Taunt : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Overpower_Cleave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_FurySwipes_ArmorReduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_FurySwipes_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_FurySwipes_UrsaMinor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Enrage_Magic_Immunity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Enrage_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Enrage_Fear : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Enrage_Armor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Enrage_AttackSpeed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Ursa_Enrage_Earthshock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Mars_Spear : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
	CUtlVector< int32 > m_vecProjectileHandles; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0598[0x8]; // 0x598
public:
	int32_t damage; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05a4[0x4]; // 0x5a4
public:
	CUtlVector< CHandle< CBaseEntity > > hImpaledTargetList; // 0x5a8	
	int32_t m_nTargetsImpaled; // 0x5c0	
	int32_t m_nMaxImpaleTargets; // 0x5c4	
	int32_t m_nBurningTrailRadius; // 0x5c8	
	Vector m_vLastTrailThinkerLocation; // 0x5cc	
	bool bHasStartedBurning; // 0x5d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_Spear_Impale : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1318	
	bool m_bLatched; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_Spear_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Mars_ArenaOfBlood : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1318	
	float formation_time; // 0x131c	
	float m_flInitialZ; // 0x1320	
	float m_flFinalZ; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1328[0x10]; // 0x1328
public:
	bool m_bCaughtOne; // 0x1338	
	bool m_bKilledOne; // 0x1339	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_AnimationAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_Animation : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_BuffAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_Buff : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1318	
	int32_t attack_speed; // 0x131c	
	int32_t bonus_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t width; // 0x131c	
	int32_t spear_damage; // 0x1320	
	int32_t spear_distance_from_wall; // 0x1324	
	float spear_attack_interval; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x34]; // 0x132c
public:
	int32_t m_hObstruction; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< Vector > m_vecAvoidLocations; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_Spear : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_Leash : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float width; // 0x131c	
	Vector m_vOriginLoc; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_ArenaOfBlood_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Mars_GodsRebuke : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_Gods_Rebuke : public CDOTA_Buff
{
public:
	int32_t knockback_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_GodsRebuke_Crit : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Mars_Bulwark : public CDOTABaseAbility
{
public:
	float active_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Mars_Bulwark_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_Bulwark : public CDOTA_Buff
{
public:
	float physical_damage_reduction; // 0x1318	
	float physical_damage_reduction_side; // 0x131c	
	float forward_angle; // 0x1320	
	float side_angle; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_Bulwark_Active : public CDOTA_Buff
{
public:
	int32_t redirect_chance; // 0x1318	
	int32_t redirect_range; // 0x131c	
	float forward_angle; // 0x1320	
	float side_angle; // 0x1324	
	int32_t redirect_speed_penatly; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Mars_Spear_Burning_Trail_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1318	
	int32_t path_radius; // 0x1324	
	float linger_duration; // 0x1328	
	float flDamage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Mars_Spear_Burning_Trail_Burn : public CDOTA_Buff
{
public:
	float flDamage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Mars_Gods_Rebuke_Strength_Buff : public CDOTA_Buff
{
public:
	int32_t strength_gain; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Spear_MultiSkewer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Spear_ImpaleExplosion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Spear_BurningTrail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_GodsRebuke_FullCircle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_GodsRebuke_Stun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_GodsRebuke_Strength_Buff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Bulwark_Counter_Rebuke : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Bulwark_Healing : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Bulwark_Return : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Bulwark_Spears : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Bulwark_Soldiers : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Arena_Of_Blood_Fear : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Arena_Of_Blood_Global : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Arena_Of_Blood_Attack_Buff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Mars_Arena_Of_Blood_Outside_Perimeter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Mars_Bulwark_Spears : public CDOTA_Buff
{
public:
	int32_t stack_limit; // 0x1318	
	float stack_interval; // 0x131c	
	ParticleIndex_t m_nFxIndexB; // 0x1320	
	int32_t iCur_stack; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Mars_Bulwark_Soldier_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Weaver_TheSwarm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Weaver_Swarm : public CDOTA_Buff
{
public:
	int32_t m_iMaxDist; // 0x1318	
	int32_t m_iAttackCount; // 0x131c	
	int32_t destroy_attacks; // 0x1320	
	Vector m_vDirection; // 0x1324	
	Vector m_vStartLoc; // 0x1330	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Weaver_Swarm_Debuff : public CDOTA_Buff
{
public:
	float armor_reduction; // 0x1318	
	int32_t damage; // 0x131c	
	int32_t damage_share_percentage; // 0x1320	
	float m_flCurrentArmorReduction; // 0x1324	
	float flTotalDamage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Weaver_Shukuchi : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	int32_t radius; // 0x56c	
	int32_t damage; // 0x570	
	float fade_time; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Aghsfort_Weaver_Shukuchi : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1328	
	int32_t damage; // 0x132c	
	int32_t speed; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1338	
	bool bHasStartedBurning; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	int32_t m_nBurningTrailRadius; // 0x1354	
	Vector m_vLastTrailThinkerLocation; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Weaver_GeminateAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
class CDOTA_Modifier_Aghsfort_Weaver_GeminateAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_iAttacksRemaining; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Weaver_GeminateAttack_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Weaver_TimeLapse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t m_nNPCSpawnedID; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
class CDOTA_Modifier_Aghsfort_Weaver_TimeLapse : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[11]; // 0x1318	
	float m_flLife[11]; // 0x139c	
	float m_flMana[11]; // 0x13c8	
	bool m_bHasValidHistory; // 0x13f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Weaver_Shukuchi_Trail_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1318	
	int32_t path_radius; // 0x1324	
	float linger_duration; // 0x1328	
	float flDamage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Weaver_Shukuchi_Trail_Burn : public CDOTA_Buff
{
public:
	float flDamage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Swarm_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Swarm_Explosion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Swarm_Damage_Transfer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Geminate_Attack_Splitshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Geminate_Attack_Applies_Swarm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Geminate_Attack_Knockback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Geminate_Attack_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Shukuchi_Pull : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Shukuchi_Trail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Shukuchi_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Shukuchi_Attack_On_Completion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Shukuchi_Swarm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Shukuchi_Greater_Invisibility : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Time_Lapse_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Time_Lapse_Restoration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Weaver_Time_Lapse_Explosion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_PoisonAttackExplode : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_PoisonAttackSpread : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_PoisonSnap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Viper_PoisonAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_PoisonAttack : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_PoisonAttack_Slow : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t magic_resistance; // 0x1320	
	float m_flAccumDamage; // 0x1324	
	float m_flPoisonSnapCounter; // 0x1328	
	int32_t m_nPoisonSnapThreshold; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Viper_NethertoxinCharges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Viper_NethertoxinLifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Viper_Nethertoxin_Persist : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Viper_Nethertoxin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_Nethertoxin_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_Nethertoxin : public CDOTA_Buff
{
public:
	int32_t min_damage; // 0x1318	
	int32_t max_damage; // 0x131c	
	float max_duration; // 0x1320	
	float m_flDamageInterval; // 0x1324	
	float m_flTimeIncrement; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_NethertoxinMute : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_CorrosiveSkinFlying : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_CorrosiveSkinSpeedSteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_CorrosiveSkin_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_CorrosiveSkin_Flying : public CDOTA_Buff
{
public:
	int32_t m_nRadius; // 0x1318	
	float duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Viper_CorrosiveSkin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_CorrosiveSkin_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_CorrosiveSkin : public CDOTA_Buff
{
public:
	int32_t bonus_magic_resistance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_CorrosiveSkin_Speed_Steal : public CDOTA_Buff
{
public:
	float m_flFactor; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_CorrosiveSkin_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_ViperStrikeAllies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_ChainViperStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_ChanneledViperStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Viper_PeriodicViperStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Viper_Aghsfort_ViperStrike : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	int32_t m_nTargetTeam; // 0x56c	
	float m_flNextViperStrikeTime; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Viper_ViperStrike_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t damage; // 0x1320	
	bool m_bTargetedAlly; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Viper_Periodic_Strike : public CDOTA_Buff
{
public:
	float fire_rate; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t m_nTargetTeam; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAlreadyHit; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpiritBoss_Passive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpiritBoss_AetherRemnant : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXPreview; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x8]; // 0x56c
public:
	Vector m_vDashPosition; // 0x574	
	Vector m_vFacePosition; // 0x580	
	Vector m_vEndpoint; // 0x58c	
	int32_t start_radius; // 0x598	
	int32_t end_radius; // 0x59c	
	int32_t remnant_watch_distance; // 0x5a0	
	int32_t projectile_speed; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AetherRemnant_Unit : public CDOTA_Buff
{
public:
	Vector m_vFacingDir; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< CHandle< CBaseEntity > > m_hWatchPathThinkers; // 0x1328	
	ParticleIndex_t m_nBeamFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int32 > m_nViewerIDs; // 0x1348	
	int32_t remnant_watch_distance; // 0x1360	
	int32_t remnant_watch_radius; // 0x1364	
	float duration; // 0x1368	
	int32_t watch_path_vision_radius; // 0x136c	
	int32_t impact_damage; // 0x1370	
	float pull_duration; // 0x1374	
	float activation_delay; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AetherRemnant_WatchThinker : public CDOTA_Buff
{
public:
	int32_t remnant_watch_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AetherRemnant_Pull : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	PlayerID_t m_nPlayerID; // 0x131c	
	float m_fMovementSpeed; // 0x1320	
	CHandle< CDOTA_BaseNPC > m_hPullTarget; // 0x1324	
	float think_interval; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AetherRemnantThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	Vector m_vFacingDir; // 0x131c	
	CHandle< CBaseEntity > m_hRemnant; // 0x1328	
	bool m_bTriggered; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	float m_flCurThink; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AetherRemnantUnit_Truesight : public CDOTA_Buff
{
public:
	int32_t m_nRadius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AstralStep_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpiritBoss_AstralStep : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXPreview; // 0x568	
	ParticleIndex_t m_nFXDestinationPreview; // 0x56c	
	Vector m_vStartPos; // 0x570	
	Vector m_vDestination; // 0x57c	
	Vector m_vDirection; // 0x588	
	int32_t radius; // 0x594	
	int32_t min_travel_distance; // 0x598	
	int32_t max_travel_distance; // 0x59c	
	float debuff_duration; // 0x5a0	
	float pop_damage_delay; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AstralStep_Debuff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXStackIndex; // 0x1318	
	int32_t movement_slow_pct; // 0x131c	
	int32_t pop_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_AstralStep_Caster : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpiritBoss_Dissimilate : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXPreview; // 0x568	
	float phase_duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_Dissimilate_Phase : public CDOTA_Buff
{
public:
	Vector m_vFirstPortalPos; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< Vector > m_vecDestinations; // 0x1328	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles; // 0x1340	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles_EnemyTeam; // 0x1358	
	int32_t m_nCurrentDestinationIndex; // 0x1370	
	int32_t m_nClosestIndexPosToClick; // 0x1374	
	int32_t m_nPortalHeightOffset; // 0x1378	
private:
	[[maybe_unused]] uint8_t __pad137c[0x4]; // 0x137c
public:
	char* m_szAlliesPortalFX; // 0x1380	
	char* m_szEnemiesPortalFX; // 0x1388	
	int32_t m_nPortalRadius; // 0x1390	
	int32_t m_nPortalPadding; // 0x1394	
	int32_t m_nFinalImpactDamageRadius; // 0x1398	
	int32_t m_nFinalImpactFXRadius; // 0x139c	
	int32_t destination_fx_radius; // 0x13a0	
	int32_t damage_radius; // 0x13a4	
	int32_t portals_per_ring; // 0x13a8	
	int32_t angle_per_ring_portal; // 0x13ac	
	int32_t first_ring_distance_offset; // 0x13b0	
	float debuff_duration; // 0x13b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_Dissimilate_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_ResonantPulse_PhysicalBuff : public CDOTA_Buff
{
public:
	int32_t base_absorb_amount; // 0x1318	
	int32_t m_nAbsorbRemaining; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpiritBoss_ResonantPulse : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXPreview; // 0x568	
	bool m_bGrantedScepterCharges; // 0x56c	
private:
	[[maybe_unused]] uint8_t __pad056d[0x3]; // 0x56d
public:
	float buff_duration; // 0x570	
	int32_t base_absorb_amount; // 0x574	
	int32_t absorb_per_hero_hit; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpiritBoss_ResonantPulse_Ring : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1328	
	int32_t speed; // 0x1340	
	int32_t radius; // 0x1344	
	int32_t damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Sniper_Shrapnel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Shrapnel_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float duration; // 0x131c	
	float damage_delay; // 0x1320	
	int32_t m_nShrapnelPct; // 0x1324	
	bool m_bExploded; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Sniper_TakeAim_Artillery_Thinker : public CDOTA_Modifier_AghsFort_Sniper_Shrapnel_Thinker
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Shrapnel_Slow : public CDOTA_Buff
{
public:
	float m_fAccumulatedDamage; // 0x1318	
	int32_t shrapnel_damage; // 0x131c	
	int32_t slow_movement_speed; // 0x1320	
	int32_t miss_chance; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Sniper_TakeAim_Artillery_Slow : public CDOTA_Modifier_AghsFort_Sniper_Shrapnel_Slow
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Shrapnel_AttackSpeed : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
	float value2; // 0x131c	
	int32_t m_nAttackSpeedBonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Shrapnel_AttackSpeed_Decrementer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Sniper_Headshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Headshot : public CDOTA_Buff
{
public:
	int32_t proc_chance; // 0x1318	
	float slow_duration; // 0x131c	
	int32_t damage; // 0x1320	
	int32_t knockback_distance; // 0x1324	
	GameTime_t m_fLastStunProcTime; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlVector< int16 > m_vHeadshotRecords; // 0x1330	
	CUtlVector< int16 > m_vHeadshotAssassinateRecords; // 0x1348	
	int32_t m_nCritPct; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Sniper_Shotgun : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Headshot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t slow_vs_considered_hero; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Sniper_TakeAim : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_TakeAim : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
	int32_t active_attack_range_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_TakeAim_Bonus : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t m_nAttackSpeedPerAttack; // 0x131c	
	int32_t m_nShrapnelPct; // 0x1320	
	bool m_bNoCollision; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecArtilleryEnemies; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_TakeAim_ArmorReduction : public CDOTA_Buff
{
public:
	int32_t value2; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_TakeAim_RapidFire : public CDOTA_Buff
{
public:
	int32_t value2; // 0x1318	
	int32_t value3; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_TakeAim_AOE_Marked : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_TakeAim_HopBackwards : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bDamageApplied; // 0x133d	
	bool m_bTargetTeleported; // 0x133e	
private:
	[[maybe_unused]] uint8_t __pad133f[0x1]; // 0x133f
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Sniper_Assassinate : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	CHandle< CBaseEntity > m_hTarget; // 0x570	
	ParticleIndex_t m_iIndex; // 0x574	
	bool m_bHasBuckshotAbility; // 0x578	
	bool m_bInBuckshot; // 0x579	
private:
	[[maybe_unused]] uint8_t __pad057a[0x2]; // 0x57a
public:
	int32_t m_nScatterRange; // 0x57c	
	int32_t m_nScatterWidth; // 0x580	
	int32_t m_nBuckshotDamagePct; // 0x584	
	int32_t m_nDamageType; // 0x588	
	int32_t damage; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Assassinate : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Sniper_Assassinate_Killshot : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Shrapnel_Bombs : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Shrapnel_AttackSpeed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Shrapnel_MissChance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Shrapnel_MoveSpeed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Headshot_Crits : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Headshot_Stuns : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_TakeAim_SelfPurge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_TakeAim_Shrapnel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_TakeAim_AOE : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_TakeAim_HopBackwards : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_TakeAim_ArmorReduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_TakeAim_RapidFire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Assassinate_Buckshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Assassinate_OriginalScepter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Assassinate_Killshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Assassinate_ConcussiveDummy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Headshot_Shotgun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Sniper_Concussive_Grenade : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Sniper_Concussive_Grenade : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Headshot_Assassinate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Sniper_Headshot_ArmorReduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Sniper_Headshot_ArmorReduction : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_EarthSpiritBoss_StoneCaller : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_StoneThinker : public CDOTA_Buff
{
public:
	bool m_bHasBeenMagnetized; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_EarthSpiritBoss_BoulderSmash : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x568	
	int32_t rock_damage; // 0x56c	
	int32_t radius; // 0x570	
	int32_t rock_search_aoe; // 0x574	
	float unit_distance; // 0x578	
	float rock_distance; // 0x57c	
	int32_t m_nProjectileID; // 0x580	
	CHandle< CBaseEntity > m_hCursorTarget; // 0x584	
	bool m_bUsedStone; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	CHandle< CBaseEntity > m_hTarget; // 0x58c	
	bool m_bTargetStone; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x7]; // 0x591
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecBoulderSmashedEnts; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_BoulderSmash : public CDOTA_Buff
{
public:
	bool m_bInterrupted; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t m_nProjectileID; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_EarthSpiritBoss_RollingBoulder : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t radius; // 0x578	
	int32_t speed; // 0x57c	
	int32_t rock_speed; // 0x580	
	int32_t damage; // 0x584	
	float distance; // 0x588	
	float rock_distance; // 0x58c	
	float slow_duration; // 0x590	
	ParticleIndex_t m_nFXIndex; // 0x594	
	bool m_boulderSetposBool; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad0599[0x3]; // 0x599
public:
	int32_t m_nProjectileID; // 0x59c	
	Vector m_vStartingLocation; // 0x5a0	
	Vector m_vProjectileLocation; // 0x5ac	
	Vector m_vDir; // 0x5b8	
	Vector m_vVel; // 0x5c4	
	bool m_bUsedStone; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_RollingBoulder_Caster : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_BoulderSmash_Debuff : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_GeogmagneticGrip_Debuff : public CDOTA_Modifier_Silence
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_EarthSpiritBoss_GeomagneticGrip : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_GeomagneticGrip : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t rock_damage; // 0x131c	
	float pull_units_per_second; // 0x1320	
	float pull_units_per_second_heroes; // 0x1324	
	float total_pull_distance; // 0x1328	
	float duration; // 0x132c	
	bool m_bUsedStone; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	Vector m_vDestination; // 0x1334	
	Vector m_vLocation; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_Petrify : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	bool m_bHasBeenMagnetized; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_EarthSpiritBoss_Magnetize : public CDOTABaseAbility
{
public:
	int32_t cast_radius; // 0x568	
	int32_t rock_explosion_radius; // 0x56c	
	float damage_duration; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_AghsFort_EarthSpiritBoss_Magnetize : public CDOTA_Buff
{
public:
	int32_t rock_search_radius; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	float damage_interval; // 0x1320	
	float rock_explosion_delay; // 0x1324	
	float damage_duration; // 0x1328	
	int32_t cast_radius; // 0x132c	
	int32_t rock_explosion_radius; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CHandle< CBaseEntity > > m_hExplodedRocks; // 0x1338	
	float duration; // 0x1350	
	bool m_bShowOverhead; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_EarthSpiritBoss_Petrify : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Purification_Cast_Radius : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Purification_Charges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Purification_Cooldown_Reduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Omniknight_Purification_Cooldown_Reduction : public CDOTA_Buff
{
public:
	float cooldown_reduction_per_hit; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Purification_Multicast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Omniknight_Purification : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Omniknight_Purification_Multicast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Omniknight_Degen_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Omniknight_Degen_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Omniknight_Degen_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t move_speed_bonus; // 0x1318	
	int32_t attack_speed_bonus; // 0x131c	
	float damage_interval; // 0x1320	
	int32_t attack_damage_pct; // 0x1324	
	int32_t death_heal; // 0x1328	
	bool bIsAllied; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Omniknight_Repel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Omniknight_Repel : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	float hp_regen; // 0x131c	
	int32_t bonus_str; // 0x1320	
	int32_t damage_increase_outgoing_pct; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Omniknight_GuardianAngel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Omniknight_GuardianAngel : public CDOTA_Buff
{
public:
	int32_t hp_regen; // 0x1318	
	int32_t magic_resistance; // 0x131c	
	int32_t purification_trigger_chance; // 0x1320	
	float purification_trigger_cooldown; // 0x1324	
	GameTime_t m_fLastProc; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Repel_Procs_Purification : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Repel_Outgoing_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Repel_Applies_Degen_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Repel_Damage_Instance_Refraction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Omniknight_Repel_Damage_Instance_Refraction : public CDOTA_Buff
{
public:
	int32_t damage_threshold; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Repel_Knockback_On_Cast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Degen_Aura_Toggle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Degen_Aura_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Degen_Aura_Restoration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Guardian_Angel_Purification : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Guardian_Angel_Immune_Flight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Guardian_Angel_Single_Target : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Aghsfort_Omniknight_Repel_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Omniknight_Guardian_Angel_Single_Target_Dummy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Omniknight_Guardian_Angel_Single_Target_Dummy : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_WitchDoctor_ParalyzingCask : public CDOTABaseAbility
{
public:
	int32_t bounces; // 0x568	
	int32_t bounce_bonus_damage; // 0x56c	
	int32_t damage; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_WitchDoctor_Cask_Thinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t remaining_bounces; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_WitchDoctor_VoodooRestoration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_WitchDoctor_Voodoo_Restoration_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_WitchDoctor_Voodoo_Restoration_Heal : public CDOTA_Buff
{
public:
	int32_t heal; // 0x1318	
	float mana_per_second; // 0x131c	
	float heal_interval; // 0x1320	
	int32_t lifesteal_percent; // 0x1324	
	int32_t spell_lifesteal_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_WitchDoctor_Maledict : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_WitchDoctor_MaledictDoT : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_WitchDoctor_Maledict : public CDOTA_Buff
{
public:
	int32_t m_iStartHealth; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t bonus_damage_threshold; // 0x1320	
	int32_t max_bonus_damage; // 0x1324	
	int32_t ticks; // 0x1328	
	int32_t iCurrentTick; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_WitchDoctor_DeathWard : public CDOTABaseAbility
{
public:
	int32_t m_iDamage; // 0x568	
	int32_t m_iBounceRadius; // 0x56c	
	int32_t m_iProjectileSpeed; // 0x570	
	int32_t m_iBounces; // 0x574	
	CHandle< CBaseEntity > m_hWard; // 0x578	
	GameTime_t m_fWardExpireTime; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x580	
	int32_t m_iAttackIndex; // 0x584	
	CUtlVector< sAghsfortWardBounceInfo > m_BounceInfo; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_WitchDoctor_DeathWard : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t m_iBounceRadius; // 0x131c	
	bool m_bFirstAttack; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t m_iBounces; // 0x1324	
	ParticleIndex_t m_nStaffParticle; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_ParalyzingCask_Multicask : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_ParalyzingCask_Applies_Maledict : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_ParalyzingCask_AoE_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_ParalyzingCask_Attack_Procs : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Maledict_Ground_Curse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Maledict_AoE_Procs : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Maledict_Death_Restoration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Maledict_Affects_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Maledict_Infectious : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Voodoo_Restoration_Enemy_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Voodoo_Restoration_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Voodoo_Restoration_Damage_Amp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Voodoo_Restoration_Mana_Restore : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Death_Ward_No_Channel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Death_Ward_Splitshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Death_Ward_Damage_Resist : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_WitchDoctor_Death_Ward_Bounce : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_WitchDoctor_ParalyzingCask_Attack_Procs : public CDOTA_Buff
{
public:
	int32_t cask_chance; // 0x1318	
	int32_t cask_cooldown; // 0x131c	
	GameTime_t flLastProcTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_WitchDoctor_DeathWard_Damage_Resist : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_WitchDoctor_DeathWard_No_Channel : public CDOTABaseAbility
{
public:
	int32_t m_iDamage; // 0x568	
	int32_t m_iBounceRadius; // 0x56c	
	int32_t m_iProjectileSpeed; // 0x570	
	int32_t m_iBounces; // 0x574	
	CHandle< CBaseEntity > m_hWard; // 0x578	
	float m_fWardExpireTime; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x580	
	int32_t m_iAttackIndex; // 0x584	
	CUtlVector< sAghsfortWardBounceInfo > m_BounceInfo; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Aghsfort_Modifier_WitchDoctor_ForceKill : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Witch_Doctor_Death_Ward_No_Channel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Witch_Doctor_Death_Ward_Splitshot : public CDOTA_Buff
{
public:
	int32_t damage_modifier; // 0x1318	
	int32_t split_shot_bonus_range; // 0x131c	
	int32_t split_shot_count; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TemplarAssassin_PsionicTrap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TemplarAssassin_Refraction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_RefractionDamage : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_RefractionAbsorb : public CDOTA_Buff
{
public:
	int32_t damage_threshold; // 0x1318	
	int32_t max_damage_absorb; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TemplarAssassin_Meld : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_Meld_Animation : public CDOTA_Buff
{
public:
	bool launched_attack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_Meld : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	bool launched_attack; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_MeldArmor : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TemplarAssassin_PsiBlades : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_PsiBlades : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
	float attack_spill_range; // 0x131c	
	int32_t attack_spill_width; // 0x1320	
	int32_t attack_spill_pct; // 0x1324	
	int32_t attack_spill_penalty; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_PsiBlades_Slow : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_Psionic_Trap_Thinker : public CDOTA_Buff
{
public:
	int32_t trap_radius; // 0x1318	
	float trap_delay_time; // 0x131c	
	float slow_duration; // 0x1320	
	int32_t max_pulses; // 0x1324	
	int32_t iCurrentPulse; // 0x1328	
	CHandle< CBaseEntity > m_hImage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_Trap_Slow : public CDOTA_Buff
{
public:
	int32_t movement_speed_slow; // 0x1318	
	int32_t trap_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TemplarAssassin_Refraction_Holdout : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_TemplarAssassin_Refraction_Holdout : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t damage_absorb; // 0x131c	
	float m_flDamageAbsorbed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Refraction_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Refraction_KillRefresh : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Refraction_Counter_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Refraction_Detonate_Trap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Psionic_Trap_Area_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Meld_Attack_On_Activation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Meld_Teleport : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Meld_Refraction_On_Kill : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_PsiBlades_Trap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_PsiBlades_Splash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Psionic_Trap_Damage_Heals : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_Psionic_Trap_MultiPulse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Templar_Assassin_PsiBlades_AutoAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Templar_Assassin_PsiBlades_AutoAttack : public CDOTA_Buff
{
public:
	float fire_rate; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t m_iAttackRecord; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Templar_Assassin_Trap_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Slark_DarkPact : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_DarkPact : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_DarkPact_Pulses : public CDOTA_Buff
{
public:
	int32_t m_iPulseCount; // 0x1318	
	int32_t radius; // 0x131c	
	float total_damage; // 0x1320	
	int32_t total_pulses; // 0x1324	
	int32_t heal_pct; // 0x1328	
	float pulse_interval; // 0x132c	
	bool bIsBaseAbility; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Slark_Pounce : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_Pounce : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
	bool m_bFoundUnit; // 0x1341	
private:
	[[maybe_unused]] uint8_t __pad1342[0x6]; // 0x1342
public:
	CUtlVector< CHandle< CBaseEntity > > hitEntities; // 0x1348	
	int32_t pounce_distance; // 0x1360	
	int32_t pounce_distance_default; // 0x1364	
	float pounce_speed; // 0x1368	
	float pounce_acceleration; // 0x136c	
	int32_t pounce_radius; // 0x1370	
	int32_t pounce_damage; // 0x1374	
	float leash_duration; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_Pounce_Leash : public CDOTA_Buff
{
public:
	int32_t leash_radius; // 0x1318	
	Vector vLeashLocation; // 0x131c	
	bool m_bEscaped; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	float pounce_damage_multiplier; // 0x132c	
	int32_t pounce_damage; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_EssenceShift_Counter : public CDOTA_Buff
{
public:
	int32_t max_stacks; // 0x1318	
	int32_t passive_agility; // 0x131c	
	GameTime_t flLastProcTime; // 0x1320	
	float debuff_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Slark_EssenceShift : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_EssenceShift_Active : public CDOTA_Buff
{
public:
	int32_t agi_gain; // 0x1318	
	int32_t iPrimaryAttribute; // 0x131c	
	float model_scale; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_Essence_Shift_Debuff : public CDOTA_Buff
{
public:
	int32_t reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Slark_ShadowDance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_ShadowDance_Aura : public CDOTA_Buff
{
public:
	int32_t scepter_aoe; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_ShadowDance_PassiveRegen : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_regen_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_ShadowDance : public CDOTA_Modifier_Invisible
{
public:
	CHandle< CBaseEntity > m_hVisibleEntity; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
	GameTime_t flLastPulseTime; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Slark_ShadowDance_Visual : public CDOTA_Buff
{
public:
	bool m_bScepter; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Dark_Pact_Essence_Shift : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Dark_Pact_Push_Stun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Dark_Pact_Dispells_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Dark_Pact_Unit_Target : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Pounce_Attack_All : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Pounce_Pounce_Projectiles : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Pounce_Leashed_Bonus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Essence_Shift_AoE_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Essence_Shift_Leash_Chance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Essence_Shift_Allied_Buff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Shadow_Dance_Essence_Shift_Bonus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Shadow_Dance_Dark_Pact_Pulses : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Slark_Shadow_Dance_Leash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Slark_Pounce_Leashed_Bonus : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Slark_Shadow_Dance_Leash : public CDOTA_Buff
{
public:
	Vector m_vPullLocation; // 0x1318	
	float pull_speed; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Slark_Pounce_Projectiles : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_QueenOfPain_ScreamOfPain : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_QueenOfPain_ShadowStrike : public CDOTABaseAbility
{
public:
	Vector projectile_speed; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad0574[0x4]; // 0x574
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_QueenOfPain_ShadowStrike : public CDOTA_Buff
{
public:
	int32_t duration_damage; // 0x1318	
	int32_t duration_heal; // 0x131c	
	int32_t movement_slow; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CountdownTimer m_SlowInterval; // 0x1328	
	float m_flSlowStep; // 0x1340	
	float m_flSlowStepStep; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_QueenOfPain_Blink : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_QueenOfPain_Blink_AttackSpeed : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_QueenOfPain_SonicWave : public CDOTABaseAbility
{
public:
	GameTime_t m_fStartTime; // 0x568	
	float m_fTotalTime; // 0x56c	
	ParticleIndex_t m_nFXIndex; // 0x570	
	int32_t m_nSonicTrailRadius; // 0x574	
	Vector m_vLastTrailThinkerLocation; // 0x578	
	bool bTrailStartedBurning; // 0x584	
private:
	[[maybe_unused]] uint8_t __pad0585[0x3]; // 0x585
public:
	int32_t damage; // 0x588	
	int32_t starting_aoe; // 0x58c	
	int32_t final_aoe; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_QueenOfPain_Sonic_Wave_Trail_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1318	
	int32_t m_nRadius; // 0x1324	
	ParticleIndex_t m_nTrailFX; // 0x1328	
	float linger_duration; // 0x132c	
	float flDamage; // 0x1330	
	float damage_pct; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_QueenOfPain_Sonic_Wave_Trail_Burn : public CDOTA_Buff
{
public:
	float flDamage; // 0x1318	
	float burn_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_QueenOfPain_ShadowStrike_On_Attack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_ShadowStrike_On_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_Blink_Generates_Scream : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_Blink_Attack_Speed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_Sonic_Wave_Trail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_ShadowStrike_Chain : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_ShadowStrike_Scream : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_ScreamOfPain_Resets_Blink : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_ScreamOfPain_Restores_Caster : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_ScreamOfPain_Knockback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_ScreamOfPain_Stun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_Sonic_Wave_Circle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_Sonic_Wave_Attack_Buff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_QueenOfPain_Blink_Shadow_Strike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_QueenOfPain_Blink_Scream_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Aghsfort_QueenOfPain_Scream_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_QueenOfPain_SonicWave_AttackBuff : public CDOTA_Buff
{
public:
	int32_t spell_amp; // 0x1318	
	int32_t bonus_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TuskBoss_IceShards_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TuskBoss_IceShards : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x568	
	int32_t shard_width; // 0x56c	
	int32_t shard_damage; // 0x570	
	int32_t shard_count; // 0x574	
	float shard_speed; // 0x578	
	float shard_duration; // 0x57c	
	float shard_angle_step; // 0x580	
	int32_t shard_distance; // 0x584	
	Vector m_vSpawnOrigin; // 0x588	
	Vector m_vDirection; // 0x594	
private:
	[[maybe_unused]] uint8_t __pad05a0[0x8]; // 0x5a0
public:
	CDOTABaseAbility* m_pIceShardsStop; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_IceShard : public CDOTA_Buff
{
public:
	Vector m_vPos; // 0x1318	
	int32_t radius; // 0x1324	
	float damage; // 0x1328	
	float explosion_interval; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x688
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TuskBoss_Snowball : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t snowball_windup_radius; // 0x578	
	int32_t snowball_radius; // 0x57c	
	int32_t snowball_grow_rate; // 0x580	
	int32_t snowball_damage; // 0x584	
	int32_t snowball_damage_bonus; // 0x588	
	float stun_duration; // 0x58c	
	int32_t bonus_damage; // 0x590	
	float bonus_stun; // 0x594	
	int32_t snowball_speed; // 0x598	
	float snowball_duration; // 0x59c	
	Vector m_vProjectileLocation; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05ac[0x4]; // 0x5ac
public:
	CUtlVector< CHandle< CBaseEntity > > m_hSnowballedUnits; // 0x5b0	
	ParticleIndex_t m_nFXIndex; // 0x5c8	
private:
	[[maybe_unused]] uint8_t __pad05cc[0x4]; // 0x5cc
public:
	CountdownTimer ctSnowball; // 0x5d0	
	bool m_bSpeakAlly; // 0x5e8	
	bool m_bIsExpired; // 0x5e9	
	bool m_bInWindup; // 0x5ea	
private:
	[[maybe_unused]] uint8_t __pad05eb[0x1]; // 0x5eb
public:
	CHandle< CBaseEntity > m_hPrimaryTarget; // 0x5ec	
	int32_t m_nContainedValidUnits; // 0x5f0	
	bool m_bEndingSnowball; // 0x5f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_Snowball_Target : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TuskBoss_Launch_Snowball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_Snowball_Visible : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_Snowball_Movement : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_Snowball_Movement_Friendly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TuskBoss_WalrusPunch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_WalrusPunch : public CDOTA_Buff
{
public:
	int32_t crit_multiplier; // 0x1318	
	float air_time; // 0x131c	
	float slow_duration; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x1330	
	bool m_bWalrusPunch; // 0x1334	
	bool m_bPunchKill; // 0x1335	
private:
	[[maybe_unused]] uint8_t __pad1336[0x2]; // 0x1336
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x1350	
	int32_t m_nAttackRecord; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_WalrusPunch_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_WalrusPunch_AirTime : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	float m_flOldPitch; // 0x1324	
	QAngle m_qRotation; // 0x1328	
	int32_t m_nRotations; // 0x1334	
	Vector m_vDirection; // 0x1338	
	float flAirTime; // 0x1344	
	float m_flEndTime; // 0x1348	
	float m_fHorizontalDistance; // 0x134c	
	float m_fVerticalDistance; // 0x1350	
	float m_fDamage; // 0x1354	
	Vector m_vLandingPos; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_TuskBoss_Tag_Team : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_Tag_Team_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_Tag_Team : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	float slow_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TuskBoss_Tag_Team_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_IceShards_Circle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_IceShards_Explode : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_IceShards_Stun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_IceShards_Secondary : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_Snowball_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_Snowball_End_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_Snowball_Global : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_TagTeam_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_TagTeam_Toggle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_TagTeam_Global : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_Walrus_Punch_Reset : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_Walrus_Punch_Land_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_TuskBoss_Walrus_Punch_Wallop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_TuskBoss_Ice_Shards_Explode_Dummy : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Zombie_Deathstrike : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float health_threshold_pct; // 0x131c	
	float duration; // 0x1320	
	CHandle< CDOTABaseAbility > m_hTombstoneSourceAbility; // 0x1324	
	CHandle< CBaseEntity > m_hChaseUnit; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_Undying_Tombstone : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vZombies; // 0x568	
	CHandle< CBaseEntity > hTombstone; // 0x580	
	float duration; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_HP : public CDOTA_Buff
{
public:
	int32_t tombstone_health; // 0x1318	
	int32_t bonus_health; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Zombie_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float zombie_interval; // 0x131c	
	int32_t spawn_at_parent; // 0x1320	
	int32_t remove_on_death; // 0x1324	
	float knockback_duration; // 0x1328	
	int32_t knockback_distance; // 0x132c	
	int32_t knockback_height; // 0x1330	
	int32_t spawn_distance; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Bunker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hLoadedUnit; // 0x1318	
	float heal_percent_per_tick; // 0x131c	
	int32_t tombstone_grab_radius; // 0x1320	
	ParticleIndex_t m_nBunkerEnterFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Bunker_Friendly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Decay_BuffCounter : public CDOTA_Buff
{
public:
	float m_fStrengthStolen; // 0x1318	
	float model_scale_per_strength; // 0x131c	
	float model_scale_max; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_Undying_Decay : public CDOTABaseAbility
{
public:
	int32_t decay_damage; // 0x568	
	int32_t radius; // 0x56c	
	float decay_duration; // 0x570	
	float str_steal; // 0x574	
	float str_steal_captain_mult; // 0x578	
	float str_steal_boss_mult; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Decay_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1318	
	float interval; // 0x131c	
	int32_t extra_decays; // 0x1320	
	int32_t radius; // 0x1324	
	int32_t decay_strength_percent; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Decay_Buff : public CDOTA_Buff
{
public:
	float str_stolen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Undying_Decay_On_Attack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_Undying_SoulRip : public CDOTABaseAbility
{
public:
	int32_t damage_per_unit; // 0x568	
	int32_t radius; // 0x56c	
	int32_t max_units; // 0x570	
	int32_t tombstone_heal; // 0x574	
	int32_t damage_bonus_percent; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_SoulRipWard : public CDOTA_Buff
{
public:
	int32_t ward_radius; // 0x1318	
	int32_t explosion_damage; // 0x131c	
	float taunt_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_SoulRip_Share_Strength : public CDOTA_Buff
{
public:
	float str_gain; // 0x1318	
	int32_t model_scale; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Zombie_Deathstrike_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	float m_flDecrementTime; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Zombie_Deathstrike_Slow_Counter : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_Undying_Tombstone_Zombie_DeathStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Zombie_Deathlust : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Zombie_Modifier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Exploding_Zombie : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_ConsumeZombies_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_ConsumeZombies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Undying_ConsumeZombies_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed_per_stack; // 0x1318	
	int32_t bonus_attack_speed_per_stack; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_Undying_FleshGolem : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_FleshGolem : public CDOTA_Buff
{
public:
	int32_t str_percentage; // 0x1318	
	int32_t movement_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_FleshGolem_Slow : public CDOTA_Buff
{
public:
	int32_t damage_amp; // 0x1318	
	int32_t slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_FleshGolem_PlagueAura : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t damage; // 0x131c	
	float tick_rate; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Undying_Tombstone_Death_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Aghsfort_Ability_Special_Bonus_Unique_Undying_TombstoneOnDeath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Undying_Decay_Spawn_Zombies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Undying_Decay_On_Attack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Undying_Decay_Reverberation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Aghsfort_Ability_Special_Bonus_Unique_Undying_SoulRip_Charges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_SoulRip_Spawn_Zombies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_SoulRip_Share_Strength : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_SoulRip_Ward : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_Tombstone_Exploding_Zombies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_Tombstone_Bunker : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_FleshGolem_SpawnZombies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_FleshGolem_HealOnEnemyDeath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_FleshGolem_Smash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Undying_ConsumeZombies_Dummy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Undying_ConsumeZombies_Dummy : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Lina_LightStrikeArray : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Lina_DragonSlave : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	int32_t dragon_slave_distance; // 0x570	
	Vector m_vLastTrailThinkerLocation; // 0x574	
	int32_t dragon_slave_damage; // 0x580	
	float m_flLSADistance; // 0x584	
	int32_t m_nLSAPower; // 0x588	
	float m_flLSADelay; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_DragonSlave_Ignite : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1318	
	float burn_damage; // 0x131c	
	int32_t mana_restore; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_LightStrikeArray_Thinker : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	int32_t m_iDamage; // 0x1330	
	float m_flStunDuration; // 0x1334	
	int32_t light_strike_array_damage; // 0x1338	
	float light_strike_array_stun_duration; // 0x133c	
	float light_strike_array_delay; // 0x1340	
	int32_t m_nLSARadius; // 0x1344	
	int32_t m_nCount; // 0x1348	
	int32_t max_count; // 0x134c	
	int32_t iPower; // 0x1350	
	float pulse_interval; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Lina_Light_Strike_Array_Vacuum : public CDOTA_Buff
{
public:
	float pull_speed; // 0x1318	
	Vector vPullLocation; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Lina_FierySoul : public CDOTABaseAbility
{
public:
	float active_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_FierySoul_Active : public CDOTA_Buff
{
public:
	int32_t attack_range_per_stack; // 0x1318	
	bool m_bShouldReset; // 0x131c	
	bool m_bIsActive; // 0x131d	
private:
	[[maybe_unused]] uint8_t __pad131e[0x2]; // 0x131e
public:
	int32_t fiery_soul_attack_speed_bonus; // 0x1320	
	float fiery_soul_move_speed_bonus; // 0x1324	
	ParticleIndex_t m_nFXIndex; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_FierySoul : public CDOTA_Buff
{
public:
	int32_t fiery_soul_attack_speed_bonus; // 0x1318	
	float fiery_soul_move_speed_bonus; // 0x131c	
	int32_t fiery_soul_max_stacks; // 0x1320	
	float fiery_soul_stack_duration; // 0x1324	
	ParticleIndex_t m_nFXIndex; // 0x1328	
	GameTime_t m_flFierySoulDieTime; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Lina_LagunaBlade : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x568	
	int32_t m_nMaxBounces; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_LagunaBlade_Line : public CDOTA_Buff
{
public:
	Vector vStart; // 0x1318	
	Vector vEnd; // 0x1324	
	float damage_delay; // 0x1330	
	CHandle< CBaseEntity > m_hMainTarget; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_LagunaBlade : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_DragonSlave_LSA_Trail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_DragonSlave_Triwave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_DragonSlave_Ignite : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_LightStrikeArray_Pulsate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_LightStrikeArray_Attacks : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_LightStrikeArray_Vacuum : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_FierySoul_Multishot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_FierySoul_DragonSlave_On_Cast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_FierySoul_Mini_Lagunas : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_FierySoul_LSA_Attacks : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_FierySoul_Ally_Cast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_Laguna_Blade_Bounce : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_Laguna_Blade_LSA : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_Laguna_Blade_Channel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_Laguna_Blade_Line : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lina_Dragon_Slave_Booster : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Lina_Fiery_Soul_Splitshot : public CDOTA_Buff
{
public:
	int32_t damage_modifier; // 0x1318	
	int32_t split_shot_bonus_range; // 0x131c	
	int32_t arrow_count; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Lina_Laguna_Blade_Channel : public CDOTA_Buff
{
public:
	int32_t stack_limit; // 0x1318	
	float stack_interval; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesToHit; // 0x1320	
	ParticleIndex_t m_nFxIndexB; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< ParticleIndex_t > m_nFXIndices; // 0x1340	
	int32_t bounces_remaining; // 0x1358	
	int32_t iCur_stack; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Lina_Laguna_Blade_Bounce : public CDOTA_Buff
{
public:
	int32_t bounces_remaining; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Lina_Light_Strike_Array_Attacks_Bonus : public CDOTA_Buff
{
public:
	float attack_damage; // 0x1318	
	int32_t damage_penalty; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_LightStrikeArray_Stun : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Lina_DragonSlave_Movement : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float m_flPushDistance; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_Juggernaut_BladeFury : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_BladeFury : public CDOTA_Buff
{
public:
	int32_t blade_fury_radius; // 0x1318	
	int32_t blade_fury_damage; // 0x131c	
	float blade_fury_damage_tick; // 0x1320	
	int32_t movement_bonus; // 0x1324	
	int32_t spark_radius; // 0x1328	
	int32_t spark_damage_percent; // 0x132c	
	bool m_bDestroyParentThinkerOnDeath; // 0x1330	
	bool m_bPreIntervalThink; // 0x1331	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_BladeFury_Force : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_BladeFury_Force_Pull : public CDOTA_Buff
{
public:
	int32_t blade_fury_radius; // 0x1318	
	int32_t pull_speed; // 0x131c	
	int32_t pull_stop; // 0x1320	
	Vector pull_origin; // 0x1324	
	GameTime_t m_flLastThinkTime; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Juggernaut_HealingWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Healing_Ward : public CDOTA_Buff
{
public:
	int32_t healing_ward_aura_radius; // 0x1318	
	float healing_ward_heal_amount; // 0x131c	
	float healing_ward_interval; // 0x1320	
	int32_t m_nTotalHealing; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Healing_Ward_Primed : public CDOTA_Buff
{
public:
	int32_t healing_ward_aura_radius; // 0x1318	
	int32_t trigger_radius; // 0x131c	
	int32_t search_radius; // 0x1320	
	int32_t damage_percent; // 0x1324	
	int32_t movement_bonus; // 0x1328	
	int32_t power; // 0x132c	
	CHandle< CBaseEntity > m_hTarget; // 0x1330	
	bool m_bPlayerControlled; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Juggernaut_ZenWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Zen_Ward : public CDOTA_Buff
{
public:
	int32_t healing_ward_aura_radius; // 0x1318	
	float healing_ward_heal_amount; // 0x131c	
	float healing_ward_interval; // 0x1320	
	int32_t m_nTotalRegen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Zen_Ward_Armor : public CDOTA_Buff
{
public:
	int32_t armor_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Juggernaut_BladeDance : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hBladeFuryThinker; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_BladeDance : public CDOTA_Buff
{
public:
	int32_t blade_dance_crit_mult; // 0x1318	
	int32_t blade_dance_crit_chance; // 0x131c	
	bool m_bDidBladeDanceCrit; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_BladeDance_Buff : public CDOTA_Buff
{
public:
	int32_t evasion_per_stack; // 0x1318	
	int32_t movespeed_per_stack; // 0x131c	
	int32_t evasion_bonus; // 0x1320	
	int32_t movespeed_bonus; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Double_Attack : public CDOTA_Buff
{
public:
	int32_t range; // 0x1318	
	float bonus_attack_duration; // 0x131c	
	int32_t bonus_attack_count; // 0x1320	
	int32_t bonus_attack_speed; // 0x1324	
	float m_fBonusRange; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Juggernaut_Omnislash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_modifier_aghsfort_juggernaut_omnislash : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	CHandle< CBaseEntity > m_hLastTarget; // 0x131c	
	int32_t m_nJumps; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	int32_t bonus_attack_speed; // 0x1328	
	int32_t omni_slash_radius; // 0x132c	
	float attack_rate_multiplier; // 0x1330	
	int32_t upgraded_radius; // 0x1334	
	int32_t m_iTotalDamage; // 0x1338	
	int32_t m_iHeroDamage; // 0x133c	
	bool m_bReflection; // 0x1340	
	bool m_bFirstHit; // 0x1341	
	bool m_bEndNext; // 0x1342	
private:
	[[maybe_unused]] uint8_t __pad1343[0x1]; // 0x1343
public:
	GameTime_t m_fNextAttackTime; // 0x1344	
	Vector m_vCastOrigin; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< CHandle< CBaseEntity > > m_hIllusions; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_modifier_aghsfort_juggernaut_omnislash_Camera : public CDOTA_Buff
{
public:
	bool m_bIsDone; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_modifier_aghsfort_juggernaut_omnislash_Invulnerability : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Omnislash_Ignite : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1318	
	float tick_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Omnislash_Ignite_Invuln : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Juggernaut_Omnislash_Ignite_Disarm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Fury_Sparks : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Fury_Force : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Fury_Shared : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Fury_Lifesteal_Hit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Healing_Ward_Blade_Fury : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Healing_Ward_Crit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Healing_Ward_Detonate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Dance_Cooldown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Dance_Buff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Dance_Launches_Blade_Fury : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Dance_Shared : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Blade_Dance_Teleport : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Omnislash_Range : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Omnislash_Illusion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Omnislash_Crit_Extend : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Omnislash_Shared : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Omnislash_Spin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Omnislash_Ignite : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Juggernaut_Zen_Ward : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort2_DrowRanger_FrostArrows : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_FrostArrows : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_FrostArrows_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_FrostArrows_Chill : public CDOTA_Buff
{
public:
	float interval; // 0x1318	
	int32_t max_stacks; // 0x131c	
	int32_t damage_percent; // 0x1320	
	int32_t movement_damage_percent; // 0x1324	
	int32_t m_nDamage; // 0x1328	
	ParticleIndex_t m_nFXStackIndex; // 0x132c	
	Vector m_vLastPosition; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort2_DrowRanger_WaveOfSilence : public CDOTABaseAbility
{
public:
	int32_t wave_length; // 0x568	
	int32_t wave_width; // 0x56c	
	float wave_speed; // 0x570	
	float silence_duration; // 0x574	
	float knockback_distance_max; // 0x578	
	float knockback_duration; // 0x57c	
	Vector m_vVectorTarget; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_WaveOfSilence : public CDOTA_Buff
{
public:
	int32_t blind_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_WaveOfSilence_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_WaveOfSilence_Echo_Thinker : public CDOTA_Buff
{
public:
	Vector m_vTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_WaveOfSilence_Movement : public CDOTA_Buff
{
public:
	int32_t movespeed_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_WaveOfSilence_Frost : public CDOTA_Buff
{
public:
	float m_fDamagePerSecond; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_WaveOfSilence_Agility : public CDOTA_Buff
{
public:
	CUtlVector< GameTime_t > m_AgilityTimers; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort2_DrowRanger_Multishot : public CDOTABaseAbility
{
public:
	CUtlVector< CUtlVector< CHandle< CBaseEntity > > > m_vHitTargets; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort2_DrowRanger_Multishot_Buff : public CDOTA_Buff
{
public:
	int32_t damage_percent; // 0x1318	
	int32_t knockback_distance; // 0x131c	
	float knockback_duration; // 0x1320	
	int32_t move_speed_percent; // 0x1324	
	int32_t max_move_speed_percent; // 0x1328	
	int32_t model_scale; // 0x132c	
	int32_t max_model_scale; // 0x1330	
	bool m_bActive; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Aghsfort2_DrowRanger_Multishot : public CDOTA_Buff
{
public:
	int32_t arrow_width; // 0x1318	
	float arrow_speed; // 0x131c	
	int32_t range; // 0x1320	
	int32_t wave_count; // 0x1324	
	float wave_delay; // 0x1328	
	int32_t arrow_count_per_wave; // 0x132c	
	float arrow_delay; // 0x1330	
	float per_arrow_angle; // 0x1334	
	float m_fYawOffset; // 0x1338	
	int32_t m_iWaveIndex; // 0x133c	
	int32_t m_iArrowIndex; // 0x1340	
	Vector m_vTarget; // 0x1344	
	QAngle m_vWaveAngle; // 0x1350	
	float m_flInterval; // 0x135c	
	GameTime_t m_flNextThink; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort2_DrowRanger_Multishot_SideLine : public CDOTA_Buff
{
public:
	int32_t m_iWaveIndex; // 0x1318	
	float m_fYawOffset; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_Multishot_Buff_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort2_DrowRanger_Multishot_Refire : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort2_DrowRanger_Marksmanship : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort2_DrowRanger_Marksmanship_Aura : public CDOTA_Buff
{
public:
	int32_t aura_disable_range; // 0x1318	
	int32_t aura_range; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	int32_t m_nBonusFactor; // 0x1324	
	GameTime_t m_fLastEnableTime; // 0x1328	
	ParticleIndex_t m_nFxIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort2_DrowRanger_Marksmanship_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t aura_agility_multiplier; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_Marksmanship_Active : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_range; // 0x131c	
	int32_t attack_speed_reduction; // 0x1320	
	float duration; // 0x1324	
	int32_t charges; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_Marksmanship_AoE : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort2_DrowRanger_Marksmanship_WaveOfSilence_Primed : public CDOTA_Buff
{
public:
	int32_t aura_disable_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort2_Talent_DrowRanger_WaveOfSilence_Blind : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort2_Talent_DrowRanger_Multishot_Range : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort2_Talent_DrowRanger_Marksmanship_Attack_Count : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_FrostArrows_Split : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_FrostArrows_MoveDamage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_FrostArrows_Wave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_WaveOfSilence_Echo : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_WaveOfSilence_Movement : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_WaveOfSilence_Cooldown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_WaveOfSilence_Frost : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_Multishot_Move : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_Multishot_SideLine : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_Multishot_Refire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_Multishot_Buff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_Marksmanship_WaveOfSilence : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_DrowRanger_Marksmanship_AoE : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LucentBeam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LucentBeam_Moonglow : public CDOTA_Buff
{
public:
	int32_t bonus_aspd; // 0x1318	
	int32_t lifesteal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t bonus_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessingAura : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t night_bonus_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_MoonGlaive : public CDOTABaseAbility
{
public:
	int32_t m_iAttackIndex; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< sAghsFortGlaiveInfo > m_GlaiveInfo; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_MoonGlaive_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_MoonGlaive_Knockback_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_MoonGlaive_Knockback : public CDOTA_Buff
{
public:
	int32_t attack_speed_slow; // 0x1318	
	int32_t move_speed_slow_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_MoonGlaive_Knockback_Bounce : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bTargetTeleported; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
	float stun_duration; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_MoonGlaive : public CDOTA_Buff
{
public:
	int32_t range; // 0x1318	
	int32_t bounces; // 0x131c	
	int32_t damage_reduction_percent; // 0x1320	
	int32_t bounce_pct; // 0x1324	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_MoonGlaive_FX : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nMoonGlaiveFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing_MoonMark : public CDOTA_Buff
{
public:
	int32_t spell_resist_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing_LunarRemnant : public CDOTA_Buff
{
public:
	int32_t m_nBonusDamage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LunarBlessing : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing_Moonfright : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing_LunarPower : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing_MoonShield_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessingAura_MoonShield_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessingAura_MoonShield : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing_Active_Buff : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_Lunar_Grace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_Lunar_Grace : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	float night_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_Eclipse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_Eclipse : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t beams; // 0x1320	
	int32_t hit_count; // 0x1324	
	int32_t m_iBeamDamage; // 0x1328	
	float m_flBeamStun; // 0x132c	
	Vector vPosition; // 0x1330	
	bool m_bAreaTarget; // 0x133c	
	bool m_bMoonWell; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	int32_t m_iTickCount; // 0x1340	
	ParticleIndex_t m_nMoonlightFXIndex; // 0x1344	
	CUtlVector< CHandle< CBaseEntity > > m_HitTargets; // 0x1348	
	CUtlVector< CHandle< CBaseEntity > > m_HitAllies; // 0x1360	
	float beam_interval; // 0x1378	
	float m_flInterval; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LucentBeam_Bloodmoon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LucentBeam_Diffusion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LucentBeam_Moonglow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LunarBlessing_MoonMark : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LunarBlessing_LunarRemnant : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_MoonGlaive_AllyBounce : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_MoonGlaive_DoubleMoon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_MoonGlaive_Knockback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LunarBlessing_MoonShield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LunarBlessing_Moonfright : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LunarBlessing_LunarPower : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_Eclipse_Moonstruck : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_Eclipse_LunarCycle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_Eclipse_LunarFavor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_Eclipse_LunarFocus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LucentBeam_Glaives : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_Glaives_MoonWell : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Eclispe_Hide : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_LunarBlessing_Leap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_LunarBlessing_Leap : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t leap_distance; // 0x1344	
	float leap_speed; // 0x1348	
	float leap_acceleration; // 0x134c	
	int32_t leap_radius; // 0x1350	
	int32_t search_range; // 0x1354	
	float damage_multiplier; // 0x1358	
	float m_flPowerLevelPct; // 0x135c	
	bool m_bLaunched; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x7]; // 0x1361
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitEntities; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Luna_GlaiveShield : public CDOTABaseAbility
{
public:
	CUtlVector< sGlaiveDef > m_GlaiveDefs; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1520
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_GlaiveShield : public CDOTA_Buff
{
public:
	bool m_bSpiritsExplode; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t hit_radius; // 0x131c	
	int32_t rotate_range; // 0x1320	
	int32_t glaive_movement_rate; // 0x1324	
	float replenish_time; // 0x1328	
	float m_flRotation; // 0x132c	
	float m_flGlaiveRadius; // 0x1330	
	GameTime_t m_flNextSpawn; // 0x1334	
	bool m_bPaused; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_Eclipse_IntoTheNight : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Luna_Eclipse_IntoTheNight_Aura : public CDOTA_Buff
{
public:
	int32_t m_nMoveSpeed; // 0x1318	
	int32_t m_nEvasion; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Lich_FrostNova : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_FrostNova_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
	int32_t slow_attack_speed; // 0x131c	
	bool is_primary_target; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hShackleTarget"
class CDOTA_Ability_AghsFort_Lich_Sinister_Gaze : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hShackleTarget; // 0x568	
	Vector m_vPullLocation; // 0x56c	
	float m_flIntervalRate; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_Sinister_Gaze_Self : public CDOTA_Buff
{
public:
	int32_t mana_drain; // 0x1318	
	float m_flIntervalRate; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_Sinister_Gaze : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t mana_drain; // 0x131c	
	float m_flIntervalRate; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_Sinister_Gaze_Summon : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t base_damage_outgoing_percentage; // 0x131c	
	bool m_bFirstTick; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Lich_Ice_Spire : public CDOTABaseAbility
{
public:
	int32_t aura_radius; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_Ice_Spire : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	CountdownTimer m_Timer; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_Ice_Spire_Debuff : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_ChainFrost_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
	int32_t slow_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Lich_FrostShield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_FrostShield : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float interval; // 0x131c	
	int32_t damage_reduction; // 0x1320	
	int32_t bonus_health_regen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_FrostShield_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_FrostShield_Magic_Resistance_Debuff : public CDOTA_Buff
{
public:
	int32_t magic_resist_reduction; // 0x1318	
	int32_t max_stacks; // 0x131c	
	ParticleIndex_t m_nFXStackIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_AghsFort_Modifier_Lich_Frost_Giant : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t model_scale; // 0x131c	
	int32_t damage_radius; // 0x1320	
	int32_t pct_int_damage_per_second; // 0x1324	
	float tick_rate; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_AghsFort_Modifier_Lich_Frost_Shield_Magic_Immune : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Lich_ChainFrost : public CDOTABaseAbility
{
public:
	int32_t jump_range; // 0x568	
	int32_t jumps; // 0x56c	
	float slow_duration; // 0x570	
	int32_t vision_radius; // 0x574	
	int32_t projectile_speed; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Lich_Chain_Frost_Thinker : public CDOTA_Buff
{
public:
	int32_t m_nDamageToHeroes; // 0x1318	
	int32_t m_nHeroesKilled; // 0x131c	
	int32_t m_nJumps; // 0x1320	
	CHandle< CBaseEntity > m_hTarget; // 0x1324	
	CHandle< CBaseEntity > m_hAvoidTarget; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Nova_Root_Disarm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Nova_Applies_Frost_Shield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Nova_Execute_Refund : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Nova_AOE_Attacks : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Shield_Magic_Resist_Debuff_And_Stun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Shield_Heal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Shield_Frost_Giant : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Frost_Shield_Dispels : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Sinister_Gaze_Spawns_Ice_Spire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Sinister_Gaze_Drains_Life : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Sinister_Gaze_Raises_Skeletons : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Chain_Frost_Split : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Chain_Frost_Applies_Frost_Shield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Lich_Chain_Frost_Applies_Frost_Nova : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Aghsfort_Lich_Extra_Chain_Frost_Jumps : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kunkka_Rumboldened_Immunity : public CDOTA_Modifier_MagicImmune
{
public:
	int32_t model_scale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Torrent : public CDOTABaseAbility
{
public:
	int32_t torrent_storm_chance; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Torrent_Thinker : public CDOTA_Buff
{
public:
	bool m_bIsSquall; // 0x1318	
	bool m_bIsSeaLegs; // 0x1319	
private:
	[[maybe_unused]] uint8_t __pad131a[0x2]; // 0x131a
public:
	float m_flRadius; // 0x131c	
	bool m_bShowEnemies; // 0x1320	
	bool m_bTorrentStorm; // 0x1321	
private:
	[[maybe_unused]] uint8_t __pad1322[0x2]; // 0x1322
public:
	float m_flDelay; // 0x1324	
	float m_flFireTime; // 0x1328	
	bool m_bForcePosition; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	Vector m_vStartPosition; // 0x1330	
	Vector m_vEndPosition; // 0x133c	
	int32_t m_nPercentChanceOfGhostShip; // 0x1348	
	CHandle< CBaseEntity > m_hTarget; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Torrent : public CDOTA_Buff
{
public:
	float flIntervalThinkTime; // 0x1318	
	int32_t torrent_damage; // 0x131c	
	float m_flDamageScale; // 0x1320	
	float m_flStartZ; // 0x1324	
	float m_flCurTime; // 0x1328	
	bool m_bTorrentStorm; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Torrent_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Fire_Cannons_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Tidebringer_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Torrent_Storm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Torrent_Storm : public CDOTA_Buff
{
public:
	int32_t torrent_min_distance; // 0x1318	
	int32_t torrent_max_distance; // 0x131c	
	int32_t m_iExplosionQuadrant; // 0x1320	
	Vector m_vPosition; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Tidebringer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Tidebringer : public CDOTA_Buff
{
public:
	bool m_bTidebringerAttack; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t cleave_starting_width; // 0x131c	
	int32_t cleave_ending_width; // 0x1320	
	int32_t cleave_distance; // 0x1324	
	int32_t damage_bonus; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
	int32_t cleave_damage; // 0x1330	
	bool m_bIgnoreCooldown; // 0x1334	
	bool m_bDreadPirate; // 0x1335	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_XMarksTheSpot : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hThinkerEntities; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Kunkka_NoQuarter : public CDOTA_Buff
{
public:
	int32_t m_nSpeedBonusPercentage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_XMarksTheSpot : public CDOTA_Buff
{
public:
	float armour_increase; // 0x1318	
	float speed_increase_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_XMarksTheSpotMarker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_XMarksTheSpot_SeaLegs_Thinker : public CDOTA_Buff
{
public:
	Vector m_vLastPosition; // 0x1318	
	CHandle< CBaseEntity > m_hEntity; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_XMarksTheSpot_Thinker : public CDOTA_Buff
{
public:
	Vector m_vStartLoc; // 0x1318	
	bool m_bIsReflection; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CHandle< CBaseEntity > m_hEntity; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Return : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kunkka_Fear : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_pEntityToBeAfraidOf; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_GhostShip : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x568	
	float stun_duration; // 0x56c	
	int32_t ghostship_width; // 0x570	
	int32_t ghostship_width_scepter; // 0x574	
	Vector m_vFinalDestination; // 0x578	
	Vector m_vStartingPoint; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Ghost_Ship_Fire_Cannons : public CDOTA_Buff
{
public:
	float m_flDistance; // 0x1318	
	float m_flSpeed; // 0x131c	
	int32_t m_nNumCannons; // 0x1320	
	float m_flProjectileRadius; // 0x1324	
	bool m_bGhostShipIsEntity; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	int32_t m_hGhostShipProjectile; // 0x132c	
	CHandle< CBaseEntity > m_hGhostShip; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Ghost_Ship_Fire_Cannons : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_Ghost_Ship_Fleet : public CDOTA_Buff
{
public:
	Vector vCasterOrigin; // 0x1318	
	Vector vEnd; // 0x1324	
	int32_t m_nHitCount; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_GhostShip_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_GhostShip_Loaded : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_GhostShip_DamageAbsorb : public CDOTA_Buff
{
public:
	int32_t m_iAccumulatedDamage; // 0x1318	
	int32_t movespeed_bonus; // 0x131c	
	float ghostship_absorb; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_GhostShip_DamageDelay : public CDOTA_Buff
{
public:
	int32_t m_iAccumulatedDamage; // 0x1318	
	float m_flDuration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Kunkka_SeaSickness : public CDOTA_Buff
{
public:
	int32_t m_iAccumulatedDamage; // 0x1318	
	float m_flDuration; // 0x131c	
	float m_flMovespeedBonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Tidal_Wave : public CDOTABaseAbility
{
public:
	WaveData_t m_WaveData[2]; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Squall : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Grog_Blossom : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Marked : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Green_Around_the_Gills : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Angry_Recall : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Keelhaul : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Sealegs : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Rumboldened : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Man_the_Helm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kunkka_Davy_Jones_Locker_Aura : public CDOTA_Buff
{
public:
	float m_flRadius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Davy_Jones_Locker : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c0
// Has VTable
class CDOTA_Modifier_Kunkka_Man_the_Helm : public CDOTA_Modifier_MagicImmune
{
public:
	float tick_interval; // 0x1318	
	float forward_move_speed; // 0x131c	
	float turn_rate_boosted; // 0x1320	
	float turn_rate; // 0x1324	
	int32_t hit_radius; // 0x1328	
	int32_t knockback_radius; // 0x132c	
	bool m_bHitFirstUpdate; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	GameTime_t m_flHitEndTime; // 0x1334	
	float hit_recover_time; // 0x1338	
	float m_flTurnBoostProgress; // 0x133c	
	float m_flFacingTarget; // 0x1340	
	GameTime_t m_flLastHeroAttackTime; // 0x1344	
	ParticleIndex_t m_nFXIndex; // 0x1348	
	float m_flGyroshellDurationRemaining; // 0x134c	
	CUtlVector< float32 > m_flTurnHistory; // 0x1350	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitLastRicochet; // 0x1368	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesCredited; // 0x1380	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitCurrentRicochet; // 0x1398	
	Vector m_vDirection; // 0x13b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Dread_Pirate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Kunkka_No_Quarter_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kunkka_No_Quarter_Counter : public CDOTA_Buff
{
public:
	int32_t m_nStackCount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_No_Quarter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Skull_and_Bones : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Kunkka_Tidebringer_Charges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpirit_AetherRemnant : public CDOTABaseAbility
{
public:
	int32_t start_radius; // 0x568	
	int32_t end_radius; // 0x56c	
	int32_t remnant_watch_distance; // 0x570	
	int32_t projectile_speed; // 0x574	
private:
	[[maybe_unused]] uint8_t __pad0578[0x8]; // 0x578
public:
	Vector m_vDashPosition; // 0x580	
	Vector m_vFacePosition; // 0x58c	
	Vector m_vEndpoint; // 0x598	
	int32_t m_nProjectileID; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AetherRemnant_Unit : public CDOTA_Buff
{
public:
	bool m_bActivated; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	Vector m_vFacingDir; // 0x131c	
	CUtlVector< Vector > m_vecWatchPositions; // 0x1328	
	ParticleIndex_t m_nBeamFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int32 > m_nViewerIDs; // 0x1348	
	int32_t remnant_watch_distance; // 0x1360	
	int32_t remnant_watch_radius; // 0x1364	
	float duration; // 0x1368	
	int32_t watch_path_vision_radius; // 0x136c	
	int32_t impact_damage; // 0x1370	
	float pull_duration; // 0x1374	
	float activation_delay; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AetherRemnant_Pull : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	PlayerID_t m_nPlayerID; // 0x131c	
	float m_fMovementSpeed; // 0x1320	
	Vector m_vPullTarget; // 0x1324	
	Vector m_vFacingDir; // 0x1330	
	float think_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AetherRemnantThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	Vector m_vFacingDir; // 0x131c	
	CHandle< CBaseEntity > m_hRemnant; // 0x1328	
	bool m_bTriggered; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	float m_flCurThink; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AetherRemnantUnit_Truesight : public CDOTA_Buff
{
public:
	int32_t m_nRadius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AstralStep_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpirit_AstralStep : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x568	
	Vector m_vDestination; // 0x574	
	Vector m_vDirection; // 0x580	
	int32_t radius; // 0x58c	
	int32_t min_travel_distance; // 0x590	
	int32_t max_travel_distance; // 0x594	
	float debuff_duration; // 0x598	
	float pop_damage_delay; // 0x59c	
	int32_t pop_damage; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AstralStep_Debuff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXStackIndex; // 0x1318	
	float m_fVoidMarkPct; // 0x131c	
	int32_t movement_slow_pct; // 0x1320	
	int32_t pop_damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AstralStep_Caster : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpirit_Dissimilate : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecTranslocatingAllies; // 0x568	
	float phase_duration; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_Dissimilate_Phase_Ally : public CDOTA_Buff
{
public:
	int32_t damage_radius; // 0x1318	
	float debuff_duration; // 0x131c	
	int32_t destination_fx_radius; // 0x1320	
	int32_t damage; // 0x1324	
	Vector m_vExitPos; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c0
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_Dissimilate_Phase : public CDOTA_Buff
{
public:
	Vector m_vFirstPortalPos; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< Vector > m_vecDestinations; // 0x1328	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles; // 0x1340	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles_EnemyTeam; // 0x1358	
	int32_t m_nCurrentDestinationIndex; // 0x1370	
	int32_t m_nClosestIndexPosToClick; // 0x1374	
	int32_t m_nPortalHeightOffset; // 0x1378	
private:
	[[maybe_unused]] uint8_t __pad137c[0x4]; // 0x137c
public:
	char* m_szAlliesPortalFX; // 0x1380	
	char* m_szEnemiesPortalFX; // 0x1388	
	int32_t m_nPortalRadius; // 0x1390	
	int32_t m_nPortalPadding; // 0x1394	
	int32_t m_nFinalImpactDamageRadius; // 0x1398	
	int32_t m_nFinalImpactFXRadius; // 0x139c	
	int32_t destination_fx_radius; // 0x13a0	
	int32_t damage_radius; // 0x13a4	
	int32_t portals_per_ring; // 0x13a8	
	int32_t angle_per_ring_portal; // 0x13ac	
	int32_t first_ring_distance_offset; // 0x13b0	
	float debuff_duration; // 0x13b4	
	int32_t damage; // 0x13b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_Dissimilate_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_ResonantPulse_PhysicalBuff : public CDOTA_Buff
{
public:
	int32_t base_absorb_amount; // 0x1318	
	int32_t m_nAbsorbRemaining; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_VoidSpirit_ResonantPulse : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x568	
	int32_t base_absorb_amount; // 0x56c	
	int32_t absorb_per_unit_hit; // 0x570	
	float hero_absorb_multiplier; // 0x574	
	float boss_absorb_multiplier; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_ResonantPulse_Ring : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	CUtlVector< CHandle< CBaseEntity > > m_EnemiesHit; // 0x1328	
	CUtlVector< CHandle< CBaseEntity > > m_AlliesHit; // 0x1340	
	int32_t speed; // 0x1358	
	int32_t radius; // 0x135c	
	int32_t damage; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_AetherRemnant_Push : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AetherRemnant_Push : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_nRemnantProjectileID; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_AetherRemnant_PhantomAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AetherRemnant_PhantomAttack_Crit : public CDOTA_Buff
{
public:
	int32_t m_nCritPercent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_AetherRemnant_Bowling : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_VoidSpirit_AetherRemnant_Bowling_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_VoidSpirit_AetherRemnant_Bowling_ImpactSlow : public CDOTA_Buff
{
public:
	int32_t move_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_Dissimilate_Translocate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_Dissimilate_Expanse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_Dissimilate_Remnants : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_Dissimilate_Lure : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_VoidSpirit_Dissimilate_Lure_Thinker : public CDOTA_Buff
{
public:
	int32_t m_nDamageRadius; // 0x1318	
	float m_fDissimilateDamage; // 0x131c	
	float m_fThinkInterval; // 0x1320	
	float m_fDissimilateDamagePctPerInterval; // 0x1324	
	float m_fLingerDuration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_VoidSpirit_Dissimilate_Lure_Burn : public CDOTA_Buff
{
public:
	float m_fDamagePerInterval; // 0x1318	
	int32_t m_nBonusIncomingMagicDamage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_ResonantPulse_Knockback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_ResonantPulse_SpellAmped : public CDOTA_Buff
{
public:
	int32_t m_nSpellAmp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_ResonantPulse_Cadence : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_ResonantPulse_Cadence : public CDOTA_Buff
{
public:
	float m_fSpellAmp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_ResonantPulse_Suppression : public CDOTABaseAbility
{
public:
	int32_t m_nBonusCharges; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_VoidSpirit_ResonantPulse_Suppression_MagicImmunity : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_AstralStep_Vacuum : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_VoidSpirit_AstralStep_Vacuum_Motion : public CDOTA_Buff
{
public:
	float m_fVacuumSpeed; // 0x1318	
	float m_fStunDuration; // 0x131c	
	Vector m_vPullLoc; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_AstralStep_Attacks : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_VoidSpirit_AstralStep_Attacks : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_AstralStep_Trail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_VoidSpirit_AstralStep_Trail_Thinker : public CDOTA_Buff
{
public:
	float m_fThinkInterval; // 0x1318	
	float m_fPopDamagePctPerInterval; // 0x131c	
	float m_fLingerDuration; // 0x1320	
	int32_t radius; // 0x1324	
	int32_t pop_damage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_VoidSpirit_AstralStep_Trail_Burn : public CDOTA_Buff
{
public:
	float m_fDamagePerInterval; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_VoidSpirit_AstralStep_Breach : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_VoidSpirit_AstralStep_Breach_Burn : public CDOTA_Buff
{
public:
	float m_fDamagePerInterval; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_VoidSpirit_AstralStep_RestoreTime : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_VoidSpirit_AetherRemnant_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_VoidSpirit_Dissimilate_Stun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_VoidSpirit_ResonantPulse_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_VoidSpirit_AstralStep_Crit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_VoidSpirit_Dissimilate_Invis : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Gyrocopter_Call_Down : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x568	
	int32_t range_scepter; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Gyrocopter_Rocket_Barrage : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Gyrocopter_Rocket_Barrage : public CDOTA_Buff
{
public:
	int32_t rocket_damage; // 0x1318	
	int32_t m_nPower; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Gyrocopter_Homing_Missile_Ride : public CDOTA_Buff
{
public:
	int32_t grab_radius; // 0x1318	
	CHandle< CBaseEntity > m_hLoadedUnit; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Gyrocopter_Homing_Missile : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Aghsfort_Gyrocopter_Homing_Missile : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	ParticleIndex_t m_nFXIndex2; // 0x131c	
	int32_t acceleration; // 0x1320	
	float pre_flight_time; // 0x1324	
	float stun_duration; // 0x1328	
	int32_t m_nMissileDamage; // 0x132c	
	int32_t damage; // 0x1330	
	int32_t m_nTeamNumber; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	float speed; // 0x1340	
	float m_flFacingTarget; // 0x1344	
	int32_t movement_turn_rate; // 0x1348	
	int32_t m_nPower; // 0x134c	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CountdownTimer m_MoveTime; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Gyrocopter_Flak_Cannon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Gyrocopter_Flak_Cannon : public CDOTA_Buff
{
public:
	int32_t max_attacks; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t m_iNumAttacks; // 0x1320	
	int32_t projectile_speed; // 0x1324	
	int32_t radius; // 0x1328	
	int32_t max_targets; // 0x132c	
	bool m_bFirstStrike; // 0x1330	
	bool m_bShouldFireMissiles; // 0x1331	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Gyrocopter_Flak_Cannon_Scepter : public CDOTA_Buff
{
public:
	float fire_rate; // 0x1318	
	int32_t scepter_radius; // 0x131c	
	int32_t m_iAttackRecord; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Gyrocopter_Call_Down : public CDOTA_Buff
{
public:
	int32_t slow_duration_first; // 0x1318	
	int32_t slow_duration_second; // 0x131c	
	int32_t damage_first; // 0x1320	
	int32_t damage_second; // 0x1324	
	float power; // 0x1328	
	int32_t radius; // 0x132c	
	float slow_first; // 0x1330	
	float slow_second; // 0x1334	
	bool m_bDelayed; // 0x1338	
	bool m_bHalfDamage; // 0x1339	
	bool m_bFirstStrike; // 0x133a	
private:
	[[maybe_unused]] uint8_t __pad133b[0x1]; // 0x133b
public:
	CHandle< CBaseEntity > m_hInflictorAbility; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Gyrocopter_Call_Down_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_RocketBarrage_OnAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_RocketBarrage_DoubleTarget : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_RocketBarrage_Flare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_RocketBarrage_Ground : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_HomingMissile_Barrage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_HomingMissile_Ride : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_HomingMissile_Minimissile : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_HomingMissile_CallDown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_Flak_Cannon_First_Strike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_Flak_Cannon_Side_Gunner : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_Flak_Cannon_Missiles : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_Flak_Cannon_FireTrail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_CallDown_AttackBuff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_CallDown_MineField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_CallDown_Strafe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_HomingMissile_Charges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Gyrocopter_CallDown_Precision_Strike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Gyrocopter_RocketBarrage_On_Attack : public CDOTA_Buff
{
public:
	int32_t strike_chance; // 0x1318	
	float duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Gyrocopter_Rocket_Barrage_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Gyrocopter_Homing_Missile_Ride_LoadedUnit : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hMissile; // 0x1318	
	int32_t hit_radius; // 0x131c	
	float timeout_duration; // 0x1320	
	int32_t damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Gyrocopter_Homing_Missile_Ride_LoadedUnit_Timeout : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Gyrocopter_Flak_Cannon_Fire_Trail_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1318	
	int32_t path_radius; // 0x1324	
	float linger_duration; // 0x1328	
	float flDamage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Gyrocopter_Flak_Cannon_Fire_Trail_Burn : public CDOTA_Buff
{
public:
	float flDamage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Gyrocopter_Call_Down_Attack_Buff : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
	int32_t attackspeed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Special_Gyrocopter_Call_Down_Land_Mines : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float proximity_threshold; // 0x131c	
	float damage; // 0x1320	
	float activation_delay; // 0x1324	
	bool bActivated; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x7]; // 0x1329
public:
	CountdownTimer m_Timer; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Gyrocopter_Call_Down_Wingman : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	float m_flCurVertTime; // 0x1320	
	float m_flOldPitch; // 0x1324	
	QAngle m_qRotation; // 0x1328	
	int32_t m_nRotations; // 0x1334	
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	int32_t push_length; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Dawnbreaker_Fire_Wreath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Dawnbreaker_Solar_Guardian : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
	bool m_bJumping; // 0x56c	
private:
	[[maybe_unused]] uint8_t __pad056d[0x3]; // 0x56d
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecDeathThinkers; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Solar_Guardian_Thinker : public CDOTA_Buff
{
public:
	float pulse_interval; // 0x1318	
	int32_t iEffectRadius; // 0x131c	
	int32_t base_damage; // 0x1320	
	int32_t base_heal; // 0x1324	
	int32_t scepter_heal; // 0x1328	
	CHandle< CBaseEntity > m_hFollowTarget; // 0x132c	
	CHandle< CBaseEntity > m_hInflictor; // 0x1330	
	GameTime_t m_flNextPulseTime; // 0x1334	
	ParticleIndex_t m_nThinkerFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Solar_Guardian_Evasion : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_AghsFort_Dawnbreaker_Solar_Guardian_AirTime : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	Vector m_vDirection; // 0x1320	
	float m_flEndTime; // 0x132c	
	CHandle< CBaseEntity > m_hThinker; // 0x1330	
	Vector m_vTargetPosition; // 0x1334	
	Vector m_vStartPosition; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Solar_Guardian_Disable : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1318	
	ParticleIndex_t m_nStatusFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Solar_Guardian_After_Land : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Dawnbreaker_Luminosity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Luminosity : public CDOTA_Buff
{
public:
	bool m_bAppliesToCreeps; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t attack_count; // 0x131c	
	bool m_bShouldIncrement; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Luminosity_Attack_Buff : public CDOTA_Buff
{
public:
	bool m_bIsBuffedAttack; // 0x1318	
	bool m_bSunSentinel; // 0x1319	
private:
	[[maybe_unused]] uint8_t __pad131a[0x2]; // 0x131a
public:
	int32_t heal_pct; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	int32_t heal_radius; // 0x1324	
	int32_t heal_from_creeps; // 0x1328	
	int32_t allied_healing_pct; // 0x132c	
	int32_t m_nSmashDamage; // 0x1330	
	int32_t m_nCounterOrbitalChance; // 0x1334	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesToHeal; // 0x1338	
	float m_flTotalToHeal; // 0x1350	
	bool m_bCounterOrbitalProcessed; // 0x1354	
	bool m_bIsCounterOrbitalSmash; // 0x1355	
	bool m_bBrightFoundryProcessed; // 0x1356	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Dawnbreaker_Celestial_Hammer : public CDOTABaseAbility
{
public:
	int32_t projectile_speed; // 0x568	
	int32_t projectile_radius; // 0x56c	
	int32_t hammer_damage; // 0x570	
	int32_t hammer_aoe_radius; // 0x574	
	int32_t flare_radius; // 0x578	
	bool bHasStartedBurning; // 0x57c	
private:
	[[maybe_unused]] uint8_t __pad057d[0x3]; // 0x57d
public:
	float flare_debuff_duration; // 0x580	
	int32_t return_anim_distance_threshold; // 0x584	
	int32_t range; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Converge_Thinker : public CDOTA_Buff
{
public:
	int32_t flare_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	CHandle< CBaseEntity > m_hInflictor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Celestial_Hammer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
	int32_t projectile_speed; // 0x131c	
	int32_t travel_speed_pct; // 0x1320	
	int32_t m_nMaxRange; // 0x1324	
	Vector m_vStartPoint; // 0x1328	
	Vector m_vLastTrailThinkerLocation; // 0x1334	
	Vector m_vEndPointShard; // 0x1340	
	ParticleIndex_t m_nStatusFXIndex; // 0x134c	
	int32_t flare_radius; // 0x1350	
	bool bHasStartedBurning; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	float flare_debuff_duration; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Celestial_Hammer_Caster : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Celestial_Hammer_Thinker : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	float trail_duration; // 0x131c	
	int32_t flare_radius; // 0x1320	
	int32_t m_nProjectileHandle; // 0x1324	
	CHandle< CBaseEntity > m_hHavenThinker; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Fire_Wreath_Caster : public CDOTA_Buff
{
public:
	int32_t swipe_radius; // 0x1318	
	int32_t swipe_damage; // 0x131c	
	int32_t smash_radius; // 0x1320	
	int32_t smash_damage; // 0x1324	
	int32_t m_nCurrentSpeed; // 0x1328	
	float flSwipeInterval; // 0x132c	
	GameTime_t m_flNextHit; // 0x1330	
	int32_t iCurrentAttack; // 0x1334	
	int32_t total_attacks; // 0x1338	
	float smash_stun_duration; // 0x133c	
	float sweep_stun_duration; // 0x1340	
	bool m_bHasCompletedMove; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	float duration; // 0x1348	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	int32_t smash_distance_from_hero; // 0x1358	
	float animation_rate; // 0x135c	
	float turn_rate; // 0x1360	
	float m_flFacingTarget; // 0x1364	
	bool m_bSuncrusher; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	float m_flDistanceSinceStandAblazeThinker; // 0x136c	
	float m_flDistancePerStandAblazeThinker; // 0x1370	
	CHandle< CDOTABaseAbility > m_hCelestialHammerForFire; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Fire_Wreath_Attack_Bonus : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Fire_Wreath_Slow : public CDOTA_Buff
{
public:
	int32_t swipe_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Fire_Wreath_Smash_Stun : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Dawnbreaker_Converge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Converge : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
	int32_t burn_damage; // 0x131c	
	float burn_interval; // 0x1320	
	CHandle< CBaseEntity > m_hInflictor; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Dawnbreaker_Land : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_StarbreakerCelestialFire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_CelestialFire_Thinker : public CDOTA_Modifier_Aghsfort_Dawnbreaker_Converge_Thinker
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_CelestialFire_Debuff : public CDOTA_Modifier_Aghsfort_Dawnbreaker_Converge
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Starbreaker_Suncrusher : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_CelestialHammer_SunForge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Luminosity_BrightFoundry : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_BrightFoundry_Debuff : public CDOTA_Modifier_Aghsfort_Dawnbreaker_Converge
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_CelestialHammer_Haven : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_CelestialHammer_HammerTime : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Luminosity_SolarBattery : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Luminosity_SolarBattery : public CDOTA_Buff
{
public:
	int32_t move_speed_pct; // 0x1318	
	int32_t attack_speed; // 0x131c	
	int32_t m_nBonusMovementSpeedPct; // 0x1320	
	int32_t m_nBonusAttackSpeed; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Luminosity_Lightbringer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_Luminosity_Lightbringer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Solar_Guardian_SunSentinel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_SunSentinelLuminosity_Attack_Buff : public CDOTA_Modifier_Aghsfort_Dawnbreaker_Luminosity_Attack_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Solar_Guardian_DeathOfAStar : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Dawnbreaker_Solar_Guardian_DeathOfAStar : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Dawnbreaker_Solar_Guardian_DeathOfAStar_Active : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	bool m_bPassive; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	float m_flCooldown; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Solar_Guardian_SolarFlare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Dawnbreaker_SolarFlare_Debuff : public CDOTA_Modifier_Aghsfort_Dawnbreaker_Converge
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Dawnbreaker_Starbreaker_CounterOrbital : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Dawnbreaker_Starbreaker_CounterOrbital : public CDOTA_Buff
{
public:
	int32_t trigger_chance; // 0x1318	
	float cooldown; // 0x131c	
	GameTime_t m_fLastProc; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Dawnbreaker_Starbreaker_CounterOrbital_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_BrainSap_Invis : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Nightmare_Confusion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Enfeeble_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Nightmare_Burst : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Bane_Enfeeble : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_Enfeeble : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_Enfeeble_Effect : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	int32_t heal_reduction; // 0x131c	
	int32_t cast_reduction; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Bane_BrainSap : public CDOTABaseAbility
{
public:
	int32_t cast_range; // 0x568	
	int32_t brain_sap_damage; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Bane_Nightmare : public CDOTABaseAbility
{
public:
	int32_t m_nNightmareSwapCount; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Bane_NightmareEnd : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_Nightmare : public CDOTA_Buff
{
public:
	bool m_bSweetDreams; // 0x1318	
	bool m_bConfusion; // 0x1319	
	bool m_bSelfBreakAvailable; // 0x131a	
	bool m_bNoStatusEffect; // 0x131b	
	int32_t m_nSource; // 0x131c	
	float animation_rate; // 0x1320	
	GameTime_t m_flNextNightmareDamageTime; // 0x1324	
	float m_flAccumNightmareDamage; // 0x1328	
	int32_t movespeed_pct; // 0x132c	
	int32_t attack_speed; // 0x1330	
	int32_t model_scale; // 0x1334	
	CHandle< CBaseEntity > m_hConfusionAttackTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_Nightmare_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	int32_t m_nMoveSpeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hGripTarget"
class CDOTA_Ability_Aghsfort_Bane_FiendsGrip : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hGripTarget; // 0x568	
	int32_t fiend_grip_damage; // 0x56c	
	int32_t fiend_grip_spread_radius; // 0x570	
	float channel_time; // 0x574	
	float fiend_grip_tick_interval; // 0x578	
	GameTime_t m_flLastSpreadTime; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_FiendsGrip : public CDOTA_Buff
{
public:
	int32_t fiend_grip_mana_drain; // 0x1318	
	int32_t fiend_grip_boost_lifesteal_multiplier; // 0x131c	
	int32_t fiend_grip_damage; // 0x1320	
	int32_t fiend_grip_spread_radius; // 0x1324	
	float fiend_grip_tick_interval; // 0x1328	
	GameTime_t m_flLastSpreadTime; // 0x132c	
	bool m_bThinkerSource; // 0x1330	
	bool m_bRequiresChanneling; // 0x1331	
	bool m_bPrimaryGrip; // 0x1332	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_FiendsGrip_Cast_Illusion : public CDOTA_Buff
{
public:
	int32_t fiend_grip_mana_drain; // 0x1318	
	float fiend_grip_tick_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_FiendsGrip_Self : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_FiendsGrip_Illusion_Can_Only_Channel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_FiendsGrip_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Enfeeble_DeathSpread : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Enfeeble_DamageSteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Bane_Enfeeble_DamageStealBuff : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Enfeeble_EndFiendGrip : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Bane_FiendsGripThinker : public CDOTA_Buff
{
public:
	int32_t latch_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_FiendsGrip_Spread : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_FiendsGrip_AutoNightmare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_BrainSap_NightmareMirror : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Enfeeble_Spill : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_FiendsGrip_BoostAlly : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_BrainSap_Knockback_Slow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_AghsFort_Bane_BrainSap_Knockback : public CDOTA_Modifier_Knockback
{
public:
	int32_t radius; // 0x1348	
	int32_t heal_pct; // 0x134c	
	float slow_duration; // 0x1350	
	int32_t m_nBrainSapDamage; // 0x1354	
	CUtlVector< CHandle< CBaseEntity > > m_vecHitTargets; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Bane_BrainSap_KnockbackSlow : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Bane_Nightmare_SweetDreams : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Bane_BrainSap_NightmareMirror : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Bane_BrainSap_Invis : public CDOTA_Modifier_Invisible
{
public:
	int32_t invis_movement_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Bane_Invis_Crit : public CDOTA_Buff
{
public:
	int32_t invis_brain_sap_crit_pct; // 0x1318	
	int32_t m_nCritPct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_SunRay : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_SunRayStop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_SunRayVision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_SunRay : public CDOTA_Buff
{
public:
	float hp_cost_pct; // 0x1318	
	int32_t beam_range; // 0x131c	
	int32_t base_damage; // 0x1320	
	int32_t base_heal; // 0x1324	
	float tick_interval; // 0x1328	
	float forward_move_speed; // 0x132c	
	float turn_rate_initial; // 0x1330	
	float turn_rate; // 0x1334	
	int32_t radius; // 0x1338	
	float m_flCurrentTime; // 0x133c	
	float m_flAccumulatedSelfDamage; // 0x1340	
	bool m_bMovingForward; // 0x1344	
	bool m_bTurningFast; // 0x1345	
private:
	[[maybe_unused]] uint8_t __pad1346[0x2]; // 0x1346
public:
	float m_flFacingTarget; // 0x1348	
	float hp_perc_heal; // 0x134c	
	ParticleIndex_t m_nBeamFXIndex; // 0x1350	
	CHandle< CBaseEntity > m_hVisionThinkers[8]; // 0x1354	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1374	
	bool m_bCreatedVisionThinkers; // 0x1378	
private:
	[[maybe_unused]] uint8_t __pad1379[0x3]; // 0x1379
public:
	CHandle< CBaseEntity > m_hBeamEndSound; // 0x137c	
	CUtlVector< CHandle< CBaseEntity > > m_vecDispelledAllies; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_SunRayToggleMove : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_IcarusDive : public CDOTABaseAbility
{
public:
	int32_t hp_cost_perc; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_IcarusDiveStop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_IcarusDive : public CDOTA_Buff
{
public:
	Vector m_vSource; // 0x1318	
	Vector m_vTarget; // 0x1324	
	Vector m_vDirection; // 0x1330	
	QAngle m_angDirection; // 0x133c	
	float m_flCurrentTime; // 0x1348	
	int32_t dash_length; // 0x134c	
	int32_t dash_width; // 0x1350	
	int32_t hit_radius; // 0x1354	
	float burn_duration; // 0x1358	
	float dive_duration; // 0x135c	
	int32_t damage_per_second; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitEntities; // 0x1368	
	bool m_bSavedAlly; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_IcarusDiveBurn : public CDOTA_Buff
{
public:
	float burn_tick_interval; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	int32_t slow_movement_speed_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_FireSpirits : public CDOTABaseAbility
{
public:
	int32_t hp_cost_perc; // 0x568	
	int32_t spirit_count; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_FireSpiritCount : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t spirit_count; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_LaunchFireSpirit : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	bool m_bUnitCarriedByArtillery; // 0x56c	
private:
	[[maybe_unused]] uint8_t __pad056d[0x3]; // 0x56d
public:
	int32_t m_nSpiritSpeed; // 0x570	
	float m_fDuration; // 0x574	
	int32_t m_nRadius; // 0x578	
	int32_t m_nSpiritCount; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_FireSpiritBurn : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
	int32_t damage_per_second; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Phoenix_Supernova : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_SupernovaHiding : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_Sun : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t attacks_to_kill; // 0x1320	
	int32_t captain_attack_value; // 0x1324	
	int32_t boss_attack_value; // 0x1328	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x132c	
	bool m_bHasExpelCoreShard; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	int32_t m_nAttackCount; // 0x1334	
	int32_t creep_attacks_count; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_SecondSun : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t attacks_to_kill; // 0x1320	
	int32_t captain_attack_value; // 0x1324	
	int32_t boss_attack_value; // 0x1328	
	int32_t m_nAttackCount; // 0x132c	
	int32_t m_nRadius; // 0x1330	
	float m_fSecondSunRadiusPct; // 0x1334	
	int32_t creep_attacks_count; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_Sun_Debuff : public CDOTA_Buff
{
public:
	int32_t damage_per_sec; // 0x1318	
	float damage_interval; // 0x131c	
	int32_t aura_radius; // 0x1320	
	float m_fRadius; // 0x1324	
	float m_fSecondSunRadiusPct; // 0x1328	
	GameTime_t m_fNextDamageTime; // 0x132c	
	GameTime_t m_fLastThinkTime; // 0x1330	
	bool m_bHasHorizonAbility; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	int32_t m_nHorizonPushDistance; // 0x1338	
	float m_fHorizonPushInterval; // 0x133c	
	GameTime_t m_fNextHorizonPushTime; // 0x1340	
	ParticleIndex_t m_nHorizonFX; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_IcarusDive_Savior : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Phoenix_IcarusDive_Savior_Caster : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Phoenix_IcarusDive_Savior_Ally : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hSaviorEnt; // 0x1318	
	float ally_position_offset; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Phoenix_IcarusDive_Savior_Invis : public CDOTA_Modifier_PersistentInvisibility
{
public:
	float duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_IcarusDive_BlastWave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_IcarusDive_SecondSun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_FireSpirits_Vitality : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_FireSpirits_Artillery : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Phoenix_FireSpirits_Artillery_Carry : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1318	
	Vector m_vDirection; // 0x131c	
	float unit_position_offset; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_FireSpirits_FlameRevenant : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_FlameRevenant_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Phoenix_Flame_Revenant_Attack : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_FlameRevenant_Attack_TreeFire_Thinker : public CDOTA_Buff
{
public:
	CUtlVector< CUtlPair< CHandle< CBaseEntity >, GameTime_t > > m_vecTreeFires; // 0x1318	
	bool m_bCleanupWhenEmpty; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_AghsFort_Phoenix_FlameRevenant_Attack : public CDOTA_Buff
{
public:
	float radius_pct_as_length; // 0x1318	
	int32_t width; // 0x131c	
	float linger_duration; // 0x1320	
	float m_fLength; // 0x1324	
	ParticleIndex_t m_nBeamFXIndex; // 0x1328	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x132c	
	GameTime_t m_flLastHit; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CBaseEntity* > m_vecBurningTrees; // 0x1338	
	CHandle< CBaseEntity > m_hTreeFireThinker; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Phoenix_FlameRevenant_Attack_Damage : public CDOTA_Buff
{
public:
	float m_fDamagePerSecond; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	ParticleIndex_t m_nActiveFXIndex; // 0x1320	
	ParticleIndex_t m_nActiveStatusFXIndex; // 0x1324	
	float flame_revenant_damage_pct; // 0x1328	
	float think_interval; // 0x132c	
	int32_t move_slow_pct; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_SunRay_Luminance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_SunRay_FocusPoint : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_SunRay_GammaRay : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Special_Phoenix_SunRay_GammaRay_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Phoenix_SunRay_Luminance : public CDOTA_Buff
{
public:
	float pct_of_heal_as_attack_speed; // 0x1318	
	float m_fAttackSpeedBonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_Supernova_Capture : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_Supernova_Horizon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Phoenix_Supernova_ExpelCore : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Phoenix_Supernova_BonusDps : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Phoenix_SunRay_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Phoenix_Supernova_AttacksToKill : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_ArcWardenBoss_Flux : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_Flux : public CDOTA_Buff
{
public:
	int32_t m_nCasterTeam; // 0x1318	
	int32_t damage_per_tick_min; // 0x131c	
	int32_t damage_per_tick_max; // 0x1320	
	int32_t search_radius; // 0x1324	
	int32_t move_speed_slow_pct; // 0x1328	
	float think_interval; // 0x132c	
	float m_fCurrentDamage; // 0x1330	
	float m_fDamageIncreasePerTick; // 0x1334	
	int32_t m_nCurrentSlow; // 0x1338	
	bool m_bAlone; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_ArcWardenBoss_MagneticField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_MagneticField_Thinker_Evasion : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t radius; // 0x1320	
	float explosion_delay_time; // 0x1324	
	float explosion_stun_duration; // 0x1328	
	int32_t explosion_damage; // 0x132c	
	int32_t caster_team; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_MagneticField_Thinker_Explosion : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t explosion_damage; // 0x131c	
	float explosion_stun_duration; // 0x1320	
	float explosion_delay_time; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_MagneticField_Thinker_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_MagneticField_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance; // 0x1318	
	int32_t radius; // 0x131c	
	float aura_origin_x; // 0x1320	
	float aura_origin_y; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_MagneticField_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_ArcWardenBoss_SparkWraith : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	float activation_delay; // 0x56c	
	float wraith_vision_duration; // 0x570	
	int32_t wraith_vision_radius; // 0x574	
	int32_t spark_damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_SparkWraith_Purge : public CDOTA_Buff
{
public:
	int32_t move_speed_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_SparkWraith_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t wraith_vision_radius; // 0x131c	
	int32_t wraith_speed; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x8]; // 0x1324
public:
	float activation_delay; // 0x132c	
	float scepter_activation_delay; // 0x1330	
	float think_interval; // 0x1334	
	float search_timer_min; // 0x1338	
	float search_timer_max; // 0x133c	
	float mini_stun_duration; // 0x1340	
	int32_t move_speed_slow_pct; // 0x1344	
	int32_t m_nSparkDamage; // 0x1348	
	bool m_bActive; // 0x134c	
	bool m_bOriginal; // 0x134d	
private:
	[[maybe_unused]] uint8_t __pad134e[0x2]; // 0x134e
public:
	float m_fSearchTimer; // 0x1350	
	float m_fRotationSpeed; // 0x1354	
	int32_t m_nRotationDirection; // 0x1358	
	Vector m_vRotationCenter; // 0x135c	
	ParticleIndex_t m_nFXIndex; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Ability_ArcWardenBoss_TempestDouble : public CDOTABaseAbility
{
public:
	int32_t m_nNumDoubles; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_TempestDouble : public CDOTA_Buff
{
public:
	int32_t damage_increase; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_TempestDouble_Phase : public CDOTA_Buff
{
public:
	int32_t num_doubles; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_AghsFort_ArcWardenBoss_MeteorShockwave_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	bool m_bWindingUp; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CountdownTimer m_ViewerTimer; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1348	
	int32_t speed; // 0x1360	
	int32_t radius; // 0x1364	
	float knockback_distance; // 0x1368	
	float knockback_duration; // 0x136c	
	float windup_time; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Aghsfort_Ability_ArcWardenBoss_Gleipnir : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ArcWardenBoss_SparkWraith_Missile : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
class CDOTA_Modifier_Aghsfort_ArcWardenBoss_SparkWraith_Missile : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	ParticleIndex_t m_nFXIndex2; // 0x131c	
	int32_t hero_damage; // 0x1320	
	int32_t acceleration; // 0x1324	
	int32_t min_damage; // 0x1328	
	int32_t max_distance; // 0x132c	
	float pre_flight_time; // 0x1330	
	float stun_duration; // 0x1334	
	int32_t m_nMissileDamage; // 0x1338	
	int32_t m_nTeamNumber; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad1340[0x8]; // 0x1340
public:
	float speed; // 0x1348	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x134c	
	Vector m_vStartPosition; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CountdownTimer m_EnemyVision; // 0x1360	
	CountdownTimer m_MoveTime; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_ArcWardenBoss_SparkWraith_Missile_Target : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_BossEarthshaker_Fissure : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_Fissure_Shard : public CDOTA_Buff
{
public:
	Vector m_vStartPos; // 0x1318	
	Vector m_vEndPos; // 0x1324	
	GameTime_t m_flEndTime; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_Fissure_Shard_Pathing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_Fissure_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_Fissure_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_BossEarthshaker_EnchantTotem : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_EnchantTotem_Leap : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x4]; // 0x1318
public:
	Vector m_vLoc; // 0x131c	
	float m_flPredictedTotalTime; // 0x1328	
	Vector m_vStartPosition; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bHorizontalMotionInterrupted; // 0x1340	
	bool m_bDamageApplied; // 0x1341	
	bool m_bTargetTeleported; // 0x1342	
private:
	[[maybe_unused]] uint8_t __pad1343[0x1]; // 0x1343
public:
	Vector m_vHorizontalVelocity; // 0x1344	
	Vector m_vLastKnownTargetPosition; // 0x1350	
	float m_flInitialVelocityZ; // 0x135c	
	ParticleIndex_t m_nPreviewFX; // 0x1360	
	int32_t scepter_height; // 0x1364	
	int32_t scepter_height_arcbuffer; // 0x1368	
	int32_t scepter_acceleration_z; // 0x136c	
	int32_t scepter_acceleration_horizontal; // 0x1370	
	int32_t landing_radius; // 0x1374	
	float landing_debuff_duration; // 0x1378	
	int32_t landing_impact_damage; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_EnchantTotem_Animation : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_EnchantTotem_LandDebuff : public CDOTA_Buff
{
public:
	int32_t landing_move_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_BossEarthshaker_EnchantTotem : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
	int32_t totem_damage_percentage; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad1320[0x8]; // 0x1320
public:
	bool bActive; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_CreateRock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Rock_Thinker : public CDOTA_Buff
{
public:
	int32_t effect_radius; // 0x1318	
	float rock_duration; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Rock_HP : public CDOTA_Buff
{
public:
	int32_t rock_health; // 0x1318	
	int32_t rock_visualzdelta; // 0x131c	
	bool m_bIsCrushing; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t summon_count; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Rock_Crush : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hRock; // 0x1318	
	QAngle m_qRotation; // 0x131c	
	float m_flOldPitch; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_HeavySteps : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Primalbeast_Boss_HeavySteps : public CDOTA_Buff
{
public:
	Vector vLastPos; // 0x1318	
	float flCurrentDistance; // 0x1324	
	int32_t step_distance; // 0x1328	
	int32_t effect_radius; // 0x132c	
	int32_t base_damage; // 0x1330	
	CHandle< CBaseEntity > m_hTarget; // 0x1334	
	CountdownTimer ctLastCommandTimer; // 0x1338	
	bool m_bMoveCommandIssued; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_Pummel : public CDOTABaseAbility
{
public:
	CDOTA_BaseNPC* m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Pummel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	float m_flOffset; // 0x131c	
	QAngle m_vStartAngles; // 0x1320	
	float animation_rate; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Pummel_Self : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1318	
	Vector m_vPos; // 0x131c	
	int32_t splash_radius; // 0x1328	
	float interval; // 0x132c	
	float ministun; // 0x1330	
	int32_t m_nCurrentHitCount; // 0x1334	
	int32_t total_ripple_circles; // 0x1338	
	int32_t ripple_step_distance; // 0x133c	
	int32_t ripple_step_distance_offset; // 0x1340	
	float health_damage; // 0x1344	
	float ripple_duration; // 0x1348	
	int32_t ripple_damage; // 0x134c	
	CUtlVector< int32 > m_vLastRippleOffsets; // 0x1350	
	float self_animation_rate; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Pummel_Ripple_Thinker : public CDOTA_Buff
{
public:
	int32_t ripple_effect_width; // 0x1318	
	int32_t ripple_damage; // 0x131c	
	int32_t health_damage; // 0x1320	
	int32_t ripple_count; // 0x1324	
	int32_t total_ripple_circles; // 0x1328	
	float radius; // 0x132c	
	float ripple_slow_duration; // 0x1330	
	float ripple_knockback_duration; // 0x1334	
	CHandle< CBaseEntity > m_hGrabbedEnemy; // 0x1338	
	ParticleIndex_t m_nPreviewFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Pummel_Damage_Tracking : public CDOTA_Buff
{
public:
	int32_t damage_limit; // 0x1318	
	ParticleIndex_t m_nFxIndex; // 0x131c	
	float m_fTotalDamage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Pummel_End_Knockback : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bTargetTeleported; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Pummel_LootDrop_Thinker : public CDOTA_Buff
{
public:
	bool m_bAutoPickup; // 0x1318	
	bool m_bOnlyPlayerHeroPickup; // 0x1319	
	bool m_bCreepHeroPickup; // 0x131a	
	bool m_bAutoUse; // 0x131b	
	bool m_bFlying; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	GameTime_t m_flKnockbackStartTime; // 0x1320	
	GameTime_t m_flKnockbackEndTime; // 0x1324	
	float m_flKnockbackHeight; // 0x1328	
	float m_flInitialHeight; // 0x132c	
	float m_flKnockbackDuration; // 0x1330	
	float m_flEndHeight; // 0x1334	
	Vector m_vStartPos; // 0x1338	
	Vector m_vEndPos; // 0x1344	
	ParticleIndex_t m_nContainerFx; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Pummel_DroppedItem : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPreviewFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_Onslaught : public CDOTABaseAbility
{
public:
	float max_charge_time; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Onslaught_Windup : public CDOTA_Buff
{
public:
	float m_flFacingTarget; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	ParticleIndex_t m_nCrosshairFX; // 0x1320	
	float charge_duration; // 0x1324	
	float max_charge_time; // 0x1328	
	float turn_rate; // 0x132c	
	float base_power; // 0x1330	
	int32_t charge_speed; // 0x1334	
	float animation_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Onslaught_Movement : public CDOTA_Buff
{
public:
	float charge_speed; // 0x1318	
	int32_t knockback_radius; // 0x131c	
	int32_t knockback_distance; // 0x1320	
	int32_t knockback_damage; // 0x1324	
	int32_t forward_offset; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x132c	
	float m_flFacingTarget; // 0x1330	
	ParticleIndex_t m_nFXIndex; // 0x1334	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Onslaught_Knockback : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bTargetTeleported; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_Inhibition : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Inhibition : public CDOTA_Buff
{
public:
	float debuff_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Inhibition_Debuff : public CDOTA_Buff
{
public:
	int32_t heal_suppression_pct; // 0x1318	
	int32_t armor_reduction_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_Vault : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_Vault : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	GameTime_t m_flEndTime; // 0x1320	
	Vector m_vStartPosition; // 0x1324	
	Vector m_vTargetHorizontalDirection; // 0x1330	
	float m_flCurrentTimeHoriz; // 0x133c	
	float m_flCurrentTimeVert; // 0x1340	
	bool m_bInterrupted; // 0x1344	
	bool m_bStartedLandingSequence; // 0x1345	
private:
	[[maybe_unused]] uint8_t __pad1346[0x2]; // 0x1346
public:
	float vault_speed; // 0x1348	
	float vault_acceleration; // 0x134c	
	int32_t vault_radius; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_ThrowAttack : public CDOTABaseAbility
{
public:
	int32_t base_damage; // 0x568	
	int32_t hp_damage_pct; // 0x56c	
	int32_t impact_radius; // 0x570	
	int32_t fragment_impact_distance; // 0x574	
	int32_t min_range; // 0x578	
	ParticleIndex_t m_nFXPreview; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_RoarAttack : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x568	
	int32_t projectile_count; // 0x56c	
	float rotation_angle; // 0x570	
	float damage; // 0x574	
	float radius; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CountdownTimer ctTimer; // 0x580	
	Vector m_vecStartRot; // 0x598	
	Vector m_vecEndRot; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Primalbeast_Boss_RoarAttack_Start : public CDOTA_Buff
{
public:
	int32_t rock_drop_intervals; // 0x1318	
	int32_t rock_drop_per_interval; // 0x131c	
	int32_t rock_drop_distance; // 0x1320	
	int32_t m_nCurrentInterval; // 0x1324	
	int32_t rock_drop_rotation_angle; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_NoCC : public CDOTA_Buff
{
public:
	bool bCanbeMotionControlled; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c8
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_TectonicShift : public CDOTA_Buff
{
public:
	int32_t projectile_speed; // 0x1318	
	int32_t projectile_speed_increment; // 0x131c	
	int32_t projectile_distance; // 0x1320	
	int32_t projectile_width; // 0x1324	
	int32_t projectiles_per_interval; // 0x1328	
	int32_t projectiles_per_interval_increment; // 0x132c	
	int32_t initial_spread_angle; // 0x1330	
	int32_t angle_offset; // 0x1334	
	int32_t iCurrentInterval; // 0x1338	
	int32_t splinter_angle; // 0x133c	
	CountdownTimer m_LeftHandSmashTimer; // 0x1340	
	CountdownTimer m_RightHandSmashTimer; // 0x1358	
	CountdownTimer m_AttackIntervalTimer; // 0x1370	
	float initial_interval; // 0x1388	
	float interval_reduction; // 0x138c	
	float min_interval; // 0x1390	
	int32_t arm_distance_forward; // 0x1394	
	int32_t arm_distance_side; // 0x1398	
	int32_t splash_radius; // 0x139c	
	int32_t max_split_amount; // 0x13a0	
	int32_t m_nCurrentCastCount; // 0x13a4	
	int32_t max_projectiles; // 0x13a8	
private:
	[[maybe_unused]] uint8_t __pad13ac[0x4]; // 0x13ac
public:
	CUtlVector< int32 > m_vecProjectileHandles; // 0x13b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_TectonicShift : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_PrimalBeast_Boss_PrimalRoar : public CDOTABaseAbility
{
public:
	int32_t path_width; // 0x568	
	float push_duration; // 0x56c	
	int32_t push_distance; // 0x570	
	int32_t min_distance; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_PrimalRoar_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_PrimalRoar_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1318	
	int32_t slow_attack_speed_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_PrimalRoar_Push : public CDOTA_Buff
{
public:
	Vector m_vVelocity; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_InAbilityPhaseStart : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_TectonicShift_CastTracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_TectonicShift_TimeOut : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_PrimalBeast_Boss_TectonicShift_Damage : public CDOTA_Buff
{
public:
	float tick_damage; // 0x1318	
	int32_t damage_ticks; // 0x131c	
	int32_t m_nTickAmount; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Sand_King_SandStorm : public CDOTABaseAbility
{
public:
	int32_t m_iRadius; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Sand_King_CausticFinale : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_CausticFinaleOrb : public CDOTA_Buff
{
public:
	int32_t caustic_finale_radius; // 0x1318	
	int32_t caustic_finale_damage_death; // 0x131c	
	int32_t caustic_finale_damage_dot; // 0x1320	
	int32_t caustic_finale_slow; // 0x1324	
	float caustic_finale_dot_tick; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_CausticFinale : public CDOTA_Buff
{
public:
	float caustic_finale_duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_BurrowStrike_Reverse_Tracking : public CDOTA_Buff
{
public:
	Vector m_vStartLocation; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Sand_King_BurrowStrike : public CDOTABaseAbility
{
public:
	int32_t burrow_width; // 0x568	
	int32_t burrow_speed; // 0x56c	
	float burrow_anim_time; // 0x570	
	Vector m_vStartLocation; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_Impale : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	bool m_bDamageApplied; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	float m_flPower; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_BurrowStrike : public CDOTA_Buff
{
public:
	Vector m_vPopupLocation; // 0x1318	
	bool m_bTeleported; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_SandStorm : public CDOTA_Buff
{
public:
	float sand_storm_radius; // 0x1318	
	int32_t sand_storm_damage; // 0x131c	
	float damage_tick_rate; // 0x1320	
	GameTime_t m_flLastDamageTime; // 0x1324	
	ParticleIndex_t m_nSandStormParticleIndex1; // 0x1328	
	ParticleIndex_t m_nSandStormParticleIndex2; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad1330[0x8]; // 0x1330
public:
	CHandle< CBaseEntity > m_hThinker; // 0x1338	
	CHandle< CBaseEntity > m_hBurrowstrikeFieldThinker; // 0x133c	
	bool m_bIsPrimarySandstorm; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	Vector vecSpawnPos; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_SandStorm_Slow_Aura_Thinker : public CDOTA_Buff
{
public:
	float sand_storm_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_SandStorm_Slow : public CDOTA_Buff
{
public:
	int32_t blind_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Sand_King_Epicenter : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXEpicenterIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_Epicenter : public CDOTA_Buff
{
public:
	int32_t epicenter_pulses; // 0x1318	
	int32_t epicenter_radius[16]; // 0x131c	
	int32_t epicenter_damage; // 0x135c	
	int32_t m_iMaxPulses; // 0x1360	
	int32_t m_iPulseCount; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_Epicenter_Slow : public CDOTA_Buff
{
public:
	int32_t epicenter_slow; // 0x1318	
	int32_t epicenter_slow_as; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_BurrowStrike_Reverse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_BurrowStrike_Channel : public CDOTA_Buff
{
public:
	Vector m_vTargetPos; // 0x1318	
	ParticleIndex_t m_nCrosshairFX; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_Burrowstrike_Transport : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
	Vector m_vDirection; // 0x131c	
	float m_flEndTime; // 0x1328	
	float m_flCurTime; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_Sandstorm_Burrowstrike_Field_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1318	
	float explosion_interval; // 0x131c	
	int32_t explosion_radius; // 0x1320	
	int32_t explosion_min_dist; // 0x1324	
	float m_fLastTick; // 0x1328	
	float m_fTimeAccumulator; // 0x132c	
	int32_t m_iExplosionCount; // 0x1330	
	int32_t m_iExplosionTotalCount; // 0x1334	
	int32_t m_iExplosionQuadrant; // 0x1338	
	int32_t m_iExplosionDistance; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Sand_King_Sandstorm_Vacuum : public CDOTA_Buff
{
public:
	float pull_speed; // 0x1318	
	Vector vPullLocation; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Sand_King_CausticFinale_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_BurrowStrike_Channel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_BurrowStrike_Transport : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_SandStorm_Independant : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_SandStorm_Burrowstrike_Field : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_SandStorm_Vacuum : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_Caustic_Finale_Sandstorm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_Caustic_Finale_Active : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_Caustic_Finale_StrengthBuff : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Sand_King_Caustic_Finale_StrengthBuff : public CDOTA_Buff
{
public:
	int32_t str_pct; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_Caustic_Finale_Epicenter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_Epicenter_Movement : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Sand_King_Epicenter_Movement : public CDOTA_Buff
{
public:
	Vector vLastPos; // 0x1318	
	float m_fAccumulatedDistance; // 0x1324	
	int32_t movement_distance; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_Epicenter_Allies : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Special_Sand_King_Epicenter_DamageResist : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Special_Sand_King_Epicenter_DamageResist : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	int32_t status_resistance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Sand_King_BurrowStrike_Channel_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Clinkz_BurningBarrage : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x568	
	int32_t m_iArrowProjectile; // 0x574	
	int32_t m_nFXIndex; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x1c]; // 0x57c
public:
	int32_t m_nTriSplitCount; // 0x598	
	int32_t projectile_speed; // 0x59c	
	int32_t projectile_width; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningBarrage_DamageReduction : public CDOTA_Buff
{
public:
	int32_t damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningBarrage : public CDOTA_Buff
{
public:
	Vector m_vOriginalTarget; // 0x1318	
	int32_t wave_count; // 0x1324	
	int32_t projectile_speed; // 0x1328	
	int32_t projectile_width; // 0x132c	
	float m_flInterval; // 0x1330	
	int32_t m_nArrowsFired; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Clinkz_SearingArrows : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SearingArrows : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	bool m_bBonusAttack; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	int32_t damage_bonus; // 0x1334	
	float debuff_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SearingArrows_Debuff : public CDOTA_Buff
{
public:
	int32_t attack_slow; // 0x1318	
	float m_fIgniteThinkInterval; // 0x131c	
	float m_fIgniteDmgPerSec; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Clinkz_BurningArmy : public CDOTABaseAbility
{
public:
	int32_t range; // 0x568	
	Vector m_vEndpoint; // 0x56c	
	Vector m_vSlashDir; // 0x578	
	int32_t m_nDashProjectileID; // 0x584	
	Vector m_vDashProjectileLocation; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningArmy_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1318	
	Vector m_vFacePosition; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningArmy : public CDOTA_Buff
{
public:
	float attack_rate; // 0x1318	
	int32_t damage_percent; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1320	
	bool m_bHasAttacked; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Clinkz_SkeletonWalk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletonWalk : public CDOTA_Modifier_Invisible
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecWraithTouchedEntities; // 0x1328	
	int32_t move_speed_bonus_pct; // 0x1340	
	int32_t bonus_magic_resist; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_BurningBarrage_TriSplit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_BurningBarrage_SkeletonShot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_BurningBarrage_Singe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningBarrage_Singe : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningBarrage_Singe_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_SearingArrows_Ignite : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_SearingArrows_SkeletalColossus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Clinkz_SkeletalColossus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletalColossus_Thinker : public CDOTA_Buff
{
public:
	float lifetime; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletonColossus : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	float cleave_damage_pct; // 0x131c	
	int32_t cleave_starting_width; // 0x1320	
	int32_t cleave_ending_width; // 0x1324	
	int32_t cleave_distance; // 0x1328	
	int32_t block_damage_ranged_active; // 0x132c	
	int32_t block_damage_melee_active; // 0x1330	
	int32_t hp_gain_per_caster_level; // 0x1334	
	float hp_regen_per_caster_level; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_SearingArrows_Melter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SearingArrows_Melter : public CDOTA_Buff
{
public:
	float armor_reduction_per_arrow; // 0x1318	
	int32_t m_nMaxStacks; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_SkeletonWalk_BeckonUndead : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_SkeletonWalk_WraithTouch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletonWalk_WraithTouch_Enemy : public CDOTA_Buff
{
public:
	float m_fAttackLoss; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletonWalk_WraithTouch_Caster : public CDOTA_Buff
{
public:
	int32_t max_stacks; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_SkeletonWalk_Strafe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletonWalk_Strafe : public CDOTA_Buff
{
public:
	float m_fAttackSpeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_BurningArmy_Entrenchment : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Clinkz_BurningArmy_Entrenchment : public CDOTA_Buff
{
public:
	float m_fSlowPct; // 0x1318	
	float radius; // 0x131c	
	float think_interval; // 0x1320	
	float linger_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningArmy_Entrenchment_Buff : public CDOTA_Buff
{
public:
	float m_fLifestealPct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningArmy_Entrenchment_Debuff : public CDOTA_Buff
{
public:
	float m_fSlowPct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_BurningArmy_BigSkeletons : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Special_Clinkz_BurningArmy_StunningSkeletons : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningArmy_StunningSkeleton_Debuff : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningArmy_BigSkeletons : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x38]; // 0x1318
public:
	int32_t model_scale; // 0x1350	
	float radius; // 0x1354	
	int32_t splitshot_count; // 0x1358	
	float debuff_duration; // 0x135c	
	float pct_for_moveslow; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_BurningArmy_BigSkeletons_Debuff : public CDOTA_Buff
{
public:
	float m_fMovementSlow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletalColossus_BigSkeletons : public CDOTA_Buff
{
public:
	int32_t m_nInitialHealthBarOffset; // 0x1318	
	int32_t colossus_model_scale; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Clinkz_SkeletalColossus_BigSkeletons_Ministun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Talent_Clinkz_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_BossDarkWillow_ShadowRealm : public CDOTABaseAbility
{
public:
	int32_t projectile_damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_BossDarkWillow_ShadowRealm_Buff : public CDOTA_Buff
{
public:
	float m_fAddInterval; // 0x1318	
	GameTime_t m_fNextAddTime; // 0x131c	
	GameTime_t m_flStartTime; // 0x1320	
	float m_flDamageScale; // 0x1324	
	float duration; // 0x1328	
	float attack_logic_duration; // 0x132c	
	int32_t speed_boost; // 0x1330	
	int32_t num_adds; // 0x1334	
	int32_t projectile_range; // 0x1338	
	int32_t projectile_speed; // 0x133c	
	int32_t projectile_width; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_BossDarkWillow_CursedCrown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_BossDarkWillow_CursedCrown : public CDOTA_Buff
{
public:
	float delay; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t stun_radius; // 0x1320	
	int32_t damage; // 0x1324	
	GameTime_t m_fStartTime; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientApparition_ColdFeet : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AncientApparition_ColdFeet : public CDOTA_Buff
{
public:
	Vector m_vecStartPosition; // 0x1318	
	int32_t m_nCurrentTick; // 0x1324	
	float damage; // 0x1328	
	int32_t break_distance; // 0x132c	
	float stun_duration; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AncientApparition_ColdFeet_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientApparition_IceVortex : public CDOTABaseAbility
{
public:
	int32_t vision_aoe; // 0x568	
	float vortex_duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AncientApparition_IceVortexThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t movement_speed_pct; // 0x131c	
	int32_t spell_resist_pct; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	CUtlVector< CHandle< CBaseEntity > > m_hChilledEntities; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AncientApparition_IceVortex : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1318	
	int32_t spell_resist_pct; // 0x131c	
	int32_t drag_speed; // 0x1320	
	float aura_origin_x; // 0x1324	
	float aura_origin_y; // 0x1328	
	int32_t shard_dps; // 0x132c	
	int32_t shard_attack_speed_reduction; // 0x1330	
	Vector m_vCenter; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientApparition_ChillingTouch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AncientApparition_ChillingTouch : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float duration; // 0x131c	
	int32_t attack_range_bonus; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AncientApparition_ChillingTouch_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientApparition_IceBlast : public CDOTABaseAbility
{
public:
	CountdownTimer m_PathTimer; // 0x568	
	Vector m_vTarget; // 0x580	
	Vector m_vStartPos; // 0x58c	
	Vector m_vLastTempViewer; // 0x598	
	int32_t m_iTrackerProjectile; // 0x5a4	
	int32_t path_radius; // 0x5a8	
	int32_t radius_min; // 0x5ac	
	int32_t radius_max; // 0x5b0	
	float radius_grow; // 0x5b4	
	float frostbite_duration; // 0x5b8	
	int32_t target_sight_radius; // 0x5bc	
	CUtlVector< CHandle< CBaseEntity > > m_hFrostbittenEntities; // 0x5c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientApparition_IceBlast_Release : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AncientApparition_IceBlast : public CDOTA_Buff
{
public:
	float dot_damage; // 0x1318	
	float kill_pct; // 0x131c	
	CHandle< CBaseEntity > m_hFracturingEntity; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AncientApparition_IceAge : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	int32_t health_degen; // 0x56c	
	float duration; // 0x570	
	int32_t damage; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AncientApparition_IceAge : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_ManaBreak : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AntiMage_ManaBreak : public CDOTA_Buff
{
public:
	int32_t percent_damage_per_burn; // 0x1318	
	int32_t mana_per_hit; // 0x131c	
	float mana_per_hit_pct; // 0x1320	
	float slow_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AntiMage_ManaBreak_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MParticleDomainTag
// MPulseProvideFeatureTag
// MPulseLibraryBindings
class CDOTA_Ability_AntiMage_Blink : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_Blink_Fake : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AntiMage_Blink_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_SpellShield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_Counterspell_Ally : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_Counterspell : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Antimage_DampenMagic_Aura_Strong : public CDOTA_Buff
{
public:
	int32_t shard_bonus_aura_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Antimage_DampenMagic_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Antimage_DampenMagic_Aura : public CDOTA_Buff
{
public:
	int32_t shard_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Antimage_DampenMagic : public CDOTA_Buff
{
public:
	int32_t shard_spell_damage_reduction_pct; // 0x1318	
	int32_t shard_bonus_spell_damage_reduction_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AntiMage_Counterspell_Passive : public CDOTA_Buff
{
public:
	int32_t magic_resistance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1500
// Has VTable
class CDOTA_Modifier_AntiMage_Counterspell : public CDOTA_Buff
{
public:
	CModifierParams m_LastParams; // 0x1318	
	int32_t magic_resistance; // 0x14f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_ManaVoid : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AntiMage_ManaVoid : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_Scepter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AntiMage_Mana_Overload : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bane_Enfeeble : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bane_Enfeeble : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Bane_Enfeeble_Effect : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	int32_t heal_reduction; // 0x131c	
	int32_t cast_reduction; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bane_BrainSap : public CDOTABaseAbility
{
public:
	int32_t brain_sap_damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bane_Nightmare : public CDOTABaseAbility
{
public:
	int32_t m_nNightmareSwapCount; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bane_NightmareEnd : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bane_Nightmare : public CDOTA_Buff
{
public:
	int32_t m_nSource; // 0x1318	
	float animation_rate; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bane_Nightmare_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bane_Nightmare_AttackSpeed_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hGripTarget"
class CDOTA_Ability_Bane_FiendsGrip : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hGripTarget; // 0x568	
	int32_t fiend_grip_damage; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bane_FiendsGrip : public CDOTA_Buff
{
public:
	int32_t fiend_grip_mana_drain; // 0x1318	
	float fiend_grip_tick_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bane_FiendsGrip_Cast_Illusion : public CDOTA_Buff
{
public:
	int32_t fiend_grip_mana_drain; // 0x1318	
	float fiend_grip_tick_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bane_FiendsGrip_Self : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bane_FiendsGrip_Illusion_Can_Only_Channel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bane_FiendsGrip_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pudge_Eject : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pudge_Swallow : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Pudge_Swallow_Hide : public CDOTA_Buff
{
public:
	float order_lock_duration; // 0x1318	
	GameTime_t m_fOrderLockDone; // 0x131c	
	int32_t m_nFXIndex; // 0x1320	
	float shard_regen_pct; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pudge_Swallow_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nConsecutiveHits"
class CDOTA_Ability_Pudge_MeatHook : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	Vector m_vProjectileLocation; // 0x578	
	float hook_speed; // 0x584	
	int32_t hook_width; // 0x588	
	int32_t hook_distance; // 0x58c	
	bool m_bRetracting; // 0x590	
	bool m_bDiedInHook; // 0x591	
private:
	[[maybe_unused]] uint8_t __pad0592[0x2]; // 0x592
public:
	CHandle< CBaseEntity > m_hVictim; // 0x594	
	Vector m_vTargetPosition; // 0x598	
	Vector m_vCasterPosition; // 0x5a4	
	bool m_bChainDetached; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x3]; // 0x5b1
public:
	ParticleIndex_t m_iChainParticle; // 0x5b4	
	ParticleIndex_t m_iSecondaryChainParticle; // 0x5b8	
	int32_t m_iHookParticle; // 0x5bc	
	int32_t m_nManaCost; // 0x5c0	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5c4	
	int32_t m_nNextConsecutiveHitCount; // 0x5c8	
	Vector m_vEndpoint; // 0x5cc	
	// MNetworkEnable
	int32_t m_nConsecutiveHits; // 0x5d8	
	bool m_bIsVectorTargeted; // 0x5dc	
private:
	[[maybe_unused]] uint8_t __pad05dd[0x3]; // 0x5dd
public:
	Vector m_vTurnLocation; // 0x5e0	
	Vector m_vDirectionAfterTurn; // 0x5ec	
	bool m_bHasTurned; // 0x5f8	
private:
	[[maybe_unused]] uint8_t __pad05f9[0x3]; // 0x5f9
public:
	float m_flDistanceAfterTurn; // 0x5fc	
	Vector m_vFinalPosition; // 0x600	
	float reveal_duration; // 0x60c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pudge_Meat_Hook_Reveal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pudge_Meat_Hook_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pudge_Meat_Hook : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pudge_Rot : public CDOTABaseAbility
{
public:
	int32_t rot_damage; // 0x568	
	GameTime_t m_flLastRotTime; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Pudge_Rot : public CDOTA_Buff
{
public:
	int32_t rot_damage; // 0x1318	
	int32_t rot_slow; // 0x131c	
	int32_t scepter_rot_regen_reduction_pct; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x8]; // 0x1324
public:
	GameTime_t m_flLastRotTime; // 0x132c	
	bool m_bQualifiesAsPotentionalDeny; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pudge_FleshHeap_Block : public CDOTA_Buff
{
public:
	float damage_block; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Pudge_FleshHeap : public CDOTA_Buff
{
public:
	float magic_resistance; // 0x1318	
	float damage_block; // 0x131c	
	float flesh_heap_strength_buff_amount; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hVictim"
class CDOTA_Ability_Pudge_Dismember : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hVictim; // 0x568	
	int32_t shard_cast_range; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Pudge_Dismember : public CDOTA_Buff
{
public:
	int32_t dismember_damage; // 0x1318	
	float strength_damage; // 0x131c	
	int32_t m_nTicks; // 0x1320	
	int32_t m_nMaxTicks; // 0x1324	
	float m_flTickRate; // 0x1328	
	float animation_rate; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Pudge_Dismember_Pull : public CDOTA_Buff
{
public:
	Vector m_vDestination; // 0x1318	
	int32_t pull_units_per_second; // 0x1324	
	float pull_distance_limit; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x8]; // 0x132c
public:
	float animation_rate; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pudge_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pudge_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pudge_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pudge_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pudge_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pudge_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Pudge_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Juggernaut_BladeFury : public CDOTABaseAbility
{
public:
	int32_t blade_fury_damage_per_tick; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Juggernaut_BladeFury : public CDOTA_Buff
{
public:
	int32_t blade_fury_radius; // 0x1318	
	int32_t blade_fury_damage_per_tick; // 0x131c	
	float blade_fury_aspd_multiplier; // 0x1320	
	float m_flTotalAppliedDamage; // 0x1324	
	int32_t bonus_movespeed; // 0x1328	
	GameTime_t m_flNextAttack; // 0x132c	
	bool m_bIgnoreAttackRestriction; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Juggernaut_BladeFury_PullAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Juggernaut_BladeFury_Pull : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jugg_Caster : public CDOTA_Buff
{
public:
	int32_t shard_damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Juggernaut_HealingWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Juggernaut_Healing_Ward_Aura : public CDOTA_Buff
{
public:
	int32_t healing_ward_movespeed_tooltip; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Juggernaut_Healing_Ward_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Juggernaut_Healing_Ward_Heal : public CDOTA_Buff
{
public:
	int32_t healing_ward_heal_amount; // 0x1318	
	int32_t m_nStartingHealthThisInterval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Juggernaut_BladeDance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Juggernaut_BladeDance : public CDOTA_Buff
{
public:
	int32_t blade_dance_crit_mult; // 0x1318	
	int32_t blade_dance_crit_chance; // 0x131c	
	int32_t blade_dance_lifesteal; // 0x1320	
	bool m_bHasCrit; // 0x1324	
	bool m_bWasBladeDanceTriggeredCrit; // 0x1325	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Juggernaut_Omnislash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Juggernaut_Swift_Slash : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Juggernaut_Omnislash : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	CHandle< CBaseEntity > m_hLastTarget; // 0x131c	
	int32_t m_nJumps; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	int32_t bonus_attack_speed; // 0x1328	
	int32_t omni_slash_radius; // 0x132c	
	float attack_rate_multiplier; // 0x1330	
	bool m_bFirstHit; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	int32_t m_iTotalDamage; // 0x1338	
	int32_t m_iHeroDamage; // 0x133c	
	int32_t m_iKilledHeroes; // 0x1340	
	GameTime_t m_fNextAttackTime; // 0x1344	
	bool m_bScepterCast; // 0x1348	
	bool m_bReflection; // 0x1349	
	bool m_bEndNext; // 0x134a	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Juggernaut_Omnislash_Invulnerability : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nevermore_Shadowraze : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	ParticleIndex_t m_nFXIndexB; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shadowraze_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1318	
	int32_t turn_rate_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shadowraze_Counter : public CDOTA_Buff
{
public:
	float shadowraze_cooldown; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nevermore_Shadowraze1 : public CDOTA_Ability_Nevermore_Shadowraze
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nevermore_Shadowraze2 : public CDOTA_Ability_Nevermore_Shadowraze
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nevermore_Shadowraze3 : public CDOTA_Ability_Nevermore_Shadowraze
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nevermore_Presence : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nevermore_Presence_Aura : public CDOTA_Buff
{
public:
	int32_t presence_radius; // 0x1318	
	float kill_buff_duration; // 0x131c	
	GameTime_t m_fLastStackChange; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nevermore_Presence : public CDOTA_Buff
{
public:
	int32_t presence_armor_reduction; // 0x1318	
	int32_t bonus_armor_per_stack; // 0x131c	
	bool m_bWasHidden; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nevermore_Necromastery : public CDOTABaseAbility
{
public:
	int32_t attack_range_bonus; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nevermore_Requiem : public CDOTABaseAbility
{
public:
	int32_t requiem_line_width_start; // 0x568	
	int32_t requiem_line_width_end; // 0x56c	
	int32_t m_nCachedSouls; // 0x570	
	ParticleIndex_t m_nFXIndex; // 0x574	
	int32_t m_nKilleater_nLines; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesReqd; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Nevermore_Necromastery : public CDOTA_Buff
{
public:
	int32_t necromastery_damage_per_soul; // 0x1318	
	int32_t necromastery_max_souls; // 0x131c	
	int32_t necromastery_max_souls_scepter; // 0x1320	
	int32_t shard_crit_pct; // 0x1324	
	int32_t shard_souls_per_kill; // 0x1328	
	float shard_fear_duration; // 0x132c	
	ParticleIndex_t m_iParticleSoulsIndex; // 0x1330	
	ParticleIndex_t m_FXIndex; // 0x1334	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nevermore_Requiem_InvisBreak : public CDOTA_Buff
{
public:
	bool bDisableInvis; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nevermore_Requiem_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nevermore_Requiem_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nevermore_Requiem_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nevermore_Necromastery_Fear : public CDOTA_Modifier_Nevermore_Requiem_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nevermore_Requiem_Slow : public CDOTA_Buff
{
public:
	int32_t requiem_reduction_ms; // 0x1318	
	int32_t requiem_reduction_mres; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SandKing_CausticFinale : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_SandKing_CausticFinale : public CDOTA_Buff
{
public:
	float caustic_finale_duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SandKing_CausticFinaleOrb : public CDOTA_Buff
{
public:
	int32_t caustic_finale_radius; // 0x1318	
	int32_t caustic_finale_damage_base; // 0x131c	
	int32_t caustic_finale_damage_pct; // 0x1320	
	int32_t caustic_finale_slow; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SandKing_BurrowStrike : public CDOTABaseAbility
{
public:
	int32_t burrow_width; // 0x568	
	int32_t burrow_speed; // 0x56c	
	int32_t burrow_speed_scepter; // 0x570	
	float burrow_anim_time; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SandKing_Impale : public CDOTA_Buff
{
public:
	float m_flPower; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	bool m_bDamageApplied; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Sand_King_BurrowStrike : public CDOTA_Buff
{
public:
	Vector m_vPopupLocation; // 0x1318	
	bool m_bTeleported; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SandKing_SandStorm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_SandKing_SandStorm : public CDOTA_Modifier_PersistentInvisibility
{
public:
	int32_t sand_storm_radius; // 0x1328	
	int32_t sand_storm_damage; // 0x132c	
	float damage_tick_rate; // 0x1330	
	GameTime_t m_flLastDamageTime; // 0x1334	
	ParticleIndex_t m_nSandStormParticleIndex1; // 0x1338	
	ParticleIndex_t m_nSandStormParticleIndex2; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad1340[0x8]; // 0x1340
public:
	CHandle< CBaseEntity > m_hThinker; // 0x1348	
	int32_t sand_storm_move_speed; // 0x134c	
	Vector vecSpawnPos; // 0x1350	
	int32_t m_iExplosionQuadrant; // 0x135c	
	int32_t m_iExplosionDistance; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SandKing_SandStorm_Slow_Aura_Thinker : public CDOTA_Buff
{
public:
	int32_t sand_storm_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SandKing_SandStorm_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t blind; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SandKing_Epicenter : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXEpicenterIndex; // 0x568	
	ParticleIndex_t m_nFXIndex; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_SandKing_Epicenter : public CDOTA_Buff
{
public:
	int32_t epicenter_radius_base; // 0x1318	
	int32_t epicenter_radius_increment; // 0x131c	
	int32_t epicenter_pulses; // 0x1320	
	int32_t epicenter_radius[16]; // 0x1324	
	int32_t m_iMaxPulses; // 0x1364	
	int32_t m_iPulseCount; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SandKing_Epicenter_Slow : public CDOTA_Buff
{
public:
	int32_t epicenter_slow; // 0x1318	
	int32_t epicenter_slow_as; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Sand_King_Shard : public CDOTA_Buff
{
public:
	float shard_move_distance; // 0x1318	
	float shard_interval; // 0x131c	
	Vector vLastPos; // 0x1320	
	float m_fAccumulatedDistance; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mirana_Starfall : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Mirana_Starfall_Scepter_Thinker : public CDOTA_Buff
{
public:
	float interval_scepter; // 0x1318	
	bool bInBufferTime; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	int32_t damage; // 0x1320	
	GameTime_t m_flLastApplyTime; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Mirana_Starfall_Thinker : public CDOTA_Buff
{
public:
	int32_t starfall_secondary_radius; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	int32_t m_iDamage; // 0x1320	
	bool m_bStarDropped; // 0x1324	
	bool m_bSecondStar; // 0x1325	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mirana_Arrow : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
	int32_t scepter_radius; // 0x56c	
	Vector m_vStartPos; // 0x570	
	ParticleIndex_t m_nFXIndex; // 0x57c	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList[2]; // 0x580	
	CUtlVector< CHandle< CBaseEntity > > hStarfallList[2]; // 0x5b0	
	int32_t m_nActiveArrow; // 0x5e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mirana_Leap_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mirana_Leap : public CDOTABaseAbility
{
public:
	bool m_bIsVectorTargeted; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad0569[0x3]; // 0x569
public:
	Vector m_vEndpoint; // 0x56c	
	Vector m_vLandPosition; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Mirana_Leap : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
	bool m_bIsVectorTargeted; // 0x1341	
private:
	[[maybe_unused]] uint8_t __pad1342[0x2]; // 0x1342
public:
	Vector m_vFaceDirection; // 0x1344	
	int32_t leap_distance; // 0x1350	
	float shard_radius; // 0x1354	
	float shard_radius_end; // 0x1358	
	float shard_damage; // 0x135c	
	float shard_slow_pct; // 0x1360	
	float shard_slow_duration; // 0x1364	
	float leap_speed; // 0x1368	
	float leap_acceleration; // 0x136c	
	int32_t leap_radius; // 0x1370	
	float leap_bonus_duration; // 0x1374	
	bool m_bLaunched; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mirana_Leap_Slow : public CDOTA_Buff
{
public:
	int32_t shard_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Mirana_Leap_Buff : public CDOTA_Buff
{
public:
	int32_t leap_speedbonus; // 0x1318	
	int32_t leap_speedbonus_as; // 0x131c	
	bool m_bCritUsed; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x7]; // 0x1321
public:
	CUtlVector< int16 > m_vCritRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mirana_MoonlightShadow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Mirana_MoonlightShadow : public CDOTA_Modifier_PersistentInvisibility
{
public:
	float duration; // 0x1328	
	int32_t bonus_movement_speed; // 0x132c	
	int32_t evasion; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mirana_MoonlightShadow_KillTracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sven_StormBolt : public CDOTABaseAbility
{
public:
	int32_t vision_radius; // 0x568	
	bool m_bIsAltCastState; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sven_Stormbolt_Hide : public CDOTA_Buff
{
public:
	int32_t m_nHandle; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sven_GreatCleave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Sven_GreatCleave : public CDOTA_Buff
{
public:
	int32_t cleave_starting_width; // 0x1318	
	int32_t cleave_ending_width; // 0x131c	
	int32_t cleave_distance; // 0x1320	
	int32_t great_cleave_damage; // 0x1324	
	int32_t strength_bonus; // 0x1328	
	int16_t m_nLastCleaveRecord; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132e[0x2]; // 0x132e
public:
	int32_t m_nLastCleaveKills; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sven_Warcry : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sven_Warcry_Aura : public CDOTA_Buff
{
public:
	int32_t shard_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sven_Warcry_Passive : public CDOTA_Buff
{
public:
	int32_t shard_passive_armor; // 0x1318	
	int32_t shard_passive_movespeed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sven_Warcry : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sven_GodsStrength : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sven_GodsStrength : public CDOTA_Buff
{
public:
	int32_t gods_strength_damage; // 0x1318	
	int32_t bonus_slow_resistance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Sven_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SkeletonKing_VampiricAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_SkeletonKing_VampiricAura : public CDOTA_Buff
{
public:
	int32_t vampiric_aura; // 0x1318	
	int32_t creep_lifesteal_reduction_pct; // 0x131c	
	float skeleton_duration; // 0x1320	
	int32_t max_skeleton_charges; // 0x1324	
	int32_t m_iKillCounter; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SkeletonKing_VampiricAura_Summon_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_SkeletonKing_VampiricAura_Summon : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t talent_skeleton_damage; // 0x131c	
	bool m_bRespawnReady; // 0x1320	
	bool m_bRespawnConsumed; // 0x1321	
	bool m_bKillParentOnDestroy; // 0x1322	
private:
	[[maybe_unused]] uint8_t __pad1323[0x1]; // 0x1323
public:
	GameTime_t m_flRespawnTime; // 0x1324	
	int32_t vampiric_aura; // 0x1328	
	int32_t gold_bounty; // 0x132c	
	int32_t xp_bounty; // 0x1330	
	int32_t skeleton_building_damage_reduction; // 0x1334	
	int32_t skeleton_bonus_hero_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SkeletonKing_HellfireBlast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SkeletonKing_HellfireBlast : public CDOTA_Buff
{
public:
	int32_t blast_dot_damage; // 0x1318	
	int32_t blast_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SkeletonKing_HellfireBlast_Skeleton_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_move_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SkeletonKing_MortalStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_SkeletonKing_MortalStrike : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_vCritRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SkeletonKing_Reincarnation : public CDOTABaseAbility
{
public:
	bool m_bShouldUseResources; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SkeletonKing_Reincarnation : public CDOTA_Buff
{
public:
	float reincarnate_time; // 0x1318	
	int32_t scepter_aura_radius; // 0x131c	
	GameTime_t m_fLastReincarnationTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SkeletonKing_Reincarnation_SpawnSkeletons : public CDOTA_Buff
{
public:
	int32_t shard_skeleton_count; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
	int32_t attackslow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Scepter : public CDOTA_Buff
{
public:
	float scepter_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Scepter_RespawnTime : public CDOTA_Buff
{
public:
	float scepter_respawn_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Skeleton_King_Scepter_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Skeleton_King_Arcana : public CDOTA_Buff
{
public:
	bool m_bHasCrit; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Storm_Spirit_Electric_Rave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_StormSpirit_Electric_Rave : public CDOTA_Buff
{
public:
	int32_t overload_aoe; // 0x1318	
	int32_t overload_damage; // 0x131c	
	int32_t shard_attack_speed_bonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_StormSpirit_StaticRemnant : public CDOTABaseAbility
{
public:
	Vector m_vecCastPos; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_StormSpirit_StaticRemnantThinker : public CDOTA_Buff
{
public:
	int32_t static_remnant_radius; // 0x1318	
	int32_t static_remnant_damage_radius; // 0x131c	
	int32_t static_remnant_damage; // 0x1320	
	float static_remnant_delay; // 0x1324	
	int32_t m_iSearchRadius; // 0x1328	
	int32_t m_iDamageRadius; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_StormSpirit_ElectricVortex : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_StormSpirit_ElectricVortex_SelfSlow : public CDOTA_Buff
{
public:
	int32_t electric_vortex_self_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_StormSpirit_ElectricVortex_Pull : public CDOTA_Buff
{
public:
	Vector m_vDestination; // 0x1318	
	int32_t electric_vortex_pull_distance; // 0x1324	
	float electric_vortex_pull_tether_range; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_StormSpirit_ElectricVortex_NoStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_StormSpirit_Overload : public CDOTABaseAbility
{
public:
	int32_t m_iAttackIndex; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< sGlaiveInfoStorm > m_GlaiveInfo; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_StormSpirit_Overload_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_StormSpirit_Overload : public CDOTA_Buff
{
public:
	int32_t overload_aoe; // 0x1318	
	int32_t overload_cast_range; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_StormSpirit_OverloadSlow : public CDOTA_Buff
{
public:
	int32_t overload_move_slow; // 0x1318	
	int32_t overload_attack_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_StormSpirit_Overload_Attack_Speed_Buff : public CDOTA_Buff
{
public:
	int32_t hit_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_StormSpirit_BallLightning : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	bool m_bHasAutoRemnantTalent; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0x3]; // 0x579
public:
	float m_fAutoRemnantInterval; // 0x57c	
	int32_t ball_lightning_initial_mana_base; // 0x580	
	float ball_lightning_initial_mana_percentage; // 0x584	
	int32_t ball_lightning_travel_cost_base; // 0x588	
	float ball_lightning_travel_cost_percent; // 0x58c	
	int32_t m_iProjectileID; // 0x590	
	Vector m_vStartLocation; // 0x594	
	Vector m_vProjectileLocation; // 0x5a0	
	float m_fDistanceAccumulator; // 0x5ac	
	float m_fTalentDistanceAccumulator; // 0x5b0	
	int32_t scepter_remnant_interval; // 0x5b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_StormSpirit_BallLightning : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Holdout_StaticRemnantThinker : public CDOTA_Buff
{
public:
	int32_t static_remnant_radius; // 0x1318	
	int32_t static_remnant_damage_radius; // 0x131c	
	int32_t static_remnant_damage; // 0x1320	
	float static_remnant_delay; // 0x1324	
	float overload_duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_StormSpirit_StaticRemnant_Talent : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DrowRanger_Silence : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DrowRanger_WaveOfSilence : public CDOTABaseAbility
{
public:
	Vector m_vStartPosition; // 0x568	
	Vector m_vEndPosition; // 0x574	
	int32_t wave_width; // 0x580	
	float wave_speed; // 0x584	
	float silence_duration; // 0x588	
	float knockback_distance_max; // 0x58c	
	int32_t m_nHeroesHit; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DrowRanger_WaveOfSilence_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DrowRanger_WaveOfSilence : public CDOTA_Buff
{
public:
	int32_t miss_chance; // 0x1318	
	int32_t gust_reveals_invis; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_DrowRanger_WaveOfSilence_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DrowRanger_Trueshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DrowRanger_Trueshot : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DrowRanger_Trueshot_Global : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DrowRanger_TrueshotAura : public CDOTA_Buff
{
public:
	float trueshot_ranged_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DrowRanger_Marksmanship : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_DrowRanger_Marksmanship : public CDOTA_Buff
{
public:
	int32_t chance; // 0x1318	
	ParticleIndex_t m_nFxIndex; // 0x131c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	CUtlVector< int16 > m_GlacialInFlightAttackRecords; // 0x1338	
	int32_t bonus_factor; // 0x1350	
	int32_t disable_range; // 0x1354	
	int32_t agility_range; // 0x1358	
	int32_t bonus_damage; // 0x135c	
	int32_t split_count; // 0x1360	
	int32_t split_range; // 0x1364	
	bool m_bGlacialAttack; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DrowRanger_Marksmanship_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t agility_multiplier; // 0x1318	
	float agility_multiplier_ally; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
class CDOTA_Modifier_DrowRanger_Marksmanship_Reduction : public CDOTA_Buff
{
public:
	int32_t split_damage_reduction; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVectorFixedGrowable< int32 > m_vecRecords; // 0x1320	
	CUtlVectorFixedGrowable< GameTime_t > m_vecRecordTimes; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DrowRanger_FrostArrows : public CDOTABaseAbility
{
public:
	int32_t shard_burst_damage_per_stack; // 0x568	
	float shard_burst_slow_duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_DrowRanger_FrostArrows : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	int32_t shard_bonus_damage_per_stack; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DrowRanger_FrostArrows_Slow : public CDOTA_Buff
{
public:
	int32_t frost_arrows_movement_speed; // 0x1318	
	int32_t shard_max_stacks; // 0x131c	
	float shard_stack_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DrowRanger_FrostArrows_Shard_Slow : public CDOTA_Buff
{
public:
	int32_t shard_burst_move_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DrowRanger_FrostArrows_Hypothermia : public CDOTA_Buff
{
public:
	int32_t shard_regen_reduction_pct_per_stack; // 0x1318	
	int32_t shard_burst_radius; // 0x131c	
	ParticleIndex_t m_nFXStackIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DrowRanger_FrostArrows_Hypothermia_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Drow_Ranger_Glacier_Hilltop : public CDOTA_Buff
{
public:
	int32_t multishot_arrow_bonus; // 0x1318	
	int32_t end_height; // 0x131c	
	int32_t attack_range_bonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DrowRanger_Multishot : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x568	
	int32_t m_iArrowProjectile; // 0x574	
	int32_t m_nFXIndex; // 0x578	
	float arrow_speed; // 0x57c	
	int32_t arrow_spread; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets0; // 0x588	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets1; // 0x5a0	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets2; // 0x5b8	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets3; // 0x5d0	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets4; // 0x5e8	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets5; // 0x600	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets6; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Drow_Ranger_Multishot : public CDOTA_Buff
{
public:
	int32_t m_iArrowCount; // 0x1318	
	Vector m_vOriginalTarget; // 0x131c	
	int32_t arrow_width; // 0x1328	
	float arrow_speed; // 0x132c	
	float arrow_range_multiplier; // 0x1330	
	int32_t wave_count; // 0x1334	
	int32_t arrow_count_per_wave; // 0x1338	
	int32_t arrow_angle; // 0x133c	
	int32_t m_iLoopCount; // 0x1340	
	float m_flInterval; // 0x1344	
	float m_flCycleDelay; // 0x1348	
	float m_flTimeWaste; // 0x134c	
	GameTime_t m_flExpectedTime; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Drow_Ranger_Multishot_Damage : public CDOTA_Buff
{
public:
	int32_t arrow_damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DrowRanger_ArcanaKill_Delay : public CDOTA_Buff
{
public:
	PlayerID_t m_nPlayerID_Drow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DrowRanger_Arcana : public CDOTA_Buff
{
public:
	bool m_bFlawlessVictoryProgressGranted; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Drow_Ranger_Glacier : public CDOTABaseAbility
{
public:
	int32_t shard_width; // 0x568	
	int32_t shard_count; // 0x56c	
	float shard_duration; // 0x570	
	float shard_angle_step; // 0x574	
	int32_t shard_distance; // 0x578	
	Vector m_vSpawnOrigin; // 0x57c	
	Vector m_vDirection; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecShards; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad05b0[0x8]; // 0x5b0
public:
	CDOTABaseAbility* m_pIceShardsStop; // 0x5b8	
private:
	[[maybe_unused]] uint8_t __pad05c0[0x8]; // 0x5c0
public:
	ParticleIndex_t m_nFXIndex; // 0x5c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Drow_Ranger_Glacier_Hilltop_Aura : public CDOTA_Buff
{
public:
	int32_t shard_width; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Drow_Ranger_Glacier_Hilltop_Removal : public CDOTA_Buff
{
public:
	float z_speed_override; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Drow_Ranger_Glacier_Shard : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hObstruction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_Shard : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Earthshaker_Arcana : public CDOTA_Buff
{
public:
	int32_t m_nComboCount; // 0x1318	
	float m_flComboWindow; // 0x131c	
	float m_flComboDisplayInterval; // 0x1320	
	float m_flDamageDone; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Earthshaker_Fissure : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Earthshaker_Fissure_Shard : public CDOTA_Buff
{
public:
	int32_t shard_aftershock_stun_duration_pct; // 0x1318	
	float shard_free_pathing_linger_duration; // 0x131c	
	Vector m_vStartPos; // 0x1320	
	Vector m_vEndPos; // 0x132c	
	GameTime_t m_flEndTime; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_Fissure_Shard_Pathing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_Fissure_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_Fissure_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Fissure_Rooted : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Earthshaker_EnchantTotem : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Earthshaker_EnchantTotem_Leap : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x4]; // 0x1318
public:
	Vector m_vLoc; // 0x131c	
	float m_flPredictedTotalTime; // 0x1328	
	Vector m_vStartPosition; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bHorizontalMotionInterrupted; // 0x1340	
	bool m_bDamageApplied; // 0x1341	
	bool m_bTargetTeleported; // 0x1342	
private:
	[[maybe_unused]] uint8_t __pad1343[0x1]; // 0x1343
public:
	Vector m_vHorizontalVelocity; // 0x1344	
	Vector m_vLastKnownTargetPosition; // 0x1350	
	float m_flInitialVelocityZ; // 0x135c	
	int32_t scepter_height; // 0x1360	
	int32_t scepter_height_arcbuffer; // 0x1364	
	int32_t scepter_acceleration_z; // 0x1368	
	int32_t scepter_acceleration_horizontal; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_EnchantTotem_Animation : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Earthshaker_EnchantTotem : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
	int32_t totem_damage_percentage; // 0x131c	
	int32_t scepter_cleave_pct; // 0x1320	
	float scepter_cleave_starting_width; // 0x1324	
	float scepter_cleave_ending_width; // 0x1328	
	float scepter_cleave_distance; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad1330[0x8]; // 0x1330
public:
	bool bActive; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Earthshaker_Aftershock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Earthshaker_Aftershock : public CDOTA_Buff
{
public:
	int32_t aftershock_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_EchoSlam_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Earthshaker_EchoSlam : public CDOTABaseAbility
{
public:
	int32_t echo_slam_damage_range; // 0x568	
	int32_t echo_slam_echo_search_range; // 0x56c	
	int32_t echo_slam_echo_range; // 0x570	
	int32_t echo_slam_echo_damage; // 0x574	
	int32_t echo_slam_initial_damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_Echoslam_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earthshaker_Echoslam_Heating_Up : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Earthshaker_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1318	
	bool m_bFlail; // 0x1319	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_VengefulSpirit_Magic_Missile : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_VengefulSpirit_WaveOfTerror : public CDOTABaseAbility
{
public:
	int32_t wave_width; // 0x568	
	float wave_speed; // 0x56c	
	int32_t m_iProjectile; // 0x570	
	float vision_aoe; // 0x574	
	float vision_duration; // 0x578	
	int32_t steal_pct; // 0x57c	
	int32_t damage; // 0x580	
	int32_t m_nNumHeroesHit; // 0x584	
	CountdownTimer m_ViewerTimer; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_VengefulSpirit_WaveOfTerror_Fear : public CDOTA_Modifier_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_VengefulSpirit_WaveOfTerror : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
	int32_t attack_reduction; // 0x131c	
	int32_t damage_reduction_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_VengefulSpirit_WaveOfTerror_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	int32_t steal_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Command_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Command_Aura_Illusion : public CDOTA_Modifier_Invulnerable
{
public:
	CHandle< CBaseEntity > hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Command_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_base_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Command_Negative_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Command_Negative_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Nether_Swap_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_VengefulSpirit_Nether_Swap : public CDOTABaseAbility
{
public:
	int32_t m_nFXIndex; // 0x568	
	int32_t damage; // 0x56c	
	float damage_reduction; // 0x570	
	float damage_reduction_duration; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Nether_Swap_DamageReduction : public CDOTA_Buff
{
public:
	float damage_reduction; // 0x1318	
	ParticleIndex_t nFXIndex; // 0x131c	
	float damage; // 0x1320	
	int32_t m_nDamageAbsorbed; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Nether_Swap_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VengefulSpirit_Hybrid_Special : public CDOTA_Buff
{
public:
	bool m_bLeftoverHybrid; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t scepter_illusion_ms_bonus_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_VengefulSpirit_XP_Earn : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CrystalMaiden_Let_It_Go : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_CrystalMaiden_Let_It_Go_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathStart; // 0x1318	
	Vector m_vPathEnd; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_CrystalMaiden_Let_It_Go_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_CrystalMaiden_Let_It_Go_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CrystalMaiden_CrystalNova : public CDOTABaseAbility
{
public:
	int32_t nova_damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CrystalMaiden_CrystalNova : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CrystalMaiden_Frostbite : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_CrystalMaiden_Frostbite : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	int32_t creep_damage_per_second; // 0x1320	
	float tick_interval; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CrystalMaiden_BrillianceAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_CrystalMaiden_BrillianceAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_CrystalMaiden_BrillianceAuraEffect : public CDOTA_Buff
{
public:
	float base_mana_regen; // 0x1318	
	float self_factor; // 0x131c	
	float proximity_bonus_factor; // 0x1320	
	int32_t proximity_bonus_radius; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CrystalMaiden_FreezingField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CrystalMaiden_FreezingFieldStop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
class CDOTA_Modifier_CrystalMaiden_FreezingField : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	float explosion_interval; // 0x1324	
	float shard_bonus_explosion; // 0x1328	
	int32_t explosion_radius; // 0x132c	
	float slow_duration; // 0x1330	
	int32_t explosion_min_dist; // 0x1334	
	int32_t explosion_max_dist; // 0x1338	
	float frostbite_delay; // 0x133c	
	GameTime_t m_fLastTick; // 0x1340	
	float m_fTimeAccumulator; // 0x1344	
	int32_t m_iExplosionCount; // 0x1348	
	int32_t m_iExplosionTotalCount; // 0x134c	
	int32_t m_iExplosionQuadrant; // 0x1350	
	int32_t m_iExplosionDistance; // 0x1354	
	int32_t shard_self_movement_speed_slow_pct; // 0x1358	
	ParticleIndex_t m_nFXIndex; // 0x135c	
private:
	[[maybe_unused]] uint8_t __pad1360[0x8]; // 0x1360
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1368	
	CUtlVector< CHandle< CBaseEntity > > m_hHitHeroes; // 0x1380	
	bool m_bHitInvisibleHero; // 0x1398	
private:
	[[maybe_unused]] uint8_t __pad1399[0x3]; // 0x1399
public:
	int32_t can_move; // 0x139c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CrystalMaiden_FreezingField_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attack_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_CrystalMaiden_FreezingField_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CrystalMaiden_IceRink : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_CrystalMaiden_IceRink_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float rink_formation_time; // 0x131c	
	bool m_bActive; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_CrystalMaiden_IceRink_Movement : public CDOTA_Buff
{
public:
	bool m_bHitFirstUpdate; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	float flMovementSpeed; // 0x131c	
	float m_flTurnBoostProgress; // 0x1320	
	float m_flFacingTarget; // 0x1324	
	ParticleIndex_t m_nFXIndex; // 0x1328	
	GameTime_t m_flHitEndTime; // 0x132c	
	float hit_recover_time; // 0x1330	
	Vector m_vDirection; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CDOTA_Modifier_CrystalMaiden_IceRink_Movement_Ricochet : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Crystal_Maiden_Crystal_Clone : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Crystal_Maiden_Crystal_Clone : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1318	
	int32_t hop_distance; // 0x131c	
	float m_flCurTime; // 0x1320	
	float m_flEndTime; // 0x1324	
	Vector m_vTargetHorizontalDirection; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Crystal_Maiden_Crystal_Clone_Statue : public CDOTA_Buff
{
public:
	int32_t frostbite_radius; // 0x1318	
	float anim_delay; // 0x131c	
	bool m_bActivated; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t clone_health; // 0x1324	
	float m_flDamageTaken; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Axe_BattleHunger : public CDOTABaseAbility
{
public:
	int32_t damage_per_second; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Axe_BattleHunger : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	int32_t slow; // 0x131c	
	int32_t scepter_armor_change; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Axe_BatleHunger_Self : public CDOTA_Buff
{
public:
	int32_t scepter_armor_change; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Axe_BatleHunger_Self_Movespeed : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Axe_BerserkersCall : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Axe_BerserkersCall : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1318	
	bool m_bDidSetAttackTarget; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	int32_t bonus_attack_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Axe_BerserkersCallArmor : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Axe_CounterHelix : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Axe_CounterHelix : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t trigger_attacks; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Axe_CounterHelix_DamageReduction : public CDOTA_Buff
{
public:
	int32_t shard_damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Axe_CullingBlade : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	bool m_bInterrupted; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0x3]; // 0x579
public:
	Vector m_vProjectileLocation; // 0x57c	
	CHandle< CBaseEntity > m_hTarget; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Axe_Culling_Blade_NoMinHealth : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Axe_Culling_Blade_Charge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Axe_CullingBlade_Boost : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
	int32_t armor_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Axe_CullingBlade_Permanent : public CDOTA_Buff
{
public:
	float armor_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Axe_CullingBlade_JungleWeaponGesture : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Holdout_CullingBlade : public CDOTA_Ability_Axe_CullingBlade
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_HoldoutCullingBlade : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t leap_distance; // 0x1344	
	int32_t leap_radius; // 0x1348	
	float leap_speed; // 0x134c	
	float leap_acceleration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Axe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Axe_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Axe_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Axe_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Axe_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Axe_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bloodseeker_Bloodrage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Bloodseeker_Bloodrage : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	int32_t spell_amp; // 0x131c	
	float shard_max_health_dmg; // 0x1320	
	float damage_pct; // 0x1324	
	float flTickRate; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bloodseeker_Bloodbath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bloodseeker_Bloodbath_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Bloodseeker_Thirst : public CDOTA_Buff
{
public:
	int32_t hero_kill_heal; // 0x1318	
	int32_t creep_kill_heal; // 0x131c	
	int32_t half_bonus_aoe; // 0x1320	
	int32_t visibility_threshold_pct; // 0x1324	
	int32_t invis_threshold_pct; // 0x1328	
	int32_t min_bonus_pct; // 0x132c	
	int32_t max_bonus_pct; // 0x1330	
	int32_t bonus_movement_speed; // 0x1334	
	float linger_duration; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bloodseeker_Thirst : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bloodseeker_Thirst_Vision : public CDOTA_Buff
{
public:
	int32_t invis_threshold_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bloodseeker_Thirst_Speed : public CDOTA_Buff
{
public:
	CUtlSymbolLarge m_iszModifierString; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bloodseeker_Rupture_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bloodseeker_Rupture : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Bloodseeker_Rupture : public CDOTA_Buff
{
public:
	int32_t movement_damage_pct; // 0x1318	
	float hp_pct; // 0x131c	
	Vector vLastPos; // 0x1320	
	bool bResetPosition; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	float m_fAccumulatedDamage; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bloodseeker_BloodMist : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bloodseeker_BloodMist_Barrier : public CDOTA_Buff
{
public:
	GameTime_t flLastGameTime; // 0x1318	
	float m_flCurrentShield; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bloodseeker_BloodMist_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Bloodseeker_BloodMist : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bloodseeker_BloodMist_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomLancer_SpiritLance : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hLastHitEntity; // 0x568	
	int32_t m_nBounceCount; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomLancer_SpiritLance : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomLancer_Doppelwalk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_PhantomLancer_Dopplewalk_Phase : public CDOTA_Buff
{
public:
	Vector vTargetPosition; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomLancer_Doppelwalk_Illusion : public CDOTA_Buff
{
public:
	float flDamageTaken; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomLancer_Juxtapose : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hInvisIllusion; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomLancer_Juxtapose_Cache : public CDOTA_Buff
{
public:
	PlayerID_t m_nControllingPlayer; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_PhantomLancer_Juxtapose_Invisibility : public CDOTA_Modifier_Invisible
{
public:
	float invis_movespeed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_PhantomLancer_Juxtapose_Thinker : public CDOTA_Buff
{
public:
	int32_t max_illusions; // 0x1318	
	int32_t scepter_bonus_illusions; // 0x131c	
	float illusion_duration; // 0x1320	
	int32_t illusion_damage_out_pct; // 0x1324	
	int32_t illusion_damage_in_pct; // 0x1328	
	float scepter_bonus_duration; // 0x132c	
	int32_t m_iIllusionsSoFar; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_PhantomLancer_Juxtapose : public CDOTA_Buff
{
public:
	int32_t proc_chance_pct; // 0x1318	
	int32_t illusion_proc_chance_pct; // 0x131c	
	int32_t max_illusions; // 0x1320	
	float illusion_duration; // 0x1324	
	int32_t illusion_damage_out_pct; // 0x1328	
	int32_t illusion_damage_in_pct; // 0x132c	
	int32_t shard_bonus_illusions; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomLancer_PhantomEdge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_PhantomLancer_PhantomEdge : public CDOTA_Buff
{
public:
	int32_t min_distance; // 0x1318	
	int32_t max_distance; // 0x131c	
	CHandle< CBaseEntity > m_hTarget; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_PhantomLancer_PhantomEdge_Boost : public CDOTA_Buff
{
public:
	int32_t bonus_speed; // 0x1318	
	float agility_duration; // 0x131c	
	bool m_bGiveAgility; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomLancer_PhantomEdge_Agility : public CDOTA_Buff
{
public:
	int32_t bonus_agility; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomLancer_JuxtaposeIllusion : public CDOTA_Buff
{
public:
	bool m_bstrongIllusion; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Razor_PlasmaField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_Razor_PlasmaField_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	bool m_bContracting; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CountdownTimer m_ViewerTimer; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1348	
	int32_t speed; // 0x1360	
	int32_t radius; // 0x1364	
	float damage_min; // 0x1368	
	float damage_max; // 0x136c	
	int32_t slow_min; // 0x1370	
	int32_t slow_max; // 0x1374	
	float slow_duration; // 0x1378	
	bool m_bHasCreatedFx; // 0x137c	
private:
	[[maybe_unused]] uint8_t __pad137d[0x3]; // 0x137d
public:
	float total_ability_time; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Razor_StaticLink : public CDOTABaseAbility
{
public:
	int32_t m_iLinkIndex; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CountdownTimer m_ViewerTimer; // 0x570	
	float vision_duration; // 0x588	
	bool m_bIsAltCastState; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Razor_StaticLink : public CDOTA_Buff
{
public:
	float flSmoothness; // 0x1318	
	float drain_duration; // 0x131c	
	int32_t drain_rate; // 0x1320	
	int32_t drain_range; // 0x1324	
	int32_t drain_range_buffer; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x132c	
	int32_t m_iTotalDrainAmount; // 0x1330	
	int32_t pull_speed; // 0x1334	
	int32_t min_pull_range; // 0x1338	
	ParticleIndex_t m_iLinkIndex; // 0x133c	
	CDOTA_Buff* m_pBuffPositive; // 0x1340	
	CDOTA_Buff* m_pNegative; // 0x1348	
	GameTime_t m_flLastThinkTime; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Razor_StaticLink_Buff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t drain_rate; // 0x131c	
	float drain_length; // 0x1320	
	int32_t attack_speed_factor; // 0x1324	
	int32_t drain_armor; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Razor_StaticLink_Debuff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t attack_speed_factor; // 0x131c	
	int32_t drain_rate; // 0x1320	
	int32_t drain_armor; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Razor_Link_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Razor_UnstableCurrent : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Razor_UnstableCurrent_Aura : public CDOTA_Buff
{
public:
	int32_t self_movement_speed_pct; // 0x1318	
	int32_t strike_pct_chance; // 0x131c	
	float strike_damage; // 0x1320	
	int32_t strike_move_slow_pct; // 0x1324	
	int32_t strike_search_radius; // 0x1328	
	int32_t strike_target_count; // 0x132c	
	float strike_slow_duration; // 0x1330	
	float strike_internal_cd; // 0x1334	
	GameTime_t m_flNextShardProcTime; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Razor_UnstableCurrent_Delayed_Damage : public CDOTA_Buff
{
public:
	float strike_damage; // 0x1318	
	float strike_slow_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Razor_UnstableCurrent_Slow : public CDOTA_Buff
{
public:
	int32_t strike_move_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Razor_PlasmaField_Slow : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Razor_EyeOfTheStorm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Razor_EyeOfTheStorm_Passive : public CDOTA_Buff
{
public:
	int32_t passive_area_damage; // 0x1318	
	float passive_area_interval; // 0x131c	
	int32_t radius; // 0x1320	
	bool m_bHitNext; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Razor_EyeOfTheStorm : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t armor_reduction; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Razor_EyeOfTheStorm_Armor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Razor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Razor_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Razor_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Razor_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Razor_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Razor_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Razor_Arcana : public CDOTA_Buff
{
public:
	bool m_bIsMeleeAttack; // 0x1318	
	bool m_bTauntQueued; // 0x1319	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Razor_Arcana_EmpoweredState : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nEmpoweredBodyFX; // 0x1318	
	ParticleIndex_t m_nEmpoweredWeaponFX; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Razor_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lina_DragonSlave : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	int32_t dragon_slave_distance; // 0x570	
	float dragon_slave_burn_duration; // 0x574	
	float m_flDamage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lina_DragonSlave_Burn : public CDOTA_Buff
{
public:
	int32_t dragon_slave_burn; // 0x1318	
	int32_t target_crit_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lina_LightStrikeArray : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Lina_LightStrikeArray_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1318	
	float m_flStunDuration; // 0x131c	
	int32_t light_strike_array_aoe; // 0x1320	
	int32_t light_strike_array_damage; // 0x1324	
	float light_strike_array_stun_duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lina_FierySoul : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Lina_FierySoul : public CDOTA_Buff
{
public:
	int32_t fiery_soul_attack_speed_bonus; // 0x1318	
	float fiery_soul_move_speed_bonus; // 0x131c	
	int32_t fiery_soul_max_stacks; // 0x1320	
	float fiery_soul_stack_duration; // 0x1324	
	ParticleIndex_t m_nFXIndex; // 0x1328	
	GameTime_t m_flFierySoulDieTime; // 0x132c	
	GameTime_t m_flLastFierySoalFullStackTime; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lina_LagunaBlade : public CDOTABaseAbility
{
public:
	int32_t m_iDamage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lina_SuperCharged : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Lina_LagunaBlade_Line : public CDOTA_Buff
{
public:
	Vector vStart; // 0x1318	
	Vector vEnd; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lina_LagunaBlade : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lina_LagunaBlade_Superheated : public CDOTA_Buff
{
public:
	int32_t increased_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lina_Flame_Cloak : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Lina_Fiery_Cloak : public CDOTA_Buff
{
public:
	int32_t magic_resistance; // 0x1318	
	int32_t spell_amp; // 0x131c	
	float visualzdelta; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lina_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lina_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lina_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lina_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lina_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lina_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_Hybrid : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Morphling_Waveform_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_Waveform : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t m_nProjectileID; // 0x578	
	Vector m_vProjectileLocation; // 0x57c	
	CHandle< CBaseEntity > m_hHitHero; // 0x588	
	bool m_bGrantedGem; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Morphling_Waveform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_AdaptiveStrike_Agi : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_AdaptiveStrike_Str : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Morphling_Adaptive_Strike_Armor : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Morphling_Adaptive_Strike : public CDOTA_Modifier_Stunned
{
public:
	Vector m_vStartPos; // 0x1318	
	Vector m_vDirection; // 0x1324	
	float m_flTotalDistance; // 0x1330	
	float m_flCurTime; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_Morph : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Morphling_Morph : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1318	
	int32_t bonus_attributes; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_Morph_Agi : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Morphling_Morph_Agi : public CDOTA_Buff
{
public:
	int32_t mana_cost; // 0x1318	
	int32_t points_per_tick; // 0x131c	
	float morph_cooldown; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_Morph_Str : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Morphling_Morph_Str : public CDOTA_Buff
{
public:
	int32_t mana_cost; // 0x1318	
	int32_t points_per_tick; // 0x131c	
	float morph_cooldown; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_Replicate : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
	CHandle< CBaseEntity > m_hScepterIllusion; // 0x56c	
	bool m_bIsAltCastState; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Morphling_MorphReplicate : public CDOTABaseAbility
{
public:
	float m_flOldHealthPct; // 0x568	
	float m_flOldManaPct; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Strength_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
	int32_t scepter_status_resist; // 0x131c	
	int32_t nStrengthSteal; // 0x1320	
	int32_t nAgiSteal; // 0x1324	
	int32_t nIntSteal; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Strength_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
	int32_t scepter_status_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Agility_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
	int32_t scepter_attack_speed; // 0x131c	
	int32_t nStrengthSteal; // 0x1320	
	int32_t nAgilitySteal; // 0x1324	
	int32_t nIntSteal; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Agility_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
	int32_t scepter_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Intelligence_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
	int32_t scepter_spell_amplify; // 0x131c	
	int32_t nStrengthSteal; // 0x1320	
	int32_t nIntSteal; // 0x1324	
	int32_t nAgilitySteal; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Intelligence_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
	int32_t scepter_spell_amplify; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_All_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
	int32_t nStrengthSteal; // 0x131c	
	int32_t nAgiSteal; // 0x1320	
	int32_t nIntSteal; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_All_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Morphling_Replicate_Manager : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
class CDOTA_Modifier_Morphling_Replicate : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTinyTreeWearable; // 0x1318	
	float m_flBaseAttackRange; // 0x131c	
	float m_flBaseMovementSpeed; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlSymbolLarge m_iszModelName; // 0x1328	
	CUtlSymbolLarge m_iszProjectileName; // 0x1330	
	CUtlSymbolLarge m_iszOriginalModel; // 0x1338	
	int32_t m_nCopiedHeroID; // 0x1340	
	float m_fOriginalModelScale; // 0x1344	
	CUtlVector< CEconItemView* > m_vecOriginalItems; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1360[0x30]; // 0x1360
public:
	float m_flOriginalStr; // 0x1390	
	float m_flOriginalAgi; // 0x1394	
	float m_flOriginalInt; // 0x1398	
	int32_t m_iOriginalAttackCapability; // 0x139c	
	float m_flOriginalHealthPercentage; // 0x13a0	
	float m_flOriginalManaPercentage; // 0x13a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Morphling_Replicate_MorphedIllusionsEffect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Morphling_Replicate_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Morphling_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_StaticField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Zuus_Static_Field : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Zuus_Static_Field_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
	int32_t aspd_slow; // 0x131c	
	int32_t cast_slow; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_ArcLightning : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Zuus_ArcLightning : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t jump_count; // 0x131c	
	int32_t arc_damage; // 0x1320	
	float jump_delay; // 0x1324	
	int32_t damage_health_pct; // 0x1328	
	int32_t total_damage_pct; // 0x132c	
	int32_t m_iCurJumpCount; // 0x1330	
	bool trigger_spell_absorb; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	Vector m_vCurTargetLoc; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Zuus_ArcLightningSlow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_Cloud : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_LightningBolt : public CDOTABaseAbility
{
public:
	bool m_bZeusHasArcana; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Zuus_LightningBoltThinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_ThundergodsWrath : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	bool m_bZeusHasArcana; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Zuus_ThundergodsWrathThinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float damage_pct; // 0x131c	
	float sight_duration; // 0x1320	
	int32_t second_strike_damage_percent; // 0x1324	
	float second_strike_delay; // 0x1328	
	bool m_bZeusHasArcana; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTargetEntities; // 0x1330	
	bool m_bSecondaryStrike; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	int32_t m_nKills; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Zuus_ThundergodsWrathVisionThinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Zuus_Cloud : public CDOTA_Buff
{
public:
	CountdownTimer m_CloudBoltTimer; // 0x1318	
	float cloud_bolt_interval; // 0x1330	
	int32_t cloud_radius; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_Heavenly_Jump : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Zuus_Heavenly_Jump : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1318	
	int32_t hop_height; // 0x131c	
	int32_t hop_distance; // 0x1320	
	int32_t search_radius; // 0x1324	
	float m_flStartZ; // 0x1328	
	float m_flCurTime; // 0x132c	
	float m_flJumpDuration; // 0x1330	
	float m_flJumpHeight; // 0x1334	
	Vector m_vTargetHorizontalDirection; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > hUnitsToHit; // 0x1348	
	bool m_bLaunched; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Zuus_Heavenly_Jump_Boost : public CDOTA_Buff
{
public:
	int32_t postjump_movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Zeus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Zeus_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Zeus_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Zeus_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Zeus_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_Thunder_Trail : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad0580[0x8]; // 0x580
public:
	int32_t damage; // 0x588	
	int32_t debuff_spell_amp_min; // 0x58c	
	int32_t debuff_spell_amp_max; // 0x590	
	Vector m_vStartPos; // 0x594	
	int32_t m_nMaxRange; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Zuus_ThunderTrail_Debuff : public CDOTA_Buff
{
public:
	int32_t debuff_spell_amp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Zuus_Lightning_Hands : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Zuus_Lightning_Hands : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x1330	
	int32_t arc_lightning_damage_pct; // 0x1334	
	int32_t arc_lightning_damage_illusion_pct; // 0x1338	
	int32_t attack_range_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kunkka_Torrent : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Kunkka_Torrent_Thinker : public CDOTA_Buff
{
public:
	bool m_bShowEnemies; // 0x1318	
	bool m_bTorrentStorm; // 0x1319	
	bool m_bTorrentStarted; // 0x131a	
private:
	[[maybe_unused]] uint8_t __pad131b[0x1]; // 0x131b
public:
	GameTime_t m_fTorrentStartTime; // 0x131c	
	float flDamagePerTick; // 0x1320	
	float flFirstDamage; // 0x1324	
	float damage_tick_interval; // 0x1328	
	float percent_instant; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Kunkka_Torrent : public CDOTA_Buff
{
public:
	int32_t torrent_damage; // 0x1318	
	float damage_tick_interval; // 0x131c	
	float percent_instant; // 0x1320	
	float flDamagePerTick; // 0x1324	
	float m_flStartZ; // 0x1328	
	float m_flCurTime; // 0x132c	
	bool m_bTorrentStorm; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kunkka_Torrent_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kunkka_Tidebringer_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kunkka_Torrent_Storm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Kunkka_Torrent_Storm : public CDOTA_Buff
{
public:
	int32_t torrent_min_distance; // 0x1318	
	int32_t torrent_max_distance; // 0x131c	
	int32_t m_iExplosionQuadrant; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kunkka_Tidebringer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Kunkka_Tidebringer : public CDOTA_Buff
{
public:
	bool m_bTidebringerAttack; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t cleave_starting_width; // 0x131c	
	int32_t cleave_ending_width; // 0x1320	
	int32_t cleave_distance; // 0x1324	
	int32_t damage_bonus; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
	int32_t cleave_damage; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Kunkka_XMarksTheSpot_Thinker : public CDOTA_Buff
{
public:
	Vector m_vStartLoc; // 0x1318	
	bool m_bIsReflection; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CHandle< CBaseEntity > m_hEntity; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kunkka_XMarksTheSpot : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Kunkka_XMarksTheSpot : public CDOTA_Buff
{
public:
	int32_t ally_ms; // 0x1318	
	int32_t ally_armor; // 0x131c	
	CHandle< CBaseEntity > hThinker; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Kunkka_XMarksTheSpotMarker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kunkka_Return : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kunkka_GhostShip : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x568	
	float stun_duration; // 0x56c	
	int32_t ghostship_width; // 0x570	
	int32_t ghostship_width_scepter; // 0x574	
	Vector m_vFinalDestination; // 0x578	
	Vector m_vStartingPoint; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Kunkka_Ghost_Ship_Fleet : public CDOTA_Buff
{
public:
	Vector vCasterOrigin; // 0x1318	
	Vector vEnd; // 0x1324	
	int32_t hitcount; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Kunkka_GhostShip_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Kunkka_GhostShip_Loaded : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Kunkka_GhostShip_DamageAbsorb : public CDOTA_Buff
{
public:
	int32_t m_iAccumulatedDamage; // 0x1318	
	int32_t movespeed_bonus; // 0x131c	
	float ghostship_absorb; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kunkka_GhostShip_DamageDelay : public CDOTA_Buff
{
public:
	int32_t m_iAccumulatedDamage; // 0x1318	
	float m_flDuration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Kunkka_Tidal_Wave : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
	Vector m_vStart; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tiny_CraggyExterior : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Tiny_CraggyExterior : public CDOTA_Buff
{
public:
	int32_t stun_chance; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tiny_Avalanche : public CDOTABaseAbility
{
public:
	Vector m_vTargetLoc; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tiny_Avalanche_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Tiny_Avalanche : public CDOTA_Buff
{
public:
	CUtlVector< CDOTA_BaseNPC* > m_pHeroesHit; // 0x1318	
	int32_t radius; // 0x1330	
	float total_duration; // 0x1334	
	float stun_duration; // 0x1338	
	int32_t tick_count; // 0x133c	
	float toss_multiplier; // 0x1340	
	int32_t m_damage; // 0x1344	
	int32_t m_nTicks; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tiny_Toss_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tiny_Toss : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Tiny_Toss : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	float m_flPredictedTotalTime; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	float m_flCurrentTimeHoriz; // 0x132c	
	float m_flCurrentTimeVert; // 0x1330	
	bool m_bHorizontalMotionInterrupted; // 0x1334	
	bool m_bDamageApplied; // 0x1335	
	bool m_bTargetTeleported; // 0x1336	
private:
	[[maybe_unused]] uint8_t __pad1337[0x1]; // 0x1337
public:
	Vector m_vHorizontalVelocity; // 0x1338	
	Vector m_vLastKnownTargetPosition; // 0x1344	
	float m_flInitialVelocityZ; // 0x1350	
	bool m_bDone; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	int32_t radius; // 0x1358	
	int32_t toss_damage; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tiny_Tree_Grab : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hStolenTree; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Tiny_Tree_Grab : public CDOTA_Buff
{
public:
	int32_t attack_count; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t bonus_damage_buildings; // 0x1320	
	float stun_duration; // 0x1324	
	int32_t attack_range; // 0x1328	
	int32_t m_nOriginalAttackCapability; // 0x132c	
	float bat_increase; // 0x1330	
	int32_t speed_reduction; // 0x1334	
	int32_t m_nBonusAttackRange; // 0x1338	
	CHandle< CBaseEntity > m_hStolenTree; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
	ParticleIndex_t m_nFXAttackIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tiny_Tree_Channel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Tiny_Tree_Channel : public CDOTA_Buff
{
public:
	int32_t tree_grab_radius; // 0x1318	
	int32_t splash_radius; // 0x131c	
	int32_t speed; // 0x1320	
	float interval; // 0x1324	
	Vector m_vPos; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tiny_Tree_Channel_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tiny_TossTree : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tiny_TossTree_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tiny_TossTree_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tiny_Grow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Tiny_Grow : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t attack_speed_reduction; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float tree_bonus_damage_pct; // 0x1324	
	float slow_resistance; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tiny : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tiny_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tiny_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tiny_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tiny_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tiny_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Tiny_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Puck_EtherealJaunt : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Puck_IllusoryOrb : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CountdownTimer m_ViewerTimer; // 0x570	
	int32_t orb_vision; // 0x588	
	float vision_duration; // 0x58c	
	int32_t damage; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CSoundPatch* m_pSoundPatch; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Puck_WaningRift : public CDOTABaseAbility
{
public:
	int32_t max_distance; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Puck_PhaseShift : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Puck_PhaseShift : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Puck_PhaseShift_AttackBonus : public CDOTA_Buff
{
public:
	int32_t shard_bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Puck_DreamCoil : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Puck_DreamCoil_Thinker : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hLinkedEntities; // 0x1318	
	int32_t coil_radius; // 0x1330	
	int32_t coil_break_radius; // 0x1334	
	int32_t coil_initial_damage; // 0x1338	
	float coil_stun_duration; // 0x133c	
	float coil_duration; // 0x1340	
	int32_t coil_break_damage; // 0x1344	
	CUtlVector< ParticleIndex_t > m_FXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Puck_Coiled : public CDOTA_Buff
{
public:
	Vector m_vCastLocation; // 0x1318	
	int32_t coil_rapid_fire_z_offset; // 0x1324	
	float coil_rapid_fire_rate; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Puck_Coil_Break_Stun : public CDOTA_Modifier_Stunned
{
public:
	Vector m_vCastLocation; // 0x1318	
	int32_t coil_rapid_fire_z_offset; // 0x1324	
	float coil_rapid_fire_rate; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Puck_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Windrunner_Shackleshot : public CDOTABaseAbility
{
public:
	int32_t shackle_count; // 0x568	
	Vector m_vArrowAvgPos; // 0x56c	
	Vector m_vArrowStartPos; // 0x578	
	Vector m_vArrowStartPos2; // 0x584	
	Vector m_vArrowStartPos3; // 0x590	
	CHandle< CBaseEntity > m_hTarget; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Windrunner_ShackleShot : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Windrunner_Powershot : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	GameTime_t m_fStartTime; // 0x570	
	float m_fPower; // 0x574	
	int32_t m_iProjectile; // 0x578	
	float damage_reduction; // 0x57c	
	int32_t arrow_width; // 0x580	
	int32_t powershot_damage; // 0x584	
	float tree_width; // 0x588	
	float slow; // 0x58c	
	float slow_duration; // 0x590	
	bool m_bAwardedKillEater; // 0x594	
private:
	[[maybe_unused]] uint8_t __pad0595[0x3]; // 0x595
public:
	int32_t m_nHeroesHit; // 0x598	
	ParticleIndex_t m_nFXIndex; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Windrunner_Powershot_Slow : public CDOTA_Buff
{
public:
	float enemy_movespeed_bonus_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Windrunner_Windrun_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Windrunner_Windrun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Windrunner_Windrun_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Windrunner_Windrun_Invis_Thinker : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Windrunner_Windrun_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Windrunner_Windrun : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t scepter_radius; // 0x131c	
	int32_t movespeed_bonus_pct; // 0x1320	
	bool m_bDispellable; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	int32_t physical_damage_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Windrunner_Windrun_Slow : public CDOTA_Buff
{
public:
	float enemy_movespeed_bonus_pct; // 0x1318	
	float scepter_movespeed_bonus_pct; // 0x131c	
	int32_t scepter_blind; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Windrunner_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Windrunner_FocusFire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Windrunner_FocusFire_End : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Windrunner_FocusFire : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t focusfire_damage_reduction; // 0x131c	
	bool bActive; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t bonus_attack_speed; // 0x1324	
	int32_t focusfire_fire_on_the_move; // 0x1328	
	bool m_bPause; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	int32_t m_nNumArrowsLanded; // 0x1330	
	int32_t m_nDamageDealt; // 0x1334	
	int32_t m_nDamageDealtMax; // 0x1338	
	int32_t m_nTargetInitialHP; // 0x133c	
	bool m_bHeroKilled; // 0x1340	
	bool m_bRecentFocusFireAttack; // 0x1341	
private:
	[[maybe_unused]] uint8_t __pad1342[0xa]; // 0x1342
public:
	ParticleIndex_t m_nFXFocusFire; // 0x134c	
	GameTime_t m_flLastFocusFireAttackTime; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Windrunner_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Windrunner_GaleForce : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x568	
	Vector m_vFlowPosition; // 0x574	
	float duration; // 0x580	
	CHandle< CBaseEntity > m_hThinker; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Windrunner_GaleForce_Aura : public CDOTA_Buff
{
public:
	Vector m_vEndpoint; // 0x1318	
	Vector m_vFlowPosition; // 0x1324	
	int32_t radius; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Windrunner_GaleForce : public CDOTA_Buff
{
public:
	Vector m_vEndpoint; // 0x1318	
	Vector m_vFlowPosition; // 0x1324	
	Vector m_vPull; // 0x1330	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	GameTime_t m_flLastThinkTime; // 0x1340	
	float wind_strength; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lich_FrostNova : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lich_FrostNova_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
	int32_t slow_attack_speed; // 0x131c	
	int32_t slow_attack_speed_primary; // 0x1320	
	bool m_bIsPrimary; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flLongestGazeDuration"
class CDOTA_Ability_Lich_Sinister_Gaze : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	float m_flLongestGazeDuration; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAffectedEntities; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lich_Sinister_Gaze_Self : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Lich_Sinister_Gaze : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t mana_drain; // 0x131c	
	float m_flIntervalRate; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	float creep_damage; // 0x1328	
	bool m_bBlasted; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lich_DarkSorcery : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lich_DarkSorcery_Buff : public CDOTA_Buff
{
public:
	int32_t mana_drain; // 0x1318	
	int32_t attack_count; // 0x131c	
	int32_t attack_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lich_FrostAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_FrostAura_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_FrostAura : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_FrostAura_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_ChainFrost_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
	int32_t slow_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lich_FrostArmor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lich_FrostArmor_Autocast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lich_FrostArmor : public CDOTA_Buff
{
public:
	int32_t armor_bonus; // 0x1318	
	int32_t health_regen; // 0x131c	
	float slow_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_FrostArmor_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
	int32_t slow_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lich_FrostShield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lich_FrostShield : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float interval; // 0x131c	
	int32_t damage_reduction; // 0x1320	
	int32_t health_regen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_FrostShield_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lich_ChainFrost : public CDOTABaseAbility
{
public:
	int32_t jump_range; // 0x568	
	int32_t jumps; // 0x56c	
	float slow_duration; // 0x570	
	int32_t vision_radius; // 0x574	
	int32_t projectile_speed; // 0x578	
	int32_t initial_projectile_speed; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Lich_Chain_Frost_Thinker : public CDOTA_Buff
{
public:
	int32_t m_nDamageToHeroes; // 0x1318	
	int32_t m_nHeroesKilled; // 0x131c	
	int32_t m_nJumps; // 0x1320	
	bool m_bFirstJump; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1328	
	CHandle< CBaseEntity > m_hAvoidTarget; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lich_Ice_Spire : public CDOTABaseAbility
{
public:
	int32_t aura_radius; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Lich_Ice_Spire : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	CountdownTimer m_Timer; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_Ice_Spire_Debuff : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lich_ChainFrost_OnDeath : public CDOTA_Buff
{
public:
	int32_t should_fire_chain_frost_on_death; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lich_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tidehunter_Gush : public CDOTABaseAbility
{
public:
	int32_t gush_damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tidehunter_Gush : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	float negative_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tidehunter_KrakenShell : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Tidehunter_KrakenShell : public CDOTA_Buff
{
public:
	int32_t m_iDamageTaken; // 0x1318	
	int32_t damage_reduction; // 0x131c	
	int32_t damage_cleanse; // 0x1320	
	int32_t bonus_reduction_per_stack; // 0x1324	
	float damage_reset_interval; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tidehunter_AnchorSmash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tidehunter_SmashAttack : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tidehunter_AnchorSmash_Caster : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tidehunter_AnchorSmash : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tidehunter_Ravage : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntsHit; // 0x568	
	bool m_bAwardedKillEater; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0581[0x3]; // 0x581
public:
	float duration; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Tidehunter_Ravage : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	bool m_bDamageApplied; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	float damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tidehunter_ArmOfTheDeep : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
	float duration; // 0x580	
	int32_t speed; // 0x584	
	float damage; // 0x588	
	float range; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tidehunter_DeadInTheWater : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	float duration; // 0x56c	
	int32_t chain_length; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tidehunter_Anchor_Unit : public CDOTA_Buff
{
public:
	int32_t chain_length; // 0x1318	
	int32_t attacks_to_destroy; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Tidehunter_DeadInTheWater : public CDOTA_Buff
{
public:
	int32_t max_movement_speed; // 0x1318	
	int32_t chain_length; // 0x131c	
	CHandle< CBaseEntity > m_hAnchor; // 0x1320	
	bool m_bDragging; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ShadowShaman_EtherShock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ShadowShaman_EtherShock : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ShadowShamanVoodoo : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ShadowShaman_Voodoo : public CDOTA_Modifier_Hexed
{
public:
	int32_t movespeed; // 0x1318	
	int32_t damage_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ShadowShaman_MassSerpentWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hShackleTarget"
class CDOTA_Ability_ShadowShaman_Shackles : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hShackleTarget; // 0x568	
	ParticleIndex_t nShackleFXIndex; // 0x56c	
	CUtlVector< CHandle< CBaseEntity > > hWardList; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ShadowShaman_Shackles : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1318	
	float total_damage; // 0x131c	
	float channel_time; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ShadowShaman_SerpentWard : public CDOTA_Buff
{
public:
	int32_t scepter_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ShadowShaman_Serpentine : public CDOTABaseAbility
{
public:
	int32_t length; // 0x568	
	int32_t count; // 0x56c	
	Vector m_vStartPosition; // 0x570	
	Vector m_vEndPosition; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Riki_SmokeScreen : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Riki_SmokeScreenThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Riki_SmokeScreen : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
	int32_t dodge_chance; // 0x131c	
	int32_t block_targeting; // 0x1320	
	int32_t armor_reduction; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Riki_BlinkStrike_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Riki_BlinkStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Riki_BlinkStrike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Riki_BlinkStrike_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Riki_Permanent_Invisibility : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Riki_Permanent_Invisibility : public CDOTA_Modifier_PersistentInvisibility
{
public:
	int32_t movement_speed; // 0x1328	
	float fade_delay; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Riki_Backstab : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Riki_Backstab : public CDOTA_Modifier_PersistentInvisibility
{
public:
	float fade_delay; // 0x1328	
	int32_t backstab_angle; // 0x132c	
	int32_t cleave; // 0x1330	
	float damage_multiplier; // 0x1334	
	float bonus_xp_kill; // 0x1338	
	float bonus_xp_assist; // 0x133c	
	bool m_bBackstab; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Riki_TricksOfTheTrade : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Riki_TricksOfTheTrade_Phase : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFxIndex; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	CountdownTimer m_Timer; // 0x1320	
	CHandle< CBaseEntity > m_hPreviousTarget; // 0x1338	
	int32_t m_nSucceessiveHits; // 0x133c	
	bool m_bGrantedGem; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float attack_rate; // 0x1344	
	int32_t damage_pct; // 0x1348	
	int32_t agility_pct; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Riki_Poison_Dart : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Riki_Poison_Dart : public CDOTA_Buff
{
public:
	int32_t wake_damage_limit; // 0x1318	
	float m_flDamageTaken; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Riki_Poison_Dart_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enigma_DemonicConversion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enigma_Malefice : public CDOTABaseAbility
{
public:
	float tick_rate; // 0x568	
	int32_t stun_instances; // 0x56c	
	float m_flDuration; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Enigma_Malefice : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t damage; // 0x1320	
	float duration; // 0x1324	
	int32_t m_nEidolonSpawnNum; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Enigma_DemonicConversion : public CDOTA_Modifier_Kill
{
public:
	int32_t m_iAttackCount; // 0x1320	
	int32_t split_attack_count; // 0x1324	
	float life_extension; // 0x1328	
	int32_t eidolon_attack_range; // 0x132c	
	int32_t eidolon_bonus_damage; // 0x1330	
	int32_t eidolon_bonus_attack_speed; // 0x1334	
	bool m_bAllowSplit; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t m_nSpawnNum; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Enigma_DemonicConversion_ModelScale : public CDOTA_Buff
{
public:
	float self_modelscale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enigma_MidnightPulse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Enigma_MidnightPulseThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t n_FXIndex; // 0x131c	
	bool m_bHasGrantedKillEater; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Enigma_MidnightPulse_Damage : public CDOTA_Buff
{
public:
	float damage_percent; // 0x1318	
	float tick_rate; // 0x131c	
	int32_t base_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enigma_BlackHole : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
	CHandle< CBaseEntity > m_hThinker2; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Enigma_BlackHoleThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	bool m_bFoundFive; // 0x131c	
	bool m_bGrantedKillEater; // 0x131d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Enigma_BlackHole_Pull : public CDOTA_Buff
{
public:
	int32_t pull_speed; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t damage; // 0x1320	
	float tick_rate; // 0x1324	
	float pull_rotate_speed; // 0x1328	
	float animation_rate; // 0x132c	
	float scepter_pct_damage; // 0x1330	
	GameTime_t m_flDamageTick; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Enigma_Black_Hole_Thinker_Scepter : public CDOTA_Buff
{
public:
	int32_t scepter_radius; // 0x1318	
	ParticleIndex_t n_FXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Enigma_Black_Hole_Pull_Scepter : public CDOTA_Buff
{
public:
	int32_t scepter_drag_speed; // 0x1318	
	float scepter_pull_rotate_speed; // 0x131c	
	float aura_origin_x; // 0x1320	
	float aura_origin_y; // 0x1324	
	ParticleIndex_t m_nFXIndex; // 0x1328	
	Vector m_vCenter; // 0x132c	
	GameTime_t m_flLastThinkTime; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Enigma_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_Defensive_Matrix : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Tinker_Defensive_Matrix : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1318	
	int32_t status_resistance; // 0x131c	
	int32_t cooldown_reduction; // 0x1320	
	bool m_bStartedTimer; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	int32_t m_nDamageAbsorbed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_Laser : public CDOTABaseAbility
{
public:
	Vector m_vProjectileLocation; // 0x568	
	bool bBlocked; // 0x574	
private:
	[[maybe_unused]] uint8_t __pad0575[0x3]; // 0x575
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tinker_LaserBlind : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
	float max_health_removed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_HeatSeekingMissile : public CDOTABaseAbility
{
public:
	int32_t m_nTargetsKilled; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_WarpGrenade : public CDOTABaseAbility
{
public:
	float debuff_duration; // 0x568	
	float knockback_distance; // 0x56c	
	float damage; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tinker_Warp_Grenade : public CDOTA_Buff
{
public:
	int32_t range_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_MarchOfTheMachines : public CDOTABaseAbility
{
public:
	int32_t splash_radius; // 0x568	
	int32_t damage; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Tinker_MarchOfTheMachinesThinker : public CDOTA_Buff
{
public:
	int32_t collision_radius; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t distance; // 0x1320	
	int32_t distance_scepter; // 0x1324	
	int32_t speed; // 0x1328	
	int32_t machines_per_sec; // 0x132c	
	Vector m_vDir; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_Rearm : public CDOTABaseAbility
{
public:
	Vector m_vProjectileLocation; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tinker_Rearm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tinker_Rearmor : public CDOTA_Buff
{
public:
	int32_t magic_resistance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_Shrink_Ray : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tinker_Keen_Teleport : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x568	
	ParticleIndex_t m_nFXOrigin; // 0x56c	
	ParticleIndex_t m_nFXDestination; // 0x570	
	Vector m_vDestination; // 0x574	
	int32_t m_iMinDistance; // 0x580	
	float m_flBaseTeleportTime; // 0x584	
	float m_flExtraTeleportTime; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_WitchDoctor_ParalyzingCask : public CDOTABaseAbility
{
public:
	int32_t m_iBounces; // 0x568	
	int32_t bounces; // 0x56c	
	int32_t bounce_bonus_damage; // 0x570	
private:
	[[maybe_unused]] uint8_t __pad0574[0x4]; // 0x574
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitHeroes; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_WitchDoctor_Cask_Thinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_WitchDoctor_VoodooRestoration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_WitchDoctor_Voodoo_Restoration_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_WitchDoctor_Voodoo_Restoration_Heal : public CDOTA_Buff
{
public:
	int32_t heal; // 0x1318	
	float mana_per_second; // 0x131c	
	float heal_interval; // 0x1320	
	int32_t enemy_damage_pct; // 0x1324	
	float m_flTotalHealing; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_WitchDoctor_Maledict : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_WitchDoctor_MaledictDoT : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_WitchDoctor_Maledict : public CDOTA_Buff
{
public:
	int32_t m_iStartHealth; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t bonus_damage_threshold; // 0x1320	
	int32_t ticks; // 0x1324	
	int32_t iCurrentTick; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hWard"
class CDOTA_Ability_WitchDoctor_DeathWard : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hWard; // 0x568	
	int32_t m_iDamage; // 0x56c	
	int32_t m_iBounceRadius; // 0x570	
	int32_t m_iProjectileSpeed; // 0x574	
	GameTime_t m_fWardExpireTime; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
	int32_t m_iAttackIndex; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< sBounceInfo > m_BounceInfo; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_WitchDoctor_DeathWard : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t m_iBounceRadius; // 0x131c	
	int32_t bonus_accuracy; // 0x1320	
	bool m_bFirstAttack; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_WitchDoctor_Voodoo_Switcheroo : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_WitchDoctor_Voodoo_Switcheroo : public CDOTA_Buff
{
public:
	Vector m_vSavedPos; // 0x1318	
	CHandle< CBaseEntity > m_hSavedAbility; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_WitchDoctor_DeathWard_Voodoo_Switcheroo_AttackSpeedReduction : public CDOTA_Buff
{
public:
	int32_t attack_speed_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Sniper_Shrapnel_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sniper_Shrapnel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sniper_Shrapnel_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	bool m_bExploded; // 0x131c	
	bool m_bGrantedGem; // 0x131d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sniper_Shrapnel_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
	int32_t shrapnel_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sniper_Headshot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Sniper_Headshot : public CDOTA_Buff
{
public:
	int32_t proc_chance; // 0x1318	
	float slow_duration; // 0x131c	
	float knockback_distance; // 0x1320	
	int32_t bonus_damage_creeps; // 0x1324	
	int32_t bonus_attack_range; // 0x1328	
	int32_t damage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sniper_Headshot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sniper_TakeAim : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sniper_TakeAim : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Sniper_TakeAim_Bonus : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t active_attack_range_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sniper_Assassinate : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	CHandle< CBaseEntity > m_hTarget; // 0x570	
	ParticleIndex_t m_iIndex; // 0x574	
	float cooldown_reduction_on_kill; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Sniper_Assassinate_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Sniper_Assassinate_Crit : public CDOTA_Buff
{
public:
	int32_t scepter_crit_damage; // 0x1318	
	int32_t scatter_damage_pct; // 0x131c	
	bool is_secondary; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Sniper_Assassinate : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Sniper_Concussive_Grenade : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Sniper_Concussive_Grenade : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necrolyte_Sadist_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necrolyte_Sadist : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Necrolyte_Sadist_Active : public CDOTA_Buff
{
public:
	int32_t heal_bonus; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t slow_aoe; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necrolyte_Sadist_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necrolyte_Death_Pulse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x8]; // 0x568
public:
	bool m_bIsDeathSeekerCast; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necrophos_Death_Seeker_Ethereal : public CDOTA_Buff
{
public:
	int32_t magic_resistance_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necrolyte_Heartstopper_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Necrolyte_Heartstopper_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	bool m_bStackCountChanged; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	CUtlVector< GameTime_t > m_fStackExpireTimes; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necrolyte_Heartstopper_Aura_Counter : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1318	
	float health_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Necrolyte_Heartstopper_Aura_Effect : public CDOTA_Buff
{
public:
	float aura_damage; // 0x1318	
	int32_t heal_reduction_pct; // 0x131c	
	float heal_regen_to_damage; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necrolyte_ReapersScythe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necrolyte_ReapersScythe : public CDOTA_Modifier_Stunned
{
public:
	float stun_duration; // 0x1318	
	bool m_bIllusion; // 0x131c	
	bool m_bArcWardenClone; // 0x131d	
	bool m_bSpiritBear; // 0x131e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Necrolyte_ReapersScythe_RespawnTime : public CDOTA_Buff
{
public:
	float hp_per_kill; // 0x1318	
	float mana_per_kill; // 0x131c	
	float hp_regen; // 0x1320	
	float mp_regen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necrolyte_Death_Seeker : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Death_Seeker_OutOfWorld : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slardar_Puddle_Thinker : public CDOTA_Buff
{
public:
	int32_t puddle_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Slardar_Puddle : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Slardar_Sprint_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Slardar_Sprint_River : public CDOTA_Buff
{
public:
	int32_t river_speed; // 0x1318	
	int32_t puddle_regen; // 0x131c	
	int32_t puddle_armor; // 0x1320	
	int32_t puddle_status_resistance; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slardar_Sprint : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slardar_Sprint : public CDOTA_Buff
{
public:
	int32_t bonus_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slardar_Slithereen_Crush : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slardar_Slithereen_Crush : public CDOTA_Buff
{
public:
	int32_t crush_extra_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slardar_Bash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Slardar_Bash_Active : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	float duration; // 0x131c	
	int32_t attack_count; // 0x1320	
	int32_t river_damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slardar_Amplify_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Slardar_Amplify_Damage : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
	float scepter_delay; // 0x131c	
	int32_t undispellable; // 0x1320	
	int32_t puddle_radius; // 0x1324	
	float puddle_duration; // 0x1328	
	Vector m_vecLastPuddle; // 0x132c	
	CHandle< CBaseEntity > m_hPuddle; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Slardar_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ursa_Overpower : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ursa_Overpower : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus_pct; // 0x1318	
	int32_t slow_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ursa_Fury_Swipes : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ursa_Fury_Swipes : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ursa_Fury_Swipes_Damage_Increase : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ursa_Enrage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ursa_Enrage : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	int32_t status_resistance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ursa_Earthshock : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Ursa_Earthshock_Move : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1318	
	int32_t hop_height; // 0x131c	
	int32_t hop_distance; // 0x1320	
	float m_flStartZ; // 0x1324	
	float m_flCurTime; // 0x1328	
	float m_flJumpDuration; // 0x132c	
	float m_flJumpHeight; // 0x1330	
	Vector m_vTargetHorizontalDirection; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ursa_Earthshock : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lion_Impale : public CDOTABaseAbility
{
public:
	int32_t width; // 0x568	
	float duration; // 0x56c	
	int32_t speed; // 0x570	
	float length_buffer; // 0x574	
	float range; // 0x578	
	int32_t m_iDefaultCastRange; // 0x57c	
	int32_t pierces_immunity; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lion_Impale : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	bool m_bDamageApplied; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lion_Voodoo : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lion_Voodoo : public CDOTA_Modifier_Hexed
{
public:
	int32_t movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lion_ManaDrain : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_Victims; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lion_ManaDrain_Immunity : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Lion_ManaDrain : public CDOTA_Buff
{
public:
	int32_t mana_per_second; // 0x1318	
	int32_t break_distance; // 0x131c	
	float tick_interval; // 0x1320	
	int32_t movespeed; // 0x1324	
	int32_t damage_pct; // 0x1328	
	int32_t ally_pct; // 0x132c	
	GameTime_t m_fAppliedTime; // 0x1330	
	int32_t m_nTotalManaDrained; // 0x1334	
	int32_t m_nSelfBuffSerialNumber; // 0x1338	
	int32_t m_nTargetDebuffSerialNumber; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lion_ManaDrain_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lion_ManaDrain_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lion_FingerOfDeath_Kill_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lion_FingerOfDeath : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lion_FingerOfDeath : public CDOTA_Buff
{
public:
	bool m_bIgnoreBonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lion_FingerOfDeath_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lion_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1318	
	bool m_bFlail; // 0x1319	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Lion_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnRadiant : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnDire : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnRadiant1 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnRadiant2 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnRadiant3 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnRadiant4 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnRadiant5 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnDire1 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnDire2 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnDire3 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnDire4 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawnDire5 : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoCourierSpawn : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Track_Order_Issuer : public CDOTA_Buff
{
public:
	PlayerID_t m_nIssuerPlayerIndex; // 0x1318	
	bool m_bTeamFirstCourier; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	GameTime_t m_nPlayerCommandTime[24]; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Courier_Morph_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Courier_Flying : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_ReturnToBase : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_TakeStashItems : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Courier_TakeStashItems : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hStashOwner; // 0x1318	
	Vector m_vLocation; // 0x131c	
	bool m_bTransferAfterTake; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	int32_t stash_pickup_distance; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_ReturnStashItems : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Courier_ReturnStashItems : public CDOTA_Buff
{
public:
	Vector m_vLocation; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_GoToSecretShop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_GoToEnemySecretShop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_GoToSideShop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_GoToSideShop2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_TransferItems : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_TransferItems_ToOtherPlayer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Courier_TransferItems : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_TakeStashAndTransferItems : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_Burst : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Courier_Burst : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_Morph : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_Shield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Courier_Shield : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Courier_Passive_Bonus : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecTriggers; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_QueuePickupFromStash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Courier_DequeuePickupFromStash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_FountainPassive : public CDOTA_Buff
{
public:
	int32_t bonus_chance; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Fountain_Fury_Swipes_Damage_Increase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Roshan_SpellBlock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Roshan_SpellBlock : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Roshan_Teleport : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexStart; // 0x568	
	ParticleIndex_t m_nFXIndexEnd; // 0x56c	
	ParticleIndex_t m_nFXIndexEndTeam; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Roshan_Moving : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	bool m_bFlipped; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Roshan_Bash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Roshan_Bash : public CDOTA_Buff
{
public:
	int32_t bash_chance; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	float stun_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Roshan_Slam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Roshan_Slam : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Roshan_InherentBuffs : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Roshan_InherentBuffs : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Roshan_Devotion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Roshan_DevotionAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Roshan_Devotion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Roshan_RevengeRoar : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Roshan_RevengeRoar_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Roshan_RevengeRoar : public CDOTA_Buff
{
public:
	int32_t damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Miniboss_Unyielding_Shield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Miniboss_Reflect : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Miniboss_Radiance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Miniboss_Reflect : public CDOTA_Buff
{
public:
	int32_t passive_reflection_pct; // 0x1318	
	int32_t passive_reflection_bonus_per_death; // 0x131c	
	bool m_bIsDire; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Miniboss_UnyieldingShield : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1318	
	float regen_per_second; // 0x131c	
	float regen_bonus_per_death; // 0x1320	
	int32_t m_nDamageAbsorbed; // 0x1324	
	GameTime_t m_timeLastTick; // 0x1328	
	ParticleIndex_t nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Miniboss_Radiance : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Miniboss_Radiance_Debuff : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t aura_damage; // 0x1320	
	float aura_interval; // 0x1324	
	float aura_radius; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Animation_Attack : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x568	
	float animation_time; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Animation_RightClawSwipe : public CDOTA_Ability_Animation_Attack
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Animation_RightClawSwipe : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t damage_radius; // 0x131c	
	float m_flScalar; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Animation_LeftClawSwipe : public CDOTA_Ability_Animation_Attack
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Animation_LeftClawSwipe : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t damage_radius; // 0x131c	
	float m_flScalar; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Attached_Unit : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1318	
	bool m_bPhysicalImmune; // 0x131c	
	bool m_bMagicImmune; // 0x131d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Dive : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c8
// Has VTable
class CDOTA_Modifier_Nian_Dive : public CDOTA_Buff
{
public:
	float m_flTotalTimeInAir; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	Vector m_vTargetPosition; // 0x1338	
	float m_flCurrentTimeHoriz; // 0x1344	
	float m_flCurrentTimeVert; // 0x1348	
	bool m_bInterrupted; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float m_flHorizDelayTime; // 0x1350	
	float m_flVertDelayTime; // 0x1354	
	float m_flLeapSequenceDuration; // 0x1358	
	float m_flClawDamageTime; // 0x135c	
	float m_flPlaybackRate; // 0x1360	
	CHandle< CBaseEntity > m_hTarget; // 0x1364	
	bool m_bPlayedSwipeSound; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	int32_t pounce_distance; // 0x136c	
	float pounce_speed; // 0x1370	
	float pounce_acceleration; // 0x1374	
	int32_t pounce_radius; // 0x1378	
	int32_t pounce_damage; // 0x137c	
	int32_t stun_radius; // 0x1380	
	float stun_duration; // 0x1384	
	float leash_duration; // 0x1388	
	float initial_delay; // 0x138c	
	float landing_delay; // 0x1390	
	float vertical_adjust; // 0x1394	
	float vertical_adjust_max_distance; // 0x1398	
	float vertical_adjust_min_distance; // 0x139c	
	int32_t claw_damage; // 0x13a0	
	int32_t claw_damage_radius; // 0x13a4	
	float claw_damage_delay; // 0x13a8	
	float claw_damage_duration; // 0x13ac	
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x13b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NianCharge : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	bool m_bChargeFinished; // 0x578	
	bool m_bPlayedChargeAnimation; // 0x579	
	bool m_bPinning; // 0x57a	
private:
	[[maybe_unused]] uint8_t __pad057b[0x1]; // 0x57b
public:
	GameTime_t m_flPinStartTime; // 0x57c	
	Vector m_vProjectileLocation; // 0x580	
	Vector m_vTargetLocation; // 0x58c	
	CHandle< CBaseEntity > m_hTarget; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad059c[0x4]; // 0x59c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTrackingProjectileHits; // 0x5a0	
	CUtlVector< CDOTA_Tree* > m_hTrackingProjectileTrees; // 0x5b8	
	int32_t nFXIndex; // 0x5d0	
	int32_t m_iCurProjectileIndex; // 0x5d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Frenzy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Nian_Frenzy : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t damage_radius; // 0x131c	
	int32_t stun_radius; // 0x1320	
	float dive_distance; // 0x1324	
	float initial_rise_time; // 0x1328	
	float right_swipe_time; // 0x132c	
	float left_swipe_time; // 0x1330	
	float knockdown_duration; // 0x1334	
	float stun_duration; // 0x1338	
	int32_t m_nTickCounter; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_hEnemies; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Roar : public CDOTABaseAbility
{
public:
	int32_t base_projectiles; // 0x568	
	int32_t max_projectiles; // 0x56c	
	int32_t projectile_step; // 0x570	
	int32_t base_speed; // 0x574	
	int32_t speed_step; // 0x578	
	int32_t initial_radius; // 0x57c	
	int32_t end_radius; // 0x580	
	int32_t damage; // 0x584	
	float base_interval; // 0x588	
	float interval_step; // 0x58c	
	int32_t m_nCastCount; // 0x590	
	int32_t m_nProjectiles; // 0x594	
	int32_t m_nWaveCount; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad059c[0x4]; // 0x59c
public:
	CountdownTimer m_ctTimer; // 0x5a0	
	float m_flTiming; // 0x5b8	
	bool m_bScriptRoar; // 0x5bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Roar : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Intrinsic : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Attachment : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Attachment_Regrow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Waiting : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Animation_TailSpin : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x568	
	float animation_time; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Animation_TailSpin : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t damage_radius; // 0x131c	
	float m_flPlaybackRate; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Apocalypse : public CDOTABaseAbility
{
public:
	int32_t area_of_effect; // 0x568	
	ParticleIndex_t m_nfxIndex_roar; // 0x56c	
	float fire_interval; // 0x570	
	float delay; // 0x574	
	float target_range; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CountdownTimer m_ctTimer; // 0x580	
	float m_flTiming; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nian_Apocalypse : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1318	
	float damage; // 0x131c	
	float stun_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nian_Knockdown : public CDOTA_Buff
{
public:
	float m_flStandUpDuration; // 0x1318	
	float m_flKnockDownDuration; // 0x131c	
	bool m_bDebuff; // 0x1320	
	bool m_bStandingUp; // 0x1321	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Big_Flinch : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Firecracker_Debuff : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_GreaterBash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nian_GreaterBash : public CDOTA_Buff
{
public:
	int32_t chance_pct; // 0x1318	
	float damage; // 0x131c	
	float movespeed_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nian_GreaterBash_Speed : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NianCharge : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NianChargePinned : public CDOTA_Buff
{
public:
	float pinned_damage_amount; // 0x1318	
	float pinned_damage_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Tail_Swipe : public CDOTA_Ability_Animation_Attack
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_Nian_Tail_Swipe_Wall : public CDOTA_Buff
{
public:
	Vector m_vWallStartPosition; // 0x1318	
	Vector m_vWallDirection; // 0x1324	
	Vector m_vWallLeft; // 0x1330	
	int32_t m_DamageAmount; // 0x133c	
	int32_t m_DamageType; // 0x1340	
	float speed; // 0x1344	
	float starting_width; // 0x1348	
	float ending_width; // 0x134c	
	float stun_duration; // 0x1350	
	float fly_duration; // 0x1354	
	float fly_distance; // 0x1358	
	ParticleIndex_t m_nFXIndex; // 0x135c	
	GameTime_t m_flWallStartTime; // 0x1360	
	float m_flScalar; // 0x1364	
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesToExclude; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Nian_Tail_Swipe_AirTime : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	float m_flOldPitch; // 0x1320	
	QAngle m_qRotation; // 0x1324	
	int32_t m_nRotations; // 0x1330	
	float m_flDistance; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nian_Hurricane_Whirlpool : public CDOTA_Buff
{
public:
	float pull_switch_interval; // 0x1318	
	int32_t pull_speed; // 0x131c	
	bool m_bForward; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	ParticleIndex_t m_nfxIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Hurricane : public CDOTABaseAbility
{
public:
	int32_t min_distance; // 0x568	
	int32_t max_distance; // 0x56c	
	int32_t torrent_count; // 0x570	
	float fire_interval; // 0x574	
	float pull_switch_interval; // 0x578	
	float game_time_wind_activation; // 0x57c	
	CountdownTimer m_ctPullTimer; // 0x580	
	CountdownTimer m_ctTimer; // 0x598	
	float m_flTiming; // 0x5b0	
	bool m_bForward; // 0x5b4	
	bool m_bUseWind; // 0x5b5	
private:
	[[maybe_unused]] uint8_t __pad05b6[0x2]; // 0x5b6
public:
	ParticleIndex_t m_nFXIndex; // 0x5b8	
	ParticleIndex_t m_nfxIndex_roar; // 0x5bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nian_Torrent_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Whirlpool : public CDOTABaseAbility
{
public:
	int32_t pool_count; // 0x568	
	int32_t min_distance; // 0x56c	
	int32_t max_distance; // 0x570	
	int32_t pull_radius; // 0x574	
	float fire_interval; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CountdownTimer m_ctTimer; // 0x580	
	float m_flTiming; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nian_WhirlpoolThinker : public CDOTA_Buff
{
public:
	int32_t pull_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Nian_Whirlpool_Pull : public CDOTA_Buff
{
public:
	int32_t pull_radius; // 0x1318	
	int32_t pull_speed; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t whirlpool_damage; // 0x1324	
	float tick_rate; // 0x1328	
	GameTime_t m_flDamageTick; // 0x132c	
	CHandle< CBaseEntity > m_hThinker; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Eruption : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Nian_EruptionPendingThinker : public CDOTA_Buff
{
public:
	int32_t tick_count; // 0x1318	
	int32_t beam_radius; // 0x131c	
	int32_t m_nTickCount; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Nian_EruptionThinker : public CDOTA_Buff
{
public:
	int32_t explosion_radius; // 0x1318	
	float damage_interval; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Sigils : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Nian_Waterball : public CDOTA_Buff
{
public:
	int32_t trail_damage_per_second; // 0x1318	
	int32_t trail_damage_radius; // 0x131c	
	CUtlVector< int32 > m_vFXIndices; // 0x1320	
	CUtlVector< Vector > m_vLocations; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Waterball : public CDOTABaseAbility
{
public:
	CountdownTimer m_ctTimer; // 0x568	
	CUtlVector< CHandle< CBaseEntity > > m_hEntities; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nian_Damage_Reflection : public CDOTA_Buff
{
public:
	GameTime_t m_flReflectionStartTime; // 0x1318	
	float m_flReflectionAmount; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Nian_Flag_Trap : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nian_Flag_Trap_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nian_Flag_Trapped : public CDOTA_Buff
{
public:
	int32_t bonus_spell_damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Firework_Mine : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Firework_Mine : public CDOTA_Buff
{
public:
	int32_t damage_radius; // 0x1318	
	int32_t trigger_radius; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_JumpBoots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_JumpBootsIntrinsic : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_JumpBoots : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flStartZ; // 0x1324	
	float m_flCurTime; // 0x1328	
	int32_t push_length; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nian_Leap : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_Nian_Leap : public CDOTA_Buff
{
public:
	float m_flTotalTimeInAir; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	Vector m_vTargetPosition; // 0x1338	
	float m_flCurrentTimeHoriz; // 0x1344	
	float m_flCurrentTimeVert; // 0x1348	
	bool m_bInterrupted; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float m_flHorizDelayTime; // 0x1350	
	float m_flVertDelayTime; // 0x1354	
	float m_flLeapSequenceDuration; // 0x1358	
	float m_flPlaybackRate; // 0x135c	
	int32_t pounce_distance; // 0x1360	
	float pounce_speed; // 0x1364	
	float pounce_acceleration; // 0x1368	
	float initial_delay; // 0x136c	
	float landing_delay; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Vermillion_Robe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Vermillion_Robe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Vermillion_Robe_Flames : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float damage_per_health_missing; // 0x131c	
	float delay; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Vermillion_Robe : public CDOTA_Buff_Item
{
public:
	int32_t mana_regen_pct; // 0x1318	
	int32_t move_speed_bonus; // 0x131c	
	int32_t bonus_stats; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Warlock_FatalBonds : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_FatalBondsEntities; // 0x1318	
	int32_t damage_share_percentage; // 0x1330	
	float imp_duration; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Warlock_Fatal_Bonds : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_FatalBondsEntities; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Warlock_Shadow_Word : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Warlock_Shadow_Word : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1318	
	int32_t damage; // 0x131c	
	int32_t shard_movement_speed_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Warlock_Upheaval : public CDOTABaseAbility
{
public:
	Vector m_vPosition; // 0x568	
	float aoe; // 0x574	
	int32_t slow_per_second; // 0x578	
	int32_t aspd_per_second; // 0x57c	
	int32_t max_slow; // 0x580	
	int32_t damage_per_second; // 0x584	
	int32_t max_damage; // 0x588	
	float damage_tick_interval; // 0x58c	
	CountdownTimer m_timer; // 0x590	
	CountdownTimer m_shardTimer; // 0x5a8	
	float duration; // 0x5c0	
	GameTime_t m_flElapsedTime; // 0x5c4	
	float m_flCurrentSlow; // 0x5c8	
	ParticleIndex_t m_nFXIndex; // 0x5cc	
private:
	[[maybe_unused]] uint8_t __pad05d0[0x8]; // 0x5d0
public:
	bool m_bTargetCast; // 0x5d8	
private:
	[[maybe_unused]] uint8_t __pad05d9[0x3]; // 0x5d9
public:
	CHandle< CBaseEntity > m_hTarget; // 0x5dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Warlock_Upheaval : public CDOTA_Buff
{
public:
	int32_t m_iSlow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Warlock_Upheaval_Ally : public CDOTA_Buff
{
public:
	int32_t m_iAttackSpeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Warlock_RainOfChaos : public CDOTABaseAbility
{
public:
	int32_t aoe; // 0x568	
	bool m_bHasScepter; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Warlock_Rain_Of_Chaos_Death_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Warlock_Rain_Of_Chaos_Thinker : public CDOTA_Buff
{
public:
	float stun_duration; // 0x1318	
	bool bHasScepter; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	int32_t aoe; // 0x1320	
	int32_t m_iCount; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Warlock_Rain_Of_Chaos_Golem : public CDOTA_Buff
{
public:
	int32_t bonus_magic_resistance; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	int32_t bonus_slow_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Warlock_Golem_Flaming_Fists : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Warlock_Golem_Flaming_Fists : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Warlock_Golem_Permanent_Immolation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Warlock_Golem_Permanent_Immolation : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Warlock_Golem_Permanent_Immolation_Debuff : public CDOTA_Buff
{
public:
	int32_t aura_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Warlock_Imp_Explode : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Warlock_Imp_AutoAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hBestTarget; // 0x1318	
	float bonus_hp; // 0x131c	
	float bonus_dmg; // 0x1320	
	float bonus_movespeed; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Warlock_Imp_ExplodeThinker : public CDOTA_Buff
{
public:
	float explosion_radius; // 0x1318	
	float explosion_dmg; // 0x131c	
	float explosion_nonhero_reduce; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Beastmaster_Axe : public CBaseAnimatingActivity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_WildAxes : public CDOTABaseAbility
{
public:
	int32_t axe_damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13e0
// Has VTable
class CDOTA_Modifier_Beastmaster_WildAxes : public CDOTA_Buff
{
public:
	Vector m_vLeftControl; // 0x1318	
	Vector m_vRightControl; // 0x1324	
	Vector m_vTargetLoc; // 0x1330	
	Vector m_vSourceLoc; // 0x133c	
	float m_flDuration; // 0x1348	
	GameTime_t m_flDieTime; // 0x134c	
	bool m_bReturning; // 0x1350	
	bool m_bCatchingAxes; // 0x1351	
private:
	[[maybe_unused]] uint8_t __pad1352[0x6]; // 0x1352
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAxes; // 0x1358	
	ParticleIndex_t m_nAxeFXIndex[2]; // 0x1370	
	CUtlVector< CHandle< CBaseEntity > > m_hHitList[2]; // 0x1378	
	int32_t radius; // 0x13a8	
	int32_t spread; // 0x13ac	
	int32_t axe_damage; // 0x13b0	
	float duration; // 0x13b4	
	float min_throw_duration; // 0x13b8	
	float max_throw_duration; // 0x13bc	
	CUtlVector< CHandle< CBaseEntity > > m_vecUniqueHitList; // 0x13c0	
	bool m_bHitInvisibleHero; // 0x13d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Beastmaster_Axe_Stack_Counter : public CDOTA_Buff
{
public:
	float damage_amp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Beastmaster_Axe_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_CallOfTheWild_Boar : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_CallOfTheWild_Hawk : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_HawkList; // 0x568	
	float m_flRotation; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Beastmaster_CallOfTheWild_Hawk : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0x1318	
	int32_t attack_radius; // 0x131c	
	GameTime_t m_flLastAttack; // 0x1320	
	float roaming_seconds_per_rotation; // 0x1324	
	int32_t roaming_radius; // 0x1328	
	float attack_interval; // 0x132c	
	int32_t min_move_speed; // 0x1330	
	int32_t max_move_speed; // 0x1334	
	int32_t m_iPreviousHawkCount; // 0x1338	
	float m_flRotation; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_CallOfTheWild_Boar_Poison : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CallOfTheWild_Boar_BonusDamage : public CDOTA_Buff
{
public:
	float boar_bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
// Is Abstract
class CDOTA_Modifier_CallOfTheWild_Boar_PoisonBase : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CallOfTheWild_Boar_Poison : public CDOTA_Modifier_CallOfTheWild_Boar_PoisonBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CallOfTheWild_Boar_PoisonEffect : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	int32_t movement_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_InnerBeast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Beastmaster_InnerBeast_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Beastmaster_InnerBeast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_PrimalRoar : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	float slow_duration; // 0x56c	
	int32_t side_damage; // 0x570	
	int32_t damage_radius; // 0x574	
	int32_t path_width; // 0x578	
	float push_duration; // 0x57c	
	int32_t push_distance; // 0x580	
	int32_t damage; // 0x584	
	float movement_speed_duration; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Beastmaster_PrimalRoar_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1318	
	int32_t slow_attack_speed_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Beastmaster_PrimalRoar_Speed : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Beastmaster_PrimalRoar_Push : public CDOTA_Buff
{
public:
	Vector m_vVelocity; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_Mark_Of_The_Beast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Beastmaster_Mark_Of_The_Beast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_CallOfTheWild_Hawk_Reveal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_Hawk_Dive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Beastmaster_Hawk_Dive : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	float m_flPredictedTotalTime; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	float m_flCurrentTimeHoriz; // 0x132c	
	float m_flCurrentTimeVert; // 0x1330	
	bool m_bHorizontalMotionInterrupted; // 0x1334	
	bool m_bDamageApplied; // 0x1335	
private:
	[[maybe_unused]] uint8_t __pad1336[0x2]; // 0x1336
public:
	Vector m_vHorizontalVelocity; // 0x1338	
	Vector m_vLastKnownTargetPosition; // 0x1344	
	float m_flInitialVelocityZ; // 0x1350	
	bool m_bDone; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	int32_t dive_damage; // 0x1358	
	float dive_root_duration; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_Hawk_Perch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Beastmaster_Hawk_Perch_Flight : public CDOTA_Buff
{
public:
	int32_t perch_flight_height; // 0x1318	
	int32_t perch_tree_height; // 0x131c	
	int32_t flight_speed; // 0x1320	
	float m_flZDelta; // 0x1324	
	Vector m_vStart; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Beastmaster_Hawk_Perch_Perching : public CDOTA_Buff
{
public:
	int32_t perching_tree_height; // 0x1318	
	CHandle< CBaseEntity > m_hTree; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_DrumsOfSlom : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Beastmaster_DrumsOfSlom : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t max_stacks; // 0x1320	
	float base_damage; // 0x1324	
	int32_t heal_pct; // 0x1328	
	int32_t creep_heal_pct; // 0x132c	
	int32_t iCurrentAttacksAtMinInterval; // 0x1330	
	float stack_decay_time; // 0x1334	
	float max_drum_hit_interval; // 0x1338	
	float min_drum_hit_interval; // 0x133c	
	GameTime_t m_flLastStackChangeTime; // 0x1340	
	GameTime_t m_flLastDrumHitTime; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Beastmaster_DrumsOfSlom_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Beastmaster_DrumsOfSlom_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_5_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_5 : public CDOTA_Buff
{
public:
	int32_t bonus_ms; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_6_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_6 : public CDOTA_Buff
{
public:
	int32_t bonus_hp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_QueenOfPain_ScreamOfPain : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_QueenOfPain_ScreamOfPain_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_QueenOfPain_ShadowStrike : public CDOTABaseAbility
{
public:
	Vector projectile_speed; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_QueenOfPain_ShadowStrike : public CDOTA_Buff
{
public:
	int32_t duration_damage; // 0x1318	
	int32_t duration_heal; // 0x131c	
	int32_t movement_slow; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CountdownTimer m_SlowInterval; // 0x1328	
	float m_flSlowStep; // 0x1340	
	float m_flSlowStepStep; // 0x1344	
	float attack_buff_duration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_QueenOfPain_Blink : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_QueenOfPain_Arcana : public CDOTA_Buff
{
public:
	CUtlOrderedMap< PlayerID_t, bool, F( size=1 ) > m_vecHitPlayers; // 0x1318	
	CUtlOrderedMap< PlayerID_t, bool, F( size=1 ) > m_vecKilledPlayers; // 0x1340	
	GameTime_t m_flLastSonicWaveCast; // 0x1368	
	bool m_bSpeechComplete; // 0x136c	
	bool m_bMessageComplete; // 0x136d	
	bool m_bIsMeleeAttack; // 0x136e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_QueenOfPain_SonicWave : public CDOTABaseAbility
{
public:
	GameTime_t m_fStartTime; // 0x568	
	float m_fTotalTime; // 0x56c	
	ParticleIndex_t m_nFXIndex; // 0x570	
	int32_t starting_aoe; // 0x574	
	int32_t final_aoe; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_QueenOfPain_SonicWave_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_QueenOfPain_SonicWave_Damage : public CDOTA_Buff
{
public:
	float m_flDamagePerTick; // 0x1318	
	int32_t m_nCurrentTick; // 0x131c	
	int32_t m_nTotalTicks; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_QueenOfPain_SonicWave_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_QueenOfPain_SonicWave_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_QueenOfPain_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Venomancer_PoisonNova : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Venomancer_PlagueWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Venomancer_VenomousGale : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
	float duration; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Venomancer_VenomousGale : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	int32_t tick_damage; // 0x131c	
	float tick_interval; // 0x1320	
	float duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Venomancer_PoisonSting : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Venomancer_PoisonSting_Applier : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
// Is Abstract
class CDOTA_Modifier_Venomancer_PoisonStingBase : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t m_nTicksRemaining; // 0x1320	
	float m_flAttackDamage; // 0x1324	
	int32_t hp_regen_reduction; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Venomancer_PoisonSting : public CDOTA_Modifier_Venomancer_PoisonStingBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Venomancer_PoisonStingWard : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t hp_regen_reduction; // 0x1320	
	int32_t m_nTicksRemaining; // 0x1324	
	float m_flAttackDamage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Plague_Wards_Bonus : public CDOTA_Buff
{
public:
	int32_t ward_hp; // 0x1318	
	int32_t ward_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Plague_Wards_Bonus_Range : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_PoisonNova_Intrinsic : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_PoisonNova_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1318	
	GameTime_t m_fLastThink; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1320	
	int32_t speed; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t start_radius; // 0x1340	
	float duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Venomancer_PoisonNova : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	float magic_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Holdout_ScourgeWard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Venomancer_NoxiousPlague : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Venomancer_NoxiousPlaguePrimary : public CDOTA_Buff
{
public:
	float health_damage; // 0x1318	
	float debuff_radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Venomancer_NoxiousPlague_Slow : public CDOTA_Buff
{
public:
	float attack_slow; // 0x1318	
	float movement_slow_max; // 0x131c	
	float debuff_radius; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Venomancer_NoxiousPlagueSecondary : public CDOTA_Buff
{
public:
	float health_damage; // 0x1318	
	float attack_slow; // 0x131c	
	float movement_slow_max; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Venomancer_Latent_Poison : public CDOTABaseAbility
{
public:
	Vector projectile_speed; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Venomancer_Latent_Poison : public CDOTA_Buff
{
public:
	int32_t duration_damage; // 0x1318	
	int32_t movement_slow; // 0x131c	
	int32_t explosion_damage; // 0x1320	
	float explosion_stun_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FacelessVoid_Backtrack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FacelessVoid_Backtrack : public CDOTA_Buff
{
public:
	int32_t dodge_chance_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FacelessVoid_TimeLock : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeLock : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	float duration_creep; // 0x131c	
	float delay; // 0x1320	
	int32_t chance_pct; // 0x1324	
	int32_t bonus_damage; // 0x1328	
	GameTime_t last_attack_time; // 0x132c	
	CUtlVector< int16 > m_ProcAttackRecords; // 0x1330	
	GameTime_t apply_activity_modifier_until; // 0x1348	
	GameTime_t disable_activity_modifier_until; // 0x134c	
	CUtlOrderedMap< CHandle< CDOTA_BaseNPC >, int32, F( size=1 ) > m_mapTargets; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeLock_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FacelessVoid_Timelock_TimeWalk_Proc_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FacelessVoid_Timelock_Basic_Proc_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FacelessVoid_TimeDilation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeDilation_Slowmo : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeDilation_Distortion : public CDOTA_Buff
{
public:
	float slow_distance_min; // 0x1318	
	float slow_distance_max; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1468
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeDilation_Slow : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t m_nAffectedAbilities; // 0x131c	
	GameTime_t m_flLastDamageTime; // 0x1320	
	int32_t slow; // 0x1324	
	int32_t cooldown_percentage; // 0x1328	
	int32_t damage_per_stack; // 0x132c	
	int32_t base_damage; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeWalk_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeWalk_ShardBuff : public CDOTA_Buff
{
public:
	Vector m_vStartLocation; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FacelessVoid_TimeWalk : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
	int32_t speed; // 0x57c	
	int32_t range; // 0x580	
	int32_t radius; // 0x584	
	int32_t m_nProjectileID; // 0x588	
	Vector m_vProjectileLocation; // 0x58c	
	Vector m_vStartLocation; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FacelessVoid_TimeWalk_Reverse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t speed; // 0x578	
	int32_t m_nProjectileID; // 0x57c	
	Vector m_vProjectileLocation; // 0x580	
	Vector m_vStartLocation; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeLock_ForceProc : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	float duration_creep; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float delay; // 0x1324	
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeWalk_Slow : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FacelessVoid_TimeWalk : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_FacelessVoid_Chronosphere : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FacelessVoid_Chronosphere : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FacelessVoid_ArcanaDamageRouter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13d0
// Has VTable
class CDOTA_Modifier_FacelessVoid_Chronosphere_Freeze : public CDOTA_Buff
{
public:
	CUtlVectorFixedGrowable< CHandle< CDOTABaseAbility > > m_vecAbilities; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FacelessVoid_Chronosphere_SelfBuff : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FacelessVoid_Chronosphere_Speed : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_FacelessVoid_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FacelessVoid_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DeathProphet_CarrionSwarm : public CDOTABaseAbility
{
public:
	int32_t start_radius; // 0x568	
	int32_t end_radius; // 0x56c	
	GameTime_t m_fStartTime; // 0x570	
	float m_fTotalTime; // 0x574	
	int32_t m_nProjectileHandle; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DeathProphet_CryptSwarm_Slow : public CDOTA_Buff
{
public:
	int32_t slow_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DeathProphet_Silence : public CDOTABaseAbility
{
public:
	Vector m_vPos; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DeathProphet_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DeathProphet_Silence_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DeathProphet_Witchcraft : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DeathProphet_Witchcraft : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DeathProphet_SpiritSiphon : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x568	
	int32_t m_iArrowProjectile; // 0x574	
	int32_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_DeathProphet_SpiritSiphon : public CDOTA_Buff
{
public:
	float flSmoothness; // 0x1318	
	float damage; // 0x131c	
	float damage_pct; // 0x1320	
	int32_t drain_range; // 0x1324	
	float haunt_duration; // 0x1328	
	int32_t siphon_buffer; // 0x132c	
	int32_t movement_steal; // 0x1330	
	CHandle< CBaseEntity > m_hTarget; // 0x1334	
	ParticleIndex_t m_iLinkIndex; // 0x1338	
	int32_t m_nSelfBuffSerialNumber; // 0x133c	
	int32_t m_nTargetDebuffSerialNumber; // 0x1340	
	bool m_bAppliedFear; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	float shard_fear_duration; // 0x1348	
	float shard_consecutive_siphon_duration; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Slow : public CDOTA_Buff
{
public:
	int32_t movement_steal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_DeathProphet_Exorcism_Spirit : public CBaseAnimatingActivity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_DeathProphet_Exorcism : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t spirit_speed; // 0x131c	
	int32_t max_distance; // 0x1320	
	int32_t give_up_distance; // 0x1324	
	int32_t min_damage; // 0x1328	
	int32_t max_damage; // 0x132c	
	int32_t heal_percent; // 0x1330	
	int32_t spirit_duration; // 0x1334	
	float ghost_spawn_rate; // 0x1338	
	int32_t movement_bonus; // 0x133c	
	int32_t m_iSpirits; // 0x1340	
	GameTime_t m_fStartTime; // 0x1344	
	GameTime_t m_fLastThinkTime; // 0x1348	
	GameTime_t m_fSpawnTime; // 0x134c	
	bool m_bFirstSpawn; // 0x1350	
	bool m_bCommentedOnExpired; // 0x1351	
	bool m_bForceExpired; // 0x1352	
private:
	[[maybe_unused]] uint8_t __pad1353[0x5]; // 0x1353
public:
	CUtlVector< sSpiritInfo* > m_vecSpirits; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DeathProphet_Slow : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_DeathProphet_Scepter : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t spirit_speed; // 0x131c	
	int32_t max_distance; // 0x1320	
	int32_t give_up_distance; // 0x1324	
	int32_t min_damage; // 0x1328	
	int32_t max_damage; // 0x132c	
	int32_t heal_percent; // 0x1330	
	int32_t spirit_duration; // 0x1334	
	GameTime_t m_fStartTime; // 0x1338	
	GameTime_t m_fLastThinkTime; // 0x133c	
	bool m_bExpired; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x7]; // 0x1341
public:
	sSpiritInfo* m_SpiritInfo; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Death_Prophet_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Death_Prophet_Attack_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pugna_NetherBlast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pugna_NetherBlast_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pugna_Decrepify : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Pugna_Decrepify : public CDOTA_Buff
{
public:
	int32_t bonus_spell_damage_pct; // 0x1318	
	int32_t bonus_heal_amp_pct_allies; // 0x131c	
	int32_t bonus_movement_speed; // 0x1320	
	int32_t bonus_movement_speed_allies; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pugna_NetherWard : public CDOTABaseAbility
{
public:
	CUtlVector< sAbilityHistory > vecAbilitiesUsed; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Pugna_NetherWard : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float mana_multiplier; // 0x131c	
	float mana_drained_per_attack; // 0x1320	
	int32_t attacks_to_destroy; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pugna_NetherWard_Aura : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1318	
	float spell_damage_reduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hTarget"
class CDOTA_Ability_Pugna_LifeDrain : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Pugna_LifeDrain : public CDOTA_Buff
{
public:
	int32_t health_drain; // 0x1318	
	int32_t ally_healing; // 0x131c	
	float tick_rate; // 0x1320	
	bool m_bDoRangeCheck; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	ParticleIndex_t m_nFXIndex; // 0x1328	
	GameTime_t m_flElapsedTime; // 0x132c	
	bool m_bPrimary; // 0x1330	
	bool m_bShard; // 0x1331	
	bool m_bFromWard; // 0x1332	
private:
	[[maybe_unused]] uint8_t __pad1333[0x1]; // 0x1333
public:
	CHandle< CBaseEntity > m_hWard; // 0x1334	
	float spell_amp_drain_duration; // 0x1338	
	int32_t max_spell_amp_drain_pct; // 0x133c	
	int32_t spell_amp_drain_rate; // 0x1340	
	int32_t spell_amp_drain_rate_ward; // 0x1344	
	int32_t spell_amp_drain_max; // 0x1348	
	int32_t health_to_mana_rate; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pugna_LifeDrain_SpellAmp : public CDOTA_Buff
{
public:
	bool m_bIsFriendly; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Phantom_Assassin_GroundDagger : public CDOTA_Buff
{
public:
	bool m_bLanded; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomAssassin_Stifling_Dagger : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomAssassin_StiflingDagger_Caster : public CDOTA_Buff
{
public:
	int32_t base_damage; // 0x1318	
	int32_t attack_factor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomAssassin_StiflingDagger : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomAssassin_Fan_Of_Knives : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_PhantomAssassin_Fan_Of_Knives_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1318	
	GameTime_t m_fLastThink; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1320	
	CountdownTimer m_ViewerTimer; // 0x1338	
	int32_t projectile_speed; // 0x1350	
	int32_t radius; // 0x1354	
	float duration; // 0x1358	
	float pct_health_damage_initial; // 0x135c	
	float max_damage_initial; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_PhantomAssassin_Fan_Of_Knives : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomAssassin_PhantomStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_PhantomAssassin_PhantomStrike : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t lifesteal_pct; // 0x131c	
	int32_t creep_lifesteal_penalty; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomAssassin_Blur : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomAssassin_Blur : public CDOTA_Buff
{
public:
	int32_t bonus_evasion; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_PhantomAssassin_BlurActive : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1328	
	float fade_duration; // 0x132c	
	float scepter_fade_duration; // 0x1330	
	bool m_bDestroyNext; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PhantomAssassin_CoupdeGrace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_PhantomAssassin_CoupdeGrace : public CDOTA_Buff
{
public:
	int32_t crit_bonus; // 0x1318	
	int32_t crit_chance; // 0x131c	
	int32_t dagger_crit_chance; // 0x1320	
	bool crit_active; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	float duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_PhantomAssassin_MarkOfDeath : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_PhantomAssassin_Gravestone_Thinker : public CDOTA_Buff
{
public:
	int32_t m_nEpitaph; // 0x1318	
	PlayerID_t m_nVictimPlayerID; // 0x131c	
	int32_t m_nVictimHeroID; // 0x1320	
	int32_t m_nCritDmg; // 0x1324	
	int32_t m_nContractComplete; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PhantomAssassin_Gravestone : public CDOTA_Buff
{
public:
	int32_t m_nFXIndex; // 0x1318	
	bool m_bContractGravestoneComplete; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_PhantomAssassin_ScreenSplatter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_Refraction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_TemplarAssassin_RefractionDamage : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	int32_t bonus_damage; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_TemplarAssassin_RefractionAbsorb : public CDOTA_Buff
{
public:
	int32_t damage_threshold; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_Meld : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_TemplarAssassin_Meld_Animation : public CDOTA_Buff
{
public:
	bool launched_attack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_TemplarAssassin_Meld : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	bool launched_attack; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1320	
	int32_t m_nAttackRecord; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_TemplarAssassin_MeldArmor : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_PsiBlades : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_TemplarAssassin_PsiBlades : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
	float attack_spill_range; // 0x131c	
	int32_t attack_spill_width; // 0x1320	
	int32_t attack_spill_pct; // 0x1324	
	int32_t attack_spill_penalty; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_TemplarAssassin_PsiBlades_Slow : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TemplarAssassin_PsionicTrap_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_PsionicTrap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_TemplarAssassin_Trap : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_vision; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_Trap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_Trap_Teleport : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTrap; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_TemplarAssassin_Trap_Slow : public CDOTA_Buff
{
public:
	int32_t movement_speed_min; // 0x1318	
	int32_t movement_speed_max; // 0x131c	
	int32_t extra_damage; // 0x1320	
	float trap_max_charge_duration; // 0x1324	
	float min_silence_duration; // 0x1328	
	float max_silence_duration; // 0x132c	
	float stage; // 0x1330	
	float flDamagePerTick; // 0x1334	
	bool bExtraDamage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_SelfTrap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TemplarAssassin_Refraction_Holdout : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_TemplarAssassin_Refraction_Holdout : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t damage_absorb; // 0x131c	
	float m_flDamageAbsorbed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Viper_PoisonAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Viper_PoisonAttack : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Viper_PoisonAttack_Slow : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	int32_t shard_armor_reduction; // 0x131c	
	int32_t shard_building_dmg_pct; // 0x1320	
	int32_t movement_speed; // 0x1324	
	int32_t magic_resistance; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Viper_Nethertoxin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Viper_Nethertoxin_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Viper_Nethertoxin : public CDOTA_Buff
{
public:
	int32_t min_damage; // 0x1318	
	int32_t max_damage; // 0x131c	
	float max_duration; // 0x1320	
	int32_t attack_slow; // 0x1324	
	float m_flDamageInterval; // 0x1328	
	float m_flTimeIncrement; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Viper_NethertoxinMute : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Viper_CorrosiveSkin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Viper_CorrosiveSkin : public CDOTA_Buff
{
public:
	int32_t bonus_magic_resistance; // 0x1318	
	int32_t max_range; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Viper_BecomeUniversal : public CDOTA_Buff
{
public:
	int32_t bonus_magic_resistance; // 0x1318	
	int32_t is_universal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Viper_CorrosiveSkin_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t damage; // 0x131c	
	int32_t effect_multiplier_distance; // 0x1320	
	int32_t effect_multiplier; // 0x1324	
	bool m_bEffectMultiplied; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Viper_ViperStrike : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Viper_ViperStrike_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Viper_Nose_Dive : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Viper_Nose_Dive : public CDOTA_Buff
{
public:
	Vector m_vTargetPos; // 0x1318	
	Vector m_vStart; // 0x1324	
	float m_flZDelta; // 0x1330	
	int32_t radius; // 0x1334	
	int32_t corrosive_radius; // 0x1338	
	float effect_duration; // 0x133c	
	int32_t dive_speed; // 0x1340	
	float start_height; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Viper_Nose_Dive_Effect : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Luna_LucentBeam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Luna_LucentBeam_Damage_Buff_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Luna_LucentBeam_Damage_Buff : public CDOTA_Buff
{
public:
	int32_t damage_buff_per_beam; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Luna_MoonGlaive : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecMarkedUnits; // 0x568	
	int32_t m_iAttackIndex; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< sGlaiveInfo > m_GlaiveInfo; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Luna_MoonGlaive : public CDOTA_Buff
{
public:
	int32_t range; // 0x1318	
	int32_t bounces; // 0x131c	
	int32_t damage_reduction_percent; // 0x1320	
	ParticleIndex_t m_nMoonGlaiveFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Luna_MoonGlaive_Shield : public CDOTA_Buff
{
public:
	int32_t rotating_glaives; // 0x1318	
	float rotating_glaives_hit_radius; // 0x131c	
	float rotating_glaives_speed; // 0x1320	
	float rotating_glaives_collision_damage; // 0x1324	
	float rotating_glaives_movement_radius; // 0x1328	
	float rotating_glaives_damage_reduction; // 0x132c	
	float m_flCurRotation; // 0x1330	
	float m_flCurRadius; // 0x1334	
	float m_flSecondsPerRotation; // 0x1338	
	float m_flMaxRadius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Luna_LunarBlessing : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Luna_LunarBlessing_Smoke : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_speed_day; // 0x1328	
	int32_t bonus_speed_night; // 0x132c	
	int32_t break_distance_day; // 0x1330	
	int32_t break_distance_night; // 0x1334	
	int32_t visibility_radius; // 0x1338	
	int32_t bonus_movement_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Luna_LunarBlessing : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t bonus_night_vision; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Luna_LunarBlessingAura : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_damage_self; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Luna_LunarBlessing_Active : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Luna_Lunar_Grace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Luna_Lunar_Grace : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	float night_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Luna_Eclipse : public CDOTABaseAbility
{
public:
	bool m_bIsScepterCast; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Luna_Eclipse : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t beams; // 0x1320	
	int32_t hit_count; // 0x1324	
	int32_t m_iBeamDamage; // 0x1328	
	float beam_interval; // 0x132c	
	float stun_duration; // 0x1330	
	Vector vPosition; // 0x1334	
	bool bAreaTarget; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t m_iTickCount; // 0x1344	
	ParticleIndex_t m_nMoonlightFXIndex; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_HitTargets; // 0x1350	
	float m_flBeamStun; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DragonKnight_BreatheFire : public CDOTABaseAbility
{
public:
	int32_t start_radius; // 0x568	
	int32_t end_radius; // 0x56c	
	float damage; // 0x570	
	Vector m_vStartPos; // 0x574	
	GameTime_t m_fStartTime; // 0x580	
	float m_fTotalTime; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_BreatheFire_Reduction : public CDOTA_Buff
{
public:
	int32_t reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DragonKnight_DragonTail : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DragonKnight_DragonBlood : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_DragonBlood_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_DragonBlood : public CDOTA_Buff
{
public:
	int32_t bonus_health_regen; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DragonKnight_ElderDragonForm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_DragonKnight_DragonForm : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_attack_damage; // 0x131c	
	int32_t bonus_attack_range; // 0x1320	
	int32_t attack_projectile_speed_bonus; // 0x1324	
	int32_t magic_resistance; // 0x1328	
	int32_t model_scale; // 0x132c	
	int32_t iLevel; // 0x1330	
	int32_t m_iOriginalAttackCapabilities; // 0x1334	
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1338	
	int32_t bonus_slow_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_CorrosiveBreath : public CDOTA_Buff
{
public:
	float corrosive_breath_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_CorrosiveBreathDoT : public CDOTA_Buff
{
public:
	int32_t corrosive_breath_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DragonKnight_SplashAttack : public CDOTA_Buff
{
public:
	int32_t splash_radius; // 0x1318	
	int32_t splash_damage_percent; // 0x131c	
	float corrosive_breath_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_FrostBreath : public CDOTA_Buff
{
public:
	float frost_duration; // 0x1318	
	float frost_aoe; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_FrostBreath_Slow : public CDOTA_Buff
{
public:
	int32_t frost_bonus_movement_speed; // 0x1318	
	int32_t frost_bonus_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DragonKnight_BlackDragon_Tooltip : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DragonKnight_Fireball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_Fireball_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float linger_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DragonKnight_Fireball_Burn : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dazzle_Good_Juju : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Dazzle_Good_Juju : public CDOTA_Buff
{
public:
	float cooldown_reduction; // 0x1318	
	float item_cooldown_reduction; // 0x131c	
	float duration; // 0x1320	
	int32_t radius; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Dazzle_Bad_Juju_Manacost : public CDOTA_Buff
{
public:
	float mana_cost_increase_duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< GameTime_t > m_vecExpirationTimes; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dazzle_Bad_Juju : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dazzle_Bad_Juju_Armor_Counter : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	float armor_reduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dazzle_Bad_Juju_Armor : public CDOTA_Buff
{
public:
	float armor_reduction; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dazzle_Rain_Of_Vermin : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Dazzle_Rain_Of_Vermin : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float interval; // 0x131c	
	float hex_chance; // 0x1320	
	float hex_duration; // 0x1324	
	int32_t damage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dazzle_Poison_Touch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Dazzle_Poison_Touch : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	float bonus_slow; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float flAccummulatedBonusSlow; // 0x1324	
	int32_t iAccummulatedBonusDamage; // 0x1328	
	int32_t attack_range_bonus; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dazzle_Poison_Touch_Self : public CDOTA_Buff
{
public:
	int32_t attack_range_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dazzle_Shallow_Grave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Dazzle_Shallow_Grave : public CDOTA_Buff
{
public:
	bool m_bHasPostedEvent; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	ParticleIndex_t m_nFXIndex; // 0x131c	
	float fx_halo_height; // 0x1320	
	int32_t heal_amplify; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dazzle_ShadowWave : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x568	
	int32_t bounce_radius; // 0x580	
	int32_t damage_radius; // 0x584	
	int32_t damage; // 0x588	
	int32_t max_targets; // 0x58c	
	float scepter_heal_pct; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dazzle_Weave : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dazzle_Weave_Armor : public CDOTA_Buff
{
public:
	float armor_per_second; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Leshrac_Split_Earth : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Leshrac_Split_Earth_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Leshrac_Diabolic_Edict : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Leshrac_Diabolic_Edict : public CDOTA_Buff
{
public:
	int32_t num_explosions; // 0x1318	
	int32_t radius; // 0x131c	
	float m_fExplosions; // 0x1320	
	float tower_bonus; // 0x1324	
	bool m_bTalentActive; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Leshrac_Lightning_Storm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Leshrac_Lightning_Storm_Scepter_Thinker : public CDOTA_Buff
{
public:
	float pulse_nova_lightning_interval; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Leshrac_Lightning_Storm : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t jump_count; // 0x1320	
	float slow_duration; // 0x1324	
	float jump_delay; // 0x1328	
	CHandle< CBaseEntity > hInitialTarget; // 0x132c	
	float m_flDamage; // 0x1330	
	int32_t m_iCurJumpCount; // 0x1334	
	Vector m_vCurTargetLoc; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1348	
	bool m_bGrantedGem; // 0x1360	
	bool m_bBounceTwice; // 0x1361	
private:
	[[maybe_unused]] uint8_t __pad1362[0x2]; // 0x1362
public:
	CHandle< CBaseEntity > m_eLastTarget; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Leshrac_Lightning_Storm_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Leshrac_Greater_Lightning_Storm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Leshrac_Decrepify_Aura : public CDOTA_Buff
{
public:
	int32_t magic_amp; // 0x1318	
	int32_t slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Leshrac_Decrepify : public CDOTA_Buff
{
public:
	int32_t magic_amp; // 0x1318	
	int32_t slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Leshrac_Greater_Lightning_Storm : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Leshrac_Pulse_Nova : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Leshrac_Pulse_Nova : public CDOTA_Buff
{
public:
	bool m_bFirst; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0xb]; // 0x1319
public:
	int32_t damage_resistance; // 0x1324	
	int32_t bonus_movespeed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rattletrap_Overclocking : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Rattletrap_Overclocking : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nOverclockFX; // 0x1318	
	int32_t bonus_movement_speed; // 0x131c	
	int32_t bonus_attack_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rattletrap_Overheated : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rattletrap_BatteryAssault : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rattletrap_BatteryAssault : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rattletrap_PowerCogs : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Barrier : public CDOTA_Buff
{
public:
	int32_t magic_barrier; // 0x1318	
	int32_t m_nAbsorbRemaining; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Thinker : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1318	
	int32_t extra_pull_buffer; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Thinker_Leash : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1318	
	int32_t extra_pull_buffer; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Leash : public CDOTA_Buff
{
public:
	int32_t leash; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Thinker_Talent : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1318	
	int32_t extra_pull_buffer; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Immune : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Thinker_Self_Bonuses : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1318	
	int32_t extra_pull_buffer; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog_Self_Bonuses : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Rattletrap_Cog : public CDOTA_Buff
{
public:
	bool m_bEnabled; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t trigger_distance; // 0x131c	
	int32_t push_length; // 0x1320	
	float push_duration; // 0x1324	
	int32_t cogs_radius; // 0x1328	
	int32_t attacks_to_destroy; // 0x132c	
	int32_t m_iCogIndex; // 0x1330	
	ParticleIndex_t m_nFXIndex; // 0x1334	
	Vector vCenter; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Rattletrap_CogPush : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1318	
	Vector m_vDirection; // 0x131c	
	float m_flEndTime; // 0x1328	
	float m_flCurTime; // 0x132c	
	int32_t push_length; // 0x1330	
	float push_duration; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rattletrap_RocketFlare : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecEnemyHeroesInFog; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rattletrap_RocketFlare_Slow : public CDOTA_Buff
{
public:
	float slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Clockwerk_RocketFlare_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1318	
	float duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Rattletrap_RocketFlare : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t projectile_vision_radius; // 0x1320	
	float projectile_vision_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Rattletrap_RocketFlare_Overclock : public CDOTA_Buff
{
public:
	float rocket_flare_interval; // 0x1318	
	int32_t rocket_flare_offset_pct; // 0x131c	
	int32_t rocket_flare_rockets; // 0x1320	
	int32_t m_nRocketsFired; // 0x1324	
	int32_t radius; // 0x1328	
	Vector m_vOriginalTarget; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rattletrap_JetPack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
class CDOTA_Modifier_Rattletrap_JetPack : public CDOTA_Buff
{
public:
	int32_t m_nMovementSpeed; // 0x1318	
	int32_t bonus_speed; // 0x131c	
	float turn_rate; // 0x1320	
	GameTime_t m_flStartTime; // 0x1324	
	float tick_interval; // 0x1328	
	float m_flFacingTarget; // 0x132c	
	ParticleIndex_t m_nFXIndex; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< float32 > m_flTurnHistory; // 0x1338	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitLastRicochet; // 0x1350	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesCredited; // 0x1368	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitCurrentRicochet; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rattletrap_Hookshot : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	Vector m_vProjectileVelocity; // 0x56c	
	bool m_bRetract; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0xb]; // 0x579
public:
	CHandle< CBaseEntity > m_hSourceCaster; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Rattletrap_Hookshot : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDamaged; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x1330	
	Vector m_vStartPosition; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1340[0x8]; // 0x1340
public:
	int32_t speed; // 0x1348	
	float stun_radius; // 0x134c	
	float damage; // 0x1350	
	float duration; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furion_Greater_Sprout : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furion_Sprout : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
	int32_t m_iShardCount; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Damage_Aura : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Damage : public CDOTA_Buff
{
public:
	int32_t sprout_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Blind_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Blind : public CDOTA_Buff
{
public:
	int32_t blind_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Tether_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Tether : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_Sprout_Entangle : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furion_Teleportation : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexStart; // 0x568	
	ParticleIndex_t m_nFXIndexEnd; // 0x56c	
	ParticleIndex_t m_nFXIndexEndTeam; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Furion_Arboreal_Might_Attack_Damage : public CDOTA_Buff
{
public:
	float damage_per_stack; // 0x1318	
	int32_t iMaxStacks; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Furion_Arboreal_Might_Armor : public CDOTA_Buff
{
public:
	float armor_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furion_ForceOfNature : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furion_WrathOfNature : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Furion_WrathOfNature_Thinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t max_targets; // 0x131c	
	int32_t damage_percent_add; // 0x1320	
	float jump_delay; // 0x1324	
	int32_t m_iFixedDamage; // 0x1328	
	GameTime_t m_flLastTickTime; // 0x132c	
	float m_flTimeAccumulator; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitTargets; // 0x1338	
	int32_t m_nBaseDamage; // 0x1350	
	int32_t m_nMaxTargets; // 0x1354	
	float m_flJumpDelay; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_WrathOfNature_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_WrathOfNature_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Furion_WrathOfNature_Spawn : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Furion_CurseOfTheForest : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Furion_CurseOfTheForest : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage_per_tree; // 0x131c	
	int32_t slow_per_tree; // 0x1320	
	int32_t m_nSlow; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Treant_Bonus : public CDOTA_Buff
{
public:
	int32_t treant_hp_bonus; // 0x1318	
	int32_t treant_damage_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Treant_Large_Bonus : public CDOTA_Buff
{
public:
	int32_t treant_large_hp_bonus; // 0x1318	
	int32_t treant_large_damage_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Furion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Furion_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Furion_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Furion_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Furion_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Feast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Life_Stealer_Feast : public CDOTA_Buff
{
public:
	float hp_leech_percent; // 0x1318	
	float hp_damage_percent; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Ghoul_Frenzy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Life_Stealer_Ghoul_Frenzy : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Life_Stealer_Ghoul_Frenzy_Slow : public CDOTA_Buff
{
public:
	int32_t miss_pct; // 0x1318	
	int32_t movement_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Open_Wounds : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Life_Stealer_Open_Wounds : public CDOTA_Buff
{
public:
	int32_t slow_steps[8]; // 0x1318	
	int32_t heal_percent; // 0x1338	
	int32_t m_nDamageTracker; // 0x133c	
	int32_t damage_threshold; // 0x1340	
	int32_t spread_radius; // 0x1344	
	int32_t max_health_as_damage_pct; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Empty1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Empty2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Empty3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Infest : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Life_Stealer_Infest : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_nFXIndex; // 0x131c	
	float self_regen; // 0x1320	
	int32_t m_nStartingHealth; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Life_Stealer_Infest_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_health; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Life_Stealer_Infest_Enemy_Hero : public CDOTA_Buff
{
public:
	float attack_rate_enemy; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Consume : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Control : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Life_Stealer_Infest_Creep : public CDOTA_Buff
{
public:
	bool m_bChangedTeams; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Assimilate : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hLastAssimilation; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Life_Stealer_Assimilate : public CDOTA_Buff
{
public:
	float order_lock_duration; // 0x1318	
	GameTime_t m_fOrderLockDone; // 0x131c	
	int32_t m_nFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Life_Stealer_Assimilate_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_AssimilateEject : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Life_Stealer_Rage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Life_Stealer_Rage : public CDOTA_Buff
{
public:
	int32_t movement_speed_bonus; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkSeer_Normal_Punch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1490
// Has VTable
class CDOTA_Modifier_DarkSeer_Normal_Punch : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[30]; // 0x1318	
	ParticleIndex_t m_nNormalPunchBuffIndex; // 0x1480	
	float m_flDistanceTraveled; // 0x1484	
	bool m_bIsValidTarget; // 0x1488	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_DarkSeer_Normal_Punch_Illusion_Thinker : public CDOTA_Buff
{
public:
	Vector m_vecIllusionSpawnPosition; // 0x1318	
	int32_t speed; // 0x1324	
	CHandle< CBaseEntity > m_hTarget; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkSeer_Vacuum : public CDOTABaseAbility
{
public:
	Vector m_vPullLocation; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkSeer_Vacuum : public CDOTA_Buff
{
public:
	float pull_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkSeer_IonShell : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_IonShell : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	float tick_interval; // 0x1320	
	int32_t bonus_health; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_IonShell_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkSeer_Surge : public CDOTABaseAbility
{
public:
	bool m_bIsAltCastState; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_DarkSeer_Surge : public CDOTA_Buff
{
public:
	int32_t speed_boost; // 0x1318	
	int32_t trail_radius; // 0x131c	
	float trail_duration; // 0x1320	
	Vector m_vLastTrailThinkerLocation; // 0x1324	
	bool m_bTrailStarted; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkSeer_Surge_Trail_Thinker : public CDOTA_Buff
{
public:
	int32_t trail_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DarkSeer_Surge_Trail : public CDOTA_Buff
{
public:
	int32_t trail_move_slow; // 0x1318	
	int32_t trail_damage; // 0x131c	
	float trail_damage_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkSeer_WallOfReplica : public CDOTABaseAbility
{
public:
	int32_t width; // 0x568	
	Vector m_vEndpoint; // 0x56c	
	Vector m_vSlashDir; // 0x578	
	int32_t m_nDashProjectileID; // 0x584	
	Vector m_vDashProjectileLocation; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_DarkSeer_WallOfReplica : public CDOTA_Buff
{
public:
	Vector m_vWallDirection; // 0x1318	
	Vector m_vWallRight; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1330[0x18]; // 0x1330
public:
	CUtlMap< int32, GameTime_t > m_PreventReplicateTime; // 0x1348	
	int32_t width; // 0x1368	
	int32_t wall_damage; // 0x136c	
	float slow_duration; // 0x1370	
	int32_t replica_damage_incoming; // 0x1374	
	int32_t replica_damage_outgoing; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkSeer_WallOfReplica_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkSeer_WallOfReplica_Illusion : public CDOTA_Buff
{
public:
	int32_t replica_scale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkSeer_Normal_Punch_Illusion : public CDOTA_Buff
{
public:
	int32_t replica_scale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkSeer_IonShell_IllusionInvulnerability : public CDOTA_Modifier_Invulnerable
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_SearingArrows : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Clinkz_SearingArrows : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	bool m_bBonusAttack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_DeathPact : public CDOTABaseAbility
{
public:
	int32_t m_nDevourFirstSlot; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hSkeletonSummons; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Clinkz_DeathPact : public CDOTA_Buff
{
public:
	int32_t health_gain; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Clinkz_DeathPact_Permanent_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_Burning_Army : public CDOTABaseAbility
{
public:
	int32_t range; // 0x568	
	Vector m_vEndpoint; // 0x56c	
	Vector m_vSlashDir; // 0x578	
	int32_t m_nDashProjectileID; // 0x584	
	Vector m_vDashProjectileLocation; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Clinkz_Burning_Army_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1318	
	int32_t count; // 0x131c	
	int32_t range; // 0x1320	
	Vector m_vFacePosition; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Clinkz_Burning_Army : public CDOTA_Buff
{
public:
	float attack_rate; // 0x1318	
	int32_t damage_percent; // 0x131c	
	int32_t skeleton_health; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	int32_t skeleton_building_damage_reduction; // 0x1328	
	int32_t m_nDamageCounter; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_WindWalk : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hSkeletonSummons; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Clinkz_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t move_speed_bonus_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_Strafe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Clinkz_Strafe : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1318	
	int32_t attack_range_bonus; // 0x131c	
	int32_t archer_attack_speed_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_BurningBarrage : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x568	
	int32_t m_iArrowProjectile; // 0x574	
	int32_t m_nFXIndex; // 0x578	
	float arrow_speed; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Clinkz_BurningBarrage_DamageReduction : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Clinkz_BurningBarrage : public CDOTA_Buff
{
public:
	int32_t m_iArrowCount; // 0x1318	
	Vector m_vOriginalTarget; // 0x131c	
	int32_t arrow_width; // 0x1328	
	float arrow_speed; // 0x132c	
	float arrow_range_multiplier; // 0x1330	
	int32_t wave_count; // 0x1334	
	int32_t arrow_count_per_wave; // 0x1338	
	int32_t arrow_angle; // 0x133c	
	int32_t m_iLoopCount; // 0x1340	
	float m_flInterval; // 0x1344	
	float m_flCycleDelay; // 0x1348	
	float m_flTimeWaste; // 0x134c	
	GameTime_t m_flExpectedTime; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_Empty1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Clinkz_Tar_Bomb : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Clinkz_Tar_Bomb_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float slow_duration; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Clinkz_Tar_Bomb_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Clinkz_Tar_Bomb_SearingArrows : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	bool m_bBonusAttack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_Hammer_Of_Purity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Omniknight_HammerOfPurity : public CDOTA_Buff
{
public:
	GameTime_t m_flNextAttackTime; // 0x1318	
	float attack_cooldown; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Omniknight_Hammer_Of_Purity_Bomb : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_Angelic_Flight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Omniknight_Angelic_Flight : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_Purification : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_Pacify : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Omniknight_Pacify : public CDOTA_Buff
{
public:
	int32_t spell_resistance_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_Repel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Omniknight_Repel : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1318	
	float hp_regen; // 0x131c	
	int32_t bonus_str; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_Degen_Aura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Omniknight_Degen_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Omniknight_Degen_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_Martyr : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Omniknight_Marty : public CDOTA_Buff
{
public:
	int32_t base_strength; // 0x1318	
	int32_t base_hpregen; // 0x131c	
	int32_t strength_bonus; // 0x1320	
	int32_t nDebuffAmount; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Omniknight_GuardianAngel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Omniknight_GuardianAngel : public CDOTA_Buff
{
public:
	int32_t scepter_status_resist; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enchantress_Little_Friends : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	int32_t radius; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Enchantress_Little_Friends_Kill_Credit : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Enchantress_Little_Friends_Aura : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_nAlliesTaunted; // 0x131c	
	bool m_bRelicTriggered; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t radius; // 0x1324	
	int32_t damage_amplification; // 0x1328	
	int32_t damage_reduction; // 0x132c	
	float root_base_duration; // 0x1330	
	float root_per_target; // 0x1334	
	float max_root; // 0x1338	
	GameTime_t m_flLastSeen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Enchantress_Little_Friends : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1318	
	CHandle< CBaseEntity > m_hDesiredTarget; // 0x131c	
	int32_t damage_reduction; // 0x1320	
	int32_t bonus_attack_speed; // 0x1324	
	int32_t bonus_move_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enchantress_Bunny_Hop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Enchantress_Bunny_Hop : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1318	
	int32_t hop_height; // 0x131c	
	int32_t hop_distance; // 0x1320	
	float m_flStartZ; // 0x1324	
	float m_flCurTime; // 0x1328	
	float m_flJumpDuration; // 0x132c	
	float m_flJumpHeight; // 0x1330	
	Vector m_vTargetHorizontalDirection; // 0x1334	
	CUtlVector< CHandle< CBaseEntity > > hUnitsToHit; // 0x1340	
	bool m_bLaunched; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enchantress_Untouchable : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Enchantress_Untouchable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Enchantress_Untouchable_Slow : public CDOTA_Buff
{
public:
	int32_t slow_attack_speed; // 0x1318	
	ParticleIndex_t m_nStatusFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enchantress_Enchant : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hUnits; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Enchantress_Enchant : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Enchantress_Enchant_Controlled : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t enchant_health; // 0x131c	
	int32_t enchant_armor; // 0x1320	
	int32_t enchant_damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Enchantress_Enchant_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enchantress_NaturesAttendants : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Enchantress_NaturesAttendants_Shard : public CDOTA_Buff
{
public:
	float heal_interval; // 0x1318	
	float heal; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t shard_permanent_wisp_count; // 0x1324	
	bool m_bActive; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	ParticleIndex_t m_nWispFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Enchantress_NaturesAttendants : public CDOTA_Buff
{
public:
	float heal_interval; // 0x1318	
	float heal; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t wisp_count; // 0x1324	
	int32_t movespeed; // 0x1328	
	ParticleIndex_t m_nWispFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Enchantress_Impetus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Enchantress_Impetus : public CDOTA_Buff
{
public:
	float distance_damage_pct; // 0x1318	
	int32_t distance_cap; // 0x131c	
	float creep_multiplier; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Huskar_Inner_Fire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Huskar_Inner_Fire_Knockback : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float knockback_distance; // 0x132c	
	float knockback_duration; // 0x1330	
	float effective_distance; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Huskar_Inner_Fire_Disarm : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Huskar_Inner_Vitality : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Huskar_Inner_Vitality : public CDOTA_Buff
{
public:
	int32_t heal; // 0x1318	
	float attrib_bonus; // 0x131c	
	float hurt_attrib_bonus; // 0x1320	
	float hurt_percent; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Huskar_Burning_Spear_Self : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	float duration; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Huskar_Burning_Spear : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Huskar_Burning_Spear_Counter : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Huskar_Burning_Spear_Debuff : public CDOTA_Buff
{
public:
	int32_t burn_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Huskar_Berserkers_Blood : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Huskar_Berserkers_Blood : public CDOTA_Buff
{
public:
	int32_t maximum_health_regen; // 0x1318	
	int32_t maximum_attack_speed; // 0x131c	
	int32_t maximum_magic_resist; // 0x1320	
	int32_t hp_threshold_max; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Huskar_Life_Break : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	Vector m_vProjectileLocation; // 0x578	
	CHandle< CBaseEntity > m_hTarget; // 0x584	
	bool m_bInterrupted; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Huskar_Life_Break_Taunt : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1318	
	bool m_bDidSetAttackTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Huskar_Life_Break_Charge : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Huskar_Life_Break : public CDOTA_Modifier_MoveSpeed_Percentage
{
public:
	int32_t attack_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NightStalker_Void : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NightStalker_Void : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NightStalker_Void_ZoneThinker : public CDOTA_Buff
{
public:
	int32_t radius_scepter; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NightStalker_Void_Zone : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NightStalker_CripplingFear : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_NightStalker_CripplingFear_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_NightStalker_CripplingFear : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t dps; // 0x1320	
	float tick_rate; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NightStalker_HunterInTheNight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_NightStalker_HunterInTheNight : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed_pct_night; // 0x1318	
	int32_t bonus_attack_speed_night; // 0x131c	
	int32_t bonus_status_resist_night; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	bool m_bIsDay; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NightStalker_Darkness : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_NightStalker_Darkness : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t status_resistance; // 0x131c	
	int32_t hp_regen; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	bool m_bIsDay; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_SpawnSpiderlings : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_SpawnSpiderlings : public CDOTA_Buff
{
public:
	float spiderling_duration; // 0x1318	
	int32_t count; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_SpawnSpiderlingsShard : public CDOTA_Buff
{
public:
	float shard_spiderling_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_Spider_HP : public CDOTA_Buff
{
public:
	int32_t hp_bonus; // 0x1318	
	int32_t damage_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_SpawnSpiderite : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_SpawnSpiderite : public CDOTA_Buff
{
public:
	float buff_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_SpawnSpideriteDebuff : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hParentSpider; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_PoisonSting : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_PoisonSting : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	float duration_hero; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_PoisonStingDebuff : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	int32_t movement_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Broodmother_SpinWeb_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_SpinWeb : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hWebs; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_SpinWeb_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Broodmother_SpinWebInvisibleApplier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_SpinWeb_Slowed : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Broodmother_SpinWeb : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
	int32_t bonus_movespeed_scepter; // 0x131c	
	float bonus_turn_rate; // 0x1320	
	float flLastDamageTime; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Broodmother_SpinWeb_NoTreeWalking : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_SpinWeb_Destroy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_IncapacitatingBite : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_IncapacitatingBite : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_IncapacitatingBiteOrb : public CDOTA_Buff
{
public:
	int32_t miss_chance; // 0x1318	
	int32_t bonus_movespeed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_InsatiableHunger : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Broodmother_InsatiableHunger : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t lifesteal_pct; // 0x131c	
	float slow_duration; // 0x1320	
	float bat_bonus; // 0x1324	
	float shard_damage_tick_interval; // 0x1328	
	int32_t damage_tick_count; // 0x132c	
	int32_t shard_damage_per_tick; // 0x1330	
	int32_t creep_lifesteal_reduction_pct; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_Silken_Bola : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Broodmother_Silken_Bola : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t miss_chance; // 0x1320	
	int32_t shard_miss_chance; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Broodmother_StickySnare : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x568	
	float duration; // 0x574	
	int32_t width; // 0x578	
	bool m_bStolenSnareCheck; // 0x57c	
private:
	[[maybe_unused]] uint8_t __pad057d[0x1b]; // 0x57d
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecSnares; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Broodmother_StickySnare : public CDOTA_Buff
{
public:
	Vector m_vOrigin; // 0x1318	
	Vector m_vWallDirection; // 0x1324	
	Vector m_vWallRight; // 0x1330	
	int32_t width; // 0x133c	
	float root_duration; // 0x1340	
	float formation_delay; // 0x1344	
	bool m_bTouching; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	CHandle< CBaseEntity > m_hRight; // 0x134c	
	bool m_bParticle; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	GameTime_t m_flStartingTime; // 0x1354	
	int32_t m_nFoWID; // 0x1358	
	int32_t m_nTeamID; // 0x135c	
	CUtlVector< CHandle< CBaseEntity > > m_vecAffectedHeroes; // 0x1360	
	ParticleIndex_t m_nWarmupFXIndex; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Broodmother_StickySnare_Root : public CDOTA_Buff
{
public:
	float damage_per_second; // 0x1318	
	bool m_bFirstSecond; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Broodmother_Tough : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_BountyHunter_Track : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	int32_t m_nParentGold; // 0x131c	
	int32_t target_crit_multiplier; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BountyHunter_ShurikenToss : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BountyHunter_Jinada : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_BountyHunter_Jinada : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t gold_steal; // 0x131c	
	ParticleIndex_t m_nFXIndexA; // 0x1320	
	ParticleIndex_t m_nFXIndexB; // 0x1324	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BountyHunter_WindWalk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BountyHunter_WindWalk_Ally : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_BountyHunter_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t damage_reduction_pct; // 0x1328	
	float shard_stun_duration; // 0x132c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BountyHunter_WindWalk_Fade : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BountyHunter_WindWalk_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t attack_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BountyHunter_Track : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTrap; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_BountyHunter_Track_Bear_Trap : public CDOTA_Modifier_Invisible
{
public:
	bool m_bActivated; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BountyHunter_TrackEffect : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_BountyHunter_Lookout : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_BountyHunter_Lookout : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Weaver_TheSwarm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Weaver_Swarm : public CDOTA_Buff
{
public:
	int32_t m_iMaxDist; // 0x1318	
	int32_t m_iAttackCount; // 0x131c	
	int32_t destroy_attacks; // 0x1320	
	Vector m_vDirection; // 0x1324	
	Vector m_vStartLoc; // 0x1330	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Weaver_Swarm_Debuff : public CDOTA_Buff
{
public:
	float armor_reduction; // 0x1318	
	int32_t damage; // 0x131c	
	float m_flCurrentArmorReduction; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Weaver_Shukuchi : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	int32_t radius; // 0x56c	
	int32_t damage; // 0x570	
	float fade_time; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Weaver_Shukuchi : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1328	
	int32_t damage; // 0x132c	
	int32_t speed; // 0x1330	
	float geminate_attack_mark_duration; // 0x1334	
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Weaver_Shukuchi_GeminateAttackMark : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Weaver_Shukuchi_GeminateAttackManager : public CDOTA_Buff
{
public:
	int32_t m_iAttacksRemaining; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Weaver_GeminateAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Weaver_GeminateAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_iAttacksRemaining; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Weaver_GeminateAttack_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Weaver_TimeLapse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t m_nNPCSpawnedID; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
class CDOTA_Modifier_Weaver_TimeLapse : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[11]; // 0x1318	
	float m_flLife[11]; // 0x139c	
	float m_flMana[11]; // 0x13c8	
	bool m_bHasValidHistory; // 0x13f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jakiro_DualBreath : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitHeroes; // 0x568	
	bool m_bGrantedGem; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Jakiro_DualBreath_Thinker : public CDOTA_Buff
{
public:
	int32_t start_radius; // 0x1318	
	int32_t end_radius; // 0x131c	
	GameTime_t m_fStartTime; // 0x1320	
	float m_fTotalTime; // 0x1324	
	Vector m_vCastPosition; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jakiro_DualBreath_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1318	
	int32_t slow_attack_speed_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jakiro_DualBreath_Burn : public CDOTA_Buff
{
public:
	bool m_bFirst; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t burn_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jakiro_IcePath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Jakiro_IcePath_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Jakiro_IcePath_Thinker : public CDOTA_Buff
{
public:
	float path_delay; // 0x1318	
	int32_t path_radius; // 0x131c	
	int32_t m_nDamage; // 0x1320	
	float m_flRadius; // 0x1324	
	float stun_duration; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hUnitsHit; // 0x1330	
	Vector m_vPathStart; // 0x1348	
	Vector m_vPathEnd; // 0x1354	
	GameTime_t m_fStartTime; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jakiro_Liquid_Ice : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Jakiro_LiquidIce : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	bool m_bForceProc; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Jakiro_LiquidIce_Debuff : public CDOTA_Buff
{
public:
	int32_t base_damage; // 0x1318	
	float pct_health_damage; // 0x131c	
	int32_t movement_slow; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jakiro_Liquid_Fire : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Jakiro_LiquidFire : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	bool m_bForceProc; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jakiro_LiquidFire_Burn : public CDOTA_Buff
{
public:
	int32_t slow_attack_speed_pct; // 0x1318	
	float damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Jakiro_Macropyre : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Jakiro_Macropyre_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1318	
	float burn_interval; // 0x1324	
	int32_t path_radius; // 0x1328	
	int32_t cast_range; // 0x132c	
	float linger_duration; // 0x1330	
	bool m_bTestedGem; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jakiro_Macropyre_Burn : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float burn_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Jakiro_Macropyre_Ice_EdgeThinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1318	
	int32_t ice_edge_path_radius; // 0x1324	
	int32_t cast_range; // 0x1328	
	float ice_edge_linger_duration; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jakiro_Macropyre_Ice_Edge_Slow : public CDOTA_Buff
{
public:
	int32_t ice_edge_movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Batrider_StickyNapalm_Application_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Batrider_StickyNapalm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Batrider_StickyNapalm_Application : public CDOTA_Buff
{
public:
	bool m_bShouldApply; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Batrider_StickyNapalm : public CDOTA_Modifier_Stacking_Base
{
public:
	float movement_speed_pct; // 0x1338	
	int32_t turn_rate_pct; // 0x133c	
	int32_t damage; // 0x1340	
	int32_t application_damage; // 0x1344	
	ParticleIndex_t m_nFXIndex; // 0x1348	
	ParticleIndex_t m_nFXStackIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Batrider_Flamebreak : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Ability_Batrider_Flamebreak_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Batrider_Flamebreak_Damage : public CDOTA_Buff
{
public:
	int32_t damage_impact; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	int32_t slow; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Batrider_Firefly : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Batrider_Firefly : public CDOTA_Buff
{
public:
	bool m_bActive; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t radius; // 0x131c	
	int32_t m_ifirefly_Active; // 0x1320	
	int32_t tree_radius; // 0x1324	
	int32_t damage_per_second; // 0x1328	
	int32_t movement_speed; // 0x132c	
	int32_t bonus_slow_resistance; // 0x1330	
	float tick_interval; // 0x1334	
	ParticleIndex_t m_nFXIndex; // 0x1338	
	ParticleIndex_t m_nFXIndexB; // 0x133c	
	GameTime_t m_fNextDamageTick; // 0x1340	
	Vector m_vLastFirePoolLoc; // 0x1344	
	int32_t bonus_vision; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Batrider_FlamingLasso : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Batrider_FlamingLasso : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1318	
	int32_t drag_distance; // 0x131c	
	int32_t break_distance; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	Vector vPreviousLocation; // 0x1328	
	CHandle< CDOTA_BaseNPC > m_hAnchor; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Batrider_FlamingLasso_Self : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Batrider_FlamingLasso_Damage : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1318	
	float damage; // 0x131c	
	float duration; // 0x1320	
	float tick_rate; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Batrider_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Batrider_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Batrider_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Batrider_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Batrider_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Batrider_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Batrider_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Chen_Penitence : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Chen_Penitence : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_damage_taken; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Chen_Penitence_Attack_Speed_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Chen_Penitence_Self_Attack_Range : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t self_attack_range_bonus; // 0x131c	
	bool m_bActive; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Chen_TestOfFaith : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Chen_DivineFavor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Chen_Divine_Favor_Armor : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t heal_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Chen_Divine_Favor_Teleport : public CDOTA_Buff
{
public:
	bool bToChen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Chen_DivineFavor_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Chen_DivineFavor : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1318	
	float heal_rate; // 0x131c	
	int32_t creep_bonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Chen_TestOfFaithTeleport : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Chen_HolyPersuasion : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDominatedUnits; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Chen_HolyPersuasion : public CDOTA_Buff
{
public:
	int32_t health_min; // 0x1318	
	int32_t new_max; // 0x131c	
	int32_t health_bonus; // 0x1320	
	int32_t damage_bonus; // 0x1324	
	int32_t movement_speed_bonus; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Chen_TestOfFaith_Teleport : public CDOTA_Buff
{
public:
	bool bToChen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Chen_HandOfGod : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Chen_HandOfGod_Hot : public CDOTA_Buff
{
public:
	int32_t heal_per_second; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Chen_Martyrdom : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chen_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spectre_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spectre_Desolate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spectre_Desolate : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Spectre_SpectralDaggerPath : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x18]; // 0x1318
public:
	CUtlVector< CHandle< CBaseEntity > > m_hUnitsInPath; // 0x1330	
	int32_t path_radius; // 0x1348	
	int32_t vision_radius; // 0x134c	
	int32_t dagger_radius; // 0x1350	
	float buff_persistence; // 0x1354	
	float dagger_grace_period; // 0x1358	
	float dagger_path_duration; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spectre_SpectralDagger : public CDOTABaseAbility
{
public:
	float dagger_path_duration; // 0x568	
	float hero_path_duration; // 0x56c	
	float m_fCreateInterval; // 0x570	
	GameTime_t m_fLastCreate; // 0x574	
	Vector m_vecLastPosition; // 0x578	
	bool m_bIsTrackingProjectile; // 0x584	
private:
	[[maybe_unused]] uint8_t __pad0585[0x3]; // 0x585
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTrackingProjectileHits; // 0x588	
	CUtlVector< CHandle< CBaseEntity > > m_hUnitsHit; // 0x5a0	
	CHandle< CBaseEntity > m_hTrackingTarget; // 0x5b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Spectre_SpectralDagger : public CDOTA_Buff
{
public:
	int32_t path_radius; // 0x1318	
	float hero_path_duration; // 0x131c	
	Vector m_vLastPosition; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spectre_SpectralDaggerInPath : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
	CHandle< CBaseEntity > m_hTrackingTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spectre_SpectralDaggerPathPhased : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spectre_SpectralDaggerPath_ActivityModifierOnly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spectre_Desolate_Blind : public CDOTA_Buff
{
public:
	int32_t blind_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spectre_Dispersion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Spectre_Dispersion : public CDOTA_Buff
{
public:
	int32_t damage_reflection_pct; // 0x1318	
	int32_t min_radius; // 0x131c	
	int32_t max_radius; // 0x1320	
	int32_t activation_bonus_pct; // 0x1324	
	GameTime_t m_flLastDispersionPulseEffectTime; // 0x1328	
	float m_fDamageCounter; // 0x132c	
	float m_fLastTime; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spectre_Dispersion_Memory : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spectre_Dispersion_Boost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spectre_Haunt : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spectre_Haunt_Single : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Spectre_Haunt : public CDOTA_Buff
{
public:
	bool m_bRealityApplied; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	GameTime_t m_fStartAttackTime; // 0x131c	
	CHandle< CBaseEntity > hTarget; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Spectre_Reality : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spectre_Spectral_Dagger_Illusions : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spectre_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DoomBringer_Devour : public CDOTABaseAbility
{
public:
	int32_t m_nDevourFirstSlot; // 0x568	
	bool m_bIsAltCastState; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoomBringer_Devour_Upgrade_Timer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoomBringer_Devour_Hero_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DoomBringer_Devour : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1318	
	int32_t magic_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoomBringer_Devour_Hero_Ability : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DoomBringer_Devour_Intrinsic : public CDOTA_Buff
{
public:
	int32_t cast_range_bonus; // 0x1318	
	int32_t spell_amp_bonus; // 0x131c	
	int32_t cooldown_bonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DoomBringer_ScorchedEarth : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoomBringer_ScorchedEarth_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DoomBringer_ScorchedEarthEffect : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DoomBringer_ScorchedEarthEffectAura : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	int32_t bonus_movement_speed_pct; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t heal_pct; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DoomBringer_InfernalBlade : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DoomBringer_InfernalBlade : public CDOTA_Buff
{
public:
	bool m_bInfernalBladeAttack; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	ParticleIndex_t m_nFXIndex; // 0x131c	
	float burn_duration; // 0x1320	
	float ministun_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DoomBringer_InfernalBlade_Burn : public CDOTA_Buff
{
public:
	int32_t burn_damage; // 0x1318	
	float burn_damage_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DoomBringer_Doom : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DoomBringer_Doom_Aura_Self : public CDOTA_Buff
{
public:
	int32_t scepter_aura_radius; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DoomBringer_Doom_Aura_Enemy : public CDOTA_Buff
{
public:
	int32_t scepter_aura_radius; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_DoomBringer_Doom : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float duration; // 0x131c	
	int32_t deniable_pct; // 0x1320	
	float flElapsedTime; // 0x1324	
	int32_t damage_amp; // 0x1328	
	bool m_bDoesBreak; // 0x132c	
	bool m_bDoesMute; // 0x132d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoomBringer_Doom_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DoomBringer_Empty1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DoomBringer_Empty2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SpiritBreaker_ChargeOfDarkness : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	bool m_bFinished; // 0x578	
	bool m_bInterrupted; // 0x579	
	bool m_bPlayedChargeAnimation; // 0x57a	
private:
	[[maybe_unused]] uint8_t __pad057b[0x1]; // 0x57b
public:
	Vector m_vProjectileLocation; // 0x57c	
	Vector m_vTargetLocation; // 0x588	
	CHandle< CBaseEntity > m_hTarget; // 0x594	
	CUtlVector< CHandle< CBaseEntity > > m_hTrackingProjectileHits; // 0x598	
	CUtlVector< CDOTA_Tree* > m_hTrackingProjectileTrees; // 0x5b0	
	int32_t nFXIndex; // 0x5c8	
	int32_t m_iCurProjectileIndex; // 0x5cc	
	Vector m_vChargeStartPos; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SpiritBreaker_GreaterBash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SpiritBreaker_GreaterBash : public CDOTA_Buff
{
public:
	int32_t chance_pct; // 0x1318	
	float damage; // 0x131c	
	float movespeed_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_SpiritBreaker_GreaterBash_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_GreaterBash_Speed : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_ChargeOfDarkness : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_ChargeOfDarknessTarget : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	CEntityIndex m_iChargeTargetEntityIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_ChargeOfDarknessVision : public CDOTA_Buff
{
public:
	int32_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_SpecialAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SpiritBreaker_Bulldoze : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SpiritBreaker_Bulldoze : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t status_resistance; // 0x131c	
	float damage_barrier; // 0x1320	
	float m_flCurrentBarrier; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SpiritBreaker_EmpoweringHaste : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_EmpoweringHasteAura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SpiritBreaker_EmpoweringHaste : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed_pct_self; // 0x1318	
	int32_t bonus_movespeed_pct_allies; // 0x131c	
	int32_t bonus_movespeed_pct_extra; // 0x1320	
	int32_t duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SpiritBreaker_NetherStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_NetherStrike_Vision : public CDOTA_Buff
{
public:
	int32_t invis_threshold_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_SpiritBreaker_NetherStrike : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	bool m_bStrikeLanded; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	Vector m_vCastLocation; // 0x1320	
	CHandle< CBaseEntity > m_hTarget; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_SpiritBreaker_PlanarPocket : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SpiritBreaker_PlanarPocketAura : public CDOTA_Buff
{
public:
	bool m_bHasActivated; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t radius; // 0x131c	
	int32_t magic_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SpiritBreaker_PlanarPocket : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hRedirectAbility; // 0x1318	
	GameTick_t nRedirectTick; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Gyrocopter_Rocket_Barrage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Gyrocopter_Rocket_Barrage : public CDOTA_Buff
{
public:
	int32_t rocket_damage; // 0x1318	
	int32_t bonus_movement_speed; // 0x131c	
	int32_t slow_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Gyrocopter_HomingMissile_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Gyrocopter_Homing_Missile : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
class CDOTA_Modifier_Gyrocopter_Homing_Missile : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	ParticleIndex_t m_nFXIndex2; // 0x131c	
	int32_t hero_damage; // 0x1320	
	int32_t acceleration; // 0x1324	
	int32_t min_damage; // 0x1328	
	int32_t max_distance; // 0x132c	
	int32_t shard_radius; // 0x1330	
	float shard_delay; // 0x1334	
	float pre_flight_time; // 0x1338	
	float stun_duration; // 0x133c	
	int32_t m_nMissileDamage; // 0x1340	
	int32_t m_nTeamNumber; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1348[0x8]; // 0x1348
public:
	float speed; // 0x1350	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1354	
	Vector m_vStartPosition; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CountdownTimer m_EnemyVision; // 0x1368	
	CountdownTimer m_MoveTime; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Gyrocopter_Homing_Rocket_Barrage : public CDOTA_Buff
{
public:
	int32_t rocket_damage; // 0x1318	
	int32_t shard_radius; // 0x131c	
	CHandle< CBaseEntity > m_hTarget; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Gyrocopter_Flak_Cannon : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Gyrocopter_Flak_Cannon : public CDOTA_Buff
{
public:
	int32_t max_attacks; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t m_iNumAttacks; // 0x1320	
	int32_t projectile_speed; // 0x1324	
	int32_t bonus_night_vision; // 0x1328	
	int32_t radius; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Gyrocopter_Flak_Cannon_Scepter : public CDOTA_Buff
{
public:
	float fire_rate; // 0x1318	
	int32_t scepter_radius; // 0x131c	
	int32_t m_iAttackRecord; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Gyrocopter_Call_Down : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x568	
	int32_t range_scepter; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Gyrocopter_Call_Down : public CDOTA_Buff
{
public:
	int32_t slow_duration; // 0x1318	
	int32_t damage; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t slow; // 0x1324	
	bool m_bDelayed; // 0x1328	
	bool m_bAttachToRocket1; // 0x1329	
private:
	[[maybe_unused]] uint8_t __pad132a[0x6]; // 0x132a
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitHeroes; // 0x1330	
	bool m_bHitInvisibleHeroes; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	ParticleIndex_t m_nMarkerIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Gyrocopter_Call_Down_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Alchemist_AcidSpray : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Alchemist_AcidSpray_Thinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t armor_allies; // 0x131c	
	int32_t radius; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Alchemist_AcidSpray : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Alchemist_UnstableConcoction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Alchemist_UnstableConcoctionThrow : public CDOTABaseAbility
{
public:
	float m_fCookTime; // 0x568	
	Vector m_vProjectileLoc; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Alchemist_UnstableConcoction : public CDOTA_Buff
{
public:
	float brew_time; // 0x1318	
	float brew_explosion; // 0x131c	
	GameTime_t m_fStartTime; // 0x1320	
	GameTime_t m_fLastAlertTime; // 0x1324	
	ParticleIndex_t m_nConcoctionFXIndex; // 0x1328	
	bool m_bHasStunned; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	int32_t damage_resistance; // 0x1330	
	int32_t move_speed; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Alchemist_GoblinsGreed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Alchemist_GoblinsGreed : public CDOTA_Buff
{
public:
	CUtlVector< GameTime_t > m_DeathList; // 0x1318	
	float damage; // 0x1330	
	float duration; // 0x1334	
	int32_t bonus_gold; // 0x1338	
	int32_t bonus_bonus_gold; // 0x133c	
	int32_t bonus_gold_cap; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Alchemist_ChemicalRage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Alchemist_ChemicalRageTransform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Alchemist_ChemicalRage : public CDOTA_Buff
{
public:
	float base_attack_time; // 0x1318	
	int32_t bonus_health; // 0x131c	
	int32_t bonus_health_regen; // 0x1320	
	float bonus_mana_regen; // 0x1324	
	int32_t bonus_movespeed; // 0x1328	
	ParticleIndex_t m_nFXAlchemistCRIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Alchemist_Scepter_Bonus_Damage : public CDOTA_Buff
{
public:
	int32_t scepter_bonus_damage; // 0x1318	
	int32_t scepter_spell_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Alchemist_Berserk_Potion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Alchemist_Berserk_Potion : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	int32_t hp_regen; // 0x131c	
	int32_t move_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Alchemist_Corrosive_Weaponry : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Alchemist_Self_Corrosive_Weaponry : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Alchemist_Corrosive_Weaponry_Debuff : public CDOTA_Buff
{
public:
	int32_t slow_per_stack; // 0x1318	
	float status_resist_per_stack; // 0x131c	
	float chemical_rage_bonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
// Is Abstract
class CDOTA_Modifier_Invoker_Instance : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Invoke : public CDOTABaseAbility
{
public:
	int32_t max_invoked_spells; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CDOTA_Modifier_Invoker_Instance* m_instances[3]; // 0x570	
	int32_t m_nCurInstanceSlot; // 0x588	
	bool m_bInvokedAbilitiesInitialized; // 0x58c	
private:
	[[maybe_unused]] uint8_t __pad058d[0x3]; // 0x58d
public:
	CHandle< CBaseEntity > m_invokedAbilities[10]; // 0x590	
	Vector m_vecCurrentColor; // 0x5b8	
	int32_t m_nQuasInstances; // 0x5c4	
	int32_t m_nExortInstances; // 0x5c8	
	int32_t m_nWexInstances; // 0x5cc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_AttributeBonus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nQuasLevel"
// MNetworkVarNames "int m_nWexLevel"
// MNetworkVarNames "int m_nExortLevel"
class CDOTA_Ability_Invoker_InvokedBase : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	int32_t m_nQuasLevel; // 0x568	
	// MNetworkEnable
	int32_t m_nWexLevel; // 0x56c	
	// MNetworkEnable
	int32_t m_nExortLevel; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_ColdSnap : public CDOTA_Ability_Invoker_InvokedBase
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Invoker_ColdSnap : public CDOTA_Buff
{
public:
	float freeze_damage; // 0x1318	
	float freeze_duration; // 0x131c	
	float freeze_cooldown; // 0x1320	
	float damage_trigger; // 0x1324	
	float spell_lifesteal; // 0x1328	
	float spell_amp; // 0x132c	
	float freeze_heal; // 0x1330	
	int32_t nQuasApplications; // 0x1334	
	int32_t nExortApplications; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CountdownTimer m_freezeCooldownTimer; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Invoker_ColdSnap_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_GhostWalk : public CDOTA_Ability_Invoker_InvokedBase
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Invoker_GhostWalk_Self : public CDOTA_Modifier_Invisible
{
public:
	int32_t self_slow; // 0x1328	
	int32_t area_of_effect; // 0x132c	
	float aura_fade_time; // 0x1330	
	float health_regen; // 0x1334	
	float mana_regen; // 0x1338	
	float disable_time; // 0x133c	
	GameTime_t m_timeLastDamage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Invoker_GhostWalk_Enemy : public CDOTA_Buff
{
public:
	int32_t enemy_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Tornado : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	int32_t vision_distance; // 0x578	
	float end_vision_duration; // 0x57c	
	float lift_duration; // 0x580	
	float base_damage; // 0x584	
	float quas_damage; // 0x588	
	float wex_damage; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Invoker_Tornado : public CDOTA_Modifier_Cyclone
{
public:
	float m_flLandDamage; // 0x1330	
	float spell_lifesteal; // 0x1334	
	float spell_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_EMP : public CDOTA_Ability_Invoker_InvokedBase
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Invoker_EMP : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1318	
	int32_t mana_burned; // 0x131c	
	float damage_per_mana; // 0x1320	
	float spell_lifesteal; // 0x1324	
	float spell_amp; // 0x1328	
	int32_t self_mana_restore_pct; // 0x132c	
	CHandle< CBaseEntity > m_hPullThinker; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Invoker_EMP_Pull_Thinker : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Invoker_EMP_Pull : public CDOTA_Buff
{
public:
	int32_t shard_drag_speed; // 0x1318	
	float aura_origin_x; // 0x131c	
	float aura_origin_y; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	Vector m_vCenter; // 0x1328	
	GameTime_t m_flLastThinkTime; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Alacrity : public CDOTA_Ability_Invoker_InvokedBase
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Invoker_Alacrity : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_ChaosMeteor : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	int32_t area_of_effect; // 0x578	
	float damage_interval; // 0x57c	
	int32_t vision_distance; // 0x580	
	float end_vision_duration; // 0x584	
	float main_damage; // 0x588	
	float burn_duration; // 0x58c	
	float burn_dps; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Invoker_ChaosMeteor_Land : public CDOTA_Buff
{
public:
	Vector m_vDir; // 0x1318	
	int32_t travel_speed; // 0x1324	
	int32_t travel_distance; // 0x1328	
	int32_t vision_distance; // 0x132c	
	float spell_amp; // 0x1330	
	float spell_lifesteal; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Invoker_ChaosMeteor_Burn : public CDOTA_Buff
{
public:
	float spell_amp; // 0x1318	
	float spell_lifesteal; // 0x131c	
	float m_flDamagePerSecond; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_SunStrike : public CDOTA_Ability_Invoker_InvokedBase
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Invoker_SunStrike_Cataclysm_Thinker : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	float spell_lifesteal; // 0x131c	
	float spell_amp; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Invoker_SunStrike : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1318	
	float damage; // 0x131c	
	int32_t vision_distance; // 0x1320	
	float vision_duration; // 0x1324	
	float spell_amp; // 0x1328	
	float spell_lifesteal; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Invoker_SunStrike_Cataclysm : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1318	
	float damage; // 0x131c	
	int32_t vision_distance; // 0x1320	
	float vision_duration; // 0x1324	
	float spell_amp; // 0x1328	
	float spell_lifesteal; // 0x132c	
	Vector m_vSoundPos; // 0x1330	
	bool m_bPlaySound; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_ForgeSpirit : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	CHandle< CBaseEntity > m_Spirits[2]; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ForgedSpirit_Stats : public CDOTA_Buff
{
public:
	int32_t level; // 0x1318	
	int32_t armor; // 0x131c	
	int32_t mana; // 0x1320	
	float attack_range; // 0x1324	
	float armor_per_attack; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ForgedSpirit_MeltingStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ForgedSpirit_MeltingStrike : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MeltingStrike_Debuff : public CDOTA_Buff
{
public:
	float armor_removed; // 0x1318	
	int32_t m_nMaxStacks; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_IceWall : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	Vector m_vStartPosition; // 0x578	
	Vector m_vEndPosition; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Invoker_IceWall_Thinker : public CDOTA_Buff
{
public:
	float damage_per_second; // 0x1318	
	int32_t num_wall_elements; // 0x131c	
	int32_t wall_element_spacing; // 0x1320	
	int32_t wall_element_radius; // 0x1324	
	float spell_amp; // 0x1328	
	float spell_lifesteal; // 0x132c	
	Vector m_vWallDir; // 0x1330	
	bool m_bGrantedGem; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Invoker_IceWall_SlowAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t slow; // 0x131c	
	float slow_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Invoker_IceWall_SlowDebuff : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_DeafeningBlast : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	float end_vision_duration; // 0x578	
	float damage; // 0x57c	
	float knockback_duration; // 0x580	
	float disarm_duration; // 0x584	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x588	
	bool m_bGrantedGem; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Invoker_DeafeningBlast_Knockback : public CDOTA_Buff
{
public:
	float disarm_duration; // 0x1318	
	Vector m_vPushDir; // 0x131c	
	GameTime_t m_flStartTime; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Invoker_DeafeningBlast_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Invoker_QuasInstance : public CDOTA_Modifier_Invoker_Instance
{
public:
	float spell_lifesteal; // 0x1318	
	int32_t health_regen_per_instance; // 0x131c	
	char* m_pSlotName; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Invoker_WexInstance : public CDOTA_Modifier_Invoker_Instance
{
public:
	float move_speed_per_instance; // 0x1318	
	float cooldown_reduction; // 0x131c	
	char* m_pSlotName; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Invoker_ExortInstance : public CDOTA_Modifier_Invoker_Instance
{
public:
	int32_t bonus_damage_per_instance; // 0x1318	
	float spell_amp; // 0x131c	
	char* m_pSlotName; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Quas : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Wex : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Invoker_Wex_Cooldown_Reduction : public CDOTA_Buff
{
public:
	int32_t cooldown_reduction; // 0x1318	
	int32_t m_nTotalCDR; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Exort : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Empty1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Empty2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Invoker_AttackVisuals : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_ColdSnap_AD : public CDOTA_Ability_Invoker_ColdSnap
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_GhostWalk_AD : public CDOTA_Ability_Invoker_GhostWalk
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Tornado_AD : public CDOTA_Ability_Invoker_Tornado
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_EMP_AD : public CDOTA_Ability_Invoker_EMP
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_Alacrity_AD : public CDOTA_Ability_Invoker_Alacrity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_SunStrike_AD : public CDOTA_Ability_Invoker_SunStrike
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_ForgeSpirit_AD : public CDOTA_Ability_Invoker_ForgeSpirit
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_ChaosMeteor_AD : public CDOTA_Ability_Invoker_ChaosMeteor
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_IceWall_AD : public CDOTA_Ability_Invoker_IceWall
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Invoker_DeafeningBlast_AD : public CDOTA_Ability_Invoker_DeafeningBlast
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Invoke_Bonuses : public CDOTA_Buff
{
public:
	float spell_amp; // 0x1318	
	float spell_lifesteal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Silencer_CurseOfTheSilent : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Silencer_CurseOfTheSilent : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	ParticleIndex_t nFxIndex; // 0x131c	
	int32_t penalty_duration; // 0x1320	
	float penalty_multiplier; // 0x1324	
	int32_t movespeed; // 0x1328	
	int32_t undispellable; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Silencer_GlaivesOfWisdom : public CDOTABaseAbility
{
public:
	int32_t m_iAttackIndex; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< sGlaiveInfoSilencer > m_GlaiveInfo; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom : public CDOTA_Buff
{
public:
	float intellect_damage_pct; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	CUtlVector< int16 > m_InFlightSilenceAttackRecords; // 0x1338	
	CDOTA_Buff* m_pAttackCounterBuff; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_AttackCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_Debuff : public CDOTA_Buff
{
public:
	int32_t int_steal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_DebuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_Buff : public CDOTA_Buff
{
public:
	int32_t int_steal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Silencer_LastWord : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Silencer_LastWord : public CDOTA_Buff
{
public:
	int32_t duration; // 0x1318	
	bool spellcast; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	int32_t damage; // 0x1320	
	float debuff_duration; // 0x1324	
	float int_multiplier; // 0x1328	
	int32_t scepter_bonus_damage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Silencer_LastWord_Disarm : public CDOTA_Modifier_Silence
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Silencer_GlobalSilence : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Silencer_GlobalSilence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Obsidian_Destroyer_ArcaneOrb : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_ArcaneOrb : public CDOTA_Buff
{
public:
	float mana_pool_damage_pct; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Obsidian_Destroyer_AstralImprisonment : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hImprisonedUnit; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_AstralImprisonment_Prison : public CDOTA_Buff
{
public:
	int32_t allied_movement_speed_pct; // 0x1318	
	bool m_bAllowMovement; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	ParticleIndex_t m_nDebuffImmuneEffect; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Obsidian_Destroyer_EssenceAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_EssenceAura : public CDOTA_Buff
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_EssenceAura_Effect : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t restore_chance; // 0x131c	
	float restore_amount; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Obsidian_Destroyer_SanityEclipse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Mana_Allergy : public CDOTA_Buff
{
public:
	int32_t percentage_damage; // 0x1318	
	int32_t percentage_heal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Sanity_Eclipse_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Sanity_Eclipse_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Obsidian_Destroyer_Equilibrium : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium : public CDOTA_Buff
{
public:
	int32_t proc_chance; // 0x1318	
	int32_t mana_restore; // 0x131c	
	float mana_capacity_steal; // 0x1320	
	float mana_capacity_duration; // 0x1324	
	float shard_mana_duration; // 0x1328	
	float scepter_barrier_threshold; // 0x132c	
	float scepter_barrier_duration; // 0x1330	
	float scepter_barrier_cooldown; // 0x1334	
	float scepter_max_mana_barrier_pct; // 0x1338	
	int32_t spell_lifesteal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Barrier : public CDOTA_Buff
{
public:
	float barrier_amt; // 0x1318	
	int32_t m_nDamageAbsorbed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_BonusMana : public CDOTA_Buff
{
public:
	int32_t shard_bonus_mana; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Debuff : public CDOTA_Buff
{
public:
	int32_t mana_steal; // 0x1318	
	float m_flCurrentMana; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Buff : public CDOTA_Buff
{
public:
	int32_t mana_steal; // 0x1318	
	float m_flCurrentMana; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Debuff_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Buff_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_ThunderClap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_ThunderClap : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	int32_t attack_speed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_DrunkenHaze : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_DrunkenHaze : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	int32_t miss_chance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_CinderBrew : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_BrewUp : public CDOTA_Buff
{
public:
	bool m_bBuffExtended; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Brewmaster_CinderBrew : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	bool m_bIgniteActive; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	float m_flDamagePerTick; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iBrawlActive"
class CDOTA_Ability_Brewmaster_DrunkenBrawler : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnBrawlActiveChanged"
	int32_t m_iBrawlActive; // 0x568	
	bool m_bUpdateIcons; // 0x56c	
private:
	[[maybe_unused]] uint8_t __pad056d[0x3]; // 0x56d
public:
	ParticleIndex_t m_nDrunkenBrawlerFX; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Brewmaster_DrunkenBrawler_Passive : public CDOTA_Buff
{
public:
	int32_t dodge_chance; // 0x1318	
	int32_t crit_chance; // 0x131c	
	int32_t crit_multiplier; // 0x1320	
	int32_t attack_speed; // 0x1324	
	float active_multiplier; // 0x1328	
	int32_t stun_chance; // 0x132c	
	float bash_cooldown; // 0x1330	
	float stun_duration; // 0x1334	
	float slow_duration; // 0x1338	
	int32_t bonus_move_speed; // 0x133c	
	int32_t bonus_status_resist; // 0x1340	
	int32_t armor; // 0x1344	
	int32_t magic_resist; // 0x1348	
	float m_flLastBash; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_Void_Brawler_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
	float active_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_DrunkenBrawler_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Brewmaster_DrunkenBrawler : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	ParticleIndex_t m_nFXIndexB; // 0x131c	
	int32_t min_movement; // 0x1320	
	int32_t max_movement; // 0x1324	
	int32_t m_iMovementBonus; // 0x1328	
	GameTime_t m_flNextUpdateTime; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Brewmaster_PrimalSplit_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_PrimalSplitDelay : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_Primal_Split_Fire_Phase : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_Fire_Phase : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_PrimalSplitDuration : public CDOTA_Buff
{
public:
	int32_t bonus_brewling_hp; // 0x1318	
	int32_t bonus_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Brewmaster_PrimalSplit : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x131c	
	CHandle< CBaseEntity > m_hTertiaryTarget; // 0x1320	
	CHandle< CBaseEntity > m_hFourthTarget; // 0x1324	
	CHandle< CBaseEntity > m_hReturnBrewling; // 0x1328	
	int32_t m_nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_HurlBoulder : public CDOTABaseAbility
{
public:
	int32_t m_iBounces; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_AstralPulse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_Void_AstralPulse : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Brewmaster_Void_Void_Strike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_SpellImmunity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Brewmaster_SpellImmunity : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_Pulverize : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_Pulverize : public CDOTA_Buff
{
public:
	int32_t bonus_building_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_DispelMagic : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_Cyclone : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Brewmaster_Cyclone : public CDOTA_Modifier_Cyclone
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_WindWalk : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Brewmaster_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_movement_speeed; // 0x1328	
	int32_t bonus_damage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_PermanentImmolation : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_PermanentImmolation_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Brewmaster_PermanentImmolation : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_Primal_Split_Cancel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Brewmaster_Fear : public CDOTA_Modifier_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Primal_Companion : public CDOTABaseAbility
{
public:
	CHandle< CDOTA_BaseNPC > m_hCurrentBrewling; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Brewmaster_Primal_Companion : public CDOTA_Buff
{
public:
	float cooldown_on_death; // 0x1318	
	float cooldown_on_take_damage; // 0x131c	
	int32_t disable_distance; // 0x1320	
	int32_t movement_slow_when_out_of_range; // 0x1324	
	bool m_bCanAttack; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	ParticleIndex_t m_nFxIndex; // 0x132c	
	int32_t cooldown_penalty_pct; // 0x1330	
	int32_t bonus_brewling_hp; // 0x1334	
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Brewmaster_Void_Astral_Pull : public CDOTABaseAbility
{
public:
	int32_t pull_speed; // 0x568	
	int32_t pull_distance; // 0x56c	
	Vector m_vTargetPos; // 0x570	
	Vector m_vEndpoint; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Brewmaster_Void_Astral_Pull_Movement : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	int32_t pull_distance; // 0x132c	
	int32_t damage; // 0x1330	
	float pull_duration; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lycan_Wolf_Bite : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Lycan_Wolf_Bite_Lifesteal : public CDOTA_Buff
{
public:
	int32_t lifesteal_percent; // 0x1318	
	int32_t lifesteal_range; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_vecTargets; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lycan_Wolf_Bite_Attack_Range : public CDOTA_Buff
{
public:
	int32_t attack_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x690
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lycan_SummonWolves : public CDOTABaseAbility
{
public:
	char szUnitName[260]; // 0x568	
	int32_t wolf_index; // 0x66c	
	float wolf_duration; // 0x670	
private:
	[[maybe_unused]] uint8_t __pad0674[0x4]; // 0x674
public:
	CUtlVector< CHandle< CBaseEntity > > m_hExistingUnits; // 0x678	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lycan_Shard : public CDOTA_Buff
{
public:
	float m_flNextSpawn; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lycan_Wolf_Uncontrollable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lycan_SummonWolves_BonusDamage : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lycan_SummonWolves_Bash : public CDOTA_Buff
{
public:
	int32_t bash_chance; // 0x1318	
	float bash_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lycan_SummonWolves_Health : public CDOTA_Buff
{
public:
	int32_t bonus_health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lycan_SummonWolves_CriticalStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Lycan_SummonWolves_CriticalStrike : public CDOTA_Buff
{
public:
	CountdownTimer m_CooldownTimer; // 0x1318	
	int32_t maim_chance; // 0x1330	
	float maim_duration; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lycan_SummonWolves_Maim : public CDOTA_Buff
{
public:
	int32_t maim_movement_speed; // 0x1318	
	int32_t maim_attack_speed; // 0x131c	
	int32_t maim_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lycan_SummonWolves_PermanentInvisibility : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lycan_SummonWolves_PermanentInvisibility : public CDOTA_Modifier_PersistentInvisibility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lycan_Howl : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lycan_Howl : public CDOTA_Buff
{
public:
	int32_t attack_damage_reduction; // 0x1318	
	int32_t total_attack_damage_reduction; // 0x131c	
	int32_t armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lycan_FeralImpulse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lycan_FeralImpulse_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lycan_FeralImpulse : public CDOTA_Buff
{
public:
	int32_t bonus_hp_regen; // 0x1318	
	int32_t bonus_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Lycan_Shapeshift : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lycan_Shapeshift_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lycan_Shapeshift_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lycan_Shapeshift : public CDOTA_Buff
{
public:
	int32_t bonus_night_vision; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	int32_t m_iOriginalAttackCapability; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Lycan_Shapeshift_Speed : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1318	
	int32_t crit_chance; // 0x131c	
	int32_t crit_multiplier; // 0x1320	
	int32_t health_bonus; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lycan_Fear : public CDOTA_Modifier_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Disruption_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shadow_Demon_Disruption : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hDisruptedUnit; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Disruption : public CDOTA_Buff
{
public:
	float m_flHealth; // 0x1318	
	float m_flDisseminate_Duration; // 0x131c	
	CHandle< CBaseEntity > m_hDisseminateAbility; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Disruption_Bonus_Damage : public CDOTA_Buff_Item
{
public:
	int32_t illusion_flat_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shadow_Demon_Soul_Catcher : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Soul_Catcher : public CDOTA_Buff
{
public:
	int32_t actual_health_lost; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Soul_Catcher_SpellAmp : public CDOTA_Buff
{
public:
	int32_t num_heroes; // 0x1318	
	int32_t bonus_spell_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Soul_Catcher_Illusion : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shadow_Demon_Shadow_Poison_Release : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shadow_Demon_Shadow_Poison : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hPoisonedUnits; // 0x568	
	bool m_bHitDisruptedUnit; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0581[0x3]; // 0x581
public:
	int32_t radius; // 0x584	
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Shadow_Poison : public CDOTA_Buff
{
public:
	float stack_damage; // 0x1318	
	float bonus_stack_damage; // 0x131c	
	int32_t max_multiply_stacks; // 0x1320	
	ParticleIndex_t m_nFXStackIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Shadow_Demon_DemonicPurge_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shadow_Demon_Demonic_Purge : public CDOTABaseAbility
{
public:
	bool m_bGrantedScepterCharges; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shadow_Demon_Demonic_Cleanse : public CDOTABaseAbility
{
public:
	bool m_bGrantedScepterCharges; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Purge_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shadow_Demon_Disseminate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Shadow_Demon_Disseminate : public CDOTA_Buff
{
public:
	int32_t damage_reflection_pct; // 0x1318	
	int32_t radius; // 0x131c	
	GameTime_t m_flLastDispersionPulseEffectTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_AttackCheck : public CDOTA_Buff
{
public:
	bool m_bCanBeResummoned; // 0x1318	
	bool m_bCanAttack; // 0x1319	
private:
	[[maybe_unused]] uint8_t __pad131a[0x2]; // 0x131a
public:
	ParticleIndex_t m_nFxIndex; // 0x131c	
	ParticleIndex_t m_nStatusFxIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hBear"
class CDOTA_Ability_LoneDruid_SpiritBear : public CDOTABaseAbility
{
public:
	bool m_bLevelChanged; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad0569[0x3]; // 0x569
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBear; // 0x56c	
	CHandle< CBaseEntity > m_hPreBear; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Spirit_Bear_Attack_Damage : public CDOTA_Buff
{
public:
	float bear_bat; // 0x1318	
	int32_t bear_magic_resistance; // 0x131c	
	int32_t bonus_bear_hp; // 0x1320	
	int32_t bear_movespeed; // 0x1324	
	int32_t bonus_bear_armor; // 0x1328	
	int32_t hp_gain_per_druid_level; // 0x132c	
	int32_t damage_gain_per_druid_level; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SpiritBear_Return : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXOrigin; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SpiritBear_Defender : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Defender_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Defender : public CDOTA_Buff
{
public:
	int32_t damage_share; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_Entangling_Claws : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_LoneDruid_Entangling_Claws : public CDOTA_Buff
{
public:
	int32_t attack_amp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SpiritBear_Entangle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Entangle : public CDOTA_Buff
{
public:
	int32_t entangle_chance; // 0x1318	
	int32_t hero_entangle_chance; // 0x131c	
	float hero_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Entangle_Effect : public CDOTA_Buff
{
public:
	int32_t m_iEntangleDamage; // 0x1318	
	float interval_rate; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SpiritBear_Demolish : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Demolish : public CDOTA_Buff
{
public:
	int32_t bonus_building_damage; // 0x1318	
	int32_t true_form_bonus_building_damage; // 0x131c	
	int32_t spell_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_Rabid : public CDOTABaseAbility
{
public:
	float rabid_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_LoneDruid_Rabid : public CDOTA_Buff
{
public:
	int32_t shard_movement_speed_pct; // 0x1318	
	int32_t shard_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SpiritLink : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritLink : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t lifesteal_percent; // 0x131c	
	int32_t armor; // 0x1320	
	int32_t armor_sharing; // 0x1324	
	int32_t active_bonus; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritLink_Active : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_TrueForm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_LoneDruid_TrueForm_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_LoneDruid_TrueForm : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t bonus_hp; // 0x131c	
	float base_attack_time; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritLink_BearFear : public CDOTA_Modifier_Fear
{
public:
	int32_t bonus_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_TrueForm_Druid : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_LoneDruid_DruidForm_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_TrueForm_BattleCry : public CDOTABaseAbility
{
public:
	float cry_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_LoneDruid_TrueForm_BattleCry : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SavageRoar : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SavageRoar_Bear : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bear_Empty1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bear_Empty2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_LoneDruid_SavageRoar : public CDOTA_Modifier_Fear
{
public:
	int32_t bonus_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_TowerKillTracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_LoneDruid_SpiritBear_Fetch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Fetch : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1318	
	int32_t drag_distance; // 0x131c	
	int32_t break_distance; // 0x1320	
	Vector vPreviousLocation; // 0x1324	
	CHandle< CDOTA_BaseNPC > m_hAnchor; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Fetch_Self : public CDOTA_Buff
{
public:
	int32_t self_slow; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	CHandle< CBaseEntity > m_hTarget; // 0x1320	
	bool m_bFetchingRune; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	Vector m_vPreviousLoc; // 0x1328	
	int32_t drag_distance; // 0x1334	
	int32_t break_distance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_LoneDruid_SpiritBear_Fetch_Damage : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1318	
	float damage; // 0x131c	
	float duration; // 0x1320	
	float tick_rate; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ChaosKnight_Chaos_Bolt : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ChaosKnight_Reality_Rift : public CDOTABaseAbility
{
public:
	float m_flPercentage; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CUtlVector< ParticleIndex_t > m_FXIndex; // 0x570	
	CHandle< CBaseEntity > m_hRiftIllusion; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ChaosKnight_Reality_Rift_Debuff : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ChaosKnight_Chaos_Strike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_ChaosKnight_Chaos_Strike : public CDOTA_Buff
{
public:
	float creep_multiplier; // 0x1318	
	float creep_lifesteal_reduction_pct; // 0x131c	
	int32_t crit_min; // 0x1320	
	int32_t crit_max; // 0x1324	
	int32_t lifesteal; // 0x1328	
	float chance; // 0x132c	
	int32_t m_nNextCrit; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< int16 > m_vCritRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ChaosKnight_Chaos_Strike_Debuff : public CDOTA_Buff
{
public:
	int32_t maim_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ChaosKnight_Phantasm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ChaosKnight_Phantasm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ChaosKnight_Phantasm_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ChaosKnight_Phantasm_Illusion_Shard : public CDOTA_Modifier_ChaosKnight_Phantasm_Illusion
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_Earthbind : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Meepo_Earthbind : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Meepo_Earthbind_ChainDuration : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_Geostrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Meepo_Self_Geostrike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Meepo_Geostrike_Debuff : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nWhichDividedWeStand"
// MNetworkVarNames "int m_nNumDividedWeStand"
// MNetworkVarNames "CHandle< CDOTA_Ability_Meepo_DividedWeStand> m_entPrimeDividedWeStand"
// MNetworkVarNames "CHandle< CDOTA_Ability_Meepo_DividedWeStand> m_entNextDividedWeStand"
class CDOTA_Ability_Meepo_DividedWeStand : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	int32_t m_nWhichDividedWeStand; // 0x568	
	// MNetworkEnable
	int32_t m_nNumDividedWeStand; // 0x56c	
	// MNetworkEnable
	CHandle< CDOTA_Ability_Meepo_DividedWeStand > m_entPrimeDividedWeStand; // 0x570	
	// MNetworkEnable
	CHandle< CDOTA_Ability_Meepo_DividedWeStand > m_entNextDividedWeStand; // 0x574	
	int32_t m_iPendingUpgrades; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Meepo_Flung : public CDOTA_Buff
{
public:
	int32_t m_nHandle; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Meepo_Fling_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Meepo_Divided_We_Stand : public CDOTA_Buff
{
public:
	float respawn; // 0x1318	
	float magic_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_Poof : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x8]; // 0x56c
public:
	int32_t radius; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Meepo_Poof_Damage_Sharing : public CDOTA_Buff
{
public:
	int32_t damage_share_percentage; // 0x1318	
	int32_t damage_share_radius; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_BondedEntities; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Meepo_Poof_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_Ransack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Meepo_Ransack : public CDOTA_Buff
{
public:
	int32_t health_steal_heroes; // 0x1318	
	int32_t health_steal_creeps; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Meepo : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Meepo_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Meepo_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Meepo_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Meepo_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Meepo_5 : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_FairShare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Meepo_Poof_Casting : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Meepo_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_MegaMeepo : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > hPreviousMeepo; // 0x568	
	CHandle< CBaseEntity > hMegameepoFrame; // 0x56c	
	CUtlVector< CHandle< CBaseEntity > > hListOfMeepos; // 0x570	
	bool m_bHasSwappedAbilities; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Meepo_MegaMeepo : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	float m_flOffset; // 0x131c	
	QAngle m_vStartAngles; // 0x1320	
	Vector m_vStartLocation; // 0x132c	
	float animation_rate; // 0x1338	
	bool m_bInterrupted; // 0x133c	
	bool m_bHasBeenDestroyed; // 0x133d	
	bool m_bIsHighestMeepo; // 0x133e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Meepo_MegaMeepo_Self : public CDOTA_Buff
{
public:
	int32_t base_strength; // 0x1318	
	int32_t base_int; // 0x131c	
	int32_t base_agi; // 0x1320	
	int32_t stats_pct; // 0x1324	
	CHandle< CBaseEntity > m_hMegameepoFrame; // 0x1328	
	bool m_bWasOutOfGame; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Meepo_MegaMeepo_Frame_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_Megameepo_Fling : public CDOTABaseAbility
{
public:
	int32_t vision_radius; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Meepo_Petrify : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Meepo_Petrify : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t hp_restore; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_EyesInTheForest : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > vTrees; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Treant_EyesInTheForest_Thinker : public CDOTA_Buff
{
public:
	float vision_aoe; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CDOTA_Tree* m_Tree; // 0x1320	
	CHandle< CBaseEntity > m_hTree; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
	bool m_bUpgradedVision; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_NaturesGrasp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Treant_NaturesGrasp_Creation_Thinker : public CDOTA_Buff
{
public:
	float creation_interval; // 0x1318	
	float vines_duration; // 0x131c	
	int32_t vine_spawn_interval; // 0x1320	
	Vector m_vInitialLoc; // 0x1324	
	Vector m_vFinalLoc; // 0x1330	
	int32_t m_iVineCount; // 0x133c	
	int32_t m_iVinesIndex; // 0x1340	
	bool m_bFoundTree; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Treant_NaturesGrasp_Latch_Thinker : public CDOTA_Buff
{
public:
	int32_t latch_range; // 0x1318	
	int32_t latch_vision; // 0x131c	
	float initial_latch_delay; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x8]; // 0x1324
public:
	bool m_bBonus; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Treant_NaturesGrasp_Damage : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	float tick_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Treant_NaturesGrasp_Damage_Bonus : public CDOTA_Modifier_Treant_NaturesGrasp_Damage
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_LifeBomb : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	CHandle< CBaseEntity > m_hRMine; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_LifeBomb_Explode : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Treant_Lifebomb_Explode : public CDOTA_Buff
{
public:
	GameTime_t flStartTime; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_NaturesGuise : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Treant_NaturesGuise : public CDOTA_Buff
{
public:
	CountdownTimer m_RevealTimer; // 0x1318	
	CountdownTimer m_InvisAttackTimer; // 0x1330	
	CountdownTimer m_CooldownTimer; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Treant_NaturesGuise_Tree_Walking : public CDOTA_Buff
{
public:
	int32_t movement_bonus; // 0x1318	
	int32_t regen_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Treant_NaturesGuise_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Treant_NaturesGuise_NearTreeDisplay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Treant_NaturesGuise_Root : public CDOTA_Buff
{
public:
	float m_flEntangleDamage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_LeechSeed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Treant_LeechSeed : public CDOTA_Buff
{
public:
	float damage_interval; // 0x1318	
	int32_t leech_damage; // 0x131c	
	int32_t movement_slow; // 0x1320	
	int32_t radius; // 0x1324	
	int32_t projectile_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Treant_LeechSeed_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_LivingArmor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Treant_LivingArmor : public CDOTA_Buff
{
public:
	int32_t heal_per_second; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Treant_Overgrowth : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Treant_Overgrowth : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	int32_t mute; // 0x131c	
	bool bPurgable; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Arcana : public CDOTA_Buff
{
public:
	int32_t m_nLastMulticastCount; // 0x1318	
	int32_t m_nMulticastStreakCount; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ogre_Magi_Multicast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ogre_Magi_Fireblast : public CDOTABaseAbility
{
public:
	int32_t m_nMostRecentMulticastCount; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ogre_Magi_Unrefined_Fireblast : public CDOTA_Ability_Ogre_Magi_Fireblast
{
public:
	int32_t m_nMostRecentMulticastCount; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Fireblast_Attack_Proc : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Fireblast_Multicast : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1318	
	float multicast_delay; // 0x131c	
	int32_t m_nMultiCastCount; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ogre_Magi_Ignite : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	int32_t m_nMostRecentMulticastCount; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Ignite : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1318	
	int32_t burn_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Ignite_Multicast : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1318	
	float multicast_delay; // 0x131c	
	int32_t m_nMultiCastCount; // 0x1320	
	int32_t ignite_multicast_aoe; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ogre_Magi_Bloodlust : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Bloodlust_Autocast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Bloodlust : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_movement_speed; // 0x131c	
	int32_t self_bonus; // 0x1320	
	float modelscale; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Item_Multicast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ogre_Magi_Smash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ogre_Magi_Smash_Buff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t attacks; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Ogre_Magi_DumbLuck : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ogre_Magi_DumbLuck : public CDOTA_Buff
{
public:
	float mana_per_str; // 0x1318	
	float mana_regen_per_str; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathstrike : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float health_threshold_pct; // 0x131c	
	float duration; // 0x1320	
	CHandle< CDOTABaseAbility > m_hTombstoneSourceAbility; // 0x1324	
	CHandle< CBaseEntity > m_hChaseUnit; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Undying_Decay : public CDOTABaseAbility
{
public:
	int32_t decay_damage; // 0x568	
	int32_t radius; // 0x56c	
	float decay_duration; // 0x570	
	int32_t str_steal; // 0x574	
	float creep_damage_multiplier; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Undying_Decay_Shard : public CDOTA_Buff
{
public:
	float shard_buff_duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< GameTime_t > m_vecStackExpirationTimes; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_Decay_Debuff : public CDOTA_Buff
{
public:
	int32_t str_steal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Undying_Decay_DebuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Undying_Decay_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_Decay_Buff : public CDOTA_Buff
{
public:
	int32_t str_steal; // 0x1318	
	int32_t str_scale_up; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Undying_SoulRip : public CDOTABaseAbility
{
public:
	int32_t damage_per_unit; // 0x568	
	int32_t radius; // 0x56c	
	int32_t max_units; // 0x570	
	int32_t tombstone_heal; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathstrike_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	float m_flDecrementTime; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathstrike_Slow_Counter : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Undying_Tombstone_Zombie_DeathStrike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathlust : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Modifier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Bunker : public CDOTA_Buff
{
public:
	float bunker_heal_pct; // 0x1318	
	float tombstone_grab_radius; // 0x131c	
	float tombstone_stun_penalty; // 0x1320	
	CHandle< CBaseEntity > m_hLoadedUnit; // 0x1324	
	ParticleIndex_t m_nBunkerEnterFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Undying_Tombstone : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vZombies; // 0x568	
	CHandle< CBaseEntity > hTombstone; // 0x580	
	int32_t radius; // 0x584	
	float duration; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Undying_TombstoneUnitGrab : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Undying_TombstoneGrab : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTombstones; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float zombie_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_HP : public CDOTA_Buff
{
public:
	int32_t tombstone_health; // 0x1318	
	int32_t zombie_damage_interval; // 0x131c	
	int32_t m_nDamageCounter; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Bunker_Cooldown : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Bunker_Friendly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Undying_FleshGolem : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_FleshGolem : public CDOTA_Buff
{
public:
	int32_t str_percentage; // 0x1318	
	int32_t movement_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Undying_FleshGolem_Slow : public CDOTA_Buff
{
public:
	int32_t damage_amp; // 0x1318	
	int32_t slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Undying_FleshGolem_PlagueAura : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t damage; // 0x131c	
	float tick_rate; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Undying_Tombstone_Death_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Undying_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Vector m_vStartLocation"
class CDOTA_Ability_Rubick_Telekinesis : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	Vector m_vStartLocation; // 0x568	
	Vector m_vLandLocation; // 0x574	
	GameTime_t m_flStartTime; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CDOTA_BaseNPC* m_pTarget; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Rubick_Telekinesis : public CDOTA_Buff
{
public:
	GameTime_t m_fStartTime; // 0x1318	
	GameTime_t m_fEndTime; // 0x131c	
	float m_fTargetHeight; // 0x1320	
	float m_fCurHeight; // 0x1324	
	Vector m_vStartLoc; // 0x1328	
	Vector m_vCurLoc; // 0x1334	
	int32_t max_land_distance; // 0x1340	
	float fall_duration; // 0x1344	
	bool m_bOverrideDuration; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	float m_flOverrideDuration; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_TelekinesisLand : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nLandPreviewFX; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_TelekinesisLand_Self : public CDOTA_Ability_Rubick_TelekinesisLand
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_FadeBolt : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Rubick_FadeBolt : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage; // 0x131c	
	int32_t jump_damage_reduction_pct; // 0x1320	
	float jump_delay; // 0x1324	
	int32_t m_iCurJumpCount; // 0x1328	
	Vector m_vCurTargetLoc; // 0x132c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rubick_Telekinesis_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rubick_FadeBoltDebuff : public CDOTA_Buff
{
public:
	int32_t attack_damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Rubick_FadeBolt_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rubick_FadeBoltBuff : public CDOTA_Buff
{
public:
	int32_t attack_damage_bonus; // 0x1318	
	int32_t attack_damage_reduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_NullField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rubick_NullField : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rubick_NullField_Effect : public CDOTA_Buff
{
public:
	int32_t magic_damage_reduction_pct; // 0x1318	
	bool m_bWasHidden; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x680
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "char m_ActivityModifier"
// MNetworkVarNames "float m_fStolenCastPoint"
class CDOTA_Ability_Rubick_SpellSteal : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	char m_ActivityModifier[256]; // 0x568	
	// MNetworkEnable
	float m_fStolenCastPoint; // 0x668	
	CHandle< CBaseEntity > m_hStealTarget; // 0x66c	
	CHandle< CDOTABaseAbility > m_hStealAbility; // 0x670	
	ParticleIndex_t m_nFXIndex; // 0x674	
	int32_t m_hProjectile; // 0x678	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Rubick_SpellSteal : public CDOTA_Buff
{
public:
	CUtlString m_strActivityModifier; // 0x1318	
	CUtlVector< CHandle< CBaseEntity > > m_vecAbilities; // 0x1320	
	bool m_bUsesTwoSlots; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t stolen_debuff_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_Empty1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_Empty2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_Hidden1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_Hidden2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_Hidden3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Rubick_Arcane_Supremacy : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Rubick_Arcane_Supremacy : public CDOTA_Buff
{
public:
	int32_t cast_range; // 0x1318	
	int32_t spell_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Rubick_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Disruptor_Thunder_Strike : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Disruptor_Thunder_Strike : public CDOTA_Buff
{
public:
	float strike_interval; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t strike_damage; // 0x1320	
	int32_t strike_damage_bonus; // 0x1324	
	GameTime_t m_flGroundDelayEndTime; // 0x1328	
	bool is_thinker; // 0x132c	
	bool m_bTransferred; // 0x132d	
private:
	[[maybe_unused]] uint8_t __pad132e[0x2]; // 0x132e
public:
	int32_t m_nThinkerViewer; // 0x1330	
	int32_t m_nStrikeCount; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Disruptor_Thunder_Strike_Slow : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Disruptor_Thunder_Strike_Speed : public CDOTA_Buff
{
public:
	int32_t shard_movement_speed_bonus; // 0x1318	
	int32_t shard_attack_speed_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Disruptor_Glimpse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t m_nNPCSpawnedID; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f0
// Has VTable
class CDOTA_Modifier_Disruptor_Glimpse : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[18]; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Disruptor_Glimpse_Thinker : public CDOTA_Buff
{
public:
	Vector m_vStartLoc; // 0x1318	
	CHandle< CBaseEntity > m_hEntity; // 0x1324	
	float m_flDistance; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Disruptor_KineticField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Disruptor_KineticFieldThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float formation_time; // 0x131c	
	bool m_bActive; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Disruptor_KineticField : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	Vector m_vOriginLoc; // 0x131c	
	bool m_bTruesight; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	float damage_per_second; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Disruptor_StaticStorm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Disruptor_StaticStormThinker : public CDOTA_Buff
{
public:
	int32_t m_nCurrentPulse; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t damage_max; // 0x1320	
	int32_t pulses; // 0x1324	
	float duration; // 0x1328	
	bool m_bHasGrantedThreeHeroKillEater; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Disruptor_StaticStorm : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
	int32_t movement_speed_reduction; // 0x131c	
	int32_t attack_speed_reduction; // 0x1320	
	bool m_bHasScepter; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Disruptor_StaticStormMute : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nyx_Assassin_Impale : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
	int32_t width; // 0x580	
	float duration; // 0x584	
	int32_t length; // 0x588	
	int32_t speed; // 0x58c	
	Vector vOriginalCast; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_Impale : public CDOTA_Buff
{
public:
	int32_t impale_damage; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	bool m_bDamageApplied; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nyx_Assassin_ManaBurn : public CDOTABaseAbility
{
public:
	int32_t aoe; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nyx_Assassin_Burrow : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nSpellStartFXIndex; // 0x568	
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_Burrow : public CDOTA_Modifier_Invisible
{
public:
	float health_regen_rate; // 0x1328	
	float mana_regen_rate; // 0x132c	
	int32_t damage_reduction; // 0x1330	
	Vector m_vecInitialPos; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nyx_Assassin_Unburrow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nyx_Assassin_SpikedCarapace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_SpikedCarapace : public CDOTA_Buff
{
public:
	float stun_duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hProcessedEnemies; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nyx_Assassin_Vendetta : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_Vendetta : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_damage; // 0x1328	
	int32_t movement_speed; // 0x132c	
	int32_t shard_movement_speed_bonus; // 0x1330	
	int32_t mana_removal_pct; // 0x1334	
	bool m_bFreePathing; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t attack_animation_bonus; // 0x133c	
	int32_t attack_range_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_Vendetta_Armor_Reduction : public CDOTA_Buff
{
public:
	int32_t shard_magic_resist_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_Vendetta_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_Jolt_Damage_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Nyx_Assassin_Jolt : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t aoe; // 0x578	
	int32_t damage; // 0x57c	
	int32_t m_nNPCSpawnedID; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nyx_Assassin_Jolt_Debuff : public CDOTA_Buff
{
public:
	int32_t resist_debuff; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NagaSiren_MirrorImage : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hIllusions; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NagaSiren_MirrorImage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NagaSiren_Ensnare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NagaSiren_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NagaSiren_RipTide : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NagaSiren_RipTide_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NagaSiren_RipTideCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NagaSiren_RipTide : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NagaSiren_RipTide_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NagaSiren_Crit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NagaSiren_Crit_Passive : public CDOTA_Buff
{
public:
	int32_t chance; // 0x1318	
	int32_t crit; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NagaSiren_SongOfTheSiren : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_NagaSiren_SongOfTheSiren_Cancel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t m_nAffectedEnemies; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_vhAffectedHeroes; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren : public CDOTA_Buff
{
public:
	float animation_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren_IgnoreMe : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren_Healing_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t m_nAffectedAllies; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_vhAffectedHeroes; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class NagaSiren_SongOfTheSiren_Healing : public CDOTA_Buff
{
public:
	int32_t heal_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Naga_Siren_Reel_In : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > affectedEntities; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Naga_Siren_Reel_In : public CDOTA_Buff
{
public:
	float pull_strength; // 0x1318	
	int32_t min_pull_distance; // 0x131c	
	GameTime_t m_flLastThinkTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_Illuminate : public CDOTABaseAbility
{
public:
	GameTime_t m_fStartTime; // 0x568	
	int32_t m_iProjectile; // 0x56c	
	ParticleIndex_t m_nFXIndex; // 0x570	
	ParticleIndex_t m_nFXIndexB; // 0x574	
	Vector m_vPos; // 0x578	
	int32_t total_damage; // 0x584	
	bool m_bStarted; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_Illuminate : public CDOTA_Buff
{
public:
	int32_t range; // 0x1318	
	int32_t total_damage; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t channel_vision_radius; // 0x1324	
	float channel_vision_interval; // 0x1328	
	float channel_vision_duration; // 0x132c	
	int32_t channel_vision_step; // 0x1330	
	GameTime_t m_flLastChantTime; // 0x1334	
	Vector m_vNextVisionLocation; // 0x1338	
	Vector m_vCastDirection; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_IlluminateEnd : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_SpiritFormIlluminate : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
	float max_channel_time; // 0x56c	
	int32_t total_damage; // 0x570	
	float m_fPower; // 0x574	
	GameTime_t m_fStartTime; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_SpiritForm_Illuminate : public CDOTA_Buff
{
public:
	int32_t range; // 0x1318	
	int32_t vision_radius; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t total_damage; // 0x1324	
	float max_channel_time; // 0x1328	
	float speed; // 0x132c	
	float vision_duration; // 0x1330	
	int32_t channel_vision_radius; // 0x1334	
	float channel_vision_interval; // 0x1338	
	float channel_vision_duration; // 0x133c	
	int32_t channel_vision_step; // 0x1340	
	Vector m_vCastLoc; // 0x1344	
	Vector m_vTargetLoc; // 0x1350	
	GameTime_t m_fStartTime; // 0x135c	
	QAngle m_qCastAngle; // 0x1360	
	int32_t m_iProjectile; // 0x136c	
	ParticleIndex_t m_nFXIndex; // 0x1370	
	ParticleIndex_t m_nFXIndexB; // 0x1374	
	Vector m_vNextVisionLocation; // 0x1378	
	Vector m_vCastDirection; // 0x1384	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_SpiritFormIlluminateEnd : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_ManaLeak : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_ManaLeak : public CDOTA_Buff
{
public:
	float mana_leak_pct; // 0x1318	
	Vector vLastPos; // 0x131c	
	bool bResetPosition; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	float m_fAccumulatedManaLeak; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_Radiant_Bind : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_Radiant_Bind : public CDOTA_Buff
{
public:
	float slow; // 0x1318	
	int32_t magic_resistance; // 0x131c	
	float stun_duration; // 0x1320	
	Vector vLastPos; // 0x1324	
	bool bResetPosition; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	float m_fAccumulatedDistance; // 0x1334	
	ParticleIndex_t m_nFXIndex; // 0x1338	
	ParticleIndex_t m_nStatusFXIndex; // 0x133c	
	bool m_bStunned; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_Will_O_Wisp_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float wisp_damage; // 0x131c	
	float off_duration; // 0x1320	
	float off_duration_initial; // 0x1324	
	float on_duration; // 0x1328	
	int32_t hit_count; // 0x132c	
	int32_t m_iAttackCount; // 0x1330	
	GameTime_t m_flNextTimeOn; // 0x1334	
	bool m_bActive; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nFXIndex; // 0x133c	
	ParticleIndex_t m_nFXIndexB; // 0x1340	
	GameTime_t m_flNextTime; // 0x1344	
	CUtlVector< CHandle< CBaseEntity > > m_vecDamagedEntities; // 0x1348	
	float m_flCorrectionTime; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_Will_O_Wisp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_Will_O_Wisp : public CDOTA_Buff
{
public:
	int32_t fixed_movement_speed; // 0x1318	
	Vector m_vSource; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_ChakraMagic : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_SpiritForm : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndexA; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t cast_range; // 0x1320	
	bool m_bDidSwapSpiritForm; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_SpiritForm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_Recall : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_Recall : public CDOTA_Buff
{
public:
	bool m_bWasAttacked; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_KeeperOfTheLight_BlindingLight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_BlindingLight_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_KeeperOfTheLight_BlindingLight : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_BlindingLight_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_10 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_11 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_12 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_13 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_14 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Wisp_Tentacles : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	CHandle< CBaseEntity > hCurrentEntity; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hTarget"
class CDOTA_Ability_Wisp_Tether : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x578	
	Vector m_vProjectileLocation; // 0x57c	
	bool m_bProjectileActive; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	int32_t latch_distance; // 0x58c	
	int32_t m_iProjectileIndex; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Wisp_Tether_Spell_Lifesteal : public CDOTA_Buff
{
public:
	float shard_bonus_spell_lifesteal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Wisp_Tether_Break : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Wisp_Tether : public CDOTA_Buff
{
public:
	bool m_bInManaGained; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > hStunnedEntities; // 0x1320	
	float stun_duration; // 0x1338	
	int32_t movespeed; // 0x133c	
	int32_t self_bonus; // 0x1340	
	bool m_bIsInRange; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	int32_t radius; // 0x1348	
	int32_t latch_distance; // 0x134c	
	float m_flHealthHealed; // 0x1350	
	float m_flManaHealed; // 0x1354	
	float tether_heal_amp; // 0x1358	
	GameTime_t m_flHealMessageTime; // 0x135c	
	GameTime_t m_flManaMessageTime; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Wisp_Tether_Stun_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Wisp_Tether_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	float tick_rate; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Wisp_Tether_Haste : public CDOTA_Buff
{
public:
	float movespeed; // 0x1318	
	float shard_bonus_spell_lifesteal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Wisp_Tether_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Wisp_Spirits_In : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Wisp_Spirit_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Wisp_Spirits_Out : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13e8
// Has VTable
class CDOTA_Modifier_Wisp_Spirits : public CDOTA_Buff
{
public:
	bool m_bSpiritsExplode; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t creep_damage; // 0x131c	
	int32_t hero_damage; // 0x1320	
	int32_t hit_radius; // 0x1324	
	int32_t hero_hit_radius; // 0x1328	
	int32_t explode_radius; // 0x132c	
	int32_t min_range; // 0x1330	
	int32_t max_range; // 0x1334	
	int32_t default_radius; // 0x1338	
	int32_t spirit_amount; // 0x133c	
	float m_flRotation; // 0x1340	
	float m_flSpiritRadius; // 0x1344	
	int32_t spirit_movement_rate; // 0x1348	
	GameTime_t m_flNextSpawn; // 0x134c	
	CUtlString m_strSpiritsOutSwapAbility; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Wisp_Spirits_Slow : public CDOTA_Buff
{
public:
	int32_t scepter_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Wisp_Overcharge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Wisp_Overcharge : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_spell_amp; // 0x131c	
	int32_t shard_bonus_slow_resistance; // 0x1320	
	float hp_regen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Wisp_Relocate : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexEndTeam; // 0x568	
	ParticleIndex_t m_nFXIndexChannel; // 0x56c	
	float cast_delay; // 0x570	
	float return_time; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Wisp_Relocate_Thinker : public CDOTA_Buff
{
public:
	float cast_delay; // 0x1318	
	ParticleIndex_t m_nFXIndexEndTeam; // 0x131c	
	ParticleIndex_t m_nFXIndexChannel; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Wisp_Relocate_Return : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	Vector m_vecReturnPosition; // 0x131c	
	float return_time; // 0x1328	
	ParticleIndex_t m_nFXTimeRemaining; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Visage_GraveChill : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Visage_GraveChill_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1318	
	int32_t attackspeed_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Visage_GraveChill_Buff : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1318	
	int32_t attackspeed_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Visage_SoulAssumption : public CDOTABaseAbility
{
public:
	float m_fDamage; // 0x568	
	ParticleIndex_t m_nFXIndex; // 0x56c	
	int32_t m_iForcedStacks; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Visage_SoulAssumption : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t stack_limit; // 0x131c	
	int32_t damage_limit; // 0x1320	
	float stack_duration; // 0x1324	
	float damage_min; // 0x1328	
	float damage_max; // 0x132c	
	ParticleIndex_t m_nFxIndexA; // 0x1330	
	ParticleIndex_t m_nFxIndexB; // 0x1334	
	int32_t iCur_stack; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x1c]; // 0x133c
public:
	float m_fTotalDamage; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Visage_GravekeepersCloak : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Visage_GravekeepersCloak_Stack : public CDOTA_Buff
{
public:
	bool m_bIsRecovering; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t m_nFXIndex[4]; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Visage_GravekeepersCloak : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	int32_t max_layers; // 0x131c	
	float minimum_damage; // 0x1320	
	int32_t recovery_time; // 0x1324	
	int32_t radius; // 0x1328	
	int32_t max_damage_reduction; // 0x132c	
	ParticleIndex_t m_nFXIndex[4]; // 0x1330	
	ParticleIndex_t m_nFXIndexB; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CDOTA_Modifier_Visage_GravekeepersCloak_Stack* > vStacks; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Visage_GravekeepersCloak_Secondary : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x688
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Visage_SummonFamiliars : public CDOTABaseAbility
{
public:
	char szUnitName[260]; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad066c[0x4]; // 0x66c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hExistingUnits; // 0x670	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Visage_SummonFamiliars_Talents : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Visage_Amor_Reduction : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Visage_SummonFamiliars_DamageCharge : public CDOTA_Buff
{
public:
	int32_t familiar_speed; // 0x1318	
	int32_t m_nFXIndex; // 0x131c	
	int32_t m_nFXIndexB; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CountdownTimer m_ctTimer; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Visage_SummonFamiliars_StoneForm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Visage_Stone_Form_Self_Cast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Visage_Stone_Form_Self_Cast_Cooldown_Manager : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Visage_SummonFamiliars_StoneForm_Thinker : public CDOTA_Buff
{
public:
	int32_t stun_radius; // 0x1318	
	int32_t stun_damage; // 0x131c	
	float stun_delay; // 0x1320	
	float stun_duration; // 0x1324	
	float stone_duration; // 0x1328	
	int32_t m_iIntervalCount; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Visage_SummonFamiliars_StoneForm_Buff : public CDOTA_Buff
{
public:
	float hp_regen; // 0x1318	
	int32_t stun_radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Visage_Scepter : public CDOTA_Buff
{
public:
	GameTime_t m_flReadyTime; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Visage_SummonFamiliars_StoneForm_Timer : public CDOTA_Buff
{
public:
	float stone_duration; // 0x1318	
	GameTime_t m_fStartTime; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Visage_Silent_As_The_Grave : public CDOTABaseAbility
{
public:
	float invis_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Visage_Silent_As_The_Grave : public CDOTA_Modifier_Invisible
{
public:
	bool m_bHasMadeAttack; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Visage_Silent_As_The_Grave_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Slark_EssenceShift : public CDOTA_Modifier_Stacking_Base
{
public:
	int32_t agi_gain; // 0x1338	
	float duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slark_DarkPact : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Slark_DarkPact : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Slark_DarkPact_Pulses : public CDOTA_Buff
{
public:
	int32_t m_iPulseCount; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t total_damage; // 0x1320	
	int32_t total_pulses; // 0x1324	
	int32_t self_damage_pct; // 0x1328	
	float pulse_interval; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Slark_Pounce_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slark_Pounce : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Slark_Pounce : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
	bool m_bFoundUnit; // 0x1341	
private:
	[[maybe_unused]] uint8_t __pad1342[0x2]; // 0x1342
public:
	int32_t pounce_distance; // 0x1344	
	int32_t pounce_distance_scepter; // 0x1348	
	float pounce_speed; // 0x134c	
	float pounce_acceleration; // 0x1350	
	int32_t pounce_radius; // 0x1354	
	int32_t pounce_damage; // 0x1358	
	float leash_duration; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Slark_Pounce_Leash : public CDOTA_Buff
{
public:
	int32_t leash_radius; // 0x1318	
	Vector vLeashLocation; // 0x131c	
	bool m_bEscaped; // 0x1328	
	bool m_bFishBait; // 0x1329	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slark_EssenceShift : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Slark_EssenceShift_DebuffCounter : public CDOTA_Modifier_Stacking_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Slark_EssenceShift_Debuff : public CDOTA_Modifier_Stacking_Multiple_Buff_Base
{
public:
	int32_t stat_loss; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slark_EssenceShift_Buff : public CDOTA_Modifier_Stacking_Multiple_Buff_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Slark_EssenceShift_Permanent_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Slark_EssenceShift_Permanent_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slark_ShadowDance : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slark_ShadowDance_Aura : public CDOTA_Buff
{
public:
	int32_t scepter_aoe; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Slark_ShadowDance_Passive : public CDOTA_Buff
{
public:
	float activation_delay; // 0x1318	
	float neutral_disable; // 0x131c	
	bool m_bPendingRefresh; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	GameTime_t m_fPendingStateChangeTime; // 0x1324	
	CountdownTimer m_NeutralHitTimer; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slark_ShadowDance_PassiveRegen : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	float bonus_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Slark_ShadowDance : public CDOTA_Modifier_Invisible
{
public:
	CHandle< CBaseEntity > m_hVisibleEntity; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slark_ShadowDance_Visual : public CDOTA_Buff
{
public:
	bool m_bScepter; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slark_Depth_Shroud : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slark_Depth_Shroud_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	CHandle< CBaseEntity > m_hVisibleEntity; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Slark_Depth_Shroud : public CDOTA_Modifier_Invisible
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1328	
	int32_t bonus_movement_speed; // 0x132c	
	float bonus_regen; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Slark_Fish_Bait : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slark_Fish_Bait_Pre : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Slark_Fish_Bait_Post : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Medusa_SplitShot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Medusa_SplitShot : public CDOTA_Buff
{
public:
	int32_t damage_modifier; // 0x1318	
	int32_t range; // 0x131c	
	int32_t arrow_count; // 0x1320	
	int32_t projectile_speed; // 0x1324	
	ParticleIndex_t m_nSplitShotBowFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x670
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Medusa_MysticSnake : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	int32_t snake_jumps; // 0x56c	
	int32_t snake_damage; // 0x570	
	int32_t snake_damage_pct; // 0x574	
	int32_t snake_mana_steal; // 0x578	
	int32_t snake_scale; // 0x57c	
	int32_t snake_speed_scale; // 0x580	
	int32_t initial_speed; // 0x584	
	int32_t return_speed; // 0x588	
	float jump_delay; // 0x58c	
	float slow_duration; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Medusa_Mystic_Snake_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	int32_t turn_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Medusa_ManaShield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Medusa_ManaShield : public CDOTA_Buff
{
public:
	int32_t bonus_mana; // 0x1318	
	float absorption_pct; // 0x131c	
	float damage_per_mana; // 0x1320	
	float illusion_damage_per_mana; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Medusa_StoneGaze : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Medusa_StoneGaze_Tracker : public CDOTA_Buff
{
public:
	int32_t m_nNumStoned; // 0x1318	
	bool m_bAnyInvisible; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Medusa_StoneGaze : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float vision_cone; // 0x131c	
	float duration; // 0x1320	
	int32_t speed_boost; // 0x1324	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Medusa_StoneGaze_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Medusa_StoneGaze_Facing : public CDOTA_Buff
{
public:
	float face_duration; // 0x1318	
	float stone_duration; // 0x131c	
	float duration; // 0x1320	
	float vision_cone; // 0x1324	
	float m_flAccumulatedTime; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CountdownTimer ctFacing; // 0x1330	
	bool m_bAlreadyStoned; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	ParticleIndex_t m_nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Medusa_StoneGaze_Stone : public CDOTA_Buff
{
public:
	int32_t bonus_physical_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Medusa_Cold_Blooded : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Medusa_Cold_Blooded : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Troll_Warlord_Rampage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Troll_Warlord_Rampage : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	int32_t status_resistance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TrollWarlord_BerserkersRage : public CDOTABaseAbility
{
public:
	int32_t m_iOriginalAttackCapabilities; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_TrollWarlord_BerserkersRage : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed; // 0x1318	
	int32_t bonus_range; // 0x131c	
	int32_t bonus_hp; // 0x1320	
	int32_t bonus_armor; // 0x1324	
	int32_t ensnare_chance; // 0x1328	
	float ensnare_duration; // 0x132c	
	float base_attack_time; // 0x1330	
	int32_t m_iOriginalAttackCapabilities; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TrollWarlord_BerserkersRage_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_TrollWarlord_BerserkersRage_Maim : public CDOTA_Buff
{
public:
	int32_t maim_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TrollWarlord_WhirlingAxes_Ranged : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x568	
	int32_t m_iArrowProjectile; // 0x574	
	int32_t axe_width; // 0x578	
	float axe_speed; // 0x57c	
	float axe_range; // 0x580	
	int32_t axe_spread; // 0x584	
	int32_t axe_count; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_TrollWarlord_WhirlingAxes_Slow : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TrollWarlord_Whirling_Axes_Melee : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAxes; // 0x568	
	int32_t m_nAxeIdx; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_TrollWarlord_Whirling_Axes_Melee : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t hit_radius; // 0x131c	
	int32_t axe_movement_speed; // 0x1320	
	float whirl_duration; // 0x1324	
	float max_range; // 0x1328	
	float blind_duration; // 0x132c	
	float m_flRotation; // 0x1330	
	float m_flAxeRadius; // 0x1334	
	GameTime_t m_flDieTime; // 0x1338	
	float m_bPiercesMagicImmunity; // 0x133c	
	int32_t m_nSwapIndex; // 0x1340	
	bool m_bReturning; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	ParticleIndex_t m_nAxeFXIndex[2]; // 0x1348	
	int32_t m_nHeroesHitForRelic; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< CHandle< CBaseEntity > > hitEntities; // 0x1358	
	CUtlVector< CHandle< CBaseEntity > > m_hAxes; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TrollWarlord_Axe_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_TrollWarlord_WhirlingAxes_Blind : public CDOTA_Buff
{
public:
	int32_t blind_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TrollWarlord_Fervor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_TrollWarlord_Fervor : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	int32_t max_stacks; // 0x131c	
	int32_t extra_attack_chance_per_stack; // 0x1320	
	int32_t base_chance; // 0x1324	
	CHandle< CBaseEntity > m_hUnit; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_TrollWarlord_BattleTrance : public CDOTABaseAbility
{
public:
	float trance_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_TrollWarlord_BattleTrance : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t attack_speed; // 0x131c	
	int32_t lifesteal; // 0x1320	
	CHandle< CBaseEntity > m_hTarget; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TrollWarlord_BattleTrance_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_TrollWarlord_BattleTrance_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Centaur_HoofStomp : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_HoofStomp_Windup : public CDOTA_Buff
{
public:
	bool bInterrupted; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Centaur_DoubleEdge : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_DoubleEdge_Slow : public CDOTA_Buff
{
public:
	int32_t shard_movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_DoubleEdge_Buff : public CDOTA_Buff
{
public:
	int32_t shard_str_pct; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Centaur_Return : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_Return_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_Return : public CDOTA_Buff
{
public:
	int32_t return_damage; // 0x1318	
	int32_t return_damage_str; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Centaur_Return_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_Return_Bonus_Damage : public CDOTA_Buff
{
public:
	float damage_gain_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Centaur_Stampede : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	int32_t base_damage; // 0x56c	
	float strength_damage; // 0x570	
	float slow_duration; // 0x574	
	float scepter_bonus_duration; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x580	
	int32_t m_nHeroesHit; // 0x598	
	bool m_bHitInvisibleHero; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_Stampede_Slow : public CDOTA_Buff
{
public:
	int32_t cast_time_increase; // 0x1318	
	int32_t slow_movement_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Centaur_Stampede : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage_reduction; // 0x131c	
	int32_t has_flying_movement; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Centaur_Work_Horse : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hCart; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Centaur_Cart : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hUnit; // 0x1318	
	bool m_bWasMoving; // 0x131c	
	bool m_bSpawnDone; // 0x131d	
private:
	[[maybe_unused]] uint8_t __pad131e[0x2]; // 0x131e
public:
	Vector m_vecOldForward; // 0x1320	
	int32_t break_distance; // 0x132c	
	Vector m_vecPreviousLocation; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Centaur_Mount : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Centaur_Hitched_Into_Cart : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Centaur_Mount_Toss : public CDOTA_Buff
{
public:
	float air_duration; // 0x1318	
	int32_t air_height; // 0x131c	
	int32_t travel_distance; // 0x1320	
	CHandle< CBaseEntity > m_hTarget; // 0x1324	
	float m_flPredictedTotalTime; // 0x1328	
	Vector m_vStartPosition; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bHorizontalMotionInterrupted; // 0x1340	
	bool m_bDamageApplied; // 0x1341	
	bool m_bTargetTeleported; // 0x1342	
private:
	[[maybe_unused]] uint8_t __pad1343[0x1]; // 0x1343
public:
	Vector m_vHorizontalVelocity; // 0x1344	
	Vector m_vLastKnownTargetPosition; // 0x1350	
	float m_flInitialVelocityZ; // 0x135c	
	bool m_bDone; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Centaur_Mounted : public CDOTA_Buff
{
public:
	int32_t melee_attack_range; // 0x1318	
	CHandle< CBaseEntity > m_hCart; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Centaur_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Centaur_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Centaur_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Centaur_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Centaur_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Centaur_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Centaur_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Magnataur_Horn_Toss : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Magnataur_Horn_Toss : public CDOTA_Buff
{
public:
	float air_duration; // 0x1318	
	int32_t air_height; // 0x131c	
	int32_t travel_distance; // 0x1320	
	Vector m_vDestination; // 0x1324	
	float m_flStartZ; // 0x1330	
	float m_flCurTime; // 0x1334	
	float m_flJumpDuration; // 0x1338	
	float m_flJumpHeight; // 0x133c	
	Vector m_vTargetHorizontalDirection; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Magnataur_Horn_Toss_Slow : public CDOTA_Buff
{
public:
	int32_t horn_toss_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Magnataur_Shockwave : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0xc]; // 0x56c
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitListReturning; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Magnataur_Shockwave_Erupt : public CDOTA_Buff
{
public:
	int32_t scepter_width; // 0x1318	
	float scepter_duration; // 0x131c	
	bool play_particle; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	Vector m_vStart; // 0x1324	
	Vector m_vEnd; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Magnataur_Shockwave : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Magnataur_Shockwave_Eruption_Slow : public CDOTA_Buff
{
public:
	int32_t scepter_slow_pct; // 0x1318	
	int32_t scepter_armor_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Magnataur_Shockwave_Pull : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float pull_duration; // 0x132c	
	float effective_distance; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Magnataur_Empower : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Magnataur_Empower : public CDOTA_Buff
{
public:
	int32_t bonus_damage_pct; // 0x1318	
	float cleave_damage_pct; // 0x131c	
	int32_t cleave_starting_width; // 0x1320	
	int32_t cleave_ending_width; // 0x1324	
	int32_t cleave_distance; // 0x1328	
	float self_multiplier; // 0x132c	
	int32_t secondary_cleave_distance; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Magnataur_Skewer : public CDOTABaseAbility
{
public:
	int32_t skewer_radius; // 0x568	
	int32_t skewer_speed; // 0x56c	
	int32_t range; // 0x570	
	int32_t tree_radius; // 0x574	
	int32_t m_nProjectileID; // 0x578	
	int32_t m_nVisibleTargetCount; // 0x57c	
	int32_t m_nTargetsHit; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Magnataur_Skewer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Magnataur_Skewer_Impact : public CDOTA_Buff
{
public:
	float slow_duration; // 0x1318	
	int32_t skewer_damage; // 0x131c	
	int32_t damage_distance_pct; // 0x1320	
	Vector m_vDirection; // 0x1324	
	Vector m_vStartPos; // 0x1330	
	float m_flEndTime; // 0x133c	
	float m_flCurTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Magnataur_Skewer_Slow : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Magnataur_ReversePolarity : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	Vector m_vPullLocation; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Magnataur_ReversePolarity : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Magnataur_ReversePolarity_Stats : public CDOTA_Buff
{
public:
	int32_t stats_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Magnus : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Magnus_Strength_Of_Joelrak : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Magnus_Strength_Of_Joelrak : public CDOTA_Buff
{
public:
	int32_t strength_per_stack; // 0x1318	
	int32_t max_stacks; // 0x131c	
	float stack_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Magnus_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Magnus_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Magnus_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Magnus_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Magnus_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Magnus_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_WhirlingDeath : public CDOTABaseAbility
{
public:
	int32_t whirling_radius; // 0x568	
	int32_t whirling_damage; // 0x56c	
	float whirling_tick; // 0x570	
	float duration; // 0x574	
	int32_t tree_damage_scale; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Shredder_WhirlingDeath_Debuff : public CDOTA_Buff
{
public:
	int32_t stat_loss_pct; // 0x1318	
	int32_t stat_loss_univ; // 0x131c	
	int32_t iPrimaryAttribute; // 0x1320	
	float flStatLossStr; // 0x1324	
	float flStatLossAgi; // 0x1328	
	float flStatLossInt; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_TimberChain : public CDOTABaseAbility
{
public:
	int32_t chain_radius; // 0x568	
	ParticleIndex_t m_nFXIndex; // 0x56c	
	Vector m_vProjectileVelocity; // 0x570	
	bool m_bRetract; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Shredder_TimberChain : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDamaged; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x1330	
	Vector m_vStartPosition; // 0x1334	
	int32_t speed; // 0x1340	
	int32_t radius; // 0x1344	
	int32_t damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_Reactive_Armor : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Shredder_ReactiveArmor_Bomb : public CDOTA_Buff
{
public:
	float initial_shield; // 0x1318	
	float max_shield; // 0x131c	
	float shield_per_sec; // 0x1320	
	float shield_per_sec_per_enemy; // 0x1324	
	float duration; // 0x1328	
	float base_explosion; // 0x132c	
	int32_t radius; // 0x1330	
	int32_t explosion_radius; // 0x1334	
	int32_t m_nDamageAbsorbed; // 0x1338	
	GameTime_t m_timeLastTick; // 0x133c	
	GameTime_t m_StartTime; // 0x1340	
	int32_t m_nLastParticleTime; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Shredder_Reactive_Armor : public CDOTA_Buff
{
public:
	int32_t stack_limit; // 0x1318	
	float stack_duration; // 0x131c	
	int32_t stacks_per_hero_attack; // 0x1320	
	GameTime_t m_flStackDieTime; // 0x1324	
	ParticleIndex_t m_pFXIndex[4]; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shredder_Reactive_Armor_Stack : public CDOTA_Buff
{
public:
	float bonus_armor; // 0x1318	
	float bonus_hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_Chakram : public CDOTABaseAbility
{
public:
	float radius; // 0x568	
	float speed; // 0x56c	
	float pass_slow_duration; // 0x570	
	int32_t pass_damage; // 0x574	
	Vector m_vEndLocation; // 0x578	
	float m_fZCoord; // 0x584	
	bool m_bIsReturning; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	ParticleIndex_t m_nFXIndex; // 0x58c	
	ParticleIndex_t m_nFXIndexB; // 0x590	
	ParticleIndex_t m_nFXIndexC; // 0x594	
	int32_t m_nProjectileIndex; // 0x598	
	CHandle< CBaseEntity > m_hThinker; // 0x59c	
	CUtlVector< CHandle< CBaseEntity > > m_hReturnHits; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_ChakramAlias_shredder_chakram_2 : public CDOTA_Ability_Shredder_Chakram
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Shredder_Chakram_Thinker : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	float mana_per_second; // 0x131c	
	float radius; // 0x1320	
	float break_distance; // 0x1324	
	float damage_interval; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shredder_Chakram_Debuff : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	int32_t slow_health_percentage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Shredder_Chakram_Debuff_2 : public CDOTA_Modifier_Shredder_Chakram_Debuff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_ReturnChakram : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_ReturnChakramAlias_shredder_return_chakram_2 : public CDOTA_Ability_Shredder_ReturnChakram
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Shredder_Chakram_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Shredder_Flamethrower : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Shredder_Flamethrower_TreeFire_Thinker : public CDOTA_Buff
{
public:
	CUtlVector< CUtlPair< CHandle< CBaseEntity >, GameTime_t > > m_vecTreeFires; // 0x1318	
	bool m_bCleanupWhenEmpty; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Shredder_Flamethrower : public CDOTA_Buff
{
public:
	int32_t length; // 0x1318	
	int32_t width; // 0x131c	
	int32_t damage_per_second; // 0x1320	
	ParticleIndex_t m_nBeamFXIndex; // 0x1324	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1328	
	GameTime_t m_flLastHit; // 0x132c	
	CUtlVector< CBaseEntity* > m_vecBurningTrees; // 0x1330	
	CHandle< CBaseEntity > m_hTreeFireThinker; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Shredder_Flamethrower_Damage : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	ParticleIndex_t m_nActiveFXIndex; // 0x131c	
	ParticleIndex_t m_nActiveStatusFXIndex; // 0x1320	
	float damage_per_second; // 0x1324	
	int32_t building_dmg_pct; // 0x1328	
	int32_t move_slow_pct; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bristleback_Warpath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Bristleback_Warpath : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1318	
	int32_t move_speed_per_stack; // 0x131c	
	int32_t max_stacks; // 0x1320	
	float stack_duration; // 0x1324	
	float m_flDuration; // 0x1328	
	GameTime_t m_flMaxStackStartTime; // 0x132c	
	bool m_bSuppressKillEater; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bristleback_Warpath_Stack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bristleback_ViscousNasalGoo : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Bristleback_ViscousNasalGoo : public CDOTA_Buff
{
public:
	float base_armor; // 0x1318	
	float armor_per_stack; // 0x131c	
	int32_t base_move_slow; // 0x1320	
	int32_t move_slow_per_stack; // 0x1324	
	int32_t stack_limit; // 0x1328	
	ParticleIndex_t m_nFXStackIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bristleback_QuillSpray : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bristleback_QuillSpray_AutoCast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Bristleback_QuillSpray_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1318	
	GameTime_t m_fLastThink; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1320	
	CountdownTimer m_ViewerTimer; // 0x1338	
	int32_t projectile_speed; // 0x1350	
	float radius; // 0x1354	
	bool m_bTriggeredByBristleback; // 0x1358	
	bool m_bDelayed; // 0x1359	
private:
	[[maybe_unused]] uint8_t __pad135a[0x2]; // 0x135a
public:
	int32_t m_nAngleRestriction; // 0x135c	
	Vector m_vFacing; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Bristleback_QuillSpray : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Bristleback_QuillSprayStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bristleback_Bristleback : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Bristleback_Bristleback : public CDOTA_Buff
{
public:
	int32_t side_damage_reduction; // 0x1318	
	int32_t back_damage_reduction; // 0x131c	
	int32_t side_angle; // 0x1320	
	int32_t back_angle; // 0x1324	
	float quill_release_threshold; // 0x1328	
	float quill_release_interval; // 0x132c	
	bool m_bRearHit; // 0x1330	
	bool m_bSideHit; // 0x1331	
private:
	[[maybe_unused]] uint8_t __pad1332[0x2]; // 0x1332
public:
	float m_flDamageAccumulated; // 0x1334	
	int32_t m_nAccumulatedHits; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Bristleback_Active_ConicalQuillSpray : public CDOTA_Buff
{
public:
	int32_t activation_num_quill_sprays; // 0x1318	
	float activation_spray_interval; // 0x131c	
	int32_t activation_angle; // 0x1320	
	int32_t cast_range_bonus; // 0x1324	
	int32_t activation_movement_speed_pct; // 0x1328	
	int32_t activation_turn_rate_pct; // 0x132c	
	int32_t activation_disable_turning; // 0x1330	
	int32_t activation_ignore_cast_angle; // 0x1334	
	int32_t activation_turn_rate; // 0x1338	
	float activation_delay; // 0x133c	
	GameTime_t m_fStartTime; // 0x1340	
	bool bDelayFinished; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	float m_flFacingTarget; // 0x1348	
	Vector m_vFacing; // 0x134c	
	int32_t m_nNumSprays; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Bristleback_Hairball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_IceShards_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_IceShards : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x568	
	int32_t shard_width; // 0x56c	
	int32_t shard_damage; // 0x570	
	int32_t shard_count; // 0x574	
	float shard_speed; // 0x578	
	float shard_duration; // 0x57c	
	float shard_angle_step; // 0x580	
	int32_t shard_distance; // 0x584	
	Vector m_vSpawnOrigin; // 0x588	
	Vector m_vDirection; // 0x594	
	CUtlVector< CHandle< CBaseEntity > > m_vecShards; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05b8[0x8]; // 0x5b8
public:
	CDOTABaseAbility* m_pIceShardsStop; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c8[0x8]; // 0x5c8
public:
	ParticleIndex_t m_nFXIndex; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tusk_IceShard_Slow_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tusk_IceShard : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x688
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_Snowball : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t snowball_windup_radius; // 0x578	
	int32_t snowball_radius; // 0x57c	
	int32_t snowball_grow_rate; // 0x580	
	int32_t snowball_damage; // 0x584	
	int32_t snowball_damage_bonus; // 0x588	
	float stun_duration; // 0x58c	
	int32_t bonus_damage; // 0x590	
	float bonus_stun; // 0x594	
	int32_t snowball_speed; // 0x598	
	int32_t snowball_speed_bonus; // 0x59c	
	float snowball_duration; // 0x5a0	
	Vector m_vProjectileLocation; // 0x5a4	
	CUtlVector< CHandle< CBaseEntity > > m_hSnowballedUnits; // 0x5b0	
	ParticleIndex_t m_nFXIndex; // 0x5c8	
private:
	[[maybe_unused]] uint8_t __pad05cc[0x4]; // 0x5cc
public:
	CountdownTimer ctSnowball; // 0x5d0	
	bool m_bSpeakAlly; // 0x5e8	
	bool m_bIsExpired; // 0x5e9	
	bool m_bInWindup; // 0x5ea	
private:
	[[maybe_unused]] uint8_t __pad05eb[0x1]; // 0x5eb
public:
	CHandle< CBaseEntity > m_hPrimaryTarget; // 0x5ec	
	int32_t m_nContainedValidUnits; // 0x5f0	
	bool m_bEndingSnowball; // 0x5f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tusk_Snowball_Target : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_Launch_Snowball : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tusk_Snowball_Visible : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tusk_Snowball_Movement : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tusk_Snowball_Movement_Friendly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_FrozenSigil : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_FrozenSigil_Aura : public CDOTA_Buff
{
public:
	int32_t sigil_radius; // 0x1318	
	ParticleIndex_t m_iIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Tusk_FrozenSigil : public CDOTA_Buff
{
public:
	int32_t aghs_shard_move_slow; // 0x1318	
	int32_t aghs_shard_damage; // 0x131c	
	int32_t attack_slow; // 0x1320	
	int32_t turn_rate_slow; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_WalrusPunch : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Tusk_WalrusPunch : public CDOTA_Buff
{
public:
	int32_t crit_multiplier; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	float air_time; // 0x1320	
	float slow_duration; // 0x1324	
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1328	
	CHandle< CBaseEntity > m_hTarget; // 0x1330	
	bool m_bWalrusPunch; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x1350	
	int32_t m_nAttackRecord; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_WalrusPunch_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Tusk_WalrusPunch_AirTime : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	float m_flOldPitch; // 0x1324	
	QAngle m_qRotation; // 0x1328	
	int32_t m_nRotations; // 0x1334	
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float air_time; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_WalrusKick : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nTargetFXIndex; // 0x568	
	Vector m_vEndpoint; // 0x56c	
	int32_t landing_radius; // 0x578	
	int32_t push_length; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_WalrusKick_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Tusk_WalrusKick_AirTime : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	float m_flOldPitch; // 0x1324	
	QAngle m_qRotation; // 0x1328	
	int32_t m_nRotations; // 0x1334	
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	int32_t push_length; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Tusk_Tag_Team : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_Tag_Team_Attack_Slow_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_Tag_Team_Attack_Slow : public CDOTA_Buff
{
public:
	int32_t attack_speed_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_Tag_Team_Aura : public CDOTA_Buff
{
public:
	ParticleIndex_t m_iIndex; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_Tag_Team : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
	float slow_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_Tag_Team_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Skywrath_Mage_Shield_Of_The_Scion : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Skywrath_Mage_Shard : public CDOTA_Buff
{
public:
	float stack_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Skywrath_Mage_Shard_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_intelligence; // 0x1318	
	float bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Skywrath_Mage_Shard_Bonus_Counter : public CDOTA_Buff
{
public:
	int32_t bonus_intelligence; // 0x1318	
	float bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Skywrath_Mage_Arcane_Bolt : public CDOTABaseAbility
{
public:
	int32_t bolt_vision; // 0x568	
	float vision_duration; // 0x56c	
	float m_flDamage; // 0x570	
	int32_t m_nFXIndex; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Skywrath_Mage_Arcane_Bolt_Lifesteal : public CDOTA_Buff
{
public:
	float lifesteal_amt; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Skywrath_Mage_Concussive_Shot : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x568	
	int32_t slow_radius; // 0x56c	
	int32_t damage; // 0x570	
	int32_t shot_vision; // 0x574	
	float slow_duration; // 0x578	
	float vision_duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Skywrath_Mage_Concussive_Shot : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Skywrath_Mage_Ancient_Seal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Skywrath_Mage_Ancient_Seal : public CDOTA_Buff
{
public:
	int32_t resist_debuff; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Skywrath_Mage_Mystic_Flare : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Skywrath_Mage_Mystic_Flare : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage; // 0x131c	
	float duration; // 0x1320	
	float damage_interval; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Skywrath_Mystic_Flare_Aura_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Skywrath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Abaddon_DeathCoil : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Abaddon_DeathCoil_Effect : public CDOTA_Buff
{
public:
	int32_t armor_bonus; // 0x1318	
	int32_t magic_resistance; // 0x131c	
	bool m_bFriendly; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Abaddon_AphoticShield : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Abaddon_AphoticShield : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float damage_absorb; // 0x131c	
	int32_t regen; // 0x1320	
	int32_t m_nDamageAbsorbed; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Abaddon_Frostmourne : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Abaddon_Frostmourne : public CDOTA_Buff
{
public:
	float slow_duration; // 0x1318	
	float curse_duration; // 0x131c	
	int32_t hit_count; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_Frostmourne_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	ParticleIndex_t m_nFXStackIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_Frostmourne_Debuff_Bonus : public CDOTA_Buff
{
public:
	float m_flDamage; // 0x1318	
	int32_t curse_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_Frostmourne_Buff : public CDOTA_Buff
{
public:
	int32_t curse_attack_speed; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Abaddon_BorrowedTime : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_BorrowedTime : public CDOTA_Buff
{
public:
	int32_t m_iTotalDamageAbsorbed; // 0x1318	
	int32_t redirect_range_scepter; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_BorrowedTime_Passive : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_Borrowed_Time_Damage_Redirect : public CDOTA_Buff
{
public:
	float m_fDamageTaken; // 0x1318	
	int32_t ally_threshold_scepter; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_BorrowedTime_ImmolationAura : public CDOTA_Buff
{
public:
	int32_t immolate_aoe; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Abaddon_BorrowedTime_ImmolationDamage : public CDOTA_Buff
{
public:
	float immolate_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_AncestralSpirit : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x568	
	int32_t radius; // 0x56c	
	float buff_duration; // 0x570	
	float spirit_duration; // 0x574	
	int32_t m_nCreepsHit; // 0x578	
	int32_t m_nHeroesHit; // 0x57c	
	bool m_bIsReturning; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0581[0x3]; // 0x581
public:
	CHandle< CBaseEntity > m_hAncestralSpirit; // 0x584	
	ParticleIndex_t m_nReturnFXIndex; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CUtlString m_strMoveSpiritSwapAbility; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit : public CDOTA_Buff
{
public:
	int32_t pass_damage; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t m_nCreepsHit; // 0x1320	
	int32_t m_nHeroesHit; // 0x1324	
	float m_flSpeed; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x1330	
	int32_t m_nBonusMoveSpeed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_MoveSpirit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_ReturnSpirit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit_Buff : public CDOTA_Buff
{
public:
	float move_pct_creeps; // 0x1318	
	int32_t move_pct_heroes; // 0x131c	
	int32_t damage_creeps; // 0x1320	
	int32_t damage_heroes; // 0x1324	
	float armor_creeps; // 0x1328	
	float armor_heroes; // 0x132c	
	float move_pct_cap; // 0x1330	
	int32_t m_nCreepsHit; // 0x1334	
	int32_t m_nHeroesHit; // 0x1338	
	float m_fSpeedPercentage; // 0x133c	
	int32_t m_nDamage; // 0x1340	
	int32_t m_nArmor; // 0x1344	
	bool m_bSpellImmunity; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Elder_Titan_4 : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit_Hidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_EchoStomp : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexTitan; // 0x568	
	ParticleIndex_t m_nFXIndexSpirit; // 0x56c	
	ParticleIndex_t m_nFXIndexTitanB; // 0x570	
	ParticleIndex_t m_nFXIndexSpiritB; // 0x574	
	int32_t radius; // 0x578	
	int32_t stomp_damage; // 0x57c	
	float sleep_duration; // 0x580	
	float cast_time; // 0x584	
	CUtlVector< CHandle< CBaseEntity > > m_vecStompedHeroes; // 0x588	
	CUtlVector< CHandle< CBaseEntity > > m_vecStompedHeroes_BuffCounted; // 0x5a0	
	bool m_bStompedInvisibleHero; // 0x5b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_EchoStomp_Spirit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit_CastTime : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Elder_Titan_EchoStomp_Magic_Immune : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t model_scale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Elder_Titan_EchoStomp : public CDOTA_Buff
{
public:
	int32_t wake_damage_limit; // 0x1318	
	float animation_rate; // 0x131c	
	float initial_stun_duration; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CountdownTimer ctStunTimer; // 0x1328	
	float m_flDamageTaken; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_NaturalOrder : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_NaturalOrder_Spirit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_Aura_Armor : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_Aura_MagicResistance : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_Armor : public CDOTA_Buff
{
public:
	int32_t armor_reduction_pct; // 0x1318	
	float m_flArmorReduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_MagicResistance : public CDOTA_Buff
{
public:
	int32_t magic_resistance_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Elder_Titan_EarthSplitter_Caster : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x1318	
	int32_t vision_width; // 0x1330	
	float vision_interval; // 0x1334	
	float vision_duration; // 0x1338	
	int32_t vision_step; // 0x133c	
	int32_t total_steps; // 0x1340	
	int32_t m_nCompletedSteps; // 0x1344	
	Vector m_vStart; // 0x1348	
	Vector m_vEnd; // 0x1354	
	Vector m_vNextVisionLocation; // 0x1360	
	Vector m_vCastDirection; // 0x136c	
	int32_t m_nHumHeroesHit; // 0x1378	
	bool m_bHitInvisibleHero; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Elder_Titan_EarthSplitter_Thinker : public CDOTA_Buff
{
public:
	int32_t crack_width; // 0x1318	
	int32_t damage_pct; // 0x131c	
	float slow_duration; // 0x1320	
	float slow_duration_scepter; // 0x1324	
	CDOTA_Buff* m_pParentModifier; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Elder_Titan_EarthSplitter : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Elder_Titan_EarthSplitterScepter : public CDOTA_Modifier_Elder_Titan_EarthSplitter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Elder_Titan_EarthSplitter : public CDOTABaseAbility
{
public:
	int32_t crack_width; // 0x568	
	int32_t crack_distance; // 0x56c	
	int32_t speed; // 0x570	
	int32_t vision_width; // 0x574	
	float crack_time; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Legion_Commander_OverwhelmingOdds : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Legion_Commander_OverwhelmingOdds_Armor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Legion_Commander_OverwhelmingOdds : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed_creeps; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	float armor_per_creep; // 0x1320	
	float armor_per_hero; // 0x1324	
	int32_t m_nTotalBonus; // 0x1328	
	float m_flBonusArmor; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Legion_Commander_PressTheAttack : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Legion_Commander_PressTheAttack_Immunity : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t model_scale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Legion_Commander_PressTheAttack : public CDOTA_Buff
{
public:
	int32_t move_speed; // 0x1318	
	int32_t hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Legion_Commander_MomentOfCourage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Legion_Commander_MomentOfCourage : public CDOTA_Buff
{
public:
	int32_t trigger_chance; // 0x1318	
	float buff_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Legion_Commander_MomentOfCourage_Lifesteal : public CDOTA_Buff
{
public:
	int32_t hp_leech_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Legion_Commander_Duel : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Legion_Commander_Duel_DamageBoost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Holdout_GladiatorsUnite : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Holdout_GladiatorsUnite_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Holdout_GladiatorsUnite : public CDOTA_Buff
{
public:
	int32_t bonus_armor_per_hero; // 0x1318	
	int32_t bonus_damage_per_hero; // 0x131c	
	int32_t lifesteal_per_hero; // 0x1320	
	int32_t scepter_damage_reduction_pct; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Techies_Suicide_RespawnTime : public CDOTA_Buff
{
public:
	int32_t m_nSuicideKillCount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Techies_LandMines_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_ReactiveTazer : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
	bool m_bDetonateTriggered; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Techies_ReactiveTazer : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t bonus_ms; // 0x1320	
	int32_t stun_radius; // 0x1324	
	float stun_duration; // 0x1328	
	int32_t damage_percent; // 0x132c	
	int32_t m_nDamageRemaining; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_ReactiveTazer_Stop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Techies_ReactiveTazer_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_StickyBomb : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Techies_StickyBombThrow : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	float m_flPredictedTotalTime; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	float m_flCurrentTimeHoriz; // 0x132c	
	float m_flCurrentTimeVert; // 0x1330	
	bool m_bHorizontalMotionInterrupted; // 0x1334	
	bool m_bDamageApplied; // 0x1335	
	bool m_bTargetTeleported; // 0x1336	
private:
	[[maybe_unused]] uint8_t __pad1337[0x1]; // 0x1337
public:
	Vector m_vHorizontalVelocity; // 0x1338	
	Vector m_vLastKnownTargetPosition; // 0x1344	
	float m_flInitialVelocityZ; // 0x1350	
	bool m_bDone; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	int32_t radius; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Techies_StickyBomb_Chase : public CDOTA_Buff
{
public:
	int32_t acceleration; // 0x1318	
	int32_t m_nTeamNumber; // 0x131c	
	float speed; // 0x1320	
	float pre_chase_time; // 0x1324	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1328	
	Vector m_vStartPosition; // 0x132c	
	CountdownTimer m_MoveTime; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Techies_StickyBomb_Countdown : public CDOTA_Buff
{
public:
	Vector m_vLastLoc; // 0x1318	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Techies_StickyBomb_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Techies_StickyBomb_Slow_Secondary : public CDOTA_Buff
{
public:
	int32_t secondary_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_LandMines : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Techies_LandMine : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1328	
	float proximity_threshold; // 0x132c	
	float damage; // 0x1330	
	float activation_delay; // 0x1334	
	float outer_damage; // 0x1338	
	int32_t min_distance; // 0x133c	
	bool bActivated; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x7]; // 0x1341
public:
	CountdownTimer m_Timer; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Techies_LandMine_Burn : public CDOTA_Buff
{
public:
	int32_t mres_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_StasisTrap : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	CHandle< CBaseEntity > m_hTrap; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Techies_StasisTrap : public CDOTA_Modifier_Invisible
{
public:
	int32_t activation_radius; // 0x1328	
	int32_t stun_radius; // 0x132c	
	float stun_duration; // 0x1330	
	float explode_delay; // 0x1334	
	float activation_time; // 0x1338	
	bool m_bActivated; // 0x133c	
	bool m_bTriggered; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Techies_StasisTrap_Stunned : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_Suicide : public CDOTABaseAbility
{
public:
	uint32_t m_unSuicideKills; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Techies_Suicide_Leap_Animation : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Techies_Suicide_Leap : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bDamageApplied; // 0x133d	
	bool m_bTargetTeleported; // 0x133e	
private:
	[[maybe_unused]] uint8_t __pad133f[0x1]; // 0x133f
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_RemoteMines : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	CHandle< CBaseEntity > m_hRMine; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Techies_DeployRemoteMine : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Techies_RemoteMine : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1328	
	int32_t damage; // 0x132c	
	int32_t radius_scepter; // 0x1330	
	int32_t damage_scepter; // 0x1334	
	int32_t vision_radius; // 0x1338	
	float vision_duration; // 0x133c	
	int32_t model_scale; // 0x1340	
	bool bExploding; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_FocusedDetonate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_RemoteMines_SelfDetonate : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Techies_Minefield_Sign : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
	ParticleIndex_t m_nFXHammerIndex; // 0x56c	
	int32_t aura_radius; // 0x570	
	CHandle< CBaseEntity > m_hSign; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Techies_Minefield_Sign_Thinker : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	float trigger_radius; // 0x131c	
	float minefield_duration; // 0x1320	
	bool m_bTriggered; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Techies_Minefield_Sign_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Techies_Minefield_Sign_Scepter : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	float minefield_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Techies_Minefield_Sign_Scepter_Aura : public CDOTA_Buff
{
public:
	float aura_radius; // 0x1318	
	float scepter_move_damage; // 0x131c	
	float scepter_move_amt; // 0x1320	
	float minefield_duration; // 0x1324	
	float m_flMoveAmount; // 0x1328	
	Vector m_vLastPosition; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Techies_Arcana_DamageListener : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EmberSpirit_SearingChains : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_EmberSpirit_SearingChains : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	float tick_interval; // 0x131c	
	float tick_damage; // 0x1320	
	float duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EmberSpirit_SlightOfFist_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EmberSpirit_SleightOfFist : public CDOTABaseAbility
{
public:
	Vector m_vCastLoc; // 0x568	
	int32_t m_nHeroesKilled; // 0x574	
	CUtlVector< CHandle< CBaseEntity > > m_hAttackEntities; // 0x578	
	ParticleIndex_t m_nFXMarkerIndex; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_InProgress : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_Caster : public CDOTA_Buff
{
public:
	int32_t bonus_hero_damage; // 0x1318	
	int32_t creep_damage_penalty; // 0x131c	
	int32_t radius; // 0x1320	
	float attack_interval; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_Caster_Invulnerability : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EmberSpirit_FlameGuard : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_EmberSpirit_FlameGuard : public CDOTA_Buff
{
public:
	int32_t absorb_amount; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	int32_t radius; // 0x1320	
	float tick_interval; // 0x1324	
	int32_t shield_pct_absorb; // 0x1328	
	int32_t m_nAbsorbRemaining; // 0x132c	
	float m_flShowParticleInterval; // 0x1330	
	bool m_bDestroy; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	float linger_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EmberSpirit_FlameGuard_Debuff : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	float tick_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EmberSpirit_FireRemnant_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EmberSpirit_FireRemnant : public CDOTABaseAbility
{
public:
	CUtlVector< RemnantData_t > m_vRemnantData; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_EmberSpirit_FireRemnant_RemnantTracker : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vActiveRemnants; // 0x1318	
	CUtlVector< CHandle< CBaseEntity > > m_vTrackingDelayedRemnants; // 0x1330	
	int32_t shard_charge_radius; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EmberSpirit_FireRemnantThinker : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1318	
	bool m_bIsShardRemnant; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EmberSpirit_FireRemnant_Shard : public CDOTA_Buff
{
public:
	int32_t shard_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EmberSpirit_FireRemnant_Shard_Debuff : public CDOTA_Buff
{
public:
	int32_t shard_damage_per_second; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EmberSpirit_Activate_FireRemnant : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t m_nProjectileID; // 0x578	
	Vector m_vStartLocation; // 0x57c	
	Vector m_vProjectileLocation; // 0x588	
	QAngle m_ProjectileAngles; // 0x594	
	CHandle< CBaseEntity > m_hRemnantToKill; // 0x5a0	
	bool m_bProjectileStarted; // 0x5a4	
private:
	[[maybe_unused]] uint8_t __pad05a5[0x3]; // 0x5a5
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EmberSpirit_FireRemnant_Timer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EmberSpirit_FireRemnant : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Earth_Spirit_StoneCaller_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EarthSpirit_RollingBoulder : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t radius; // 0x578	
	int32_t speed; // 0x57c	
	int32_t rock_speed; // 0x580	
	int32_t damage; // 0x584	
	int32_t damage_str; // 0x588	
	float distance; // 0x58c	
	float rock_distance; // 0x590	
	float rock_distance_multiplier; // 0x594	
	float slow_duration; // 0x598	
	ParticleIndex_t m_nFXIndex; // 0x59c	
	bool m_boulderSetposBool; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05a1[0x3]; // 0x5a1
public:
	int32_t m_nProjectileID; // 0x5a4	
	Vector m_vStartingLocation; // 0x5a8	
	Vector m_vProjectileLocation; // 0x5b4	
	Vector m_vDir; // 0x5c0	
	Vector m_vVel; // 0x5cc	
	bool m_bUsedStone; // 0x5d8	
private:
	[[maybe_unused]] uint8_t __pad05d9[0x3]; // 0x5d9
public:
	Vector m_vRollDirection; // 0x5dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_EarthSpirit_RollingBoulder_Caster : public CDOTA_Buff
{
public:
	Vector m_vDir; // 0x1318	
	bool m_bBoulderCreated; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EarthSpirit_StoneCaller : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_EarthSpirit_StoneThinker : public CDOTA_Buff
{
public:
	int32_t vision_radius; // 0x1318	
	bool m_bHasBeenMagnetized; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	ParticleIndex_t m_nFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EarthSpirit_BoulderSmash : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x568	
	int32_t rock_damage; // 0x56c	
	float creep_multiplier; // 0x570	
	int32_t radius; // 0x574	
	int32_t rock_search_aoe; // 0x578	
	float unit_distance; // 0x57c	
	float rock_distance; // 0x580	
	int32_t m_nProjectileID; // 0x584	
	CHandle< CBaseEntity > m_hCursorTarget; // 0x588	
	bool m_bUsedStone; // 0x58c	
private:
	[[maybe_unused]] uint8_t __pad058d[0x3]; // 0x58d
public:
	CHandle< CBaseEntity > m_hTarget; // 0x590	
	bool m_bTargetStone; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EarthSpirit_BoulderSmash : public CDOTA_Buff
{
public:
	bool m_bInterrupted; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t m_nProjectileID; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EarthSpirit_Boulder_Smash_Debuff : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EarthSpirit_Geogmagnetic_Grip_Debuff : public CDOTA_Modifier_Silence
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EarthSpirit_GeomagneticGrip : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_EarthSpirit_GeomagneticGrip : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t rock_damage; // 0x131c	
	float pull_units_per_second; // 0x1320	
	float pull_units_per_second_heroes; // 0x1324	
	float total_pull_distance; // 0x1328	
	float duration; // 0x132c	
	bool m_bUsedStone; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	Vector m_vDestination; // 0x1334	
	Vector m_vLocation; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EarthSpirit_Petrify : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	bool m_bHasBeenMagnetized; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EarthSpirit_Magnetize : public CDOTABaseAbility
{
public:
	int32_t cast_radius; // 0x568	
	int32_t rock_explosion_radius; // 0x56c	
	float damage_duration; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_EarthSpirit_Magnetize : public CDOTA_Buff
{
public:
	int32_t rock_search_radius; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	float damage_interval; // 0x1320	
	float rock_explosion_delay; // 0x1324	
	float damage_duration; // 0x1328	
	int32_t cast_radius; // 0x132c	
	int32_t rock_explosion_radius; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CHandle< CBaseEntity > > m_hExplodedRocks; // 0x1338	
	float duration; // 0x1350	
	bool m_bShowOverhead; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_EarthSpirit_Petrify : public CDOTABaseAbility
{
public:
	int32_t ally_cast_range; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_EarthSpirit_Polarization : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	float damage_interval; // 0x131c	
	float damage_duration; // 0x1320	
	int32_t rock_search_radius; // 0x1324	
	CHandle< CBaseEntity > m_hMagnetizeAbility; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_EarthSpirit_Polarization_Damage_Timer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AbyssalUnderlord_Firestorm : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_Firestorm_Thinker : public CDOTA_Buff
{
public:
	int32_t wave_damage; // 0x1318	
	int32_t wave_count; // 0x131c	
	int32_t radius; // 0x1320	
	float wave_interval; // 0x1324	
	float burn_duration; // 0x1328	
	float burn_interval; // 0x132c	
	float first_wave_delay; // 0x1330	
	float building_damage; // 0x1334	
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_Firestorm_Burn : public CDOTA_Buff
{
public:
	float burn_damage; // 0x1318	
	float burn_interval; // 0x131c	
	float building_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AbyssalUnderlord_PitOfMalice : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Thinker : public CDOTA_Buff
{
public:
	int32_t pit_damage; // 0x1318	
	int32_t radius; // 0x131c	
	float pit_interval; // 0x1320	
	float ensnare_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Slow : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Buff_Placer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AbyssalUnderlord_AtrophyAura : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_Effect : public CDOTA_Buff
{
public:
	int32_t damage_reduction_pct; // 0x1318	
	float bonus_damage_duration; // 0x131c	
	int32_t bonus_damage_from_creep; // 0x1320	
	int32_t bonus_damage_from_hero; // 0x1324	
	bool m_bWasHidden; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_HeroDmgBuff : public CDOTA_Buff
{
public:
	int32_t bonus_damage_from_hero; // 0x1318	
	float bonus_shared_by_allies_pct; // 0x131c	
	float m_flModifier; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_Permanent_HeroDmgBuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_CreepDmgBuff : public CDOTA_Buff
{
public:
	int32_t bonus_damage_from_creep; // 0x1318	
	float bonus_shared_by_allies_pct; // 0x131c	
	float m_flModifier; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_DmgBuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_Scepter : public CDOTA_Buff
{
public:
	int32_t bonus_damage_from_creep; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AbyssalUnderlord_DarkRift : public CDOTABaseAbility
{
public:
	float teleport_delay; // 0x568	
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_DarkRift : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t duration; // 0x1320	
	ParticleIndex_t m_nfxAmbientFx; // 0x1324	
	bool bPointTarget; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	Vector vDestination; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AbyssalUnderlord_DarkRift_Bonus_Health : public CDOTA_Buff
{
public:
	int32_t scepter_health_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AbyssalUnderlord_Cancel_DarkRift : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Underlord_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flChannelTime"
class CDOTA_Ability_AbyssalUnderlord_Portal_Warp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
	// MNetworkEnable
	float m_flChannelTime; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Underlord_Portal_FX : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPortalAmbientFX; // 0x1318	
	float m_fPortalRadius; // 0x131c	
	ParticleIndex_t m_nChannelFX; // 0x1320	
	int32_t m_nChannelCount; // 0x1324	
	ParticleIndex_t m_nCountdownFX; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Underlord_Portal_Warp_Channel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1318	
	ParticleIndex_t m_nfxTargetTp2; // 0x131c	
	ParticleIndex_t m_nfxAmbientFx; // 0x1320	
	ParticleIndex_t m_nfxPortal1; // 0x1324	
	ParticleIndex_t m_nfxPortal2; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x8]; // 0x132c
public:
	CHandle< CBaseEntity > m_hPortal; // 0x1334	
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1338	
	Vector m_vStartPosition; // 0x133c	
	float m_flTotalTime; // 0x1348	
	float m_flElapsedTimePortion; // 0x134c	
	float animation_rate; // 0x1350	
	int32_t stop_distance; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Underlord_Portal_Buff : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
	int32_t bonus_ms; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AbyssalUnderlord_Dark_Portal : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	float distance_from_fountain; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Underlord_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Terrorblade_Reflection : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Terrorblade_Reflection_Invulnerability : public CDOTA_Modifier_Invulnerable
{
public:
	CHandle< CBaseEntity > hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Terrorblade_Reflection_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
	int32_t attack_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Terrorblade_ConjureImage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Terrorblade_ConjureImage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Terrorblade_Metamorphosis : public CDOTABaseAbility
{
public:
	bool m_bBlockMetamorph; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Terrorblade_Transforming : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Terrorblade_Demon_Zeal_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Terrorblade_Demon_Zeal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Terrorblade_Demon_Zeal : public CDOTA_Buff
{
public:
	int32_t berserk_bonus_attack_speed; // 0x1318	
	int32_t berserk_bonus_movement_speed; // 0x131c	
	int32_t berserk_bonus_armor; // 0x1320	
	int32_t reflection_pct; // 0x1324	
	int32_t melee_bonus; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Terrorblade_Terror_Wave : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Terrorblade_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Transform_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Transform_Aura_Applier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Terrorblade_Metamorphosis : public CDOTA_Buff
{
public:
	float base_attack_time; // 0x1318	
	int32_t bonus_range; // 0x131c	
	int32_t m_iOriginalAttackCapabilities; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	int32_t speed_loss; // 0x1328	
	int32_t attack_projectile_speed_bonus; // 0x132c	
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1330	
	CUtlSymbolLarge m_iszOriginalRangedAttackEffect; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Fear_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1328	
	int32_t scepter_speed; // 0x1340	
	int32_t scepter_radius; // 0x1344	
	bool m_bFirstThink; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Terrorblade_Sunder : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Terrorblade_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1318	
	bool m_bFlail; // 0x1319	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_SunRay : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_SunRayStop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Phoenix_SunRayVision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
class CDOTA_Modifier_Phoenix_SunRay : public CDOTA_Buff
{
public:
	int32_t hp_cost_perc_per_second; // 0x1318	
	int32_t beam_range; // 0x131c	
	int32_t base_damage; // 0x1320	
	int32_t base_heal; // 0x1324	
	float tick_interval; // 0x1328	
	float forward_move_speed; // 0x132c	
	float turn_rate_initial; // 0x1330	
	float turn_rate; // 0x1334	
	int32_t radius; // 0x1338	
	float m_flCurrentTime; // 0x133c	
	float m_flAccumulatedSelfDamage; // 0x1340	
	bool m_bMovingForward; // 0x1344	
	bool m_bTurningFast; // 0x1345	
private:
	[[maybe_unused]] uint8_t __pad1346[0x2]; // 0x1346
public:
	float m_flFacingTarget; // 0x1348	
	float hp_perc_damage; // 0x134c	
	float hp_perc_heal; // 0x1350	
	float blind_duration; // 0x1354	
	int32_t blind_per_second; // 0x1358	
	ParticleIndex_t m_nBeamFXIndex; // 0x135c	
	CHandle< CBaseEntity > m_hVisionThinkers[8]; // 0x1360	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1380	
	bool m_bCreatedVisionThinkers; // 0x1384	
private:
	[[maybe_unused]] uint8_t __pad1385[0x3]; // 0x1385
public:
	CHandle< CBaseEntity > m_hBeamEndSound; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Phoenix_Sun_Ray_Blind : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Phoenix_Sun_Ray_Slow : public CDOTA_Buff
{
public:
	int32_t shard_move_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_SunRayToggleMove : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_IcarusDive : public CDOTABaseAbility
{
public:
	int32_t hp_cost_perc; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_IcarusDiveStop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Phoenix_IcarusDive : public CDOTA_Buff
{
public:
	Vector m_vSource; // 0x1318	
	Vector m_vTarget; // 0x1324	
	Vector m_vDirection; // 0x1330	
	QAngle m_angDirection; // 0x133c	
	float m_flCurrentTime; // 0x1348	
	int32_t dash_length; // 0x134c	
	int32_t dash_width; // 0x1350	
	int32_t hit_radius; // 0x1354	
	float burn_duration; // 0x1358	
	float dive_duration; // 0x135c	
	float impact_damage; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitEntities; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Phoenix_IcarusDiveBurn : public CDOTA_Buff
{
public:
	float burn_tick_interval; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	int32_t slow_movement_speed_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_FireSpirits : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Phoenix_FireSpiritCount : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_LaunchFireSpirit : public CDOTABaseAbility
{
public:
	int32_t spirit_speed; // 0x568	
	float duration; // 0x56c	
	int32_t radius; // 0x570	
	ParticleIndex_t m_nFXIndex; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Phoenix_FireSpiritBurn : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
	int32_t damage_per_second; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Phoenix_Supernova : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Phoenix_SupernovaHiding : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Phoenix_Sun : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t max_hero_attacks; // 0x1320	
	int32_t max_hero_attacks_scepter; // 0x1324	
	int32_t max_hero_attacks_required; // 0x1328	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x132c	
	int32_t m_iAttackCount; // 0x1330	
	int32_t creep_attacks_count; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Phoenix_Sun_Debuff : public CDOTA_Buff
{
public:
	int32_t damage_per_sec; // 0x1318	
	float tick_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Oracle_FortunesEnd : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
	int32_t radius; // 0x56c	
	int32_t bolt_speed; // 0x570	
	float maximum_purge_duration; // 0x574	
	float minimum_purge_duration; // 0x578	
	GameTime_t m_flStartTime; // 0x57c	
	float m_flDuration; // 0x580	
	float m_flDamage; // 0x584	
	bool m_bAbsorbed; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	CHandle< CBaseEntity > m_hTarget; // 0x58c	
	ParticleIndex_t m_nFXIndex; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Oracle_FortunesEndChannelTarget : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Oracle_FortunesEndPurge : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Oracle_FatesEdict : public CDOTABaseAbility
{
public:
	bool m_bTargetIsAlly; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Oracle_FatesEdict : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Oracle_PurifyingFlames : public CDOTABaseAbility
{
public:
	bool m_bTargetIsAlly; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad0569[0x3]; // 0x569
public:
	CHandle< CBaseEntity > m_hRecentTarget; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Oracle_PurifyingFlames : public CDOTA_Buff
{
public:
	float heal_per_second; // 0x1318	
	float tick_rate; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Oracle_FalsePromise : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Oracle_FalsePromiseTimer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Oracle_FalsePromise_Invis : public CDOTA_Modifier_PersistentInvisibility
{
public:
	float shard_spell_amp_bonus; // 0x1328	
	float shard_bat_bonus; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Oracle_FalsePromise : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x30]; // 0x1318
public:
	bool m_bWaitingForInvulnerability; // 0x1348	
	bool m_bDisableHealing; // 0x1349	
private:
	[[maybe_unused]] uint8_t __pad134a[0x2]; // 0x134a
public:
	float m_flHealthOnCreated; // 0x134c	
	ParticleIndex_t m_nFXIndex; // 0x1350	
	ParticleIndex_t m_nFXIndexB; // 0x1354	
	float m_flRunningDmg; // 0x1358	
	float m_flRunningHealth; // 0x135c	
	int32_t bonus_armor; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Oracle_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Oracle_RainOfDestiny : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Oracle_RainOfDestiny_Aura : public CDOTA_Buff
{
public:
	float damage; // 0x1318	
	int32_t radius; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Oracle_RainOfDestiny : public CDOTA_Buff
{
public:
	int32_t heal_amp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Winter_Wyvern_Arctic_Burn : public CDOTABaseAbility
{
public:
	CUtlVector< CEntityIndex > m_BurnedTargets; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Arctic_Burn_Frost_Attack : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Arctic_Burn_Flight : public CDOTA_Buff
{
public:
	float attack_point; // 0x1318	
	int32_t attack_range_bonus; // 0x131c	
	int32_t projectile_speed_bonus; // 0x1320	
	int32_t night_vision_bonus; // 0x1324	
	int32_t movement_scepter; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1330	
	int32_t max_attacks; // 0x1338	
	int32_t m_iNumAttacks; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Arctic_Burn_Slow : public CDOTA_Buff
{
public:
	float percent_damage; // 0x1318	
	int32_t move_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Winter_Wyvern_Splinter_Blast : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Splinter_Blast_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Winter_Wyvern_Cold_Embrace : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Cold_Embrace : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t heal_additive; // 0x1320	
	float heal_percentage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Winter_Wyvern_Winters_Curse : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Winters_Curse_Kill_Credit : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Winters_Curse_Aura : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_nAlliesTaunted; // 0x131c	
	bool m_bRelicTriggered; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t radius; // 0x1324	
	int32_t damage_amplification; // 0x1328	
	int32_t damage_reduction; // 0x132c	
	GameTime_t m_flLastSeen; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Winter_Wyvern_Winters_Curse : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1318	
	CHandle< CBaseEntity > m_hDesiredTarget; // 0x131c	
	int32_t damage_reduction; // 0x1320	
	int32_t damage_amplification; // 0x1324	
	int32_t bonus_attack_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ArcWarden_Flux : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_ArcWarden_Flux : public CDOTA_Buff
{
public:
	int32_t m_nCasterTeam; // 0x1318	
	int32_t damage_per_second; // 0x131c	
	int32_t tempest_damage_per_second; // 0x1320	
	int32_t search_radius; // 0x1324	
	int32_t move_speed_slow_pct; // 0x1328	
	int32_t tempest_move_speed_slow_pct; // 0x132c	
	int32_t status_resist; // 0x1330	
	float think_interval; // 0x1334	
	int32_t m_nCurrentMovementSlow; // 0x1338	
	int32_t m_nCurrentStatusResistance; // 0x133c	
	bool m_bAlone; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	ParticleIndex_t m_nFXIndex; // 0x1344	
	bool m_bIsTempestVersion; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ArcWarden_MagneticField : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ArcWarden_MagneticField_Thinker_Evasion : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t radius; // 0x1320	
	Vector m_vPos; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ArcWarden_MagneticField_Thinker_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ArcWarden_MagneticField_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t shard_magic_resist; // 0x1320	
	int32_t shard_slow_pct; // 0x1324	
	float aura_origin_x; // 0x1328	
	float aura_origin_y; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ArcWarden_MagneticField_Thinker_AttackRange : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t radius; // 0x1320	
	Vector m_vPos; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_ArcWarden_MagneticField_AttackRange : public CDOTA_Buff
{
public:
	int32_t attack_range_bonus; // 0x1318	
	int32_t attack_magic_damage; // 0x131c	
	int32_t attack_damage_bonus; // 0x1320	
	int32_t radius; // 0x1324	
	int32_t shard_magic_resist; // 0x1328	
	int32_t shard_slow_pct; // 0x132c	
	float aura_origin_x; // 0x1330	
	float aura_origin_y; // 0x1334	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ArcWarden_MagneticField_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ArcWarden_SparkWraith : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	float activation_delay; // 0x56c	
	float wraith_vision_duration; // 0x570	
	int32_t wraith_vision_radius; // 0x574	
	float spark_damage; // 0x578	
	int32_t creep_damage_bonus_pct; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ArcWarden_SparkWraith_Purge : public CDOTA_Buff
{
public:
	int32_t move_speed_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_ArcWarden_SparkWraith_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t scepter_radius; // 0x131c	
	int32_t wraith_vision_radius; // 0x1320	
	int32_t wraith_speed; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1328[0x8]; // 0x1328
public:
	float activation_delay; // 0x1330	
	float scepter_activation_delay; // 0x1334	
	float think_interval; // 0x1338	
	float m_flSparkDamage; // 0x133c	
	int32_t m_nViewerID; // 0x1340	
	bool m_bActive; // 0x1344	
	bool m_bOriginal; // 0x1345	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hDoubles"
class CDOTA_Ability_ArcWarden_TempestDouble : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hDoubles; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ArcWarden_TempestDouble : public CDOTA_Buff
{
public:
	int32_t penalty_distance; // 0x1318	
	int32_t attack_damage_penalty; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ArcWarden_TempestDouble_DistancePenalty : public CDOTA_Buff
{
public:
	int32_t attack_damage_penalty; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ArcWarden_Scepter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Arc_Warden_Scepter : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hRune; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_ArcWarden_TempestRecall : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Banana : public CDOTA_Buff
{
public:
	int32_t slide_distance; // 0x1318	
	int32_t radius; // 0x131c	
	float slide_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Banana_Knockback : public CDOTA_Buff
{
public:
	Vector m_vCenter; // 0x1318	
	int32_t knockback_distance; // 0x1324	
	int32_t knockback_height; // 0x1328	
	float knockback_duration; // 0x132c	
	Vector m_vHorizOffset; // 0x1330	
	Vector m_vStartPosition; // 0x133c	
	Vector m_vDir; // 0x1348	
	float m_fCurrentTimeHoriz; // 0x1354	
	float m_fCurrentTimeVert; // 0x1358	
	bool m_bShouldStun; // 0x135c	
private:
	[[maybe_unused]] uint8_t __pad135d[0x3]; // 0x135d
public:
	float flTimeSinceChange; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_TreeDance : public CDOTABaseAbility
{
public:
	int32_t perched_jump_distance; // 0x568	
	int32_t ground_jump_distance; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_Spring : public CDOTABaseAbility
{
public:
	Vector m_vPos; // 0x568	
	GameTime_t m_fStartChannelTime; // 0x574	
	CHandle< CBaseEntity > m_hThinker; // 0x578	
	ParticleIndex_t m_nFxIndex; // 0x57c	
	int32_t m_nRefCount; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_Boundless_Strike : public CDOTABaseAbility
{
public:
	int32_t strike_cast_range; // 0x568	
	int32_t strike_radius; // 0x56c	
	ParticleIndex_t m_nFXIndex; // 0x570	
	bool m_bIsAltCastState; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_Strike_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MonkeyKing_Strike_Crit : public CDOTA_Buff
{
public:
	int32_t strike_crit_mult; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MonkeyKing_Bounce : public CDOTA_Buff
{
public:
	float jump_damage_cooldown; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_MonkeyKing_BounceLeap : public CDOTA_Buff
{
public:
	float give_up_distance; // 0x1318	
	float ground_jump_distance; // 0x131c	
	float m_flZDelta; // 0x1320	
	float perched_day_vision; // 0x1324	
	float perched_night_vision; // 0x1328	
	Vector m_vStart; // 0x132c	
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	Vector m_vTargetPos; // 0x133c	
	float m_flSpeed; // 0x1348	
	bool m_bTargetingEntity; // 0x134c	
	bool m_bGroundToTree; // 0x134d	
	bool m_bTreeToGround; // 0x134e	
	bool m_bTreeToTree; // 0x134f	
	bool m_bIsSpringJump; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	float m_fSpringChanneledPercent; // 0x1354	
	int32_t m_nLeapSpeed; // 0x1358	
	ParticleIndex_t m_nFXIndex; // 0x135c	
	ParticleIndex_t m_nFXIndex2; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_Spring_Early : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MonkeyKing_TreeDance_Activity : public CDOTA_Buff
{
public:
	float m_fAbilityRangePct; // 0x1318	
	float m_bIsSpring; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_RightClickJump_Activity : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MonkeyKing_SpringSlow : public CDOTA_Buff
{
public:
	int32_t impact_movement_slow; // 0x1318	
	int32_t m_nSlowPct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_Spring_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_TreeJump_Hidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_UnperchedStunned : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_MonkeyKing_ArcToGround : public CDOTA_Buff
{
public:
	float leap_speed; // 0x1318	
	float give_up_distance; // 0x131c	
	float attackspeed_duration; // 0x1320	
	float m_flOriginalZDelta; // 0x1324	
	float m_flZDelta; // 0x1328	
	Vector m_vStart; // 0x132c	
	Vector m_vTargetPos; // 0x1338	
	float m_flSpeed; // 0x1344	
	bool m_bDroppedFromTree; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	ParticleIndex_t m_nFXIndex; // 0x134c	
	ParticleIndex_t m_nFXIndex2; // 0x1350	
	float m_flOriginalHeight; // 0x1354	
	bool m_bRightClickHop; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_Transform : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_MonkeyKing_Transform : public CDOTA_Buff
{
public:
	CUtlString m_strDisguise; // 0x1318	
	int32_t movespeed; // 0x1320	
	int32_t m_nDisguisedSpeed; // 0x1324	
	int32_t reveal_radius; // 0x1328	
	ParticleIndex_t m_nDisguiseEffectIndex; // 0x132c	
	CHandle< CBaseEntity > m_hCourierToClone; // 0x1330	
	CHandle< CBaseEntity > m_hCreepToClone; // 0x1334	
	CUtlVector< CHandle< CBaseEntity > > m_aryBountyRuneSpawners; // 0x1338	
	bool m_bIsFlyingCourier; // 0x1350	
	bool m_bIsRune; // 0x1351	
	bool m_bIsBanana; // 0x1352	
	bool m_bIsFakeAlly; // 0x1353	
	uint32_t m_nMischiefUnitType; // 0x1354	
	int32_t m_nMischiefHealthbarOffset; // 0x1358	
	float invul_duration; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_UnTransform : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_MonkeyKing_FurArmyThinker : public CDOTA_Buff
{
public:
	float m_fDuration; // 0x1318	
	GameTime_t m_fTimeThinkerCreated; // 0x131c	
	CUtlVector< Vector > m_vTargetPositions; // 0x1320	
	Vector m_vInitialPos; // 0x1338	
	int32_t first_radius; // 0x1344	
	int32_t num_first_soldiers; // 0x1348	
	int32_t second_radius; // 0x134c	
	int32_t num_second_soldiers; // 0x1350	
	ParticleIndex_t m_nRingFXIndex; // 0x1354	
	int32_t final_radius; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_MonkeyKing_FurArmy_Soldier : public CDOTA_Buff
{
public:
	Vector m_vTargetPos; // 0x1318	
	Vector m_vDirection; // 0x1324	
	int32_t move_speed; // 0x1330	
	CHandle< CBaseEntity > m_hThinker; // 0x1334	
	bool m_bIsInPosition; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nFXIndex; // 0x133c	
	bool m_bAutoSpawn; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_MonkeyKing_FurArmy_SoldierInPosition : public CDOTA_Buff
{
public:
	Vector m_vTargetPos; // 0x1318	
	CHandle< CBaseEntity > m_hAttackTarget; // 0x1324	
	float attack_speed; // 0x1328	
	int32_t second_radius; // 0x132c	
	int32_t outer_attack_buffer; // 0x1330	
	CHandle< CBaseEntity > m_hThinker; // 0x1334	
	bool m_bDisarmed; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	GameTime_t m_flNextAttackTime; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
	bool m_bAutoSpawn; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_FurArmy_SoldierInactive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_FurArmy_SoldierHidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ObliterateSoldier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MonkeyKing_FurArmy_BonusDamage : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_MonkeyKing_QuadrupleTap : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_MonkeyKing_QuadrupleTap : public CDOTA_Buff
{
public:
	int32_t counter_duration; // 0x1318	
	int32_t required_hits; // 0x131c	
	int32_t max_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MonkeyKing_QuadrupleTap_Counter : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXStackIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_MonkeyKing_QuadrupleTap_Bonuses : public CDOTA_Buff
{
public:
	int32_t charges; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t lifesteal; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	int32_t m_nIgnoreStrikeIndex; // 0x1328	
	bool m_bIsAttackAnim; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_CloudRun : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MonkeyKing_CloudRunStart : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_MonkeyKing_BoundlessStrike_ShardMovement : public CDOTA_Buff
{
public:
	float m_flPredictedTotalTime; // 0x1318	
	Vector m_vStartPosition; // 0x131c	
	float m_flCurrentTimeHoriz; // 0x1328	
	float m_flCurrentTimeVert; // 0x132c	
	bool m_bHorizontalMotionInterrupted; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	Vector m_vHorizontalVelocity; // 0x1334	
	Vector m_vLastKnownTargetPosition; // 0x1340	
	float m_flInitialVelocityZ; // 0x134c	
	int32_t acceleration_z; // 0x1350	
	int32_t min_height_above_lowest; // 0x1354	
	int32_t min_height_above_highest; // 0x1358	
	int32_t max_horizontal_acceleration; // 0x135c	
	int32_t spring_channel_pct; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_HeartPiercer : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_HeartPiercer : public CDOTA_Buff
{
public:
	float debuff_delay; // 0x1318	
	int32_t chance_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_HeartPiercer_Delay : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	float debuff_delay; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_HeartPiercer_Debuff : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_LuckyShot : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_LuckyShot : public CDOTA_Buff
{
public:
	int32_t chance_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_LuckyShot_Disarm : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1318	
	int32_t attack_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_LuckyShot_Silence : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_ShieldCrash : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Pangolier_ShieldCrash_Jump : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1318	
	float jump_duration_gyroshell; // 0x131c	
	int32_t jump_height; // 0x1320	
	int32_t jump_height_gyroshell; // 0x1324	
	float m_flStartZ; // 0x1328	
	float m_flCurTime; // 0x132c	
	float m_flJumpDuration; // 0x1330	
	float m_flJumpHeight; // 0x1334	
	int32_t jump_horizontal_distance; // 0x1338	
	Vector m_vTargetHorizontalDirection; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_ShieldCrash_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Pangolier_ShieldCrash_Buff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t m_nAbsorbRemaining; // 0x131c	
	int32_t hero_shield; // 0x1320	
	int32_t base_shield; // 0x1324	
	int32_t accummulated_value; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pangolier_Swashbuckle_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_Swashbuckle : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t dash_speed; // 0x578	
	int32_t start_radius; // 0x57c	
	int32_t end_radius; // 0x580	
	int32_t range; // 0x584	
	int32_t damage; // 0x588	
	Vector m_vDashPosition; // 0x58c	
	Vector m_vFacePosition; // 0x598	
	Vector m_vEndpoint; // 0x5a4	
	Vector m_vSlashDir; // 0x5b0	
	int32_t m_nDashProjectileID; // 0x5bc	
	Vector m_vDashProjectileLocation; // 0x5c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_Swashbuckle_Attack : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Pangolier_Swashbuckle : public CDOTA_Buff
{
public:
	int32_t m_nStrikesLeft; // 0x1318	
	float attack_interval; // 0x131c	
	Vector m_vSpawnPos; // 0x1320	
	Vector m_vStrikeDir; // 0x132c	
	Vector m_vDashDir; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pangolier_Swashbuckle_Stunned : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_Gyroshell : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFxIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
class CDOTA_Modifier_Pangolier_Gyroshell : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t mp_cost_per_second; // 0x1318	
	float tick_interval; // 0x131c	
	float forward_move_speed; // 0x1320	
	float turn_rate_boosted; // 0x1324	
	float turn_rate; // 0x1328	
	int32_t hit_radius; // 0x132c	
	int32_t knockback_radius; // 0x1330	
	bool m_bHitFirstUpdate; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	GameTime_t m_flHitEndTime; // 0x1338	
	float hit_recover_time; // 0x133c	
	GameTime_t m_flJumpEndTime; // 0x1340	
	float jump_recover_time; // 0x1344	
	float m_flTurnBoostProgress; // 0x1348	
	float m_flFacingTarget; // 0x134c	
	bool m_bIsJumping; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	ParticleIndex_t m_nFXIndex; // 0x1354	
	CUtlVector< float32 > m_flTurnHistory; // 0x1358	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitLastRicochet; // 0x1370	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesCredited; // 0x1388	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitCurrentRicochet; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Pangolier_Gyroshell_Ricochet : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_GyroshellStop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pangolier_GyroshellTimeout : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Pangolier_GyroshellBounce : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bTargetTeleported; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Pangolier_Gyroshell_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_Rollup : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFxIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Pangolier_RollupStop : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c0
// Has VTable
class CDOTA_Modifier_Pangolier_Rollup : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t mp_cost_per_second; // 0x1318	
	float tick_interval; // 0x131c	
	float forward_move_speed; // 0x1320	
	float turn_rate_boosted; // 0x1324	
	float turn_rate; // 0x1328	
	int32_t hit_radius; // 0x132c	
	int32_t knockback_radius; // 0x1330	
	bool m_bHitFirstUpdate; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	GameTime_t m_flHitEndTime; // 0x1338	
	float hit_recover_time; // 0x133c	
	GameTime_t m_flJumpEndTime; // 0x1340	
	float jump_recover_time; // 0x1344	
	float m_flTurnBoostProgress; // 0x1348	
	float m_flFacingTarget; // 0x134c	
	GameTime_t m_flLastHeroAttackTime; // 0x1350	
	bool m_bIsJumping; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	ParticleIndex_t m_nFXIndex; // 0x1358	
	float m_flGyroshellDurationRemaining; // 0x135c	
	CUtlVector< float32 > m_flTurnHistory; // 0x1360	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitLastRicochet; // 0x1378	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesCredited; // 0x1390	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitCurrentRicochet; // 0x13a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkWillow_BrambleMaze : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_DarkWillow_BrambleMaze_Creation_Thinker : public CDOTA_Buff
{
public:
	float latch_creation_interval; // 0x1318	
	float initial_creation_delay; // 0x131c	
	int32_t placement_count; // 0x1320	
	float placement_duration; // 0x1324	
	int32_t m_iBramblesIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_DarkWillow_BrambleMaze_Thinker : public CDOTA_Buff
{
public:
	int32_t latch_range; // 0x1318	
	int32_t latch_vision; // 0x131c	
	float latch_creation_delay; // 0x1320	
	float latch_duration; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1328[0x8]; // 0x1328
public:
	bool m_bActive; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DarkWillow_BrambleMaze : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkWillow_ShadowRealm : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DarkWillow_ShadowRealm_FadeTime : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_DarkWillow_ShadowRealm_Buff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float max_damage_duration; // 0x131c	
	int32_t attack_range_bonus; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
	bool bAttackRange; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	GameTime_t m_flStartTime; // 0x1344	
	GameTime_t m_flFadeTime; // 0x1348	
	float m_flDamageScale; // 0x134c	
	float duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DarkWillow_ShadowRealm_Buff_Attack_Logic : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t m_iRecord; // 0x131c	
	float m_flDamageScale; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkWillow_CursedCrown : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_DarkWillow_CursedCrown : public CDOTA_Buff
{
public:
	float delay; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t stun_radius; // 0x1320	
	GameTime_t m_fStartTime; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkWillow_Bedlam : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_DarkWillow_Bedlam : public CDOTA_Buff
{
public:
	float m_flRotation; // 0x1318	
	CHandle< CBaseEntity > m_hWisp; // 0x131c	
	GameTime_t m_flLastAttack; // 0x1320	
	int32_t roaming_radius; // 0x1324	
	int32_t attack_radius; // 0x1328	
	float roaming_seconds_per_rotation; // 0x132c	
	float attack_interval; // 0x1330	
	int32_t target_count; // 0x1334	
	bool m_bTravelling; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t travel_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_DarkWillow_Terrorize : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_DarkWillow_Terrorize_Thinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hWisp; // 0x1318	
	int32_t destination_travel_speed; // 0x131c	
	int32_t return_travel_speed; // 0x1320	
	int32_t destination_radius; // 0x1324	
	float destination_status_duration; // 0x1328	
	float initial_delay; // 0x132c	
	float starting_height; // 0x1330	
	Vector m_vAttackLocation; // 0x1334	
	bool m_bAttacking; // 0x1340	
	bool m_bReturning; // 0x1341	
private:
	[[maybe_unused]] uint8_t __pad1342[0x2]; // 0x1342
public:
	float m_fCurHeight; // 0x1344	
	float m_fEstimatedTravelTime; // 0x1348	
	float think_interval; // 0x134c	
	bool m_bInFlight; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkWillow_Debuff_Fear : public CDOTA_Modifier_Fear
{
public:
	bool m_bDidGiveOrder; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DarkWillow_Creature_Invulnerable : public CDOTA_Buff
{
public:
	int32_t m_nOverrideAnim; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_InkCreature : public CDOTABaseAbility
{
public:
	float spawn_time; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Grimstroke_InkCreature_Spawning : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Grimstroke_InkCreature : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	ParticleIndex_t m_nAmbientFXIndex; // 0x131c	
	int32_t m_nAttackCount; // 0x1320	
	bool m_bIsLatched; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CountdownTimer m_EnemyVision; // 0x1330	
	float latch_duration; // 0x1348	
	float speed; // 0x134c	
	int32_t destroy_attacks; // 0x1350	
	int32_t hero_attack_multiplier; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Grimstroke_InkCreature_Debuff : public CDOTA_Buff
{
public:
	float m_flCurrentArmorReduction; // 0x1318	
	CHandle< CBaseEntity > m_hLatchedCreature; // 0x131c	
	float tick_interval; // 0x1320	
	int32_t damage_per_second; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Grimstroke_InkCreature_Latched : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1318	
	float m_fZOffset; // 0x131c	
	bool m_bRemovedByEnemy; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	float latch_duration; // 0x1324	
	int32_t pop_damage; // 0x1328	
	int32_t latched_unit_offset; // 0x132c	
	int32_t latched_unit_offset_short; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_Scepter : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_SpiritWalk : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x568	
	CHandle< CBaseEntity > m_hTarget; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Grimstroke_SpiritWalk_Buff : public CDOTA_Buff
{
public:
	GameTime_t m_fStartTime; // 0x1318	
	int32_t m_nHeroTickDamageApplied; // 0x131c	
	GameTime_t m_fLastEffectsTime; // 0x1320	
	int32_t radius; // 0x1324	
	float buff_duration; // 0x1328	
	float debuff_duration; // 0x132c	
	int32_t max_damage; // 0x1330	
	float max_stun; // 0x1334	
	int32_t movespeed_bonus_pct; // 0x1338	
	int32_t damage_per_tick; // 0x133c	
	float tick_rate; // 0x1340	
	float max_threshold_duration; // 0x1344	
	int32_t shard_bonus_damage_pct; // 0x1348	
	int32_t shard_heal_pct; // 0x134c	
	float shard_creep_penalty; // 0x1350	
	bool m_bIsReflection; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_Return : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_DarkArtistry : public CDOTABaseAbility
{
public:
	Vector m_vCastDir; // 0x568	
	GameTime_t m_fStartTime; // 0x574	
	float m_fTotalTime; // 0x578	
	int32_t m_nProjectileID; // 0x57c	
	Vector m_vProjectileDir; // 0x580	
	ParticleIndex_t m_nFXIndex; // 0x58c	
	ParticleIndex_t m_nFXIndexB; // 0x590	
	int32_t m_nTargetsHit; // 0x594	
	int32_t m_nHeroesHit; // 0x598	
	int32_t m_nVisibleHeroesHit; // 0x59c	
	float m_fDmgMultiplierTalent; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05a4[0x8]; // 0x5a4
public:
	float slow_duration; // 0x5ac	
	int32_t start_radius; // 0x5b0	
	int32_t end_radius; // 0x5b4	
	int32_t damage; // 0x5b8	
	int32_t bonus_damage_per_target; // 0x5bc	
	float vision_duration; // 0x5c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Grimstroke_DarkArtistry_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_SoulChain : public CDOTABaseAbility
{
public:
	float chain_duration; // 0x568	
	int32_t chain_latch_radius; // 0x56c	
	float creep_duration_pct; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Grimstroke_SoulChain : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hPartner; // 0x1318	
	bool m_bIsPrimary; // 0x131c	
	bool m_bEscaped; // 0x131d	
	bool m_bTethered; // 0x131e	
private:
	[[maybe_unused]] uint8_t __pad131f[0x1]; // 0x131f
public:
	ParticleIndex_t m_nFXIndex; // 0x1320	
	ParticleIndex_t m_nFXIndexA; // 0x1324	
	ParticleIndex_t m_nFXIndexB; // 0x1328	
	bool m_bStartedLeashSound; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	float m_fLeashDistance; // 0x1330	
	GameTime_t m_fOriginalStartTime; // 0x1334	
	ParticleIndex_t m_nOverheadFXIndex; // 0x1338	
	int32_t chain_latch_radius; // 0x133c	
	int32_t chain_break_distance; // 0x1340	
	float leash_limit_multiplier; // 0x1344	
	float chain_duration; // 0x1348	
	float creep_duration_pct; // 0x134c	
	int32_t bonus_reflected_spell_damage; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Grimstroke_SoulChain_ChannelCheck : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAbility; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_hAbilities; // 0x1320	
	Vector m_vLocation; // 0x1338	
	GameTime_t m_fChannelEnd; // 0x1344	
	bool m_bInterrupt; // 0x1348	
	bool m_bExpired; // 0x1349	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_Dark_Portrait : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Grimstroke_Scepter_Buff : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t images_movespeed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Grimstroke_Ink_Over : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Grimstroke_Shard_Buff : public CDOTA_Buff
{
public:
	int32_t total_damage; // 0x1318	
	int32_t attack_speed; // 0x131c	
	int32_t move_speed; // 0x1320	
	float m_flInterval; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mars_Spear : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad0580[0x8]; // 0x580
public:
	int32_t damage; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CUtlVector< CHandle< CBaseEntity > > hImpaledTargetList; // 0x590	
	int32_t m_nTargetsImpaled; // 0x5a8	
	int32_t m_nMaxImpaleTargets; // 0x5ac	
	bool m_bHadBulwarkEnabled; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x3]; // 0x5b1
public:
	Vector m_vLastTrailThinkerLocation; // 0x5b4	
	bool bHasStartedBurning; // 0x5c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_Spear_Impale : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1318	
	bool m_bLatched; // 0x131c	
	bool m_bHitArenaOfBlood; // 0x131d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Special_Mars_Spear_Burning_Trail_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1318	
	int32_t shard_trail_radius; // 0x1324	
	float shard_debuff_linger_duration; // 0x1328	
	float shard_interval; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Special_Mars_Spear_Burning_Trail_Burn : public CDOTA_Buff
{
public:
	int32_t shard_dps; // 0x1318	
	int32_t shard_move_slow_pct; // 0x131c	
	float shard_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mars_Spear_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mars_ArenaOfBlood : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1318	
	float formation_time; // 0x131c	
	float m_flInitialZ; // 0x1320	
	float m_flFinalZ; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1328[0x10]; // 0x1328
public:
	bool m_bCaughtOne; // 0x1338	
	bool m_bKilledOne; // 0x1339	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_AnimationAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_Animation : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_BuffAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_Buff : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t width; // 0x131c	
	int32_t spear_damage; // 0x1320	
	int32_t spear_distance_from_wall; // 0x1324	
	float spear_attack_interval; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x34]; // 0x132c
public:
	int32_t m_hObstruction; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< Vector > m_vecAvoidLocations; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_Spear : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_Leash : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float width; // 0x131c	
	Vector m_vOriginLoc; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mars_ArenaOfBlood_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mars_Bulwark : public CDOTABaseAbility
{
public:
	GameTime_t m_flNextAttack; // 0x568	
	GameTime_t m_flLastActive; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Mars_Bulwark : public CDOTA_Buff
{
public:
	float physical_damage_reduction; // 0x1318	
	float physical_damage_reduction_side; // 0x131c	
	float forward_angle; // 0x1320	
	float side_angle; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1328[0x18]; // 0x1328
public:
	float m_flRecentDamage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Mars_Bulwark_Active : public CDOTA_Buff
{
public:
	int32_t redirect_chance; // 0x1318	
	int32_t redirect_range; // 0x131c	
	float forward_angle; // 0x1320	
	float side_angle; // 0x1324	
	int32_t redirect_speed_penatly; // 0x1328	
	int32_t redirect_close_range; // 0x132c	
	int32_t attack_redirection_grace_distance; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mars_Bulwark_Soldier_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Mars_Bulwark_Soldier_Thinker : public CDOTA_Buff
{
public:
	GameTime_t m_NextAttack; // 0x1318	
	int32_t soldier_offset; // 0x131c	
	int32_t soldier_count; // 0x1320	
	int32_t forward_angle; // 0x1324	
	int32_t knockback_distance; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAllSoldiers; // 0x1330	
	GameTime_t m_flLastStationaryTime; // 0x1348	
	Vector m_vLastStationaryPosition; // 0x134c	
	float stationary_attack_delay; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mars_Scepter_Damage_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_Scepter_Damage_Slow : public CDOTA_Buff
{
public:
	int32_t scepter_movement_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_Scepter_Damage : public CDOTA_Buff
{
public:
	int32_t scepter_bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Mars_GodsRebuke : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_Gods_Rebuke : public CDOTA_Buff
{
public:
	int32_t knockback_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mars_GodsRebuke_Crit : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_MarsSpearStunDuration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_ArenaOfBloodHPRegen : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_SpearBonusDamage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_GodsRebuke_ExtraCrit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_SpearCooldown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_RebukeCooldown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_GodsRebuke_Slow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bulwark_Speed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Bulwark_DamageReduction : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Snapfire_MortimerKisses : public CDOTABaseAbility
{
public:
	int32_t m_nDamagePerProjectile; // 0x568	
	int32_t damage_per_impact; // 0x56c	
	int32_t impact_radius; // 0x570	
	int32_t projectile_vision; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Snapfire_MortimerKisses : public CDOTA_Buff
{
public:
	float m_fIntervalPerRocket; // 0x1318	
	float m_flFacingTarget; // 0x131c	
	ParticleIndex_t m_nBeamFXIndex; // 0x1320	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1324	
	float m_flCurDistance; // 0x1328	
	Vector m_vAimTarget; // 0x132c	
	float m_fLastTurnAmount; // 0x1338	
	int32_t m_nProjectilesLaunched; // 0x133c	
	bool m_bDestroyOnNextThink; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t m_nProjectilesToLaunch; // 0x1344	
	bool m_bHasProjectileTalent; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0xb]; // 0x1349
public:
	int32_t projectile_count; // 0x1354	
	int32_t projectile_speed; // 0x1358	
	int32_t projectile_width; // 0x135c	
	int32_t projectile_vision; // 0x1360	
	float turn_rate; // 0x1364	
	int32_t min_range; // 0x1368	
	int32_t impact_radius; // 0x136c	
	float min_lob_travel_time; // 0x1370	
	float max_lob_travel_time; // 0x1374	
	float delay_after_last_projectile; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Snapfire_MortimerKisses_VisionSource : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Snapfire_Magma_Thinker : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1318	
	int32_t impact_radius; // 0x131c	
	int32_t move_slow_pct; // 0x1320	
	float burn_linger_duration; // 0x1324	
	ParticleIndex_t m_nPathEffectIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Snapfire_Magma_Burn_Slow : public CDOTA_Buff
{
public:
	int32_t m_nMoveSlowPct; // 0x1318	
	float m_fBurnDamagePerTick; // 0x131c	
	int32_t move_slow_pct; // 0x1320	
	float burn_interval; // 0x1324	
	int32_t burn_damage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Snapfire_Scatterblast : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x568	
	float debuff_duration; // 0x56c	
	int32_t point_blank_range; // 0x570	
	float point_blank_dmg_bonus_pct; // 0x574	
	int32_t blast_width_end; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Snapfire_Scatterblast_Slow : public CDOTA_Buff
{
public:
	bool m_bIsPointBlank; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t movement_slow_pct; // 0x131c	
	int32_t attack_slow_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Snapfire_Scatterblast_Disarm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Snapfire_FiresnapCookie : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x8]; // 0x56c
public:
	int32_t projectile_speed; // 0x574	
	float pre_hop_duration; // 0x578	
	float cast_on_ally_gesture_time; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Snapfire_FiresnapCookie_PreHop : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Snapfire_FiresnapCookie_ShortHop : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1318	
	int32_t jump_height; // 0x131c	
	int32_t jump_horizontal_distance; // 0x1320	
	float pre_land_anim_time; // 0x1324	
	float landing_gesture_duration; // 0x1328	
	int32_t impact_radius; // 0x132c	
	int32_t impact_damage; // 0x1330	
	float impact_stun_duration; // 0x1334	
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
	float m_flJumpDuration; // 0x1340	
	float m_flJumpHeight; // 0x1344	
	Vector m_vTargetHorizontalDirection; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Snapfire_FiresnapCookie_AllyFlailAnim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Snapfire_FiresnapCookie_LandingGesture : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Snapfire_LilShredder : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Snapfire_LilShredder_Buff : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
	int32_t m_nIsActive; // 0x1338	
	bool m_bHasAttackTalent; // 0x133c	
	bool m_bBonusAttack; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	int32_t attack_range_bonus; // 0x1340	
	int32_t buffed_attacks; // 0x1344	
	float base_attack_time; // 0x1348	
	int32_t attack_speed_bonus; // 0x134c	
	float armor_duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Snapfire_LilShredder_Attack_Reduction : public CDOTA_Buff
{
public:
	int32_t damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Snapfire_LilShredder_Attack : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Snapfire_LilShredder_Debuff : public CDOTA_Buff
{
public:
	float armor_reduction_per_attack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Snapfire_GobbleUp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x568	
	float max_time_in_belly; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Snapfire_GobbleUp_Creep : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Snapfire_GobbleUp_BellyHasUnit : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x1318	
	PlayerID_t m_nOriginalControllingUnit; // 0x131c	
	bool m_bUnitWasLaunched; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	float max_time_in_belly; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Snapfire_SpitCreep : public CDOTABaseAbility
{
public:
	int32_t m_nDamagePerProjectile; // 0x568	
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x56c	
	int32_t m_nProjectileID; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_Snapfire_SpitCreep_ArcingUnit : public CDOTA_Buff
{
public:
	float m_flPredictedTotalTime; // 0x1318	
	Vector m_vStartPosition; // 0x131c	
	float m_flCurrentTimeHoriz; // 0x1328	
	float m_flCurrentTimeVert; // 0x132c	
	bool m_bHorizontalMotionInterrupted; // 0x1330	
	bool m_bDamageApplied; // 0x1331	
	bool m_bTargetTeleported; // 0x1332	
private:
	[[maybe_unused]] uint8_t __pad1333[0x1]; // 0x1333
public:
	Vector m_vHorizontalVelocity; // 0x1334	
	Vector m_vLastKnownTargetPosition; // 0x1340	
	float m_flInitialVelocityZ; // 0x134c	
	float m_fClampedProjectileSpeed; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x1354	
	float m_fAcceleration; // 0x1358	
	int32_t min_range; // 0x135c	
	float min_lob_travel_time; // 0x1360	
	float max_lob_travel_time; // 0x1364	
	int32_t impact_radius; // 0x1368	
	int32_t projectile_vision; // 0x136c	
	float stun_duration; // 0x1370	
	float min_height_above_lowest; // 0x1374	
	float min_height_above_highest; // 0x1378	
	float min_acceleration; // 0x137c	
	float max_acceleration; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_VoidSpirit_AetherRemnant : public CDOTABaseAbility
{
public:
	int32_t start_radius; // 0x568	
	int32_t end_radius; // 0x56c	
	int32_t remnant_watch_distance; // 0x570	
	int32_t projectile_speed; // 0x574	
private:
	[[maybe_unused]] uint8_t __pad0578[0x8]; // 0x578
public:
	Vector m_vDashPosition; // 0x580	
	Vector m_vFacePosition; // 0x58c	
	Vector m_vEndpoint; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
class CDOTA_Modifier_VoidSpirit_AetherRemnant_Unit : public CDOTA_Buff
{
public:
	Vector m_vFacingDir; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< CHandle< CBaseEntity > > m_hWatchPathThinkers; // 0x1328	
	ParticleIndex_t m_nBeamFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int32 > m_nViewerIDs; // 0x1348	
	int32_t remnant_watch_distance; // 0x1360	
	int32_t remnant_watch_radius; // 0x1364	
	float duration; // 0x1368	
	int32_t watch_path_vision_radius; // 0x136c	
	int32_t impact_damage; // 0x1370	
	float pull_duration; // 0x1374	
	float activation_delay; // 0x1378	
	bool m_bPiercesCreeps; // 0x137c	
private:
	[[maybe_unused]] uint8_t __pad137d[0x3]; // 0x137d
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAlreadyHit; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_VoidSpirit_AetherRemnant_WatchThinker : public CDOTA_Buff
{
public:
	int32_t remnant_watch_radius; // 0x1318	
	GameTime_t m_flLastDamageTick; // 0x131c	
	float damage_tick_rate; // 0x1320	
	float flDamage; // 0x1324	
	bool m_bPiercesCreeps; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_VoidSpirit_AetherRemnant_Pull : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	PlayerID_t m_nPlayerID; // 0x131c	
	float m_fMovementSpeed; // 0x1320	
	CHandle< CDOTA_BaseNPC > m_hPullTarget; // 0x1324	
	float think_interval; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_VoidSpirit_AetherRemnantThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	Vector m_vFacingDir; // 0x131c	
	CHandle< CBaseEntity > m_hRemnant; // 0x1328	
	bool m_bTriggered; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	float m_flCurThink; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VoidSpirit_AetherRemnantUnit_Truesight : public CDOTA_Buff
{
public:
	int32_t m_nRadius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_VoidSpirit_AetherRemnantCreepDamage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_VoidSpirit_AstralStep_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_VoidSpirit_AstralStep : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x568	
	Vector m_vDestination; // 0x574	
	Vector m_vDirection; // 0x580	
	int32_t radius; // 0x58c	
	int32_t min_travel_distance; // 0x590	
	int32_t max_travel_distance; // 0x594	
	float debuff_duration; // 0x598	
	float pop_damage_delay; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_VoidSpirit_AstralStep_Debuff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXStackIndex; // 0x1318	
	int32_t movement_slow_pct; // 0x131c	
	int32_t pop_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_VoidSpirit_AstralStep_Caster : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_VoidSpirit_AstralStep_Intrinsic : public CDOTA_Buff
{
public:
	int32_t ability_chance_pct; // 0x1318	
	int32_t attack_chance_pct; // 0x131c	
	float pop_damage_delay; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_VoidSpirit_Dissimilate : public CDOTABaseAbility
{
public:
	float phase_duration; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
class CDOTA_Modifier_VoidSpirit_Dissimilate_Phase : public CDOTA_Buff
{
public:
	Vector m_vFirstPortalPos; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< Vector > m_vecDestinations; // 0x1328	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles; // 0x1340	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles_EnemyTeam; // 0x1358	
	int32_t m_nCurrentDestinationIndex; // 0x1370	
	int32_t m_nClosestIndexPosToClick; // 0x1374	
	int32_t m_nPortalHeightOffset; // 0x1378	
private:
	[[maybe_unused]] uint8_t __pad137c[0x4]; // 0x137c
public:
	char* m_szAlliesPortalFX; // 0x1380	
	char* m_szEnemiesPortalFX; // 0x1388	
	int32_t m_nPortalRadius; // 0x1390	
	int32_t m_nPortalPadding; // 0x1394	
	int32_t m_nFinalImpactDamageRadius; // 0x1398	
	int32_t m_nFinalImpactFXRadius; // 0x139c	
	int32_t destination_fx_radius; // 0x13a0	
	int32_t damage_radius; // 0x13a4	
	int32_t portals_per_ring; // 0x13a8	
	int32_t angle_per_ring_portal; // 0x13ac	
	int32_t first_ring_distance_offset; // 0x13b0	
	float debuff_duration; // 0x13b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_VoidSpirit_Dissimilate_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_VoidSpirit_ResonantPulse_PhysicalBuff : public CDOTA_Buff
{
public:
	int32_t base_absorb_amount; // 0x1318	
	int32_t m_nAbsorbRemaining; // 0x131c	
	int32_t m_nMaxAbsorb; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_VoidSpirit_ResonantPulse : public CDOTABaseAbility
{
public:
	bool m_bGrantedScepterCharges; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad0569[0x3]; // 0x569
public:
	float buff_duration; // 0x56c	
	int32_t base_absorb_amount; // 0x570	
	int32_t absorb_per_hero_hit; // 0x574	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_VoidSpirit_ResonantPulse_Ring : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1328	
	int32_t speed; // 0x1340	
	int32_t radius; // 0x1344	
	int32_t damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_1 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_2 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_3 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_4 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_5 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_6 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_7 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_8 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_9 : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "DotaTreeId_t m_nAcornTree"
class CDOTA_Ability_Hoodwink_AcornShot : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x20]; // 0x568
public:
	// MNetworkEnable
	uint32_t m_nAcornTree; // 0x588	
	float projectile_speed; // 0x58c	
	float bounce_delay; // 0x590	
	int32_t bounce_range; // 0x594	
	int32_t bounce_count; // 0x598	
	bool m_bIsAltCastState; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_AcornShot_DelayThinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_nSourceProjectileHandle; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_AcornShot_TreeThinker : public CDOTA_Buff
{
public:
	CHandle< CDOTA_TempTree > m_hTree; // 0x1318	
	int32_t fow_viewer; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_AcornShot_BonusDamage : public CDOTA_Buff
{
public:
	int32_t acorn_shot_damage; // 0x1318	
	int32_t base_damage_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_AcornShot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_Bushwhack : public CDOTABaseAbility
{
public:
	int32_t trap_radius; // 0x568	
	int32_t m_nProjectileHandle; // 0x56c	
	ParticleIndex_t m_nFXIndex; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Hoodwink_Bushwhack_Trap : public CDOTA_Buff
{
public:
	int32_t visual_height; // 0x1318	
	float animation_rate; // 0x131c	
	ParticleIndex_t m_iIndex; // 0x1320	
	bool m_bPullComplete; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	uint32_t m_TreeId; // 0x1328	
	float m_flDamagePerTick; // 0x132c	
	int32_t m_nDamageTicks; // 0x1330	
	GameTime_t m_flLastTick; // 0x1334	
	CHandle< CDOTA_TempTree > m_hTree; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CDOTA_Tree* m_pTree; // 0x1340	
	Vector m_vPullPosition; // 0x1348	
	Vector m_vDir; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_Scurry : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Hoodwink_Scurry_Passive : public CDOTA_Buff
{
public:
	int32_t evasion; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t bonus_active_evasion; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Hoodwink_Scurry_Active : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1318	
	int32_t attack_range; // 0x131c	
	int32_t cast_range; // 0x1320	
	float m_flTreeDuration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Windup : public CDOTA_Buff
{
public:
	bool m_bReachedMax; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	float m_flLastOverheadTime; // 0x131c	
	float m_flFacingTarget; // 0x1320	
	Vector m_vAimTarget; // 0x1324	
	ParticleIndex_t m_nCrosshairFX; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecVisionThinkers; // 0x1338	
	int32_t arrow_vision; // 0x1350	
	float max_charge_time; // 0x1354	
	float turn_rate; // 0x1358	
	float base_power; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_Sharpshooter : public CDOTABaseAbility
{
public:
	float max_charge_time; // 0x568	
	Vector m_vStartPos; // 0x56c	
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_Sharpshooter_VisionThinker : public CDOTA_Buff
{
public:
	int32_t arrow_width; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_Sharpshooter_Release : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Recoil : public CDOTA_Buff
{
public:
	float recoil_duration; // 0x1318	
	int32_t recoil_height; // 0x131c	
	int32_t recoil_distance; // 0x1320	
	float m_flStartZ; // 0x1324	
	float m_flCurTime; // 0x1328	
	float m_flJumpDuration; // 0x132c	
	float m_flJumpHeight; // 0x1330	
	Vector m_vTargetHorizontalDirection; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Recoil_EndAnim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Debuff : public CDOTA_Buff
{
public:
	int32_t slow_move_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShotBounces : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShotDamage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShotCharges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Camouflague : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_SharpshooterPierceHeroes : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_SharpshooterPureDamage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Bushwhack_Duration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Bushwhack_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Sharpshooter_Speed : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Hoodwink_Camouflage : public CDOTA_Buff
{
public:
	float fade_time; // 0x1318	
	GameTime_t m_flFadeTime; // 0x131c	
	bool m_bInvisLastThink; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShot_ArmorCorruption : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_BushwhackCooldown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_ScurryDuration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_AcornShot_ArmorCorruption : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_Caltrops : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Hoodwink_Caltrops : public CDOTA_Buff
{
public:
	int32_t effect_radius; // 0x1318	
	int32_t caltrops_damage; // 0x131c	
	int32_t activation_radius; // 0x1320	
	float debuff_duration; // 0x1324	
	float activation_delay; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_Caltrops_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_pct; // 0x1318	
	int32_t tick_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_Decoy : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hIllusion; // 0x568	
	float decoy_stun_duration; // 0x580	
	int32_t decoy_detonate_radius; // 0x584	
	int32_t projectile_speed; // 0x588	
	ParticleIndex_t m_nFXIndex; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Hoodwink_Decoy_Illusion : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Hoodwink_Decoy_Invisibility : public CDOTA_Modifier_Invisible
{
public:
	int32_t movement_speed; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_HeavyQuiver : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Hoodwink_HeavyQuiver : public CDOTA_Buff
{
public:
	int32_t bonus_projectile_speed_pct; // 0x1318	
	int32_t bonus_attack_range; // 0x131c	
	int32_t deadly_blow_multiplier; // 0x1320	
	float maim_duration; // 0x1324	
	int32_t m_nAttackRecord; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_HuntersBoomerang : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	int32_t speed; // 0x56c	
	int32_t damage; // 0x570	
	float mark_duration; // 0x574	
	CHandle< CBaseEntity > m_hTarget; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitEntities; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Hoodwink_Hunters_Mark : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1318	
	int32_t spell_amp; // 0x131c	
	int32_t status_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Hoodwink_HuntersQuiver : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Hoodwink_HuntersQuiver : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1318	
	int32_t max_stacks; // 0x131c	
	float debuff_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Hoodwink_HuntersQuiver_Mark : public CDOTA_Buff
{
public:
	int32_t stack_crit_chance_pct; // 0x1318	
	int32_t critical_damage_pct; // 0x131c	
	int32_t stack_slow_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Hoodwink_Boomerang_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b0
// Has VTable
class CDOTA_Modifier_Hoodwink_ArcingBoomerang : public CDOTA_Buff
{
public:
	Vector m_vLeftControl; // 0x1318	
	Vector m_vRightControl; // 0x1324	
	Vector m_vTargetLoc; // 0x1330	
	Vector m_vOriginalTargetLoc; // 0x133c	
	Vector m_vSourceLoc; // 0x1348	
	bool m_bGroundTargeted; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	float m_flDuration; // 0x1358	
	GameTime_t m_flDieTime; // 0x135c	
	bool m_bReturning; // 0x1360	
	bool m_bCatchingBoomerang; // 0x1361	
	bool m_bDisjointed; // 0x1362	
private:
	[[maybe_unused]] uint8_t __pad1363[0x1]; // 0x1363
public:
	int32_t m_nFramesToWait; // 0x1364	
	CHandle< CBaseEntity > m_hBoomerang; // 0x1368	
	CHandle< CBaseEntity > m_hTarget; // 0x136c	
	ParticleIndex_t m_nBoomerangFXIndex; // 0x1370	
	ParticleIndex_t m_nOldBoomerangFXindex; // 0x1374	
	CUtlVector< CHandle< CBaseEntity > > m_vecUniqueHitList; // 0x1378	
	int32_t radius; // 0x1390	
	int32_t spread; // 0x1394	
	int32_t damage; // 0x1398	
	float mark_duration; // 0x139c	
	float min_throw_duration; // 0x13a0	
	float max_throw_duration; // 0x13a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dawnbreaker_Solar_Guardian : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x568	
	bool m_bJumping; // 0x56c	
private:
	[[maybe_unused]] uint8_t __pad056d[0x3]; // 0x56d
public:
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x570	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_Thinker : public CDOTA_Buff
{
public:
	float pulse_interval; // 0x1318	
	int32_t iEffectRadius; // 0x131c	
	int32_t base_damage; // 0x1320	
	int32_t base_heal; // 0x1324	
	ParticleIndex_t m_nThinkerFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_Evasion : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_AirTime : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	Vector m_vDirection; // 0x1320	
	float m_flEndTime; // 0x132c	
	CHandle< CBaseEntity > m_hThinker; // 0x1330	
	Vector m_vCurrentTargetPosition; // 0x1334	
	Vector m_vDesiredTargetPosition; // 0x1340	
	Vector m_vStartPosition; // 0x134c	
	int32_t airtime_scepter_movement_speed; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_LandingStun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_Disable : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1318	
	ParticleIndex_t m_nStatusFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_After_Land : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dawnbreaker_Luminosity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Luminosity : public CDOTA_Buff
{
public:
	bool m_bAppliesToCreeps; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t attack_count; // 0x131c	
	bool m_bShouldIncrement; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Luminosity_Attack_Buff : public CDOTA_Buff
{
public:
	bool m_bIsBuffedAttack; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t heal_pct; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	int32_t heal_radius; // 0x1324	
	int32_t heal_from_creeps; // 0x1328	
	int32_t allied_healing_pct; // 0x132c	
	CUtlVector< CHandle< CBaseEntity > > hTargets; // 0x1330	
	float m_flTotalToHeal; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dawnbreaker_Celestial_Hammer : public CDOTABaseAbility
{
public:
	int32_t m_nProjectileIndex; // 0x568	
	int32_t m_nReturnProjectileID; // 0x56c	
	Vector m_vEndLocation; // 0x570	
	float m_fZCoord; // 0x57c	
	Vector m_vLastTrailThinkerLocation; // 0x580	
	bool m_bFlareDone; // 0x58c	
	bool m_bStartedCatchAnimation; // 0x58d	
	bool m_bIsReturning; // 0x58e	
private:
	[[maybe_unused]] uint8_t __pad058f[0x1]; // 0x58f
public:
	CUtlVector< CHandle< CBaseEntity > > m_hReturnHits; // 0x590	
	CUtlVector< CHandle< CBaseEntity > > m_hAoEHits; // 0x5a8	
	ParticleIndex_t m_nFXIndex; // 0x5c0	
	ParticleIndex_t m_nFXIndexC; // 0x5c4	
	ParticleIndex_t m_nFXHammerReturnIndex; // 0x5c8	
	ParticleIndex_t m_nFXHammerProjectileIndex; // 0x5cc	
	ParticleIndex_t m_nFXHeroSolarGuardianTrailIndex; // 0x5d0	
	CHandle< CBaseEntity > m_hThinker; // 0x5d4	
	int32_t projectile_speed; // 0x5d8	
	int32_t projectile_radius; // 0x5dc	
	int32_t hammer_damage; // 0x5e0	
	int32_t hammer_aoe_radius; // 0x5e4	
	int32_t flare_radius; // 0x5e8	
	bool bHasStartedBurning; // 0x5ec	
private:
	[[maybe_unused]] uint8_t __pad05ed[0x3]; // 0x5ed
public:
	float flare_debuff_duration; // 0x5f0	
	int32_t return_anim_distance_threshold; // 0x5f4	
	int32_t range; // 0x5f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Celestial_Hammer_Thinker : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Converge_Thinker : public CDOTA_Buff
{
public:
	int32_t flare_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Celestial_Hammer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
	int32_t projectile_speed; // 0x131c	
	int32_t travel_speed_pct; // 0x1320	
	int32_t m_nMaxRange; // 0x1324	
	Vector m_vStartPoint; // 0x1328	
	Vector m_vLastTrailThinkerLocation; // 0x1334	
	Vector m_vEndPointShard; // 0x1340	
	ParticleIndex_t m_nStatusFXIndex; // 0x134c	
	int32_t flare_radius; // 0x1350	
	bool bHasStartedBurning; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	float flare_debuff_duration; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Celestial_Hammer_Caster : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dawnbreaker_Fire_Wreath : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Magic_Immunity_Tooltip : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Caster : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t shard_movement_penalty; // 0x131c	
	int32_t swipe_radius; // 0x1320	
	int32_t swipe_damage; // 0x1324	
	int32_t smash_radius; // 0x1328	
	int32_t smash_damage; // 0x132c	
	int32_t m_nCurrentSpeed; // 0x1330	
	float flSwipeInterval; // 0x1334	
	GameTime_t m_flNextHit; // 0x1338	
	int32_t iCurrentAttack; // 0x133c	
	int32_t total_attacks; // 0x1340	
	float smash_stun_duration; // 0x1344	
	float sweep_stun_duration; // 0x1348	
	bool m_bHasCompletedMove; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float duration; // 0x1350	
	Vector m_vTargetHorizontalDirection; // 0x1354	
	int32_t smash_distance_from_hero; // 0x1360	
	float animation_rate; // 0x1364	
	float turn_rate; // 0x1368	
	float m_flFacingTarget; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Attack_Bonus : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1318	
	int32_t creep_damage_penalty; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Slow : public CDOTA_Buff
{
public:
	int32_t swipe_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Smash_Stun : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dawnbreaker_Converge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Dawnbreaker_Converge : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
	int32_t burn_damage; // 0x131c	
	float burn_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Dawnbreaker_Land : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Celestial_Hammer_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Fire_Wreath_Magic_Immunity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Solar_Guardian_Radius : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Converge_Slow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Celestial_Hammer_Cast_Range : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Fire_Wreath_Ministun : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Luminosity_Attack_Count : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Fire_wreath_Charges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Solar_Guardian_Cooldown : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Luminosity_Crit : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_FireWreath_Swipe : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_CelestialHammer_Slow : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_FireWreath_AoE : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Marci_Grapple : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Marci_Grapple_VictimMotion : public CDOTA_Buff
{
public:
	int32_t impact_damage; // 0x1318	
	float debuff_duration; // 0x131c	
	int32_t landing_radius; // 0x1320	
	float air_duration; // 0x1324	
	int32_t air_height; // 0x1328	
	int32_t travel_distance; // 0x132c	
	Vector m_vDestination; // 0x1330	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
	float m_flJumpDuration; // 0x1344	
	float m_flJumpHeight; // 0x1348	
	Vector m_vTargetHorizontalDirection; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Marci_Dispose_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Marci_Companion_Run : public CDOTABaseAbility
{
public:
	int32_t m_nTrackingProjectileID; // 0x568	
	ParticleIndex_t m_nFXIndex; // 0x56c	
	int32_t m_nMaxJumpDistance; // 0x570	
	int32_t landing_radius; // 0x574	
	int32_t move_speed; // 0x578	
	float ally_buff_duration; // 0x57c	
	int32_t min_jump_distance; // 0x580	
	int32_t max_jump_distance; // 0x584	
	int32_t impact_position_offset; // 0x588	
	int32_t vector_preview_radius; // 0x58c	
	Vector m_vEndpoint; // 0x590	
	ParticleIndex_t m_nToBounceFXIndex; // 0x59c	
	ParticleIndex_t m_nToTargetFXIndex; // 0x5a0	
	Vector m_vDashPosition; // 0x5a4	
	Vector m_vFacePosition; // 0x5b0	
	Vector m_vTravelDir; // 0x5bc	
	float m_fTravelDistance; // 0x5c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Marci_Lunge_TrackingMotion : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
	int32_t m_nMaxJumpDistance; // 0x131c	
	int32_t landing_radius; // 0x1320	
	int32_t max_jump_distance; // 0x1324	
	int32_t min_jump_distance; // 0x1328	
	int32_t target_abort_distance; // 0x132c	
	int32_t impact_position_offset; // 0x1330	
	float m_flCastDistance; // 0x1334	
	ParticleIndex_t m_nAoEFXIndex; // 0x1338	
	Vector m_vDestination; // 0x133c	
	CHandle< CBaseEntity > m_hBounceEntity; // 0x1348	
	CHandle< CBaseEntity > m_hBounceEntityClient; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
class CDOTA_Modifier_Marci_Lunge_Arc : public CDOTA_Buff
{
public:
	float m_flPredictedTotalTime; // 0x1318	
	Vector m_vStartPosition; // 0x131c	
	float m_flCurrentTimeHoriz; // 0x1328	
	float m_flCurrentTimeVert; // 0x132c	
	bool m_bDamageApplied; // 0x1330	
	bool m_bTargetTeleported; // 0x1331	
private:
	[[maybe_unused]] uint8_t __pad1332[0x2]; // 0x1332
public:
	Vector m_vHorizontalVelocity; // 0x1334	
	Vector m_vLastKnownTargetPosition; // 0x1340	
	float m_flInitialVelocityZ; // 0x134c	
	float m_fClampedProjectileSpeed; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x1354	
	float m_fAcceleration; // 0x1358	
	bool m_bTriggeredLandingAnim; // 0x135c	
private:
	[[maybe_unused]] uint8_t __pad135d[0x3]; // 0x135d
public:
	int32_t m_nMaxJumpDistance; // 0x1360	
	int32_t min_jump_distance; // 0x1364	
	int32_t max_jump_distance; // 0x1368	
	float min_lob_travel_time; // 0x136c	
	float max_lob_travel_time; // 0x1370	
	int32_t landing_radius; // 0x1374	
	float debuff_duration; // 0x1378	
	float min_height_above_lowest; // 0x137c	
	float min_height_above_highest; // 0x1380	
	float min_acceleration; // 0x1384	
	float max_acceleration; // 0x1388	
	float impact_damage; // 0x138c	
	int32_t impact_position_offset; // 0x1390	
	float ally_buff_duration; // 0x1394	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Marci_Lunge_LandingAnim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Marci_CompanionRun_AllyMovespeed : public CDOTA_Buff
{
public:
	float ally_movespeed_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Marci_Lunge_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Marci_Lunge_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Marci_Guardian_Buff : public CDOTA_Buff
{
public:
	float lifesteal_pct; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t bonus_attack_range; // 0x1320	
	int32_t max_partner_distance; // 0x1324	
	int32_t max_partner_penalty; // 0x1328	
	int32_t creep_lifesteal_reduction_pct; // 0x132c	
	float m_fLifestealPct; // 0x1330	
	float m_fDamageAbsorbed; // 0x1334	
	bool m_bActive; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nFxIndex; // 0x133c	
	CHandle< CBaseEntity > m_hPartner; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Marci_Guardian : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x568	
	int32_t nearest_ally_search_range; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Marci_Unleash : public CDOTABaseAbility
{
public:
	float duration; // 0x568	
	int32_t pulse_radius; // 0x56c	
	float pulse_debuff_duration; // 0x570	
	int32_t pulse_damage; // 0x574	
	float pulse_silence_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Marci_Unleash_Pull : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	int32_t shard_push_length; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Marci_Unleash : public CDOTA_Buff
{
public:
	float time_between_flurries; // 0x1318	
	int32_t charges_per_flurry; // 0x131c	
	int32_t flurry_charge_increment; // 0x1320	
	int32_t bonus_movespeed; // 0x1324	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Marci_Unleash_Flurry : public CDOTA_Buff
{
public:
	int32_t flurry_bonus_attack_speed; // 0x1318	
	float time_between_flurries; // 0x131c	
	float debuff_duration; // 0x1320	
	float max_time_window_per_hit; // 0x1324	
	bool m_bBonusSpeed; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	ParticleIndex_t m_nFXStackIndex; // 0x132c	
	bool m_bIsDoingFlurryAttack; // 0x1330	
	bool m_bIsDoingFlurryPulseAttack; // 0x1331	
private:
	[[maybe_unused]] uint8_t __pad1332[0x2]; // 0x1332
public:
	GameTime_t m_fLastAttackTime; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Marci_Unleash_FlurryCooldown : public CDOTA_Buff
{
public:
	int32_t charges_per_flurry; // 0x1318	
	float time_between_flurries; // 0x131c	
	float recovery_fixed_attack_rate; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Marci_Unleash_FlurryPulse_Debuff : public CDOTA_Buff
{
public:
	float pulse_move_slow_pct; // 0x1318	
	float pulse_attack_slow_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Lunge_AllyAbsorb : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Lunge_Damage : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Lunge_Range : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Grapple_StunDuration : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Guardian_MagicImmunity : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Marci_Guardian_MagicImmunity : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Unleash_LungeRefresh : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Unleash_Silence : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Marci_Unleash_Pulse_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Marci_Guardian_Lifesteal : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PrimalBeast_Trample : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Primalbeast_Trample : public CDOTA_Buff
{
public:
	int32_t effect_radius; // 0x1318	
	Vector vLastPos; // 0x131c	
	float flCurrentDistance; // 0x1328	
	int32_t step_distance; // 0x132c	
	int32_t bonus_magic_resistance; // 0x1330	
	bool m_bIsUnslowable; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PrimalBeast_Pulverize : public CDOTABaseAbility
{
public:
	CDOTA_BaseNPC* m_hTarget; // 0x568	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_PrimalBeast_Pulverize : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	float m_flOffset; // 0x131c	
	QAngle m_vStartAngles; // 0x1320	
	Vector m_vStartLocation; // 0x132c	
	float animation_rate; // 0x1338	
	bool m_bInterrupted; // 0x133c	
	bool m_bHasBeenDestroyed; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_PrimalBeast_Pulverize_Self : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1318	
	Vector m_vPulverizeCenter; // 0x131c	
	Vector m_vCasterStartPos; // 0x1328	
	int32_t splash_radius; // 0x1334	
	float interval; // 0x1338	
	float ministun; // 0x133c	
	int32_t damage; // 0x1340	
	int32_t bonus_damage_per_hit; // 0x1344	
	int32_t m_nHitCount; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PrimalBeast_Onslaught : public CDOTABaseAbility
{
public:
	float max_charge_time; // 0x568	
	float knockback_distance; // 0x56c	
	int32_t knockback_damage; // 0x570	
	int32_t collision_radius; // 0x574	
	int32_t max_distance; // 0x578	
	Vector m_vStartPos; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x588	
	int32_t m_nProjectileID; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_PrimalBeast_Onslaught_Windup : public CDOTA_Buff
{
public:
	bool m_bReachedMax; // 0x1318	
	bool m_bShouldCharge; // 0x1319	
private:
	[[maybe_unused]] uint8_t __pad131a[0x2]; // 0x131a
public:
	float m_flLastOverheadTime; // 0x131c	
	float m_flFacingTarget; // 0x1320	
	Vector m_vAimTarget; // 0x1324	
	ParticleIndex_t m_nCrosshairFX; // 0x1330	
	float m_flChargeDuration; // 0x1334	
	int32_t max_distance; // 0x1338	
	float max_charge_time; // 0x133c	
	float turn_rate; // 0x1340	
	float base_power; // 0x1344	
	int32_t charge_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PrimalBeast_Onslaught_Release : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_PrimalBeast_Onslaught_Movement : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1318	
	float charge_speed; // 0x131c	
	float movement_turn_rate; // 0x1320	
	int32_t knockback_radius; // 0x1324	
	float knockback_distance; // 0x1328	
	int32_t knockback_damage; // 0x132c	
	int32_t m_nEnemyHeroesHit; // 0x1330	
	float m_flFacingTarget; // 0x1334	
	ParticleIndex_t m_nFXIndex; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_PrimalBeast_Onslaught_Knockback : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bTargetTeleported; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iUproarStatus"
class CDOTA_Ability_PrimalBeast_Uproar : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnUproarActiveChanged"
	int32_t m_iUproarStatus; // 0x568	
	bool m_bUpdateIcons; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_PrimalBeast_Uproar : public CDOTA_Modifier_Stacking_Base
{
public:
	int32_t stack_limit; // 0x1338	
	int32_t damage_limit; // 0x133c	
	float stack_duration; // 0x1340	
	float damage_min; // 0x1344	
	float damage_max; // 0x1348	
	int32_t bonus_damage_per_stack; // 0x134c	
	ParticleIndex_t m_nFxIndexA; // 0x1350	
	int32_t iCur_stack; // 0x1354	
	int32_t bonus_damage; // 0x1358	
	float slow_duration; // 0x135c	
private:
	[[maybe_unused]] uint8_t __pad1360[0x18]; // 0x1360
public:
	float m_fTotalDamage; // 0x1378	
	GameTime_t m_flLastStackTime; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PrimalBeast_Uproar_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_PrimalBeast_Uproar_Roared_Self : public CDOTA_Buff
{
public:
	int32_t roared_bonus_attack_speed; // 0x1318	
	int32_t roared_bonus_armor; // 0x131c	
	int32_t m_nBuffStackCount; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Primal_Beast_Uproar_Projectile_Thinker : public CDOTA_Buff
{
public:
	int32_t projectiles_per_stack; // 0x1318	
	int32_t projectile_speed; // 0x131c	
	int32_t projectile_distance; // 0x1320	
	int32_t projectile_width; // 0x1324	
	int32_t splinter_angle; // 0x1328	
	float split_delay; // 0x132c	
	int32_t projectile_waves; // 0x1330	
	int32_t m_nCurrentWaveCount; // 0x1334	
	int32_t tectonic_shift_projectiles; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecEnemiesHit; // 0x1340	
	CUtlVector< int32 > m_vecProjectileHandles; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_PrimalBeast_Rock_Throw : public CDOTABaseAbility
{
public:
	int32_t base_damage; // 0x568	
	int32_t impact_radius; // 0x56c	
	int32_t fragment_impact_radius; // 0x570	
	int32_t fragment_impact_distance; // 0x574	
	int32_t min_range; // 0x578	
	float stun_duration; // 0x57c	
	ParticleIndex_t m_nFXPreview; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Muerta_Gunslinger : public CDOTA_Buff
{
public:
	float double_shot_chance; // 0x1318	
	float target_search_bonus_range; // 0x131c	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Muerta_PierceTheVeil : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Muerta_DeadShot : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x568	
	int32_t ricochet_radius_start; // 0x56c	
	int32_t ricochet_radius_end; // 0x570	
	int32_t speed; // 0x574	
	Vector m_vTargetPos; // 0x578	
	Vector m_vEndpoint; // 0x584	
	CHandle< CBaseEntity > m_hTreeTarget; // 0x590	
	Vector m_vRicochetDir; // 0x594	
private:
	[[maybe_unused]] uint8_t __pad05a0[0x8]; // 0x5a0
public:
	CUtlVector< CHandle< CBaseEntity > > m_vEnemyHeroVisibilityOnCast; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Muerta_DeadShot_Slow : public CDOTA_Buff
{
public:
	int32_t impact_slow_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Muerta_DeadShot_Fear : public CDOTA_Buff
{
public:
	Vector m_vFearDir; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Muerta_PierceTheVeil : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Muerta_PierceTheVeilTransform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Muerta_PierceTheVeil_Buff : public CDOTA_Buff
{
public:
	int32_t modelscale; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t spell_lifesteal; // 0x1320	
	int32_t attack_projectile_speed_bonus; // 0x1324	
	int32_t attack_range_bonus; // 0x1328	
	int32_t m_iOriginalAttackCapabilities; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Muerta_PierceTheVeil_MagicImmunityDamageCancel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Muerta_PierceTheVeil_SpellAmpBoost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Muerta_TheCalling_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Muerta_TheCalling : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_Muerta_Revenant_Thinker : public CDOTA_Buff
{
public:
	bool m_bSpiritsExplode; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t damage; // 0x131c	
	int32_t hit_radius; // 0x1320	
	int32_t dead_zone_distance; // 0x1324	
	float speed_initial; // 0x1328	
	float speed_max; // 0x132c	
	float acceleration; // 0x1330	
	int32_t num_revenants; // 0x1334	
	int32_t rotation_direction; // 0x1338	
	int32_t radius; // 0x133c	
	float rotation_initial; // 0x1340	
	int32_t show_warning; // 0x1344	
	ParticleIndex_t m_nWarningFX; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< sRevenantDef > m_SpiritDefs; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1368[0x18]; // 0x1368
public:
	int32_t m_nRevenantImpacts; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Muerta_TheCallingAuraSlow : public CDOTA_Buff
{
public:
	int32_t aura_movespeed_slow; // 0x1318	
	int32_t aura_attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Muerta_TheCalling_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Muerta_Gunslinger : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hAbilitySoulEntity"
class CDOTA_Ability_Muerta_PartingShot : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAbilitySoulEntity; // 0x568	
	CHandle< CBaseEntity > m_hTarget; // 0x56c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Muerta_PartingShot_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Muerta_PartingShot_SoulClone : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Muerta_PartingShot_SoulDebuff : public CDOTA_Buff
{
public:
	int32_t ethereal_damage_bonus; // 0x1318	
	int32_t movement_slow; // 0x131c	
	CHandle< CBaseEntity > m_hPhysicalBody; // 0x1320	
	ParticleIndex_t m_nTetherFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Muerta_PartingShot_ProjectileReturn : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1318	
	CHandle< CBaseEntity > m_hPhysicalBody; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Special_Bonus_Unique_Muerta_TrickShotCharges : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Bracer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Bracer : public CDOTA_Item
{
public:
	int32_t counter; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Bracer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t clock_time; // 0x1324	
	float bonus_health_regen; // 0x1328	
	int32_t bonus_damage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Gauntlets : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Gauntlets : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Circlet : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Circlet : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Slippers : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Slippers : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_WraithBand : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_WraithBand : public CDOTA_Item
{
public:
	int32_t counter; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_WraithBand : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t bonus_attack_speed; // 0x1324	
	int32_t clock_time; // 0x1328	
	float bonus_armor; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mantle : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Mantle : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_NullTalisman : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_NullTalisman : public CDOTA_Item
{
public:
	int32_t counter; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_NullTalisman : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	float bonus_mana_regen; // 0x1324	
	int32_t bonus_max_mana_percentage; // 0x1328	
	int32_t clock_time; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tango : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tango_Single : public CDOTA_Item
{
public:
	GameTime_t m_flCreationTime; // 0x610	
	float duration_to_use; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_TangoHeal : public CDOTA_Buff
{
public:
	float health_regen; // 0x1318	
	bool superheal; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	float m_fHealingDone; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlString m_sAbilityClassname; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Clarity : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ClarityPotion : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Flask : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_FlaskHealing : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1318	
	int32_t break_on_hero_damage; // 0x131c	
	float m_fHealingDone; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlString m_sAbilityClassname; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BootsOfSpeed : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BootsOfSpeed : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_BootsOfTravel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_BootsOfTravel_2 : public CDOTA_Item_Recipe_BootsOfTravel
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BootsOfTravel : public CDOTA_Item
{
public:
	float m_flTeleportTimeOverride; // 0x610	
	bool m_bPendingSellExcessScrolls; // 0x614	
	bool m_bQueueSellScrolls; // 0x615	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BootsOfTravel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BootsOfTravel_2 : public CDOTA_Modifier_Item_BootsOfTravel
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_BootsOfTravel_Incoming : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BootsOfTravel_2 : public CDOTA_Item_BootsOfTravel
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_PowerTreads : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_PowerTreads : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed_ranged; // 0x1318	
	int32_t bonus_movement_speed_melee; // 0x131c	
	int32_t bonus_attack_speed; // 0x1320	
	int32_t bonus_stat; // 0x1324	
	int32_t bonus_damage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_PowerTreads : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPowerTreadsStatChanged"
	int32_t m_iStat; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_PhaseBoots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PhaseBoots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_PhaseBoots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_damage_melee; // 0x131c	
	int32_t bonus_damage_range; // 0x1320	
	int32_t damage_block_melee; // 0x1324	
	int32_t damage_block_ranged; // 0x1328	
	int32_t block_chance; // 0x132c	
	int32_t bonus_attack_speed; // 0x1330	
	int32_t bonus_armor; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_PhaseBoots_Active : public CDOTA_Buff
{
public:
	int32_t phase_movement_speed; // 0x1318	
	int32_t phase_movement_speed_range; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_TranquilBoots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_TranquilBoots : public CDOTA_Item
{
public:
	int32_t break_count; // 0x610	
private:
	[[maybe_unused]] uint8_t __pad0614[0x4]; // 0x614
public:
	CUtlVector< GameTime_t > m_DamageList; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_TranquilBoots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t broken_movement_speed; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	int32_t bonus_health_regen; // 0x1324	
	int32_t break_threshold; // 0x1328	
	int32_t break_time; // 0x132c	
	int32_t break_count; // 0x1330	
	float m_flResetTime; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_TranquilBoots2 : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_TranquilBoots2 : public CDOTA_Item
{
public:
	int32_t break_count; // 0x610	
private:
	[[maybe_unused]] uint8_t __pad0614[0x4]; // 0x614
public:
	CUtlVector< GameTime_t > m_DamageList; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_TranquilBoots2 : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t broken_movement_speed; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	int32_t bonus_health_regen; // 0x1324	
	int32_t break_threshold; // 0x1328	
	int32_t break_time; // 0x132c	
	int32_t break_count; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Hermes_Sandals : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Hermes_Sandals : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Hermes_Sandals : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_damage_melee; // 0x131c	
	int32_t bonus_damage_range; // 0x1320	
	int32_t bonus_armor; // 0x1324	
	int32_t bonus_agility; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Hermes_Sandals_Active : public CDOTA_Buff
{
public:
	int32_t phase_movement_speed; // 0x1318	
	int32_t phase_movement_speed_range; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1320	
	bool m_bWasRooted; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Samurai_Tabi : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Samurai_Tabi : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_all_stats; // 0x1320	
	int32_t bonus_damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_Samurai_Tabi : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnSamurai_TabiStatChanged"
	int32_t m_iStat; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Item_Samurai_Tabi_Str : public CDOTA_Buff_Item
{
public:
	int32_t stat_per_tick; // 0x1318	
	int32_t bonus_all_stats; // 0x131c	
	float base_interval; // 0x1320	
	int32_t max_tick_count; // 0x1324	
	float str_root_duration; // 0x1328	
	float str_root_cooldown; // 0x132c	
	int32_t str_root_chance; // 0x1330	
	float str_bonus_damage; // 0x1334	
	int32_t iCurrentTickCount; // 0x1338	
	GameTime_t m_flLastRootTime; // 0x133c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Samurai_Tabi_Agi : public CDOTA_Buff_Item
{
public:
	int32_t stat_per_tick; // 0x1318	
	float base_interval; // 0x131c	
	int32_t max_tick_count; // 0x1320	
	int32_t bonus_all_stats; // 0x1324	
	int32_t agi_counter_chance; // 0x1328	
	float agi_counter_cooldown; // 0x132c	
	GameTime_t m_flLastCounterTime; // 0x1330	
	int32_t iCurrentTickCount; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Samurai_Tabi_Int : public CDOTA_Buff_Item
{
public:
	int32_t stat_per_tick; // 0x1318	
	float base_interval; // 0x131c	
	int32_t max_tick_count; // 0x1320	
	float int_damage_interval; // 0x1324	
	float int_damage_range; // 0x1328	
	float int_damage; // 0x132c	
	int32_t iCurrentTickCount; // 0x1330	
	int32_t int_max_targets; // 0x1334	
	GameTime_t m_flNextHit; // 0x1338	
	int32_t bonus_all_stats; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GlovesOfHaste : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifer_Item_GlovesOfHaste : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BeltOfStrength : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BeltOfStrength : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RobeOfMagi : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_RobeOfMagi : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BootsOfElven : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BootsOfElven : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BladesOfAttack : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BladesOfAttack : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iStoredRuneType"
class CDOTA_Item_EmptyBottle : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnStoredRuneChanged"
	int32_t m_iStoredRuneType; // 0x610	
	GameTime_t m_fStoredRuneTime; // 0x614	
	float rune_expire_time; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_EmptyBottle : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_BottleRegeneration : public CDOTA_Buff
{
public:
	int32_t health_restore; // 0x1318	
	int32_t mana_restore; // 0x131c	
	int32_t health_restore_pct; // 0x1320	
	int32_t mana_restore_pct; // 0x1324	
	int32_t break_on_hero_damage; // 0x1328	
	float m_fHealingDone; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DemonEdge : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_DemonEdge : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Eaglehorn : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_EagleHorn : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Reaver : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Reaver : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SacredRelic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SacredRelic : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Hyperstone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Hyperstone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RingOfHealth : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_RingOfHealth : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_VoidStone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_VoidStone : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MysticStaff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_MysticStaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_EnergyBooster : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_EnergyBooster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PointBooster : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_PointBooster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t bonus_health; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_VitalityBooster : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_VitalityBooster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Broadsword : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Broadsword : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Quarterstaff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Quarterstaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Claymore : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Claymore : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RingOfProtection : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_RingOfProtection : public CDOTA_Buff_Item
{
public:
	float bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_StoutShield : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_StoutShield : public CDOTA_Buff_Item
{
public:
	int32_t damage_block_melee; // 0x1318	
	int32_t damage_block_ranged; // 0x131c	
	int32_t block_chance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Javelin : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Javelin : public CDOTA_Buff_Item
{
public:
	int32_t bonus_chance; // 0x1318	
	int32_t bonus_chance_damage; // 0x131c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MithrilHammer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_MithrilHammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_ChainMail : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_ChainMail : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_HelmOfIronWill : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_HelmOfIronWill : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	float bonus_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PlateMail : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_PlateMail : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_QuellingBlade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_QuellingBlade : public CDOTA_Buff_Item
{
public:
	int32_t damage_bonus; // 0x1318	
	int32_t damage_bonus_ranged; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_IronwoodBranch : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_IronwoodBranch : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_OgreAxe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_OgreAxe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BladeOfAlacrity : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BladeOfAlacrity : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_StaffOfWizardry : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_StaffOfWizardry : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_UltimateOrb : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_UltimateOrb : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MaskOfDeath : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_MaskOfDeath : public CDOTA_Buff_Item
{
public:
	int32_t lifesteal_percent; // 0x1318	
	int32_t creep_lifesteal_reduction_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RingOfRegeneration : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_RingOfRegeneration : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BlinkDagger : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SuperBlinkDagger : public CDOTA_Item_BlinkDagger
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BlinkDagger : public CDOTA_Buff_Item
{
public:
	float blink_damage_cooldown; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SuperBlinkDagger : public CDOTA_Modifier_Item_BlinkDagger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SobiMask : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SobiMask : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GemOfTrueSight : public CDOTA_Item
{
public:
	int32_t m_iTempViewer; // 0x610	
	int32_t m_iTeam; // 0x614	
	int32_t m_nFXIndex; // 0x618	
	CHandle< CBaseEntity > m_hThinker; // 0x61c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_GemOfTrueSight : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Gem_Active_TrueSight : public CDOTA_Buff
{
public:
	int32_t active_radius; // 0x1318	
	float duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PlaneswalkersCloak : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_PlaneswalkersCloak : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magical_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MagicStick : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_MagicStick : public CDOTA_Buff_Item
{
public:
	int32_t charge_radius; // 0x1318	
	int32_t max_charges; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_MagicWand : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MagicWand : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_MagicWand : public CDOTA_Buff_Item
{
public:
	int32_t charge_radius; // 0x1318	
	int32_t max_charges; // 0x131c	
	int32_t bonus_all_stats; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_TalismanOfEvasion : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_TalismanOfEvasion : public CDOTA_Buff_Item
{
public:
	int32_t bonus_evasion; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GhostScepter : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_GhostScepter : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_GhostScepter_Active : public CDOTA_Buff
{
public:
	int32_t extra_spell_damage_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_HandOfMidas : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_HandOfMidas : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_HandOfMidas : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	float charge_gain_timer; // 0x131c	
	int32_t max_charges; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_OblivionStaff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_OblivionStaff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_OblivionStaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float bonus_mana_regen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Perseverance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Perseverance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Perseverance : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
	float bonus_mana_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_PoorMansShield : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PoorMansShield : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_PoorMansShield : public CDOTA_Buff_Item
{
public:
	int32_t damage_block_melee; // 0x1318	
	int32_t damage_block_ranged; // 0x131c	
	int32_t block_chance; // 0x1320	
	int32_t bonus_agility; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DustofAppearance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_DustofAppearance_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1318	
	float duration; // 0x131c	
	float linger_duration; // 0x1320	
	int32_t movespeed; // 0x1324	
	float damage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_DustofAppearance : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
	bool m_bCastOnInvisibleHero; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x900
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NoWardTrigger : public CBaseTrigger
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Buff_Wards : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_ObserverWard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_ObserverWard : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SentryWard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_SentryWard : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_WardTrueSight : public CDOTA_Buff
{
public:
	int32_t true_sight_range; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_TeleportScroll : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x610	
	ParticleIndex_t m_nFXOrigin; // 0x614	
	ParticleIndex_t m_nFXDestination; // 0x618	
	Vector m_vDestination; // 0x61c	
	int32_t m_iMinDistance; // 0x628	
	float m_flBaseTeleportTime; // 0x62c	
	float m_flExtraTeleportTime; // 0x630	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_DivineRapier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DivineRapier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_DivineRapier : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_spell_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_MonkeyKingBar : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MonkeyKingBar : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_MonkeyKingBar : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_chance; // 0x131c	
	int32_t bonus_chance_damage; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Radiance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Radiance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Radiance : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t evasion; // 0x131c	
	int32_t upgrade_day_vision; // 0x1320	
	int32_t aura_radius; // 0x1324	
	bool m_bLastToggleState; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Radiance_Debuff : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t aura_damage; // 0x1320	
	int32_t aura_damage_upgrade_bonus; // 0x1324	
	int32_t aura_damage_illusions; // 0x1328	
	int32_t blind_pct; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Butterfly : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Butterfly : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Butterfly_Extra : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Butterfly : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_evasion; // 0x1320	
	int32_t bonus_attack_speed_pct; // 0x1324	
	int32_t bonus_slow_resistance; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_GreaterCritical : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GreaterCritical : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_GreaterCritical : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t crit_chance; // 0x131c	
	int32_t crit_multiplier; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_CraniumBasher : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_CraniumBasher : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Item_CraniumBasher : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bash_chance_melee; // 0x131c	
	int32_t bash_chance_ranged; // 0x1320	
	float bash_duration; // 0x1324	
	float bash_cooldown; // 0x1328	
	int32_t bonus_chance_damage; // 0x132c	
	int32_t bonus_damage; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_AbyssalBlade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AbyssalBlade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Item_AbyssalBlade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bash_chance_melee; // 0x131c	
	int32_t bash_chance_ranged; // 0x1320	
	float bash_duration; // 0x1324	
	float bash_cooldown; // 0x1328	
	int32_t bonus_chance_damage; // 0x132c	
	int32_t bonus_damage; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	int32_t bonus_health; // 0x1350	
	float bonus_health_regen; // 0x1354	
	int32_t block_damage_ranged; // 0x1358	
	int32_t block_damage_melee; // 0x135c	
	int32_t block_chance; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Battlefury : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Battlefury : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Item_Battlefury : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	float bonus_health_regen; // 0x131c	
	float bonus_mana_regen; // 0x1320	
	int32_t cleave_damage_percent; // 0x1324	
	int32_t cleave_damage_percent_creep; // 0x1328	
	int32_t cleave_starting_width; // 0x132c	
	int32_t cleave_ending_width; // 0x1330	
	int32_t cleave_distance; // 0x1334	
	int32_t upgraded_cleave_bonus; // 0x1338	
	int32_t upgraded_damage_bonus; // 0x133c	
	int32_t quelling_bonus; // 0x1340	
	int32_t quelling_bonus_ranged; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_MantaStyle : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MantaStyle : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_MantaStyle : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_strength; // 0x131c	
	int32_t bonus_agility; // 0x1320	
	int32_t bonus_intellect; // 0x1324	
	int32_t bonus_movement_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Manta_Phase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Manta : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_LesserCritical : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_LesserCritical : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_LesserCritical : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t crit_chance; // 0x131c	
	int32_t crit_multiplier; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Armlet : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Armlet : public CDOTA_Item
{
public:
	float toggle_cooldown; // 0x610	
	GameTime_t m_flLastActivateTime; // 0x614	
	GameTime_t m_flLastDeactivateTime; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Armlet : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	int32_t bonus_health_regen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Armlet_UnholyStrength : public CDOTA_Buff
{
public:
	int32_t unholy_bonus_damage; // 0x1318	
	int32_t unholy_bonus_attack_speed; // 0x131c	
	int32_t unholy_bonus_strength; // 0x1320	
	int32_t unholy_bonus_armor; // 0x1324	
	int32_t unholy_health_drain_per_second; // 0x1328	
	int32_t str_tick_count; // 0x132c	
	int32_t unholy_bonus_slow_resistance; // 0x1330	
	float tick_interval; // 0x1334	
	float m_flDamageRemainder; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_InvisibilityEdge : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_InvisibilityEdge : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_InvisibilityEdge : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_InvisibilityEdge_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t windwalk_bonus_damage; // 0x1328	
	int32_t windwalk_movement_speed; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_SheepStick : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SheepStick : public CDOTA_Item
{
public:
	int32_t upgrade_radius; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_SheepStick : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	float bonus_mana_regen; // 0x1324	
	int32_t bonus_mana; // 0x1328	
	int32_t cast_range_bonus; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SheepStick_Debuff : public CDOTA_Modifier_Hexed
{
public:
	float sheep_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_OrchidMalevolence : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_OrchidMalevolence : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_OrchidMalevolence : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	float bonus_health_regen; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	int32_t bonus_attack_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_OrchidMalevolence_Debuff : public CDOTA_Buff
{
public:
	float silence_damage_percent; // 0x1318	
	float m_flDamageTaken; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_RodOfAtos : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RodOfAtos : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_RodOfAtos : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t bonus_hp; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_RodOfAtos_Debuff : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Cyclone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Cyclone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Cyclone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_movement_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Eul_Cyclone : public CDOTA_Modifier_Cyclone
{
public:
	CHandle< CBaseEntity > m_hBlocker; // 0x1330	
	bool m_bBlockerCreated; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Eul_Cyclone_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_ForceStaff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_ForceStaff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_ForceStaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_ForceStaff : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float push_length; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Dagon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Dagon2 : public CDOTA_Item_Recipe_Dagon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Dagon3 : public CDOTA_Item_Recipe_Dagon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Dagon4 : public CDOTA_Item_Recipe_Dagon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Dagon5 : public CDOTA_Item_Recipe_Dagon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dagon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Dagon : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dagon_Upgraded : public CDOTA_Item_Dagon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dagon_Upgraded2 : public CDOTA_Item_Dagon_Upgraded
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dagon_Upgraded3 : public CDOTA_Item_Dagon_Upgraded
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dagon_Upgraded4 : public CDOTA_Item_Dagon_Upgraded
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dagon_Upgraded5 : public CDOTA_Item_Dagon_Upgraded
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Dagon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_int; // 0x1318	
	int32_t bonus_str; // 0x131c	
	int32_t bonus_agi; // 0x1320	
	float passive_spell_lifesteal; // 0x1324	
	float dagon_spell_lifesteal; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_RefresherOrb : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RefresherOrb : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_RefresherOrb : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health_regen; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RefresherOrb_Shard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_RefresherShard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health_regen; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_UltimateScepter : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_UltimateScepter_2 : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_UltimateScepter_2 : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_UltimateScepter : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_UltimateScepter_Roshan : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_UltimateScepter : public CDOTA_Buff_Item
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t bonus_all_stats; // 0x131c	
	int32_t bonus_health; // 0x1320	
	int32_t bonus_mana; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_UltimateScepter_Consumed : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_UltimateScepter_Consumed_Alchemist : public CDOTA_Modifier_Item_UltimateScepter_Consumed
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t bonus_all_stats; // 0x131c	
	int32_t bonus_health; // 0x1320	
	int32_t bonus_mana; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Assault_Cuirass : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Assault_Cuirass : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Assault_Cuirass_Positive_Aura : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Assault_Cuirass_Positive : public CDOTA_Buff
{
public:
	int32_t aura_attack_speed; // 0x1318	
	int32_t aura_positive_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Assault_Cuirass_Negative_Armor_Aura : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Assault_Cuirass_Negative_Armor : public CDOTA_Buff
{
public:
	int32_t aura_negative_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Assault_Cuirass : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Heart : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Heart : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Heart : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_health; // 0x131c	
	float health_regen_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Black_King_Bar : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Black_King_Bar : public CDOTA_Item
{
public:
	bool m_bActive; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Black_King_Bar_Immune : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t model_scale; // 0x1318	
	int32_t magic_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Black_King_Bar : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	float duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Aegis : public CDOTA_Buff_Item
{
public:
	float reincarnate_time; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aegis_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Aegis : public CDOTA_Item
{
public:
	int32_t m_iKillerTeam; // 0x610	
	GameTime_t m_fEquipTime; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "AbilityID_t m_vecChoices"
class CDOTA_Item_TierToken : public CDOTA_Item
{
public:
	// MNetworkEnable
	AbilityID_t m_vecChoices[5]; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Shivas_Guard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Shivas_Guard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Shivas_Guard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	int32_t aura_radius; // 0x1320	
	int32_t bonus_hp_regen; // 0x1324	
	int32_t bonus_strength; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Shivas_Guard_Aura : public CDOTA_Buff
{
public:
	int32_t aura_attack_speed; // 0x1318	
	int32_t hp_regen_degen_aura; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Item_Shivas_Guard_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1318	
	GameTime_t m_fLastThink; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1320	
	CountdownTimer m_ViewerTimer; // 0x1338	
	int32_t blast_speed; // 0x1350	
	int32_t blast_radius; // 0x1354	
	int32_t blast_damage; // 0x1358	
	int32_t illusion_multiplier_pct; // 0x135c	
	float blast_debuff_duration; // 0x1360	
	float resist_debuff_duration; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Shivas_Guard_Blast : public CDOTA_Buff
{
public:
	int32_t blast_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Bloodstone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Bloodstone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Bloodstone_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Bloodstone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t bonus_aoe; // 0x1320	
	float spell_lifesteal; // 0x1324	
	float lifesteal_multiplier; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Bloodstone_Drained : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Sange : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Sange : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Sange : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t hp_regen_amp; // 0x131c	
	int32_t status_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Yasha : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Yasha : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Yasha : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t movement_speed_percent_bonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_SangeAndYasha : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SangeAndYasha : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_SangeAndYasha : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t movement_speed_percent_bonus; // 0x1320	
	int32_t bonus_strength; // 0x1324	
	int32_t hp_regen_amp; // 0x1328	
	int32_t status_resistance; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_MaskOfMadness : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MaskOfMadness : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_MaskOfMadness : public CDOTA_Buff_Item
{
public:
	int32_t lifesteal_percent; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	int32_t creep_lifesteal_reduction_pct; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_MaskOfMadness_Berserk : public CDOTA_Buff
{
public:
	int32_t berserk_bonus_attack_speed; // 0x1318	
	int32_t berserk_bonus_movement_speed; // 0x131c	
	int32_t berserk_armor_reduction; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Sphere : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Sphere : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Sphere : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
	float bonus_health_regen; // 0x131c	
	float bonus_mana_regen; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	float block_cooldown; // 0x1328	
	float upgrade_absorb_duration; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Sphere_Target : public CDOTA_Buff_Item
{
public:
	float upgrade_absorb_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Sphere_Upgrade_Absorb : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1318	
	bool m_bStartedTimer; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	int32_t m_flDamageAbsorbed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Vanguard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Vanguard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Vanguard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	float bonus_health_regen; // 0x131c	
	int32_t block_damage_ranged; // 0x1320	
	int32_t block_damage_melee; // 0x1324	
	int32_t block_chance; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Crimson_Guard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Crimson_Guard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Crimson_Guard_Extra : public CDOTA_Buff
{
public:
	int32_t block_chance_active; // 0x1318	
	int32_t block_damage_active; // 0x131c	
	int32_t strength_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Crimson_Guard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	float bonus_health_regen; // 0x131c	
	float bonus_armor; // 0x1320	
	int32_t block_damage_ranged; // 0x1324	
	int32_t block_damage_melee; // 0x1328	
	int32_t block_chance; // 0x132c	
	int32_t bonus_aoe_radius; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Crimson_Guard_NoStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Blade_Mail : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Blade_Mail : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Blade_Mail_Reflect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Blade_Mail : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t passive_reflection_constant; // 0x1324	
	int32_t passive_reflection_pct; // 0x1328	
	int32_t active_reflection_pct; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Soul_Booster : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Soul_Booster : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Soul_Booster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t bonus_magical_armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Hood_Of_Defiance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Hood_Of_Defiance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Hood_Of_Defiance_Barrier : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1318	
	int32_t barrier_amount; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Hood_Of_Defiance : public CDOTA_Buff_Item
{
public:
	int32_t bonus_spell_resist; // 0x1318	
	float bonus_health_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Mekansm : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mekansm : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Mekansm : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Mekansm_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Mekansm_Noheal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Vladmir : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Vladmir : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Vladmir : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Vladmir_Aura : public CDOTA_Buff
{
public:
	int32_t lifesteal_aura; // 0x1318	
	int32_t damage_aura; // 0x131c	
	float armor_aura; // 0x1320	
	float mana_regen_aura; // 0x1324	
	int32_t creep_lifesteal_reduction_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Buckler : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Buckler : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t bonus_aoe_radius; // 0x131c	
	float armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Buckler_Effect : public CDOTA_Buff
{
public:
	float bonus_aoe_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Buckler : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ring_Of_Basilius : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ring_Of_Basilius : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ring_Of_Basilius : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1318	
	float mana_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ring_Of_Basilius_Effect : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Pipe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Pipe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Pipe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
	float health_regen; // 0x131c	
	int32_t magic_resistance; // 0x1320	
	int32_t aura_radius; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Pipe_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1318	
	int32_t magic_resistance_aura; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Pipe_Barrier : public CDOTA_Buff
{
public:
	int32_t barrier_amount; // 0x1318	
	int32_t barrier_block; // 0x131c	
	int32_t barrier_block_creep; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Pipe_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Urn_Of_Shadows : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Urn_Of_Shadows : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Urn_Of_Shadows : public CDOTA_Buff_Item
{
public:
	float mana_regen; // 0x1318	
	int32_t bonus_all_stats; // 0x131c	
	float bonus_armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Urn_Heal : public CDOTA_Buff
{
public:
	int32_t soul_heal_amount; // 0x1318	
	float m_fHealingDone; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Urn_Damage : public CDOTA_Buff
{
public:
	int32_t soul_damage_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Headdress : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Headdress : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Headdress : public CDOTA_Buff_Item
{
public:
	float health_regen; // 0x1318	
	int32_t aura_radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Headdress_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Satanic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Satanic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Satanic : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_strength; // 0x131c	
	int32_t lifesteal_percent; // 0x1320	
	int32_t unholy_lifesteal_percent; // 0x1324	
	int32_t creep_lifesteal_reduction_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Satanic_Unholy : public CDOTA_Buff
{
public:
	int32_t unholy_lifesteal_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_HelmOfTheDominator : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_HelmOfTheDominator_2 : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_HelmOfTheOverlord : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_HelmOfTheDominator : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_HelmOfTheDominator_2 : public CDOTA_Item_HelmOfTheDominator
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_HelmOfTheOverlord : public CDOTA_Item_HelmOfTheDominator
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_HelmOfTheDominator : public CDOTA_Buff_Item
{
public:
	int32_t bonus_stats; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	float bonus_regen; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_HelmOfTheDominator_2 : public CDOTA_Modifier_Item_HelmOfTheDominator
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_HelmOfTheDominator_BonusHealth : public CDOTA_Buff
{
public:
	int32_t health_min; // 0x1318	
	int32_t new_max; // 0x131c	
	int32_t health_bonus; // 0x1320	
	int32_t model_scale; // 0x1324	
	int32_t creep_bonus_damage; // 0x1328	
	int32_t creep_bonus_hp_regen; // 0x132c	
	int32_t creep_bonus_mp_regen; // 0x1330	
	int32_t creep_bonus_armor; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Desolator : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Desolator : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Item_Desolator : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_damage_per_kill; // 0x131c	
	int32_t bonus_damage_per_assist; // 0x1320	
	int32_t max_damage; // 0x1324	
	float corruption_duration; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x4]; // 0x132c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Desolator_Corruption : public CDOTA_Buff
{
public:
	int32_t corruption_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Revenants_Brooch : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Revenants_Brooch : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Item_Revenants_Brooch : public CDOTA_Buff_Item
{
public:
	bool m_bScepter; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t bonus_damage; // 0x131c	
	int32_t spell_lifesteal; // 0x1320	
	int32_t bonus_spell_lifesteal; // 0x1324	
	int32_t manacost_per_hit; // 0x1328	
	bool m_bActive; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Eagle_Eye : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_EagleEye : public CDOTA_Item
{
public:
	int32_t m_iTempViewer; // 0x610	
	int32_t m_iTeam; // 0x614	
	int32_t m_nFXIndex; // 0x618	
	CHandle< CBaseEntity > m_hThinker; // 0x61c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_EagleEye : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1318	
	int32_t bonus_agi; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Tenderizer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tenderizer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Item_Tenderizer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bash_chance_melee; // 0x1320	
	int32_t bash_chance_ranged; // 0x1324	
	float bash_duration; // 0x1328	
	float bash_cooldown; // 0x132c	
	int32_t bonus_chance_damage; // 0x1330	
	int32_t bonus_damage; // 0x1334	
	int32_t weaken_per_hit; // 0x1338	
	float weaken_duration; // 0x133c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Tenderizer_Weaken : public CDOTA_Modifier_Stacking_Base
{
public:
	int32_t weaken_per_hit; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Boots_Of_Bearing : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Boots_Of_Bearing : public CDOTA_Item
{
public:
	int32_t radius; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Boots_Of_Bearing : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1318	
	int32_t bonus_movement_speed; // 0x131c	
	int32_t bonus_health_regen; // 0x1320	
	int32_t bonus_str; // 0x1324	
	int32_t bonus_int; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Boots_Of_Bearing_Aura : public CDOTA_Buff
{
public:
	int32_t aura_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Boots_Of_Bearing_Active : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed_pct; // 0x1318	
	int32_t bonus_movement_speed_pct; // 0x131c	
	float bonus_ms_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_VoidwalkerScythe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_VoidwalkerScythe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Item_VoidwalkerScythe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t attacks; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float buff_duration; // 0x1324	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
	int32_t m_nCounter; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Voidwalker_Phased : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float max_damage_duration; // 0x131c	
	int32_t attack_range_bonus; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
	bool bAttackRange; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float m_flStartTime; // 0x1344	
	float m_flFadeTime; // 0x1348	
	float m_flDamageScale; // 0x134c	
	float duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_WraithPact : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_WraithPact : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hWard; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_WraithPact : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t bonus_health; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_WraithPact_Thinker : public CDOTA_Buff
{
public:
	int32_t pact_aura_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	float aura_dps; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_WraithPact_DeathAura : public CDOTA_Buff
{
public:
	int32_t armor_penalty_aura; // 0x1318	
	int32_t damage_penalty_aura; // 0x131c	
	float aura_dps; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Skadi : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Skadi : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Skadi : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
	int32_t bonus_health; // 0x131c	
	int32_t bonus_mana; // 0x1320	
	float cold_duration; // 0x1324	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Skadi_Slow : public CDOTA_Buff
{
public:
	int32_t cold_slow_melee; // 0x1318	
	int32_t cold_slow_ranged; // 0x131c	
	int32_t cold_attack_slow_melee; // 0x1320	
	int32_t cold_attack_slow_ranged; // 0x1324	
	int32_t heal_reduction; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Mjollnir : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mjollnir : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_MjollnirChain : public CDOTA_Buff
{
public:
	int32_t chain_radius; // 0x1318	
	int32_t chain_strikes; // 0x131c	
	int32_t chain_damage; // 0x1320	
	float chain_delay; // 0x1324	
	int32_t chain_damage_per_charge; // 0x1328	
	int32_t m_iCurJumpCount; // 0x132c	
	Vector m_vCurTargetLoc; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Item_Mjollnir : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t chain_chance; // 0x1320	
	int32_t chain_strikes; // 0x1324	
	int32_t chain_damage; // 0x1328	
	int32_t chain_radius; // 0x132c	
	int32_t chain_damage_per_charge; // 0x1330	
	int32_t max_charges; // 0x1334	
	float chain_cooldown; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	CountdownTimer m_ChainTimer; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Item_Mjollnir_Static : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t static_chance; // 0x1320	
	int32_t static_strikes; // 0x1324	
	int32_t static_damage; // 0x1328	
	int32_t static_primary_radius; // 0x132c	
	int32_t static_seconary_radius; // 0x1330	
	int32_t static_radius; // 0x1334	
	float static_cooldown; // 0x1338	
	int32_t chain_damage_per_charge; // 0x133c	
	CountdownTimer m_StaticTimer; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Maelstrom : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Maelstrom : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_MaelstromChain : public CDOTA_Buff
{
public:
	int32_t chain_radius; // 0x1318	
	int32_t chain_strikes; // 0x131c	
	int32_t chain_damage; // 0x1320	
	float chain_delay; // 0x1324	
	int32_t m_iCurJumpCount; // 0x1328	
	Vector m_vCurTargetLoc; // 0x132c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Item_Maelstrom : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t chain_chance; // 0x1320	
	int32_t chain_strikes; // 0x1324	
	int32_t chain_damage; // 0x1328	
	int32_t chain_radius; // 0x132c	
	float chain_cooldown; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	CountdownTimer m_ChainTimer; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Diffusal_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Diffusal_Blade2 : public CDOTA_Item_Recipe_Diffusal_Blade
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Diffusal_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Diffusal_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
	float damage_per_burn; // 0x1320	
	int32_t feedback_mana_burn; // 0x1324	
	int32_t feedback_mana_burn_illusion_melee; // 0x1328	
	int32_t feedback_mana_burn_illusion_ranged; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Diffusal_Blade_Slow : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Diffusal_Blade_Level2 : public CDOTA_Item_Diffusal_Blade
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ethereal_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ethereal_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Ethereal_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t bonus_mana; // 0x1324	
	float bonus_mana_regen; // 0x1328	
	int32_t bonus_cast_range; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ethereal_Blade_Ethereal : public CDOTA_Buff
{
public:
	int32_t ethereal_damage_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ethereal_Blade_Slow : public CDOTA_Buff
{
public:
	int32_t blast_movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Soul_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Soul_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Soul_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	float bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Soul_Ring_Buff : public CDOTA_Buff
{
public:
	int32_t m_iTempExtraMaxMana; // 0x1318	
	int32_t m_iManaToRemove; // 0x131c	
	float duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Necronomicon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Necronomicon_2 : public CDOTA_Item_Recipe_Necronomicon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Necronomicon_3 : public CDOTA_Item_Recipe_Necronomicon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Necronomicon : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hWarrior; // 0x610	
	CHandle< CBaseEntity > m_hArcher; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Necronomicon_Level2 : public CDOTA_Item_Necronomicon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Necronomicon_Level3 : public CDOTA_Item_Necronomicon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Necronomicon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	float bonus_mana_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Necronomicon_2 : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1318	
	int32_t bonus_strength; // 0x131c	
	int32_t aura_radius; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Necronomicon_3 : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1318	
	int32_t bonus_strength; // 0x131c	
	int32_t aura_radius; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Necronomicon_Mana_Aura : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Necronomicon_Mana_Aura_2 : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Necronomicon_Mana_Aura_3 : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necronomicon_Warrior_ManaBurn : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necronomicon_Warrior_ManaBurn : public CDOTA_Buff
{
public:
	int32_t burn_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necronomicon_Warrior_LastWill : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necronomicon_Warrior_LastWill : public CDOTA_Buff
{
public:
	int32_t explosion; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necronomicon_Warrior_Sight : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necronomicon_Warrior_Sight : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necronomicon_Archer_ManaBurn : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necronomicon_Archer_Purge : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necronomicon_Archer_Purge : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Necronomicon_Archer_AoE : public CDOTABaseAbility
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Necronomicon_Archer_AoE : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Necronomicon_Archer_Aura : public CDOTA_Buff
{
public:
	int32_t ms_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Courier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Flying_Courier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Cheese : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Royale_With_Cheese : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Royale_With_Cheese : public CDOTA_Buff
{
public:
	float shield; // 0x1318	
	float regen; // 0x131c	
	float idle; // 0x1320	
	int32_t m_nDamageAbsorbed; // 0x1324	
	GameTime_t m_timeLastTick; // 0x1328	
	GameTime_t m_timeLastDamage; // 0x132c	
	ParticleIndex_t nFXIndex; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Arcane_Boots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Arcane_Boots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Arcane_Boots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t aura_radius; // 0x1320	
	float mana_regen; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ArcaneBoots_ManaRegen : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Orb_of_Venom : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Orb_of_Venom : public CDOTA_Buff_Item
{
public:
	int32_t poison_movement_speed_melee; // 0x1318	
	int32_t poison_movement_speed_range; // 0x131c	
	float poison_duration; // 0x1320	
	float poison_damage_melee; // 0x1324	
	float poison_damage_range; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Orb_of_Venom_Slow : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	float slow; // 0x131c	
	float damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ancient_Janggo : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ancient_Janggo : public CDOTA_Item
{
public:
	int32_t radius; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Ancient_Janggo : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1318	
	int32_t bonus_str; // 0x131c	
	int32_t bonus_int; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ancient_Janggo_Aura : public CDOTA_Buff
{
public:
	int32_t aura_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ancient_Janggo_Active : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed_pct; // 0x1318	
	int32_t bonus_movement_speed_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Medallion_Of_Courage : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Medallion_Of_Courage : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Medallion_Of_Courage : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	float bonus_mana_regen_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Medallion_Of_Courage_Armor_Addition : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Medallion_Of_Courage_Armor_Reduction : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Smoke_Of_Deceit : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Smoke_Of_Deceit : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_movement_speed; // 0x1328	
	int32_t visibility_radius; // 0x132c	
	int32_t secondary_application_radius; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Smoke_Of_Deceit_Secondary_Application_Cooldown : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Veil_Of_Discord : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Veil_Of_Discord : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Veil_Of_Discord_Thinker : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t debuff_radius; // 0x131c	
	float resist_debuff_duration; // 0x1320	
	int32_t m_nHeroesHit; // 0x1324	
	bool m_bHitInvisibleHero; // 0x1328	
	bool m_bFirstPulse; // 0x1329	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Veil_Of_Discord : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t bonus_hp_regen; // 0x131c	
	int32_t bonus_all_stats; // 0x1320	
	int32_t bonus_aoe; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Veil_Of_Discord_Debuff : public CDOTA_Buff
{
public:
	int32_t spell_amp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_HeavensHalberd : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_HeavensHalberd : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_HeavensHalberd : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t hp_regen_amp; // 0x131c	
	int32_t bonus_evasion; // 0x1320	
	int32_t status_resistance; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_HeavensHalberd_Debuff : public CDOTA_Buff
{
public:
	bool m_bPierceDebuffImmunity; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_RingOfAquila : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_RingOfAquila_Aura : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t aura_radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_RingOfAquila_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t aura_bonus_armor; // 0x1318	
	float aura_mana_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RingOfAquila : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_RingOfAquila : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	int32_t bonus_armor; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_ShadowAmulet : public CDOTA_Item
{
public:
	GameTime_t m_flLastTimeCast; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_ShadowAmulet_Fade : public CDOTA_Buff
{
public:
	float fade_time; // 0x1318	
	GameTime_t m_flFadeTime; // 0x131c	
	bool m_bFaded; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Moonshard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Moonshard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Moonshard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_night_vision; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Moonshard_Consumed : public CDOTA_Buff
{
public:
	int32_t consumed_bonus; // 0x1318	
	int32_t consumed_bonus_night_vision; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Silver_Edge : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Silver_Edge : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Item_Silver_Edge : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_attack_speed; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	int32_t crit_chance; // 0x1328	
	int32_t crit_multiplier; // 0x132c	
	float backstab_duration; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Silver_Edge_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t windwalk_bonus_damage; // 0x1328	
	int32_t windwalk_movement_speed; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Silver_Edge_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_GlimmerCape : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GlimmerCape : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_GlimmerCape_Building_Limit : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_GlimmerCape : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magical_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_GlimmerCape_Fade : public CDOTA_Buff
{
public:
	int32_t active_movement_speed; // 0x1318	
	int32_t barrier_block; // 0x131c	
	int32_t barrier_amount; // 0x1320	
	float initial_fade_delay; // 0x1324	
	float secondary_fade_delay; // 0x1328	
	float m_flFadeTime; // 0x132c	
	float m_flCurentFadeDelay; // 0x1330	
	GameTime_t m_flLastActionTime; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Solar_Crest : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Solar_Crest : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Solar_Crest : public CDOTA_Buff_Item
{
public:
	float bonus_mana; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	int32_t bonus_all_stats; // 0x1320	
	int32_t bonus_health; // 0x1324	
	int32_t self_movement_speed; // 0x1328	
	ParticleIndex_t nFXIndex; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Solar_Crest_Armor_Addition : public CDOTA_Buff
{
public:
	int32_t target_armor; // 0x1318	
	int32_t target_attack_speed; // 0x131c	
	int32_t target_movement_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Solar_Crest_Armor_Reduction : public CDOTA_Buff
{
public:
	int32_t target_armor; // 0x1318	
	int32_t target_attack_speed; // 0x131c	
	int32_t target_movement_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ward_Dispenser : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ward_Dispenser : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ward_Dispenser : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Ward_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ward_Maker : public CDOTA_Item
{
public:
	float sentry_refresh; // 0x610	
	int32_t max_sentry_charges; // 0x614	
	GameTime_t m_flLastThinkTime; // 0x618	
	float m_flTimeAccumulator; // 0x61c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ward_Maker : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Guardian_Greaves : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Guardian_Greaves : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Guardian_Greaves : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t bonus_mres; // 0x1320	
	int32_t bonus_armor; // 0x1324	
	int32_t aura_radius; // 0x1328	
	float mana_regen; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Guardian_Greaves_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1318	
	float aura_armor; // 0x131c	
	float aura_health_regen_bonus; // 0x1320	
	float aura_armor_bonus; // 0x1324	
	float aura_mana_regen; // 0x1328	
	float aura_mana_regen_bonus; // 0x132c	
	int32_t aura_bonus_threshold; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Enchanted_Mango : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Enchanted_Mango : public CDOTA_Buff_Item
{
public:
	float hp_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Famango : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GreatFamango : public CDOTA_Item_Famango
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_GreaterFamango : public CDOTA_Item_Famango
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_GreatFamango : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_GreaterFamango : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Lotus_Orb : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Lotus_Orb : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Lotus_Orb : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	int32_t bonus_mana; // 0x1324	
	float block_cooldown; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14f8
// Has VTable
class CDOTA_Modifier_Item_Lotus_Orb_Active : public CDOTA_Buff
{
public:
	CModifierParams m_LastParams; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lotus_Orb_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Lotus_Orb_ChannelCheck : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAbility; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	Vector m_vLocation; // 0x1320	
	GameTime_t m_fChannelEnd; // 0x132c	
	bool m_bInterrupt; // 0x1330	
	bool m_bExpired; // 0x1331	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Octarine_Core : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Octarine_Core : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Octarine_Core : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	float bonus_cooldown; // 0x1320	
	float bonus_health_regen; // 0x1324	
	float bonus_mana_regen; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Faerie_Fire : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Faerie_Fire : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_DragonLance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DragonLance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_DragonLance : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_strength; // 0x131c	
	int32_t base_attack_range; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Aether_Lens : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Aether_Lens : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aether_Lens : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t cast_range_bonus; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_AetherialHalo : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AetherialHalo : public CDOTA_Item
{
public:
	ParticleIndex_t m_nFXIndex; // 0x610	
	ParticleIndex_t m_nFXIndexB; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_AetherialHalo : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	float spell_amp; // 0x1324	
	float mana_regen_multiplier; // 0x1328	
	float spell_lifesteal_amp; // 0x132c	
	int32_t bonus_aoe; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_AetherialHalo_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1318	
	float land_time; // 0x131c	
	float burn_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_AetherialHalo_Burn : public CDOTA_Buff
{
public:
	int32_t burn_dps_buildings; // 0x1318	
	int32_t burn_dps_units; // 0x131c	
	float burn_interval; // 0x1320	
	int32_t burn_slow; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Iron_Talon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Iron_Talon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Iron_Talon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	float bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Bloodthorn : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Bloodthorn : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Item_Bloodthorn : public CDOTA_Buff_Item
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	int32_t bonus_intellect; // 0x1330	
	float bonus_mana_regen; // 0x1334	
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t spell_amp; // 0x1340	
	int32_t mana_regen_multiplier; // 0x1344	
	int32_t bonus_magic_resist; // 0x1348	
	float duration; // 0x134c	
	int32_t proc_damage; // 0x1350	
	int32_t proc_chance; // 0x1354	
	float bonus_health_regen; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Bloodthorn_Debuff : public CDOTA_Buff
{
public:
	float target_crit_multiplier; // 0x1318	
	float silence_damage_percent; // 0x131c	
	int32_t proc_damage; // 0x1320	
	float m_flDamageTaken; // 0x1324	
	CUtlVector< int16 > m_vRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_EchoSabre : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_EchoSabre : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_EchoSabre : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float bonus_mana_regen; // 0x1324	
	int32_t bonus_strength; // 0x1328	
	float slow_duration; // 0x132c	
	bool bonus_speed; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EchoSabre_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	int32_t attack_speed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Blight_Stone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Blight_Stone : public CDOTA_Buff_Item
{
public:
	float corruption_duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Blight_Stone_Corruption : public CDOTA_Buff
{
public:
	int32_t corruption_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_WindLace : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_WindLace : public CDOTA_Buff_Item
{
public:
	int32_t movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tome_Of_Knowledge : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tome_Of_Knowledge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tome_Of_Knowledge_Consumed : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Hurricane_Pike : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Hurricane_Pike : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Hurricane_Pike : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
	int32_t bonus_agility; // 0x1320	
	int32_t bonus_strength; // 0x1324	
	int32_t base_attack_range; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Hurricane_Pike_Active : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float push_length; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Hurricane_Pike_Active_Alternate : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float enemy_length; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Hurricane_Pike_Range : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t max_attacks; // 0x131c	
	int32_t m_iNumAttacks; // 0x1320	
	bool bActive; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	int32_t bonus_attack_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Infused_Raindrop : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Infused_Raindrop : public CDOTA_Buff_Item
{
public:
	float mana_regen; // 0x1318	
	float bonus_armor; // 0x131c	
	int32_t bonus_magical_armor; // 0x1320	
	int32_t magic_damage_block; // 0x1324	
	int32_t min_damage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iRiverPaintColor"
class CDOTA_Item_RiverPainter : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnRiverColorChanged"
	int32_t m_iRiverPaintColor; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RiverPainter2 : public CDOTA_Item_RiverPainter
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RiverPainter3 : public CDOTA_Item_RiverPainter
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RiverPainter4 : public CDOTA_Item_RiverPainter
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RiverPainter5 : public CDOTA_Item_RiverPainter
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RiverPainter6 : public CDOTA_Item_RiverPainter
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RiverPainter7 : public CDOTA_Item_RiverPainter
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_MeteorHammer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MeteorHammer : public CDOTA_Item
{
public:
	ParticleIndex_t m_nFXIndex; // 0x610	
	ParticleIndex_t m_nFXIndexB; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_MeteorHammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_agility; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	float spell_amp; // 0x1324	
	float mana_regen_multiplier; // 0x1328	
	float spell_lifesteal_amp; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_MeteorHammer_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1318	
	float land_time; // 0x131c	
	float burn_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_MeteorHammer_Burn : public CDOTA_Buff
{
public:
	int32_t burn_dps_buildings; // 0x1318	
	int32_t burn_dps_units; // 0x131c	
	float burn_interval; // 0x1320	
	int32_t burn_slow; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Nullifier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Nullifier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nullifier : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t bonus_regen; // 0x131c	
	int32_t bonus_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Nullifier_Mute : public CDOTA_Buff
{
public:
	float slow_interval_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Nullifier_Slow : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Spirit_Vessel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Spirit_Vessel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Spirit_Vessel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	float bonus_armor; // 0x1320	
	int32_t bonus_all_stats; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Spirit_Vessel_Heal : public CDOTA_Buff
{
public:
	int32_t soul_heal_amount; // 0x1318	
	float m_fHealingDone; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Spirit_Vessel_Damage : public CDOTA_Buff
{
public:
	int32_t hp_regen_reduction_enemy; // 0x1318	
	int32_t soul_damage_amount; // 0x131c	
	float enemy_hp_drain; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_AeonDisk : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AeonDisk : public CDOTA_Item
{
public:
	int32_t m_nUses; // 0x610	
	int32_t max_level; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_AeonDisk : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t health_threshold_pct; // 0x1320	
	float buff_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_AeonDisk_Buff : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Kaya : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Kaya : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Kaya : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	int32_t spell_amp; // 0x131c	
	int32_t mana_regen_multiplier; // 0x1320	
	int32_t spell_lifesteal_amp; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PocketTower : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PocketRoshan : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Crown : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Crown : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Holy_Locket : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Holy_Locket : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Holy_Locket : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1318	
	int32_t bonus_health; // 0x131c	
	int32_t bonus_mana; // 0x1320	
	int32_t heal_increase; // 0x1324	
	int32_t charge_radius; // 0x1328	
	int32_t max_charges; // 0x132c	
	int32_t bonus_all_stats; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Holy_Locket_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Kaya_And_Sange : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Kaya_And_Sange : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Kaya_And_Sange : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t hp_regen_amp; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t spell_amp; // 0x1324	
	int32_t mana_regen_multiplier; // 0x1328	
	int32_t status_resistance; // 0x132c	
	int32_t spell_lifesteal_amp; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Yasha_And_Kaya : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Yasha_And_Kaya : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Yasha_And_Kaya : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t movement_speed_percent_bonus; // 0x1320	
	int32_t bonus_intellect; // 0x1324	
	int32_t spell_amp; // 0x1328	
	int32_t mana_regen_multiplier; // 0x132c	
	int32_t spell_lifesteal_amp; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Yasha_And_Kaya_Maim : public CDOTA_Buff
{
public:
	int32_t maim_slow_movement; // 0x1318	
	int32_t maim_slow_attack; // 0x131c	
	int32_t maim_slow_movement_range; // 0x1320	
	int32_t maim_slow_attack_range; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_RingOfTarrasque : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_RingOfTarrasque : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
	int32_t bonus_health; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Diadem : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Diadem : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Blood_Grenade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Blood_Grenade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Blood_Grenade_Flight_Thinker : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t damage_over_time; // 0x1320	
	int32_t impact_damage; // 0x1324	
	float debuff_duration; // 0x1328	
	int32_t movespeed_slow; // 0x132c	
	float tick_rate; // 0x1330	
	ParticleIndex_t m_nFXIndex; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Blood_Grenade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Blood_Grenade_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	float damage_over_time; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Phylactery : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Phylactery : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Item_Phylactery : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	float bonus_mana_regen; // 0x1320	
	int32_t bonus_spell_damage; // 0x1324	
	float slow_duration; // 0x1328	
	int32_t bonus_all_stats; // 0x132c	
	CUtlVector< CDOTABaseAbility* > vecActivatedAbilities; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Phylactery_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Disperser : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Disperser : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Disperser : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
	int32_t bonus_attack_speed; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	float bonus_mana_regen; // 0x1328	
	float damage_per_burn; // 0x132c	
	int32_t feedback_mana_burn; // 0x1330	
	int32_t feedback_mana_burn_illusion_melee; // 0x1334	
	int32_t feedback_mana_burn_illusion_ranged; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Disperser_Evasion_Buff : public CDOTA_Buff
{
public:
	int32_t purge_bonus_miss_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Disperser_Attack_Debuff : public CDOTA_Buff
{
public:
	int32_t attack_speed_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Disperser_Movespeed_Buff : public CDOTA_Buff
{
public:
	int32_t movement_speed_buff_rate; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Cornucopia : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Cornucopia : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Cornucopia : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Pavise : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Pavise : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Pavise : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	float bonus_mana; // 0x131c	
	int32_t bonus_health; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Pavise_Shield : public CDOTA_Buff
{
public:
	int32_t absorb_amount; // 0x1318	
	int32_t m_nAbsorbRemaining; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Keen_Optic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Keen_Optic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Keen_Optic : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1318	
	int32_t cast_range_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Grove_Bow : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Grove_Bow : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Grove_Bow : public CDOTA_Buff_Item
{
public:
	int32_t attack_range_bonus; // 0x1318	
	int32_t attack_speed_bonus; // 0x131c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Grove_Bow_Debuff : public CDOTA_Buff
{
public:
	int32_t magic_resistance_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Quickening_Charm : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Quickening_Charm : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Quickening_Charm : public CDOTA_Buff_Item
{
public:
	int32_t bonus_cooldown; // 0x1318	
	int32_t bonus_health_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Philosophers_Stone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Philosophers_Stone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t bonus_gpm; // 0x131c	
	int32_t bonus_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Force_Boots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Force_Boots : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Force_Boots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Force_Boots : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	int32_t push_length; // 0x132c	
	float push_duration; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Desolator_2 : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Desolator_2 : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Desolator_2 : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	float corruption_duration; // 0x131c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Desolator_2_Corruption : public CDOTA_Buff
{
public:
	int32_t corruption_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Phoenix_Ash : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Phoenix_Ash : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Phoenix_Ash : public CDOTA_Buff_Item
{
public:
	int32_t health_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Seer_Stone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Seer_Stone : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Seer_Stone_Truesight : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Seer_Stone : public CDOTA_Buff_Item
{
public:
	int32_t cast_range_bonus; // 0x1318	
	int32_t vision_bonus; // 0x131c	
	int32_t mana_regen; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Greater_Mango : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Elixer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_ElixerHealing : public CDOTA_Buff
{
public:
	int32_t health; // 0x1318	
	int32_t mana; // 0x131c	
	float duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Vampire_Fangs : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Vampire_Fangs : public CDOTA_Buff_Item
{
public:
	int32_t attack_lifesteal; // 0x1318	
	int32_t spell_lifesteal; // 0x131c	
	int32_t night_vision; // 0x1320	
	int32_t creep_lifesteal_reduction_pct; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Craggy_Coat : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Craggy_Coat_Tanky : public CDOTA_Buff_Item
{
public:
	int32_t active_armor; // 0x1318	
	int32_t move_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Craggy_Coat : public CDOTA_Buff_Item
{
public:
	int32_t armor_bonus; // 0x1318	
	int32_t move_speed; // 0x131c	
	int32_t bonus_health; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Greater_Faerie_Fire : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Greater_Faerie_Fire : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Timeless_Relic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Timeless_Relic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Timeless_Relic : public CDOTA_Buff_Item
{
public:
	int32_t spell_amp; // 0x1318	
	int32_t debuff_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mirror_Shield : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1508
// Has VTable
class CDOTA_Modifier_Item_Mirror_Shield : public CDOTA_Buff_Item
{
public:
	CModifierParams m_LastParams; // 0x1318	
	int32_t all_stats; // 0x14f8	
	int32_t reflect_chance; // 0x14fc	
	bool m_bProcSuccessful; // 0x1500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mirror_Shield_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ironwood_tree : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ironwood_tree : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ironwood_tree : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Royal_jelly : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Royal_Jelly_Regen : public CDOTA_Buff
{
public:
	float health_regen; // 0x1318	
	float mana_regen; // 0x131c	
	int32_t charges; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Royal_Jelly : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Pupils_gift : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Pupils_gift : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Pupils_gift : public CDOTA_Buff_Item
{
public:
	int32_t secondary_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tome_of_aghanim : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tome_of_Aghanim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Repair_kit : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Repair_Kit : public CDOTA_Buff_Item
{
public:
	int32_t hp_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Repair_Kit : public CDOTA_Buff
{
public:
	float health_regen; // 0x1318	
	int32_t armor_bonus; // 0x131c	
	int32_t multishot_count; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Mind_Breaker : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Mind_Breaker2 : public CDOTA_Item_Recipe_Mind_Breaker
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mind_Breaker : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Mind_Breaker : public CDOTA_Buff_Item
{
public:
	int32_t magic_damage; // 0x1318	
	int32_t attack_speed; // 0x131c	
	float duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Third_eye : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Third_Eye : public CDOTA_Buff
{
public:
	int32_t truesight_radius; // 0x1318	
	int32_t bonus_vision; // 0x131c	
	int32_t bonus_all_stats; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Spell_Prism : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Spell_Prism : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
	int32_t bonus_cooldown; // 0x131c	
	float mana_regen; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spell_Prism_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Horizon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Fusion_rune : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Fusion_runeHealing : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1318	
	float m_fHealingDone; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Princes_Knife : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Princes_Knife : public CDOTA_Buff_Item
{
public:
	float duration; // 0x1318	
	int32_t projectile_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Princes_Knife_Hex : public CDOTA_Modifier_Hexed
{
public:
	int32_t movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Spider_Legs : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spider_Legs : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t turn_rate; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Spider_Legs_Active : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed_active; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Helm_Of_The_Undying : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Helm_Of_The_Undying : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	float duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mango_Tree : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Mango_Tree : public CDOTA_Buff_Item
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CountdownTimer m_Timer; // 0x1320	
	float seconds; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Passive_Mango_Tree : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1318	
	int32_t m_nMangoSeconds; // 0x131c	
	CountdownTimer m_MangoTimer; // 0x1320	
	int32_t m_nRespawnSeconds; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CountdownTimer m_RespawnTimer; // 0x1340	
	int32_t m_nMangosAvailable; // 0x1358	
	int32_t m_nChannelCount; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hTarget"
class CDOTA_Ability_PluckFamango : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x568	
private:
	[[maybe_unused]] uint8_t __pad056c[0x4]; // 0x56c
public:
	CDOTA_Buff* m_pMyBuff; // 0x570	
	float famango_rate; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class Modifier_Pluck_Famango_Channel : public CDOTA_Buff
{
public:
	float famango_rate; // 0x1318	
	CHandle< CBaseEntity > m_hMangoTree; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Vambrace : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Vambrace : public CDOTA_Buff_Item
{
public:
	int32_t bonus_primary_stat; // 0x1318	
	int32_t bonus_secondary_stat; // 0x131c	
	int32_t bonus_magic_resistance; // 0x1320	
	int32_t bonus_spell_amp; // 0x1324	
	int32_t bonus_attack_speed; // 0x1328	
	int32_t m_iStat; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_Vambrace : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnVambraceStatChanged"
	int32_t m_iStat; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Witless_shako : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Witless_shako : public CDOTA_Buff_Item
{
public:
	int32_t max_health; // 0x1318	
	int32_t max_mana; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Imp_Claw : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Imp_Claw : public CDOTA_Buff_Item
{
public:
	int32_t crit_multiplier; // 0x1318	
	int32_t bonus_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Flicker : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Flicker : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Flicker_Damaged : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Spy_Gadget : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Spy_Gadget_Aura : public CDOTA_Buff_Item
{
public:
	int32_t scan_cooldown_reduction; // 0x1318	
	int32_t aura_range; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Spy_Gadget : public CDOTA_Buff
{
public:
	int32_t attack_range; // 0x1318	
	int32_t cast_range; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ocean_Heart : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ocean_Heart : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Ocean_Heart : public CDOTA_Buff_Item
{
public:
	float water_hp_regen; // 0x1318	
	float water_mp_regen; // 0x131c	
	int32_t all_stats; // 0x1320	
	bool m_bInRiver; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Broom_Handle : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Broom_Handle : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Broom_Handle : public CDOTA_Buff_Item
{
public:
	int32_t melee_attack_range; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	int32_t bonus_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Trusty_Shovel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Trusty_Shovel : public CDOTA_Item
{
public:
	Vector m_vChannelPos; // 0x610	
	bool m_bIsUnderwater; // 0x61c	
private:
	[[maybe_unused]] uint8_t __pad061d[0x3]; // 0x61d
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Trusty_Shovel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Nether_Shawl : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Nether_Shawl : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Nether_Shawl : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magic_resistance; // 0x1318	
	int32_t bonus_spell_amp; // 0x131c	
	int32_t bonus_armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Dragon_Scale : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dragon_Scale : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Dragon_Scale : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t bonus_hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Dragon_Scale_Burn : public CDOTA_Buff
{
public:
	int32_t damage_per_sec; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Essence_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Essence_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Essence_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_int; // 0x1318	
	float mp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Essence_Ring_Active : public CDOTA_Buff
{
public:
	int32_t health_gain; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Clumsy_Net : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Clumsy_Net : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Clumsy_Net_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Clumsy_Net : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1318	
	int32_t mana_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Enchanted_Quiver : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Enchanted_Quiver : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Enchanted_Quiver : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_range; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t active_bonus_attack_range; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ninja_Gear : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ninja_Gear : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ninja_Gear : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t passive_movement_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Illusionsts_Cape : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Illusionsts_Cape : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Illusionsts_Cape_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Illusionsts_Cape : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agi; // 0x1318	
	int32_t bonus_str; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Illusionists_Cape_Aura : public CDOTA_Buff
{
public:
	int32_t attack_damage_aura; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Havoc_Hammer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Havoc_Hammer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Havoc_Hammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_strength; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Havoc_Hammer_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Panic_Button : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Panic_Button : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Panic_Button : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	float health_threshold; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Apex : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Apex : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Apex : public CDOTA_Buff_Item
{
public:
	int32_t primary_stat; // 0x1318	
	int32_t primary_stat_universal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ballista : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ballista : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Ballista : public CDOTA_Buff_Item
{
public:
	int32_t attack_range_bonus; // 0x1318	
	float knockback_distance; // 0x131c	
	float knockback_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Woodland_Striders : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Woodland_Striders : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Woodland_Striders : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1318	
	int32_t bonus_hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Woodland_Striders_Active : public CDOTA_Buff
{
public:
	float tree_duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Trident : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Trident : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Trident : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t movement_speed_percent_bonus; // 0x1320	
	int32_t bonus_strength; // 0x1324	
	int32_t hp_regen_amp; // 0x1328	
	int32_t status_resistance; // 0x132c	
	int32_t bonus_intellect; // 0x1330	
	int32_t spell_amp; // 0x1334	
	int32_t mana_regen_multiplier; // 0x1338	
	int32_t magic_damage_attack; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Demonicon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Demonicon : public CDOTA_Item
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDemonSummons; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Demonicon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Demonicon_Bonus : public CDOTA_Buff
{
public:
	int32_t hp_bonus; // 0x1318	
	int32_t damage_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Fallen_Sky : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Fallen_Sky : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Fallen_Sky : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
	float bonus_health_regen; // 0x1320	
	float bonus_mana_regen; // 0x1324	
	float blink_damage_cooldown; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Fallen_Sky_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1318	
	float land_time; // 0x131c	
	float burn_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Fallen_Sky_Burn : public CDOTA_Buff
{
public:
	int32_t burn_dps_buildings; // 0x1318	
	int32_t burn_dps_units; // 0x131c	
	float burn_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Pirate_Hat : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Pirate_Hat : public CDOTA_Item
{
public:
	Vector m_vChannelPos; // 0x610	
	bool m_bIsUnderwater; // 0x61c	
private:
	[[maybe_unused]] uint8_t __pad061d[0x3]; // 0x61d
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Pirate_Hat : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_ms; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Dimensional_Doorway : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dimensional_Doorway : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ex_Machina : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ex_Machina : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ex_Machina : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Faded_Broach : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Faded_Broach : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Faded_Broach : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t bonus_movement_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Paladin_Sword : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Paladin_Sword : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Paladin_Sword : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_lifesteal; // 0x131c	
	int32_t bonus_spell_lifesteal; // 0x1320	
	int32_t bonus_amp; // 0x1324	
	int32_t creep_lifesteal_reduction_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Minotaur_Horn : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Minotaur_Horn : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Minotaur_Horn_Immune : public CDOTA_Modifier_MagicImmune
{
public:
	int32_t model_scale; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Minotaur_Horn : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Orb_Of_Destruction : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Orb_Of_Destruction : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Orb_Of_Destruction : public CDOTA_Buff_Item
{
public:
	float duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Orb_Of_Destruction_Debuff : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
	int32_t slow_melee; // 0x131c	
	int32_t slow_range; // 0x1320	
	bool bCasterRanged; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_The_Leveller : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_The_Leveller : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_The_Leveller : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	int32_t demolish; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Arcane_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Arcane_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Arcane_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t bonus_intelligence; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Titan_Sliver : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Titan_Sliver : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Titan_Sliver : public CDOTA_Buff_Item
{
public:
	int32_t base_attack_damage; // 0x1318	
	int32_t magic_resistance; // 0x131c	
	int32_t status_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Voodoo_Mask : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Voodoo_Mask : public CDOTA_Buff_Item
{
public:
	float spell_lifesteal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Blitz_Knuckles : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifer_Item_Blitz_Knuckles : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Witch_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Witch_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Item_Witch_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	float slow_duration; // 0x1324	
	float bonus_mana_regen; // 0x1328	
	int32_t projectile_speed; // 0x132c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Witch_Blade_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
	float int_damage_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_MaskOfDispair : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MaskOfDispair : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_MaskOfDispair : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	float bonus_armor; // 0x131c	
	int32_t spell_lifesteal; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_MaskOfDispair_Berserk : public CDOTA_Buff
{
public:
	int32_t berserk_spell_amp; // 0x1318	
	int32_t berserk_manacost_reduction; // 0x131c	
	int32_t berserk_magic_resistance; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Chipped_Vest : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Chipped_Vest : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Chipped_Vest : public CDOTA_Buff_Item
{
public:
	float hp_regen; // 0x1318	
	int32_t damage_return_hero; // 0x131c	
	int32_t damage_return_creep; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Cloak_Of_Flames : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Cloak_Of_Flames : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Cloak_Of_Flames : public CDOTA_Buff_Item
{
public:
	int32_t armor; // 0x1318	
	int32_t magic_resistance; // 0x131c	
	int32_t radius; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Cloak_Of_Flames_Debuff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t damage_illusions; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Elven_Tunic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Elven_Tunic : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Elven_Tunic : public CDOTA_Buff_Item
{
public:
	int32_t attack_speed; // 0x1318	
	int32_t evasion; // 0x131c	
	int32_t movment; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Gloves_Of_Travel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Gloves_Of_Travel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Gloves_Of_Travel : public CDOTA_Buff_Item
{
public:
	int32_t attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Orb_Of_Corrosion : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Orb_Of_Corrosion : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Orb_Of_Corrosion : public CDOTA_Buff_Item
{
public:
	int32_t armor; // 0x1318	
	int32_t attack_speed; // 0x131c	
	float duration; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Orb_Of_Corrosion_Debuff : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1318	
	int32_t slow_melee; // 0x131c	
	int32_t slow_range; // 0x1320	
	int32_t heal_reduction; // 0x1324	
	bool bCasterRanged; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	int32_t damage; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Sorcerers_Staff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Sorcerers_Staff : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Sorcerers_Staff : public CDOTA_Buff_Item
{
public:
	int32_t mana_regen_amp; // 0x1318	
	int32_t spell_amp_creeps; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Trickster_Cloak : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Trickster_Cloak : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Trickster_Cloak : public CDOTA_Buff_Item
{
public:
	int32_t evasion; // 0x1318	
	int32_t magic_resistance; // 0x131c	
	float debuff_limit; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Trickster_Cloak_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Venom_Gland : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Venom_Gland : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Venom_Gland : public CDOTA_Buff_Item
{
public:
	int32_t primary_attribute; // 0x1318	
	int32_t debuff_amp; // 0x131c	
	float duration; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Venom_Gland_Debuff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t degen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Wizard_Glass : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Wizard_Glass : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Wizard_Glass : public CDOTA_Buff_Item
{
public:
	int32_t debuff_amp; // 0x1318	
	int32_t cooldown_reduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Gladiator_Helm : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Gladiator_Helm : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Gladiator_Helm : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Gladiator_Helm_Buff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t armor; // 0x131c	
	int32_t movement_speed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Possessed_Mask : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Possessed_Mask : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Possessed_Mask : public CDOTA_Buff_Item
{
public:
	int32_t primary_attribute; // 0x1318	
	int32_t lifesteal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AssassinsDagger : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_AssassinsDagger : public CDOTA_Buff_Item
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	int32_t debuff_duration; // 0x1330	
	int32_t bonus_attack_speed; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Assassins_Dagger_Debuff : public CDOTA_Buff
{
public:
	int32_t armor_debuff; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AsceticCap : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_AsceticCap : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	float hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_AsceticCapBuff : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1318	
	int32_t slow_resistance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SamplePicker : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_SamplePicker : public CDOTA_Buff_Item
{
public:
	int32_t base_gold; // 0x1318	
	int32_t gold_per_level; // 0x131c	
	int32_t strength_penalty; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_IcarusWings : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_IcarusWings : public CDOTA_Buff_Item
{
public:
	float move_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_IcarusWingsBuff : public CDOTA_Buff_Item
{
public:
	int32_t status_resistance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_IcarusWingsDebuff : public CDOTA_Buff_Item
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Dynamite_Jacket : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Dynamite_Jacket : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t damage; // 0x1320	
	float blind_duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jacket_Blind : public CDOTA_Buff
{
public:
	float blind_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tree_Processor : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Tree_Processor : public CDOTA_Buff_Item
{
public:
	int32_t bonus_int; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Tree_Processor_Speed : public CDOTA_Buff_Item
{
public:
	int32_t health_per_tree; // 0x1318	
	int32_t hp_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Heavy_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Heavy_Blade : public CDOTA_Buff_Item
{
public:
	float damage; // 0x1318	
	int32_t attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Mechanical_Arm : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	float bat; // 0x131c	
	float stun_duration; // 0x1320	
	int32_t stun_chance; // 0x1324	
	int32_t m_nAttack; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mechanical_Arm : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mechanical_Arm_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Fortitude_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Fortitude_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Fortitude_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	float hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Fortitude_Ring_Active : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_PogoStick : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_PogoStick : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Pogo_Stick_Active : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t leap_distance; // 0x1344	
	float leap_speed; // 0x1348	
	float leap_acceleration; // 0x134c	
	int32_t leap_radius; // 0x1350	
	float leap_bonus_duration; // 0x1354	
	bool m_bLaunched; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Paintball : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Paintball : public CDOTA_Buff_Item
{
public:
	int32_t movespeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Paintball_Debuff : public CDOTA_Buff
{
public:
	int32_t dps; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_UnstableWand : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_UnstableWand : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_UnstableWand_Critter : public CDOTA_Modifier_Hexed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_LightRobes : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_LightRobes : public CDOTA_Buff_Item
{
public:
	int32_t health_penalty; // 0x1318	
	int32_t attack_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Force_Field_Bonus_Aura : public CDOTA_Buff
{
public:
	int32_t bonus_aoe_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Force_Field_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Force_Field : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t bonus_aoe_radius; // 0x131c	
	int32_t self_armor; // 0x1320	
	int32_t self_mres; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Force_Field_Effect : public CDOTA_Buff
{
public:
	float bonus_aoe_armor; // 0x1318	
	float bonus_aoe_ms; // 0x131c	
	float bonus_aoe_mres; // 0x1320	
	float self_mres; // 0x1324	
	float self_armor; // 0x1328	
	int32_t active_reflection_pct; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Force_Field : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Misericorde : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Misericorde : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t missing_hp; // 0x131c	
	int32_t damage; // 0x1320	
	int32_t aspd; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ancient_Perseverance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ancient_Perseverance : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Ancient_Perseverance : public CDOTA_Buff_Item
{
public:
	int32_t damage; // 0x1318	
	int32_t hp_regen; // 0x131c	
	int32_t mana_regen_amp; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Oakheart : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Oakheart : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Oakheart : public CDOTA_Buff_Item
{
public:
	int32_t strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Oakheart_Healing : public CDOTA_Buff
{
public:
	int32_t heal; // 0x1318	
	float duration; // 0x131c	
	float regen; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Stormcrafter : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Stormcrafter : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Stormcrafter : public CDOTA_Buff_Item
{
public:
	GameTime_t m_flNextHit; // 0x1318	
	int32_t passive_movement_bonus; // 0x131c	
	int32_t range; // 0x1320	
	float interval; // 0x1324	
	int32_t damage; // 0x1328	
	float slow_duration; // 0x132c	
	float bonus_mana_regen; // 0x1330	
	int32_t max_targets; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Stormcrafter_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Overflowing_Elixir : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Overflowing_Elixir : public CDOTA_Item
{
public:
	int32_t m_iStoredRuneType; // 0x610	
	GameTime_t m_fStoredRuneTime; // 0x614	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Overflowing_Elixir_Regen : public CDOTA_Buff
{
public:
	int32_t health; // 0x1318	
	int32_t mana; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Mysterious_Hat : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mysterious_Hat : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Mysterious_Hat : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t spell_amp; // 0x131c	
	int32_t manacost_reduction; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Orb_of_Pestilence : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Orb_of_Pestilence : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Orb_of_Pestilence : public CDOTA_Buff_Item
{
public:
	int32_t poison_movement_speed_melee; // 0x1318	
	int32_t poison_movement_speed_range; // 0x131c	
	float poison_duration; // 0x1320	
	float poison_damage; // 0x1324	
	int32_t armor; // 0x1328	
	float hp_regen; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Orb_of_Pestilence_Slow : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	int32_t slow; // 0x131c	
	float damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Fluffy_Hat : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Fluffy_Hat : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Fluffy_Hat : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Falcon_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Falcon_Blade : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Falcon_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_damage_per_kill; // 0x131c	
	int32_t bonus_damage_per_assist; // 0x1320	
	int32_t bonus_health; // 0x1324	
	int32_t max_damage; // 0x1328	
	float bonus_mana_regen; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Mage_Slayer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Mage_Slayer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Mage_Slayer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magical_armor; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float duration; // 0x1324	
	float bonus_mana_regen; // 0x1328	
	int32_t bonus_intellect; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Mage_Slayer_Debuff : public CDOTA_Buff
{
public:
	int32_t spell_amp_debuff; // 0x1318	
	int32_t dps; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Overwhelming_Blink : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Overwhelming_Blink : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SuperOverwhelming_Blink : public CDOTA_Item_Overwhelming_Blink
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Overwhelming_Blink : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	float blink_damage_cooldown; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SuperOverwhelming_Blink : public CDOTA_Modifier_Item_Overwhelming_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Overwhelming_Blink_Debuff : public CDOTA_Buff
{
public:
	float caster_strength; // 0x1318	
	int32_t movement_slow; // 0x131c	
	int32_t attack_slow; // 0x1320	
	float damage_pct_over_time; // 0x1324	
	float m_flTickDamage; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Swift_Blink : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Swift_Blink : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SuperSwift_Blink : public CDOTA_Item_Swift_Blink
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Swift_Blink : public CDOTA_Buff_Item
{
public:
	float blink_damage_cooldown; // 0x1318	
	int32_t bonus_agility; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SuperSwift_Blink : public CDOTA_Modifier_Item_Swift_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Swift_Blink_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_movement; // 0x1318	
	int32_t bonus_agi_active; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Arcane_Blink : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Arcane_Blink : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SuperArcane_Blink : public CDOTA_Item_Arcane_Blink
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Arcane_Blink : public CDOTA_Buff_Item
{
public:
	float blink_damage_cooldown; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SuperArcane_Blink : public CDOTA_Modifier_Item_Arcane_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Arcane_Blink_Buff : public CDOTA_Buff
{
public:
	int32_t cast_pct_improvement; // 0x1318	
	int32_t manacost_reduction; // 0x131c	
	int32_t debuff_amp; // 0x1320	
	int32_t cast_range_bonus; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Wind_Waker : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Wind_Waker : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Wind_Waker : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_movement_speed; // 0x1320	
	int32_t bonus_mana; // 0x1324	
	int32_t cast_range_bonus; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Wind_Waker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hBlocker; // 0x1318	
	GameTime_t m_flStartTime; // 0x131c	
	Vector m_vStartPos; // 0x1320	
	float m_flCurTime; // 0x132c	
	float m_flHeightT; // 0x1330	
	Vector m_vMoveToPos; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Eul_Wind_Waker_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Aghanims_Shard : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Aghanims_Shard_Roshan : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghanims_Shard : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Eternal_Shroud : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Eternal_Shroud : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Eternal_Shroud_Barrier : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1318	
	int32_t barrier_amount; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Eternal_Shroud : public CDOTA_Buff_Item
{
public:
	int32_t bonus_spell_resist; // 0x1318	
	int32_t bonus_strength; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	float bonus_health; // 0x1324	
	int32_t mana_restore_pct; // 0x1328	
	float stack_threshold; // 0x132c	
	float stack_resist; // 0x1330	
	float stack_duration; // 0x1334	
	int32_t max_stacks; // 0x1338	
	float m_flCumulativeDamage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Eternal_Shroud_Bonus_Magic_Resist : public CDOTA_Buff
{
public:
	int32_t max_stacks; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Star_Mace : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Star_Mace : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Star_Mace : public CDOTA_Buff_Item
{
public:
	int32_t movement_speed_pct; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t cleave_damage_percent; // 0x1320	
	int32_t cleave_starting_width; // 0x1324	
	int32_t cleave_ending_width; // 0x1328	
	int32_t cleave_distance; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Penta_Edged_Sword : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Penta_Edged_Sword : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Penta_Edged_Sword : public CDOTA_Buff_Item
{
public:
	int32_t damage; // 0x1318	
	int32_t maim_chance; // 0x131c	
	float maim_duration; // 0x1320	
	int32_t melee_attack_range; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Penta_Edged_Sword_Maim : public CDOTA_Buff
{
public:
	int32_t maim_slow_movement; // 0x1318	
	int32_t maim_slow_attack; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Gungir : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Gungir : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_GungirChain : public CDOTA_Buff
{
public:
	int32_t chain_radius; // 0x1318	
	int32_t chain_strikes; // 0x131c	
	int32_t chain_damage; // 0x1320	
	float chain_delay; // 0x1324	
	int32_t m_iCurJumpCount; // 0x1328	
	Vector m_vCurTargetLoc; // 0x132c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_Item_Gungir : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_strength; // 0x1320	
	int32_t bonus_agility; // 0x1324	
	int32_t bonus_intellect; // 0x1328	
	int32_t bonus_hp; // 0x132c	
	int32_t chain_chance; // 0x1330	
	int32_t chain_strikes; // 0x1334	
	int32_t chain_damage; // 0x1338	
	int32_t chain_radius; // 0x133c	
	float chain_cooldown; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
	CountdownTimer m_ChainTimer; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Gungnir_Debuff : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Orb_Of_Revelations : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Orb_Of_Revelations : public CDOTA_Item
{
public:
	CountdownTimer m_ViewerTimer; // 0x610	
	int32_t m_iProjectile; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Orb_Of_Revelations : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	float bonus_mana_regen; // 0x1320	
	int32_t cast_range_bonus; // 0x1324	
	int32_t bonus_magical_armor; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Orb_Of_Revelations_Reveal : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1318	
	bool m_bCastOnInvisibleHero; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Satchel : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Satchel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
	int32_t xp_gain; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Grandmasters_Glaive : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_Item_Grandmasters_Glaive : public CDOTA_Buff_Item
{
public:
	int32_t sange_bonus_strength; // 0x1318	
	int32_t sange_status_resistance; // 0x131c	
	int32_t sange_hp_regen_amp; // 0x1320	
	int32_t kaya_bonus_intellect; // 0x1324	
	int32_t kaya_spell_amp; // 0x1328	
	int32_t kaya_mana_regen_multiplier; // 0x132c	
	int32_t kaya_magic_damage_attack; // 0x1330	
	int32_t yasha_bonus_agility; // 0x1334	
	int32_t yasha_bonus_attack_speed; // 0x1338	
	int32_t yasha_movement_speed_percent_bonus; // 0x133c	
	int32_t m_iCurrentStance; // 0x1340	
	int32_t bonus_strength; // 0x1344	
	int32_t bash_chance_melee; // 0x1348	
	int32_t bash_chance_ranged; // 0x134c	
	float bash_duration; // 0x1350	
	float bash_cooldown; // 0x1354	
	int32_t bonus_chance_damage; // 0x1358	
	int32_t bonus_damage; // 0x135c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_Grandmasters_Glaive : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnGrandmastersStatChanged"
	int32_t m_iStat; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Grandmasters_Glaive_Bonus_Agi : public CDOTA_Buff
{
public:
	int32_t agi_stance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Grandmasters_Glaive_Bonus_Str : public CDOTA_Buff
{
public:
	int32_t str_stance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Grandmasters_Glaive_Bonus_Int : public CDOTA_Buff
{
public:
	int32_t int_stance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Warhammer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Warhammer : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Warhammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Warhammer_Armor : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Psychic_Headband : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Psychic_Headband : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Psychic_Headband : public CDOTA_Buff_Item
{
public:
	int32_t intelligence_pct; // 0x1318	
	int32_t cast_range; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Psychic_Headband : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	int32_t push_length; // 0x132c	
	float push_duration; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Ceremonial_Robe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Ceremonial_Robe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Ceremonial_Robe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t aura_radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ceremonial_Robe_Aura : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1318	
	int32_t magic_resistance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Book_Of_Shadows : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Book_Of_Shadows : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Book_Of_Shadows : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
	int32_t night_vision; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Book_Of_Shadows_Buff : public CDOTA_Buff
{
public:
	bool m_bUntargetableAllies; // 0x1318	
	bool m_bUntargetableEnemies; // 0x1319	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Giants_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Giants_Ring : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Giants_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t model_scale; // 0x1320	
	int32_t damage_radius; // 0x1324	
	int32_t pct_str_damage_per_second; // 0x1328	
	float tick_rate; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Giants_Ring_Visual : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Vengeances_Shadow : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Vengeances_Shadow : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Vengeances_Shadow : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t damage_return; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Vengeances_Shadow_Illusions : public CDOTA_Buff
{
public:
	bool m_bLeftoverHybrid; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Bullwhip : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Bullwhip : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Bullwhip : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
	float bonus_mana_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Bullwhip_Buff_Thinker : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1318	
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Bullwhip_Buff : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Quicksilver_Amulet : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Quicksilver_Amulet : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Quicksilver_Amulet : public CDOTA_Buff_Item
{
public:
	int32_t base_attack; // 0x1318	
	int32_t bonus_attack; // 0x131c	
	int32_t base_movement; // 0x1320	
	int32_t bonus_movement; // 0x1324	
	int32_t projectile_increase; // 0x1328	
	int32_t anim_increase; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Naginata : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Naginata : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Naginata : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	int32_t bonus_health; // 0x1324	
	float bonus_mana_regen; // 0x1328	
	int32_t cooldown_reduction_percent; // 0x132c	
	int32_t bonus_chance; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SeedsOfSerenity : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SeedsOfSerenity : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	float bonus_health_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SeedsOfSerenity_Active_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SeedsOfSerenity_Active : public CDOTA_Buff
{
public:
	int32_t aura_health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_LanceOfPursuit : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_LanceOfPursuit : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t bonus_strength; // 0x131c	
	int32_t backstab_damage; // 0x1320	
	int32_t backstab_angle; // 0x1324	
	float slow_duration; // 0x1328	
	bool m_bBackstab; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Lance_of_Pursuit_Slow : public CDOTA_Buff
{
public:
	int32_t slow_pct_melee; // 0x1318	
	int32_t slow_pct_ranged; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Occult_Bracelet : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Occult_Bracelet : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1318	
	int32_t stack_limit; // 0x131c	
	float stack_duration; // 0x1320	
	GameTime_t m_flStackDieTime; // 0x1324	
	int32_t magic_resistance; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Occult_Bracelet_Stack : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tome_of_Omniscience : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Tome_of_Omniscience : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t bonus_xpm; // 0x131c	
	int32_t bonus_armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_OgreSealTotem : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_OgreSealTotem : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_OgreSealTotem_Active : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t m_nCurrentBounce; // 0x1344	
	int32_t leap_distance; // 0x1348	
	float leap_speed; // 0x134c	
	float leap_acceleration; // 0x1350	
	int32_t leap_radius; // 0x1354	
	float leap_bonus_duration; // 0x1358	
	bool m_bLaunched; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_OgreSealTotem_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_WandOfTheBrine : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_WandOfTheBrine : public CDOTA_Buff_Item
{
public:
	int32_t heal_increase; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_WandOfTheBrine_Active : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	float interval; // 0x131c	
	int32_t damage_reduction; // 0x1320	
	int32_t heal; // 0x1324	
	ParticleIndex_t m_nFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Slime_Vial : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Slime_Vial : public CDOTA_Buff_Item
{
public:
	int32_t health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Item_Slime_Vial_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1318	
	GameTime_t m_fLastThink; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1320	
	CountdownTimer m_ViewerTimer; // 0x1338	
	int32_t spill_speed; // 0x1350	
	int32_t spill_radius; // 0x1354	
	int32_t spill_damage; // 0x1358	
	float spill_debuff_duration; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Slime_Vial_Spill_Debuff : public CDOTA_Buff
{
public:
	int32_t spill_movement_speed; // 0x1318	
	int32_t spill_attack_speed; // 0x131c	
	int32_t spill_self_bonus_armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Harpoon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Harpoon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Item_Harpoon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_chance; // 0x1318	
	int32_t bonus_chance_damage; // 0x131c	
	int32_t bonus_strength; // 0x1320	
	int32_t bonus_agility; // 0x1324	
	int32_t bonus_intellect; // 0x1328	
	float bonus_mana_regen; // 0x132c	
	int32_t bonus_damage; // 0x1330	
	int32_t bonus_speed; // 0x1334	
	CUtlVector< int16 > m_InFlightProcAttackRecords; // 0x1338	
	int32_t m_nBonusProcAttackRecord; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Harpoon_EchoSabre_Component : public CDOTA_Buff_Item
{
public:
	float slow_duration; // 0x1318	
	int32_t bonus_attack_speed; // 0x131c	
	bool bonus_speed; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	float passive_cooldown; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Harpoon_Pull : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	float m_flDistance; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Harpoon_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Harpoon_InternalCD : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Guardian_Shell : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Guardian_Shell : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1318	
	int32_t bonus_armor; // 0x131c	
	float counter_cooldown; // 0x1320	
	GameTime_t m_flLastCounterTime; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_GuardianShell_Active : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Arcane_Scout : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hScout; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Arcane_Scout : public CDOTA_Buff_Item
{
public:
	int32_t vision_bonus; // 0x1318	
	int32_t magic_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Arcane_Scout_Self_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Arcane_Scout_Invulnerability : public CDOTA_Modifier_Invulnerable
{
public:
	int32_t scout_movespeed; // 0x1318	
	int32_t sight_range; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Barricade : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hScout; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Barricade_Thinker : public CDOTA_Buff
{
public:
	int32_t length; // 0x1318	
	int32_t width; // 0x131c	
	int32_t max_hits; // 0x1320	
	int32_t m_iCurrentHits; // 0x1324	
	int32_t m_hObstruction; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_Barricade_Blocker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Barricade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_armor; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_EyeOfTheVizier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_EyeOfTheVizier : public CDOTA_Buff_Item
{
public:
	int32_t cast_range_bonus; // 0x1318	
	int32_t mana_reduction_pct; // 0x131c	
	float bonus_mana_regen; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_ManaclesOfPower : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_ManaclesOfPower : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_ManaclesOfPower_Effect : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hPartner; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
	float leash_distance; // 0x1320	
	float leash_limit_multiplier; // 0x1324	
	CHandle< CBaseEntity > m_hAnchor; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iStoredRuneType"
class CDOTA_Item_Bottomless_Chalice : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnChaliceStoredRuneChanged"
	int32_t m_iStoredRuneType; // 0x610	
	GameTime_t m_fStoredRuneTime; // 0x614	
	float stored_rune_duration; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Bottomless_Chalice_Regen : public CDOTA_Buff
{
public:
	int32_t health; // 0x1318	
	int32_t mana; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Bottomless_Chalice : public CDOTA_Buff_Item
{
public:
	int32_t max_charges_per_kill; // 0x1318	
	float recharge_time; // 0x131c	
	bool m_bFull; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1321[0x3]; // 0x1321
public:
	int32_t bonus_intellect; // 0x1324	
	int32_t movement_speed; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_WandOfSanctitude : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_WandOfSanctitude : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1318	
	int32_t cast_range_bonus; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_WandOfSanctitude_Active_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_SpecialistsArray : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Item_SpecialistsArray : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t proc_bonus_damage; // 0x1320	
	int32_t count; // 0x1324	
	int32_t secondary_target_range_bonus; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_SpecialistsArray_ProcDamage : public CDOTA_Buff_Item
{
public:
	int32_t proc_bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DaggerOfRistul : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_DaggerOfRistul : public CDOTA_Buff_Item
{
public:
	int32_t aspd; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_DaggerOfRistul_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Lunar_Crest : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Lunar_Crest : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Lunar_Crest : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t bonus_spell_resist; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Lunar_Crest_Barrier_Addition : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1318	
	int32_t barrier_amount; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Lunar_Crest_Barrier_Reduction : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1318	
	float m_flDamageTotal; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Magus_Minimus : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Magus_Minimus : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Magus_Minimus_Inhibit : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Item_Magus_Minimus : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1318	
	int32_t bonus_intellect; // 0x131c	
	float damage_per_burn; // 0x1320	
	int32_t feedback_mana_burn; // 0x1324	
	int32_t feedback_mana_burn_illusion_melee; // 0x1328	
	int32_t feedback_mana_burn_illusion_ranged; // 0x132c	
	int32_t aura_radius; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Magus_Minimus_Aura_Slow : public CDOTA_Buff
{
public:
	int32_t max_slow_pct; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Witches_Switch : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Witches_Switch : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Witches_Switch : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1318	
	float bonus_mana_regen; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	int32_t aura_radius; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Witches_Switch_Aura_Effect : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1318	
	float aura_health_regen; // 0x131c	
	int32_t aura_armor; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Spark_Of_Courage : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Spark_Of_Courage : public CDOTA_Buff_Item
{
public:
	int32_t damage; // 0x1318	
	int32_t armor; // 0x131c	
	int32_t health_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_VindicatorsAxe : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_VindicatorsAxe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	int32_t bonus_armor; // 0x1320	
	int32_t bonus_slow_resist; // 0x1324	
	ParticleIndex_t m_nFxIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DandelionAmulet : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifer_Item_DandelionAmulet : public CDOTA_Buff_Item
{
public:
	int32_t move_speed; // 0x1318	
	int32_t mana; // 0x131c	
	int32_t magic_block; // 0x1320	
	int32_t min_damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_BlightedSpirit : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifer_Item_BlightedSpirit : public CDOTA_Buff_Item
{
public:
	int32_t magic_resist; // 0x1318	
	float duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_BlightedSpirit_Blight : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	int32_t heal_reduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_DuelistGloves : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_DuelistGloves : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1318	
	int32_t bonus_damage; // 0x131c	
	float radius; // 0x1320	
	int32_t actual_attack_speed; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_AncientGuardian : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_AncientGuardian : public CDOTA_Buff_Item
{
public:
	int32_t actual_bonus_damage; // 0x1318	
	int32_t extra_bonus_damage; // 0x131c	
	int32_t bonus_damage; // 0x1320	
	float radius; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_HorizonsEquilibrium : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_HorizonsEquilibrium : public CDOTA_Buff_Item
{
public:
	int32_t distance; // 0x1318	
	int32_t damage_reduction; // 0x131c	
	int32_t attack_lifesteal; // 0x1320	
	int32_t spell_lifesteal; // 0x1324	
	int32_t creep_lifesteal_reduction_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x618
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_TurtleShell : public CDOTA_Item
{
public:
	float duration; // 0x610	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifer_Item_TurtleShell : public CDOTA_Buff_Item
{
public:
	int32_t armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifer_Item_TurtleShell_Shell : public CDOTA_Buff_Item
{
public:
	int32_t damage_reduction; // 0x1318	
	Vector m_vecPosition; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_MartyrsPlate : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_MartyrsPlate : public CDOTA_Buff_Item
{
public:
	float duration; // 0x1318	
	int32_t magic_resist; // 0x131c	
	float hp_regen; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_MartyrsPlate_Aura : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_MartyrsPlate_Effect : public CDOTA_Buff_Item
{
public:
	int32_t damage_redirection; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Gossamer_Cape : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Gossamer_Cape : public CDOTA_Buff_Item
{
public:
	float movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Unwavering_Condition : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Unwavering_Condition : public CDOTA_Buff_Item
{
public:
	int32_t max_health; // 0x1318	
	int32_t magic_resist; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Avianas_Feather : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Avianas_Feather : public CDOTA_Buff_Item
{
public:
	int32_t evasion; // 0x1318	
	int32_t move_speed; // 0x131c	
	int32_t flight_threshold; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Nemesis_Curse : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Nemesis_Curse : public CDOTA_Buff_Item
{
public:
	int32_t debuff_self; // 0x1318	
	float debuff_enemy; // 0x131c	
	int32_t debuff_enemy_duration; // 0x1320	
	int32_t bonus_damage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Nemesis_Curse_Debuff : public CDOTA_Buff
{
public:
	int32_t debuff_enemy; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Whisper_Of_The_Dread : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Whisper_Of_The_Dread : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1318	
	int32_t bonus_spell_damage; // 0x131c	
	int32_t vision_penalty; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Safety_Bubble : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Safety_Bubble : public CDOTA_Buff_Item
{
public:
	int32_t m_nDamageAbsorbed; // 0x1318	
	GameTime_t m_timeLastDamage; // 0x131c	
	int32_t bonus_hp_regen; // 0x1320	
	int32_t shield; // 0x1324	
	float restore_time; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Terror_Mask : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Terror_Mask_Fear_Aura : public CDOTA_Buff
{
public:
	int32_t effect_radius; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Terror_Mask_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Terror_Mask : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	float bonus_mana_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Light_Collector : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Light_Collector : public CDOTA_Buff_Item
{
public:
	bool m_bActive; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	int32_t health_regen; // 0x131c	
	int32_t mana_regen; // 0x1320	
	int32_t radius; // 0x1324	
	int32_t movespeed_pct; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Light_Collector_Blind : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Rattlecage : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Item_Rattlecage : public CDOTA_Buff
{
public:
	int32_t m_iDamageTaken; // 0x1318	
	int32_t damage_threshold; // 0x131c	
	int32_t radius; // 0x1320	
	float damage_reset_interval; // 0x1324	
	int32_t bonus_armor; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Rattlecage_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Doubloon : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_Doubloon : public CDOTA_Buff_Item
{
public:
	float conversion_pct; // 0x1318	
	int32_t bonus_health_regen; // 0x131c	
	int32_t bonus_mana_regen; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Caster_Rapier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Caster_Rapier : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Item_Caster_Rapier : public CDOTA_Buff_Item
{
public:
	int32_t cast_range_limit; // 0x1318	
	int32_t bonus_spell_amp; // 0x131c	
	int32_t backstab_duration; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_TiaraOfSelemene : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_TiaraOfSelemene : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Devastator : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Devastator : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Item_Devastator : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1318	
	int32_t projectile_speed; // 0x131c	
	int32_t bonus_intellect; // 0x1320	
	int32_t bonus_attack_speed; // 0x1324	
	int32_t mana_cost; // 0x1328	
	int32_t slow_duration; // 0x132c	
	int32_t spell_amp_duration; // 0x1330	
	int32_t damage_penalty; // 0x1334	
	int32_t passive_cooldown; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightWitchBladeAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Devastator_Debuff : public CDOTA_Buff
{
public:
	int32_t active_mres_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Roshans_Banner : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Roshans_Banner_HP : public CDOTA_Buff
{
public:
	int32_t health; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Roshans_Banner_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t hp_bonus; // 0x131c	
	int32_t damage_bonus; // 0x1320	
	int32_t model_scale; // 0x1324	
	float buff_linger_duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Roshans_Banner_Effect : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1318	
	int32_t hp_bonus; // 0x131c	
	int32_t model_scale; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Recipe_Angels_Demise : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x610
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Angels_Demise : public CDOTA_Item
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Item_Angels_Demise : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	float bonus_mana_regen; // 0x1320	
	int32_t bonus_spell_damage; // 0x1324	
	float slow_duration; // 0x1328	
	int32_t bonus_all_stats; // 0x132c	
	int32_t bonus_damage; // 0x1330	
	int32_t crit_chance; // 0x1334	
	int32_t crit_multiplier; // 0x1338	
	int32_t spell_crit_multiplier; // 0x133c	
	int32_t spell_crit_flat; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CDOTABaseAbility* > vecActivatedAbilities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Angels_Demise_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFogVolume : public CServerOnlyModelEntity
{
public:
	CUtlSymbolLarge m_fogName; // 0x758	
	CUtlSymbolLarge m_postProcessName; // 0x760	
	CUtlSymbolLarge m_colorCorrectionName; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0770[0x8]; // 0x770
public:
	bool m_bDisabled; // 0x778	
	bool m_bInFogVolumesList; // 0x779	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x848
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkUserGroupProxy "CDOTAPlayerController"
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPlaybackRate"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecVelocity"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_nTickBase"
// MNetworkUserGroupProxy "CDOTAPlayerController"
// MNetworkUserGroupProxy "CDOTAPlayerController"
// MNetworkVarNames "int m_iCursor"
// MNetworkVarNames "int m_iSpectatorClickBehavior"
// MNetworkVarNames "float m_flAspectRatio"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSpectatorQueryUnit"
// MNetworkVarNames "int m_iStatsPanel"
// MNetworkVarNames "int m_iShopPanel"
// MNetworkVarNames "ShopItemViewMode_t m_iShopViewMode"
// MNetworkVarNames "int m_iStatsDropdownCategory"
// MNetworkVarNames "int m_iStatsDropdownSort"
// MNetworkVarNames "char m_szShopString"
// MNetworkVarNames "bool m_bInShowCaseMode"
// MNetworkVarNames "float m_flCameraZoomAmount"
// MNetworkVarNames "int m_iHighPriorityScore"
// MNetworkVarNames "AbilityID_t m_quickBuyItems"
// MNetworkVarNames "bool m_quickBuyIsPurchasable"
// MNetworkVarNames "float m_flFrameTime"
// MNetworkVarNames "float m_flFrameTimeStdDev"
// MNetworkVarNames "float m_flUnfilteredFrameTime"
// MNetworkVarNames "bool m_bUsingAssistedCameraOperator"
// MNetworkVarNames "bool m_bUsingCameraMan"
// MNetworkVarNames "int m_nPlayerAssistFlags"
// MNetworkVarNames "int m_iMusicStatus"
// MNetworkVarNames "float m_flMusicOperatorVals"
// MNetworkVarNames "int m_iMusicOperatorVals"
// MNetworkVarNames "CHandle< CBaseEntity> m_hKillCamUnit"
// MNetworkVarNames "PlayerID_t m_nPlayerID"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAssignedHero"
// MNetworkVarNames "int m_nServerOrderSequenceNumber"
// MNetworkVarNames "int m_nCachedCoachedTeam"
// MNetworkUserGroupProxy "CDOTAPlayerController"
class CDOTAPlayerController : public CBasePlayerController
{
private:
	[[maybe_unused]] uint8_t __pad0680[0x8]; // 0x680
public:
	int32_t m_iMinimapMove; // 0x688	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	// MNetworkPriority "32"
	int32_t m_iCursor[2]; // 0x68c	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iSpectatorClickBehavior; // 0x694	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flAspectRatio; // 0x698	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	CHandle< CBaseEntity > m_hSpectatorQueryUnit; // 0x69c	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iStatsPanel; // 0x6a0	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iShopPanel; // 0x6a4	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	ShopItemViewMode_t m_iShopViewMode; // 0x6a8	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iStatsDropdownCategory; // 0x6ac	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iStatsDropdownSort; // 0x6b0	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	char m_szShopString[64]; // 0x6b4	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	bool m_bInShowCaseMode; // 0x6f4	
private:
	[[maybe_unused]] uint8_t __pad06f5[0x3]; // 0x6f5
public:
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flCameraZoomAmount; // 0x6f8	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iHighPriorityScore; // 0x6fc	
	// MNetworkEnable
	// MNetworkUserGroup "DOTATeamMatesAndCommentatorTable"
	AbilityID_t m_quickBuyItems[9]; // 0x700	
	// MNetworkEnable
	// MNetworkUserGroup "DOTATeamMatesAndCommentatorTable"
	bool m_quickBuyIsPurchasable[9]; // 0x724	
private:
	[[maybe_unused]] uint8_t __pad072d[0x3]; // 0x72d
public:
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flFrameTime; // 0x730	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flFrameTimeStdDev; // 0x734	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flUnfilteredFrameTime; // 0x738	
	// MNetworkEnable
	bool m_bUsingAssistedCameraOperator; // 0x73c	
	// MNetworkEnable
	bool m_bUsingCameraMan; // 0x73d	
private:
	[[maybe_unused]] uint8_t __pad073e[0x2]; // 0x73e
public:
	// MNetworkEnable
	int32_t m_nPlayerAssistFlags; // 0x740	
	float m_flHighPriorityScoreTimeStamp; // 0x744	
	float m_flExecuteOrdersLagCompensation; // 0x748	
	// MNetworkEnable
	int32_t m_iMusicStatus; // 0x74c	
	// MNetworkEnable
	float m_flMusicOperatorVals[3]; // 0x750	
	// MNetworkEnable
	int32_t m_iMusicOperatorVals[4]; // 0x75c	
private:
	[[maybe_unused]] uint8_t __pad076c[0x4]; // 0x76c
public:
	CountdownTimer m_MusicRestTime; // 0x770	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hKillCamUnit; // 0x788	
	Vector m_vecCrosshairTracePos; // 0x78c	
	CEntityIndex m_iCrosshairEntity; // 0x798	
	// MNetworkEnable
	PlayerID_t m_nPlayerID; // 0x79c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAssignedHero; // 0x7a0	
private:
	[[maybe_unused]] uint8_t __pad07a4[0xc]; // 0x7a4
public:
	bool m_bTeleportRequiresHalt; // 0x7b0	
	bool m_bChannelRequiresHalt; // 0x7b1	
private:
	[[maybe_unused]] uint8_t __pad07b2[0x2]; // 0x7b2
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	int32_t m_nServerOrderSequenceNumber; // 0x7b4	
	float m_flLastOrderTime; // 0x7b8	
	float m_flLastKnownActiveTime; // 0x7bc	
	GameTime_t m_flLastReconnectTime; // 0x7c0	
	GameTime_t m_fLastSuggestionTime; // 0x7c4	
private:
	[[maybe_unused]] uint8_t __pad07c8[0x20]; // 0x7c8
public:
	bool m_bWantsRandomHero; // 0x7e8	
	bool m_bFullyJoinedServer; // 0x7e9	
private:
	[[maybe_unused]] uint8_t __pad07ea[0x2]; // 0x7ea
public:
	int32_t m_nCheatDetectOrderReferenceCommandNumber; // 0x7ec	
	PlayerID_t m_iSwapPreferencePlayerID; // 0x7f0	
	uint32_t m_nCoachListenMask; // 0x7f4	
	// MNetworkEnable
	int32_t m_nCachedCoachedTeam; // 0x7f8	
	float m_flLastChatWheelTime[2]; // 0x7fc	
	float m_flLastChatWheelAudioTime[2]; // 0x804	
	float m_flLastChatWheelAllChatAudioTime[2]; // 0x80c	
	float m_flLastChatWheelSprayTime; // 0x814	
	float m_flLastChatWheelLongCooldownTime; // 0x818	
	float m_flLastPingTime; // 0x81c	
	float m_flPingAllowance; // 0x820	
	float m_flLastMapLineTime; // 0x824	
	float m_flMapLineAllowance; // 0x828	
	float m_flLastVersusBehaviorTime; // 0x82c	
	float m_flVersusBehaviorAllowance; // 0x830	
	uint8_t m_pOrderRetirementHistory[10]; // 0x834	
	uint16_t m_nOrderRetirementSum; // 0x83e	
	int32_t m_nOrderRetirementLastTick; // 0x840	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iHeroKills"
// MNetworkVarNames "int m_iTowerKills"
// MNetworkVarNames "int m_iBarracksKills"
// MNetworkVarNames "uint32 m_unTournamentTeamID"
// MNetworkVarNames "uint64 m_ulTeamLogo"
// MNetworkVarNames "uint64 m_ulTeamBaseLogo"
// MNetworkVarNames "uint64 m_ulTeamBannerLogo"
// MNetworkVarNames "bool m_bTeamComplete"
// MNetworkVarNames "bool m_bTeamIsHomeTeam"
// MNetworkVarNames "Color m_CustomHealthbarColor"
// MNetworkVarNames "char m_szTag"
class CDOTATeam : public CTeam
{
private:
	[[maybe_unused]] uint8_t __pad0560[0x10]; // 0x560
public:
	// MNetworkEnable
	int32_t m_iHeroKills; // 0x570	
	// MNetworkEnable
	int32_t m_iTowerKills; // 0x574	
	// MNetworkEnable
	int32_t m_iBarracksKills; // 0x578	
	// MNetworkEnable
	uint32_t m_unTournamentTeamID; // 0x57c	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_ulTeamLogo; // 0x580	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_ulTeamBaseLogo; // 0x588	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_ulTeamBannerLogo; // 0x590	
	// MNetworkEnable
	bool m_bTeamComplete; // 0x598	
	// MNetworkEnable
	bool m_bTeamIsHomeTeam; // 0x599	
	// MNetworkEnable
	Color m_CustomHealthbarColor; // 0x59a	
	// MNetworkEnable
	char m_szTag[33]; // 0x59e	
private:
	[[maybe_unused]] uint8_t __pad05bf[0x1]; // 0x5bf
public:
	int32_t m_event_lobby_updated; // 0x5c0	
	int32_t m_nKillStreak; // 0x5c4	
	int32_t m_iRecentKillCount; // 0x5c8	
	int32_t m_iRandomNumber; // 0x5cc	
	CountdownTimer m_RecentHeroKillTimer; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle<CDOTA_Item> m_hItem"
// MNetworkVarNames "bool m_bIsLowPriorityHoverItem"
class CDOTA_Item_Physical : public CBaseAnimatingActivity
{
public:
	int32_t m_nFlags; // 0x768	
	int32_t m_nRevealedInFoWForTeam; // 0x76c	
	GameTime_t m_fCreationTime; // 0x770	
	// MNetworkEnable
	CHandle< CDOTA_Item > m_hItem; // 0x774	
	// MNetworkEnable
	bool m_bIsLowPriorityHoverItem; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x978
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkVarNames "int m_iRuneType"
// MNetworkVarNames "float m_flRuneTime"
// MNetworkVarNames "int m_nMapLocationTeam"
// MNetworkVarNames "char m_szLocation"
class CDOTA_Item_Rune : public CBaseAnimatingActivity
{
public:
	CHandle< CBaseEntity > m_hRuneSpawner; // 0x768	
	// MNetworkEnable
	int32_t m_iRuneType; // 0x76c	
	// MNetworkEnable
	// MNetworkBitCount "4"
	float m_flRuneTime; // 0x770	
	// MNetworkEnable
	int32_t m_nMapLocationTeam; // 0x774	
	// MNetworkEnable
	char m_szLocation[512]; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
// MNetworkVarNames "bool m_bNextRuneIsWater"
class CDOTA_Item_RuneSpawner_Powerup : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_szPosition; // 0x768	
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x770	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x774	
	// MNetworkEnable
	bool m_bNextRuneIsWater; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
class CDOTA_Item_RuneSpawner_XP : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_szPosition; // 0x768	
	int32_t m_nDotaTeam; // 0x770	
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x774	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
class CDOTA_Item_RuneSpawner_Bounty : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_szPosition; // 0x768	
	int32_t m_nDotaTeam; // 0x770	
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x774	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
class CDOTA_Item_RuneSpawner : public CBaseAnimatingActivity
{
public:
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x768	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x76c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_ItemSpawner : public CPointEntity
{
public:
	CUtlSymbolLarge m_szItemName; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x948
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerDota : public CTriggerMultiple
{
public:
	CDotaEntityFilterFlags m_FilterFlags; // 0x928	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_HeroTrigger : public CTriggerMultiple
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_TutorialNPCBlocker_Thinker : public CDOTA_Buff
{
public:
	Vector m_vecStart; // 0x1318	
	Vector m_vecEnd; // 0x1324	
	float m_flRadius; // 0x1330	
	bool m_bHidden; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_TutorialNPCBlocker : public CDOTA_Buff
{
public:
	Vector m_vecStart; // 0x1318	
	Vector m_vecEnd; // 0x1324	
	Vector m_vecCenter; // 0x1330	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	bool m_bHidden; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x988
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Color m_LightColor"
// MNetworkVarNames "float m_flIntensity"
// MNetworkVarNames "float m_flLightSize"
// MNetworkVarNames "float m_flSpotFoV"
// MNetworkVarNames "QAngle m_vLightDirection"
// MNetworkVarNames "float m_flStartFalloff"
// MNetworkVarNames "float m_flDistanceFalloff"
// MNetworkVarNames "uint m_nFlags"
// MNetworkVarNames "char m_ProjectedTextureName"
class CEnvDeferredLight : public CModelPointEntity
{
public:
	CHandle< CBaseEntity > m_hTargetEntity; // 0x758	
	// MNetworkEnable
	Color m_LightColor; // 0x75c	
	// MNetworkEnable
	float m_flIntensity; // 0x760	
	// MNetworkEnable
	float m_flLightSize; // 0x764	
	// MNetworkEnable
	float m_flSpotFoV; // 0x768	
	// MNetworkEnable
	QAngle m_vLightDirection; // 0x76c	
	// MNetworkEnable
	float m_flStartFalloff; // 0x778	
	// MNetworkEnable
	float m_flDistanceFalloff; // 0x77c	
	// MNetworkEnable
	uint32_t m_nFlags; // 0x780	
	// MNetworkEnable
	char m_ProjectedTextureName[512]; // 0x784	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AttributeBonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Gold : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_HP : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_MP : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Base_Attack_Rate : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Attributes : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_All_Stats : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Movement_Speed : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Cast_Speed : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Movement_Speed_Percentage : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_HP_Regen : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_MP_Regen : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_MP_Regen_Amp : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Manaloss_Reduction : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Agility_And_Intelligence : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Intelligence : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Strength : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Agility : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Magic_Resistance : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Status_Resistance : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Day_Vision : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Night_Vision : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Vision : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Armor : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Attack_Damage : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Attack_Base_Damage : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Attack_Range : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Cast_Range : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Spell_Amplify : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Cooldown_Reduction : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Respawn_Reduction : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Gold_Income : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Evasion : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Morphling_4 : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Unique_Treant_3 : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_20_Bash : public CDOTA_Buff
{
public:
	float value; // 0x1318	
	float value2; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Crit : public CDOTA_Buff
{
public:
	float crit_chance; // 0x1318	
	float crit_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Tree_Walking : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Lifesteal : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Cleave : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Corruption : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Corruption_Debuff : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Special_Bonus_Mana_Break : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
	int32_t burn_illusions_ranged; // 0x131c	
	int32_t burn_illusions_melee; // 0x1320	
	float damage_per_burn; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Special_Bonus_Spell_Block : public CDOTA_Buff
{
public:
	float block_cooldown; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CountdownTimer m_CooldownTimer; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_Spell_Immunity : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Haste : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Special_Bonus_TrueStrike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Special_Bonus_Reincarnation : public CDOTA_Buff
{
public:
	float value; // 0x1318	
	float reincarnate_time; // 0x131c	
	GameTime_t m_fLastReincarnationTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Spell_Lifesteal : public CDOTA_Buff
{
public:
	float value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Special_Bonus_Exp_Boost : public CDOTA_Buff
{
public:
	int32_t value; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Stacking_Gold_Rate_Boost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Stacking_Exp_Rate_Boost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Seasonal_Summon_Common_Thinker : public CDOTA_Buff
{
public:
	float grace_period; // 0x1318	
	int32_t search_distance; // 0x131c	
	float think_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Healing_Campfire_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Healing_Campfire_Heal : public CDOTA_Buff
{
public:
	int32_t heal_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Seasonal_Summon_Snowman_Thinker : public CDOTA_Buff
{
public:
	float grace_period; // 0x1318	
	int32_t search_distance; // 0x131c	
	float think_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c0
// Has VTable
class CDOTA_Modifier_Seasonal_Penguin : public CDOTA_Buff
{
public:
	float m_fLifetimeGained; // 0x1318	
	Vector m_vTargetPos; // 0x131c	
	int32_t m_nCurrentSpeed; // 0x1328	
	GameTime_t m_fLastBumpTime; // 0x132c	
	Vector m_vLastPos; // 0x1330	
	CHandle< CBaseEntity > m_hLastHit; // 0x133c	
	Vector m_vDir; // 0x1340	
	Vector m_vRunEndPos; // 0x134c	
	bool m_bIsInInitialRun; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	Vector m_vJumpEndPos; // 0x135c	
	bool m_bPlayedVroomSinceLastCrash; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	ParticleIndex_t m_nVroomFX; // 0x136c	
	GameTime_t m_fLastSpeedStepTime; // 0x1370	
	GameTime_t m_fLastSpeechTime; // 0x1374	
	ParticleIndex_t m_nFXStackIndex; // 0x1378	
	int32_t m_nBumpsSinceLastCrash; // 0x137c	
	CHandle< CBaseEntity > m_hLastBumpingHero; // 0x1380	
	int32_t initial_speed; // 0x1384	
	int32_t max_speed; // 0x1388	
	int32_t speed_step; // 0x138c	
	float speed_step_interval; // 0x1390	
	float bump_delay; // 0x1394	
	float bump_delay_absolute; // 0x1398	
	int32_t bump_collision_radius; // 0x139c	
	int32_t run_distance; // 0x13a0	
	int32_t jump_distance; // 0x13a4	
	int32_t speed_after_crash; // 0x13a8	
	int32_t speed_gain_per_hero_bump; // 0x13ac	
	float max_gainable_lifetime; // 0x13b0	
	float lifetime_gain_per_hero_bump; // 0x13b4	
	float min_speech_repeat_time; // 0x13b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Seasonal_FestiveFirework : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Seasonal_Firecrackers : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Ability_Seasonal_Summon_Dragon_Thinker : public CDOTA_Buff
{
public:
	float grace_period; // 0x1318	
	int32_t search_distance; // 0x131c	
	float think_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Seasonal_Summon_CNY_Balloon_Thinker : public CDOTA_Buff
{
public:
	float speed; // 0x1318	
	int32_t min_distance_before_bounce; // 0x131c	
	float drag; // 0x1320	
	float max_height; // 0x1324	
	float max_vertical_move_time; // 0x1328	
	float bounce_turn_angle; // 0x132c	
	float bounce_turn_angle_tree; // 0x1330	
	float bounce_delay; // 0x1334	
	Vector m_vLastPos; // 0x1338	
	Vector m_vDir; // 0x1344	
	float m_flSpeed; // 0x1350	
	float m_flDistRemaining; // 0x1354	
	float m_flTreeTimeRemaining; // 0x1358	
	CHandle< CBaseEntity > m_hLastHit; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Seasonal_Summon_TI9_Balloon_Thinker : public CDOTA_Buff
{
public:
	float speed; // 0x1318	
	int32_t min_distance_before_bounce; // 0x131c	
	float drag; // 0x1320	
	float max_height; // 0x1324	
	float max_vertical_move_time; // 0x1328	
	float bounce_turn_angle; // 0x132c	
	float bounce_turn_angle_tree; // 0x1330	
	float bounce_delay; // 0x1334	
	Vector m_vLastPos; // 0x1338	
	Vector m_vDir; // 0x1344	
	float m_flSpeed; // 0x1350	
	float m_flDistRemaining; // 0x1354	
	float m_flTreeTimeRemaining; // 0x1358	
	CHandle< CBaseEntity > m_hLastHit; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Seasonal_TI9_Drums_Thinker : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x10]; // 0x1318
public:
	int32_t m_nNextSoundIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Seasonal_TI9_Shovel_Stasis_Trap : public CDOTA_Modifier_Seasonal_Summon_Common_Thinker
{
public:
	CHandle< CBaseEntity > m_hHero; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Seasonal_TI9_Shovel_BabyRoshan : public CDOTA_Buff
{
public:
	bool m_bFirstThink; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	GameTime_t m_flStartTime; // 0x131c	
	Vector m_vecStartingPos; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Seasonal_TI9_Shovel_Ghost_Haunt : public CDOTA_Buff
{
public:
	int32_t nDamageInstances; // 0x1318	
	GameTime_t m_flLastAttackTime; // 0x131c	
	GameTime_t m_flLastMoveTime; // 0x1320	
	CHandle< CBaseEntity > m_hGhost; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Seasonal_TI9_Shovel_Pudgling : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1318	
	int32_t m_nActionCount; // 0x131c	
	Vector m_vecStartingPos; // 0x1320	
	Vector m_vecDestinationOffset; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
class CDOTA_Modifier_Seasonal_TI9_Monkey_Thinker : public CDOTA_Buff
{
public:
	float attack_range; // 0x1318	
	float attack_time; // 0x131c	
	float attack_projectile_time; // 0x1320	
	int32_t projectile_speed; // 0x1324	
	float turn_time; // 0x1328	
	float turn_angle; // 0x132c	
	float shoot_angle; // 0x1330	
	float m_flTurnRate; // 0x1334	
	float m_flTargetYaw; // 0x1338	
	float m_flLastTurnTime; // 0x133c	
	GameTick_t m_nLastTickCount; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	bool m_bHappyMonkeyCondition; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	CHandle< CDOTA_BaseNPC > m_hAngryTarget; // 0x134c	
	CHandle< CDOTA_BaseNPC > m_hAttackTarget; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CountdownTimer m_AttackTimer; // 0x1358	
	CountdownTimer m_AttackProjectileTimer; // 0x1370	
	CountdownTimer m_HappyTimer; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Seasonal_TI9_MonkeyPoop : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Seasonal_PartyHat : public CDOTA_Buff
{
public:
	int32_t controlled_unit_search_radius; // 0x1318	
	bool child_modifier; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	CUtlString m_strEffectName; // 0x1320	
	ParticleIndex_t m_nHatFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Lesser_NightCrawler_Pounce : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t pounce_distance; // 0x1344	
	float pounce_speed; // 0x1348	
	float pounce_acceleration; // 0x134c	
	int32_t pounce_radius; // 0x1350	
	int32_t pounce_damage; // 0x1354	
	float leash_duration; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Zombie_Berserk : public CDOTA_Buff
{
public:
	int32_t berserk_bonus_attack_speed; // 0x1318	
	int32_t berserk_bonus_movement_speed; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Corpselord_Revive : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t ticks_to_revive; // 0x131c	
	float tick_interval; // 0x1320	
	CHandle< CDOTA_BaseNPC > m_pReviveTarget; // 0x1324	
	int32_t m_nCurrentTicks; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Creature_IceSlam_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	ParticleIndex_t m_nPathEffectIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_GreaterClarity : public CDOTA_Buff
{
public:
	int32_t total_mana; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_UpgradedMortar : public CDOTA_Buff
{
public:
	int32_t bonus_per_upgrade; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_UpgradedBarricade : public CDOTA_Buff
{
public:
	int32_t armor_bonus_per_upgrade; // 0x1318	
	int32_t hp_bonus_per_upgrade; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Creature_HybridFlyer : public CDOTA_Buff
{
public:
	CountdownTimer m_ctTimer; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Creature_Full_Avoidance : public CDOTA_Buff
{
public:
	float m_flOriginalAvoidance; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_LootDrop_Thinker : public CDOTA_Buff
{
public:
	bool m_bAutoPickup; // 0x1318	
	bool m_bOnlyPlayerHeroPickup; // 0x1319	
	bool m_bCreepHeroPickup; // 0x131a	
	bool m_bAutoUse; // 0x131b	
	bool m_bFlying; // 0x131c	
	bool m_bUseSpawnAnim; // 0x131d	
	bool m_bAutoTeleport; // 0x131e	
private:
	[[maybe_unused]] uint8_t __pad131f[0x1]; // 0x131f
public:
	GameTime_t m_flKnockbackStartTime; // 0x1320	
	GameTime_t m_flKnockbackEndTime; // 0x1324	
	float m_flKnockbackHeight; // 0x1328	
	float m_flInitialHeight; // 0x132c	
	float m_flKnockbackDuration; // 0x1330	
	float m_flEndHeight; // 0x1334	
	Vector m_vStartPos; // 0x1338	
	Vector m_vEndPos; // 0x1344	
	float m_fPickupRadius; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlString m_strTransitionEffect; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_ItemWiggle_Thinker : public CDOTA_Buff
{
public:
	Vector m_vOriginalPosition; // 0x1318	
	float m_flOriginalScale; // 0x1324	
	GameTime_t m_flLastChangeTime; // 0x1328	
	Vector m_vLastChangePosition; // 0x132c	
	float m_flLastChangeScale; // 0x1338	
	Vector m_vTargetPosition; // 0x133c	
	float m_flTargetScale; // 0x1348	
	bool m_bFirstThink; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float m_flStartAmplitude; // 0x1350	
	float m_flEndAmplitude; // 0x1354	
	float m_flScaleAmplitude; // 0x1358	
	float m_flStartFrequency; // 0x135c	
	float m_flEndFrequency; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_Summon_Snowman_Thinker : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1318	
	int32_t taunt_radius; // 0x131c	
	float taunt_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Snowman_Taunt : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1318	
	bool m_bDidSetAttackTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Frostivus2018_Decorate_Tree_Thinker : public CDOTA_Buff
{
public:
	int32_t num_explosions; // 0x1318	
	int32_t radius; // 0x131c	
	float m_fExplosions; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_FestiveFirework : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_FestiveFirework_Blind : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_Siege_Fireball_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float duration; // 0x131c	
	float tick_interval; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Siege_Fireball_Burn : public CDOTA_Buff
{
public:
	int32_t damage_per_tick; // 0x1318	
	float tick_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Frostivus2018_FacelessVoid_TimeLock : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	float duration_creep; // 0x131c	
	int32_t chance_pct; // 0x1320	
	int32_t bonus_damage; // 0x1324	
	int32_t radius; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Frostivus2018_FacelessVoid_TimeWalk_Tracker : public CDOTA_Buff
{
public:
	CUtlVector< CDOTA_Modifier_Frostivus2018_FacelessVoid_TimeWalk_Tracker::sDamageSources > m_vDamageSources; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_FacelessVoid_TimeWalk : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t speed; // 0x578	
	int32_t range; // 0x57c	
	int32_t radius; // 0x580	
	int32_t damage; // 0x584	
	int32_t m_nProjectileID; // 0x588	
	Vector m_vProjectileLocation; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_Frostivus2018_Luna_Eclipse : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t beams; // 0x1320	
	int32_t hit_count; // 0x1324	
	int32_t m_iBeamDamage; // 0x1328	
	float m_flBeamStun; // 0x132c	
	Vector vPosition; // 0x1330	
	int32_t lucent_beam_radius; // 0x133c	
	bool bAreaTarget; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t m_iTickCount; // 0x1344	
	ParticleIndex_t m_nMoonlightFXIndex; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_HitTargets; // 0x1350	
	float beam_interval; // 0x1368	
	float beam_interval_scepter; // 0x136c	
	float m_flInterval; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_Clinkz_Strafe : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus_pct; // 0x1318	
	int32_t attack_spill_width; // 0x131c	
	int32_t attack_spill_range; // 0x1320	
	float spill_damage_multiplier; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Frostivus2018_Clinkz_SearingArrows : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1318	
	bool m_bBonusAttack; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	int32_t damage_bonus; // 0x1334	
	int32_t attack_spill_width; // 0x1338	
	int32_t attack_spill_range; // 0x133c	
	float spill_damage_multiplier; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Frostivus2018_Clinkz_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1328	
	bool m_bFreePathing; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t move_speed_bonus_pct; // 0x1344	
	int32_t radius; // 0x1348	
	int32_t attack_steal_amount; // 0x134c	
	float attack_steal_duration; // 0x1350	
	int32_t max_stacks; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Clinkz_WindWalk_BonusDamage : public CDOTA_Buff
{
public:
	int32_t bonus_base_dmg_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Clinkz_WindWalk_AttackDebuff : public CDOTA_Buff
{
public:
	int32_t attack_steal_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_Clinkz_Burning_Army_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1318	
	Vector m_vFacePosition; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Clinkz_Burning_Army : public CDOTA_Buff
{
public:
	float attack_rate; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Frostivus2018_BroodBaby_Launch : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1318	
	float m_flPredictedTotalTime; // 0x1324	
	Vector m_vStartPosition; // 0x1328	
	float m_flCurrentTimeHoriz; // 0x1334	
	float m_flCurrentTimeVert; // 0x1338	
	bool m_bHorizontalMotionInterrupted; // 0x133c	
	bool m_bDamageApplied; // 0x133d	
	bool m_bTargetTeleported; // 0x133e	
private:
	[[maybe_unused]] uint8_t __pad133f[0x1]; // 0x133f
public:
	Vector m_vHorizontalVelocity; // 0x1340	
	Vector m_vLastKnownTargetPosition; // 0x134c	
	float m_flInitialVelocityZ; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Tusk_SnowballMeteor_Land : public CDOTA_Buff
{
public:
	Vector m_vDir; // 0x1318	
	int32_t travel_speed; // 0x1324	
	int32_t travel_distance; // 0x1328	
	int32_t vision_distance; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tusk_SnowballMeteor_Burn : public CDOTA_Buff
{
public:
	float m_flDamagePerSecond; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Tusk_WalrusKick_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Frostivus2018_Tusk_WalrusKick_AirTime : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	float m_flOldPitch; // 0x1324	
	QAngle m_qRotation; // 0x1328	
	int32_t m_nRotations; // 0x1334	
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	int32_t push_length; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Frostivus2018_DarkWillow_ShadowRealm_Buff : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1318	
	float damage; // 0x131c	
	float max_damage_duration; // 0x1320	
	float slow_radius; // 0x1324	
	float burn_duration; // 0x1328	
	float burn_damage; // 0x132c	
	float slow_attack_speed_pct; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_DarkWillow_ShadowRealm_Burn_Slow : public CDOTA_Buff
{
public:
	float burn_damage; // 0x1318	
	int32_t move_slow; // 0x131c	
	float m_flDamageScale; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Frostivus2018_DarkWillow_BrambleMaze_Creation_Thinker : public CDOTA_Buff
{
public:
	float latch_creation_interval; // 0x1318	
	float initial_creation_delay; // 0x131c	
	int32_t placement_count; // 0x1320	
	float placement_duration; // 0x1324	
	int32_t m_iBramblesIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Frostivus2018_DarkWillow_BrambleMaze_Thinker : public CDOTA_Buff
{
public:
	int32_t latch_count; // 0x1318	
	int32_t latch_range; // 0x131c	
	int32_t latch_vision; // 0x1320	
	float latch_creation_delay; // 0x1324	
	float latch_duration; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x8]; // 0x132c
public:
	bool m_bActive; // 0x1334	
private:
	[[maybe_unused]] uint8_t __pad1335[0x3]; // 0x1335
public:
	int32_t m_nLatchedEnemies; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Frostivus2018_DarkWillow_Bedlam : public CDOTA_Buff
{
public:
	float m_flRotation; // 0x1318	
	CHandle< CBaseEntity > m_hWisp; // 0x131c	
	GameTime_t m_flLastAttack; // 0x1320	
	int32_t roaming_radius; // 0x1324	
	int32_t attack_radius; // 0x1328	
	float roaming_seconds_per_rotation; // 0x132c	
	float attack_interval; // 0x1330	
	int32_t attack_targets; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Frostivus2018_Puck_DreamCoil_Thinker : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hLinkedEntities; // 0x1318	
	int32_t coil_radius; // 0x1330	
	int32_t coil_break_radius; // 0x1334	
	float coil_stun_duration; // 0x1338	
	float coil_stun_duration_scepter; // 0x133c	
	float coil_slow; // 0x1340	
	int32_t coil_break_damage; // 0x1344	
	int32_t coil_break_damage_scepter; // 0x1348	
	bool m_bHasScepter; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	CUtlVector< ParticleIndex_t > m_FXIndex; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Frostivus2018_Puck_Coiled : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Spectre_ActiveDispersion : public CDOTA_Buff
{
public:
	int32_t damage_reflection_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Frostivus2018_Spectre_ActiveDispersion_Thinker : public CDOTA_Buff
{
public:
	float m_fDamage; // 0x1318	
	float m_fLastRadius; // 0x131c	
	float m_fCurRadius; // 0x1320	
	GameTime_t m_fLastThink; // 0x1324	
	bool m_bContracting; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x7]; // 0x1329
public:
	CountdownTimer m_ViewerTimer; // 0x1330	
	ParticleIndex_t m_nFXIndex; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1350	
	int32_t speed; // 0x1368	
	int32_t radius; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Centaur_Stampede_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Frostivus2018_Centaur_Stampede : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage_reduction; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Centaur_Stampede_Bonus_Armor : public CDOTA_Buff
{
public:
	int32_t bonus_base_armor_per_stack; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Centaur_Return_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_Centaur_Return : public CDOTA_Buff
{
public:
	int32_t return_damage; // 0x1318	
	float strength_gain_duration; // 0x131c	
	int32_t max_stacks; // 0x1320	
	int32_t ally_factor; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Centaur_Return_Bonus_Strength : public CDOTA_Buff
{
public:
	int32_t strength_gain; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Frostivus2018_Huskar_Inner_Fire_Disarm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Frostivus2018_Huskar_Burning_Spear_Self : public CDOTA_Buff
{
public:
	int32_t health_cost; // 0x1318	
	int32_t spear_aoe; // 0x131c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Huskar_Burning_Spear_Counter : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Huskar_Burning_Spear_Debuff : public CDOTA_Buff
{
public:
	int32_t burn_damage; // 0x1318	
	float tick_rate; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Frostivus2018_Huskar_Life_Break : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	Vector m_vProjectileLocation; // 0x578	
	CHandle< CBaseEntity > m_hTarget; // 0x584	
	bool m_bInterrupted; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	int32_t max_damage; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Omniknight_Degen_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Omniknight_Degen_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
	int32_t bonus_health_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Omniknight_Repel : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Frostivus2018_Magnataur_Skewer_Bonus_Strength : public CDOTA_Buff
{
public:
	int32_t strength_gain; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Frostivus2018_Pangolier_ShieldCrash_Jump : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1318	
	float jump_duration_gyroshell; // 0x131c	
	int32_t jump_height; // 0x1320	
	int32_t jump_height_gyroshell; // 0x1324	
	float m_flStartZ; // 0x1328	
	float m_flCurTime; // 0x132c	
	float m_flJumpDuration; // 0x1330	
	float m_flJumpHeight; // 0x1334	
	int32_t jump_horizontal_distance; // 0x1338	
	Vector m_vTargetHorizontalDirection; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Frostivus2018_TrollWarlord_BattleTrance : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t attack_speed; // 0x131c	
	int32_t lifesteal; // 0x1320	
	int32_t bonus_damage_pct; // 0x1324	
	float cleave_damage_pct; // 0x1328	
	int32_t cleave_starting_width; // 0x132c	
	int32_t cleave_ending_width; // 0x1330	
	int32_t cleave_distance; // 0x1334	
	float splash_damage_pct; // 0x1338	
	int32_t splash_radius; // 0x133c	
	CHandle< CBaseEntity > m_hTarget; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_TrollWarlord_Fervor : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1318	
	int32_t max_stacks; // 0x131c	
	CHandle< CBaseEntity > m_hUnit; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Frostivus2018_Earthshaker_Aftershock : public CDOTA_Buff
{
public:
	int32_t aftershock_range; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t ability_damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Frostivus2018_Weaver_GeminateAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_iAttacksRemaining; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad1320[0x38]; // 0x1320
public:
	int32_t arrow_count; // 0x1358	
	int32_t bonus_range; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_AghsFort_Tower_BlastWave_Thinker : public CDOTA_Buff
{
public:
	float damage_pct; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1324[0x4]; // 0x1324
public:
	CountdownTimer m_ViewerTimer; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1348	
	int32_t speed; // 0x1360	
	int32_t radius; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_TempBuff_CorpseExplosion_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_TempBuff_CorpseExplosion_Debuff : public CDOTA_Buff
{
public:
	int32_t corpse_explosion_radius; // 0x1318	
	int32_t corpse_explosion_damage_pct; // 0x131c	
	int32_t corpse_explosion_chance_pct; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_HPAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_HPAura_Bonus : public CDOTA_Buff
{
public:
	float bonus_hp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_CritAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_CritAura_Bonus : public CDOTA_Buff
{
public:
	int32_t crit_chance; // 0x1318	
	int32_t crit_multiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_MagicResistAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_MagicResistAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_magical_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_ArmorAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Reward_ArmorAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_PlasmaField_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	bool m_bWindingUp; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CountdownTimer m_ViewerTimer; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1348	
	int32_t speed; // 0x1360	
	int32_t radius; // 0x1364	
	int32_t damage_min; // 0x1368	
	int32_t damage_max; // 0x136c	
	int32_t slow_min; // 0x1370	
	int32_t slow_max; // 0x1374	
	float slow_duration; // 0x1378	
	float windup_time; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_PlasmaField_Slow : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ascension_Bulwark : public CDOTA_Buff
{
public:
	float physical_damage_reduction; // 0x1318	
	float physical_damage_reduction_side; // 0x131c	
	float forward_angle; // 0x1320	
	float side_angle; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ascension_AcidBlood_Thinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	int32_t radius; // 0x131c	
	ParticleIndex_t m_nFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ascension_AcidBlood : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_AghsFort_Firefly : public CDOTA_Buff
{
public:
	float pool_duration; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t m_ifirefly_Active; // 0x1320	
	int32_t tree_radius; // 0x1324	
	int32_t damage_pct_per_second; // 0x1328	
	int32_t movement_speed; // 0x132c	
	float trail_placement_duration; // 0x1330	
	float burn_linger_duration; // 0x1334	
	bool m_bActive; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nFXIndex; // 0x133c	
	ParticleIndex_t m_nFXIndexB; // 0x1340	
	GameTime_t m_flStartTime; // 0x1344	
	Vector m_vLastFirePoolLoc; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< Vector > m_vFirePoolLocations; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Firefly_Burn : public CDOTA_Buff
{
public:
	int32_t damage_pct_per_second; // 0x1318	
	int32_t movement_speed; // 0x131c	
	float tick_interval; // 0x1320	
	GameTime_t m_fNextDamageTick; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_Silence_Charge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_Silence_Display : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_MagneticField_Thinker_Evasion : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1318[0x8]; // 0x1318
public:
	int32_t radius; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_MagneticField_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_Invis_Warning : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Ascension_Invis : public CDOTA_Modifier_PersistentInvisibility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ascension_Meteoric_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1318	
	float land_time; // 0x131c	
	float burn_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Morty_Hop_Controller : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Morty_Hop : public CDOTA_Buff
{
public:
	Vector m_vStartPosition; // 0x1318	
	Vector m_vTargetPosition; // 0x1324	
	float m_flCurrentTimeHoriz; // 0x1330	
	float m_flCurrentTimeVert; // 0x1334	
	float m_flZCoefficientA; // 0x1338	
	float m_flZCoefficientB; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float duration; // 0x1344	
	int32_t height; // 0x1348	
	int32_t damage; // 0x134c	
	int32_t damage_radius; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_ExplosiveBarrel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t damage; // 0x1320	
	int32_t vision_radius; // 0x1324	
	float vision_duration; // 0x1328	
	int32_t model_scale; // 0x132c	
	bool bExploding; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1331[0x3]; // 0x1331
public:
	float stun_duration; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_AghsFort_PlayerTransform : public CDOTA_Buff
{
public:
	itemid_t m_nCourierItemId; // 0x1318	
	CUtlString m_ModelNameOfDisguise; // 0x1320	
private:
	[[maybe_unused]] uint8_t __pad1328[0x8]; // 0x1328
public:
	int32_t m_nMoveSpeed; // 0x1330	
	int32_t m_nDisguisedSpeed; // 0x1334	
	ParticleIndex_t m_nDisguiseEffectIndex; // 0x1338	
	CHandle< CBaseEntity > m_hCourier; // 0x133c	
	bool m_bIsFlyingCourier; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x7]; // 0x1341
public:
	char* s_pszDonkeyDisguise; // 0x1348	
	float invul_duration; // 0x1350	
	bool m_bParticlesSpawned; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Ravage_Potion : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
	bool m_bDamageApplied; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_DragonPotion : public CDOTA_Buff_Item
{
public:
	int32_t m_iOriginalAttackCapabilities; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1320	
	int32_t bonus_movement_speed; // 0x1328	
	int32_t bonus_attack_damage; // 0x132c	
	int32_t bonus_attack_range; // 0x1330	
	int32_t attack_projectile_speed; // 0x1334	
	int32_t magic_resistance; // 0x1338	
	int32_t model_scale; // 0x133c	
	int32_t skin_number; // 0x1340	
	bool flying_movement; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Arcanist_Potion : public CDOTA_Buff
{
public:
	int32_t m_nCooldownReductionPct; // 0x1318	
	int32_t m_nManaCostReductionPct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_EchoSlamPotion_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Potion_SpendCharge : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_TorrentEffectPotion_Thinker : public CDOTA_Buff_Item
{
public:
	float m_fProcChance; // 0x1318	
	int32_t m_nRadius; // 0x131c	
	int32_t m_nMovespeedBonus; // 0x1320	
	float m_fStunDuration; // 0x1324	
	float m_fSlowDuration; // 0x1328	
	float m_fDelay; // 0x132c	
	int32_t m_nTorrentDamage; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_TorrentEffectPotion_Torrent : public CDOTA_Buff_Item
{
public:
	int32_t m_nTorrentDamage; // 0x1318	
	float m_flStartZ; // 0x131c	
	float m_flCurTime; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_TorrentEffectPotion_Torrent_Slow : public CDOTA_Buff
{
public:
	int32_t m_nMovespeedBonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_AghsFort_ShadowWaveEffectPotion : public CDOTA_Buff_Item
{
public:
	int32_t m_iCurJumpCount; // 0x1318	
	Vector m_vCurTargetLoc; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1328	
	float m_fProcChance; // 0x1340	
	int32_t m_nCastRange; // 0x1344	
	int32_t m_nBounceRadius; // 0x1348	
	int32_t m_nDamageRadius; // 0x134c	
	int32_t m_nDamage; // 0x1350	
	int32_t m_nMaxTargets; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Minor_Stats_Upgrade : public CDOTA_Buff
{
public:
	int32_t bonus_all_stats; // 0x1318	
	int32_t bonus_primary_stat; // 0x131c	
	int32_t bonus_movespeed; // 0x1320	
	int32_t bonus_hp_regen; // 0x1324	
	int32_t bonus_armor; // 0x1328	
	int32_t bonus_attack_damage; // 0x132c	
	int32_t bonus_cast_range; // 0x1330	
	int32_t bonus_spell_amp; // 0x1334	
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t bonus_attack_speed; // 0x1340	
	int32_t bonus_heal_amp; // 0x1344	
	int32_t bonus_mana_regen; // 0x1348	
	int32_t bonus_evasion; // 0x134c	
	int32_t bonus_magic_resist; // 0x1350	
	int32_t bonus_lifesteal; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_AggroOverride : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_SwampSickness : public CDOTA_Buff
{
public:
	int32_t slow_percent; // 0x1318	
	bool m_bInRiver; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_RestorativeFlower : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t heal; // 0x131c	
	int32_t vision_radius; // 0x1320	
	float vision_duration; // 0x1324	
	int32_t model_scale; // 0x1328	
	bool bExploding; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad132d[0x3]; // 0x132d
public:
	float stun_duration; // 0x1330	
	ParticleIndex_t m_nFXAmbient; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_StonehallGeneral_OverwhelmingOdds_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t max_steps; // 0x131c	
	float damage_interval; // 0x1320	
	int32_t m_nNumSteps; // 0x1324	
	int32_t m_nRadiusStep; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x132c	
	Vector m_vDir; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Boss_DarkWillow_Bedlam : public CDOTA_Buff
{
public:
	float m_flRotation; // 0x1318	
	CHandle< CBaseEntity > m_hWisp; // 0x131c	
	GameTime_t m_flLastAttack; // 0x1320	
	bool reversed; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	int32_t roaming_radius; // 0x1328	
	int32_t attack_radius; // 0x132c	
	float roaming_seconds_per_rotation; // 0x1330	
	float attack_interval; // 0x1334	
	bool m_bSetupWarning; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nPreviewFX; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Enrage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Spectre_ActiveDispersion : public CDOTA_Buff
{
public:
	int32_t damage_reflection_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_AghsFort_Spectre_ActiveDispersion_Thinker : public CDOTA_Buff
{
public:
	float m_fDamage; // 0x1318	
	float m_fLastRadius; // 0x131c	
	float m_fCurRadius; // 0x1320	
	GameTime_t m_fLastThink; // 0x1324	
	bool m_bContracting; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x7]; // 0x1329
public:
	CountdownTimer m_ViewerTimer; // 0x1330	
	ParticleIndex_t m_nFXIndex; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1350	
	int32_t speed; // 0x1368	
	int32_t radius; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_RockGolem_Avalanche_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_AghsFort_RockGolem_Avalanche : public CDOTA_Buff
{
public:
	CUtlVector< CDOTA_BaseNPC* > m_pHeroesHit; // 0x1318	
	int32_t radius; // 0x1330	
	float total_duration; // 0x1334	
	float stun_duration; // 0x1338	
	int32_t tick_count; // 0x133c	
	int32_t m_damage; // 0x1340	
	int32_t m_nTicks; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Creature_Phoenix_FireSpiritCount : public CDOTA_Buff
{
public:
	int32_t spirit_count; // 0x1318	
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_AghsFort_Creature_Phoenix_Sun : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1318	
	float stun_duration; // 0x131c	
	int32_t max_hero_attacks; // 0x1320	
	int32_t max_hero_attacks_scepter; // 0x1324	
	int32_t max_hero_attacks_required; // 0x1328	
	float caster_life_pct; // 0x132c	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x1330	
	int32_t m_iAttackCount; // 0x1334	
	int32_t creep_attacks_count; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_PudgeMiniboss_HatefulStrike : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t maxhp_percent_damage; // 0x131c	
	int32_t every_n_attacks; // 0x1320	
	bool crit_active; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PudgeMiniboss_ArmorCorruption : public CDOTA_Buff
{
public:
	float armor_reduction_per_stack; // 0x1318	
	float stack_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PudgeMiniboss_ArmorCorruptionDebuff : public CDOTA_Buff
{
public:
	float armor_reduction_per_stack; // 0x1318	
	float stack_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_PudgeMiniboss_ArmorCorruptionStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Wave_Blast_Knockback : public CDOTA_Buff
{
public:
	float disarm_duration; // 0x1318	
	Vector m_vPushDir; // 0x131c	
	GameTime_t m_flStartTime; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Wave_Blast_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_AghsFort_Waveblaster_Leap : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float leap_speed; // 0x1344	
	float leap_acceleration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_Morphling_Waveform : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	int32_t m_nProjectileID; // 0x578	
	Vector m_vProjectileLocation; // 0x57c	
	CHandle< CBaseEntity > m_hHitHero; // 0x588	
	bool m_bGrantedGem; // 0x58c	
private:
	[[maybe_unused]] uint8_t __pad058d[0x3]; // 0x58d
public:
	ParticleIndex_t m_nPreviewFX; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Morphling_Waveform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Creature_Impale : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1318	
	float m_flCurTime; // 0x131c	
	float m_flDuration; // 0x1320	
	bool m_bDamageApplied; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_Creature_SpikedCarapace : public CDOTA_Buff
{
public:
	float stun_duration; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecAlreadyAppliedDebuff; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_Aghsfort_Walrus_Pudge_Harpoon : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	Vector m_vProjectileLocation; // 0x578	
	float hook_speed; // 0x584	
	int32_t hook_width; // 0x588	
	int32_t hook_distance; // 0x58c	
	bool m_bRetracting; // 0x590	
	bool m_bDiedInHook; // 0x591	
private:
	[[maybe_unused]] uint8_t __pad0592[0x2]; // 0x592
public:
	CHandle< CBaseEntity > m_hVictim; // 0x594	
	Vector m_vTargetPosition; // 0x598	
	Vector m_vCasterPosition; // 0x5a4	
	bool m_bChainDetached; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x3]; // 0x5b1
public:
	ParticleIndex_t m_iChainParticle; // 0x5b4	
	int32_t m_iHookParticle; // 0x5b8	
	int32_t m_nManaCost; // 0x5bc	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5c0	
	ParticleIndex_t m_nPreviewFX; // 0x5c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Walrus_Pudge_Harpoon_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Walrus_Pudge_Harpoon : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Creature_Flamestrike : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1318	
	float ground_burn_duration; // 0x131c	
	float damage; // 0x1320	
	int32_t vision_distance; // 0x1324	
	float vision_duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Creature_Flamestrike_Ground : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1318	
	int32_t burn_radius; // 0x131c	
	int32_t burn_dps; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_DragonKnight_BreatheFire_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PineCone_ShieldBash_Slow : public CDOTA_Buff
{
public:
	int32_t knockback_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PineCone_ShieldBash_Crit : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PineCone_AcornShot_DelayThinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	int32_t m_nSourceProjectileHandle; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PineCone_AcornShot_TreeThinker : public CDOTA_Buff
{
public:
	CHandle< CDOTA_TempTree > m_hTree; // 0x1318	
	int32_t fow_viewer; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PineCone_AcornShot_BonusDamage : public CDOTA_Buff
{
public:
	int32_t acorn_shot_damage; // 0x1318	
	int32_t base_damage_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PineCone_AcornShot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Lifestealer_Enraged_Pulse : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_UrnUpheaval : public CDOTA_Buff
{
public:
	int32_t m_iSlow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_UpheavalUrn_Reincarnation : public CDOTA_Buff
{
public:
	float reincarnate_time; // 0x1318	
	GameTime_t m_fLastReincarnationTime; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_SkeletonKing_VampiricAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_Shadow_Demon_Shadow_Poison : public CDOTA_Buff
{
public:
	float stack_damage; // 0x1318	
	float bonus_stack_damage; // 0x131c	
	int32_t max_multiply_stacks; // 0x1320	
	int32_t release_at_max_stacks; // 0x1324	
	ParticleIndex_t m_nFXStackIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_ShadowShaman_Shackles : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1318	
	float total_damage; // 0x131c	
	float channel_time; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hTarget"
class CDOTA_Ability_Aghsfort_Elemental_Wisp_Tether : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x578	
	Vector m_vProjectileLocation; // 0x57c	
	bool m_bProjectileActive; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	int32_t latch_distance; // 0x58c	
	int32_t m_iProjectileIndex; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
class CDOTA_Modifier_Aghsfort_Elemental_Wisp_Tether : public CDOTA_Buff
{
public:
	bool m_bInManaGained; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	CHandle< CBaseEntity > m_hTarget; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > hStunnedEntities; // 0x1320	
	float slow_duration; // 0x1338	
	int32_t movespeed; // 0x133c	
	int32_t self_bonus; // 0x1340	
	bool m_bIsInRange; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	int32_t radius; // 0x1348	
	int32_t latch_distance; // 0x134c	
	float m_flHealthHealed; // 0x1350	
	float m_flManaHealed; // 0x1354	
	float tether_heal_amp; // 0x1358	
	GameTime_t m_flHealMessageTime; // 0x135c	
	GameTime_t m_flManaMessageTime; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Elemental_Wisp_Tether_Haste : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1318	
	int32_t attack_speed; // 0x131c	
	int32_t health_regen; // 0x1320	
	int32_t status_resist; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Elemental_Wisp_Tether_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Aghsfort_Wildwing_Tornado_Blast_Debuff : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1318	
	Vector m_vStartPos; // 0x131c	
	float m_flCurTime; // 0x1328	
	float m_flHeightT; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise : public CDOTA_Buff
{
public:
	CountdownTimer m_RevealTimer; // 0x1318	
	CountdownTimer m_InvisAttackTimer; // 0x1330	
	CountdownTimer m_CooldownTimer; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_Tree_Walking : public CDOTA_Buff
{
public:
	int32_t movement_bonus; // 0x1318	
	int32_t regen_amp; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_NearTreeDisplay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_Root : public CDOTA_Buff
{
public:
	float m_iEntangleDamage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_PoisonNova_Creature_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1318	
	GameTime_t m_fLastThink; // 0x131c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1320	
	int32_t speed; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t start_radius; // 0x1340	
	float duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Creature_Venomancer_PoisonNova : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_Creature_Venomancer_PoisonSting_Applier : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	int32_t damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_AghsFort_Venomancer_PoisonSting : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1318	
	int32_t movement_speed; // 0x131c	
	int32_t m_nTicksRemaining; // 0x1320	
	float m_flAttackDamage; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Firestorm_Thinker : public CDOTA_Buff
{
public:
	int32_t wave_damage; // 0x1318	
	int32_t wave_count; // 0x131c	
	int32_t radius; // 0x1320	
	int32_t summon_count; // 0x1324	
	float wave_interval; // 0x1328	
	float burn_duration; // 0x132c	
	float first_wave_delay; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Firestorm_Burn : public CDOTA_Buff
{
public:
	float burn_damage; // 0x1318	
	float burn_interval; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Portal_Warp_Channel_Soundstop : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Portal_Warp_Channel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1318	
	ParticleIndex_t m_nfxTargetTp2; // 0x131c	
	ParticleIndex_t m_nfxAmbientFx; // 0x1320	
	ParticleIndex_t m_nfxPortal1; // 0x1324	
	ParticleIndex_t m_nfxPortal2; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad132c[0x8]; // 0x132c
public:
	CHandle< CBaseEntity > m_hPortal; // 0x1334	
	Vector m_vStartPosition; // 0x1338	
	float m_flTotalTime; // 0x1344	
	float m_flElapsedTimePortion; // 0x1348	
	float animation_rate; // 0x134c	
	int32_t stop_distance; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Portal_FX : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPortalAmbientFX; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nConsecutiveHits"
class CDOTA_Ability_Aghsfort_Bonus_Pudge_MeatHook : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	Vector m_vProjectileLocation; // 0x578	
	float hook_speed; // 0x584	
	int32_t hook_width; // 0x588	
	int32_t hook_distance; // 0x58c	
	bool m_bRetracting; // 0x590	
	bool m_bDiedInHook; // 0x591	
private:
	[[maybe_unused]] uint8_t __pad0592[0x2]; // 0x592
public:
	CHandle< CBaseEntity > m_hVictim; // 0x594	
	Vector m_vTargetPosition; // 0x598	
	Vector m_vCasterPosition; // 0x5a4	
	bool m_bChainDetached; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x3]; // 0x5b1
public:
	ParticleIndex_t m_iChainParticle; // 0x5b4	
	int32_t m_iHookParticle; // 0x5b8	
	int32_t m_nManaCost; // 0x5bc	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5c0	
	int32_t m_nNextConsecutiveHitCount; // 0x5c4	
	// MNetworkEnable
	int32_t m_nConsecutiveHits; // 0x5c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Aghsfort_Bonus_Pudge_Meat_Hook : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_AghsFort_AmoebaBoss_Summoned_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Aghsfort_Modifier_Magnus_Push_Skewer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
class CDOTA_Modifier_Aghsfort_Hoodwink_ArcingBoomerang : public CDOTA_Buff
{
public:
	Vector m_vLeftControl; // 0x1318	
	Vector m_vRightControl; // 0x1324	
	Vector m_vTargetLoc; // 0x1330	
	Vector m_vOriginalTargetLoc; // 0x133c	
	Vector m_vSourceLoc; // 0x1348	
	float m_flDuration; // 0x1354	
	GameTime_t m_flDieTime; // 0x1358	
	bool m_bReturning; // 0x135c	
private:
	[[maybe_unused]] uint8_t __pad135d[0x3]; // 0x135d
public:
	int32_t m_nFramesToWait; // 0x1360	
	CHandle< CBaseEntity > m_hBoomerang; // 0x1364	
	ParticleIndex_t m_nBoomerangFXIndex; // 0x1368	
	ParticleIndex_t m_nOldBoomerangFXindex; // 0x136c	
	CUtlVector< CHandle< CBaseEntity > > m_vecUniqueHitList; // 0x1370	
	int32_t radius; // 0x1388	
	int32_t spread; // 0x138c	
	int32_t damage; // 0x1390	
	float min_throw_duration; // 0x1394	
	float max_throw_duration; // 0x1398	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Aghsfort_Pugna_Grandmaster_NetherWard : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float mana_multiplier; // 0x131c	
	float mana_drained_per_attack; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
class CDOTA_Modifier_AghsFort_AssaultCaptain_SunRay : public CDOTA_Buff
{
public:
	int32_t hp_cost_perc_per_second; // 0x1318	
	int32_t beam_range; // 0x131c	
	int32_t base_damage; // 0x1320	
	int32_t base_heal; // 0x1324	
	float tick_interval; // 0x1328	
	float forward_move_speed; // 0x132c	
	float turn_rate_initial; // 0x1330	
	float turn_rate; // 0x1334	
	int32_t radius; // 0x1338	
	int32_t self_turn_rate_percent; // 0x133c	
	float m_flCurrentTime; // 0x1340	
	GameTime_t m_flLastDamageTime; // 0x1344	
	float m_flAccumulatedSelfDamage; // 0x1348	
	bool m_bMovingForward; // 0x134c	
	bool m_bTurningFast; // 0x134d	
private:
	[[maybe_unused]] uint8_t __pad134e[0x2]; // 0x134e
public:
	float m_flFacingTarget; // 0x1350	
	float hp_perc_damage; // 0x1354	
	float hp_perc_heal; // 0x1358	
	ParticleIndex_t m_nBeamFXIndex; // 0x135c	
	CHandle< CBaseEntity > m_hVisionThinkers[8]; // 0x1360	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1380	
	bool m_bCreatedVisionThinkers; // 0x1384	
private:
	[[maybe_unused]] uint8_t __pad1385[0x3]; // 0x1385
public:
	CHandle< CBaseEntity > m_hBeamEndSound; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_AghsFort_BossWinterWyvern_Cold_Embrace_Thinker : public CDOTA_Buff
{
public:
	int32_t freeze_radius; // 0x1318	
	int32_t freeze_damage; // 0x131c	
	float freeze_debuff_duration; // 0x1320	
	float freeze_delay; // 0x1324	
	ParticleIndex_t m_nFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AghsFort_BossWinterWyvern_Cold_Embrace_Debuff : public CDOTA_Buff
{
public:
	int32_t linger_movement_slow; // 0x1318	
	int32_t linger_damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Blessings_Debuff_Duration_Increase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_AghsFort_TrapRoom_Hookshot : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	Vector m_vStartPosition; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad1328[0x8]; // 0x1328
public:
	int32_t speed; // 0x1330	
	float duration; // 0x1334	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Ability_AghsFort_TrapRoom_MeatHook : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0568[0x10]; // 0x568
public:
	Vector m_vProjectileLocation; // 0x578	
	float hook_speed; // 0x584	
	int32_t hook_width; // 0x588	
	int32_t hook_distance; // 0x58c	
	bool m_bRetracting; // 0x590	
	bool m_bDiedInHook; // 0x591	
private:
	[[maybe_unused]] uint8_t __pad0592[0x2]; // 0x592
public:
	CHandle< CBaseEntity > m_hVictim; // 0x594	
	Vector m_vTargetPosition; // 0x598	
	Vector m_vCasterPosition; // 0x5a4	
	bool m_bChainDetached; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x3]; // 0x5b1
public:
	ParticleIndex_t m_iChainParticle; // 0x5b4	
	int32_t m_iHookParticle; // 0x5b8	
	int32_t m_nManaCost; // 0x5bc	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5c0	
	int32_t m_nNextConsecutiveHitCount; // 0x5c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_TrapRoom_MeatHook_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_TrapRoom_MeatHook : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Effigy_AghsFort : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_AghsFort_Watch_Tower_Capturing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_AghsFort_Watch_Tower : public CDOTA_Buff
{
public:
	TowerState_t m_nState; // 0x1318	
	float m_flYaw; // 0x131c	
	int32_t m_nCaptureDuration; // 0x1320	
	GameTime_t m_flEffectiveCaptureStartTime; // 0x1324	
	int32_t m_nCapturingPlayerCount; // 0x1328	
	float m_flCaptureProgress; // 0x132c	
	int32_t m_iCapturingTeam; // 0x1330	
	ParticleIndex_t m_nFxOutpostAmbient; // 0x1334	
	GameTime_t m_flDestroyTime; // 0x1338	
	GameTime_t m_flAutoChannelCompleteTime; // 0x133c	
	bool m_bAscensionLevelPicker; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t m_nEliteChallengeLevel; // 0x1344	
	CUtlString m_strNextRoomName; // 0x1348	
	CUtlString m_strNextEncounterName; // 0x1350	
	bool m_bStartedBeamFacing; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_HighFiveRequested : public CDOTA_Buff
{
public:
	int32_t acknowledge_range; // 0x1318	
	float think_interval; // 0x131c	
	float acknowledged_cooldown; // 0x1320	
	bool m_bAcknowledged; // 0x1324	
	bool m_bFirstThink; // 0x1325	
private:
	[[maybe_unused]] uint8_t __pad1326[0x2]; // 0x1326
public:
	int32_t high_five_level; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Jungle_Spirit : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > hCasterList; // 0x1318	
	bool bAcceptingGems; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Spirit_Gem : public CDOTA_Buff
{
public:
	float m_flOriginalModelScale; // 0x1318	
	int32_t m_nHealthBarOffsetOverride; // 0x131c	
	ParticleIndex_t m_nFXStackIndex; // 0x1320	
	float m_fScaleGainPerGem; // 0x1324	
	int32_t m_nLevel; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Reductions : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecAlliesNearby; // 0x1318	
	int32_t m_nAlliesNearby; // 0x1330	
	int32_t stat_reduction_pct; // 0x1334	
	int32_t armor_reduction; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Ally_Alert : public CDOTA_Buff
{
public:
	GameTime_t m_flLastHowl; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_JungleSpirit_RiverRejuvenation : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_JungleSpirit_RiverRejuvenation_Effect : public CDOTA_Buff
{
public:
	int32_t distance_from_shrine; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_JungleSpirit_RiverRejuvenation_Regen : public CDOTA_Buff
{
public:
	int32_t health_restore; // 0x1318	
	int32_t mana_restore; // 0x131c	
	float regen_interval; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_JungleSpirit_BaseAttackRangeIncrease : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Morokai_JungleHealBeam : public CDOTA_Buff
{
public:
	int32_t beam_count; // 0x1318	
	int32_t beam_range; // 0x131c	
	int32_t beam_radius; // 0x1320	
	int32_t beam_buffer; // 0x1324	
	int32_t turn_rate; // 0x1328	
	int32_t hp_per_second; // 0x132c	
	GameTime_t m_flLastThinkTime; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x1c]; // 0x1334
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecTargetedEntities; // 0x1350	
	float flLastTreeDestroyed; // 0x1368	
	float flTreeDestructionCooldown; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Ability_JungleSpirit_Volcano_Eruption_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
class CDOTA_Modifier_JungleSpirit_Storm_Cyclone : public CDOTA_Buff
{
public:
	CUtlVector< ParticleIndex_t > m_FXIndex; // 0x1318	
	CUtlVector< CHandle< CBaseEntity > > m_hCyclones; // 0x1330	
	int32_t projectile_distance; // 0x1348	
	int32_t projectile_radius; // 0x134c	
	int32_t projectile_amount; // 0x1350	
	float projectile_duration; // 0x1354	
	float delay; // 0x1358	
	GameTime_t m_flDieTime; // 0x135c	
	GameTime_t m_flStartTime; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< Vector > m_vLeftControl; // 0x1368	
	CUtlVector< Vector > m_vSourceLoc; // 0x1380	
	Vector m_vTargetLoc; // 0x1398	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Storm_Cyclone_Debuff : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1318	
	Vector m_vStartPos; // 0x131c	
	float m_flCurTime; // 0x1328	
	float m_flHeightT; // 0x132c	
	int32_t cyclone_damage; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Storm_Cyclone_Invulnerable : public CDOTA_Buff
{
public:
	ParticleIndex_t nFXIndex; // 0x1318	
	int32_t projectile_radius; // 0x131c	
	int32_t projectile_destruction_radius; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Storm_Multicast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Storm_Multicast_Cooldown : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Jungle_Lumber_Lock : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Jungle_Lumber_Lock_Immunity : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Volcano_Fire_Strike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Volcano_Fire_Strike_Caster : public CDOTA_Buff
{
public:
	int32_t damage_modifier; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Jungle_Spirit_Range_Attack : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t projectile_speed; // 0x131c	
	float turn_rate; // 0x1320	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_Portal : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x1318	
	Vector m_vSpawnPos; // 0x131c	
	CUtlVector< Vector > m_vecEmissions; // 0x1328	
	bool m_bChatSent; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t m_nPhase; // 0x1344	
	int32_t m_nNumEmitted; // 0x1348	
	int32_t m_nNumDrops; // 0x134c	
	GameTime_t m_flStartTime; // 0x1350	
	GameTime_t m_flLastEmitTime; // 0x1354	
	bool m_bIsOnRadiant; // 0x1358	
	bool m_bUseLargeEmit; // 0x1359	
private:
	[[maybe_unused]] uint8_t __pad135a[0x2]; // 0x135a
public:
	int32_t m_nOutcome; // 0x135c	
private:
	[[maybe_unused]] uint8_t __pad1360[0x10]; // 0x1360
public:
	int32_t PHASE_OPEN; // 0x1370	
	int32_t PHASE_EMIT; // 0x1374	
	int32_t PHASE_EMIT_DONE; // 0x1378	
	int32_t PHASE_CLOSE; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_DiscoBall : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_DiscoBall_Channeling : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t m_nGesture; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13e0
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_SoccerBall : public CDOTA_Buff
{
public:
	Vector m_vPost1; // 0x1318	
	Vector m_vPost2; // 0x1324	
	Vector m_vPostForward; // 0x1330	
	ParticleIndex_t m_nPost1FXIndex; // 0x133c	
	ParticleIndex_t m_nPost2FXIndex; // 0x1340	
	ParticleIndex_t m_nPost3FXIndex; // 0x1344	
	int32_t PHASE_START; // 0x1348	
	int32_t PHASE_GESTURE; // 0x134c	
	int32_t PHASE_FX; // 0x1350	
	int32_t PHASE_MOTION; // 0x1354	
	int32_t PHASE_IMPACT; // 0x1358	
	int32_t PHASE_FAIL; // 0x135c	
	int32_t PHASE_CROSSED_GOAL; // 0x1360	
	int32_t PHASE_GOAL; // 0x1364	
	float tick_interval; // 0x1368	
	float forward_move_speed; // 0x136c	
	float magnus_coefficient; // 0x1370	
	float magnus_falloff; // 0x1374	
	float drag_coefficient; // 0x1378	
	float min_delay; // 0x137c	
	float max_delay; // 0x1380	
	int32_t hit_radius; // 0x1384	
	ParticleIndex_t m_nFXIndex; // 0x1388	
	Vector m_vVelocity; // 0x138c	
	Vector m_vSpawnPos; // 0x1398	
	Vector m_vTargetPos; // 0x13a4	
	int32_t m_nPhase; // 0x13b0	
	int32_t m_nHits; // 0x13b4	
	float m_flMagnusValue; // 0x13b8	
	GameTime_t m_flStartTime; // 0x13bc	
	float m_flDelay; // 0x13c0	
	GameTime_t m_flStateChangeTime; // 0x13c4	
	bool m_bFirstThink; // 0x13c8	
	bool m_bGroundHit; // 0x13c9	
private:
	[[maybe_unused]] uint8_t __pad13ca[0x2]; // 0x13ca
public:
	PlayerID_t m_nTargetPlayerID; // 0x13cc	
	float m_flCurTime; // 0x13d0	
	float m_flStartZ; // 0x13d4	
	float m_flAirTime; // 0x13d8	
	float m_flHeight; // 0x13dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_HotPotato : public CDOTA_Buff
{
public:
	float debuff_duration; // 0x1318	
	float time_to_explode; // 0x131c	
	float throw_time; // 0x1320	
	GameTime_t m_fLastThink; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_HotPotato_InboundPotato : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_HotPotato_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Seasonal_TI10_HighFiveRequested : public CDOTA_Buff
{
public:
	int32_t acknowledge_range; // 0x1318	
	float think_interval; // 0x131c	
	float acknowledged_cooldown; // 0x1320	
	bool m_bAcknowledged; // 0x1324	
	bool m_bFirstThink; // 0x1325	
private:
	[[maybe_unused]] uint8_t __pad1326[0x2]; // 0x1326
public:
	int32_t high_five_level; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Seasonal_TI11_RockPaperScissors_Playing : public CDOTA_Buff
{
public:
	float input_duration; // 0x1318	
	float think_interval; // 0x131c	
	bool m_bChoseOption; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Seasonal_TI11_RockPaperScissors : public CDOTA_Buff
{
public:
	float challenge_duration; // 0x1318	
	float reveal_duration; // 0x131c	
	float reveal_delay; // 0x1320	
	float completed_cooldown; // 0x1324	
	float think_interval; // 0x1328	
	float acknowledge_range; // 0x132c	
private:
	[[maybe_unused]] uint8_t __pad1330[0x4]; // 0x1330
public:
	GameTime_t m_flRevealTime; // 0x1334	
	bool m_bFirstThink; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	PlayerID_t m_nRevealOpponentPlayerID; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Seasonal_TI11_BubbleGun : public CDOTA_Buff
{
public:
	float think_interval; // 0x1318	
	int32_t max_charges; // 0x131c	
	int32_t m_nChargesUsed; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Seasonal_Summon_TI11_Balloon_Visuals : public CDOTA_Buff
{
public:
	float model_scale_per_stack; // 0x1318	
	bool m_bIsRadiant; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
class CDOTA_Modifier_Seasonal_Summon_TI11_Balloon_Thinker : public CDOTA_Buff
{
public:
	float speed; // 0x1318	
	int32_t min_distance_before_bounce; // 0x131c	
	float drag; // 0x1320	
	float max_height; // 0x1324	
	float max_vertical_move_time; // 0x1328	
	float bounce_turn_angle; // 0x132c	
	float bounce_turn_angle_tree; // 0x1330	
	float bounce_delay; // 0x1334	
	int32_t max_bounces; // 0x1338	
	float max_model_scale; // 0x133c	
	float power_growth_exponent; // 0x1340	
	Vector m_vLastPos; // 0x1344	
	Vector m_vDir; // 0x1350	
	float m_flSpeed; // 0x135c	
	float m_flDistRemaining; // 0x1360	
	float m_flTreeTimeRemaining; // 0x1364	
	int32_t m_nTimesBounced; // 0x1368	
	float m_flModelScale; // 0x136c	
	CHandle< CBaseEntity > m_hLastHit; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Seasonal_TI11_DuelAccepted : public CDOTA_Buff
{
public:
	PlayerID_t m_nDuelOpponent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
class CDOTA_Modifier_Seasonal_TI11_CongaLine : public CDOTA_Buff
{
public:
	int32_t NUM_SOUNDS; // 0x1318	
	float dance_interval; // 0x131c	
	float gesture_duration; // 0x1320	
	float catch_up_distance; // 0x1324	
	float slow_duration; // 0x1328	
	float slow_amount; // 0x132c	
	int32_t m_nGesture; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_vecDancers; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1350[0x30]; // 0x1350
public:
	bool m_bIsGesturing; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Seasonal_TI11_CongaLineDancer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Seasonal_TI11_CongaLineSlow : public CDOTA_Buff
{
public:
	float m_flMaxSpeed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Diretide_Portal_Channeling : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Diretide_Portal_Buff : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hInvader; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Seasonal_Diretide2020_HighFiveRequested : public CDOTA_Buff
{
public:
	int32_t acknowledge_range; // 0x1318	
	float think_interval; // 0x131c	
	float acknowledged_cooldown; // 0x1320	
	bool m_bAcknowledged; // 0x1324	
	bool m_bFirstThink; // 0x1325	
private:
	[[maybe_unused]] uint8_t __pad1326[0x2]; // 0x1326
public:
	int32_t high_five_level; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spring2021_BombHolder : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Spring2021_BombPlantable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Spring2021_DefusalBomb : public CDOTA_Buff
{
public:
	float BOMB_DURATION; // 0x1318	
	float BOMB_FAST_TICK_START; // 0x131c	
	float BOMB_DEFAULT_TICK; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
class CDOTA_Modifier_Spring2021_TowerDeathRing_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1318	
	float m_fCurRadius; // 0x131c	
	GameTime_t m_fLastThink; // 0x1320	
	bool m_bWindingUp; // 0x1324	
private:
	[[maybe_unused]] uint8_t __pad1325[0x3]; // 0x1325
public:
	CountdownTimer m_ViewerTimer; // 0x1328	
	ParticleIndex_t m_nFXIndex; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1348	
	int32_t speed; // 0x1360	
	int32_t radius; // 0x1364	
	int32_t damage; // 0x1368	
	float windup_time; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Winter2022_EnableFeedableRoshanInteract : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Plus_HighFiveRequested : public CDOTA_Buff
{
public:
	int32_t acknowledge_range; // 0x1318	
	float think_interval; // 0x131c	
	float acknowledged_cooldown; // 0x1320	
	bool m_bAcknowledged; // 0x1324	
	bool m_bFirstThink; // 0x1325	
private:
	[[maybe_unused]] uint8_t __pad1326[0x2]; // 0x1326
public:
	int32_t high_five_level; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_MuertasGun : public CDOTA_Buff_Item
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1318	
	int32_t bonus_cast_pct; // 0x131c	
	int32_t bonus_spell_amp; // 0x1320	
	int32_t health_pct_penalty; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Muertas_Gun_Slow : public CDOTA_Buff
{
public:
	int32_t impact_slow_percent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Muertas_Gun_Fear : public CDOTA_Buff
{
public:
	Vector m_vFearDir; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoOfrendaStatueSpawn : public CPointEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ofrenda_Pledge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Seasonal_10thAnniversary_PartyHat : public CDOTA_Buff
{
public:
	int32_t controlled_unit_search_radius; // 0x1318	
	bool child_modifier; // 0x131c	
private:
	[[maybe_unused]] uint8_t __pad131d[0x3]; // 0x131d
public:
	CUtlString m_strEffectName; // 0x1320	
	ParticleIndex_t m_nHatFXIndex; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Item_AghsFort_Bloodstone_Active : public CDOTA_Buff
{
public:
	int32_t mana_cost_percentage; // 0x1318	
	float restore_duration; // 0x131c	
	float m_flDrainAmount; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Item_AghsFort_Bloodstone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1318	
	int32_t bonus_mana; // 0x131c	
	int32_t mana_regen_multiplier; // 0x1320	
	float regen_per_charge; // 0x1324	
	float amp_per_charge; // 0x1328	
	int32_t death_charges; // 0x132c	
	int32_t kill_charges; // 0x1330	
	float hero_lifesteal; // 0x1334	
	float creep_lifesteal; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
	int32_t spell_amp; // 0x1340	
	int32_t spell_lifesteal_amp; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Item_AghsFort_Bloodstone_GainableCharges : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Diabled_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x900
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BossAttackableTrigger : public CBaseTrigger
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bDisabled"
class CInfoPlayerStartDota : public CPointEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CEntityIOOutput m_OnEnabled; // 0x4b0	
	CEntityIOOutput m_OnDisabled; // 0x4d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByName "m_flCycle"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
class CDOTA_Pet_CarriedItem : public CBaseAnimatingActivity
{
public:
	CHandle< CDOTA_BaseNPC_Hero > m_hHeroHandle; // 0x768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x930
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_ShopTrigger : public CBaseTrigger
{
public:
	int32_t m_ShopType; // 0x900	
private:
	[[maybe_unused]] uint8_t __pad0904[0x4]; // 0x904
public:
	CEntityIOOutput m_OnTrigger; // 0x908	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPCSpawner : public CPointEntity
{
public:
	CUtlSymbolLarge m_szNPCScriptName; // 0x4a8	
	CUtlSymbolLarge m_szNPCName; // 0x4b0	
	CUtlSymbolLarge m_szNPCFirstWaypoint; // 0x4b8	
	CountdownTimer m_SpawnTimer; // 0x4c0	
	CountdownTimer m_IntervalTimer; // 0x4d8	
	int32_t m_iTeam; // 0x4f0	
	int32_t m_iUpgradeMelee; // 0x4f4	
	int32_t m_iUpgradeRange; // 0x4f8	
	int32_t m_iMeleeCount; // 0x4fc	
	int32_t m_iSiegeCount; // 0x500	
	int32_t m_iRangeCount; // 0x504	
	int32_t m_iWaves; // 0x508	
	bool m_bFirstWave; // 0x50c	
	bool m_bShouldSpawnStrongCreep; // 0x50d	
private:
	[[maybe_unused]] uint8_t __pad050e[0x2]; // 0x50e
public:
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_Units; // 0x510	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_Type"
class CDOTA_NeutralSpawner : public CPointEntity
{
public:
	bool m_bGameStarted; // 0x4a8	
	bool m_bFirstSpawn; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x6]; // 0x4aa
public:
	CountdownTimer m_SpawnTimer; // 0x4b0	
	int32_t m_iNextSpawnType; // 0x4c8	
	int32_t m_iPreviousSpawnType; // 0x4cc	
	int32_t m_iTotalToSpawn; // 0x4d0	
	int32_t m_iForcedSpawnType; // 0x4d4	
	int32_t m_iNumBatchesToSpawn; // 0x4d8	
	bool m_bLimitedBatches; // 0x4dc	
private:
	[[maybe_unused]] uint8_t __pad04dd[0x3]; // 0x4dd
public:
	PlayerID_t m_iStackingCreditPlayerID; // 0x4e0	
	float m_fInternalSpawnTimerTime; // 0x4e4	
	CountdownTimer m_InternalSpawnTimer; // 0x4e8	
	CountdownTimer m_FXTimer; // 0x500	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_PendingUnits; // 0x518	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_Units; // 0x530	
	bool m_bSeenClearedByTeam[2]; // 0x548	
private:
	[[maybe_unused]] uint8_t __pad054a[0x6]; // 0x54a
public:
	CUtlSymbolLarge m_szVolumeName; // 0x550	
	CUtlVector< CHandle< CBaseEntity > > m_hVolumes; // 0x558	
	CEntityIOOutput m_OnSpawnerExhausted; // 0x570	
	// MNetworkEnable
	int32_t m_Type; // 0x598	
	int32_t m_PullType; // 0x59c	
	int32_t m_AggroType; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_iLastKillerTeam"
// MNetworkVarNames "int m_iKillCount"
// MNetworkVarNames "Vector m_vRoshanAltLocation"
class CDOTA_RoshanSpawner : public CPointEntity
{
public:
	bool m_bIsRoshanAlive; // 0x4a8	
	bool m_bSpawnRequested; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x2]; // 0x4aa
public:
	CHandle< CBaseEntity > m_hRoshan; // 0x4ac	
	GameTime_t m_fRoshanKillTime; // 0x4b0	
	int32_t m_nSentRoshReclaim; // 0x4b4	
	int32_t m_nSentRoshRespawn; // 0x4b8	
	float m_fRoshanRespawnDuration; // 0x4bc	
	// MNetworkEnable
	int32_t m_iLastKillerTeam; // 0x4c0	
	// MNetworkEnable
	int32_t m_iKillCount; // 0x4c4	
	// MNetworkEnable
	Vector m_vRoshanAltLocation; // 0x4c8	
	ParticleIndex_t m_nFXIndex; // 0x4d4	
	ParticleIndex_t m_nFXIndex2; // 0x4d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bIsRadiantMiniboss"
class CDOTA_MinibossSpawner : public CPointEntity
{
public:
	// MNetworkEnable
	bool m_bIsRadiantMiniboss; // 0x4a8	
	bool m_bIsMinibossAlive; // 0x4a9	
	bool m_bSpawnRequested; // 0x4aa	
private:
	[[maybe_unused]] uint8_t __pad04ab[0x1]; // 0x4ab
public:
	CHandle< CBaseEntity > m_hMiniboss; // 0x4ac	
	GameTime_t m_fMinibossKillTime; // 0x4b0	
	int32_t m_nSentMinibossReclaim; // 0x4b4	
	int32_t m_nSentMinibossRespawn; // 0x4b8	
	int32_t m_nTimesSpawned; // 0x4bc	
	float m_fMinibossRespawnDuration; // 0x4c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_ScriptedSpawner : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x10]; // 0x4a8
public:
	CUtlSymbolLarge m_szNPCFirstWaypoint; // 0x4b8	
	int32_t m_nNPCType; // 0x4c0	
	bool m_bAllowRelaxation; // 0x4c4	
	bool m_bPlayPostVictoryAnims; // 0x4c5	
	bool m_bDisableAutoAttack; // 0x4c6	
	bool m_bAutomaticallyRespawn; // 0x4c7	
	bool m_bInvulnerable; // 0x4c8	
	bool m_bAllowHeroTargets; // 0x4c9	
private:
	[[maybe_unused]] uint8_t __pad04ca[0x2]; // 0x4ca
public:
	int32_t m_nActivityOverride; // 0x4cc	
	float m_flDuration; // 0x4d0	
	bool m_bAnimationFireOnce; // 0x4d4	
private:
	[[maybe_unused]] uint8_t __pad04d5[0x3]; // 0x4d5
public:
	CUtlVector< CDOTA_ScriptedSpawner::scripted_moveto_t > m_hMoveToTargets; // 0x4d8	
	CEntityIOOutput m_OnAllUnitsKilled; // 0x4f0	
	CEntityIOOutput m_OnUnitKilled; // 0x518	
	CEntityIOOutput m_OnHealthLow; // 0x540	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_Units; // 0x568	
	CHandle< CBaseEntity > m_hSpawnpoint; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlSymbolLarge m_szCustomNPCName; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPathTrack : public CPointEntity
{
public:
	CPathTrack* m_pnext; // 0x4a8	
	CPathTrack* m_pprevious; // 0x4b0	
	CPathTrack* m_paltpath; // 0x4b8	
	float m_flRadius; // 0x4c0	
	float m_length; // 0x4c4	
	CUtlSymbolLarge m_altName; // 0x4c8	
	int32_t m_nIterVal; // 0x4d0	
	TrackOrientationType_t m_eOrientationType; // 0x4d4	
	CEntityIOOutput m_OnPass; // 0x4d8	
	
	// Static fields:
	static int32_t &Get_s_nCurrIterVal(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CPathTrack")->m_static_fields[0]->m_instance);};
	static bool &Get_s_bIsIterating(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CPathTrack")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoDynamicShadowHint : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flRange; // 0x4ac	
	int32_t m_nImportance; // 0x4b0	
	int32_t m_nLightChoice; // 0x4b4	
	CHandle< CBaseEntity > m_hLight; // 0x4b8	
	
	// Static fields:
	static CUtlVector< CInfoDynamicShadowHint* > &Get_m_AllHints(){return *reinterpret_cast<CUtlVector< CInfoDynamicShadowHint* >*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CInfoDynamicShadowHint")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoDynamicShadowHintBox : public CInfoDynamicShadowHint
{
public:
	Vector m_vBoxMins; // 0x4c0	
	Vector m_vBoxMaxs; // 0x4cc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "HMaterialStrong m_hSkyMaterial"
// MNetworkVarNames "HMaterialStrong m_hSkyMaterialLightingOnly"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "Color m_vTintColor"
// MNetworkVarNames "Color m_vTintColorLightingOnly"
// MNetworkVarNames "float m_flBrightnessScale"
// MNetworkVarNames "int m_nFogType"
// MNetworkVarNames "float m_flFogMinStart"
// MNetworkVarNames "float m_flFogMinEnd"
// MNetworkVarNames "float m_flFogMaxStart"
// MNetworkVarNames "float m_flFogMaxEnd"
// MNetworkVarNames "bool m_bEnabled"
class CEnvSky : public CBaseModelEntity
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSkyMaterial; // 0x758	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSkyMaterialLightingOnly; // 0x760	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	bool m_bStartDisabled; // 0x768	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	Color m_vTintColor; // 0x769	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	Color m_vTintColorLightingOnly; // 0x76d	
private:
	[[maybe_unused]] uint8_t __pad0771[0x3]; // 0x771
public:
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flBrightnessScale; // 0x774	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	int32_t m_nFogType; // 0x778	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMinStart; // 0x77c	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMinEnd; // 0x780	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMaxStart; // 0x784	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMaxEnd; // 0x788	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	bool m_bEnabled; // 0x78c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTonemapController2Alias_env_tonemap_controller2 : public CTonemapController2
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x910
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTonemapTrigger : public CBaseTrigger
{
public:
	CUtlSymbolLarge m_tonemapControllerName; // 0x900	
	CEntityHandle m_hTonemapController; // 0x908	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x968
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFogTrigger : public CBaseTrigger
{
public:
	fogparams_t m_fog; // 0x900	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CLightComponent::Storage_t m_CLightComponent"
class CLightEntity : public CBaseModelEntity
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "CLightComponent"
	// MNetworkAlias "CLightComponent"
	// MNetworkTypeAlias "CLightComponent"
	CLightComponent* m_CLightComponent; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLightSpotEntity : public CLightEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLightOrthoEntity : public CLightEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLightDirectionalEntity : public CLightEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CLightEnvironmentEntity : public CLightDirectionalEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x940
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "HPostProcessingStrong m_hPostSettings"
// MNetworkVarNames "float m_flFadeDuration"
// MNetworkVarNames "float m_flMinLogExposure"
// MNetworkVarNames "float m_flMaxLogExposure"
// MNetworkVarNames "float m_flMinExposure"
// MNetworkVarNames "float m_flMaxExposure"
// MNetworkVarNames "float m_flExposureCompensation"
// MNetworkVarNames "float m_flExposureFadeSpeedUp"
// MNetworkVarNames "float m_flExposureFadeSpeedDown"
// MNetworkVarNames "float m_flTonemapEVSmoothingRange"
// MNetworkVarNames "bool m_bMaster"
// MNetworkVarNames "bool m_bExposureControl"
class CPostProcessingVolume : public CBaseTrigger
{
private:
	[[maybe_unused]] uint8_t __pad0900[0x10]; // 0x900
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCPostProcessingResource > m_hPostSettings; // 0x910	
	// MNetworkEnable
	float m_flFadeDuration; // 0x918	
	// MNetworkEnable
	float m_flMinLogExposure; // 0x91c	
	// MNetworkEnable
	float m_flMaxLogExposure; // 0x920	
	// MNetworkEnable
	float m_flMinExposure; // 0x924	
	// MNetworkEnable
	float m_flMaxExposure; // 0x928	
	// MNetworkEnable
	float m_flExposureCompensation; // 0x92c	
	// MNetworkEnable
	float m_flExposureFadeSpeedUp; // 0x930	
	// MNetworkEnable
	float m_flExposureFadeSpeedDown; // 0x934	
	// MNetworkEnable
	float m_flTonemapEVSmoothingRange; // 0x938	
	// MNetworkEnable
	bool m_bMaster; // 0x93c	
	// MNetworkEnable
	bool m_bExposureControl; // 0x93d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkIncludeByName "m_nNextThinkTick"
// MNetworkExcludeByUserGroup "m_flPoseParameter"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkUserGroupProxy "CBasePlayerWeapon"
// MNetworkVarNames "GameTick_t m_nNextPrimaryAttackTick"
// MNetworkVarNames "float32 m_flNextPrimaryAttackTickRatio"
// MNetworkVarNames "GameTick_t m_nNextSecondaryAttackTick"
// MNetworkVarNames "float32 m_flNextSecondaryAttackTickRatio"
// MNetworkVarNames "int32 m_iClip1"
// MNetworkVarNames "int32 m_iClip2"
// MNetworkVarNames "int m_pReserveAmmo"
class CBasePlayerWeapon : public CBaseAnimatingActivity
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	GameTick_t m_nNextPrimaryAttackTick; // 0x768	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	float m_flNextPrimaryAttackTickRatio; // 0x76c	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	GameTick_t m_nNextSecondaryAttackTick; // 0x770	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	float m_flNextSecondaryAttackTickRatio; // 0x774	
	// MNetworkEnable
	// MNetworkSerializer "minusone"
	// MNetworkPriority "32"
	int32_t m_iClip1; // 0x778	
	// MNetworkEnable
	// MNetworkSerializer "minusone"
	// MNetworkUserGroup "LocalWeaponExclusive"
	int32_t m_iClip2; // 0x77c	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	int32_t m_pReserveAmmo[2]; // 0x780	
	CEntityIOOutput m_OnPlayerUse; // 0x788	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xce8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float32 m_flAlphaScale"
// MNetworkVarNames "float32 m_flRadiusScale"
// MNetworkVarNames "float32 m_flSelfIllumScale"
// MNetworkVarNames "Color m_ColorTint"
// MNetworkVarNames "HRenderTextureStrong m_hTextureOverride"
class CEnvParticleGlow : public CParticleSystem
{
public:
	// MNetworkEnable
	float m_flAlphaScale; // 0xcd0	
	// MNetworkEnable
	float m_flRadiusScale; // 0xcd4	
	// MNetworkEnable
	float m_flSelfIllumScale; // 0xcd8	
	// MNetworkEnable
	Color m_ColorTint; // 0xcdc	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hTextureOverride; // 0xce0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x790
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bLoop"
// MNetworkVarNames "float m_flFPS"
// MNetworkVarNames "HRenderTextureStrong m_hPositionKeys"
// MNetworkVarNames "HRenderTextureStrong m_hRotationKeys"
// MNetworkVarNames "Vector m_vAnimationBoundsMin"
// MNetworkVarNames "Vector m_vAnimationBoundsMax"
// MNetworkVarNames "float m_flStartTime"
// MNetworkVarNames "float m_flStartFrame"
class CTextureBasedAnimatable : public CBaseModelEntity
{
public:
	// MNetworkEnable
	bool m_bLoop; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x3]; // 0x759
public:
	// MNetworkEnable
	float m_flFPS; // 0x75c	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hPositionKeys; // 0x760	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hRotationKeys; // 0x768	
	// MNetworkEnable
	Vector m_vAnimationBoundsMin; // 0x770	
	// MNetworkEnable
	Vector m_vAnimationBoundsMax; // 0x77c	
	// MNetworkEnable
	float m_flStartTime; // 0x788	
	// MNetworkEnable
	float m_flStartFrame; // 0x78c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CWorld : public CBaseModelEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8e8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_bClientSideRagdoll"
// MNetworkVarNames "bool m_bInitiallyPopulateInterpHistory"
// MNetworkVarNames "bool m_bShouldAnimateDuringGameplayPause"
// MNetworkVarNames "bool m_bAnimGraphUpdateEnabled"
// MNetworkVarNames "Vector m_vecForce"
// MNetworkVarNames "int32 m_nForceBone"
// MNetworkVarNames "PhysicsRagdollPose_t* m_pRagdollPose"
// MNetworkVarNames "bool m_bClientRagdoll"
class CBaseAnimGraph : public CBaseModelEntity
{
public:
	// MNetworkEnable
	bool m_bInitiallyPopulateInterpHistory; // 0x758	
	// MNetworkEnable
	bool m_bShouldAnimateDuringGameplayPause; // 0x759	
private:
	[[maybe_unused]] uint8_t __pad075a[0x6]; // 0x75a
public:
	IChoreoServices* m_pChoreoServices; // 0x760	
	// MNetworkEnable
	bool m_bAnimGraphUpdateEnabled; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x3]; // 0x769
public:
	float m_flMaxSlopeDistance; // 0x76c	
	Vector m_vLastSlopeCheckPos; // 0x770	
	bool m_bAnimGraphDirty; // 0x77c	
private:
	[[maybe_unused]] uint8_t __pad077d[0x3]; // 0x77d
public:
	// MNetworkEnable
	Vector m_vecForce; // 0x780	
	// MNetworkEnable
	int32_t m_nForceBone; // 0x78c	
private:
	[[maybe_unused]] uint8_t __pad0790[0x10]; // 0x790
public:
	// MNetworkEnable
	PhysicsRagdollPose_t* m_pRagdollPose; // 0x7a0	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientRagdollChanged"
	bool m_bClientRagdoll; // 0x7a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBaseProp : public CBaseAnimatingActivity
{
public:
	bool m_bModelOverrodeBlockLOS; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x3]; // 0x769
public:
	int32_t m_iShapeType; // 0x76c	
	bool m_bConformToCollisionBounds; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0771[0x3]; // 0x771
public:
	matrix3x4_t m_mPreferredCatchTransform; // 0x774	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8e0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_noGhostCollision"
class CBreakableProp : public CBaseProp
{
private:
	[[maybe_unused]] uint8_t __pad07a8[0x10]; // 0x7a8
public:
	CEntityIOOutput m_OnBreak; // 0x7b8	
	CEntityOutputTemplate< float32 > m_OnHealthChanged; // 0x7e0	
	CEntityIOOutput m_OnTakeDamage; // 0x808	
	float m_impactEnergyScale; // 0x830	
	int32_t m_iMinHealthDmg; // 0x834	
	QAngle m_preferredCarryAngles; // 0x838	
	float m_flPressureDelay; // 0x844	
	CHandle< CBaseEntity > m_hBreaker; // 0x848	
	PerformanceMode_t m_PerformanceMode; // 0x84c	
	float m_flDmgModBullet; // 0x850	
	float m_flDmgModClub; // 0x854	
	float m_flDmgModExplosive; // 0x858	
	float m_flDmgModFire; // 0x85c	
	CUtlSymbolLarge m_iszPhysicsDamageTableName; // 0x860	
	CUtlSymbolLarge m_iszBasePropData; // 0x868	
	int32_t m_iInteractions; // 0x870	
	GameTime_t m_flPreventDamageBeforeTime; // 0x874	
	bool m_bHasBreakPiecesOrCommands; // 0x878	
private:
	[[maybe_unused]] uint8_t __pad0879[0x3]; // 0x879
public:
	float m_explodeDamage; // 0x87c	
	float m_explodeRadius; // 0x880	
private:
	[[maybe_unused]] uint8_t __pad0884[0x4]; // 0x884
public:
	float m_explosionDelay; // 0x888	
private:
	[[maybe_unused]] uint8_t __pad088c[0x4]; // 0x88c
public:
	CUtlSymbolLarge m_explosionBuildupSound; // 0x890	
	CUtlSymbolLarge m_explosionCustomEffect; // 0x898	
	CUtlSymbolLarge m_explosionCustomSound; // 0x8a0	
	CUtlSymbolLarge m_explosionModifier; // 0x8a8	
	CHandle< CBasePlayerPawn > m_hPhysicsAttacker; // 0x8b0	
	GameTime_t m_flLastPhysicsInfluenceTime; // 0x8b4	
	bool m_bOriginalBlockLOS; // 0x8b8	
private:
	[[maybe_unused]] uint8_t __pad08b9[0x3]; // 0x8b9
public:
	float m_flDefaultFadeScale; // 0x8bc	
	CHandle< CBaseEntity > m_hLastAttacker; // 0x8c0	
	CHandle< CBaseEntity > m_hFlareEnt; // 0x8c4	
	bool m_bUsePuntSound; // 0x8c8	
private:
	[[maybe_unused]] uint8_t __pad08c9[0x7]; // 0x8c9
public:
	CUtlSymbolLarge m_iszPuntSound; // 0x8d0	
	// MNetworkEnable
	bool m_noGhostCollision; // 0x8d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bUseHitboxesForRenderBox"
// MNetworkVarNames "bool m_bUseAnimGraph"
class CDynamicProp : public CBreakableProp
{
public:
	bool m_bRandomAnimator; // 0x8e0	
private:
	[[maybe_unused]] uint8_t __pad08e1[0x3]; // 0x8e1
public:
	GameTime_t m_flNextRandAnim; // 0x8e4	
	float m_flMinRandAnimDuration; // 0x8e8	
	float m_flMaxRandAnimDuration; // 0x8ec	
private:
	[[maybe_unused]] uint8_t __pad08f0[0x8]; // 0x8f0
public:
	bool m_bCreateNavObstacle; // 0x8f8	
	// MNetworkEnable
	bool m_bUseHitboxesForRenderBox; // 0x8f9	
	// MNetworkEnable
	bool m_bUseAnimGraph; // 0x8fa	
private:
	[[maybe_unused]] uint8_t __pad08fb[0x5]; // 0x8fb
public:
	CEntityIOOutput m_pOutputAnimBegun; // 0x900	
	CEntityIOOutput m_pOutputAnimOver; // 0x928	
	CEntityIOOutput m_pOutputAnimLoopCycleOver; // 0x950	
	CEntityIOOutput m_OnAnimReachedStart; // 0x978	
	CEntityIOOutput m_OnAnimReachedEnd; // 0x9a0	
	CUtlSymbolLarge m_iszDefaultAnim; // 0x9c8	
	AnimLoopMode_t m_nDefaultAnimLoopMode; // 0x9d0	
	bool m_bAnimateOnServer; // 0x9d4	
	bool m_bRandomizeCycle; // 0x9d5	
	bool m_bStartDisabled; // 0x9d6	
	bool m_bScriptedMovement; // 0x9d7	
	bool m_bFiredStartEndOutput; // 0x9d8	
	bool m_bForceNpcExclude; // 0x9d9	
	bool m_bCreateNonSolid; // 0x9da	
	bool m_bIsOverrideProp; // 0x9db	
	int32_t m_iInitialGlowState; // 0x9dc	
	int32_t m_nGlowRange; // 0x9e0	
	int32_t m_nGlowRangeMin; // 0x9e4	
	Color m_glowColor; // 0x9e8	
	int32_t m_nGlowTeam; // 0x9ec	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDynamicPropAlias_dynamic_prop : public CDynamicProp
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDynamicPropAlias_prop_dynamic_override : public CDynamicProp
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDynamicPropAlias_cable_dynamic : public CDynamicProp
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb28
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "float32 m_MaxWeight"
// MNetworkVarNames "float32 m_FadeDuration"
// MNetworkVarNames "float32 m_Weight"
// MNetworkVarNames "char m_lookupFilename"
class CColorCorrectionVolume : public CBaseTrigger
{
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x900	
private:
	[[maybe_unused]] uint8_t __pad0901[0x3]; // 0x901
public:
	// MNetworkEnable
	float m_MaxWeight; // 0x904	
	// MNetworkEnable
	float m_FadeDuration; // 0x908	
	bool m_bStartDisabled; // 0x90c	
private:
	[[maybe_unused]] uint8_t __pad090d[0x3]; // 0x90d
public:
	// MNetworkEnable
	float m_Weight; // 0x910	
	// MNetworkEnable
	char m_lookupFilename[512]; // 0x914	
	float m_LastEnterWeight; // 0xb14	
	GameTime_t m_LastEnterTime; // 0xb18	
	float m_LastExitWeight; // 0xb1c	
	GameTime_t m_LastExitTime; // 0xb20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x860
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "string_t m_iszCommentaryFile"
// MNetworkVarNames "CHandle< CBaseEntity> m_hViewPosition"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "float32 m_flStartTimeInCommentary"
// MNetworkVarNames "string_t m_iszTitle"
// MNetworkVarNames "string_t m_iszSpeakers"
// MNetworkVarNames "int m_iNodeNumber"
// MNetworkVarNames "int m_iNodeNumberMax"
// MNetworkVarNames "bool m_bListenedTo"
class CPointCommentaryNode : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_iszPreCommands; // 0x768	
	CUtlSymbolLarge m_iszPostCommands; // 0x770	
	// MNetworkEnable
	CUtlSymbolLarge m_iszCommentaryFile; // 0x778	
	CUtlSymbolLarge m_iszViewTarget; // 0x780	
	CHandle< CBaseEntity > m_hViewTarget; // 0x788	
	CHandle< CBaseEntity > m_hViewTargetAngles; // 0x78c	
	CUtlSymbolLarge m_iszViewPosition; // 0x790	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hViewPosition; // 0x798	
	CHandle< CBaseEntity > m_hViewPositionMover; // 0x79c	
	bool m_bPreventMovement; // 0x7a0	
	bool m_bUnderCrosshair; // 0x7a1	
	bool m_bUnstoppable; // 0x7a2	
private:
	[[maybe_unused]] uint8_t __pad07a3[0x1]; // 0x7a3
public:
	GameTime_t m_flFinishedTime; // 0x7a4	
	Vector m_vecFinishOrigin; // 0x7a8	
	QAngle m_vecOriginalAngles; // 0x7b4	
	QAngle m_vecFinishAngles; // 0x7c0	
	bool m_bPreventChangesWhileMoving; // 0x7cc	
	bool m_bDisabled; // 0x7cd	
private:
	[[maybe_unused]] uint8_t __pad07ce[0x2]; // 0x7ce
public:
	Vector m_vecTeleportOrigin; // 0x7d0	
	GameTime_t m_flAbortedPlaybackAt; // 0x7dc	
	CEntityIOOutput m_pOnCommentaryStarted; // 0x7e0	
	CEntityIOOutput m_pOnCommentaryStopped; // 0x808	
	// MNetworkEnable
	bool m_bActive; // 0x830	
private:
	[[maybe_unused]] uint8_t __pad0831[0x3]; // 0x831
public:
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x834	
	// MNetworkEnable
	float m_flStartTimeInCommentary; // 0x838	
private:
	[[maybe_unused]] uint8_t __pad083c[0x4]; // 0x83c
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszTitle; // 0x840	
	// MNetworkEnable
	CUtlSymbolLarge m_iszSpeakers; // 0x848	
	// MNetworkEnable
	int32_t m_iNodeNumber; // 0x850	
	// MNetworkEnable
	int32_t m_iNodeNumberMax; // 0x854	
	// MNetworkEnable
	bool m_bListenedTo; // 0x858	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CCommentaryViewPosition : public CSprite
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8a0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvBeam : public CBeam
{
public:
	int32_t m_active; // 0x7f8	
private:
	[[maybe_unused]] uint8_t __pad07fc[0x4]; // 0x7fc
public:
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_spriteTexture; // 0x800	
	CUtlSymbolLarge m_iszStartEntity; // 0x808	
	CUtlSymbolLarge m_iszEndEntity; // 0x810	
	float m_life; // 0x818	
	float m_boltWidth; // 0x81c	
	float m_noiseAmplitude; // 0x820	
	int32_t m_speed; // 0x824	
	float m_restrike; // 0x828	
private:
	[[maybe_unused]] uint8_t __pad082c[0x4]; // 0x82c
public:
	CUtlSymbolLarge m_iszSpriteName; // 0x830	
	int32_t m_frameStart; // 0x838	
	Vector m_vEndPointWorld; // 0x83c	
	Vector m_vEndPointRelative; // 0x848	
	float m_radius; // 0x854	
	Touch_t m_TouchType; // 0x858	
private:
	[[maybe_unused]] uint8_t __pad085c[0x4]; // 0x85c
public:
	CUtlSymbolLarge m_iFilterName; // 0x860	
	CHandle< CBaseEntity > m_hFilter; // 0x868	
private:
	[[maybe_unused]] uint8_t __pad086c[0x4]; // 0x86c
public:
	CUtlSymbolLarge m_iszDecal; // 0x870	
	CEntityIOOutput m_OnTouchedByEntity; // 0x878	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPushable : public CBreakable
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncMoveLinearAlias_momentary_door : public CFuncMoveLinear
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x808
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CGunTarget : public CBaseToggle
{
public:
	bool m_on; // 0x7d8	
private:
	[[maybe_unused]] uint8_t __pad07d9[0x3]; // 0x7d9
public:
	CHandle< CBaseEntity > m_hTargetEnt; // 0x7dc	
	CEntityIOOutput m_OnDeath; // 0x7e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x918
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CUtlString m_strStartTouchEventName"
// MNetworkVarNames "CUtlString m_strEndTouchEventName"
// MNetworkVarNames "CUtlString m_strTriggerID"
class CTriggerGameEvent : public CBaseTrigger
{
public:
	// MNetworkEnable
	CUtlString m_strStartTouchEventName; // 0x900	
	// MNetworkEnable
	CUtlString m_strEndTouchEventName; // 0x908	
	// MNetworkEnable
	CUtlString m_strTriggerID; // 0x910	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x798
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSimpleMarkupVolumeTagged : public CMarkupVolumeTagged
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x798
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMarkupVolumeTagged_Nav : public CMarkupVolumeTagged
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CMarkupVolumeTagged_NavGame : public CMarkupVolumeWithRef
{
public:
	bool m_bFloodFillAttribute; // 0x7b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "string_t m_EffectName"
class CFuncElectrifiedVolume : public CFuncBrush
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_EffectName; // 0x778	
	CUtlSymbolLarge m_EffectInterpenetrateName; // 0x780	
	CUtlSymbolLarge m_EffectZapName; // 0x788	
	CUtlSymbolLarge m_iszEffectSource; // 0x790	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPathCornerCrash : public CPathCorner
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CConstraintAnchor : public CBaseAnimatingActivity
{
public:
	float m_massScale; // 0x768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class COrnamentProp : public CDynamicProp
{
public:
	CUtlSymbolLarge m_initialOwner; // 0x9f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CRopeKeyframeAlias_move_rope : public CRopeKeyframe
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSceneEntityAlias_logic_choreographed_scene : public CSceneEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa08
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInstancedSceneEntity : public CSceneEntity
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0x9f0	
	bool m_bHadOwner; // 0x9f4	
private:
	[[maybe_unused]] uint8_t __pad09f5[0x3]; // 0x9f5
public:
	float m_flPostSpeakDelay; // 0x9f8	
	float m_flPreDelay; // 0x9fc	
	bool m_bIsBackground; // 0xa00	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerSoundscape : public CBaseTrigger
{
public:
	CHandle< CEnvSoundscapeTriggerable > m_hSoundscape; // 0x900	
private:
	[[maybe_unused]] uint8_t __pad0904[0x4]; // 0x904
public:
	CUtlSymbolLarge m_SoundscapeName; // 0x908	
	CUtlVector< CHandle< CBasePlayerPawn > > m_spectators; // 0x910	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CSpriteAlias_env_glow : public CSprite
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x800
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBasePlatTrain : public CBaseToggle
{
public:
	CUtlSymbolLarge m_NoiseMoving; // 0x7d8	
	CUtlSymbolLarge m_NoiseArrived; // 0x7e0	
private:
	[[maybe_unused]] uint8_t __pad07e8[0x8]; // 0x7e8
public:
	float m_volume; // 0x7f0	
	float m_flTWidth; // 0x7f4	
	float m_flTLength; // 0x7f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x808
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncPlat : public CBasePlatTrain
{
public:
	CUtlSymbolLarge m_sNoise; // 0x800	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x820
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncPlatRot : public CFuncPlat
{
public:
	QAngle m_end; // 0x808	
	QAngle m_start; // 0x814	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x820
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncTrain : public CBasePlatTrain
{
public:
	CHandle< CBaseEntity > m_hCurrentTarget; // 0x800	
	bool m_activated; // 0x804	
private:
	[[maybe_unused]] uint8_t __pad0805[0x3]; // 0x805
public:
	CHandle< CBaseEntity > m_hEnemy; // 0x808	
	float m_flBlockDamage; // 0x80c	
	GameTime_t m_flNextBlockTime; // 0x810	
private:
	[[maybe_unused]] uint8_t __pad0814[0x4]; // 0x814
public:
	CUtlSymbolLarge m_iszLastTarget; // 0x818	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x860
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncTrackChange : public CFuncPlatRot
{
public:
	CPathTrack* m_trackTop; // 0x820	
	CPathTrack* m_trackBottom; // 0x828	
	CFuncTrackTrain* m_train; // 0x830	
	CUtlSymbolLarge m_trackTopName; // 0x838	
	CUtlSymbolLarge m_trackBottomName; // 0x840	
	CUtlSymbolLarge m_trainName; // 0x848	
	TRAIN_CODE m_code; // 0x850	
	int32_t m_targetState; // 0x854	
	int32_t m_use; // 0x858	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x860
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CFuncTrackAuto : public CFuncTrackChange
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerRemove : public CBaseTrigger
{
public:
	CEntityIOOutput m_OnRemove; // 0x900	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CScriptTriggerHurt : public CTriggerHurt
{
public:
	Vector m_vExtent; // 0x9a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CScriptTriggerMultiple : public CTriggerMultiple
{
public:
	Vector m_vExtent; // 0x928	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerOnce : public CTriggerMultiple
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CScriptTriggerOnce : public CTriggerOnce
{
public:
	Vector m_vExtent; // 0x928	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bTestOcclusion"
class CTriggerLook : public CTriggerOnce
{
public:
	CHandle< CBaseEntity > m_hLookTarget; // 0x928	
	float m_flFieldOfView; // 0x92c	
	float m_flLookTime; // 0x930	
	float m_flLookTimeTotal; // 0x934	
	GameTime_t m_flLookTimeLast; // 0x938	
	float m_flTimeoutDuration; // 0x93c	
	bool m_bTimeoutFired; // 0x940	
	bool m_bIsLooking; // 0x941	
	bool m_b2DFOV; // 0x942	
	bool m_bUseVelocity; // 0x943	
	CHandle< CBaseEntity > m_hActivator; // 0x944	
	// MNetworkEnable
	bool m_bTestOcclusion; // 0x948	
private:
	[[maybe_unused]] uint8_t __pad0949[0x7]; // 0x949
public:
	CEntityIOOutput m_OnTimeout; // 0x950	
	CEntityIOOutput m_OnStartLook; // 0x978	
	CEntityIOOutput m_OnEndLook; // 0x9a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerPush : public CBaseTrigger
{
public:
	QAngle m_angPushEntitySpace; // 0x900	
	Vector m_vecPushDirEntitySpace; // 0x90c	
	bool m_bTriggerOnStartTouch; // 0x918	
private:
	[[maybe_unused]] uint8_t __pad0919[0x3]; // 0x919
public:
	float m_flAlternateTicksFix; // 0x91c	
	float m_flPushSpeed; // 0x920	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CScriptTriggerPush : public CTriggerPush
{
public:
	Vector m_vExtent; // 0x928	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x908
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerToggleSave : public CBaseTrigger
{
public:
	bool m_bDisabled; // 0x900	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x910
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerSave : public CBaseTrigger
{
public:
	bool m_bForceNewLevelUnit; // 0x900	
private:
	[[maybe_unused]] uint8_t __pad0901[0x3]; // 0x901
public:
	float m_fDangerousTimer; // 0x904	
	int32_t m_minHitPoints; // 0x908	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x900
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerGravity : public CBaseTrigger
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x940
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerProximity : public CBaseTrigger
{
public:
	CHandle< CBaseEntity > m_hMeasureTarget; // 0x900	
private:
	[[maybe_unused]] uint8_t __pad0904[0x4]; // 0x904
public:
	CUtlSymbolLarge m_iszMeasureTarget; // 0x908	
	float m_fRadius; // 0x910	
	int32_t m_nTouchers; // 0x914	
	CEntityOutputTemplate< float32 > m_NearestEntityDistance; // 0x918	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerImpact : public CTriggerMultiple
{
public:
	float m_flMagnitude; // 0x928	
	float m_flNoise; // 0x92c	
	float m_flViewkick; // 0x930	
private:
	[[maybe_unused]] uint8_t __pad0934[0x4]; // 0x934
public:
	CEntityOutputTemplate< Vector > m_pOutputForce; // 0x938	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x900
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CServerRagdollTrigger : public CBaseTrigger
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x930
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerActiveWeaponDetect : public CBaseTrigger
{
public:
	CEntityIOOutput m_OnTouchedActiveWeapon; // 0x900	
	CUtlSymbolLarge m_iszWeaponClassName; // 0x928	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerPhysics : public CBaseTrigger
{
private:
	[[maybe_unused]] uint8_t __pad0900[0x10]; // 0x900
public:
	float m_gravityScale; // 0x910	
	float m_linearLimit; // 0x914	
	float m_linearDamping; // 0x918	
	float m_angularLimit; // 0x91c	
	float m_angularDamping; // 0x920	
	float m_linearForce; // 0x924	
	float m_flFrequency; // 0x928	
	float m_flDampingRatio; // 0x92c	
	Vector m_vecLinearForcePointAt; // 0x930	
	bool m_bCollapseToForcePoint; // 0x93c	
private:
	[[maybe_unused]] uint8_t __pad093d[0x3]; // 0x93d
public:
	Vector m_vecLinearForcePointAtWorld; // 0x940	
	Vector m_vecLinearForceDirection; // 0x94c	
	bool m_bConvertToDebrisWhenPossible; // 0x958	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x930
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerDetectBulletFire : public CBaseTrigger
{
public:
	bool m_bPlayerFireOnly; // 0x900	
private:
	[[maybe_unused]] uint8_t __pad0901[0x7]; // 0x901
public:
	CEntityIOOutput m_OnDetectedBulletFire; // 0x908	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CTriggerDetectExplosion : public CBaseTrigger
{
private:
	[[maybe_unused]] uint8_t __pad0900[0x38]; // 0x900
public:
	CEntityIOOutput m_OnDetectedExplosion; // 0x938	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CScriptNavBlocker : public CFuncNavBlocker
{
public:
	Vector m_vExtent; // 0x768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float32 m_flexWeight"
// MNetworkVarNames "Vector m_vLookTargetPosition"
// MNetworkVarNames "bool m_blinktoggle"
class CBaseFlex : public CBaseAnimatingOverlay
{
public:
	// MNetworkEnable
	// MNetworkBitCount "12"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1.000000"
	// MNetworkEncodeFlags "1"
	CNetworkUtlVectorBase< float32 > m_flexWeight; // 0x768	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_vLookTargetPosition; // 0x780	
	// MNetworkEnable
	bool m_blinktoggle; // 0x78c	
private:
	[[maybe_unused]] uint8_t __pad078d[0x53]; // 0x78d
public:
	GameTime_t m_flAllowResponsesEndTime; // 0x7e0	
	GameTime_t m_flLastFlexAnimationTime; // 0x7e4	
	uint32_t m_nNextSceneEventId; // 0x7e8	
	bool m_bUpdateLayerPriorities; // 0x7ec	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x840
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CItem : public CBaseAnimatingActivity
{
private:
	[[maybe_unused]] uint8_t __pad0768[0x8]; // 0x768
public:
	CEntityIOOutput m_OnPlayerTouch; // 0x770	
	bool m_bActivateWhenAtRest; // 0x798	
private:
	[[maybe_unused]] uint8_t __pad0799[0x7]; // 0x799
public:
	CEntityIOOutput m_OnCacheInteraction; // 0x7a0	
	CEntityIOOutput m_OnPlayerPickup; // 0x7c8	
	CEntityIOOutput m_OnGlovePulled; // 0x7f0	
	Vector m_vOriginalSpawnOrigin; // 0x818	
	QAngle m_vOriginalSpawnAngles; // 0x824	
	bool m_bPhysStartAsleep; // 0x830	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa90
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Vector m_ragPos"
// MNetworkVarNames "QAngle m_ragAngles"
// MNetworkVarNames "EHANDLE m_hRagdollSource"
// MNetworkVarNames "float32 m_flBlendWeight"
class CRagdollProp : public CBaseAnimGraph
{
private:
	[[maybe_unused]] uint8_t __pad08e8[0x8]; // 0x8e8
public:
	ragdoll_t m_ragdoll; // 0x8f0	
	bool m_bStartDisabled; // 0x928	
private:
	[[maybe_unused]] uint8_t __pad0929[0x7]; // 0x929
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	CNetworkUtlVectorBase< Vector > m_ragPos; // 0x930	
	// MNetworkEnable
	// MNetworkEncoder "qangle"
	// MNetworkBitCount "13"
	CNetworkUtlVectorBase< QAngle > m_ragAngles; // 0x948	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hRagdollSource; // 0x960	
	uint32_t m_lastUpdateTickCount; // 0x964	
	bool m_allAsleep; // 0x968	
	bool m_bFirstCollisionAfterLaunch; // 0x969	
private:
	[[maybe_unused]] uint8_t __pad096a[0x2]; // 0x96a
public:
	CHandle< CBaseEntity > m_hDamageEntity; // 0x96c	
	CHandle< CBaseEntity > m_hKiller; // 0x970	
	CHandle< CBasePlayerPawn > m_hPhysicsAttacker; // 0x974	
	GameTime_t m_flLastPhysicsInfluenceTime; // 0x978	
	GameTime_t m_flFadeOutStartTime; // 0x97c	
	float m_flFadeTime; // 0x980	
	// MNetworkDisable
	Vector m_vecLastOrigin; // 0x984	
	GameTime_t m_flAwakeTime; // 0x990	
	GameTime_t m_flLastOriginChangeTime; // 0x994	
	int32_t m_nBloodColor; // 0x998	
private:
	[[maybe_unused]] uint8_t __pad099c[0x4]; // 0x99c
public:
	CUtlSymbolLarge m_strOriginClassName; // 0x9a0	
	CUtlSymbolLarge m_strSourceClassName; // 0x9a8	
	bool m_bHasBeenPhysgunned; // 0x9b0	
	bool m_bShouldTeleportPhysics; // 0x9b1	
private:
	[[maybe_unused]] uint8_t __pad09b2[0x2]; // 0x9b2
public:
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "1.000000"
	// MNetworkEncodeFlags "1"
	float m_flBlendWeight; // 0x9b4	
	float m_flDefaultFadeScale; // 0x9b8	
private:
	[[maybe_unused]] uint8_t __pad09bc[0x4]; // 0x9bc
public:
	CUtlVector< Vector > m_ragdollMins; // 0x9c0	
	CUtlVector< Vector > m_ragdollMaxs; // 0x9d8	
	bool m_bShouldDeleteActivationRecord; // 0x9f0	
private:
	[[maybe_unused]] uint8_t __pad09f1[0x5f]; // 0x9f1
public:
	bool m_bValidatePoweredRagdollPose; // 0xa50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysMagnet : public CBaseAnimatingActivity
{
public:
	CEntityIOOutput m_OnMagnetAttach; // 0x768	
	CEntityIOOutput m_OnMagnetDetach; // 0x790	
	float m_massScale; // 0x7b8	
	float m_forceLimit; // 0x7bc	
	float m_torqueLimit; // 0x7c0	
private:
	[[maybe_unused]] uint8_t __pad07c4[0x4]; // 0x7c4
public:
	CUtlVector< magnetted_objects_t > m_MagnettedEntities; // 0x7c8	
	bool m_bActive; // 0x7e0	
	bool m_bHasHitSomething; // 0x7e1	
private:
	[[maybe_unused]] uint8_t __pad07e2[0x2]; // 0x7e2
public:
	float m_flTotalMass; // 0x7e4	
	float m_flRadius; // 0x7e8	
	GameTime_t m_flNextSuckTime; // 0x7ec	
	int32_t m_iMaxObjectsAttached; // 0x7f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa50
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByUserGroup "m_flPoseParameter"
// MNetworkExcludeByName "m_animationController.m_flPlaybackRate"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkIncludeByName "m_spawnflags"
// MNetworkVarNames "bool m_bAwake"
class CPhysicsProp : public CBreakableProp
{
private:
	[[maybe_unused]] uint8_t __pad08e0[0x8]; // 0x8e0
public:
	CEntityIOOutput m_MotionEnabled; // 0x8e8	
	CEntityIOOutput m_OnAwakened; // 0x910	
	CEntityIOOutput m_OnAwake; // 0x938	
	CEntityIOOutput m_OnAsleep; // 0x960	
	CEntityIOOutput m_OnPlayerUse; // 0x988	
	CEntityIOOutput m_OnPlayerPickup; // 0x9b0	
	CEntityIOOutput m_OnOutOfWorld; // 0x9d8	
	float m_massScale; // 0xa00	
	float m_inertiaScale; // 0xa04	
	float m_buoyancyScale; // 0xa08	
	int32_t m_damageType; // 0xa0c	
	int32_t m_damageToEnableMotion; // 0xa10	
	float m_flForceToEnableMotion; // 0xa14	
	bool m_bThrownByPlayer; // 0xa18	
	bool m_bDroppedByPlayer; // 0xa19	
	bool m_bTouchedByPlayer; // 0xa1a	
	bool m_bFirstCollisionAfterLaunch; // 0xa1b	
	int32_t m_iExploitableByPlayer; // 0xa1c	
	bool m_bHasBeenAwakened; // 0xa20	
	bool m_bIsOverrideProp; // 0xa21	
private:
	[[maybe_unused]] uint8_t __pad0a22[0x2]; // 0xa22
public:
	GameTime_t m_fNextCheckDisableMotionContactsTime; // 0xa24	
	int32_t m_iInitialGlowState; // 0xa28	
	int32_t m_nGlowRange; // 0xa2c	
	int32_t m_nGlowRangeMin; // 0xa30	
	Color m_glowColor; // 0xa34	
	bool m_bForceNavIgnore; // 0xa38	
	bool m_bNoNavmeshBlocker; // 0xa39	
	bool m_bForceNpcExclude; // 0xa3a	
	bool m_bShouldAutoConvertBackFromDebris; // 0xa3b	
	bool m_bMuteImpactEffects; // 0xa3c	
private:
	[[maybe_unused]] uint8_t __pad0a3d[0x7]; // 0xa3d
public:
	bool m_bAcceptDamageFromHeldObjects; // 0xa44	
	bool m_bEnableUseOutput; // 0xa45	
	// MNetworkEnable
	bool m_bAwake; // 0xa46	
private:
	[[maybe_unused]] uint8_t __pad0a47[0x1]; // 0xa47
public:
	int32_t m_nCollisionGroupOverride; // 0xa48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa50
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysicsPropOverride : public CPhysicsProp
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa88
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CPhysicsPropRespawnable : public CPhysicsProp
{
public:
	Vector m_vOriginalSpawnOrigin; // 0xa50	
	QAngle m_vOriginalSpawnAngles; // 0xa5c	
	Vector m_vOriginalMins; // 0xa68	
	Vector m_vOriginalMaxs; // 0xa74	
	float m_flRespawnDuration; // 0xa80	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CAttributeContainer m_AttributeManager"
class CEconEntity : public CBaseFlex
{
private:
	[[maybe_unused]] uint8_t __pad07f8[0x10]; // 0x7f8
public:
	// MNetworkEnable
	CAttributeContainer m_AttributeManager; // 0x808	
	CHandle< CBaseEntity > m_hOldProvidee; // 0x930	
	int32_t m_iOldOwnerClass; // 0x934	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x940
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEconWearable : public CEconEntity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
class IBody : public INextBotComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Fountain_Glyph : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Radar_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	bool m_bEverFound; // 0x131c	
	bool m_bBonus; // 0x131d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Courier_AutoDeliver : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Turbo_Courier_Haste : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Turbo_Courier_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Jungle_Varmint : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
class CDOTA_Modifier_JungleVarmint_Dive : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1318	
	float m_flInitialVelocity; // 0x131c	
	Vector m_vStartPosition; // 0x1320	
	Vector m_vTargetHorizontalDirection; // 0x132c	
	float m_flCurrentTimeHoriz; // 0x1338	
	float m_flCurrentTimeVert; // 0x133c	
	bool m_bInterrupted; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t distance; // 0x1344	
	float speed; // 0x1348	
	float acceleration; // 0x134c	
	int32_t radius; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Scepter_Active : public CDOTA_Buff
{
public:
	int32_t scepter_move_speed_pct; // 0x1318	
	int32_t scepter_attack_speed; // 0x131c	
	CHandle< CBaseEntity > m_hTarget; // 0x1320	
	bool m_bPassive; // 0x1324	
	bool m_bKillAtEnd; // 0x1325	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Item_Helm_Of_The_Undying_Active : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
	bool m_bPassive; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
class CDOTA_Modifier_Legion_Commander_Duel : public CDOTA_Buff
{
public:
	int32_t reward_damage; // 0x1318	
	int32_t scepter_damage_reduction_pct; // 0x131c	
	bool m_bAttacked; // 0x1320	
	bool m_bHadAVictor; // 0x1321	
private:
	[[maybe_unused]] uint8_t __pad1322[0x2]; // 0x1322
public:
	GameTime_t m_flTimeDuelStart; // 0x1324	
	CHandle< CBaseEntity > m_hPartner; // 0x1328	
	float m_flNextTime; // 0x132c	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x788
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tombstone_Drop : public CDOTA_Item_Physical
{
public:
	int32_t m_iTempViewer; // 0x780	
	int32_t m_iTeam; // 0x784	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_JungleVarmint_Creator : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hVarmint; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Outpost_Summoning : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Watch_Tower_Capturing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
class CDOTA_Modifier_Watch_Tower : public CDOTA_Buff
{
public:
	int32_t m_nTeamNumber; // 0x1318	
	int32_t m_iCapturingTeam; // 0x131c	
	float m_flCaptureProgress; // 0x1320	
	float m_flBonusTime; // 0x1324	
	bool m_bInitialSetupDone; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1329[0x3]; // 0x1329
public:
	int32_t m_iOriginalTeam; // 0x132c	
	CHandle< CBaseEntity > m_hPreviousHero; // 0x1330	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< PlayerID_t > m_vecLastCreditedPlayerIDs; // 0x1338	
	float m_flAccumulatedCaptureTime; // 0x1350	
	int32_t m_iBonusCount; // 0x1354	
	ParticleIndex_t m_nFxOutpostAmbient; // 0x1358	
	ParticleIndex_t m_nFxOutpostInitialAmbient; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Watch_Tower_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Watch_Tower_Invulnerable_Temporary : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Watch_Tower_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lamp_Ready : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Lamp_On : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Lamp_Off : public CDOTA_Buff
{
public:
	int32_t m_iTempViewer; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Twin_Gate_FX : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPortalAmbientFX; // 0x1318	
	float m_fPortalRadius; // 0x131c	
	ParticleIndex_t m_nChannelFX; // 0x1320	
	int32_t m_nChannelCount; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Twin_Gate_Warp_Channel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1318	
	ParticleIndex_t m_nfxTargetTp2; // 0x131c	
	ParticleIndex_t m_nfxAmbientFx; // 0x1320	
	ParticleIndex_t m_nfxPortal1; // 0x1324	
	ParticleIndex_t m_nfxPortal2; // 0x1328	
	CHandle< CBaseEntity > m_hPortal; // 0x132c	
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1330	
	Vector m_vStartPosition; // 0x1334	
	float m_flTotalTime; // 0x1340	
	float m_flElapsedTimePortion; // 0x1344	
	float animation_rate; // 0x1348	
	int32_t stop_distance; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_Vampire_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mutation_Vampire : public CDOTA_Buff
{
public:
	int32_t m_iLifeStealPct; // 0x1318	
	int32_t m_iHealthDrain; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Mutation_Spellcast : public CDOTA_Buff
{
public:
	CUtlVector< CDOTABaseAbility* > m_vecAbilities; // 0x1318	
	float m_fNextCastTime; // 0x1330	
	float m_fCastInterval; // 0x1334	
	float m_fWarningTime; // 0x1338	
	int32_t m_iNextAbility; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_DeathExplosion_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_DeathExplosion_TeamAura : public CDOTA_Modifier_Mutation_DeathExplosion_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_DeathExplosion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Mutation_DeathExplosionDelayed : public CDOTA_Buff
{
public:
	int32_t m_iDamageBase; // 0x1318	
	int32_t m_iDamagePerLevel; // 0x131c	
	int32_t m_iRadius; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_NoHealthBars_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_StationaryDamageReduction_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mutation_StationaryDamageReduction : public CDOTA_Buff
{
public:
	int32_t m_iReductionPct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_CreateTombstone_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_CreateTombstone_Team_Aura : public CDOTA_Modifier_Mutation_CreateTombstone_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_CreateTombstone : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_KillstreakPower_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Mutation_KillstreakPower : public CDOTA_Buff
{
public:
	int32_t m_iDamageDonePct; // 0x1318	
	int32_t m_iDamageTakenPct; // 0x131c	
	int32_t m_iModelScale; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_Treecutter_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mutation_Treecutter : public CDOTA_Buff
{
public:
	int32_t m_iRadius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mutation_FreeRapiers_Team : public CDOTA_Buff
{
public:
	int32_t m_nLastInterval; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_Cooldown_Reduction_Team_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mutation_Cooldown_Reduction : public CDOTA_Buff
{
public:
	int32_t m_iCooldownReduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_CritChance_Team_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Mutation_Crit_Chance : public CDOTA_Buff
{
public:
	int32_t m_iChance; // 0x1318	
	int32_t m_iDamageMultiplier; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_PocketRoshan_Team : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Mutation_DropItemOnDeath_Team : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
class CDOTA_Modifier_ContextualTips : public CDOTA_Buff
{
public:
	bool m_bAllEnemiesBots; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	GameTime_t m_flGloblLastTipSendTime; // 0x131c	
	GameTime_t m_flLastEnemyHeroDamageTime; // 0x1320	
	GameTime_t m_flLastEnemyHeroVisibleTime; // 0x1324	
	
	// Static fields:
	static float &Get_k_flParentDamageTrackingWindow(){return *reinterpret_cast<float*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Modifier_ContextualTips")->m_static_fields[0]->m_instance);};
	static float &Get_k_flGlobalTipCooldown(){return *reinterpret_cast<float*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Modifier_ContextualTips")->m_static_fields[1]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_731_Teaser_Stun : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_731_Teaser_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Neutral_Sleep_AI : public CDOTA_Buff
{
public:
	ParticleIndex_t m_iFXIndex; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Neutral_Creep_Lost : public CDOTA_Buff
{
public:
	bool m_bActive; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	GameTime_t m_flCreationTime; // 0x131c	
	ParticleIndex_t m_iFXIndex; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_KoboldTaskmaster_SpeedAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_KoboldTaskmaster_SpeedAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CentaurKhan_EnduranceAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_CentaurKhan_EnduranceAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spawnlord_Master_Stomp : public CDOTA_Buff
{
public:
	int32_t armor_reduction_pct; // 0x1318	
	float m_flArmorReduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spawnlord_Master_Freeze : public CDOTA_Buff
{
public:
	bool m_bFreezeAttack; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad1319[0x3]; // 0x1319
public:
	ParticleIndex_t m_nFXIndex; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spawnlord_Master_Freeze_Root : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1318	
	float damage; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_GnollAssassin_EnvenomedWeapon : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	float non_hero_duration; // 0x131c	
	float hero_duration; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_GnollAssassin_EnvenomedWeapon_Poison : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
	int32_t regen_reduction; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Ghost_FrostAttack : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	int32_t movespeed_slow; // 0x131c	
	int32_t attackspeed_slow; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Ghost_FrostAttack_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_PolarFurbolgUrsaWarrior_ThunderClap : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_WarpineRaider_SeedShot : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_WarpineRaider_SeedShot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Neutral_SpellImmunity : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Neutral_SpellImmunity_Visible : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_OgreMagi_FrostArmor : public CDOTA_Buff
{
public:
	int32_t armor_bonus; // 0x1318	
	float slow_duration; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_OgreMagi_FrostArmor_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DarkTrollWarlord_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_GiantWolf_CriticalStrike : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1318	
	int32_t crit_chance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_MudGolem_RockDestroy : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	float duration; // 0x131c	
	int32_t shard_health; // 0x1320	
	int32_t shard_damage; // 0x1324	
	int32_t shard_duration; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_MudGolem_Rock_Shard : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoNotCastEnsnare : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoNotCastRock : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_DoNotCastSmash : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AlphaWolf_CriticalStrike : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1318	
	int32_t crit_chance; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AncientRockGolem_Weakening_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AncientRockGolem_Weakening : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlackDrake_MagicAmplification_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlackDrake_MagicAmplification : public CDOTA_Buff
{
public:
	int32_t spell_amp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AlphaWolf_CommandAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_AlphaWolf_CommandAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FrostbittenGolem_TimeWarpAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FrostbittenGolem_TimeWarpAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_cdr; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_IceShaman_IncendiaryBomb : public CDOTA_Buff
{
public:
	int32_t burn_damage; // 0x1318	
	int32_t building_damage_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Tornado_Tempest : public CDOTA_Buff
{
public:
	int32_t near_radius; // 0x1318	
	int32_t near_damage; // 0x131c	
	int32_t far_radius; // 0x1320	
	int32_t far_damage; // 0x1324	
	float tick_rate; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Tornado_Tempest_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
	int32_t attackspeed_slow; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Wildkin_Tornado : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tornado_ExpirationTime : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_EnragedWildkin_Hurricane : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1318	
	float m_flEndTime; // 0x1324	
	float m_flCurTime; // 0x1328	
	ParticleIndex_t m_FX; // 0x132c	
	int32_t distance; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BerserkerTroll_Break : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Kobold_Disarm : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EnragedWildkin_ToughnessAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_EnragedWildkin_ToughnessAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_GraniteGolem_HPAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_GraniteGolem_HPAura_Bonus : public CDOTA_Buff
{
public:
	float bonus_hp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SatyrTrickster_Purge : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SatyrSoulstealer_ManaBurn : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SatyrHellcaller_UnholyAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_SatyrHellcaller_UnholyAura_Bonus : public CDOTA_Buff
{
public:
	float health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spawnlord_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Spawnlord_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t lifesteal; // 0x1318	
	int32_t hp_regen; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ForestTrollHighPriest_HealAutocast : public CDOTA_Buff
{
public:
	int32_t health; // 0x1318	
	CHandle< CBaseEntity > m_hHealTarget; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ForestTrollHighPriest_ManaAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_ForestTrollHighPriest_ManaAura_Bonus : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1318	
	int32_t allow_multiple; // 0x131c	
	int32_t m_nAttributes; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ForestTrollHighPriest_HealAmp : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_ForestTrollHighPriest_HealAmp_Bonus : public CDOTA_Buff
{
public:
	float heal_amp; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Furbolg_Enrage_AttackSpeed_OnDeath : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifer_Furbolg_Enrage_AttackSpeed : public CDOTA_Buff
{
public:
	int32_t bonus_aspd; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Furbolg_Enrage_Damage_OnDeath : public CDOTA_Buff
{
public:
	float duration; // 0x1318	
	int32_t radius; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FelBeast_Haunt_OnDeath : public CDOTA_Buff
{
public:
	int32_t projectile_speed; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_FelBeast_Haunt : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifer_Furbolg_Enrage_Damage : public CDOTA_Buff
{
public:
	int32_t bonus_dmg_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_KoboldTunneler_ProspectingAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_KoboldTunneler_ProspectingAura_Money : public CDOTA_Buff
{
public:
	int32_t gpm_aura; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_HillTroll_RallyAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_HillTroll_Rally : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_HillTroll_Rally_Stack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_HarpyScout_TakeOff : public CDOTA_Buff
{
public:
	int32_t move_speed_penalty; // 0x1318	
	float cost_per_second; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_OgreSmash_Swing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_GiantWolf_Intimidate : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_HarpyStorm_ChainLightning : public CDOTA_Buff
{
public:
	int32_t jump_range; // 0x1318	
	int32_t max_targets; // 0x131c	
	float damage_percent_loss; // 0x1320	
	float m_flCurDamage; // 0x1324	
	Vector m_vJumpPosition; // 0x1328	
private:
	[[maybe_unused]] uint8_t __pad1334[0x4]; // 0x1334
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_BlackDragon_Fireball_Thinker : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1318	
	int32_t radius; // 0x131c	
	int32_t damage; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlackDragon_SplashAttack : public CDOTA_Buff
{
public:
	int32_t range; // 0x1318	
	float damage_percent; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlackDragon_DragonhideAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlackDragon_DragonhideAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MudGolem_CloakAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MudGolem_CloakAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_magical_armor; // 0x1318	
	int32_t bonus_magical_armor_creeps; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlueDragonspawnSorcerer_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlueDragonspawnOverseer_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlueDragonspawnOverseer_DevotionAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BlueDragonspawnOverseer_DevotionAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BigThunderLizard_Wardrums : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BigThunderLizard_Wardrums_Aura : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
	int32_t accuracy; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BigThunderLizard_Slam : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_BigThunderLizard_Frenzy : public CDOTA_Buff
{
public:
	int32_t attackspeed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Casting : public CDOTA_Buff
{
public:
	int32_t cast_animation; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Black_Nightmare : public CDOTA_Buff
{
public:
	float animation_rate; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Black_Nightmare_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Blue_ColdFeet : public CDOTA_Buff
{
public:
	Vector m_vecStartPosition; // 0x1318	
	int32_t m_nCurrentTick; // 0x1324	
	float damage; // 0x1328	
	int32_t break_distance; // 0x132c	
	float stun_duration; // 0x1330	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Blue_ColdFeet_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Blue_IceVortexThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t movement_speed_pct; // 0x131c	
	int32_t spell_resist_pct; // 0x1320	
	ParticleIndex_t m_nFXIndex; // 0x1324	
	CUtlVector< CHandle< CBaseEntity > > m_hChilledEntities; // 0x1328	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Blue_IceVortex : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1318	
	int32_t spell_resist_pct; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Red_Earthshock : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Red_Overpower : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus_pct; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Yellow_IonShell : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t damage_per_second; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Yellow_Surge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_White_Degen_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_White_Degen_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Green_LivingArmor : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1318	
	int32_t damage_block; // 0x131c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Green_Overgrowth : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Orange_LightStrikeArray_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1318	
	float m_flStunDuration; // 0x131c	
	int32_t light_strike_array_aoe; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Purple_VenomousGale : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1318	
	int32_t tick_damage; // 0x131c	
	float tick_interval; // 0x1320	
	float duration; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Greevil_Miniboss_Sight : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
class CDOTA_Modifier_Neutral_Upgrade : public CDOTA_Buff
{
public:
	float increase_time; // 0x1318	
	int32_t increase_damage; // 0x131c	
	int32_t increase_health; // 0x1320	
	float increase_armor; // 0x1324	
	int32_t increase_aspd; // 0x1328	
	int32_t increase_gold; // 0x132c	
	int32_t increase_xp; // 0x1330	
	int32_t current_level; // 0x1334	
	int32_t max_level; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Creep_Siege : public CDOTA_Buff
{
public:
	int32_t bonus_building_damage; // 0x1318	
	int32_t incoming_hero_damage_penalty; // 0x131c	
	int32_t incoming_basic_damage_penalty; // 0x1320	
	int32_t incoming_controlled_unit_penalty; // 0x1324	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_Creep_Piercing : public CDOTA_Buff
{
public:
	int32_t creep_damage_bonus; // 0x1318	
	int32_t hero_damage_penalty; // 0x131c	
	int32_t heavy_damage_penalty; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Creep_Irresolute : public CDOTA_Buff
{
public:
	int32_t hero_damage_penalty; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1330
// Has VTable
class CDOTA_Modifier_Creep_Bonus_XP : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1318	
	int32_t hero_damage_penalty; // 0x131c	
	int32_t bonus_gold; // 0x1320	
	int32_t m_iGoldBounty; // 0x1324	
	ParticleIndex_t iBannerEffect; // 0x1328	
	ParticleIndex_t iRingEffect; // 0x132c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_Flagbearer_Creep_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_health_regen; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Filler_Tooltip : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1328
// Has VTable
class CDOTA_Modifier_MuertaReleaseEvent_RemoveGravestone : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nParticleIndex; // 0x1318	
private:
	[[maybe_unused]] uint8_t __pad131c[0x4]; // 0x131c
public:
	CUtlVector< ParticleIndex_t >* m_pActiveGravestones; // 0x1320	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1320
// Has VTable
class CDOTA_Modifier_MuertaReleaseEvent : public CDOTA_Buff
{
public:
	CHandle< CIngameEvent_MuertaReleaseSpring2023 > m_hEvent; // 0x1318	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_Tutorial_Sleep : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1318
// Has VTable
class CDOTA_Modifier_ARDM_NewHero : public CDOTA_Modifier_Tutorial_Sleep
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
class CDOTA_Modifier_Gold_Bag_Launch : public CDOTA_Modifier_Knockback
{
public:
	int32_t gold_amount; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tier1Token : public CDOTA_Item_TierToken
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tier2Token : public CDOTA_Item_TierToken
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tier3Token : public CDOTA_Item_TierToken
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tier4Token : public CDOTA_Item_TierToken
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Item_Tier5Token : public CDOTA_Item_TierToken
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CAdditionalWearable : public CDynamicProp
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x948
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flPoseParameter"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_vLookTargetPosition"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_nHitboxSet"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_vecOrigin"
// MNetworkExcludeByName "m_cellX"
// MNetworkExcludeByName "m_cellY"
// MNetworkExcludeByName "m_cellZ"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
// MNetworkExcludeByName "m_vecMaxs"
// MNetworkExcludeByName "m_vecMins"
// MNetworkExcludeByName "m_hOwnerEntity"
// MNetworkExcludeByName "m_hParent"
// MNetworkExcludeByName "m_flCreateTime"
// MNetworkExcludeByName "CAttributeManager::m_hOuter"
// MNetworkExcludeByName "VPhysicsCollisionAttribute_t::m_nEntityId"
// MNetworkExcludeByName "VPhysicsCollisionAttribute_t::m_nOwnerId"
// MNetworkExcludeByName "VPhysicsCollisionAttribute_t::m_nHierarchyId"
// MNetworkExcludeByName "CEconItemView::m_iInventoryPosition"
// MNetworkVarNames "bool m_bOwnerModelChanged"
// MNetworkVarNames "bool m_bIsGeneratingEconItem"
// MNetworkVarNames "bool m_bIsItemVisibleOnGeneratedEntity"
// MNetworkVarNames "bool m_bHideWearableButDrawAdditionalWearables"
// MNetworkVarNames "CHandle< CBaseAnimating> m_hAdditionalWearable"
class CDOTAWearableItem : public CEconWearable
{
public:
	// MNetworkEnable
	bool m_bOwnerModelChanged; // 0x940	
	// MNetworkEnable
	bool m_bIsGeneratingEconItem; // 0x941	
	// MNetworkEnable
	bool m_bIsItemVisibleOnGeneratedEntity; // 0x942	
	// MNetworkEnable
	// MNetworkChangeCallback "OnHideWearableButDrawAdditionalWearablesChanged"
	bool m_bHideWearableButDrawAdditionalWearables; // 0x943	
	// MNetworkEnable
	CHandle< CBaseAnimatingActivity > m_hAdditionalWearable; // 0x944	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x988
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CEnvDeferredSpotLight : public CEnvDeferredLight
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa10
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_GuildBannerDynamic : public CDynamicProp
{
public:
	// MNetworkEnable
	bool m_bRespawnClientEntity; // 0x9f0	
	// MNetworkEnable
	bool m_bPlaySpawnAnimation; // 0x9f1	
	// MNetworkEnable
	uint8_t m_unGuildTier; // 0x9f2	
	// MNetworkEnable
	uint8_t m_unPrimaryColor; // 0x9f3	
	// MNetworkEnable
	uint8_t m_unSecondaryColor; // 0x9f4	
	// MNetworkEnable
	uint8_t m_unPattern; // 0x9f5	
private:
	[[maybe_unused]] uint8_t __pad09f6[0x2]; // 0x9f6
public:
	// MNetworkEnable
	uint64_t m_unLogo; // 0x9f8	
	// MNetworkEnable
	GuildID_t m_unGuildID; // 0xa00	
	// MNetworkEnable
	uint32_t m_unGuildFlags; // 0xa04	
	// MNetworkEnable
	bool m_bUsePanelCache; // 0xa08	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTAPropCustomTexture : public CDynamicProp
{
public:
	// MNetworkEnable
	uint32_t m_unTeamID; // 0x9f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bUseAvatar"
class CDOTAPropConsumableBanner : public CDynamicProp
{
public:
	// MNetworkEnable
	bool m_bUseAvatar; // 0x9f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa18
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nPlayerID"
class CDOTAPropTI10PlayerGuildBanner : public CDOTA_GuildBannerDynamic
{
public:
	// MNetworkEnable
	int32_t m_nPlayerID; // 0xa10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa18
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nPlayerID"
class CDOTAPropPlusPlayerGuildBanner : public CDOTA_GuildBannerDynamic
{
public:
	// MNetworkEnable
	int32_t m_nPlayerID; // 0xa10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoPlayerStartGoodGuys : public CInfoPlayerStartDota
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoPlayerStartBadGuys : public CInfoPlayerStartDota
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPCSpawnerGoodTop : public CDOTA_NPCSpawner
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPCSpawnerGoodMid : public CDOTA_NPCSpawner
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPCSpawnerGoodBot : public CDOTA_NPCSpawner
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPCSpawnerBadTop : public CDOTA_NPCSpawner
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPCSpawnerBadMid : public CDOTA_NPCSpawner
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPCSpawnerBadBot : public CDOTA_NPCSpawner
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CBaseFlexAlias_funCBaseFlex : public CBaseFlex
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x870
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CScriptItem : public CItem
{
public:
	CEntityIOOutput m_OnPlayerPickup; // 0x840	
	MoveType_t m_MoveTypeOverride; // 0x868	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa90
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CRagdollPropAlias_physics_prop_ragdoll : public CRagdollProp
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xad0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "uint32 m_boneIndexAttached"
// MNetworkVarNames "uint32 m_ragdollAttachedObjectIndex"
// MNetworkVarNames "Vector m_attachmentPointBoneSpace"
// MNetworkVarNames "Vector m_attachmentPointRagdollSpace"
class CRagdollPropAttached : public CRagdollProp
{
public:
	// MNetworkEnable
	uint32_t m_boneIndexAttached; // 0xa90	
	// MNetworkEnable
	uint32_t m_ragdollAttachedObjectIndex; // 0xa94	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_attachmentPointBoneSpace; // 0xa98	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_attachmentPointRagdollSpace; // 0xaa4	
	bool m_bShouldDetach; // 0xab0	
private:
	[[maybe_unused]] uint8_t __pad0ab1[0xf]; // 0xab1
public:
	bool m_bShouldDeleteAttachedActivationRecord; // 0xac0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByUserGroup "LocalPlayerExclusive"
// MNetworkVarNames "CHandle< CEconWearable > m_hMyWearables"
// MNetworkVarNames "float m_flFieldOfView"
class CBaseCombatCharacter : public CBaseFlex
{
public:
	bool m_bForceServerRagdoll; // 0x7f8	
private:
	[[maybe_unused]] uint8_t __pad07f9[0x7]; // 0x7f9
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CEconWearable > > m_hMyWearables; // 0x800	
	// MNetworkEnable
	float m_flFieldOfView; // 0x818	
	float m_impactEnergyScale; // 0x81c	
	HitGroup_t m_LastHitGroup; // 0x820	
	bool m_bApplyStressDamage; // 0x824	
private:
	[[maybe_unused]] uint8_t __pad0825[0x3]; // 0x825
public:
	int32_t m_bloodColor; // 0x828	
private:
	[[maybe_unused]] uint8_t __pad082c[0x5c]; // 0x82c
public:
	int32_t m_navMeshID; // 0x888	
	int32_t m_iDamageCount; // 0x88c	
	CUtlVector< RelationshipOverride_t >* m_pVecRelationships; // 0x890	
	CUtlSymbolLarge m_strRelationships; // 0x898	
	Hull_t m_eHull; // 0x8a0	
	uint32_t m_nNavHullIdx; // 0x8a4	
	
	// Static fields:
	static int32_t &Get_sm_lastInteraction(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseCombatCharacter")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CItemGeneric : public CItem
{
private:
	[[maybe_unused]] uint8_t __pad0840[0x8]; // 0x840
public:
	bool m_bHasTriggerRadius; // 0x848	
	bool m_bHasPickupRadius; // 0x849	
private:
	[[maybe_unused]] uint8_t __pad084a[0x2]; // 0x84a
public:
	float m_flPickupRadiusSqr; // 0x84c	
	float m_flTriggerRadiusSqr; // 0x850	
	GameTime_t m_flLastPickupCheck; // 0x854	
	bool m_bPlayerCounterListenerAdded; // 0x858	
	bool m_bPlayerInTriggerRadius; // 0x859	
private:
	[[maybe_unused]] uint8_t __pad085a[0x6]; // 0x85a
public:
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_hSpawnParticleEffect; // 0x860	
	CUtlSymbolLarge m_pAmbientSoundEffect; // 0x868	
	bool m_bAutoStartAmbientSound; // 0x870	
private:
	[[maybe_unused]] uint8_t __pad0871[0x7]; // 0x871
public:
	CUtlSymbolLarge m_pSpawnScriptFunction; // 0x878	
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_hPickupParticleEffect; // 0x880	
	CUtlSymbolLarge m_pPickupSoundEffect; // 0x888	
	CUtlSymbolLarge m_pPickupScriptFunction; // 0x890	
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_hTimeoutParticleEffect; // 0x898	
	CUtlSymbolLarge m_pTimeoutSoundEffect; // 0x8a0	
	CUtlSymbolLarge m_pTimeoutScriptFunction; // 0x8a8	
	CUtlSymbolLarge m_pPickupFilterName; // 0x8b0	
	CHandle< CBaseFilter > m_hPickupFilter; // 0x8b8	
private:
	[[maybe_unused]] uint8_t __pad08bc[0x4]; // 0x8bc
public:
	CEntityIOOutput m_OnPickup; // 0x8c0	
	CEntityIOOutput m_OnTimeout; // 0x8e8	
	CEntityIOOutput m_OnTriggerStartTouch; // 0x910	
	CEntityIOOutput m_OnTriggerTouch; // 0x938	
	CEntityIOOutput m_OnTriggerEndTouch; // 0x960	
	CUtlSymbolLarge m_pAllowPickupScriptFunction; // 0x988	
	float m_flPickupRadius; // 0x990	
	float m_flTriggerRadius; // 0x994	
	CUtlSymbolLarge m_pTriggerSoundEffect; // 0x998	
	bool m_bGlowWhenInTrigger; // 0x9a0	
	Color m_glowColor; // 0x9a1	
	bool m_bUseable; // 0x9a5	
private:
	[[maybe_unused]] uint8_t __pad09a6[0x2]; // 0x9a6
public:
	CHandle< CItemGenericTriggerHelper > m_hTriggerHelper; // 0x9a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkUserGroupProxy "CBasePlayerPawn"
// MNetworkUserGroupProxy "CBasePlayerPawn"
// MNetworkExcludeByUserGroup "FogController"
// MNetworkIncludeByUserGroup "Player"
// MNetworkIncludeByUserGroup "Water"
// MNetworkIncludeByUserGroup "LocalPlayerExclusive"
// MNetworkIncludeByName "m_iMaxHealth"
// MNetworkExcludeByName "m_pWeaponServices"
// MNetworkExcludeByName "m_pItemServices"
// MNetworkExcludeByName "m_pAutoaimServices"
// MNetworkExcludeByName "m_pObserverServices"
// MNetworkExcludeByName "m_pWaterServices"
// MNetworkExcludeByName "m_pUseServices"
// MNetworkExcludeByName "m_pFlashlightServices"
// MNetworkExcludeByName "m_pMovementServices"
// MNetworkVarNames "CPlayer_WeaponServices * m_pWeaponServices"
// MNetworkVarNames "CPlayer_ItemServices * m_pItemServices"
// MNetworkVarNames "CPlayer_AutoaimServices * m_pAutoaimServices"
// MNetworkVarNames "CPlayer_ObserverServices * m_pObserverServices"
// MNetworkVarNames "CPlayer_WaterServices * m_pWaterServices"
// MNetworkVarNames "CPlayer_UseServices * m_pUseServices"
// MNetworkVarNames "CPlayer_FlashlightServices * m_pFlashlightServices"
// MNetworkVarNames "CPlayer_CameraServices * m_pCameraServices"
// MNetworkVarNames "CPlayer_MovementServices * m_pMovementServices"
// MNetworkUserGroupProxy "CBasePlayerPawn"
// MNetworkVarNames "uint32 m_iHideHUD"
// MNetworkVarNames "sky3dparams_t m_skybox3d"
// MNetworkVarNames "GameTime_t m_flDeathTime"
// MNetworkVarNames "CHandle< CBasePlayerController> m_hController"
class CBasePlayerPawn : public CBaseCombatCharacter
{
public:
	// MNetworkEnable
	CPlayer_WeaponServices* m_pWeaponServices; // 0x8a8	
	// MNetworkEnable
	CPlayer_ItemServices* m_pItemServices; // 0x8b0	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	CPlayer_AutoaimServices* m_pAutoaimServices; // 0x8b8	
	// MNetworkEnable
	CPlayer_ObserverServices* m_pObserverServices; // 0x8c0	
	// MNetworkEnable
	CPlayer_WaterServices* m_pWaterServices; // 0x8c8	
	// MNetworkEnable
	CPlayer_UseServices* m_pUseServices; // 0x8d0	
	// MNetworkEnable
	CPlayer_FlashlightServices* m_pFlashlightServices; // 0x8d8	
	// MNetworkEnable
	CPlayer_CameraServices* m_pCameraServices; // 0x8e0	
	// MNetworkEnable
	CPlayer_MovementServices* m_pMovementServices; // 0x8e8	
private:
	[[maybe_unused]] uint8_t __pad08f0[0x8]; // 0x8f0
public:
	QAngle v_angle; // 0x8f8	
	QAngle v_anglePrevious; // 0x904	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint32_t m_iHideHUD; // 0x910	
private:
	[[maybe_unused]] uint8_t __pad0914[0x4]; // 0x914
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	sky3dparams_t m_skybox3d; // 0x918	
	GameTime_t m_fTimeLastHurt; // 0x9a8	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	GameTime_t m_flDeathTime; // 0x9ac	
	GameTime_t m_fNextSuicideTime; // 0x9b0	
	bool m_fInitHUD; // 0x9b4	
private:
	[[maybe_unused]] uint8_t __pad09b5[0x3]; // 0x9b5
public:
	CAI_Expresser* m_pExpresser; // 0x9b8	
	// MNetworkEnable
	CHandle< CBasePlayerController > m_hController; // 0x9c0	
private:
	[[maybe_unused]] uint8_t __pad09c4[0x4]; // 0x9c4
public:
	float m_fHltvReplayDelay; // 0x9c8	
	float m_fHltvReplayEnd; // 0x9cc	
	CEntityIndex m_iHltvReplayEntity; // 0x9d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "uint8 m_nLod"
class NextBotCombatCharacter : public CBaseCombatCharacter
{
private:
	[[maybe_unused]] uint8_t __pad08a8[0x88]; // 0x8a8
public:
	// MNetworkEnable
	uint8_t m_nLod; // 0x930	
	bool m_didModelChange; // 0x931	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x948
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Tiny_ScepterTree : public CDOTAWearableItem
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9d8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkUserGroupProxy "CDOTAPlayerPawn"
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPlaybackRate"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecVelocity"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_nTickBase"
// MNetworkUserGroupProxy "CDOTAPlayerPawn"
// MNetworkOverride "m_vecOrigin CGameSceneNode"
// MNetworkOverride "m_cellX CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_cellY CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_cellZ CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_vecX CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_vecY CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_vecZ CNetworkOriginCellCoordQuantizedVector"
// MNetworkVarTypeOverride "CDOTAPlayer_CameraServices m_pCameraServices"
// MNetworkIncludeByName "m_pCameraServices"
// MNetworkVarTypeOverride "CDOTAPlayer_MovementServices m_pMovementServices"
// MNetworkIncludeByName "m_pMovementServices"
class CDOTAPlayerPawn : public CBasePlayerPawn
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_bIsIllusion"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_nHitboxSet"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_vecMaxs"
// MNetworkExcludeByName "m_vecMins"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
// MNetworkExcludeByName "m_vLookTargetPosition"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkIncludeByName "m_fFlags"
// MNetworkIncludeByName "m_iMaxHealth"
// MNetworkIncludeByName "m_lifeState"
// MNetworkIncludeByName "m_bTakesDamage"
// MNetworkIncludeByName "m_nTakeDamageFlags"
// MNetworkIncludeByName "m_iHealth"
// MNetworkOverride "m_angRotation CGameSceneNode"
// MNetworkOverride "m_angRotation CGameSceneNode"
// MNetworkUserGroupProxy "CDOTA_BaseNPC"
// MNetworkUserGroupProxy "CDOTA_BaseNPC"
// MNetworkVarNames "bool m_bSelectionRingVisible"
// MNetworkVarNames "int m_iCurrentLevel"
// MNetworkVarNames "float m_flMana"
// MNetworkVarNames "float m_flMaxMana"
// MNetworkVarNames "float m_flManaThinkRegen"
// MNetworkVarNames "float m_flHealthThinkRegen"
// MNetworkVarNames "int m_nHealthBarOffsetOverride"
// MNetworkVarNames "bool m_bIsPhantom"
// MNetworkVarNames "bool m_bIsAncient"
// MNetworkVarNames "bool m_bIsBossCreature"
// MNetworkVarNames "bool m_bIsNeutralUnitType"
// MNetworkVarNames "bool m_bIsSummoned"
// MNetworkVarNames "bool m_bCanBeDominated"
// MNetworkVarNames "bool m_bCanRespawn"
// MNetworkVarNames "bool m_bHasUpgradeableAbilities"
// MNetworkVarNames "int m_iBKBChargesUsed"
// MNetworkVarNames "int m_iAeonChargesUsed"
// MNetworkVarNames "GameTime_t m_flRefresherUseTime"
// MNetworkVarNames "float m_flRefresherLastCooldown"
// MNetworkVarNames "GameTime_t m_flLastDealtDamageTime"
// MNetworkVarNames "int m_iBotDebugData"
// MNetworkVarNames "bool m_bIsMoving"
// MNetworkVarNames "bool m_bCanUseWards"
// MNetworkVarNames "bool m_bCanUseAllItems"
// MNetworkVarNames "CHandle< CDOTA_NeutralSpawner> m_hNeutralSpawner"
// MNetworkVarNames "float m_flManaRegen"
// MNetworkVarNames "float m_flHealthRegen"
// MNetworkVarNames "int64 m_nTotalDamageTaken"
// MNetworkVarNames "int m_iMoveSpeed"
// MNetworkVarNames "GameTime_t m_flTauntCooldown"
// MNetworkVarNames "GameTime_t m_flTauntCooldown2"
// MNetworkVarNames "float m_fRevealRadius"
// MNetworkVarNames "int m_iDayTimeVisionRange"
// MNetworkVarNames "int m_iNightTimeVisionRange"
// MNetworkVarNames "float m_flPhysicalArmorValue"
// MNetworkVarNames "float m_flMagicalResistanceValue"
// MNetworkVarNames "int m_iAttackCapabilities"
// MNetworkVarNames "int m_iSpecialAbility"
// MNetworkVarNames "int m_iXPBounty"
// MNetworkVarNames "int m_iXPBountyExtra"
// MNetworkVarNames "int m_iGoldBountyMin"
// MNetworkVarNames "int m_iGoldBountyMax"
// MNetworkVarNames "PlayerID_t m_nPlayerOwnerID"
// MNetworkVarNames "GameTime_t m_flLastDamageTime"
// MNetworkVarNames "GameTime_t m_flLastAttackTime"
// MNetworkVarNames "uint64 m_nUnitState64"
// MNetworkVarNames "int8 m_nUnitModelVariant"
// MNetworkVarNames "int m_iTaggedAsVisibleByTeam"
// MNetworkVarNames "uint64 m_iIsControllableByPlayer64"
// MNetworkVarNames "EHANDLE m_hAbilities"
// MNetworkVarNames "CDOTA_ModifierManager m_ModifierManager"
// MNetworkVarNames "string_t m_iszUnitName"
// MNetworkVarNames "int m_iUnitNameIndex"
// MNetworkVarNames "int m_iDamageMin"
// MNetworkVarNames "int m_iDamageMax"
// MNetworkVarNames "int m_iDamageBonus"
// MNetworkVarNames "bool m_bIsWaitingToSpawn"
// MNetworkVarNames "bool m_bIsIllusion"
// MNetworkVarNames "uint8 m_nUnitLabelIndex"
// MNetworkVarNames "CUtlString m_szScaleset"
// MNetworkVarNames "CUtlString m_szUnitLabel"
// MNetworkVarNames "CHandle< CBaseEntity> m_hOwnerNPC"
// MNetworkVarNames "CHandle< CBaseEntity> m_hGoalEntity"
// MNetworkVarNames "CDOTA_UnitInventory m_Inventory"
// MNetworkVarNames "DOTA_SHOP_TYPE m_iCurShop"
// MNetworkVarNames "string_t m_szCurShopEntName"
// MNetworkVarNames "bool m_bStolenScepter"
// MNetworkVarNames "int m_anglediff"
// MNetworkVarNames "int m_NetworkActivity"
// MNetworkVarNames "int m_NetworkSequenceIndex"
// MNetworkVarNames "bool m_bShouldDoFlyHeightVisual"
// MNetworkVarNames "float m_flStartSequenceCycle"
// MNetworkVarNames "char m_CustomHealthLabel"
// MNetworkVarNames "Color m_CustomHealthLabelColor"
class CDOTA_BaseNPC : public NextBotCombatCharacter
{
private:
	[[maybe_unused]] uint8_t __pad0938[0x20]; // 0x938
public:
	bool m_bPledgedOfrenda; // 0x958	
private:
	[[maybe_unused]] uint8_t __pad0959[0x3]; // 0x959
public:
	uint32_t m_iUnitType; // 0x95c	
	Color m_colorGemColor; // 0x960	
	bool m_bHasColorGem; // 0x964	
	// MNetworkEnable
	bool m_bSelectionRingVisible; // 0x965	
private:
	[[maybe_unused]] uint8_t __pad0966[0xa]; // 0x966
public:
	CUtlSymbolLarge m_iszBaseClass; // 0x970	
	int32_t m_iStartingMaxHealth; // 0x978	
	int32_t m_iStartingMaxMana; // 0x97c	
	int32_t m_iStartingMana; // 0x980	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iCurrentLevel; // 0x984	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "65536.000000"
	float m_flMana; // 0x988	
	float m_flBaseMaxMana; // 0x98c	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0.000000"
	// MNetworkMaxValue "65536.000000"
	float m_flMaxMana; // 0x990	
	// MNetworkEnable
	// MNetworkBitCount "14"
	// MNetworkMinValue "-50.000000"
	// MNetworkMaxValue "500.000000"
	float m_flManaThinkRegen; // 0x994	
	float m_flBaseMaxHealth; // 0x998	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "-100.000000"
	// MNetworkMaxValue "1000.000000"
	float m_flHealthThinkRegen; // 0x99c	
	// MNetworkEnable
	int32_t m_nHealthBarOffsetOverride; // 0x9a0	
	int32_t m_nHealthBarOffset; // 0x9a4	
	// MNetworkEnable
	bool m_bIsPhantom; // 0x9a8	
	// MNetworkEnable
	bool m_bIsAncient; // 0x9a9	
	// MNetworkEnable
	bool m_bIsBossCreature; // 0x9aa	
	// MNetworkEnable
	bool m_bIsNeutralUnitType; // 0x9ab	
	bool m_bAutoAttacksByDefault; // 0x9ac	
	// MNetworkEnable
	bool m_bIsSummoned; // 0x9ad	
	// MNetworkEnable
	bool m_bCanBeDominated; // 0x9ae	
	// MNetworkEnable
	bool m_bCanRespawn; // 0x9af	
	bool m_bConsideredHero; // 0x9b0	
	bool m_bUsesConstantGesture; // 0x9b1	
	bool m_bIsPlayingSingleForcedActivity; // 0x9b2	
	// MNetworkEnable
	bool m_bHasUpgradeableAbilities; // 0x9b3	
	// MNetworkEnable
	int32_t m_iBKBChargesUsed; // 0x9b4	
	// MNetworkEnable
	int32_t m_iAeonChargesUsed; // 0x9b8	
	// MNetworkEnable
	GameTime_t m_flRefresherUseTime; // 0x9bc	
	// MNetworkEnable
	float m_flRefresherLastCooldown; // 0x9c0	
	// MNetworkEnable
	GameTime_t m_flLastDealtDamageTime; // 0x9c4	
	// MNetworkEnable
	int32_t m_iBotDebugData; // 0x9c8	
	// MNetworkEnable
	bool m_bIsMoving; // 0x9cc	
private:
	[[maybe_unused]] uint8_t __pad09cd[0x19b]; // 0x9cd
public:
	float m_flChannelMultiplier; // 0xb68	
	// MNetworkEnable
	bool m_bCanUseWards; // 0xb6c	
	// MNetworkEnable
	bool m_bCanUseAllItems; // 0xb6d	
private:
	[[maybe_unused]] uint8_t __pad0b6e[0x2]; // 0xb6e
public:
	PlayerID_t m_iLastAbilityPlayer; // 0xb70	
	bool m_bIsPhantomBlocker; // 0xb74	
	bool m_bBlocksCreepSpawn; // 0xb75	
	bool m_bCanSellItems; // 0xb76	
private:
	[[maybe_unused]] uint8_t __pad0b77[0x1]; // 0xb77
public:
	// MNetworkEnable
	CHandle< CDOTA_NeutralSpawner > m_hNeutralSpawner; // 0xb78	
	bool m_bTrackDamageTaken; // 0xb7c	
private:
	[[maybe_unused]] uint8_t __pad0b7d[0x3]; // 0xb7d
public:
	GameTick_t m_nNextRegenThink; // 0xb80	
	GameTick_t m_nNextModifierThink; // 0xb84	
	GameTick_t m_nNextModelScaleThink; // 0xb88	
	GameTick_t m_nNextUnitThink; // 0xb8c	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "-100.000000"
	// MNetworkMaxValue "1000.000000"
	float m_flManaRegen; // 0xb90	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "-100.000000"
	// MNetworkMaxValue "1000.000000"
	float m_flHealthRegen; // 0xb94	
	// MNetworkEnable
	// MNetworkPriority "32"
	int64_t m_nTotalDamageTaken; // 0xb98	
	float m_flHealthRegenCounter; // 0xba0	
	float m_flManaRegenCounter; // 0xba4	
	float m_flAccumulatedHeal; // 0xba8	
	int32_t m_iBaseAttackSpeed; // 0xbac	
	int32_t m_iBaseDamageMin; // 0xbb0	
	int32_t m_iBaseDamageMax; // 0xbb4	
	int32_t m_iAttackRange; // 0xbb8	
	int32_t m_iAttackRangeBuffer; // 0xbbc	
	// MNetworkEnable
	int32_t m_iMoveSpeed; // 0xbc0	
	float m_flTurnRate; // 0xbc4	
	int32_t m_iHasAggressiveStance; // 0xbc8	
	bool m_bInAggressiveStance; // 0xbcc	
	bool m_bInInjuredAggressiveStance; // 0xbcd	
private:
	[[maybe_unused]] uint8_t __pad0bce[0x2]; // 0xbce
public:
	float m_flFollowRange; // 0xbd0	
	int32_t m_iAcquisitionRange; // 0xbd4	
	float m_flAttackAnimationPoint; // 0xbd8	
	float m_flHullRadius; // 0xbdc	
	float m_flCollisionPadding; // 0xbe0	
	// MNetworkEnable
	GameTime_t m_flTauntCooldown; // 0xbe4	
	// MNetworkEnable
	GameTime_t m_flTauntCooldown2; // 0xbe8	
	// MNetworkEnable
	float m_fRevealRadius; // 0xbec	
	float m_flProjectileCollisionSize; // 0xbf0	
	ObstructionRelationshipClass_t m_ObstructionRelationshipClass; // 0xbf4	
	CUtlSymbolLarge m_iszParticleFolder; // 0xbf8	
	CUtlSymbolLarge m_iszGameSoundsFile; // 0xc00	
	CUtlSymbolLarge m_iszVoiceFile; // 0xc08	
	CUtlSymbolLarge m_iszSoundSet; // 0xc10	
	CUtlSymbolLarge m_iszSelectionGroup; // 0xc18	
	CUtlSymbolLarge m_iszAnimationModifier; // 0xc20	
private:
	[[maybe_unused]] uint8_t __pad0c28[0x8]; // 0xc28
public:
	float m_flBaseAttackTime; // 0xc30	
	// MNetworkEnable
	int32_t m_iDayTimeVisionRange; // 0xc34	
	// MNetworkEnable
	int32_t m_iNightTimeVisionRange; // 0xc38	
	float m_fBotAttackDesire; // 0xc3c	
	int32_t m_iUnitRelationshipClass; // 0xc40	
	// MNetworkEnable
	float m_flPhysicalArmorValue; // 0xc44	
	// MNetworkEnable
	float m_flMagicalResistanceValue; // 0xc48	
	int32_t m_iTeamName; // 0xc4c	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iAttackCapabilities; // 0xc50	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iSpecialAbility; // 0xc54	
	int32_t m_iMoveCapabilities; // 0xc58	
	int32_t m_iOriginalAttackCapabilities; // 0xc5c	
	// MNetworkEnable
	int32_t m_iXPBounty; // 0xc60	
	// MNetworkEnable
	int32_t m_iXPBountyExtra; // 0xc64	
	// MNetworkEnable
	int32_t m_iGoldBountyMin; // 0xc68	
	// MNetworkEnable
	int32_t m_iGoldBountyMax; // 0xc6c	
	PlayerID_t m_nFarmClaimPlayerID; // 0xc70	
	// MNetworkEnable
	PlayerID_t m_nPlayerOwnerID; // 0xc74	
	CUtlSymbolLarge m_iszAbilityList[35]; // 0xc78	
	int32_t m_iAttackDamageType; // 0xd90	
	bool m_bIsIdle; // 0xd94	
	bool m_bHold; // 0xd95	
	bool m_bWasKilledPassively; // 0xd96	
private:
	[[maybe_unused]] uint8_t __pad0d97[0x1]; // 0xd97
public:
	CountdownTimer m_AngerTimer; // 0xd98	
	CountdownTimer m_AlertTimer; // 0xdb0	
	CHandle< CBaseEntity > m_hAngerTarget; // 0xdc8	
	CHandle< CBaseEntity > m_hAlertTarget; // 0xdcc	
	CHandle< CBaseEntity > m_hForceAttackTarget; // 0xdd0	
	bool m_bAllowAllyForceAttack; // 0xdd4	
private:
	[[maybe_unused]] uint8_t __pad0dd5[0x3]; // 0xdd5
public:
	Vector m_vTargetLastKnownPosition; // 0xdd8	
private:
	[[maybe_unused]] uint8_t __pad0de4[0x1c]; // 0xde4
public:
	// MNetworkEnable
	GameTime_t m_flLastDamageTime; // 0xe00	
	// MNetworkEnable
	GameTime_t m_flLastAttackTime; // 0xe04	
	GameTime_t m_flTimeSinceLastAbilityNag; // 0xe08	
	GameTime_t m_flLastTeleportTime; // 0xe0c	
	// MNetworkEnable
	uint64_t m_nUnitState64; // 0xe10	
	GameTime_t m_vLastVisibilityChange[15]; // 0xe18	
private:
	[[maybe_unused]] uint8_t __pad0e54[0x1c]; // 0xe54
public:
	bool m_bFirstSpawn; // 0xe70	
private:
	[[maybe_unused]] uint8_t __pad0e71[0x3]; // 0xe71
public:
	CHandle< CBaseEntity > m_hAttackTarget; // 0xe74	
	CHandle< CBaseEntity > m_hAggroTarget; // 0xe78	
	CHandle< CBaseEntity > m_hCommandAttackTarget; // 0xe7c	
	CUtlSymbolLarge m_iszOriginalModel; // 0xe80	
	// MNetworkEnable
	int8_t m_nUnitModelVariant; // 0xe88	
	int8_t m_nUnitModelVariantCount; // 0xe89	
	bool m_bPseudoQueueOrders; // 0xe8a	
	bool m_bCastLocked; // 0xe8b	
private:
	[[maybe_unused]] uint8_t __pad0e8c[0x1c]; // 0xe8c
public:
	GameTime_t m_flAttackRegulator; // 0xea8	
	float m_flTimeDisparityTolerance; // 0xeac	
	GameTime_t m_fAttackPhaseEndTime; // 0xeb0	
	GameTime_t m_flPositionUpdateTime; // 0xeb4	
	Vector m_vLastPositionSent; // 0xeb8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iTaggedAsVisibleByTeam; // 0xec4	
	// MNetworkEnable
	uint64_t m_iIsControllableByPlayer64; // 0xec8	
	PlayerID_t m_nControllingPlayerID; // 0xed0	
	bool m_bRunAIWhenControllableByPlayer; // 0xed4	
private:
	[[maybe_unused]] uint8_t __pad0ed5[0x3]; // 0xed5
public:
	// MNetworkEnable
	// MNetworkUserGroup "Abilities"
	// MNetworkPriority "32"
	CHandle< CBaseEntity > m_hAbilities[35]; // 0xed8	
private:
	[[maybe_unused]] uint8_t __pad0f64[0x4]; // 0xf64
public:
	CUtlVector< CHandle< CBaseEntity > > m_associatedEmptyAbilities; // 0xf68	
	CHandle< CBaseEntity > m_hActiveAbility; // 0xf80	
	Vector m_vCursorLocation; // 0xf84	
	CHandle< CBaseEntity > m_hCursorTarget; // 0xf90	
	CHandle< CBaseEntity > m_hOriginalCursorTarget; // 0xf94	
	bool m_bCursorTargetingNothing; // 0xf98	
private:
	[[maybe_unused]] uint8_t __pad0f99[0x7]; // 0xf99
public:
	// MNetworkEnable
	CDOTA_ModifierManager m_ModifierManager; // 0xfa0	
private:
	[[maybe_unused]] uint8_t __pad1240[0x8]; // 0x1240
public:
	float m_flInvisibilityLevel; // 0x1248	
private:
	[[maybe_unused]] uint8_t __pad124c[0x4]; // 0x124c
public:
	CUtlSymbolLarge m_iszMapUnitName; // 0x1250	
	// MNetworkEnable
	// MNetworkDisable
	CUtlSymbolLarge m_iszUnitName; // 0x1258	
	// MNetworkEnable
	int32_t m_iUnitNameIndex; // 0x1260	
	// MNetworkEnable
	int32_t m_iDamageMin; // 0x1264	
	// MNetworkEnable
	int32_t m_iDamageMax; // 0x1268	
	// MNetworkEnable
	int32_t m_iDamageBonus; // 0x126c	
	// MNetworkEnable
	bool m_bIsWaitingToSpawn; // 0x1270	
private:
	[[maybe_unused]] uint8_t __pad1271[0x3]; // 0x1271
public:
	int32_t m_iLeashType; // 0x1274	
	int32_t m_iAggroType; // 0x1278	
	bool m_bCreepIgnoreAggro; // 0x127c	
	bool m_bCreepFirstWave; // 0x127d	
	// MNetworkEnable
	bool m_bIsIllusion; // 0x127e	
	// MNetworkEnable
	uint8_t m_nUnitLabelIndex; // 0x127f	
	// MNetworkEnable
	CUtlString m_szScaleset; // 0x1280	
	// MNetworkEnable
	CUtlString m_szUnitLabel; // 0x1288	
	CUtlString m_strAnimationModifier; // 0x1290	
private:
	[[maybe_unused]] uint8_t __pad1298[0x8]; // 0x1298
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOwnerNPC; // 0x12a0	
private:
	[[maybe_unused]] uint8_t __pad12a4[0x4]; // 0x12a4
public:
	CLocomotionBase* m_locomotor; // 0x12a8	
	IBody* m_body; // 0x12b0	
	bool m_bNeverMoveToClearSpace; // 0x12b8	
private:
	[[maybe_unused]] uint8_t __pad12b9[0x3]; // 0x12b9
public:
	// MNetworkEnable
	// MNetworkUserGroup "SpectatorsOnly"
	CHandle< CBaseEntity > m_hGoalEntity; // 0x12bc	
	bool m_bMustReachEachGoalEntity; // 0x12c0	
private:
	[[maybe_unused]] uint8_t __pad12c1[0x3]; // 0x12c1
public:
	Vector m_vInitialGoalPosition; // 0x12c4	
private:
	[[maybe_unused]] uint8_t __pad12d0[0x18]; // 0x12d0
public:
	CUnitOrders m_CurrentQueuedOrder; // 0x12e8	
private:
	[[maybe_unused]] uint8_t __pad1328[0x18]; // 0x1328
public:
	// MNetworkEnable
	CDOTA_UnitInventory m_Inventory; // 0x1340	
	CHandle< CBaseEntity > m_hItemToDrop; // 0x1418	
	// MNetworkEnable
	DOTA_SHOP_TYPE m_iCurShop; // 0x141c	
	CHandle< CBaseEntity > m_hLastNearShop; // 0x1420	
private:
	[[maybe_unused]] uint8_t __pad1424[0x4]; // 0x1424
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szCurShopEntName; // 0x1428	
	bool m_bHasInventory; // 0x1430	
private:
	[[maybe_unused]] uint8_t __pad1431[0x3]; // 0x1431
public:
	float m_flBaselineModelScale; // 0x1434	
	float m_fModelScaleMultiplier; // 0x1438	
	float m_fModelScaleMultiplierChangeStart; // 0x143c	
	GameTime_t m_fModelScaleMultiplierChangeTime; // 0x1440	
	float m_flPreviousModelScale; // 0x1444	
	float m_fMaxModelScaleMultiplier; // 0x1448	
	bool m_bIsCamped; // 0x144c	
	bool m_bIsReturningHome; // 0x144d	
	bool m_bWantsToFlee; // 0x144e	
	bool m_bWakesNeutrals; // 0x144f	
	bool m_bNeutralIgnore; // 0x1450	
	bool m_bIdleAcquire; // 0x1451	
	bool m_bCanFollowUnseenUnits; // 0x1452	
	bool m_bExpired; // 0x1453	
	Vector m_vCurrentMovementOrderDestination; // 0x1454	
	Vector m_vPreviousMovementOrderDestination; // 0x1460	
	Vector m_vResumePreviousMovementRequestLocation; // 0x146c	
	bool m_bCurrentOrderIsMovement; // 0x1478	
	bool m_bPreviousOrderIsMovement; // 0x1479	
	bool m_bResumePreviousMovement; // 0x147a	
	bool m_bIsPatrolling; // 0x147b	
	GameTime_t m_flCreationTime; // 0x147c	
	bool m_bTargetMovedOutOfRange; // 0x1480	
	bool m_bChaseTargetMoves; // 0x1481	
private:
	[[maybe_unused]] uint8_t __pad1482[0x2]; // 0x1482
public:
	float m_flChaseDistance; // 0x1484	
	CHandle< CBaseEntity > m_hChaseEntity; // 0x1488	
private:
	[[maybe_unused]] uint8_t __pad148c[0x4]; // 0x148c
public:
	CUtlVector< CUtlSymbol > m_ActivityModifiers; // 0x1490	
	bool m_bActivityModifiersDirty; // 0x14a8	
private:
	[[maybe_unused]] uint8_t __pad14a9[0x7]; // 0x14a9
public:
	CUtlVector< CUtlSymbol > m_ActivityModifiersFromScript; // 0x14b0	
	GameTime_t m_flBlinkDaggerTime; // 0x14c8	
	float m_flAdditionalBattleMusicWeight; // 0x14cc	
	// MNetworkEnable
	bool m_bStolenScepter; // 0x14d0	
	bool m_bHasScepterCached; // 0x14d1	
	bool m_bHasShardCached; // 0x14d2	
private:
	[[maybe_unused]] uint8_t __pad14d3[0x5]; // 0x14d3
public:
	CLocalNPCObstructionsCache m_LocalNPCObstructionsCache; // 0x14d8	
private:
	[[maybe_unused]] uint8_t __pad14f8[0x20]; // 0x14f8
public:
	GameTime_t m_flCritBashFailUntil; // 0x1518	
	float m_flAttackTimeLostToLastTick; // 0x151c	
	float m_flAttackTimeAtLastTick; // 0x1520	
	float m_flCompanionDistance; // 0x1524	
	bool m_bIsPartyCompanion; // 0x1528	
	bool m_bCanPartyCompanionAttack; // 0x1529	
private:
	[[maybe_unused]] uint8_t __pad152a[0x2]; // 0x152a
public:
	CHandle< CBaseEntity > m_CompanionEntity; // 0x152c	
	bool m_bFacePlayer; // 0x1530	
private:
	[[maybe_unused]] uint8_t __pad1531[0x3]; // 0x1531
public:
	GameTime_t m_flLastIdleChangeTime; // 0x1534	
	bool m_bUseNeutralCreepBehavior; // 0x1538	
private:
	[[maybe_unused]] uint8_t __pad1539[0x27]; // 0x1539
public:
	bool m_bHasBuiltWearableSpawnList; // 0x1560	
private:
	[[maybe_unused]] uint8_t __pad1561[0x3]; // 0x1561
public:
	GameTick_t m_nFoWFadeStartTime[15]; // 0x1564	
	int32_t m_nFOWVisibilityRadius; // 0x15a0	
	Vector m_vFOWOriginOverride; // 0x15a4	
	CUtlString m_strLastKillerAbility; // 0x15b0	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_anglediff; // 0x15b8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_NetworkActivity; // 0x15bc	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_NetworkSequenceIndex; // 0x15c0	
	// MNetworkEnable
	bool m_bShouldDoFlyHeightVisual; // 0x15c4	
private:
	[[maybe_unused]] uint8_t __pad15c5[0x3]; // 0x15c5
public:
	// MNetworkEnable
	float m_flStartSequenceCycle; // 0x15c8	
	bool m_bMidLoading; // 0x15cc	
private:
	[[maybe_unused]] uint8_t __pad15cd[0x3]; // 0x15cd
public:
	CHandle< CDOTA_ScriptedSpawner > m_hTutorialSpawner; // 0x15d0	
private:
	[[maybe_unused]] uint8_t __pad15d4[0x4]; // 0x15d4
public:
	CountdownTimer m_AngerCooldownTimer; // 0x15d8	
	int32_t m_iProjectileMoveSpeed; // 0x15f0	
private:
	[[maybe_unused]] uint8_t __pad15f4[0x4]; // 0x15f4
public:
	CUtlSymbolLarge m_iszAutoAttackRangedParticle; // 0x15f8	
	int32_t m_nPoseParameterTurn; // 0x1600	
	int32_t m_nPoseParameterRun; // 0x1604	
	float m_flLean; // 0x1608	
	float m_flRun; // 0x160c	
	// MNetworkEnable
	char m_CustomHealthLabel[256]; // 0x1610	
	// MNetworkEnable
	Color m_CustomHealthLabelColor; // 0x1710	
	item_definition_index_t m_nWearableDefIndex; // 0x1714	
	int8_t m_nArcanaLevel; // 0x1718	
	int8_t m_nDefaultArcanaLevel; // 0x1719	
	Color m_defaultColorGemColor; // 0x171a	
	bool m_bDisableDamageDisplay; // 0x171e	
private:
	[[maybe_unused]] uint8_t __pad171f[0x1]; // 0x171f
public:
	Color m_gibTintColor; // 0x1720	
	float m_flPathfindingSearchDepthScale; // 0x1724	
	CUtlVector< int32 > m_ActivitiesStarted; // 0x1728	
	CHandle< CBaseEntity > m_hIllusionOriginal; // 0x1740	
	CHandle< CDOTA_BaseNPC > m_hDirectionalRangedFakeTarget; // 0x1744	
private:
	[[maybe_unused]] uint8_t __pad1748[0x28]; // 0x1748
public:
	bool m_bShouldComputeRemainingPathLength; // 0x1770	
private:
	[[maybe_unused]] uint8_t __pad1771[0x3]; // 0x1771
public:
	float m_flRemainingPathLength; // 0x1774	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Additive : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flAim"
class CDOTA_BaseNPC_Creep : public CDOTA_BaseNPC_Additive
{
public:
	CDOTA_CreepKillInfo m_KillInfo; // 0x1778	
	DOTA_LANE m_Lane; // 0x1798	
	bool m_bPushback; // 0x179c	
private:
	[[maybe_unused]] uint8_t __pad179d[0x3]; // 0x179d
public:
	// MNetworkEnable
	float m_flAim; // 0x17a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_CollisionGroup"
// MNetworkExcludeByName "m_Inventory"
// MNetworkExcludeByName "m_MoveCollide"
// MNetworkExcludeByName "m_MoveType"
// MNetworkExcludeByName "m_anglediff"
// MNetworkExcludeByName "m_bIsAncient"
// MNetworkExcludeByName "m_bIsNeutralUnitType"
// MNetworkExcludeByName "m_bIsPhantom"
// MNetworkExcludeByName "m_bIsSummoned"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_fadeMaxDist"
// MNetworkExcludeByName "m_fadeMinDist"
// MNetworkExcludeByName "m_flElasticity"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flFadeScale"
// MNetworkExcludeByName "m_flHealthThinkRegen"
// MNetworkExcludeByName "m_flManaThinkRegen"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_hActiveWeapon"
// MNetworkExcludeByName "m_hLightingOrigin"
// MNetworkExcludeByName "m_iCurShop"
// MNetworkExcludeByName "m_iDamageBonus"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_nRenderFX"
// MNetworkExcludeByName "m_nRenderMode"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_vLookTargetPosition"
class CDOTA_BaseNPC_Creep_Lane : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer m_ThinkTimer; // 0x17a8	
	bool m_bInEnemyBase; // 0x17c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Creep_Siege : public CDOTA_BaseNPC_Creep_Lane
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Creep_Neutral : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer m_ThinkTimer; // 0x17a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Creep_Talking : public CDOTA_BaseNPC_Creep
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_angRotation[0]"
// MNetworkExcludeByName "m_angRotation[1]"
// MNetworkVarNames "int m_iDamageLevel"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_nFXIndex"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_nFXIndexDestruction"
// MNetworkVarNames "QAngle m_angInitialAngles"
// MNetworkVarNames "HSequence m_hHeroStatueSequence"
// MNetworkVarNames "HSequence m_hConstantLayerSequence"
// MNetworkVarNames "float m_fHeroStatueCycle"
// MNetworkVarNames "int m_iHeroStatueStatusEffectIndex"
// MNetworkVarNames "bool m_bHeroStatue"
// MNetworkVarNames "bool m_bBattleCup"
// MNetworkVarNames "char m_HeroStatueInscription"
// MNetworkVarNames "PlayerID_t m_iHeroStatueOwnerPlayerID"
// MNetworkVarNames "Color m_ParticleTintColor"
class CDOTA_BaseNPC_Building : public CDOTA_BaseNPC
{
public:
	// MNetworkEnable
	int32_t m_iDamageLevel; // 0x1778	
private:
	[[maybe_unused]] uint8_t __pad177c[0x4]; // 0x177c
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_nFXIndex; // 0x1780	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_nFXIndexDestruction; // 0x1788	
	// MNetworkEnable
	QAngle m_angInitialAngles; // 0x1790	
	// MNetworkEnable
	HSequence m_hHeroStatueSequence; // 0x179c	
	// MNetworkEnable
	HSequence m_hConstantLayerSequence; // 0x17a0	
	// MNetworkEnable
	float m_fHeroStatueCycle; // 0x17a4	
	// MNetworkEnable
	int32_t m_iHeroStatueStatusEffectIndex; // 0x17a8	
	// MNetworkEnable
	bool m_bHeroStatue; // 0x17ac	
	// MNetworkEnable
	bool m_bBattleCup; // 0x17ad	
	// MNetworkEnable
	char m_HeroStatueInscription[32]; // 0x17ae	
private:
	[[maybe_unused]] uint8_t __pad17ce[0x2]; // 0x17ce
public:
	// MNetworkEnable
	PlayerID_t m_iHeroStatueOwnerPlayerID; // 0x17d0	
	// MNetworkEnable
	Color m_ParticleTintColor; // 0x17d4	
	CUtlSymbolLarge m_sDestroySnd; // 0x17d8	
	CUtlSymbolLarge m_sDmgLvl1Snd; // 0x17e0	
	CUtlSymbolLarge m_sDmgLvl2Snd; // 0x17e8	
	CUtlSymbolLarge m_iszLinkedUnit; // 0x17f0	
	CUtlSymbolLarge m_iszAmbientEffectName; // 0x17f8	
	CUtlSymbolLarge m_iszDestructionEffectName; // 0x1800	
	CUtlSymbolLarge m_iszDamageModelLevel1; // 0x1808	
	CUtlSymbolLarge m_iszDamageModelLevel2; // 0x1810	
	CUtlSymbolLarge m_iszDamageEffectLevel1; // 0x1818	
	CUtlSymbolLarge m_iszDamageEffectLevel2; // 0x1820	
	float m_flDamageThresholdLevel1; // 0x1828	
	float m_flDamageThresholdLevel2; // 0x182c	
	bool m_bVulnerableOnCreepSpawn; // 0x1830	
	bool m_bHasOverriddenDestructionEffect; // 0x1831	
private:
	[[maybe_unused]] uint8_t __pad1832[0x2]; // 0x1832
public:
	int32_t m_iUpgradeIdentifier; // 0x1834	
	int32_t m_iInvulnCount; // 0x1838	
	int32_t m_iPlayerOwner; // 0x183c	
	DOTA_LANE m_Lane; // 0x1840	
	float m_fAmountAlongLane[2]; // 0x1844	
	Vector m_vOverrideInitialAngles; // 0x184c	
	Vector m_vOverrideInitialAnglesBG; // 0x1858	
	int32_t m_nOverrideInitialAngles; // 0x1864	
	CountdownTimer m_IdleRareAnimationTime; // 0x1868	
	
	// Static fields:
	static GameTime_t &Get_m_fLastAttackWarnTimers(){return *reinterpret_cast<GameTime_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_BaseNPC_Building")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hTowerAttackTarget"
// MNetworkVarNames "EHANDLE m_hTowerHighFiveTarget"
class CDOTA_BaseNPC_Tower : public CDOTA_BaseNPC_Building
{
public:
	CEntityIOOutput m_OnTowerKilled; // 0x1880	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTowerAttackTarget; // 0x18a8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTowerHighFiveTarget; // 0x18ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Filler : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_BaseBlocker : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "string_t m_szInteractAbilityName"
class CDOTA_NPC_Lantern : public CDOTA_BaseNPC_Building
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szInteractAbilityName; // 0x1880	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_MangoTree : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1890
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "string_t m_szOutpostName"
// MNetworkVarNames "string_t m_szInteractAbilityName"
class CDOTA_BaseNPC_Watch_Tower : public CDOTA_BaseNPC_Building
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szOutpostName; // 0x1880	
	// MNetworkEnable
	CUtlSymbolLarge m_szInteractAbilityName; // 0x1888	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Healer : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_RespawningTower : public CDOTA_BaseNPC_Tower
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Fort : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Barracks : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "CGameSceneNode::m_angRotation"
class CDOTA_BaseNPC_SDKTower : public CDOTA_BaseNPC_Tower
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_HoldoutTower : public CDOTA_BaseNPC_Tower
{
public:
	DOTA_HOLDOUT_TOWER_TYPE m_iTowerType; // 0x18b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_HoldoutTower_LightFast : public CDOTA_BaseNPC_HoldoutTower
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_HoldoutTower_HeavySlow : public CDOTA_BaseNPC_HoldoutTower
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18c0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_HoldoutTower_ReduceSpeed : public CDOTA_BaseNPC_HoldoutTower
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Effigy_Statue : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Effigy_BattleCup : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_angRotation"
// MNetworkIncludeByName "m_angRotation[0]"
// MNetworkIncludeByName "m_angRotation[1]"
class CDOTA_BaseNPC_RotatableBuilding : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flStrength"
// MNetworkVarNames "float m_flAgility"
// MNetworkVarNames "float m_flIntellect"
// MNetworkVarNames "float m_flStrengthTotal"
// MNetworkVarNames "float m_flAgilityTotal"
// MNetworkVarNames "float m_flIntellectTotal"
// MNetworkVarNames "int m_iRecentDamage"
// MNetworkVarNames "int m_iPrimaryAttribute"
// MNetworkVarNames "GameTime_t m_flDeathTime"
// MNetworkVarNames "int m_iAbilityPoints"
// MNetworkVarNames "int m_iCurrentXP"
// MNetworkVarNames "GameTime_t m_flRespawnTime"
// MNetworkVarNames "float m_flRespawnTimePenalty"
// MNetworkVarNames "bool m_bScriptDisableRespawns"
// MNetworkVarNames "PlayerID_t m_iPlayerID"
// MNetworkVarNames "CHandle< CDOTA_BaseNPC_Hero> m_hReplicatingOtherHeroModel"
// MNetworkVarNames "bool m_bReincarnating"
// MNetworkVarNames "bool m_bCustomKillEffect"
// MNetworkVarNames "GameTime_t m_flSpawnedAt"
class CDOTA_BaseNPC_Hero : public CDOTA_BaseNPC_Additive
{
private:
	[[maybe_unused]] uint8_t __pad1778[0x98]; // 0x1778
public:
	// MNetworkEnable
	float m_flStrength; // 0x1810	
	// MNetworkEnable
	float m_flAgility; // 0x1814	
	// MNetworkEnable
	float m_flIntellect; // 0x1818	
	// MNetworkEnable
	float m_flStrengthTotal; // 0x181c	
	// MNetworkEnable
	float m_flAgilityTotal; // 0x1820	
	// MNetworkEnable
	float m_flIntellectTotal; // 0x1824	
	// MNetworkEnable
	int32_t m_iRecentDamage; // 0x1828	
	// MNetworkEnable
	int32_t m_iPrimaryAttribute; // 0x182c	
	// MNetworkEnable
	GameTime_t m_flDeathTime; // 0x1830	
	float m_flStrengthGain; // 0x1834	
	float m_flAgilityGain; // 0x1838	
	float m_flIntellectGain; // 0x183c	
	float m_flLastSuggestionTime; // 0x1840	
	bool m_bItemsAddedToLoadout; // 0x1844	
	bool m_bPregameItemsAddedToLoadout; // 0x1845	
private:
	[[maybe_unused]] uint8_t __pad1846[0x2]; // 0x1846
public:
	CHandle< CBaseEntity > m_hNewARDMHero; // 0x1848	
	GameTime_t m_fBuybackCooldown; // 0x184c	
	GameTime_t m_fBuybackGoldLimit; // 0x1850	
	int32_t m_nLastHealedAmount; // 0x1854	
	float m_flLastHealedTime; // 0x1858	
	CHandle< CBaseEntity > m_hLastHealEntity; // 0x185c	
	Vector m_vRespawnPosition; // 0x1860	
private:
	[[maybe_unused]] uint8_t __pad186c[0x4]; // 0x186c
public:
	CUtlVector< CDOTA_BaseNPC_Hero::sHeroDamageInfo > m_HeroDamageInfoArray; // 0x1870	
	CUtlVector< CDOTA_BaseNPC_Hero::sHeroRecentModifierInfo > m_vecRecentModifiers; // 0x1888	
	GameTime_t m_fMostRecentDamageTime; // 0x18a0	
	// MNetworkEnable
	int32_t m_iAbilityPoints; // 0x18a4	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iCurrentXP; // 0x18a8	
	// MNetworkEnable
	GameTime_t m_flRespawnTime; // 0x18ac	
	// MNetworkEnable
	float m_flRespawnTimePenalty; // 0x18b0	
	float m_flTimeUntilRespawn; // 0x18b4	
	float m_flScriptRespawnTime; // 0x18b8	
	float m_flPendingRespawnTime; // 0x18bc	
	// MNetworkEnable
	bool m_bScriptDisableRespawns; // 0x18c0	
private:
	[[maybe_unused]] uint8_t __pad18c1[0x3]; // 0x18c1
public:
	// MNetworkEnable
	PlayerID_t m_iPlayerID; // 0x18c4	
	PlayerID_t m_iIllusionOriginalPlayerID; // 0x18c8	
	int32_t m_iHeroID; // 0x18cc	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC_Hero > m_hReplicatingOtherHeroModel; // 0x18d0	
private:
	[[maybe_unused]] uint8_t __pad18d4[0x3c]; // 0x18d4
public:
	CountdownTimer m_RespawnMusicTimer; // 0x1910	
	CountdownTimer m_HeroKillTimer; // 0x1928	
	CountdownTimer m_MultipleHeroKillTimer; // 0x1940	
	CountdownTimer m_MultipleLastHitTimer; // 0x1958	
	int32_t m_iMultipleKillCount; // 0x1970	
	bool m_bDisableWearables; // 0x1974	
private:
	[[maybe_unused]] uint8_t __pad1975[0x3]; // 0x1975
public:
	CHandle< CDOTAWearableItem > m_hTogglableWearable[98]; // 0x1978	
	CDOTA_BaseNPC_Hero::KillInfo_t m_KillInfo; // 0x1b00	
	CountdownTimer m_DirectorAbilityActivity; // 0x1b20	
	// MNetworkEnable
	bool m_bReincarnating; // 0x1b38	
	// MNetworkEnable
	bool m_bCustomKillEffect; // 0x1b39	
private:
	[[maybe_unused]] uint8_t __pad1b3a[0x2]; // 0x1b3a
public:
	// MNetworkEnable
	GameTime_t m_flSpawnedAt; // 0x1b3c	
	CountdownTimer m_PurchaseItemTimer; // 0x1b40	
	CountdownTimer m_NeutralItemTimer; // 0x1b58	
	CountdownTimer m_RetrieveItemsFromStashTimer; // 0x1b70	
	CountdownTimer m_RequestGoToSecretShopTimer; // 0x1b88	
	int32_t m_iNextItemToPurchase; // 0x1ba0	
	bool m_bDoesNextItemCompleteRecipe; // 0x1ba4	
private:
	[[maybe_unused]] uint8_t __pad1ba5[0x3]; // 0x1ba5
public:
	CUtlVector< sLoadoutItem > m_Loadout; // 0x1ba8	
	CUtlVector< CUtlPair< AbilityID_t, bool > > m_BuildingOrBuilt; // 0x1bc0	
	sLoadoutItem m_TPScroll; // 0x1bd8	
	sLoadoutItem m_Dust; // 0x1bf0	
	sLoadoutItem m_Gem; // 0x1c08	
	sLoadoutItem m_SentryWard; // 0x1c20	
	sLoadoutItem m_ObserverWard; // 0x1c38	
	sLoadoutItem m_Courier; // 0x1c50	
	sLoadoutItem m_FlyingCourier; // 0x1c68	
	bool m_bAutoPurchaseItems; // 0x1c80	
	bool m_bBuybackDisabled; // 0x1c81	
private:
	[[maybe_unused]] uint8_t __pad1c82[0x6]; // 0x1c82
public:
	CUtlVector< CHandle< CDOTA_BaseNPC_Pet > > m_hPets; // 0x1c88	
	bool m_bPreventPetSpawn; // 0x1ca0	
private:
	[[maybe_unused]] uint8_t __pad1ca1[0x7]; // 0x1ca1
public:
	CDOTAMusicProbabilityEntry m_MusicProbabilityGank; // 0x1ca8	
private:
	[[maybe_unused]] uint8_t __pad1cd0[0x28]; // 0x1cd0
public:
	CUtlString m_strCustomKillEffect; // 0x1cf8	
	CUtlString m_strCustomHexModel; // 0x1d00	
	ParticleIndex_t m_nKillStreakFX; // 0x1d08	
private:
	[[maybe_unused]] uint8_t __pad1d0c[0x4]; // 0x1d0c
public:
	CUtlVector< CHandle< CBaseEntity > > m_AbilitiesPendingDelete; // 0x1d10	
	CUtlVector< sAcquireHistory > m_vecItemPurchaseHistory; // 0x1d28	
	CUtlVector< sAcquireHistory > m_vecAbilitySkillHistory; // 0x1d40	
	CUtlVector< sAcquireHistory > m_vecNeutralItemEquippedHistory; // 0x1d58	
private:
	[[maybe_unused]] uint8_t __pad1d70[0x18]; // 0x1d70
public:
	CUtlVector< CHandle< CDOTA_BaseNPC_Hero > > m_vecExpiredIllusions; // 0x1d88	
private:
	[[maybe_unused]] uint8_t __pad1da0[0x4]; // 0x1da0
public:
	float m_flLastTimeLookedAtByDirector; // 0x1da4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Pet : public CDOTA_BaseNPC
{
public:
	CHandle< CDOTA_BaseNPC_Hero > m_hHeroHandle; // 0x1778	
	float m_flPetThreatLevel; // 0x177c	
	bool m_bReadyToPerformCoopTeleport; // 0x1780	
	bool m_bSupportsCoopTeleport; // 0x1781	
private:
	[[maybe_unused]] uint8_t __pad1782[0x2]; // 0x1782
public:
	PetCoopStates_t m_nCoopState; // 0x1784	
	CUtlString m_strPickupItemModel; // 0x1788	
	CHandle< CDOTA_Pet_CarriedItem > m_hCarriedItem; // 0x1790	
	int32_t m_nPetLevel; // 0x1794	
	PetLevelup_Rule_t m_nLevelupRule; // 0x1798	
private:
	[[maybe_unused]] uint8_t __pad179c[0x4]; // 0x179c
public:
	int32_t m_nXPCompendiumEventID; // 0x17a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "DOTA_SHOP_TYPE m_ShopType"
class CDOTA_BaseNPC_Shop : public CDOTA_BaseNPC_Building
{
public:
	// MNetworkEnable
	DOTA_SHOP_TYPE m_ShopType; // 0x1880	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_HallofFame : public CDOTA_BaseNPC_Building
{
private:
	[[maybe_unused]] uint8_t __pad1880[0x10]; // 0x1880
public:
	int32_t m_event_dota_player_team_changed; // 0x1890	
private:
	[[maybe_unused]] uint8_t __pad1894[0x4]; // 0x1894
public:
	CountdownTimer m_glowThinkTimer; // 0x1898	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Promo : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bIsCurrentlyChanneling"
// MNetworkVarNames "float m_flChannelCycle"
class CDOTA_BaseNPC_Creature : public CDOTA_BaseNPC_Creep
{
public:
	bool m_bInitialized; // 0x17a8	
	bool m_bCanRespawn; // 0x17a9	
	bool m_bUsesGestureBasedAttackAnimation; // 0x17aa	
	bool m_bIsHybridFlyer; // 0x17ab	
	bool m_bRequiresReachingEndPath; // 0x17ac	
	bool m_bAggroOwnerOnDamage; // 0x17ad	
	bool m_bReceivedAggroOnDamageOrder; // 0x17ae	
private:
	[[maybe_unused]] uint8_t __pad17af[0x1]; // 0x17af
public:
	CUtlVector< CreatureStateData_t > m_vCreatureStates; // 0x17b0	
	char* m_pszDefaultState; // 0x17c8	
	char* m_pszCurrentState; // 0x17d0	
	int32_t m_nHPGain; // 0x17d8	
	int32_t m_nManaGain; // 0x17dc	
	float m_flHPRegenGain; // 0x17e0	
	float m_flManaRegenGain; // 0x17e4	
	int32_t m_nDamageGain; // 0x17e8	
	float m_flArmorGain; // 0x17ec	
	float m_flMagicResistGain; // 0x17f0	
	float m_flDisableResistGain; // 0x17f4	
	float m_flAttackTimeGain; // 0x17f8	
	int32_t m_nMoveSpeedGain; // 0x17fc	
	int32_t m_nBountyGain; // 0x1800	
	int32_t m_nXPGain; // 0x1804	
	int32_t m_nPermanentDesire; // 0x1808	
	int32_t m_nCreatureDesire; // 0x180c	
	int32_t m_nCurrentCastBehavior; // 0x1810	
	bool m_bIsBuildingAggressive; // 0x1814	
	bool m_bIsHeroAggressive; // 0x1815	
	bool m_bDisableClumpingBehavior; // 0x1816	
private:
	[[maybe_unused]] uint8_t __pad1817[0x1]; // 0x1817
public:
	float m_flDisableResistance; // 0x1818	
	float m_flUltimateDisableResistance; // 0x181c	
	bool m_bHasOffensiveAbility; // 0x1820	
private:
	[[maybe_unused]] uint8_t __pad1821[0x7]; // 0x1821
public:
	CUtlVector< CreatureAbilityData_t > m_vOffensiveAbilities; // 0x1828	
	bool m_bHasDefensiveAbility; // 0x1840	
private:
	[[maybe_unused]] uint8_t __pad1841[0x7]; // 0x1841
public:
	CUtlVector< CreatureAbilityData_t > m_vDefensiveAbilities; // 0x1848	
	bool m_bHasEscapeAbility; // 0x1860	
private:
	[[maybe_unused]] uint8_t __pad1861[0x7]; // 0x1861
public:
	CUtlVector< CreatureAbilityData_t > m_vEscapeAbilities; // 0x1868	
	CDOTABaseAbility* m_pLastUsedAbility; // 0x1880	
	Vector m_vDesiredCastLocation; // 0x1888	
private:
	[[maybe_unused]] uint8_t __pad1894[0x4]; // 0x1894
public:
	CDOTA_BaseNPC* m_pDesiredNPCTarget; // 0x1898	
	CDOTA_BaseNPC* m_pEscortTarget; // 0x18a0	
	Vector m_vLastDamageSource; // 0x18a8	
	bool m_bIsChampion; // 0x18b4	
private:
	[[maybe_unused]] uint8_t __pad18b5[0x3]; // 0x18b5
public:
	CUtlVector< ItemDropData_t* > m_vItemDropData; // 0x18b8	
	CUtlVector< WearableData_t > m_vecAttachWearableItemDefs; // 0x18d0	
	GameTime_t m_flRespawnTime; // 0x18e8	
	// MNetworkEnable
	bool m_bIsCurrentlyChanneling; // 0x18ec	
private:
	[[maybe_unused]] uint8_t __pad18ed[0x3]; // 0x18ed
public:
	// MNetworkEnable
	float m_flChannelCycle; // 0x18f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_NeutralItemStash : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1910
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Trap_Ward : public CDOTA_BaseNPC_Creature
{
public:
	CUtlSymbolLarge m_iszDefaultAnim; // 0x18f8	
	Vector m_vTrapTargetLocal; // 0x1900	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_CustomEffigy : public CDOTA_BaseNPC_Building
{
public:
	uint32_t m_unStatusEffectIndex; // 0x1880	
	CHandle< CBaseEntity > m_hPedestal; // 0x1884	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_JungleVarmint : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Twin_Gate : public CDOTA_BaseNPC_Building
{
public:
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1880	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CIngameEvent_MuertaReleaseSpring2023_DummyModifierHolder : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_DataDriven : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_AghsFort_EarthSpiritBoss_Stone : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nTargetType"
// MNetworkVarNames "int m_nTargetFlags"
class CDOTA_NPC_Aghsfort_WitchDoctor_Ward : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	int32_t m_nTargetType; // 0x1778	
	// MNetworkEnable
	int32_t m_nTargetFlags; // 0x177c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Unit_Undying_Tombstone : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Unit_Undying_Zombie : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer m_ctRespawn; // 0x17a8	
	CDOTA_BaseNPC* m_pTombstone; // 0x17c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Unit_Hero_Undying : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_AghsFort_Lich_Ice_Spire : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Hero_Phoenix : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Unit_ArcWarden_Boss : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nTalkFXIndex; // 0x1da8	
	ParticleIndex_t m_nFXDeath; // 0x1dac	
	ParticleIndex_t m_nTempestFX; // 0x1db0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Aghsfort_PrimalBeast_Boss : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_AghsFort_Hero_Clinkz : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_AghsFort_Clinkz_Skeleton_Archer : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_AghsFort_Clinkz_Skeleton_Colossus : public CDOTA_BaseNPC_Creature
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_AncientApparition : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_AntiMage : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Bane : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Pudge : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Juggernaut : public CDOTA_BaseNPC_Hero
{
public:
	uint32_t m_unOmniKills; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Nevermore : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_SandKing : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Mirana : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Sven : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dd8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int32 m_vecInitialHeroKillBitmask"
// MNetworkVarNames "int32 m_vecInGameHeroKillBitmask"
class CDOTA_Unit_Hero_SkeletonKing : public CDOTA_BaseNPC_Hero
{
public:
	int32_t m_nSkeletonWarriors; // 0x1da8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSKArcanaProgressChanged"
	int32_t m_vecInitialHeroKillBitmask[5]; // 0x1dac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSKArcanaProgressChanged"
	int32_t m_vecInGameHeroKillBitmask[5]; // 0x1dc0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_StormSpirit : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_DrowRanger : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Earthshaker : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_VengefulSpirit : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_CrystalMaiden : public CDOTA_BaseNPC_Hero
{
public:
	int32_t m_iParticleMouthIndex; // 0x1da8	
	int32_t m_iParticleHandRIndex; // 0x1dac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Axe : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Bloodseeker : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_PhantomLancer : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bInventoryEnabled; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nTargetAngle"
// MNetworkVarNames "int m_nTargetRange"
class CDOTA_Unit_Hero_Razor : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nTargetAngle; // 0x1da8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nTargetRange; // 0x1dac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Lina : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Morphling : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_ZeusCloud : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Zuus : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Kunkka : public CDOTA_BaseNPC_Hero
{
public:
	int32_t m_nFXIndex; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CDOTA_BaseNPC> m_hIllusionOwner"
// MNetworkVarNames "bool m_bIllusionHasTree"
class CDOTA_Unit_Hero_Tiny : public CDOTA_BaseNPC_Hero
{
public:
	CHandle< CBaseEntity > m_hTreeWearable; // 0x1da8	
	ParticleIndex_t m_nFXIndexScepterAmbient; // 0x1dac	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hIllusionOwner; // 0x1db0	
	// MNetworkEnable
	bool m_bIllusionHasTree; // 0x1db4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Puck : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nTargetAngle"
class CDOTA_Unit_Hero_Windrunner : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nTargetAngle; // 0x1da8	
	ParticleIndex_t m_nFXDeath; // 0x1dac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Lich : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_Lich_Ice_Spire : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "CHandle< CBaseEntity> m_hTarget"
// MNetworkVarNames "Vector m_vProjectilePosition"
class CDOTA_Unit_Tidehunter_Anchor : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x1778	
	// MNetworkEnable
	Vector m_vProjectilePosition; // 0x177c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Tidehunter : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_ShadowShaman_SerpentWard : public CDOTA_BaseNPC_Additive
{
public:
	QAngle m_angle; // 0x1778	
	int32_t m_iPoseParameterAim; // 0x1784	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_ShadowShaman : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Riki : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Enigma : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Tinker : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_WitchDoctor : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nTargetType"
// MNetworkVarNames "int m_nTargetFlags"
class CDOTA_NPC_WitchDoctor_Ward : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	int32_t m_nTargetType; // 0x1778	
	// MNetworkEnable
	int32_t m_nTargetFlags; // 0x177c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Sniper : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Necrolyte : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Slardar : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Ursa : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Lion : public CDOTA_BaseNPC_Hero
{
public:
	uint32_t m_unFingerPrestigeKills; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Announcer : public CDOTA_BaseNPC
{
public:
	int32_t m_iAudienceTeam; // 0x1778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_CustomGameAnnouncer : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "PlayerID_t m_nSoleControllingPlayer"
// MNetworkVarNames "bool m_bFlyingCourier"
// MNetworkVarNames "GameTime_t m_flRespawnTime"
// MNetworkVarNames "CourierState_t m_nCourierState"
// MNetworkVarNames "CHandle< CBaseEntity> m_hCourierStateEntity"
class CDOTA_Unit_Courier : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bUnitRespawned; // 0x1778	
	bool m_bPreUpdateFlyingCourier; // 0x1779	
private:
	[[maybe_unused]] uint8_t __pad177a[0x2]; // 0x177a
public:
	// MNetworkEnable
	PlayerID_t m_nSoleControllingPlayer; // 0x177c	
	// MNetworkEnable
	bool m_bFlyingCourier; // 0x1780	
private:
	[[maybe_unused]] uint8_t __pad1781[0x3]; // 0x1781
public:
	// MNetworkEnable
	GameTime_t m_flRespawnTime; // 0x1784	
	// MNetworkEnable
	CourierState_t m_nCourierState; // 0x1788	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hCourierStateEntity; // 0x178c	
	CUtlString m_strCourierModel; // 0x1790	
	CUtlString m_strFlyingCourierModel; // 0x1798	
	Vector m_vSpawnLocation; // 0x17a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "PlayerID_t m_nSoleControllingPlayer"
// MNetworkVarNames "GameTime_t m_flRespawnTime"
// MNetworkVarNames "ScoutState_t m_nScoutState"
// MNetworkVarNames "CHandle< CBaseEntity> m_hScoutStateEntity"
class CDOTA_Unit_Scout : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bUnitRespawned; // 0x1778	
private:
	[[maybe_unused]] uint8_t __pad1779[0x3]; // 0x1779
public:
	// MNetworkEnable
	PlayerID_t m_nSoleControllingPlayer; // 0x177c	
	// MNetworkEnable
	GameTime_t m_flRespawnTime; // 0x1780	
	// MNetworkEnable
	ScoutState_t m_nScoutState; // 0x1784	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hScoutStateEntity; // 0x1788	
private:
	[[maybe_unused]] uint8_t __pad178c[0x4]; // 0x178c
public:
	CUtlString m_strScoutModel; // 0x1790	
	Vector m_vSpawnLocation; // 0x1798	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Fountain : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bGoldenRoshan"
class CDOTA_Unit_Roshan : public CDOTA_BaseNPC_Additive
{
public:
	int32_t m_iKillerTeam; // 0x1778	
	int32_t m_iLastHealthPercent; // 0x177c	
	ParticleIndex_t m_nFXIndex; // 0x1780	
private:
	[[maybe_unused]] uint8_t __pad1784[0x4]; // 0x1784
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAttackingHeroes; // 0x1788	
	// MNetworkEnable
	bool m_bGoldenRoshan; // 0x17a0	
	bool m_bIsNightTimeMode; // 0x17a1	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nTimesSpawned"
class CDOTA_Unit_Miniboss : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	int32_t m_nTimesSpawned; // 0x1778	
	int32_t m_nTempViewer; // 0x177c	
	CUtlVector< CHandle< CBaseEntity > > m_hAttackingHeroes; // 0x1780	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Nian_Attachment : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bAttachmentBroken; // 0x1778	
private:
	[[maybe_unused]] uint8_t __pad1779[0x3]; // 0x1779
public:
	ParticleIndex_t m_nfxIndex_tailgrow; // 0x177c	
	CUtlVector< NianDamageTaken_t > m_vecRecentDamage; // 0x1780	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1918
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Nian : public CDOTA_BaseNPC_Creature
{
public:
	CUtlVector< NianDamageTaken_t > m_vecRecentDamage; // 0x18f8	
	CHandle< CBaseEntity > m_hTail; // 0x1910	
	CHandle< CBaseEntity > m_hHorn; // 0x1914	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Warlock_Golem : public CDOTA_BaseNPC_Creep
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Warlock : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CODTA_Unit_Warlock_Imp : public CDOTA_BaseNPC_Creep
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Beastmaster : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Beastmaster_Beasts : public CDOTA_BaseNPC_Creep_Talking
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Beastmaster_Hawk : public CDOTA_Unit_Hero_Beastmaster_Beasts
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Beastmaster_Boar : public CDOTA_Unit_Hero_Beastmaster_Beasts
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_QueenOfPain : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Venomancer_PlagueWard : public CDOTA_BaseNPC_Additive
{
public:
	QAngle m_angle; // 0x1778	
	int32_t m_iPoseParameterAim; // 0x1784	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Venomancer : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_FacelessVoid : public CDOTA_BaseNPC_Hero
{
public:
	Vector m_vecStanceDestinationPoint; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_DeathProphet : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Pugna : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "uint32 m_nArcanaLevel"
class CDOTA_Unit_Hero_PhantomAssassin : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
	// MNetworkEnable
	uint32_t m_nArcanaLevel; // 0x1dac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Phantom_Assassin_GroundDagger : public CDOTA_BaseNPC_Additive
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1778	
	
	// Static fields:
	static char* &Get_PARTICLE_SPAWN(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_BaseNPC_Phantom_Assassin_GroundDagger")->m_static_fields[0]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_PhantomAssassin_Gravestone : public CDOTA_BaseNPC_Additive
{
public:
	PlayerID_t m_nVictimPlayerID; // 0x1778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_TemplarAssassin : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_TemplarAssassin_PsionicTrap : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Viper : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dc0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "float m_flDamageTaken"
// MNetworkVarNames "float m_flLastHit"
// MNetworkVarNames "GameTime_t m_flStartDamageTime"
// MNetworkVarNames "GameTime_t m_flLastTargetDummyDamageTime"
class CDOTA_Unit_TargetDummy : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	float m_flDamageTaken; // 0x1da8	
	// MNetworkEnable
	float m_flLastHit; // 0x1dac	
	// MNetworkEnable
	GameTime_t m_flStartDamageTime; // 0x1db0	
	// MNetworkEnable
	GameTime_t m_flLastTargetDummyDamageTime; // 0x1db4	
	bool m_bIsMoving; // 0x1db8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "char m_pszNetworkedSoundLoop"
// MNetworkVarNames "int m_nLoopingSoundParity"
class CDOTA_Unit_LoopingSound : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	char m_pszNetworkedSoundLoop[256]; // 0x1778	
	// MNetworkEnable
	int32_t m_nLoopingSoundParity; // 0x1878	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Luna : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_DragonKnight : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Dazzle : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Leshrac : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Rattletrap : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_Rattletrap_Cog : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Furion : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Life_Stealer : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_DarkSeer : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nNormalPunchBuffIndex; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Clinkz_Skeleton_Army : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Clinkz : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Omniknight : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Enchantress : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Huskar : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_NightStalker : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Broodmother : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Broodmother_Spiderling : public CDOTA_BaseNPC_Creep_Talking
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Broodmother_Web : public CDOTA_BaseNPC_Additive
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1778	
	Vector m_vecOrigin; // 0x177c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_BroodmotherStickyWeb : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_BountyHunter : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Weaver : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Jakiro : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Batrider : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Chen : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "uint8 m_unCurrentArcanaKillStreak"
// MNetworkVarNames "uint8 m_unBestArcanaKillStreak"
// MNetworkVarNames "PlayerID_t m_nVictimPlayerID"
// MNetworkVarNames "bool m_bArcanaKillstreakRecordBroken"
class CDOTA_Unit_Hero_Spectre : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bArcanaKillstreakCompleted; // 0x1da8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	uint8_t m_unCurrentArcanaKillStreak; // 0x1da9	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	uint8_t m_unBestArcanaKillStreak; // 0x1daa	
private:
	[[maybe_unused]] uint8_t __pad1dab[0x1]; // 0x1dab
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	PlayerID_t m_nVictimPlayerID; // 0x1dac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	bool m_bArcanaKillstreakRecordBroken; // 0x1db0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_DoomBringer : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_SpiritBreaker : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Gyrocopter : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Alchemist : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Invoker : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Invoker_Forged_Spirit : public CDOTA_BaseNPC_Creep
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Silencer : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Obsidian_Destroyer : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Brewmaster : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Brewmaster_PrimalEarth : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXEarthAmbient1; // 0x17a8	
	ParticleIndex_t m_nFXEarthAmbient2; // 0x17ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Brewmaster_PrimalStorm : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXStormAmbient1; // 0x17a8	
	ParticleIndex_t m_nFXStormAmbient2; // 0x17ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Brewmaster_PrimalFire : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXAmbient; // 0x17a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Brewmaster_PrimalVoid : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXAmbient; // 0x17a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Lycan : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Shadow_Demon : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "bool m_bShouldRespawn"
// MNetworkVarNames "bool m_bStolen"
class CDOTA_Unit_SpiritBear : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	bool m_bShouldRespawn; // 0x1da8	
	// MNetworkEnable
	bool m_bStolen; // 0x1da9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_LoneDruid : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_ChaosKnight : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkIncludeByName "m_bIsIllusion"
// MNetworkVarNames "int m_nWhichMeepo"
class CDOTA_Unit_Hero_Meepo : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	int32_t m_nWhichMeepo; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Treant : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_Treant_EyesInTheForest : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bIsBlind; // 0x1778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Ogre_Magi : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Undying_Tombstone : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Undying_Zombie : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer m_ctRespawn; // 0x17a8	
	CDOTA_BaseNPC* m_pTombstone; // 0x17c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Undying : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dd0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "Vector m_stolenAbilityColorHSV1"
// MNetworkVarNames "Vector m_stolenAbilityColorHSV2"
// MNetworkVarNames "Vector m_stolenAbilityFXColorHSV"
class CDOTA_Unit_Hero_Rubick : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityColorChanged"
	Vector m_stolenAbilityColorHSV1; // 0x1da8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityColorChanged"
	Vector m_stolenAbilityColorHSV2; // 0x1db4	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityColorChanged"
	Vector m_stolenAbilityFXColorHSV; // 0x1dc0	
	// MNetworkDisable
	bool m_bHasInitializedAbilityColors; // 0x1dcc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Disruptor : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Nyx_Assassin : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Naga_Siren : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_IngisFatuus : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_KeeperOfTheLight : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dc0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Wisp : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nAmbientFXIndex; // 0x1da8	
	ParticleIndex_t m_nStunnedFXIndex; // 0x1dac	
	ParticleIndex_t m_nTalkFXIndex; // 0x1db0	
	ParticleIndex_t m_nIllusionFXIndex; // 0x1db4	
	bool m_bParticleHexed; // 0x1db8	
	bool m_bParticleStunned; // 0x1db9	
	bool m_bDetermineAmbientEffect; // 0x1dba	
private:
	[[maybe_unused]] uint8_t __pad1dbb[0x1]; // 0x1dbb
public:
	float m_flPrevHealth; // 0x1dbc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Wisp_Spirit : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Visage : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17c8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_VisageFamiliar : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer ctTimer; // 0x17a8	
	ParticleIndex_t m_nFXAmbient; // 0x17c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Slark : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Medusa : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_TrollWarlord : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Centaur : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Magnataur : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Shredder : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Bristleback : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Tusk : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Tusk_Sigil : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Skywrath_Mage : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Abaddon : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Elder_Titan_AncestralSpirit : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Elder_Titan : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Legion_Commander : public CDOTA_BaseNPC_Hero
{
public:
	uint32_t m_unDuelsWon; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Techies : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bLastDeathFromSuicide; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_TechiesMines : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_Techies_Minefield_Sign : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_EmberSpirit : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Earth_Spirit_Stone : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_EarthSpirit : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_AbyssalUnderlord : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Underlord_Portal : public CDOTA_BaseNPC_Building
{
public:
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1880	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dc0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "uint32 m_nArcanaColor"
class CDOTA_Unit_Hero_Terrorblade : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
private:
	[[maybe_unused]] uint8_t __pad1dac[0x4]; // 0x1dac
public:
	CUtlString m_szResponseCriteria; // 0x1db0	
	// MNetworkEnable
	uint32_t m_nArcanaColor; // 0x1db8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Phoenix : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Oracle : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Winter_Wyvern : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_ArcWarden : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nTalkFXIndex; // 0x1da8	
	ParticleIndex_t m_nFXDeath; // 0x1dac	
	ParticleIndex_t m_nTempestFX; // 0x1db0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dd0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "DotaTreeId_t m_nTreeDisguise"
// MNetworkVarNames "DotaTreeId_t m_nPerchedTree"
class CDOTA_Unit_Hero_MonkeyKing : public CDOTA_BaseNPC_Hero
{
public:
	bool mb_MonkeyHasArcana; // 0x1da8	
private:
	[[maybe_unused]] uint8_t __pad1da9[0x3]; // 0x1da9
public:
	// MNetworkEnable
	uint32_t m_nTreeDisguise; // 0x1dac	
	// MNetworkEnable
	uint32_t m_nPerchedTree; // 0x1db0	
	Vector m_vLastPos; // 0x1db4	
	bool m_bIsOnCloud; // 0x1dc0	
private:
	[[maybe_unused]] uint8_t __pad1dc1[0x3]; // 0x1dc1
public:
	float m_fTotalDistOnCloud; // 0x1dc4	
	float m_fTotalDistoffCloud; // 0x1dc8	
	float m_fBackOnCloudThresh; // 0x1dcc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Pangolier : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_DarkWillow : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_DarkWillow_Creature : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Grimstroke : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Grimstroke_InkCreature : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Mars : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Snapfire : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Void_Spirit : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Hoodwink : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nAttackState"
class CDOTA_Unit_Hero_Dawnbreaker : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	int32_t m_nAttackState; // 0x1da8	
	GameTime_t m_flLastAttackAnimAdvanceTime; // 0x1dac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_Marci : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Hero_PrimalBeast : public CDOTA_BaseNPC_Hero
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "EHANDLE m_hDoubleShotTarget"
class CDOTA_Unit_Hero_Muerta : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	CHandle< CBaseEntity > m_hDoubleShotTarget; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Muerta_Revenant : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_Observer_Ward : public CDOTA_BaseNPC_Additive
{
public:
	int32_t m_iDuration; // 0x1778	
	bool m_bPlacedInSpawnBox; // 0x177c	
private:
	[[maybe_unused]] uint8_t __pad177d[0x3]; // 0x177d
public:
	GameTime_t m_flSpawnTime; // 0x1780	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_NPC_Observer_Ward_TrueSight : public CDOTA_NPC_Observer_Ward
{
public:
	int32_t m_iTrueSight; // 0x1788	
	CEntityHandle m_hCasterEntity; // 0x178c	
	CEntityHandle m_hAbilityEntity; // 0x1790	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Roshans_Banner : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Thinker : public CDOTA_BaseNPC
{
public:
	bool m_bSendToAllPlayers; // 0x1778	
	bool m_bSendToClients; // 0x1779	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_Snowman : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_Penguin : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_Dragon : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_CNY_Balloon : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_TI9_Balloon : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_TI9_Drums : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_TI9_Monkey : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Frostivus2018_Snowman : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Frostivus2018_Clinkz_Skeleton_Army : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_SpectralTusk_Tombstone : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_AghsFort_SpectralTusk_Tombstone : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_AghsFort_Creature_DragonKnight : public CDOTA_BaseNPC_Creature
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Aghsfort_Aziyog_Underlord_Portal : public CDOTA_BaseNPC_Additive
{
public:
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1900
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_AghsFort_Creature_DungeonBat : public CDOTA_BaseNPC_Creature
{
public:
	ParticleIndex_t m_nFXAmbient; // 0x18f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_AghsFort_Creature_Batrider : public CDOTA_BaseNPC_Creature
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1888
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Effigy_AghsFort : public CDOTA_BaseNPC_Building
{
public:
	uint32_t m_unStatusEffectIndex; // 0x1880	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18f0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
// MNetworkVarNames "int m_nEncounterType"
// MNetworkVarNames "bool m_bIsEliteEncounter"
// MNetworkVarNames "bool m_bIsAscensionLevelPicker"
// MNetworkVarNames "string_t m_strEncounterName"
// MNetworkVarNames "string_t m_strAscensionAbilities"
// MNetworkVarNames "EHANDLE m_hEffigy"
// MNetworkVarNames "CHandle<CBaseAnimating> m_hRoomGate"
// MNetworkVarNames "bool m_bIsBeingChanneled"
// MNetworkVarNames "float m_flGoalCaptureProgress"
class CDOTA_BaseNPC_AghsFort_Watch_Tower : public CDOTA_BaseNPC_Building
{
private:
	[[maybe_unused]] uint8_t __pad1880[0x10]; // 0x1880
public:
	int32_t m_nOptionNumber; // 0x1890	
	float m_flMovePlayersRadius; // 0x1894	
	CDOTA_BaseNPC_AghsFort_Watch_Tower::ExitDirection_t m_nExitDirection; // 0x1898	
	Vector m_vExitLocation; // 0x189c	
	int32_t m_nPathSelectedID; // 0x18a8	
	// MNetworkEnable
	int32_t m_nEncounterType; // 0x18ac	
	// MNetworkEnable
	bool m_bIsEliteEncounter; // 0x18b0	
	// MNetworkEnable
	bool m_bIsAscensionLevelPicker; // 0x18b1	
private:
	[[maybe_unused]] uint8_t __pad18b2[0x6]; // 0x18b2
public:
	// MNetworkEnable
	CUtlSymbolLarge m_strEncounterName; // 0x18b8	
	// MNetworkEnable
	CUtlSymbolLarge m_strAscensionAbilities; // 0x18c0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEffigy; // 0x18c8	
	int32_t m_nDepth; // 0x18cc	
	CHandle< CDOTA_BaseNPC_Effigy_AghsFort > m_hPedestal; // 0x18d0	
	CHandle< CBaseEntity > m_hParticleSystem; // 0x18d4	
private:
	[[maybe_unused]] uint8_t __pad18d8[0x8]; // 0x18d8
public:
	// MNetworkEnable
	CHandle< CBaseAnimatingActivity > m_hRoomGate; // 0x18e0	
	// MNetworkEnable
	bool m_bIsBeingChanneled; // 0x18e4	
private:
	[[maybe_unused]] uint8_t __pad18e5[0x3]; // 0x18e5
public:
	// MNetworkEnable
	float m_flGoalCaptureProgress; // 0x18e8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_CustomGameAnnouncerAghanim : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1910
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Creature_Jungle_Spirit : public CDOTA_BaseNPC_Creature
{
public:
	int32_t m_iCurrentXP; // 0x18f8	
	float m_fInitialScaleGain; // 0x18fc	
	float m_fScaleGainMultiplierPerLevel; // 0x1900	
	float m_fLastModelScaleGained; // 0x1904	
	bool m_bGainedSecondPlatemail; // 0x1908	
	bool m_bGainedBonusHealth; // 0x1909	
private:
	[[maybe_unused]] uint8_t __pad190a[0x2]; // 0x190a
public:
	ParticleIndex_t m_nAmbientFXIndex; // 0x190c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b0
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_TI10_DiscoBall : public CDOTA_BaseNPC_Additive
{
public:
	int32_t NUM_SOUNDS; // 0x1778	
	ParticleIndex_t m_nFXIndex; // 0x177c	
	CUtlVector< PlayerID_t > m_vecDancers; // 0x1780	
	
	// Static fields:
	static char* &Get_PARTICLE_SPAWN(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_BaseNPC_Seasonal_TI10_DiscoBall")->m_static_fields[0]->m_instance);};
	static char* &Get_PARTICLE_DEATH(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_BaseNPC_Seasonal_TI10_DiscoBall")->m_static_fields[1]->m_instance);};
	static char* &Get_PARTICLE_CHANNEL(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_BaseNPC_Seasonal_TI10_DiscoBall")->m_static_fields[2]->m_instance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_TI10_SoccerBall : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_TI11_Balloon : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Seasonal_TI11_Balloon_Dire : public CDOTA_BaseNPC_Seasonal_TI11_Balloon
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1898
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Diretide_Portal : public CDOTA_BaseNPC_Building
{
public:
	CHandle< CBaseEntity > m_hPartnerPortal; // 0x1880	
	int32_t m_nRuneType; // 0x1884	
	int32_t m_nOriginalTeamNumber; // 0x1888	
	ParticleIndex_t m_nActiveFXIndex; // 0x188c	
	ParticleIndex_t m_nRuneFXIndex; // 0x1890	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Spring2021_DefusalBomb : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Spring2021_MeteorCrashSite : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Spring2021_AbilityBuilding : public CDOTA_BaseNPC_Additive
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Winter2022_CandyBucket : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18f8
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_BaseNPC_Winter2022_FeedableRoshan : public CDOTA_BaseNPC_Creature
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CInfoOfrendaStatue : public CDOTA_BaseNPC_Building
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1780
// Has VTable
// 
// MPulseBindableTarget
// MPulseRegisterTypeInfo
class CDOTA_Unit_Announcer_Killing_Spree : public CDOTA_Unit_Announcer
{
public:
};

