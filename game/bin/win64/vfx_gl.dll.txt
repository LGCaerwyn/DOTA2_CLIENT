0 2&4262
0.0, 1.0
0.000000e+00
00.read.tgid
000123456789912345678991234567899--SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS:;<=>?@ASSSSSSSBCDEFGHIJKLMNOSSSSSSSPQSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSRRRRRRRRRSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
0123456
0123456789
0123456789-+Ee
0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz
0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz
0123456789:H
0123456789ABCDEF0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789ABCDEFabcdef-+Xx
0123456789ABCDEFabcdef-+XxPp
0123456789abcdef0
0123456789abcdefghijklmnopqrstuvwxyz
0123458688888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888887
03256:;89=>@BDFHJ
061110000000Z
08:39:05
08:39:05H
08@HPX`hpx
09C0u6H
09C0uh
0;1;30m
0;1;31m
0;1;32m
0;1;33m
0;1;34m
0;1;35m
0;1;36m
0;1;37m
0;1;40m
0;1;41m
0;1;42m
0;1;43m
0;1;44m
0;1;45m
0;1;46m
0;1;47m
0><[cZUg
0@8z,t
0A9@0s
0A9A0r
0A^A]A
0A_A^A
0A_A^A]A
0CThreadMutex@@QEAA@PEBD@Z
0CUtlBuffer@@QEAA@HHH@Z
0CUtlSymbolTable@@QEAA@HH_N@Z
0H+E(H
0L;l$Pt
0ffffff
1.#INF
1.extractps
1/4 stride is too large
12.and.pi
131022120000Z
147<?ACEGIK
16-bit  literal
16-bit arrays not supported
16-bit hexadecimal literal
16-bit integer literal
16-bit literal
16-bit octal literal
16-bit or 32-bit
16-bit signed integer
16-bit signed integer vector
16-bit unsigned integer
16-bit unsigned integer literal
16-bit unsigned integer vector
16-bit vectors only take vector types
16.sat
160107120000Z
181004000000Z
1:1: Tokens : ( T__18 | T__19 | T__20 | T__21 | T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | BOOLLITERAL | ID | INTEGERLITERAL | HEXINTEGERLITERAL | FLOATLITERAL | COMMENT | WS
1:1: Tokens : ( T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | T__42 | T__43 | T__44 | T__45 | T__46 | T__47 | T__48 | T__49 | T__50 | T__51 | T__52 | T__53 | T__54 | T__55 | T__56 | T__57 | T__58 | T__59 | T__60 | T__61 | T__62 | T__63 | T__64 | T__65 | T__66 | T__67 | T__68 | T__69 | T__70 | T__71 | T__72 | T__73 | T__74 | T__75 | T__76 | T__77 | T__78 | T__79 | T__80 | T__81 | T__82 | T__83 | T__84 | T__85 | T__86 | T__87 | T__88 | T__89 | T__90 | T__91 | T__92 | T__93 | T__94 | T__95 | T__96 | T__97 | T__98 | T__99 | T__100 | T__101 | T__102 | T__103 | T__104 | T__105 | T__106 | T__107 | T__108 | T__109 | T__110 | T__111 | T__112 | T__113 | T__114 | T__115 | T__116 | CONSTANT_REGISTER | PACK_OFFSET | VECTOR_TYPE | MATRIX_TYPE | STATIC | ID | INTEGERLITERAL | FLOATLITERAL | STRINGLITERAL | WS | LINE | PRAGMA | UNKNOWN
1CThreadMutex@@QEAA@XZ
1CUtlSymbolTable@@QEAA@XZ
1tn<2u
2 Entry points cannot share the same name and ExecutionMode
2.brevp
2.combine
2.conv
2.crc32
2.mpyud
2.pd.256
2.ps.256
2.vrcmpys.s1rp
210101000000Z
210108225123Z0
211007120000Z0M1
281022120000Z0r1
2BPD2F0HjJ&L
2GG>!B
2N4d6X:v
2dq.256
2ph.512
2ps.512
2t#H;U8t
310106000000Z0H1
310107120000Z0r1
311110000000Z0e1
32-bit
32-bit signed integer
32-bit signed integer vector
32-bit signed literal
32-bit unsigned integer
32-bit unsigned integer vector
3333333
3333333333333333UUUUUUUUUUUUUUUU
33333333H
33333333L
34567DDDDDDDD89
4 argument intrinsic
4$H;Mpr
4.60 glslang Khronos. 13.3727
4.fastcorner9
4.fastcorner9.not
4.round.r
42.pcmp
49HoKC
4CHcD$0
4Y>fff>fff>fff>fff
4http://crl3.digicert.com/DigiCertAssuredIDRootCA.crl0O
4http://crl3.digicert.com/DigiCertAssuredIDRootCA.crl0P
4http://crl4.digicert.com/DigiCertAssuredIDRootCA.crl0
4t99{4v'3
5 !"55#$%5&55555555555555555'55555555()55555*5+,5-55.5555////0551235555555555555555555555555555554
5555555555555
555555555555555555555
6$P&6*p
6,b.v062b4v668b:v<6>rBZD|BRD
6.mmx.por
600.read.global.size
600.read.local.size
600.read.ngroups
600.read.tidig
64-bit atomics require the Int64Atomics capability
64-bit hexadecimal literal
64-bit integer
64-bit integer literal
64-bit integer vector
64-bit literal
64-bit octal literal
64-bit unsigned integer
64-bit unsigned integer literal
64-bit unsigned integer vector
6@8t$xt
6HkL$(XH
6P82:2
6d8@:@8i
7  !!77777777"#$%&'()*+7777777777777777777777,777-777777./07777771777777777777237777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777456
7.4f (%5.1f
701777723456
7777777777
777777777777777777777777777
7777777777777777777777777777
777777777777777777777777777777777
79:1: element : ( struct_decl | function_definition | variable_definition[ false ] | constant_buffer | type_def | bindless_constant_def | auto_bindless_texture2d_binding | semicolon
7http://cacerts.digicert.com/DigiCertAssuredIDRootCA.crt0
8- or 16-bit loads must be a scalar, vector or matrix type
8- or 16-bit stores must be a scalar, vector or matrix type
8- or 16-bit types can only be used with width-only conversions
8-bit arrays not supported
8-bit signed integer
8-bit signed integer vector
8-bit unsigned integer
8-bit unsigned integer vector
8-bit vectors only take vector types
86.avx.vextractf128
86.avx512
86.avx512.vbroadcast.s
86.xend
86.xtest
8A^A]A
8A_A]A
8A_A^A
8A_A^A]A
8CUtlString@@QEBA_NAEBV0@@Z
8D$0t4H
8H+\$0H
8H;D$`r
8H;L$`r
8I+~0H
8L$XuXH
8L$xuXH
8L9c t
8UUUUU
8\$0tNI
8\$8t(H
8\$8t+H
8aligu
8bindu5f
8bunz8
8flatu f
8geneu%f
8loopt/H
8p,t$3
8q uTH
8refruJf
8s,th3
8s-t#@8s,H
8streuGf
8t$ t4A
8t$HtsL
8w,t\3
8|$Pt2
8|$pt'I
8}htKH
8}itKH
8}ptAA
9)wD9*w@H
93wQ9t$ wKH
9@wQL9q
9Cu,fD9y
9D$4tGH
9D$xuAA
9D$|u6A
9G(uFH
9t$(t0L
9t$x~+L
9wP~.fff
9{4v'3
9|$ tUA
9|$(tUA
A A9@ s
A A9@ u
A A9@ ugM
A A9B sGH
A A9B sYL
A A9C s
A BuiltIn variable (id
A FunctionCall must happen within a function body
A H9C sRH
A H9C8sTL9E
A H;A(H
A block must end with a branch instruction
A function
A function must begin with a label
A module-scope OpVariable with initialization value cannot be marked with the Import Linkage Type
A(H9A t
A(H;A t
A(HcA H
A+L$DA
A-@8q,t
A0A9@0s
A0HcF@H
A0I+A(H
A0IcEPI
A8H98t!H
A8H;PHt
A9Oh~#L
A9Q4~}I
A9\$Pv/I
A9~0vAf
A@8APtMD
A@9APt/H
A@9APtBD
ABCDEFGHIJKLMNOPQRSTUVWXYZ
ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz
ABGR8888
ACCSTRUCTEXT
ACCSTRUCTNV
ACUtlString@@QEBADH@Z
ADD_ASSIGN
AMPERSAND
ANDROID_VULKAN
ANDROID_VULKAN_4_0
AND_ASSIGN
ANISOTROPIC
ANTLR3_EXCEPTION number %d (%08X
ANTLR3_EXCEPTION: %s
APH9AHt&H
API+AHH
ARGB8888
ATAUAVAWH
ATAUAVAWL
ATAUAVH
ATAUAWH
ATAVAWH
ATAVAWL
ATI_DST16
ATI_DST24
ATOMIC_UINT
ATTRIBMAP
ATTRIBUTE
AUAVAWH
AUID3DInclude
AUTDefaultHlslIoResolver@glslang
AUTDefaultIoResolver@glslang
AUTDefaultIoResolverBase@glslang
AUTSmallArrayVector@glslang
AUTextureUpgradeAndSamplerRemovalTransform@glslang
AU_Crt_new_delete@std
AUctype_base@std
AV<lambda_0041fb68ee4e94e99b40bcfb5d0c02b9
AV<lambda_005eeeb76ae2e3a0345b1141ca5e6342
AV<lambda_015065fc38e8a80fa3ebd2d38ff1a97e
AV<lambda_01557f89c525cc44814f417ccef24915
AV<lambda_01ffc428251c6591efb952aeb1f1fe30
AV<lambda_025c65610b12c40407345690b921ac63
AV<lambda_036b0122324b0f501a4f4434e8d9e6f9
AV<lambda_03b94b1c011dcbe9802c1df8e9a33c9d
AV<lambda_0411141248eba77a9c463639a47389bc
AV<lambda_048af14c2b58df19418814a8d27bf2d6
AV<lambda_0503ff8393ee71d69aa5d1d706ab6f8b
AV<lambda_05f9bd4027382ebf40db2bd2119ed3cb
AV<lambda_074d72308da9a6f8de8601f0db7457a9
AV<lambda_0792047c7417a5ff41aaedb49c967ed0
AV<lambda_07f817dbeaf3d9865bacbf61add338cb
AV<lambda_08880ea525711c6e131f3cc167fa098e
AV<lambda_0984ec0b6499bfe7d8ddeb05cdce8d0c
AV<lambda_0a36ee98678f8fb8270987c6fc5dc313
AV<lambda_0ac3814df1aa0a69b33cf6811becd7ad
AV<lambda_0b1f954bda5b68c2102e7d8a05a06fb3
AV<lambda_0c07e5c7eabbcd8231c1a22a360c6d81
AV<lambda_0c1f03016528569fe01b47d765080cfc
AV<lambda_0c3eabeb4e438c0c0e13986942eded5e
AV<lambda_11a5c8746d2be95c7d5f7f525a863fbd
AV<lambda_11d0be362eb8f6bd5a529ce3f1e20a65
AV<lambda_11d94f5d0ff256f6e79732414e9e5a9c
AV<lambda_12eb6798e7067e2c93336b24e0efcfbb
AV<lambda_1366d13c3fb333dec970673db42963a2
AV<lambda_146bb72aa9e3821552a1b07e9752e889
AV<lambda_14cf6640565459f5226e10def4356161
AV<lambda_15928f85956ff9ea9b6b47ca13077fae
AV<lambda_15c54aa77d2eda238710d4d556817868
AV<lambda_15d9da502d5205c549da7422dab750fa
AV<lambda_166301497f3d11811909c1070d9b4271
AV<lambda_1793d408620b089ef41984fa6c6441f9
AV<lambda_17af366d94c7eed8c6675c221adaa855
AV<lambda_18655d8aec938eb5ff62d266c7a387ee
AV<lambda_19af8b2f1a485c112cbf0670da392a4a
AV<lambda_1a19116cc31da7702b1400d4782171fa
AV<lambda_1aa07e6380d6cd1f1a79f740844872d6
AV<lambda_1ac62b890c8265586dd91620ae40c22c
AV<lambda_1ba44d20c2086e8a69084c83a0d2c5f6
AV<lambda_1bbdb9660ae6df668031b5dcebb82ee0
AV<lambda_1c80240b4bcb01d7dbac344a7911e810
AV<lambda_1cdd8f8c81763ac8d21d1d9329a25404
AV<lambda_1d6e34c8fd901911b1428734f48add86
AV<lambda_1e04cbd3d78b67f835e6c4527980b892
AV<lambda_1f0107248d1007b98fb1bc2e829af92b
AV<lambda_1fcb713c9af5c1bca0f480133f294c00
AV<lambda_1ff1259975d47a2b25d36f7f80219776
AV<lambda_20c9c3f64127ff84880d98c344ade221
AV<lambda_20faf938f82734fd864f99b72fd734c6
AV<lambda_2284e156e2d4f6450cea00f55b881502
AV<lambda_22b7c53d205bb0e082c6c45a327eb8a1
AV<lambda_23f9443c09be6465fcc95d5ceb558c09
AV<lambda_24d49e2023121e234443d7934b0ad15e
AV<lambda_252cab0c7cab4dd1b5cdc3bfda1935e8
AV<lambda_258c01d0f042a71f8edc9e11e25e1ad2
AV<lambda_25fca9fd8570c56c8bb6a44415401f25
AV<lambda_264d8c7d6b815425e58554f2ef788d79
AV<lambda_26540fe2da4c07d0acbda1620bfe4b93
AV<lambda_27ab935c328dfac8fad52cfb450e5945
AV<lambda_281d65a66a8167bcdd00ef7cc3d13d49
AV<lambda_28dd41321e1f3d06f939b5eb24c92dd9
AV<lambda_29d4deb5684c254d40f6ffde2e8ba9c4
AV<lambda_29ec1c9eaf1275f3393e110e141fe32b
AV<lambda_2b9c55c142b3aab4657f9db3933b91bf
AV<lambda_2da93385940cf4aed05f679b9bb1155a
AV<lambda_2e145c5c20ec56d1cbb228daa6a55b4c
AV<lambda_2e8e3c8f93933e261bf956436b782a3e
AV<lambda_2e9c004cb7c0f18ea777bd1128413ba4
AV<lambda_302d23ed0309ef191e9bb931824eadd5
AV<lambda_3054a39053a6e39b9efa4e787d0d3c78
AV<lambda_31749762f40e7bedd128225efca1a632
AV<lambda_32279f51d3979f8f19efec8095eeae74
AV<lambda_335158413cc86b24fcf4da81453f8c48
AV<lambda_33eeacd355d10d6e4efdf2874417ba69
AV<lambda_340c6aa19c18458fb3b046edf57a5725
AV<lambda_343eb728bd434940d770b6aab7059d44
AV<lambda_3490bb01f8cd1c756f671c034b3c8e6d
AV<lambda_34b741d09247c474a01a026e22213061
AV<lambda_3661e5d99fba800218ded5d504aa578e
AV<lambda_36c822da39e07217ddda3468d22e7af8
AV<lambda_36e8d35ca455e35cc0873497151b3e10
AV<lambda_36f031ab63ab8369c348433b96d0b293
AV<lambda_370b69eadd70f22054b1c30c1dc51758
AV<lambda_370cfa714bd2c94f87caeac6d78ccecd
AV<lambda_37d5734cce75b6a6e819db22ed23c3e2
AV<lambda_391427bec0e80f65e9c551df35100038
AV<lambda_39574cf7d85bc92ae2815b6579edb83d
AV<lambda_395fd5629772cd97303d8df52416d12e
AV<lambda_39ab6c89a8d28eed07ccfdb91d8058e4
AV<lambda_39c4d82bbfdb69dca75fdeb13b73445d
AV<lambda_3a2d7c6535cbd4a2a51799c921a5b22c
AV<lambda_3b984f729e29659308544199a57c278d
AV<lambda_3bc6303cd10ba7abe2bca0bab51fef8b
AV<lambda_3be5fb318978bac395152b41025a3909
AV<lambda_3cf51cfda149c3dc828837f9aa01a817
AV<lambda_3de472c4302e94c4ca87c45b8a148f78
AV<lambda_3ed65317671f1699a7cbc9bfb880bb3b
AV<lambda_3f9f74a42afb69d2dd77b55075aa932b
AV<lambda_3fe4fdde58ae29958f86749cebc23a65
AV<lambda_406b8d16ceb0d8a0e36cd0c6a0979c6e
AV<lambda_426a1a653046655c06bad2aa3be2003d
AV<lambda_42c63c0fbcbc70b1c017f9ee1d60d24c
AV<lambda_4344e8af90db0d76970e3aecbcdd6c11
AV<lambda_43a3cde53f38fef1fc46f4a0027fd21e
AV<lambda_4482818b4ee06e2bdb585dfce3428ff3
AV<lambda_450bbe64141c37cbe01fb62df1ca6a5c
AV<lambda_4539c2e9e32e41afa363fe8b721f1c26
AV<lambda_45f4b98bd75513c4c19c1401605f5076
AV<lambda_46cae85950cf391bb0310b3419c80a39
AV<lambda_477d6dc9f5db073226e24bf3420e5439
AV<lambda_48199e4802e8dad4b894ff20077fa3cc
AV<lambda_49f1b00118d16c911c3adc68acf66192
AV<lambda_4a49bb9d7a4049809f2bc554c4c3c3e5
AV<lambda_4a7d4bcee56154a7df042c10b0ab4e2d
AV<lambda_4a97af72b33f64336616a1ff479fe7de
AV<lambda_4ac7d3f9b4580f17091aaca25b7bd86f
AV<lambda_4b96a899e70a65189f3474b3906a4b0d
AV<lambda_4bcf1410f105d72114e98eec19f131a8
AV<lambda_4c3c31fd2ae5d1c8c5a132736299a42a
AV<lambda_4df0f3992474302eace6a0f68ea42ff8
AV<lambda_4e893b93ba0c732f397aa29d8cb4fef1
AV<lambda_4f2e67568647ab1e91cbd998cbbd49f1
AV<lambda_5192d63a1f8e031015e198d34e1a0679
AV<lambda_5294bb9c2a27a9c9120e3564363f54a6
AV<lambda_5505b0c227f3f17589850f91a3c5e0e6
AV<lambda_56df0e886630de6c02b8cefc63f5f680
AV<lambda_572c846aa8fc9a1db78eb96c3570a512
AV<lambda_57b6c069a0b1176117ea70ec7c2db1c7
AV<lambda_5821416b0a0bfcab2bfc9554b085b5ce
AV<lambda_5856eeedb0b735cfe2c8d4ce569bca76
AV<lambda_58e17a8df28e758e38d499b59645603f
AV<lambda_591f9e7e28c5ed6d56592f8425b23639
AV<lambda_5a9befa26e0425846056061cbcae7bb3
AV<lambda_5ae77915c9f5a5e775fbeedeca03b605
AV<lambda_5bc762e90a021a1da765756da98dd9a6
AV<lambda_5c69c7837308a99573bb50dfee2d77c5
AV<lambda_5cae213f4b4b684b178d100122bf5238
AV<lambda_5ce5a918b9e8c1f01b6892417fdd3926
AV<lambda_5e6555a23e945f592cd287c62a336a7a
AV<lambda_5e83132cdc141320e0a2e1db4c594745
AV<lambda_5ea627c122ca41b71bb9501e08f0e010
AV<lambda_5f4ea400e0ddbd6755db6901cc98d660
AV<lambda_5fa3b6280f053d5825d8cbbd090a7170
AV<lambda_60a344ece223c9d2b9f0eb34acd70c85
AV<lambda_61a0f6aa08a0763e12d577ab926918fc
AV<lambda_63df440b627fe3b66920486c6a4a4f03
AV<lambda_64a30b5564200f0f7df1c0e7f27cb9b9
AV<lambda_65cf23f6c5d75970d8e858261ef648f6
AV<lambda_65e11572eef760ffa13543987c63c9ba
AV<lambda_65ebe68ab2fc7142c88e731308e6b990
AV<lambda_661abbfbc0170f20ffc70e7331b8e395
AV<lambda_663dc75d0a964d5d3debcb1c0212fc9b
AV<lambda_666ffc38f5069668c1ebbb5522ee58cc
AV<lambda_6722a7ce5d359a6c81b89f4fa4d3d1ae
AV<lambda_67eb9fe6ca3b839be674bc81c7f775de
AV<lambda_6890f404a8bc7ffca5ee86855138d0ad
AV<lambda_6908682808afd58985c7c7f4846ef48a
AV<lambda_698c9b49652ae0a423efde13c1cce4ac
AV<lambda_69cf2512ec1d31cf461ac23e263cea3e
AV<lambda_69d7ab275c0505abc74e155822109b90
AV<lambda_69f44845bb24918cf4f0b193e6016e32
AV<lambda_6a2a17af546787c90201cfb5aff929f6
AV<lambda_6aa6c7a0590002bad55a66d467f3d0a2
AV<lambda_6b50337b8c58248655d9ea6386811a20
AV<lambda_6c7e3d741f275ee56da0787630eef4bc
AV<lambda_6cab6c809bd25f59c8e21fe569e5d5bd
AV<lambda_6dd3e462556884c4c36baac77c37de23
AV<lambda_6e7c6c6a76339b1bc7a3f9fd8a8364cc
AV<lambda_6f294285e33e7c263c1752ff23cabb55
AV<lambda_6f57a0b4562e0e24aeae17185d9fe66a
AV<lambda_6f6f473667d01dc0d5bff5875e386015
AV<lambda_71715a81194b36ac84f4ca6de376ca3d
AV<lambda_71887acaa7d0963cb9e43553865ab963
AV<lambda_72004a64182b4cb0dcbab34f65f5fea6
AV<lambda_7288a49a0f2c79497acd2a78ee12497a
AV<lambda_72beae9e6848c4b6d0fa97d3ea5c8957
AV<lambda_736311db28f9dc546d2697742bbb82a2
AV<lambda_7387cec2996bdc169a1be3e1ee3016a0
AV<lambda_7553b861845ee7ea9120930bdc59901d
AV<lambda_761b09a1410b9ca815259f56a5861dfe
AV<lambda_765578e4360a5f16c4ef5fe2ee0d0f15
AV<lambda_76e973c424fc95aa266f7f84b38c3de2
AV<lambda_7748a820c6c5d65273fc47e1264a5dda
AV<lambda_77c673e4a3f31836b25db14c560c99c8
AV<lambda_79206e1860d58b029463efe128bffecb
AV<lambda_7992c64b7c8bba8096b295e144d58f5d
AV<lambda_7b3ed906ce7535b4707a40eb018088cf
AV<lambda_7bd8837d05ad10c21a5a9e82ebb97ca1
AV<lambda_7c058af260749f55e808e3e4e293cd70
AV<lambda_7c2e89e83bd5aeed7ded72e022e8f41e
AV<lambda_7c75f19d35dc15769e9d10f113aa6a27
AV<lambda_7d62b5eae68b1ec07b84993c7238bda7
AV<lambda_7fe36572584116c0ac7f4991ca16428b
AV<lambda_80257c77e92ef476f83e64741f0c14b8
AV<lambda_8057ddb776e79c03ccae526c1686898c
AV<lambda_80f283824906adee3fbd244ad8015033
AV<lambda_8111232f052d29434fde72e8dfd21b99
AV<lambda_8143fa827ac1e59ed9245a9ca5eebc51
AV<lambda_828bbacc1ebe948d43e63e697cad089f
AV<lambda_829c6792a011d6912cee5ac4c3ce7717
AV<lambda_86c9649f8c8297721ca9213437c6b8e0
AV<lambda_8823ce76b6a799c1d3a47fdbf2402f00
AV<lambda_88f30c427b800ef434c44e7e260c2ed2
AV<lambda_8a3d91ffa146476cc3d4ad6c0d1627ef
AV<lambda_8a411c2dccfb22ffbb9765a32cd423fd
AV<lambda_8b3bd07082e685ed39dd8313736aa419
AV<lambda_8bea274c30fee273fa7c52ee649dcdf5
AV<lambda_8c335f050ce4ae0f7d64fc361919c995
AV<lambda_8cb1225ab70e46ffb2468e5e374f5af7
AV<lambda_8ccecbb146563a3f79363307e88a1269
AV<lambda_8e7a7d5c2721dcd9a525913659a11afd
AV<lambda_8fa54220398a04403ed3eaf7da2cff09
AV<lambda_8faeede5a32d41666aaf6de4a2644ccd
AV<lambda_91fe58472eb9a634015b0501dd2062eb
AV<lambda_924a05e004da9b6e7bf01385df9c5614
AV<lambda_92c6995e04e4182d4a37acc76c82cc03
AV<lambda_92fb7e2a0d1dcbeb524d7967da973923
AV<lambda_92fbbba0715d09845caa0401598bcc69
AV<lambda_93cbb5d8f5ca36107e29a49f83b027e6
AV<lambda_93eca927d10293567694d3d90c8f4d45
AV<lambda_956b2d023e429dafd24c05ff68b4ab70
AV<lambda_95cdecee5dd691b821ca85f9eed26f35
AV<lambda_963319738e0d8c2ada194af552add1e1
AV<lambda_96966bfc3a798f94bb03799279b1745b
AV<lambda_97c10da097dc246e45540f12187a6a9d
AV<lambda_97c31520b716ada2abcfd96063dc812e
AV<lambda_97cc2bdeb5178f9c4679415e577da06b
AV<lambda_9901ce9041bfd69c5a7b289175f33fea
AV<lambda_995834119c8cd4d77d33c0453322c501
AV<lambda_999ad67b4551f8eba12c9acc66459e0e
AV<lambda_9a3ca1f6e94f303fa5412f2b7c1a55fa
AV<lambda_9bd94e3be3ff3938f8c9a479299bcc39
AV<lambda_9c5438f8ef0af4f713f2e1adf78f7d97
AV<lambda_9d4d115a05a33ef1a04962e67662efa9
AV<lambda_9d7b874c18a31c2cfd1a053e340f8caa
AV<lambda_9e5f7ef39f67170e4bc18b123f4a11fa
AV<lambda_a1c13600da47b7f3b868360a4728392e
AV<lambda_a1f9fd54ad97dbb89411f34fc679d30a
AV<lambda_a2bd8d6171d9d4eb196fe1fe40af23f3
AV<lambda_a2c49d1c64f313e0f5442d36615f0970
AV<lambda_a2d719a2bdfc26725c8e7a7bc0e668da
AV<lambda_a3def30addfb8ebd91f1bc66cd243870
AV<lambda_a4e706d0e89efdc5fdaa5887fa0a91d6
AV<lambda_a60e08c5d02613acba7fdc37cb2156bc
AV<lambda_a625787163a827b34adc9d37af4f5015
AV<lambda_a7a69e29b15b881aa7799535edaf727e
AV<lambda_a8958dfd16014aa445e5f04fcd6953dc
AV<lambda_a915c5d073e0111eb2309b60a5820b1c
AV<lambda_a9f83ffd4858fb9a05ae5cbc0782b60e
AV<lambda_aa57f881619cc834a9e62a17a56f2494
AV<lambda_aa7a07c9f0fca2dbf25755e77c13c866
AV<lambda_aacace3f73c62fbe87e01066d2b0e2ce
AV<lambda_ab11369c517d6e192ae9b1a07a9aa6e0
AV<lambda_ae34c7888503b2594012e04b23aec424
AV<lambda_af449614433aa70afa350c4f8b290ca9
AV<lambda_aff6e64fca31da474ce73a43cf40ad58
AV<lambda_b0c044f38cf6f9d3862c005272a46f30
AV<lambda_b137a0a97c239f0430aec971e5c0ea91
AV<lambda_b1af3e9ff74265705db9a499aa89b030
AV<lambda_b24c75b79e2cb76f89ff7304e786770b
AV<lambda_b259b4d5852fe1044349fc3b57fb2e74
AV<lambda_b323a2d7b81211458311c1671aa9b377
AV<lambda_b38b5fed723e3a481a8a559425c2f9d4
AV<lambda_b3e332b63f865ca53a0afe1c246aa1a1
AV<lambda_b3f496b3dc3f623dd7a360e5c1230f8c
AV<lambda_b475553a12d831cfa4f6231633905074
AV<lambda_b50334cc2458ca7055080ef34dc7b2f3
AV<lambda_b522294996e2c97f9922f8403868f6f7
AV<lambda_b525a7f4ea3217679bd3bcdc0af29188
AV<lambda_b61727b5629d3f2904f12a33f98ec2aa
AV<lambda_b77debf4353e319f811a60c0589594d4
AV<lambda_b7ecfd73dd291c3ad9ea0c46e181100f
AV<lambda_b882db485ff73473a18c021ab2b4fbd8
AV<lambda_b8e5f9812517cc12478cfb449cddd667
AV<lambda_b959129f0e707228b9e39dd6316eda84
AV<lambda_b9a7139a531c234a2114fac15cb2d328
AV<lambda_baea9d5bd3f3a596b0e3fbb492b9979e
AV<lambda_bbf9dee55213fd1547b1a8fa978bbf50
AV<lambda_bd198f7fb4b0b5fed316654840c62ef8
AV<lambda_bd2a45e93e51cdfa5e01615e871f699c
AV<lambda_bd4eef13987434eafc3bc93c0f827c39
AV<lambda_bdd9827a4a336eebb62ca7865bdc6d6f
AV<lambda_be15efc33977506608918793282cae07
AV<lambda_be46c0af90919a18f1986b5d9b53c923
AV<lambda_be8cb7d76c4b5ac16ee557374337e850
AV<lambda_bf06c54d012bedab0ffa1b1268c4bb87
AV<lambda_bfa6743f813d01fd766448699be8d5c7
AV<lambda_c0adafca6dfa34dbfaa80dcb457cba5d
AV<lambda_c0e83da0bf2772c0cb8c9d27ec15bb8b
AV<lambda_c1eea946de7690343fec7889d992a49b
AV<lambda_c3fd8ca953c0ec7468a5a0896df61274
AV<lambda_c40ff12d2014098041b8be2c0bbc4532
AV<lambda_c59a645df007c94cc90294ba17d8f048
AV<lambda_c5a2c82551ee2e952a336a23544e62a3
AV<lambda_c5d422957f2254d09f47ca8b231c70fc
AV<lambda_c7551c33ae43a92d887e33fa674a6dc8
AV<lambda_c7d9a1b8c56508266254604218bc5653
AV<lambda_c8320ee4f3749878690a96a8764b3afd
AV<lambda_c8d2e88f20f452ea14e9a89d63bbf206
AV<lambda_c922c10d00445d1864098cace0215add
AV<lambda_c94942080aa4bef67bdd1e3c2b57d6fa
AV<lambda_c9a760d9d66599a613a2b4f43eacf297
AV<lambda_c9f5e5e230b89541e4c3f04fe20863a8
AV<lambda_c9ffe3c5132425f5e36d75f7b0f5e84b
AV<lambda_cad2f68fd17da95f214394ac88507ed5
AV<lambda_ccb926d4f798d5c1a35b7df7717f17bf
AV<lambda_ccc039fdba89ee80ed616bcb25ec1db9
AV<lambda_ccf10aa3b24b48413ed4e4b0ab0017ef
AV<lambda_cd3e2fc2020a3a0e7095808ea5ea1075
AV<lambda_cee96e50ebd2ccfe9b4a886374be4c3c
AV<lambda_cf9e64f24727109d988a70c75ad28b66
AV<lambda_cfe3c26e7b26e76e1ae4ac10215de243
AV<lambda_d25df1932b73922ec64c87a0e6d3cee0
AV<lambda_d2d4ac52f7b8ee246c9bda7fffcb792b
AV<lambda_d30a3c7d8d071fd8ad14e562a7390e3d
AV<lambda_d334adbb68f0761d9e7e5099ebd4d4f1
AV<lambda_d38c58a4ba11b0ddfb6efdff1d25afb8
AV<lambda_d4282bc1c30d60c850c997232050960d
AV<lambda_d4a7ce02f9c2f161b5646e6126c0551b
AV<lambda_d4c13c055296cc3f0f372cc07a6dd62a
AV<lambda_d5c56552988783e8b213ea27e871a8fd
AV<lambda_d5d7f49464857b8b60dadf077bf6b3a7
AV<lambda_d5ed91c87dab26dead301cd56f036ea2
AV<lambda_d61d9be295fb9564c197038b008b38d1
AV<lambda_d770db2c5fd97f5c542706a63b1662cb
AV<lambda_d7a06087342bc567669ac6231c659b2a
AV<lambda_d89ad3194067ede466c4159c3900d662
AV<lambda_d8fc16f5e31991cf01dada3d69129c65
AV<lambda_d95e8ea7a5c8a74ad93a2787f49b033a
AV<lambda_d9a3bfb820364132dc9ffebe479a9270
AV<lambda_d9a5d604227e05e492b00dd4eaaa04af
AV<lambda_da7376a42906a93590e09d6a61289d2a
AV<lambda_da7d4a16552d6f9048cd90879bda9ee2
AV<lambda_daa3bf1adbed79e9ffeaa4f9b2225c4d
AV<lambda_db8b3257dda4a6180359ce7af5b30405
AV<lambda_db902b727bd780ead84e0e90531c1c5d
AV<lambda_dc41538dbe6f41001e4442372a856620
AV<lambda_dcc99e0db608dc23fc72a9e2a32a50ce
AV<lambda_dd48145dd094d0a2e4613abaaef187df
AV<lambda_dd58bc0557ade0dd039347b4d5d00323
AV<lambda_ddfb8dd8e12c207ce8054f49a32eeef8
AV<lambda_de6177374a2314098f09b7e5a5efffda
AV<lambda_de9c0a1cbcb489fcc524fb8a3ea9837b
AV<lambda_dfaa4191901394cf26fa2dee6298becd
AV<lambda_e062b110bed152260c6c726d0a432c5e
AV<lambda_e10e5dfc0326c6cedc071c928005a8a6
AV<lambda_e196e437f6451e8ffd5040ea9d27bd06
AV<lambda_e20b6704397722a502a585b94ebe94ca
AV<lambda_e21f653c67f262e33e69d132bc515dd6
AV<lambda_e2f496aaa00a260d65b837f3686f5ccc
AV<lambda_e4150481766c3b9349868818b5d7b81e
AV<lambda_e4793e745f3700801fd363df18e8bf2d
AV<lambda_e495fe2bdc48d4f9e5cdc8f3aa07eba6
AV<lambda_e593c26e18c9aa9a737d03e07d304668
AV<lambda_e5c164bfbf7bd5eda6a38a84fa0b257a
AV<lambda_e77e8ca692428c3a9a3ef66acafb54a1
AV<lambda_e7974570d860cc660b52a6d36f3fcbe0
AV<lambda_e9b2fa05b69ad318456ccd0881aaf04d
AV<lambda_ea697300c1d54a202584d06b39193430
AV<lambda_edad81809d35c1ffb9024a0de04f1cfb
AV<lambda_eecda3ae199787ad46dbd92499aca35d
AV<lambda_ef3e14b66c1beb77699f812282f54486
AV<lambda_ef48beab8c131a24ad2d7ce89f824dd2
AV<lambda_f069030dab28c5d7b0da7c60889effce
AV<lambda_f085be6385708b574f76b75238f496ad
AV<lambda_f0af9f27e92146485984da27da20a867
AV<lambda_f0f42880250271acb3ee41afb7594f31
AV<lambda_f10ab3304ff1ffe3fd1b809e45980764
AV<lambda_f10cac8edf511b155032559300ad3a67
AV<lambda_f22b123cc92db1a759a8cdd451463f54
AV<lambda_f26ff537cf3e5ac2c268f26cf2368f66
AV<lambda_f4642c729abc98c1e08ad1de1f2deff0
AV<lambda_f4c9513d8d9c94a9c2c41b15c2ee133d
AV<lambda_f5181f0eaa2c2959f98ed2b1487251f8
AV<lambda_f597edafc43fea5d73d207e4a4023fbc
AV<lambda_f88e22d98dadda0f2976808fedf0ae91
AV<lambda_fa07fca1029f4ecef374e9b13837a8ce
AV<lambda_fa38b2d7e58f528a5f52adbe07c250a1
AV<lambda_fa466d67223e613cb686feabf274a8b4
AV<lambda_fb25124ae9463b307af0d321ef3486da
AV<lambda_fc655a200dbe702bdb2fc308487271b6
AV<lambda_fe3aa2a41614c51afa978d6d360dd9e7
AV<lambda_feb28a8fc1d136f28c08dbfc9b18f561
AV<lambda_febccfbcc58b95efa7e80f2f3c87dcf4
AV<lambda_febfd70b75a718cae1f41a0ddf7af2d9
AV<lambda_fed47b6adffccb47b9ead2f3bf022bf8
AV<lambda_ffd3c9ba70f65cd0e524b13530faa5fa
AV?$IntrusiveList@VInstruction@opt@spvtools@@@utils@spvtools
AV?$IntrusiveNodeBase@VInstruction@opt@spvtools@@@utils@spvtools
AV?$SmallVector@I$01@utils@spvtools
AV?$ValueMapCallbackVH@PEBVValue@llvm@@VWeakVH@2@U?$ValueMapConfig@PEBVValue@llvm@@@2@@llvm
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@AEBVDecoration@56@AEBVInstruction@56@11@ZPEAV3456@AEBV856@AEBV956@AEBV956@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAPEBDAEAW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0HL@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0HM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IB@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IN@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IP@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0JF@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0JJ@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0KP@$$CBDAEBW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std
AV?$_Binder@U_Unforced@std@@P8DefUseManager@analysis@opt@spvtools@@EAAXPEAVInstruction@56@@ZPEAV3456@AEBU?$_Ph@$00@2@@std
AV?$_Func_base@II@std
AV?$_Func_base@PEBV?$vector@PEAUDominatorTreeNode@opt@spvtools@@V?$allocator@PEAUDominatorTreeNode@opt@spvtools@@@std@@@std@@PEBUDominatorTreeNode@opt@spvtools@@@std
AV?$_Func_base@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@std@@PEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_base@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@std@@PEBVBasicBlock@val@spvtools@@@std
AV?$_Func_base@PEBVBasicBlock@val@spvtools@@PEBV123@@std
AV?$_Func_base@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_base@PEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@std
AV?$_Func_base@PEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEBV1234@PEAVConstantManager@234@@std
AV?$_Func_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std
AV?$_Func_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std
AV?$_Func_base@W4PropStatus@SSAPropagator@opt@spvtools@@PEAVInstruction@34@PEAPEAVBasicBlock@34@@std
AV?$_Func_base@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_base@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_base@XAEAI@std
AV?$_Func_base@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_base@XAEBVInstruction@opt@spvtools@@@std
AV?$_Func_base@XI@std
AV?$_Func_base@XPEAI@std
AV?$_Func_base@XPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_base@XPEAVBlock@spv@@W4ReachReason@2@PEAV12@@std
AV?$_Func_base@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_base@XPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_base@XPEAVTIntermTyped@glslang@@PEAV12@PEAV12@PEAV12@_N@std
AV?$_Func_base@XPEBI@std
AV?$_Func_base@XPEBUDominatorTreeNode@opt@spvtools@@@std
AV?$_Func_base@XPEBUDominatorTreeNode@opt@spvtools@@PEBU123@@std
AV?$_Func_base@XPEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_base@XPEBVBasicBlock@opt@spvtools@@PEBV123@@std
AV?$_Func_base@XPEBVBasicBlock@val@spvtools@@@std
AV?$_Func_base@XPEBVBasicBlock@val@spvtools@@PEBV123@@std
AV?$_Func_base@XPEBVInstruction@opt@spvtools@@@std
AV?$_Func_base@XW4Extension@spvtools@@@std
AV?$_Func_base@XW4SpvCapability_@@@std
AV?$_Func_base@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std
AV?$_Func_base@_NAEAVTType@glslang@@AEAV12@@std
AV?$_Func_base@_NAEBVInstruction@opt@spvtools@@@std
AV?$_Func_base@_NAEBVTType@glslang@@AEBV12@AEBV12@@std
AV?$_Func_base@_NAEBVTType@glslang@@AEBV12@W4TOperator@2@H@std
AV?$_Func_base@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@23@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_base@_NI@std
AV?$_Func_base@_NPEAI@std
AV?$_Func_base@_NPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_base@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_base@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_base@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_base@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_base@_NPEAVInstruction@opt@spvtools@@PEAIPEAIPEAI@std
AV?$_Func_base@_NPEBI@std
AV?$_Func_base@_NPEBVInstruction@opt@spvtools@@@std
AV?$_Func_base@_NW4Op@spv@@I@std
AV?$_Func_base@_NW4OpenCLDebugInfo100Instructions@@@std
AV?$_Func_base@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@P6A?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@ZV12@I@std
AV?$_Func_impl_no_alloc@P6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@ZPEBV1234@PEAV534@PEAV634@AEBV78@@std
AV?$_Func_impl_no_alloc@P6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@1PEAVConstantManager@234@@ZPEBV1234@PEBV5234@PEBV1234@PEBV1234@PEAV6234@@std
AV?$_Func_impl_no_alloc@P6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZXAEBV12@@std
AV?$_Func_impl_no_alloc@P6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@Z_NPEAV123@PEAV423@AEBV56@@std
AV?$_Func_impl_no_alloc@V<lambda_0041fb68ee4e94e99b40bcfb5d0c02b9>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_005eeeb76ae2e3a0345b1141ca5e6342>@@XPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_015065fc38e8a80fa3ebd2d38ff1a97e>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_01557f89c525cc44814f417ccef24915>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_01ffc428251c6591efb952aeb1f1fe30>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_025c65610b12c40407345690b921ac63>@@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_036b0122324b0f501a4f4434e8d9e6f9>@@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_03b94b1c011dcbe9802c1df8e9a33c9d>@@XPEAVBlock@spv@@W4ReachReason@3@PEAV23@@std
AV?$_Func_impl_no_alloc@V<lambda_0411141248eba77a9c463639a47389bc>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_048af14c2b58df19418814a8d27bf2d6>@@XPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_0503ff8393ee71d69aa5d1d706ab6f8b>@@XPEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_05f9bd4027382ebf40db2bd2119ed3cb>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_074d72308da9a6f8de8601f0db7457a9>@@_NAEBVTType@glslang@@AEBV23@AEBV23@@std
AV?$_Func_impl_no_alloc@V<lambda_0792047c7417a5ff41aaedb49c967ed0>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_07f817dbeaf3d9865bacbf61add338cb>@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std
AV?$_Func_impl_no_alloc@V<lambda_08880ea525711c6e131f3cc167fa098e>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_0984ec0b6499bfe7d8ddeb05cdce8d0c>@@XPEBUDominatorTreeNode@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_0a36ee98678f8fb8270987c6fc5dc313>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_0ac3814df1aa0a69b33cf6811becd7ad>@@XPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_0b1f954bda5b68c2102e7d8a05a06fb3>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_0c07e5c7eabbcd8231c1a22a360c6d81>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_0c1f03016528569fe01b47d765080cfc>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_0c3eabeb4e438c0c0e13986942eded5e>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_11a5c8746d2be95c7d5f7f525a863fbd>@@XPEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_11d0be362eb8f6bd5a529ce3f1e20a65>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_11d94f5d0ff256f6e79732414e9e5a9c>@@XPEBI@std
AV?$_Func_impl_no_alloc@V<lambda_12eb6798e7067e2c93336b24e0efcfbb>@@XPEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_1366d13c3fb333dec970673db42963a2>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_146bb72aa9e3821552a1b07e9752e889>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_14cf6640565459f5226e10def4356161>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_15928f85956ff9ea9b6b47ca13077fae>@@XW4SpvCapability_@@@std
AV?$_Func_impl_no_alloc@V<lambda_15c54aa77d2eda238710d4d556817868>@@PEBVBasicBlock@val@spvtools@@PEBV234@@std
AV?$_Func_impl_no_alloc@V<lambda_15d9da502d5205c549da7422dab750fa>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_166301497f3d11811909c1070d9b4271>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_1793d408620b089ef41984fa6c6441f9>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_17af366d94c7eed8c6675c221adaa855>@@XPEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_18655d8aec938eb5ff62d266c7a387ee>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_19af8b2f1a485c112cbf0670da392a4a>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_1a19116cc31da7702b1400d4782171fa>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_1aa07e6380d6cd1f1a79f740844872d6>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_1ac62b890c8265586dd91620ae40c22c>@@_NAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_1ba44d20c2086e8a69084c83a0d2c5f6>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_1bbdb9660ae6df668031b5dcebb82ee0>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_1c80240b4bcb01d7dbac344a7911e810>@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std
AV?$_Func_impl_no_alloc@V<lambda_1cdd8f8c81763ac8d21d1d9329a25404>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_1d6e34c8fd901911b1428734f48add86>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_1e04cbd3d78b67f835e6c4527980b892>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_1f0107248d1007b98fb1bc2e829af92b>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_1fcb713c9af5c1bca0f480133f294c00>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_1ff1259975d47a2b25d36f7f80219776>@@_NW4OpenCLDebugInfo100Instructions@@@std
AV?$_Func_impl_no_alloc@V<lambda_20c9c3f64127ff84880d98c344ade221>@@_NAEBVTType@glslang@@AEBV23@W4TOperator@3@H@std
AV?$_Func_impl_no_alloc@V<lambda_20faf938f82734fd864f99b72fd734c6>@@XPEBVBasicBlock@val@spvtools@@PEBV234@@std
AV?$_Func_impl_no_alloc@V<lambda_2284e156e2d4f6450cea00f55b881502>@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@34@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_22b7c53d205bb0e082c6c45a327eb8a1>@@XPEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_23f9443c09be6465fcc95d5ceb558c09>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_24d49e2023121e234443d7934b0ad15e>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_252cab0c7cab4dd1b5cdc3bfda1935e8>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_258c01d0f042a71f8edc9e11e25e1ad2>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_25fca9fd8570c56c8bb6a44415401f25>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_264d8c7d6b815425e58554f2ef788d79>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_26540fe2da4c07d0acbda1620bfe4b93>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_27ab935c328dfac8fad52cfb450e5945>@@XPEAVTIntermTyped@glslang@@PEAV23@PEAV23@PEAV23@_N@std
AV?$_Func_impl_no_alloc@V<lambda_281d65a66a8167bcdd00ef7cc3d13d49>@@_NW4OpenCLDebugInfo100Instructions@@@std
AV?$_Func_impl_no_alloc@V<lambda_28dd41321e1f3d06f939b5eb24c92dd9>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_29d4deb5684c254d40f6ffde2e8ba9c4>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_29ec1c9eaf1275f3393e110e141fe32b>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_2b9c55c142b3aab4657f9db3933b91bf>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_2da93385940cf4aed05f679b9bb1155a>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_2e145c5c20ec56d1cbb228daa6a55b4c>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_2e8e3c8f93933e261bf956436b782a3e>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_2e9c004cb7c0f18ea777bd1128413ba4>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_302d23ed0309ef191e9bb931824eadd5>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_3054a39053a6e39b9efa4e787d0d3c78>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_31749762f40e7bedd128225efca1a632>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_32279f51d3979f8f19efec8095eeae74>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_335158413cc86b24fcf4da81453f8c48>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_33eeacd355d10d6e4efdf2874417ba69>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_340c6aa19c18458fb3b046edf57a5725>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_343eb728bd434940d770b6aab7059d44>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_3490bb01f8cd1c756f671c034b3c8e6d>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_34b741d09247c474a01a026e22213061>@@_NPEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_3661e5d99fba800218ded5d504aa578e>@@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_36c822da39e07217ddda3468d22e7af8>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_36e8d35ca455e35cc0873497151b3e10>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_36f031ab63ab8369c348433b96d0b293>@@XPEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_370b69eadd70f22054b1c30c1dc51758>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_370cfa714bd2c94f87caeac6d78ccecd>@@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_37d5734cce75b6a6e819db22ed23c3e2>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_391427bec0e80f65e9c551df35100038>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_39574cf7d85bc92ae2815b6579edb83d>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_395fd5629772cd97303d8df52416d12e>@@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_39ab6c89a8d28eed07ccfdb91d8058e4>@@XW4SpvCapability_@@@std
AV?$_Func_impl_no_alloc@V<lambda_39c4d82bbfdb69dca75fdeb13b73445d>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_3a2d7c6535cbd4a2a51799c921a5b22c>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_3b984f729e29659308544199a57c278d>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_3bc6303cd10ba7abe2bca0bab51fef8b>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_3be5fb318978bac395152b41025a3909>@@XPEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_3cf51cfda149c3dc828837f9aa01a817>@@_NAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_3de472c4302e94c4ca87c45b8a148f78>@@_NPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_3ed65317671f1699a7cbc9bfb880bb3b>@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@34@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_3f9f74a42afb69d2dd77b55075aa932b>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_3fe4fdde58ae29958f86749cebc23a65>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_406b8d16ceb0d8a0e36cd0c6a0979c6e>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_426a1a653046655c06bad2aa3be2003d>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_42c63c0fbcbc70b1c017f9ee1d60d24c>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4344e8af90db0d76970e3aecbcdd6c11>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_43a3cde53f38fef1fc46f4a0027fd21e>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_4482818b4ee06e2bdb585dfce3428ff3>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_450bbe64141c37cbe01fb62df1ca6a5c>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_4539c2e9e32e41afa363fe8b721f1c26>@@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_45f4b98bd75513c4c19c1401605f5076>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_46cae85950cf391bb0310b3419c80a39>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_477d6dc9f5db073226e24bf3420e5439>@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std
AV?$_Func_impl_no_alloc@V<lambda_48199e4802e8dad4b894ff20077fa3cc>@@XPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_49f1b00118d16c911c3adc68acf66192>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4a49bb9d7a4049809f2bc554c4c3c3e5>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_4a7d4bcee56154a7df042c10b0ab4e2d>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4a97af72b33f64336616a1ff479fe7de>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4ac7d3f9b4580f17091aaca25b7bd86f>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_4b96a899e70a65189f3474b3906a4b0d>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4bcf1410f105d72114e98eec19f131a8>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4c3c31fd2ae5d1c8c5a132736299a42a>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4df0f3992474302eace6a0f68ea42ff8>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_4e893b93ba0c732f397aa29d8cb4fef1>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_4f2e67568647ab1e91cbd998cbbd49f1>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_5192d63a1f8e031015e198d34e1a0679>@@_NW4OpenCLDebugInfo100Instructions@@@std
AV?$_Func_impl_no_alloc@V<lambda_5294bb9c2a27a9c9120e3564363f54a6>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_5505b0c227f3f17589850f91a3c5e0e6>@@_NW4OpenCLDebugInfo100Instructions@@@std
AV?$_Func_impl_no_alloc@V<lambda_56df0e886630de6c02b8cefc63f5f680>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_572c846aa8fc9a1db78eb96c3570a512>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_57b6c069a0b1176117ea70ec7c2db1c7>@@_NAEBVTType@glslang@@AEBV23@W4TOperator@3@H@std
AV?$_Func_impl_no_alloc@V<lambda_5821416b0a0bfcab2bfc9554b085b5ce>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_5856eeedb0b735cfe2c8d4ce569bca76>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_58e17a8df28e758e38d499b59645603f>@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@34@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_591f9e7e28c5ed6d56592f8425b23639>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_5a9befa26e0425846056061cbcae7bb3>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_5ae77915c9f5a5e775fbeedeca03b605>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_5bc762e90a021a1da765756da98dd9a6>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_5c69c7837308a99573bb50dfee2d77c5>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_5cae213f4b4b684b178d100122bf5238>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_5ce5a918b9e8c1f01b6892417fdd3926>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_5e6555a23e945f592cd287c62a336a7a>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_5e83132cdc141320e0a2e1db4c594745>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_5ea627c122ca41b71bb9501e08f0e010>@@_NPEAVInstruction@opt@spvtools@@PEAIPEAIPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_5f4ea400e0ddbd6755db6901cc98d660>@@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@std@@PEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_5fa3b6280f053d5825d8cbbd090a7170>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_60a344ece223c9d2b9f0eb34acd70c85>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_61a0f6aa08a0763e12d577ab926918fc>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_63df440b627fe3b66920486c6a4a4f03>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_64a30b5564200f0f7df1c0e7f27cb9b9>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_65cf23f6c5d75970d8e858261ef648f6>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_65e11572eef760ffa13543987c63c9ba>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_65ebe68ab2fc7142c88e731308e6b990>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_661abbfbc0170f20ffc70e7331b8e395>@@PEBV?$vector@PEAUDominatorTreeNode@opt@spvtools@@V?$allocator@PEAUDominatorTreeNode@opt@spvtools@@@std@@@std@@PEBUDominatorTreeNode@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_663dc75d0a964d5d3debcb1c0212fc9b>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_666ffc38f5069668c1ebbb5522ee58cc>@@XPEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_6722a7ce5d359a6c81b89f4fa4d3d1ae>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_67eb9fe6ca3b839be674bc81c7f775de>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_6890f404a8bc7ffca5ee86855138d0ad>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_6908682808afd58985c7c7f4846ef48a>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_698c9b49652ae0a423efde13c1cce4ac>@@_NAEBVTType@glslang@@AEBV23@AEBV23@@std
AV?$_Func_impl_no_alloc@V<lambda_69cf2512ec1d31cf461ac23e263cea3e>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_69d7ab275c0505abc74e155822109b90>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_69f44845bb24918cf4f0b193e6016e32>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_6a2a17af546787c90201cfb5aff929f6>@@XPEBVBasicBlock@opt@spvtools@@PEBV234@@std
AV?$_Func_impl_no_alloc@V<lambda_6aa6c7a0590002bad55a66d467f3d0a2>@@XPEBUDominatorTreeNode@opt@spvtools@@PEBU234@@std
AV?$_Func_impl_no_alloc@V<lambda_6b50337b8c58248655d9ea6386811a20>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_6c7e3d741f275ee56da0787630eef4bc>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_6cab6c809bd25f59c8e21fe569e5d5bd>@@_NPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_6dd3e462556884c4c36baac77c37de23>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_6e7c6c6a76339b1bc7a3f9fd8a8364cc>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_6f294285e33e7c263c1752ff23cabb55>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_6f57a0b4562e0e24aeae17185d9fe66a>@@XPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_6f6f473667d01dc0d5bff5875e386015>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_71715a81194b36ac84f4ca6de376ca3d>@@_NPEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_71887acaa7d0963cb9e43553865ab963>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_72004a64182b4cb0dcbab34f65f5fea6>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_7288a49a0f2c79497acd2a78ee12497a>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_72beae9e6848c4b6d0fa97d3ea5c8957>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_736311db28f9dc546d2697742bbb82a2>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_7387cec2996bdc169a1be3e1ee3016a0>@@_NAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_7553b861845ee7ea9120930bdc59901d>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_761b09a1410b9ca815259f56a5861dfe>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_765578e4360a5f16c4ef5fe2ee0d0f15>@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@std@@PEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_76e973c424fc95aa266f7f84b38c3de2>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_7748a820c6c5d65273fc47e1264a5dda>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_77c673e4a3f31836b25db14c560c99c8>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_79206e1860d58b029463efe128bffecb>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_7992c64b7c8bba8096b295e144d58f5d>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_7b3ed906ce7535b4707a40eb018088cf>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_7bd8837d05ad10c21a5a9e82ebb97ca1>@@XPEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_7c058af260749f55e808e3e4e293cd70>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_7c2e89e83bd5aeed7ded72e022e8f41e>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_7c75f19d35dc15769e9d10f113aa6a27>@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@std@@PEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_7d62b5eae68b1ec07b84993c7238bda7>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_7fe36572584116c0ac7f4991ca16428b>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_80257c77e92ef476f83e64741f0c14b8>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_8057ddb776e79c03ccae526c1686898c>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_80f283824906adee3fbd244ad8015033>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_8111232f052d29434fde72e8dfd21b99>@@XPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_8143fa827ac1e59ed9245a9ca5eebc51>@@XPEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_828bbacc1ebe948d43e63e697cad089f>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_829c6792a011d6912cee5ac4c3ce7717>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_86c9649f8c8297721ca9213437c6b8e0>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_8823ce76b6a799c1d3a47fdbf2402f00>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_88f30c427b800ef434c44e7e260c2ed2>@@XW4Extension@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_8a3d91ffa146476cc3d4ad6c0d1627ef>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_8a411c2dccfb22ffbb9765a32cd423fd>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_8b3bd07082e685ed39dd8313736aa419>@@_NPEBI@std
AV?$_Func_impl_no_alloc@V<lambda_8bea274c30fee273fa7c52ee649dcdf5>@@_NPEBI@std
AV?$_Func_impl_no_alloc@V<lambda_8c335f050ce4ae0f7d64fc361919c995>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_8cb1225ab70e46ffb2468e5e374f5af7>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_8ccecbb146563a3f79363307e88a1269>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_8e7a7d5c2721dcd9a525913659a11afd>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_8fa54220398a04403ed3eaf7da2cff09>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_8faeede5a32d41666aaf6de4a2644ccd>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_91fe58472eb9a634015b0501dd2062eb>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_924a05e004da9b6e7bf01385df9c5614>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_92c6995e04e4182d4a37acc76c82cc03>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_92fb7e2a0d1dcbeb524d7967da973923>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_92fbbba0715d09845caa0401598bcc69>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_93cbb5d8f5ca36107e29a49f83b027e6>@@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@std@@PEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_93eca927d10293567694d3d90c8f4d45>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_956b2d023e429dafd24c05ff68b4ab70>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_95cdecee5dd691b821ca85f9eed26f35>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_963319738e0d8c2ada194af552add1e1>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_96966bfc3a798f94bb03799279b1745b>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_97c10da097dc246e45540f12187a6a9d>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_97c31520b716ada2abcfd96063dc812e>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_97cc2bdeb5178f9c4679415e577da06b>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_9901ce9041bfd69c5a7b289175f33fea>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_995834119c8cd4d77d33c0453322c501>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_999ad67b4551f8eba12c9acc66459e0e>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_9a3ca1f6e94f303fa5412f2b7c1a55fa>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_9bd94e3be3ff3938f8c9a479299bcc39>@@_NAEBVTType@glslang@@AEBV23@AEBV23@@std
AV?$_Func_impl_no_alloc@V<lambda_9c5438f8ef0af4f713f2e1adf78f7d97>@@XAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_9d4d115a05a33ef1a04962e67662efa9>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_9d7b874c18a31c2cfd1a053e340f8caa>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_9e5f7ef39f67170e4bc18b123f4a11fa>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_a1c13600da47b7f3b868360a4728392e>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_a1f9fd54ad97dbb89411f34fc679d30a>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_a2bd8d6171d9d4eb196fe1fe40af23f3>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_a2c49d1c64f313e0f5442d36615f0970>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_a2d719a2bdfc26725c8e7a7bc0e668da>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_a3def30addfb8ebd91f1bc66cd243870>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_a4e706d0e89efdc5fdaa5887fa0a91d6>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_a60e08c5d02613acba7fdc37cb2156bc>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_a625787163a827b34adc9d37af4f5015>@@XW4SpvCapability_@@@std
AV?$_Func_impl_no_alloc@V<lambda_a7a69e29b15b881aa7799535edaf727e>@@XPEAVBlock@spv@@W4ReachReason@3@PEAV23@@std
AV?$_Func_impl_no_alloc@V<lambda_a8958dfd16014aa445e5f04fcd6953dc>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_a915c5d073e0111eb2309b60a5820b1c>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_a9f83ffd4858fb9a05ae5cbc0782b60e>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_aa57f881619cc834a9e62a17a56f2494>@@W4PropStatus@SSAPropagator@opt@spvtools@@PEAVInstruction@45@PEAPEAVBasicBlock@45@@std
AV?$_Func_impl_no_alloc@V<lambda_aa7a07c9f0fca2dbf25755e77c13c866>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_aacace3f73c62fbe87e01066d2b0e2ce>@@XPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_ab11369c517d6e192ae9b1a07a9aa6e0>@@XAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_ae34c7888503b2594012e04b23aec424>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_af449614433aa70afa350c4f8b290ca9>@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@34@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_aff6e64fca31da474ce73a43cf40ad58>@@_NAEAVTType@glslang@@AEAV23@@std
AV?$_Func_impl_no_alloc@V<lambda_b0c044f38cf6f9d3862c005272a46f30>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_b137a0a97c239f0430aec971e5c0ea91>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_b1af3e9ff74265705db9a499aa89b030>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_b24c75b79e2cb76f89ff7304e786770b>@@XPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_b259b4d5852fe1044349fc3b57fb2e74>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_b323a2d7b81211458311c1671aa9b377>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_b38b5fed723e3a481a8a559425c2f9d4>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_b3e332b63f865ca53a0afe1c246aa1a1>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_b3f496b3dc3f623dd7a360e5c1230f8c>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_b475553a12d831cfa4f6231633905074>@@_NPEBI@std
AV?$_Func_impl_no_alloc@V<lambda_b50334cc2458ca7055080ef34dc7b2f3>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_b522294996e2c97f9922f8403868f6f7>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_b525a7f4ea3217679bd3bcdc0af29188>@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@std@@PEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_b61727b5629d3f2904f12a33f98ec2aa>@@_NPEAVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_b77debf4353e319f811a60c0589594d4>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_b7ecfd73dd291c3ad9ea0c46e181100f>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_b882db485ff73473a18c021ab2b4fbd8>@@_NAEBVTType@glslang@@AEBV23@W4TOperator@3@H@std
AV?$_Func_impl_no_alloc@V<lambda_b8e5f9812517cc12478cfb449cddd667>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_b959129f0e707228b9e39dd6316eda84>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_b9a7139a531c234a2114fac15cb2d328>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_baea9d5bd3f3a596b0e3fbb492b9979e>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_bbf9dee55213fd1547b1a8fa978bbf50>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_bd198f7fb4b0b5fed316654840c62ef8>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_bd2a45e93e51cdfa5e01615e871f699c>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_bd4eef13987434eafc3bc93c0f827c39>@@XPEBVBasicBlock@opt@spvtools@@PEBV234@@std
AV?$_Func_impl_no_alloc@V<lambda_bdd9827a4a336eebb62ca7865bdc6d6f>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_be15efc33977506608918793282cae07>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_be46c0af90919a18f1986b5d9b53c923>@@XPEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_be8cb7d76c4b5ac16ee557374337e850>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_bf06c54d012bedab0ffa1b1268c4bb87>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_bfa6743f813d01fd766448699be8d5c7>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_c0adafca6dfa34dbfaa80dcb457cba5d>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_c0e83da0bf2772c0cb8c9d27ec15bb8b>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_c1eea946de7690343fec7889d992a49b>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_c3fd8ca953c0ec7468a5a0896df61274>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_c40ff12d2014098041b8be2c0bbc4532>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_c59a645df007c94cc90294ba17d8f048>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_c5a2c82551ee2e952a336a23544e62a3>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_c5d422957f2254d09f47ca8b231c70fc>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_c7551c33ae43a92d887e33fa674a6dc8>@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std
AV?$_Func_impl_no_alloc@V<lambda_c7d9a1b8c56508266254604218bc5653>@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std
AV?$_Func_impl_no_alloc@V<lambda_c8320ee4f3749878690a96a8764b3afd>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_c8d2e88f20f452ea14e9a89d63bbf206>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_c922c10d00445d1864098cace0215add>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_c94942080aa4bef67bdd1e3c2b57d6fa>@@XPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_c9a760d9d66599a613a2b4f43eacf297>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_c9f5e5e230b89541e4c3f04fe20863a8>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_c9ffe3c5132425f5e36d75f7b0f5e84b>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_cad2f68fd17da95f214394ac88507ed5>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_ccb926d4f798d5c1a35b7df7717f17bf>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_ccc039fdba89ee80ed616bcb25ec1db9>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_ccf10aa3b24b48413ed4e4b0ab0017ef>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_cd3e2fc2020a3a0e7095808ea5ea1075>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_cee96e50ebd2ccfe9b4a886374be4c3c>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_cf9e64f24727109d988a70c75ad28b66>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_cfe3c26e7b26e76e1ae4ac10215de243>@@XPEBVBasicBlock@val@spvtools@@PEBV234@@std
AV?$_Func_impl_no_alloc@V<lambda_d25df1932b73922ec64c87a0e6d3cee0>@@_NPEAVInstruction@opt@spvtools@@PEAIPEAIPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_d2d4ac52f7b8ee246c9bda7fffcb792b>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_d30a3c7d8d071fd8ad14e562a7390e3d>@@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@std@@PEBVBasicBlock@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_d334adbb68f0761d9e7e5099ebd4d4f1>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_d38c58a4ba11b0ddfb6efdff1d25afb8>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_d4282bc1c30d60c850c997232050960d>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_d4a7ce02f9c2f161b5646e6126c0551b>@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@45@PEAVInstruction@45@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_d4c13c055296cc3f0f372cc07a6dd62a>@@XPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_d5c56552988783e8b213ea27e871a8fd>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_d5d7f49464857b8b60dadf077bf6b3a7>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_d5ed91c87dab26dead301cd56f036ea2>@@_NPEBI@std
AV?$_Func_impl_no_alloc@V<lambda_d61d9be295fb9564c197038b008b38d1>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_d770db2c5fd97f5c542706a63b1662cb>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_d7a06087342bc567669ac6231c659b2a>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_d89ad3194067ede466c4159c3900d662>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_d8fc16f5e31991cf01dada3d69129c65>@@_NAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_d95e8ea7a5c8a74ad93a2787f49b033a>@@II@std
AV?$_Func_impl_no_alloc@V<lambda_d9a3bfb820364132dc9ffebe479a9270>@@XPEBVBasicBlock@val@spvtools@@PEBV234@@std
AV?$_Func_impl_no_alloc@V<lambda_d9a5d604227e05e492b00dd4eaaa04af>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_da7376a42906a93590e09d6a61289d2a>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_da7d4a16552d6f9048cd90879bda9ee2>@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_daa3bf1adbed79e9ffeaa4f9b2225c4d>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_db8b3257dda4a6180359ce7af5b30405>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_db902b727bd780ead84e0e90531c1c5d>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_dc41538dbe6f41001e4442372a856620>@@XPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_dcc99e0db608dc23fc72a9e2a32a50ce>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_dd48145dd094d0a2e4613abaaef187df>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_dd58bc0557ade0dd039347b4d5d00323>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_ddfb8dd8e12c207ce8054f49a32eeef8>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_de6177374a2314098f09b7e5a5efffda>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_de9c0a1cbcb489fcc524fb8a3ea9837b>@@XPEBUDominatorTreeNode@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_dfaa4191901394cf26fa2dee6298becd>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_e062b110bed152260c6c726d0a432c5e>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_e10e5dfc0326c6cedc071c928005a8a6>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_e196e437f6451e8ffd5040ea9d27bd06>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_e20b6704397722a502a585b94ebe94ca>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_e21f653c67f262e33e69d132bc515dd6>@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std
AV?$_Func_impl_no_alloc@V<lambda_e2f496aaa00a260d65b837f3686f5ccc>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_e4150481766c3b9349868818b5d7b81e>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_e4793e745f3700801fd363df18e8bf2d>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_e495fe2bdc48d4f9e5cdc8f3aa07eba6>@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@std@@PEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_e593c26e18c9aa9a737d03e07d304668>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_e5c164bfbf7bd5eda6a38a84fa0b257a>@@XAEAI@std
AV?$_Func_impl_no_alloc@V<lambda_e77e8ca692428c3a9a3ef66acafb54a1>@@_NW4OpenCLDebugInfo100Instructions@@@std
AV?$_Func_impl_no_alloc@V<lambda_e7974570d860cc660b52a6d36f3fcbe0>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_e9b2fa05b69ad318456ccd0881aaf04d>@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_ea697300c1d54a202584d06b39193430>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_edad81809d35c1ffb9024a0de04f1cfb>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_eecda3ae199787ad46dbd92499aca35d>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_ef3e14b66c1beb77699f812282f54486>@@_NPEAVFunction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_ef48beab8c131a24ad2d7ce89f824dd2>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_f069030dab28c5d7b0da7c60889effce>@@XW4SpvCapability_@@@std
AV?$_Func_impl_no_alloc@V<lambda_f085be6385708b574f76b75238f496ad>@@_NPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_f0af9f27e92146485984da27da20a867>@@_NW4OpenCLDebugInfo100Instructions@@@std
AV?$_Func_impl_no_alloc@V<lambda_f0f42880250271acb3ee41afb7594f31>@@_NW4Op@spv@@I@std
AV?$_Func_impl_no_alloc@V<lambda_f10ab3304ff1ffe3fd1b809e45980764>@@XAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_f10cac8edf511b155032559300ad3a67>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_f22b123cc92db1a759a8cdd451463f54>@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std
AV?$_Func_impl_no_alloc@V<lambda_f26ff537cf3e5ac2c268f26cf2368f66>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_f4642c729abc98c1e08ad1de1f2deff0>@@_NI@std
AV?$_Func_impl_no_alloc@V<lambda_f4c9513d8d9c94a9c2c41b15c2ee133d>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_f5181f0eaa2c2959f98ed2b1487251f8>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_f597edafc43fea5d73d207e4a4023fbc>@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_f88e22d98dadda0f2976808fedf0ae91>@@XPEBI@std
AV?$_Func_impl_no_alloc@V<lambda_fa07fca1029f4ecef374e9b13837a8ce>@@XI@std
AV?$_Func_impl_no_alloc@V<lambda_fa38b2d7e58f528a5f52adbe07c250a1>@@XPEAVInstruction@opt@spvtools@@I@std
AV?$_Func_impl_no_alloc@V<lambda_fa466d67223e613cb686feabf274a8b4>@@PEBVConstant@analysis@opt@spvtools@@PEBVType@345@PEBV2345@PEBV2345@PEAVConstantManager@345@@std
AV?$_Func_impl_no_alloc@V<lambda_fb25124ae9463b307af0d321ef3486da>@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_fc655a200dbe702bdb2fc308487271b6>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std
AV?$_Func_impl_no_alloc@V<lambda_fe3aa2a41614c51afa978d6d360dd9e7>@@_NPEAI@std
AV?$_Func_impl_no_alloc@V<lambda_feb28a8fc1d136f28c08dbfc9b18f561>@@XPEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_febccfbcc58b95efa7e80f2f3c87dcf4>@@II@std
AV?$_Func_impl_no_alloc@V<lambda_febfd70b75a718cae1f41a0ddf7af2d9>@@XAEBVInstruction@opt@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_fed47b6adffccb47b9ead2f3bf022bf8>@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@std@@PEBVBasicBlock@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V<lambda_ffd3c9ba70f65cd0e524b13530faa5fa>@@PEBVBasicBlock@val@spvtools@@PEBV234@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@AEBVDecoration@56@AEBVInstruction@56@11@ZPEAV3456@AEBV856@AEBV956@AEBV956@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAPEBDAEAW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0HL@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0HM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IB@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IN@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0IP@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0JF@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0JJ@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZPEAV3456@AEAY0KP@$$CBDAEBW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std
AV?$_Func_impl_no_alloc@V?$_Binder@U_Unforced@std@@P8DefUseManager@analysis@opt@spvtools@@EAAXPEAVInstruction@56@@ZPEAV3456@AEBU?$_Ph@$00@2@@std@@XPEAVInstruction@opt@spvtools@@@std
AV?$_Iosb@H@std
AV?$_Node_class@DV?$regex_traits@D@std@@@std
AV?$_Node_str@D@std
AV?$basic_filebuf@DU?$char_traits@D@std@@@std
AV?$basic_ios@DU?$char_traits@D@std@@@std
AV?$basic_iostream@DU?$char_traits@D@std@@@std
AV?$basic_istream@DU?$char_traits@D@std@@@std
AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$basic_ostream@DU?$char_traits@D@std@@@std
AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$basic_streambuf@DU?$char_traits@D@std@@@std
AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std
AV?$codecvt@DDU_Mbstatet@@@std
AV?$collate@D@std
AV?$ctype@D@std
AV?$ilist_half_node@VInstruction@llvm@@@llvm
AV?$ilist_node@VInstruction@llvm@@@llvm
AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std
AV?$numpunct@D@std
AVAccelerationStructureNV@analysis@opt@spvtools
AVAggressiveDCEPass@opt@spvtools
AVArray@analysis@opt@spvtools
AVArrayConstant@analysis@opt@spvtools
AVAssignment
AVBackEnd@gla
AVBackEndPointer@gla_llvm
AVBackEndTranslator@gla
AVBlock@spv
AVBlockMergePass@opt@spvtools
AVBool@analysis@opt@spvtools
AVBoolConstant@analysis@opt@spvtools
AVBottomTranslator@?A0xba436a1f
AVBuilder@spv
AVCCPPass@opt@spvtools
AVCExpressionParserCallback
AVCFGCleanupPass@opt@spvtools
AVCFakeSamplerShaderParamBuilder
AVCHlslParser
AVCShaderParamBuilder
AVCStreamRewriter
AVCUtlStackMachineBuilder
AVCVfxContextMgrGL
AVCVfxD3dInclude
AVCVfxEntrypointsGL
AVCVfxGL
AVCVfxShaderFile
AVCVfxShaderFileVulkan
AVCVfxShaderReparserGL
AVCVfxShaderValidatorDXC
AVCVfxShaderValidatorGL
AVCVfxShaderValidatorGLslang
AVCVfxStackMachineBuilder
AVCallInst@llvm
AVCallbackVH@llvm
AVCanonicalizeCFG@?A0x18fa78c3
AVCanonicalizeInsts@?A0xd0304466
AVCmpInst@llvm
AVCoalesceInserts@?A0x05f7874d
AVCompositeConstant@analysis@opt@spvtools
AVConstant@analysis@opt@spvtools
AVConstantFoldingRules@opt@spvtools
AVConvertToHalfPass@opt@spvtools
AVCooperativeMatrixNV@analysis@opt@spvtools
AVCopyPropagateArrays@opt@spvtools
AVDataLayout@llvm
AVDeadBranchElimPass@opt@spvtools
AVDeadInsertElimPass@opt@spvtools
AVDecomposeInsts@?A0x0e38dab4
AVDeviceEvent@analysis@opt@spvtools
AVEarlyReturnElim@?A0x916bcef6
AVEliminateDeadFunctionsPass@opt@spvtools
AVEliminateDeadMembersPass@opt@spvtools
AVEvent@analysis@opt@spvtools
AVExtractValueInst@llvm
AVFCmpInst@llvm
AVFlattenCondAssn@?A0xba42c427
AVFloat@analysis@opt@spvtools
AVFloatConstant@analysis@opt@spvtools
AVFoldingRules@opt@spvtools
AVForbidIncluder@TShader@glslang
AVForwardPointer@analysis@opt@spvtools
AVFunction@analysis@opt@spvtools
AVFunction@spv
AVFunctionPass@llvm
AVGatherInsts@?A0xccc0023f
AVGetElementPtrInst@llvm
AVGlslBackEnd
AVGlslManager@gla
AVGlslTarget@gla
AVGlslTranslator@gla
AVHlslGrammar@glslang
AVHlslParseContext@glslang
AVHlslScanContext@glslang
AVHlslTokenStream@glslang
AVICmpInst@llvm
AVIExpressionShaderVariableCallback
AVIHlslParserCallbacks
AVIStreamRewriter
AVIVfx
AVIVfxShaderValidator
AVIdentifyStructures@gla_llvm
AVIfConversion@opt@spvtools
AVImage@analysis@opt@spvtools
AVImmutablePass@llvm
AVIncluder@TShader@glslang
AVInlineExhaustivePass@opt@spvtools
AVInlinePass@opt@spvtools
AVInsertValueInst@llvm
AVInstruction@llvm
AVInstruction@opt@spvtools
AVInstruction@spv
AVInstructionList@opt@spvtools
AVIntConstant@analysis@opt@spvtools
AVInteger@analysis@opt@spvtools
AVIntrinsicCombine@?A0x544e1657
AVLocalAccessChainConvertPass@opt@spvtools
AVLocalRedundancyEliminationPass@opt@spvtools
AVLocalSingleBlockLoadStoreElimPass@opt@spvtools
AVLocalSingleStoreElimPass@opt@spvtools
AVManager@gla
AVMatrix@analysis@opt@spvtools
AVMatrixConstant@analysis@opt@spvtools
AVMemPass@opt@spvtools
AVMergeReturnPass@opt@spvtools
AVModule@spv
AVModulePass@llvm
AVNamedBarrier@analysis@opt@spvtools
AVNullConstant@analysis@opt@spvtools
AVOpaque@analysis@opt@spvtools
AVPHINode@llvm
AVPass@llvm
AVPass@opt@spvtools
AVPipe@analysis@opt@spvtools
AVPipeStorage@analysis@opt@spvtools
AVPointer@analysis@opt@spvtools
AVPrivateManager@gla
AVPrivateToLocalPass@opt@spvtools
AVProcessLinesPass@opt@spvtools
AVQueue@analysis@opt@spvtools
AVRayQueryProvisionalKHR@analysis@opt@spvtools
AVRedundancyEliminationPass@opt@spvtools
AVRelaxFloatOpsPass@opt@spvtools
AVReserveId@analysis@opt@spvtools
AVRuntimeArray@analysis@opt@spvtools
AVSECantCompute@opt@spvtools
AVSENode@opt@spvtools
AVSSARewritePass@opt@spvtools
AVSampledImage@analysis@opt@spvtools
AVSampler@analysis@opt@spvtools
AVScalarConstant@analysis@opt@spvtools
AVScalarReplacementPass@opt@spvtools
AVScalarize@?A0x787a8456
AVSelectInst@llvm
AVSimplificationPass@opt@spvtools
AVStruct@analysis@opt@spvtools
AVStructConstant@analysis@opt@spvtools
AVTAnonMember@glslang
AVTBuiltInIdTraverser@glslang
AVTBuiltInParseables@glslang
AVTBuiltInParseablesHlsl@glslang
AVTBuiltIns@glslang
AVTCompiler
AVTConstTraverser@glslang
AVTConstUnionArray@glslang
AVTDeferredCompiler@glslang
AVTFinalLinkTraverser@?1??finalCheck@TIntermediate@glslang@@QEAAXAEAVTInfoSink@@_N@Z
AVTFunction@glslang
AVTGlslangToSpvTraverser@?A0x310b7db5
AVTGlslangToTopTraverser
AVTIndexTraverser@glslang
AVTInductiveTraverser@glslang
AVTInputScanner@glslang
AVTIntermAggregate@glslang
AVTIntermBinary@glslang
AVTIntermBranch@glslang
AVTIntermConstantUnion@glslang
AVTIntermLoop@glslang
AVTIntermMethod@glslang
AVTIntermNode
AVTIntermOperator@glslang
AVTIntermSelection@glslang
AVTIntermSwitch@glslang
AVTIntermSymbol@glslang
AVTIntermTraverser@glslang
AVTIntermTyped@glslang
AVTIntermUnary@glslang
AVTIoMapResolver@glslang
AVTIoMapper@glslang
AVTLiveTraverser@glslang
AVTNoContractionAssigneeCheckingTraverser@?A0x80dbd912
AVTNoContractionPropagator@?A0x80dbd912
AVTOutputTraverser@glslang
AVTParseContext@glslang
AVTParseContextBase@glslang
AVTParseVersions@glslang
AVTPpContext@glslang
AVTPrecisionManager@glslang
AVTProgram@glslang
AVTReflection@glslang
AVTReflectionTraverser@glslang
AVTRemapIdTraverser@glslang
AVTScanContext@glslang
AVTShHandleBase
AVTShader@glslang
AVTSymbol@glslang
AVTSymbolDefinitionCollectingTraverser@?A0x80dbd912
AVTType@glslang
AVTUserIdTraverser@glslang
AVTVarGatherTraverser@glslang
AVTVarSetTraverser@glslang
AVTVariable@glslang
AVTokenizableIncludeFile@TPpContext@glslang
AVType@analysis@opt@spvtools
AVUnaryInstruction@llvm
AVUser@llvm
AVValue@llvm
AVValueHandleBase@llvm
AVVector@analysis@opt@spvtools
AVVectorConstant@analysis@opt@spvtools
AVVectorDCE@opt@spvtools
AVVoid@analysis@opt@spvtools
AVWrapOpKill@opt@spvtools
AV_Facet_base@std
AV_Iostream_error_category2@std
AV_Locimp@locale@std
AV_Node_assert@std
AV_Node_back@std
AV_Node_base@std
AV_Node_capture@std
AV_Node_end_group@std
AV_Node_end_rep@std
AV_Node_endif@std
AV_Node_if@std
AV_Node_rep@std
AV_Root_node@std
AV_System_error@std
AVbad_alloc@std
AVbad_array_new_length@std
AVbad_cast@std
AVbad_exception@std
AVbad_function_call@std
AVcodecvt_base@std
AVerror_category@std
AVexception@std
AVfacet@locale@std
AVfailure@ios_base@std
AVios_base@std
AVlength_error@std
AVlogic_error@std
AVout_of_range@std
AVregex_error@std
AVruntime_error@std
AVspirvbin_base_t@spv
AVspirvbin_t@spv
AVsystem_error@std
AVtInput@TPpContext@glslang
AVtMacroInput@TPpContext@glslang
AVtMarkerInput@TPpContext@glslang
AVtStringInput@TPpContext@glslang
AVtTokenInput@TPpContext@glslang
AVtUngotTokenInput@TPpContext@glslang
AVtZeroInput@TPpContext@glslang
AVtype_info
AXE8xXt
AXH;A`t
AXH;A`u
A_A^A]A
AbsISubINTEL
AbsUSubINTEL
Absolute value
AccelerationS
AccessChain
According to the
According to the Vulkan spec BuiltIn
According to the Vulkan spec BuiltIn HelperInvocation variable needs to be a bool scalar
According to the Vulkan spec BuiltIn InvocationId variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn PatchVertices variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn PointCoord variable needs to be a 2-component 32-bit float vector
According to the Vulkan spec BuiltIn PointSize variable needs to be a 32-bit float scalar
According to the Vulkan spec BuiltIn Position variable needs to be a 4-component 32-bit float vector
According to the Vulkan spec BuiltIn PrimitiveId variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn SampleId variable needs to be a 32-bit int scalar
According to the Vulkan spec BuiltIn SampleMask variable needs to be a 32-bit int array
According to the Vulkan spec BuiltIn SamplePosition variable needs to be a 2-component 32-bit float vector
According to the Vulkan spec BuiltIn TessCoord variable needs to be a 3-component 32-bit float vector
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 2-component 32-bit float array
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 4-component 32-bit float array
According to the WebGPU spec BuiltIn LocalInvocationIndex variable needs to be a 32-bit int
According to the WebGPU spec BuiltIn Position variable needs to be a 4-component 32-bit float vector
Acquire
AcquireRelease
AcquireSRWLockExclusive
AcquireSRWLockShared
Actual
Actually dude, we didn't seem to be expecting anything here, or at least
AddNullTermination@CUtlBuffer@@IEAAXXZ
AddString@CUtlSymbolTable@@QEAA?AVCUtlSymbol@@PEBD@Z
Adding cached shader: %s
Address
Address Space in Bottom IR
AddressU
AddressV
AddressW
Addresses
Addressing model must be Logical for WebGPU environment
Addressing model must be Physical32 or Physical64
Aggressive Dead Code Elimination
Alias Analysis
Aliased
AliasedPointer
AliasedPointerEXT
Aligned
Alignment
AlignmentId
All OpSampledImage instructions must be in the same block in which their Result <id> are consumed. OpSampledImage Result Type <id
All OpVariable instructions in a function must be the first instructions in the first block
All variables in the following storage classes must have an
AllMemoryBarrier
AllMemoryBarrierWithGroupSync
Allocating a variable containing a 16-bit element in
Allocating a variable containing a 8-bit element in
AllowRecip
Allows loops to be partially unrolled until -unroll-threshold loop size is reached
AlphaTestEnable
AlphaTestFunc
AlphaTestRef
AlphaToCoverageEnable
Analyses
Android SM 4.0 (VULKAN
Annotation %s doesn't have any values. Ignoring annotation
AnyHitKHR
AnyHitNV
AoS other than size 4 or 1 in middle end
ApH9A@t
AppPolicyGetProcessTerminationMethod
Append@CUtlString@@QEAAXPEBD@Z
AppendFormatV@CBufferString@@QEAAHPEBDPEAD@Z
AppendStructuredBuffer
Applying map
AreFileApisANSI
Arg list too long
Argument 0
Argument 1
Arguments
Array Stride
Array access is out of bounds, array size is
Array member
ArrayLength
ArrayStride
Arrayed
Arrays not supported in texture template types
AssociatedSampler
At least one shader must specify a layout(max_primitives = value
At least one shader must specify a layout(max_vertices = value
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify an output layout(vertices
AtomicAdd
AtomicAnd
AtomicCompSwap
AtomicCompareExchange
AtomicCompareExchangeWeak
AtomicCounter
AtomicCounterAdd
AtomicCounterAnd
AtomicCounterCompSwap
AtomicCounterDecrement
AtomicCounterExchange
AtomicCounterIncrement
AtomicCounterMax
AtomicCounterMemory
AtomicCounterMin
AtomicCounterOr
AtomicCounterSubtract
AtomicCounterXor
AtomicExchange
AtomicFlagClear
AtomicFlagTestAndSet
AtomicIAdd
AtomicIDecrement
AtomicIIncrement
AtomicISub
AtomicLoad
AtomicMax
AtomicMin
AtomicOr
AtomicSMax
AtomicSMin
AtomicStorage
AtomicStorageOps
AtomicStore
AtomicType
AtomicUMax
AtomicUMin
AtomicXor
Attachment Index
Attempted to get underlying data type via member index for non-struct type
Attribute
AuthentiH
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
B A9A s
B H9CXs\H
B(H9B u
B(I9A(u
B-@8j,t
B09C0svI
B0;A0r#w$H
B0A9@0r
B0A9A0r#H
B0A;B0r?w
B0A;BXu
B0DdBj
B0E+B(t
B49C4u
B88C8uW
B8H;NHt
B98C9uN
B<9C<uF
B@9C@u
BC?>6t9
BD9CDu6H
BEGIN_UNIFORMBINDINGS
BGR888_BLUESCREEN
BGRA1010102
BGRA4444
BGRA5551
BGRA8888
BGRA8888_LINEAR
BGRX5551
BGRX8888
BGRX8888_LINEAR
BHH9C uKH
BILINEAR
BINORMAL
BI_Append
BI_CalculateLevelOfDetail
BI_CalculateLevelOfDetailUnclamped
BI_Consume
BI_DecrementCounter
BI_Gather
BI_GatherAlpha
BI_GatherBlue
BI_GatherCmp
BI_GatherCmpAlpha
BI_GatherCmpBlue
BI_GatherCmpGreen
BI_GatherCmpRed
BI_GatherGreen
BI_GatherRed
BI_GetDimensions
BI_GetSamplePosition
BI_IncrementCounter
BI_InterlockedAdd
BI_InterlockedAnd
BI_InterlockedCompareExchange
BI_InterlockedCompareStore
BI_InterlockedExchange
BI_InterlockedMax
BI_InterlockedMin
BI_InterlockedOr
BI_InterlockedXor
BI_Load
BI_Load2
BI_Load3
BI_Load4
BI_RestartStrip
BI_Sample
BI_SampleBias
BI_SampleCmp
BI_SampleCmpLevelZero
BI_SampleGrad
BI_SampleLevel
BI_Store
BI_Store2
BI_Store3
BI_Store4
BI_SubpassLoad
BI_SubpassLoadMS
BLENDINDICES
BLENDWEIGHT
BLEND_FACTOR
BOOLCONSTANT
BOOLLITERAL
Back-edges
BackColor
BackSecondaryColor
BackStencilDepthFailOp
BackStencilFailOp
BackStencilFunc
BackStencilPassOp
Bad BackEndPointer ctor used
Bad DataLayout ctor used.  Tool did not specify a DataLayout to use
Bad address
Bad aggregation op
Bad file descriptor
Bad unary op
Barrier
BaryCoordNV
BaryCoordNoPersp
BaryCoordNoPerspAMD
BaryCoordNoPerspCentroid
BaryCoordNoPerspCentroidAMD
BaryCoordNoPerspNV
BaryCoordNoPerspSample
BaryCoordNoPerspSampleAMD
BaryCoordPullModel
BaryCoordPullModelAMD
BaryCoordSmooth
BaryCoordSmoothAMD
BaryCoordSmoothCentroid
BaryCoordSmoothCentroidAMD
BaryCoordSmoothSample
BaryCoordSmoothSampleAMD
Base Class Array
Base Class Descriptor at
Base Type
Base recognizer function 'alreadyParsedRule' called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntil' called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntilSet' called by unknown parser type - provide override for this function
Base recognizer function 'match' called by unknown parser type - provide override for this function
Base recognizer function 'matchAny' called by unknown parser type - provide override for this function
Base recognizer function 'mismatch' called by unknown parser type - provide override for this function
Base recognizer function 'synPred' called by unknown parser type - provide override for this function
Base recognizer function antlr3RecognitionExceptionNew called by unknown parser type - provide override for this function
Base recognizer function consumeUntilSet called by unknown parser type - provide override for this function
Base recognizer function displayRecognitionError called by unknown parser type - provide override for this function
Base recognizer function recover called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedSet called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedToken called by unknown parser type - provide override for this function
BaseInstance
BaseVertex
Basic Alias Analysis (stateless AA impl
Basic Type in Bottom IR
BeginInvocationInterlockEXT
Bellevue1
Bhttp://cacerts.digicert.com/DigiCertSHA2AssuredIDCodeSigningCA.crt0
BinaryProperties_GetValue
Binding
Binding Point
BindlessConstants_t g_constants[ %d
BindlessTexture2D
BitCast applied to a non-pointer
BitCount
BitFieldInsert
BitFieldSExtract
BitFieldUExtract
BitPiece
BitReverse
Bitcast
Bitwise not
BitwiseAnd
BitwiseOr
BitwiseXor
BlendEnable
BlendFactor
BlendOp
BlendOpAlpha
Block(s
Boolean
BorderColor
BoundTexture%d
BoundTextureSrgb%d
BoundingBox
Branch weights
Branch: Break
Branch: Continue
Branch: Kill
Branch: Return
Branch: Unknown Branch
BranchConditional
Break critical edges in CFG
Broken pipe
Btv<3trH
Buffer
BufferBlock
BuildMainEntryPointWrapper
BuildNDRange
Built H
BuiltIn
BuiltIn (No allowed mixing of built-in variables and
BuiltIns can only target variables, structs or constants
BuiltinSymbolTable
Byte Offset
ByteAddressBuffer
C A9A s
C A9C s
C H;C(r
C I9@Hu
C$9C w)H
C$H9t$`t
C(HcK H
C(LcC H
C-D8c,t
C-D8k,t
C-D8{,t
C0H9C(tA
C0HcC H
C0L;G0u2
C8H9C0t&H
C8H9C0uaL
C8H;T$8t8A
C8H;T$8t>A
C8H;T$8tCA
C8H;]Ht
C8H;t$Pt:A
C8I;PHt
C8I;]Ht
C:\buildworker\source2_dota_rel_2019_win64\build\src\mathlib\mathlib.cpp
C:\buildworker\source2_dota_rel_2019_win64\build\src\public\ordered_constructor.h
C:\buildworker\source2_dota_rel_2019_win64\build\src\public\tier0\utlleanvector.h
C:\buildworker\source2_dota_rel_2019_win64\build\src\public\tier0\utlrbtree.h
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\compiletargetexpr.g
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfx_dx\hlslvariables.g
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfx_gl\Retailgl\win64\vfx_gl.pdb
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfx_gl\vfx_compile_helpers_gl.cpp
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfx_gl\vfx_context_mgr_gl.cpp
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfx_gl\vfx_gl.cpp
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfx_gl\vfx_shader_validator_glslang.cpp
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfx_shader_file.cpp
C:\buildworker\source2_dota_rel_2019_win64\build\src\vfx\vfxexpr.g
C@H;CHt
C@I;@Ht
CA< t(<#t
CALLDATAEXT
CALLDATAINEXT
CALLDATAINNV
CALLDATANV
CENTROID
CHH9CXr
CMemAllocSystemInitialize
COHERENT
COMMENT
COMPARISON_ANISOTROPIC
COMPARISON_MIN_LINEAR_MAG_MIP_POINT
COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_MAG_MIP_LINEAR
COMPARISON_MIN_MAG_MIP_POINT
COMPARISON_MIN_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_POINT_MAG_MIP_LINEAR
CONOUT
CONSTANT_REGISTER
CONTINUE
COULDNOTCOMPUTE
COrderedConstructor_Create<class COrderedInitShutdownRefWrapper<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)>,class CResolveOrderedFunc<class COrderedInitShutdownRefWrapper<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)>,&void __cdecl _ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)>(class COrderedConstructor_DependencyManagement<class COrderedInitShutdownRefWrapper<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)> > &)>,0>::AddRef
CPHcL$0I
CPacked
CRT$XCA
CRT$XCC
CRT$XCL
CRT$XCU
CRT$XCZ
CRT$XIA
CRT$XIC
CRT$XIZ
CRT$XLA
CRT$XLZ
CRT$XPA
CRT$XPX
CRT$XPXA
CRT$XPZ
CRT$XTA
CRT$XTZ
CUtlLeanVectorFixedGrowableBase<unsigned char,12,short>::EnsureCapacity
CUtlRBTree overflow with %u elements
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlRBTree<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlRBTree<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short,class CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlStreamBuffer does not support TEXT_BUFFER's use CUtlBuffer
CVfxContextMgrGL::CreateGLContext - Failed SDL_CreateWindow() for OpenGL dummy window
CVfxContextMgrGL::CreateGLContext - Failed SDL_GL_CreateContext() for OpenGL Device Context
CVfxContextMgrGL::CreateGLContext - Unable to initialize SDL
CVfxContextMgrGL::CreateGLContext - missing OpenGL v2.0 entrypoints
CVfxContextMgrGL::CreateGLContext - missing OpenGL v3.0 entrypoint 'glGetStringi
CVfxContextMgrGL::CreateGLContext - missing OpenGL v3.1 / GL_ARB_uniform_buffer_object extension entrypoints
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.1 / GL_ARB_get_program_binary
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.1 / GL_ARB_separate_shader_objects
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.3 / GL_ARB_program_interface_query extension entrypoints
CVfxContextMgrGL::GetGLEntrypointsForThread - Failed to Intialize OpenGL
CVfxD3dInclude::Open(105): Cannot read file "%s
CVfxD3dInclude::Open(120): Cannot find include file %s
CVfxD3dInclude::Open(46): Cannot use absolute paths for shader includes. Found %s
CVfxEntrypointsGL::CreateGLContext
CVfxGL::CompileShaderAndGetVariables(2949): ERROR! Can't load vfx_dx11 dll
CVfxGL::CompileShaderAndGetVariables(2962): ERROR! Can't load vfx_dx9 dll
CVfxGL::CompileShaderAndGetVariables(3033): ERROR! Failed to convert GLSL to SPIRV
CVfxGL::Init
CVfxGL::Init() - fsFactory can't get '%s' interface
CVfxShaderFile::Unserialize
CVfxShaderValidatorGLslang::GetBinaryShader::<lambda_c7551c33ae43a92d887e33fa674a6dc8>::operator
CVfxShaderValidatorGLslang::Initialize
CXA8PXt
CXA8hXt
CXL9sHu
CXM;E8u5
CalculateLevelOfDetail
CalculateLevelOfDetailUnclamped
Call Graph SCC Pass Manager
Call graph node <<null function
Call graph node for function
CallGraph Construction
CallGraph Pass Manager
CallGraph Root is
CallableData ID
CallableDataKHR
CallableDataNV
CallableKHR
CallableNV
Calling D3DPreprocess
Can not compute
Can only compare integers and floats
Can only compare scalars and vectors
Can only convert scalars and vectors
Can only use one of gl_ClipDistance or gl_ClipDistancePerViewNV
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred
Can only use one of gl_CullDistance or gl_CullDistancePerViewNV
Can only use one of gl_Layer or gl_LayerPerViewNV
Can only use one of gl_Position or gl_PositionPerViewNV
Can only use one of gl_ViewportMask or gl_ViewportMaskPerViewNV
Can't find constant buffer %s in constant buffer list
Can't find resource %s in effect parameter list
Can't find sampler %s in effect parameter list
Can't find shader constant %s in effect parameter list
Cannot allocate a variable containing a 16-bit type in
Cannot allocate a variable containing a 8-bit type in
Cannot attach multiple ES shaders of the same type to a single program
Cannot copy composites of 8- or 16-bit types
Cannot copy memory of objects containing 8- or 16-bit types
Cannot create a composite containing 8- or 16-bit types
Cannot create undefined values with 8- or 16-bit types
Cannot cross link ES and desktop profiles
Cannot declare a function in a function body
Cannot extract from a composite of 8- or 16-bit types
Cannot extract from a vector of 8- or 16-bit types
Cannot find option named
Cannot form constants of 8- or 16-bit types
Cannot insert into a composite of 8- or 16-bit types
Cannot insert into a vector of 8- or 16-bit types
Cannot mix ES profile with non-ES profile shaders
Cannot reuse block name within the same interface
Cannot shuffle a vector of 8- or 16-bit types
Cannot specify more than one option with cl::ConsumeAfter
Cannot transpose matrices of 16-bit floats
Cannot use a pointer in the PhysicalStorageBuffer storage class
Cannot use both gl_FragColor and gl_FragData
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Canonicalize instructions for LunarGLASS
Canonicalize natural loops
Canonicalize the CFG for LunarGLASS
Capability
Capability Image1D is required to access storage image
Capability ImageBuffer is required to access storage image
Capability ImageCubeArray is required to access
Capability ImageRect is required to access storage image
Capability StorageImageReadWithoutFormat is required to
Capability StorageImageWriteWithoutFormat is required to write
CapabilityFragmentShaderPixelInterlockEXT
CapabilityFragmentShaderSampleInterlockEXT
CapabilityFragmentShaderShadingRateInterlockEXT
CapabilityIntegerFunctions2INTEL
CaptureEventProfilingInfo
Case construct that targets
Ceiling
Centroid
Ch;0ubL
ChA:EHt
ChH+C`H
CheckAccessFullyMapped
CheckArbitraryPeekGet@CUtlBuffer@@IEAA_NHAEAH@Z
CheckBox
CheckGet@CUtlBuffer@@IEAA_NH@Z
CheckPut@CUtlBuffer@@IEAA_NH@Z
Chttp://cacerts.digicert.com/DigiCertSHA2AssuredIDTimestampingCA.crt0
CiA:EIt
ClA;ELt
ClampToEdge
Class Hierarchy Descriptor
Classes: Workgroup, CrossWorkgroup, Private, and Function
Classifying expressions for
Clay Clay Shader Compiler
Clay Shader Compiler
Cleanup: discarding lookahead
Cleanup: popping
Clear@CStrAutoEncode@@QEAAXXZ
ClipDistance
ClipDistancePerViewNV
ClipVertex
CloseHandle
CloseThreadpoolTimer
CloseThreadpoolWait
CloseThreadpoolWork
ClosestHitKHR
ClosestHitNV
ClusterSize
ClusteredReduce
CmdExecTime
Coarse
Codeplay
Coherent
ColMajor
ColMajorH
ColorWriteEnable0
ColorWriteEnable1
ColorWriteEnable2
ColorWriteEnable3
Column
Column Count
Column Major
Column Major operand <id
Column Type
Column type is not defined
Columns
Columns in a matrix must be of type vector
Combine intrinsics for LunarGLASS
Combine redundant instructions
CommandLine
CommandLine Error: Argument
CommitReadPipe
CommitWritePipe
Committed
Comparator
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
CompareStringEx
CompareStringW
Comparison Operator in Bottom IR
Comparison Vector Operator in Bottom IR
ComparisonFunc
Compilation failed; CVfxShaderReparserGL failed to reparse shader source
Compilation failed; no code produced.  Log string from driver %s
Compilation failed; no code produced.  Log string from glslang
Compile Targets
CompileTargets
Complete Object Locator
Component
Component Count
Component Count must be positive
Component Type
Component decoration specified for type
Component index
Component literal at operand
Component type is not defined
Components
ComposeFileName@CBufferString@@QEAAPEBDPEBD0D@Z
Composite
CompositeConstruct
CompositeExtract
CompositeInsert
Compute Shader
ComputeDerivativeGroupLinearNV
ComputeDerivativeGroupQuadsNV
Computed
Condition
Condition operand for OpBranchConditional must be of boolean type
ConstOffset
ConstOffset image operand not allowed
ConstOffsets
ConstType
Constant
ConstantBuffer
ConstantComposite
ConstantFalse
ConstantH
ConstantNull
ConstantPipeStorage
ConstantSampler
ConstantTrue
Constituent <id
Constituent <id> count does not match Result Type <id
Constituent count does not match Result Type <id
Constituents
Construct
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3
Construct bmat3x2
Construct bmat3x4
Construct bmat4
Construct bmat4x2
Construct bmat4x3
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct combined texture-sampler
Construct cooperative matrix
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3
Construct dmat3x2
Construct dmat3x4
Construct dmat4
Construct dmat4x2
Construct dmat4x3
Construct double
Construct dvec2
Construct dvec3
Construct dvec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3
Construct f16mat3x2
Construct f16mat3x4
Construct f16mat4
Construct f16mat4x2
Construct f16mat4x3
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct float
Construct float16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3
Construct imat3x2
Construct imat3x4
Construct imat4
Construct imat4x2
Construct imat4x3
Construct int
Construct int16_t
Construct int64
Construct int8_t
Construct ivec2
Construct ivec3
Construct ivec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3
Construct mat3x2
Construct mat3x4
Construct mat4
Construct mat4x2
Construct mat4x3
Construct multiInserts out of multiple insert/extracts
Construct reference
Construct reference type
Construct structure
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uint16_t
Construct uint64
Construct uint8_t
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3
Construct umat3x2
Construct umat3x4
Construct umat4
Construct umat4x2
Construct umat4x3
Construct uvec2
Construct uvec3
Construct uvec4
Construct vec2
Construct vec3
Construct vec4
Consume
ConsumeStructuredBuffer
Continue Target
Continued Source
ContractionOff
Contradictory depth layouts
Contradictory input layout primitives
Contradictory input vertex spacing
Contradictory layout max_primitives values
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory local size
Contradictory local size specialization ids
Contradictory output layout primitives
Contradictory triangle ordering
Contradictory xfb_stride
Control the amount of inlining to perform (default = 225
Control the amount of phi node folding to perform (default = 1
ControlBarrier
Convert bool to double
Convert bool to float
Convert bool to float16_t
Convert bool to in16t_t
Convert bool to int
Convert bool to int64
Convert bool to int8_t
Convert bool to uint
Convert bool to uint16_t
Convert bool to uint64
Convert bool to uint8_t
Convert double to bool
Convert double to float
Convert double to float16_t
Convert double to int
Convert double to int16_t
Convert double to int64
Convert double to int8_t
Convert double to uint
Convert double to uint16_t
Convert double to uint64
Convert double to uint8_t
Convert float to bool
Convert float to double
Convert float to float16_t
Convert float to int
Convert float to int16_t
Convert float to int64
Convert float to int8_t
Convert float to uint
Convert float to uint16_t
Convert float to uint64
Convert float to uint8_t
Convert float16_t to bool
Convert float16_t to double
Convert float16_t to float
Convert float16_t to int
Convert float16_t to int16_t
Convert float16_t to int64
Convert float16_t to int8_t
Convert float16_t to uint
Convert float16_t to uint16_t
Convert float16_t to uint64
Convert float16_t to uint8_t
Convert int to bool
Convert int to double
Convert int to float
Convert int to float16_t
Convert int to int16_t
Convert int to int64
Convert int to int8_t
Convert int to uint
Convert int to uint16_t
Convert int to uint64
Convert int to uint8_t
Convert int16_t to bool
Convert int16_t to double
Convert int16_t to float
Convert int16_t to float16_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to int8_t
Convert int16_t to uint
Convert int16_t to uint16_t
Convert int16_t to uint64
Convert int16_t to uint8_t
Convert int64 to bool
Convert int64 to double
Convert int64 to float
Convert int64 to float16_t
Convert int64 to int
Convert int64 to int16_t
Convert int64 to int8_t
Convert int64 to uint
Convert int64 to uint16_t
Convert int64 to uint64
Convert int64 to uint8_t
Convert int8_t to bool
Convert int8_t to double
Convert int8_t to float
Convert int8_t to float16_t
Convert int8_t to int
Convert int8_t to int16_t
Convert int8_t to int64
Convert int8_t to uint
Convert int8_t to uint16_t
Convert int8_t to uint64
Convert int8_t to uint8_t
Convert pointer to uint64_t
Convert uint to bool
Convert uint to double
Convert uint to float
Convert uint to float16_t
Convert uint to int
Convert uint to int16_t
Convert uint to int64
Convert uint to int8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to uint8_t
Convert uint16_t to bool
Convert uint16_t to double
Convert uint16_t to float
Convert uint16_t to float16_t
Convert uint16_t to int
Convert uint16_t to int16_t
Convert uint16_t to int64
Convert uint16_t to int8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to uint8_t
Convert uint64 to bool
Convert uint64 to double
Convert uint64 to float
Convert uint64 to float16_t
Convert uint64 to int
Convert uint64 to int16_t
Convert uint64 to int64
Convert uint64 to int8_t
Convert uint64 to uint
Convert uint64 to uint16
Convert uint64 to uint8_t
Convert uint64_t to pointer
Convert uint8_t to bool
Convert uint8_t to double
Convert uint8_t to float
Convert uint8_t to float16_t
Convert uint8_t to int
Convert uint8_t to int16_t
Convert uint8_t to int64
Convert uint8_t to int8_t
Convert uint8_t to uint
Convert uint8_t to uint16_t
Convert uint8_t to uint64
ConvertFToS
ConvertFToU
ConvertPtrToU
ConvertSToF
ConvertUToF
ConvertUToPtr
Cooperative matrix 'K' mismatch
Cooperative matrix 'M' mismatch
Cooperative matrix 'N' mismatch
Cooperative matrix constructor argument must be scalar or cooperative matrix
Cooperative matrix scopes must match
Cooperative matrix types (or types containing them) can only be allocated
Cooperative matrix types must not be used in shared memory
CooperativeMatrixLengthNV
CooperativeMatrixLoadNV
CooperativeMatrixMulAddNV
CooperativeMatrixNV
CooperativeMatrixNV capability is present
CooperativeMatrixStoreNV
Coordinate
CopyLogical
CopyMemory
CopyMemorySized
CopyObject
CorExitProcess
Corrupt image type definition
Corruption of the global PassRegistry
Could not perform requested binary operation
Could not process include directive
CounterBuffer
CreateEventExW
CreateEventW
CreateFileW
CreateInterface
CreateMutexA
CreatePipeFromPipeStorage
CreateSemaphoreExW
CreateSemaphoreW
CreateSymbolicLinkW
CreateThreadpoolTimer
CreateThreadpoolWait
CreateThreadpoolWork
CreateUserEvent
CrossDevice
CrossWorkgroup
CrossWorkgroup or Function
CrossWorkgroupMemory
CubeFaceCoordAMD
CubeFaceIndexAMD
Cull Mask
CullBackFacingTrianglesKHR
CullDistance
CullDistancePerViewNV
CullFrontFacingTrianglesKHR
CullMask
CullMode
CullNoOpaqueKHR
CullOpaqueKHR
Currently unhandled instruction
Currently unsupported instruction
Cx<bu9H
D$ 9YTu
D$ 9wTu
D$ ;D$8
D$ D9H
D$ D;l$(teM
D$ H9D$(u
D$ H9D$Ht
D$ H9P s
D$ H9X s
D$ H;F
D$ Hct$@H
D$ L9@ s
D$ L9D$(u
D$ L9H s
D$ L9P
D$ L9P r
D$ L9P s
D$ L9p s
D$ L;0u
D$ L;D
D$(H+D$ H
D$(H9D$ tJH
D$(H9D$ u
D$(H9F0
D$(H;D$0r
D$(H;FHu!M
D$,9D$$tUA
D$09D$4tBL
D$09D$Pta
D$09P s
D$09^Tu
D$09h s
D$09kTu
D$09x s
D$0;D$Pt
D$0;H s
D$0A;D$Xu
D$0D9H
D$0D9H r
D$0D9H s
D$0H9D$(r
D$0H9D$8
D$0H9D$8u
D$0H9EouaL
D$0H9L$Ht
D$0H9X s
D$0H;H s
D$0H;\$8t
D$0H;\$Ht
D$0HcCdH
D$0L9H s
D$0L9P s
D$0t!H
D$0uwI
D$89D$<u
D$89D$Tta
D$8;D$Xt
D$8H9C@u
D$8H9D$0
D$8H9D$H
D$8H;D$@r
D$8H;D$@t
D$8H;L$Pr
D$8I9D$@uHA
D$8I;D$@r
D$@9D$D
D$@9D$DuT
D$@9p s
D$@;H s
D$@D8t$0
D$@E8} tCI
D$@H+D$8H
D$@H9D$8
D$@H9D$8r
D$@H9G0
D$@H9H s
D$@H;D$Hr
D$@H;rH
D$@HcS(E3
D$@L9p r(w
D$BfE;E
D$H9D$@ta
D$HH9D
D$HH9D$8
D$HH9D$8t
D$HH9D$X
D$HH;D$Pr
D$HH;D$X
D$HH;D$Xt
D$HL9gXt
D$Hf9H
D$PH+D$HH
D$PH9D$Hr
D$PH9D$XuY
D$PH9P s
D$PH;D$Xr
D$PHcChH
D$PI9A t
D$PL9@ r
D$TH;T$pt
D$XE8g tCI
D$XE9uTu
D$XH+D$PH
D$XH9D$H
D$XH9D$h
D$XH;D$`r
D$XL#D$8
D$\9D$p
D$`9P s
D$`H+D$XH
D$`H9D$Xr
D$`H9P
D$`H9P s
D$`H;D$ht
D$`HcK
D$`I9D
D$h9t$P
D$hH9D$8
D$hH9D$X
D$hH9D$`t
D$hH9D$`u
D$hH9GH
D$hH;D$pr
D$hH;D$x
D$hI+D$`H
D$hL#D$8
D$hL#D$H
D$p;D$X
D$p;D$XH
D$pD9d$X
D$pH;U te
D$pI#H0H
D$pfE9p
D$pmain
D$xH+D$pH
D$xH9D$Hu
D$xH9D$p
D$xH;D$p
D$xH;Xh
D+D$dE
D+D$lD
D+E(t$L
D16_SHADOW
D24X4S4
D24X8_SHADOW
D3DCOLORtoUBYTE4
D3DCompile
D3DDisassemble
D3DPreprocess
D3DPreprocess() failed with no error message! CVfxGL::GetAllShaderVariables(3466
D3DReflect
D3DStripShader
D3DXPreprocess() failed with no error message! CVfxGL::CompileShaderAndGetVariables(2576
D8APtPH
D8AQt^H
D8L$0uP
D8d$2t
D8d$8t
D8d$Ht-I
D8d$`t
D8i u.H
D8t$0trA
D8uou4E3
D8v8uUH
D8y,t/D
D96wFD93wAH
D9I@v^A
D9` s<D
D9d$8usL
D9kP~&I
D9kP~)I
D9l$hvrA
D9o$t!A
D9o(t!A
D9sP~.3
D9t$@t3L
D:\dev\source2\main\src\thirdparty\glslang\External\spirv-tools\source\opt\type_manager.cpp
D;A s|L9d$X
D;a sjH
D;d$8tp
D;i seM9N
D;i siH
D;j }gH
D;l$Hta
D;q siH
D;z sdI9L
D;~ s[H
DCE Vars
DD8T$pu
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD*++++,-.DDD/DD0
DEBUG build
DECR_SAT
DEFAULT
DEST_ALPHA
DEST_COLOR
DEVICECOHERENT
DFSNumbers invalid
DISCARD
DIV_ASSIGN
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4X2
DMAT4X3
DMAT4X4
DOUBLECONSTANT
DPdxCoarse
DPdxFine
DPdyCoarse
DPdyFine
DW_ATE_UTF
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_decimal_float
DW_ATE_edited
DW_ATE_float
DW_ATE_hi_user
DW_ATE_imaginary_float
DW_ATE_lo_user
DW_ATE_numeric_string
DW_ATE_packed_decimal
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_signed_fixed
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_unsigned_fixed
DW_LANG_Ada83
DW_LANG_Ada95
DW_LANG_C
DW_LANG_C89
DW_LANG_C99
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_D
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Fortran95
DW_LANG_Java
DW_LANG_Modula2
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_PLI
DW_LANG_Pascal83
DW_LANG_UPC
DW_LANG_hi_user
DW_LANG_lo_user
DW_TAG_APPLE_property
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_template_template_param
DW_TAG_MIPS_loop
DW_TAG_access_declaration
DW_TAG_arg_variable
DW_TAG_array_type
DW_TAG_auto_variable
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_class_template
DW_TAG_class_type
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_compile_unit
DW_TAG_condition
DW_TAG_const_type
DW_TAG_constant
DW_TAG_dwarf_procedure
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_formal_parameter
DW_TAG_format_label
DW_TAG_friend
DW_TAG_function_template
DW_TAG_hi_user
DW_TAG_imported_declaration
DW_TAG_imported_module
DW_TAG_imported_unit
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_interface_type
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_lo_user
DW_TAG_member
DW_TAG_module
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_namespace
DW_TAG_packed_type
DW_TAG_partial_unit
DW_TAG_pointer_type
DW_TAG_ptr_to_member_type
DW_TAG_reference_type
DW_TAG_restrict_type
DW_TAG_rvalue_reference_type
DW_TAG_set_type
DW_TAG_shared_type
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subprogram
DW_TAG_subrange_type
DW_TAG_subroutine_type
DW_TAG_template_alias
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_type_unit
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_unspecified_type
DW_TAG_user_base
DW_TAG_variable
DW_TAG_variant
DW_TAG_variant_part
DW_TAG_volatile_type
DW_TAG_with_stmt
DXT1_ONEBITALPHA
DXT5_NM
Data Layout
Dead Store Elimination
Debug info extension instruction other than DebugScope, DebugNoScope, DebugDeclare, and DebugValue found inside function
Debug info extension instructions other than
Debug printf
DebugCompilationUnit
DebugDeclare
DebugExpression
DebugFunction
DebugFunctionDeclaration
DebugGlobalVariable
DebugImportedEntity
DebugInfo
DebugInfoNone
DebugInlinedAt
DebugInlinedVariable
DebugLexicalBlock
DebugLexicalBlockDiscriminator
DebugLocalVariable
DebugMacroDef
DebugMacroUndef
DebugNoScope
DebugOperation
DebugScope
DebugScope, DebugNoScope, DebugDeclare, DebugValue
DebugSource
DebugTypeArray
DebugTypeBasic
DebugTypeComposite
DebugTypeEnum
DebugTypeFunction
DebugTypeInheritance
DebugTypeMember
DebugTypePointer
DebugTypePtrToMember
DebugTypeQualifier
DebugTypeTemplate
DebugTypeTemplateParameter
DebugTypeTemplateParameterPack
DebugTypeTemplateTemplateParameter
DebugTypeVector
DebugTypedef
DebugValue
December
Declaration
DecodePointer
Decompose instructions for LunarGLASS
Decorate
DecorateId
DecorateString
DecorateStringGOOGLE
Decoration Group
DecorationAliasedPointerEXT
DecorationGroup
DecorationHlslCounterBufferGOOGLE
DecorationHlslSemanticGOOGLE
DecorationNonUniformEXT
DecorationRestrictPointerEXT
Decorations taking ID parameters may not be used with OpDecorateId
Decorations that don't take ID parameters may not be used with OpDecorateId
DecremenH9
DecrementCounter
Default
Default target
DefaultSamplerState
Degrees
DeleteCriticalSection
DeleteFileW
Deleting
Deleting old shadercache file: %s
Demote all values to stack slots
DemoteToHelperInvocationEXT
DenormFlushToZero
DenormPreserve
Dependency
DependencyInfinite
DependencyLength
DepthBias
DepthBiasClamp
DepthClipEnable
DepthEnable
DepthFunc
DepthGreater
DepthLess
DepthReplacing
DepthStencil
DepthUnchanged
DepthWriteEnable
Derivative instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
Derivative instructions require Fragment or GLCompute execution model
DerivativeControl
DerivativeGroupLinearNV
DerivativeGroupQuadsNV
Description
Descriptor Set
DescriptorSet
Destination
Details
Determinant
Determining loop execution counts for
Dev Shader
DevShader
Device, Workgroup and Invocation
DeviceEnqueue
DeviceEvent
DeviceGroup
DeviceIndex
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
Did you mean gl_InstanceIndex
Did you mean gl_VertexIndex
DigiCert Assured ID Root CA0
DigiCert Inc1
DigiCert SHA2 Assured ID Code Signing CA
DigiCert SHA2 Assured ID Code Signing CA0
DigiCert SHA2 Assured ID Timestamping CA
DigiCert SHA2 Assured ID Timestamping CA0
DigiCert Timestamp 20210
DigiCert, Inc.1 0
Dim SubpassData requires Fragment execution model
Dim SubpassData requires Sampled to be 2
Dim SubpassData requires format Unknown
Direction
Directory not empty
Disable branch optimizations in CodeGenPrepare
Disable memory promotion in LICM pass
Disable select to branch conversion
Disabled
Display all available options
Display available options (-help-hidden for more
Display list of all available options
Display list of available options (-help-list-hidden for more
Display the version of this program
Distance
DomFrontier for BB
Domain Shader
Domain error
Dominance Frontier Construction
Dominator Tree Construction
DominatorTree is not up to date
DontFlatten
DontInline
DontUnroll
DrawIndex
DrawParameters
DstBlend
DstBlendAlpha
Duplicate non-aggregate type declarations are not allowed. Opcode
Duplicate return instructions into unconditional branches
DxcCreateInstance
Dynamic combo %s referenced in expression doesn't exist
E D9h s
E(H;E0r
E(u0H;E0r
E+A(t'M
E+A(tUM
E+E(t%M
E,E8f\t
E-@8u,t
E-A8u,t
E0A;EXu
E0D9l$h
E0D9x s
E0I;E8r
E8H+E0H
E8H9E@u
E8H;E@r
E8fhuDH
E9V\vqf
E9u ~;H
E@H;E u
EDA9FDtvI
EHH9EHu
EHH;U t
EMdBuiltIn input value
EMdBuiltIn output value
END_UNIFORMBINDINGS
EPH;EXr
EPI;EXr
EPboolD
EPvoidD
ERROR! VS input struct member "%s" is missing semantic annotation
ERROR_not_op_extension
ESC_SEQ
EXH;E`r
EXPLICITINTERPAMD
EXPONENT
EXfD9P
E\A9F\A
E`A9F`A
E`H9EXr
Early CSE
Early exit
EarlyFragmentTests
EdA9FdA
EhA9FhA
EhH;Epr
ElA9FlA
Element
Element Type
Element type is not defined
Eliminate Early Returns for LunarGLASS
Embedded
EmitStreamVertex
EmitVertex
Enable -time-passes memory tracking (this may be slow
Enable LSR phi elimination
Enable unsafe double to float shrinking for math lib calls
EncodePointer
Encountered extended instruction GLSLstd450Bad
End of input in comment
End of input in macro
End of input reached while decoding Op
End of line in macro substitution
End of line in string
EndInvocationInterlockEXT
EndPrimitive
EndStreamPrimitive
EnqueueKernel
EnqueueMarker
EnqueuedWorkgroupSize
EnterCriticalSection
Entering state %d
Entry Point
Entry point id
Entry point name
Entry point not found
Entry points may not have a call graph with cycles
EntryPoint
EnumSystemLocalesEx
EnumSystemLocalesW
EoH9EgthH
EoH9Egu
EpH9Ehr
Error adding shader to cache
Error compiling expression for attribute "%s": %s
Error compiling expression for attribute "%s": Expressions on attributes can't use 'this
Error compiling expression for render state %s: %s
Error compiling expression for variable "%s": %s
Error loading D3D compiler DLL %s
Error masking unused parts for vfx file CVfxGL::CompileShaderAndGetVariables(2538
Error masking unused parts! Equal sign not found after token "%s"! (line %d
Error masking unused parts! Unknown text found. This is usually caused by a '{' or '}' not tabbed properly or an invalid declaration at the global scope. (line %d
Error opening info-output-file
Error opening output file
Error opening vfx file CVfxGL::CompileShaderAndGetVariables(2526
Error parsing %s function signature
Error parsing annotations! Unknown register set for %s
Error reading bitcode file
Error while running preprocessor over shader code
Error! "%s" can only use Default%d
Error! "%s" can only use Range%d
Error! Attribute "%s": cannot bind to variable "%s" because it is dynamic
Error! Attribute "%s": cannot bind to variable "%s" due to type mismatch
Error! Bindless Texture "%s" is not created with CreateTexture2DWithoutSampler and does not have an attribute
Error! Compiled expression for attribute "%s" is not constant at compile time
Error! Compiled expression for attribute "%s" is too long
Error! Default setting for "%s" cannot be parsed
Error! Enum Option entry is too long (limit is %i chars). "%s" for %s
Error! External cbuffer %s not allowed in static descriptor set
Error! Input color space for "%s" cannot be parsed
Error! Invalid Channel() annotation. Mip algorithm requires at least one input texture arg in texture %s
Error! Invalid Channel() annotation. Missing output color channel info for texture %s
Error! Invalid Enum Option entry "%s" for %s
Error! Invalid channel name %c in texture %s
Error! Invalid color channel %s in texture %s
Error! Invalid data type for sampler state annotation %s: Must be string
Error! Invalid file ending string definition for %s
Error! Invalid hull shader input patch size definition
Error! Invalid input texture definition for %s. Missing input color space annotation
Error! Invalid input texture definition for %s. Missing minimum precision annotation
Error! Invalid input texture type for %s
Error! Invalid output format %s in texture %s
Error! Invalid render attribute definition for %s
Error! Invalid render state data type
Error! Invalid render state definition for %s
Error! Minimum precision for "%s" cannot be parsed
Error! Missing or invalid Channel() annotation in texture %s
Error! Missing output texture format for texture %s. Texture variable must either have a Source()/Attribute() annotation or texture processing annotations
Error! Multiply defined render state "%s
Error! Only one basic data type allowed in external constant buffer %s (either all float, all int, or all bool
Error! PatchSize() specification missing in hull shader
Error! Range setting for "%s" cannot be parsed
Error! Render state %s is only allowed in %s
Error! Sampler %s is inside a descriptor set and has to be immutable. However, sampler state %s is dynamic
Error! SrgbRead value must be true or false
Error! Texture %s must have only one Source(), Attribute() or Expression() annotation or texture processing annotations
Error! Texture %s references a Dx9Sampler( %s ), but sampler %s doesn't exist
Error! Texture attribute "%s": "%s" is not a shader variable
Error! Texture channel %c appears in multiple channel definitions in texture %s
Error! Texture ending string "%s" for "%s" does not start with the '_' character
Error! Texture ending string for "%s" cannot be parsed
Error! Too many channels in channel specification "%s" for texture %s
Error! Too many input textures specified for %s
Error! Undeclared input texture %s referenced in texture %s
Error! Unknown UiType "%s" for %s
Error! Unknown render state %s
Error! Unknown variable type for %s
Error! Unsupported input color space %s for texture "%s
Error! UvScaleVar( %s ) on texture %s isn't referencing an existing variable
Error! VS input struct semantic annotation for "%s" cannot be parsed
Error! Value for "%s" cannot be parsed
Error! Value for attribute "%s" cannot be parsed
Error! Value for hull shader input patch size cannot be parsed
Error! Variable "%s" format must be %s with size %d to match the expected source format for source "%s
Error! Variable "%s" has an annotation string "%s" this is longer than %d characters
Error! Variable "%s" uses too many register elements! Found %d but only supports %d
Error! Variable %s is not an input texture
Error! Variable referenced by UvScaleVar( %s ) on texture %s must be a float or int or vector type
Error! Variable type doesn't match register type for %s
Error: Block without parent
Error: Invalid shader variable reference in expression: %s can't be used in expression because it is not an artist-editable variable
Error: Required pass not found! Possible causes
Error: Result Id is 0
Error: Type Id is 0
Error: discarding
Error: popping
EvaluateAttributeAtCentroid
EvaluateAttributeAtSample
EvaluateAttributeSnapped
Events List
ExclusiveScan
Exec format error
ExecuteCallableKHR
ExecuteCallableNV
Executing Pass
Execution
Execution mode can only be used with a Geometry or tessellation execution model
Execution mode can only be used with a Geometry, tessellation or MeshNV execution model
Execution mode can only be used with a Kernel or GLCompute execution model
Execution mode can only be used with a Kernel, GLCompute, MeshNV, or TaskNV execution model
Execution mode can only be used with a tessellation execution model
Execution mode can only be used with the Fragment execution model
Execution mode can only be used with the Geometry execution model
Execution mode can only be used with the Geometry or MeshNV execution model
Execution mode can only be used with the Kernel execution model
Execution mode must be one of OriginUpperLeft, DepthReplacing, DepthGreater, DepthLess, DepthUnchanged, LocalSize, or LocalSizeHint for WebGPU environment
Execution scope is limited to Subgroup or Workgroup
ExecutionMode
ExecutionModeId
Executions
ExitProcess
Expected
Expected 32-bit float scalar or vector type as Result Type
Expected Base Type to be equal to Result Type
Expected Base Type to be int scalar or vector
Expected Base dimension to be equal to Result Type dimension
Expected Base to be int scalar or vector
Expected Base to have the same bit width
Expected Base to have the same dimension
Expected Component to be 32-bit int scalar
Expected Component type to be equal to Result Type
Expected Composite to be an object of composite type
Expected Constituent type to be equal to the
Expected Constituent type to be equal to the column
Expected Constituent type to be equal to the component type
Expected Constituents to be scalars or vectors of
Expected Coordinate to be float scalar or vector
Expected Coordinate to be int or float scalar or vector
Expected Coordinate to be int scalar or vector
Expected Coordinate to be integer scalar or vector
Expected Coordinate to have
Expected Coordinate to have at least
Expected Count Type to be int scalar
Expected Dref to be of 32-bit float type
Expected Image 'Dim' cannot be Cube
Expected Image 'Dim' must be one of 1D, 2D, or Cube when Arrayed is 1
Expected Image 'Dim' parameter to be 1D, 2D, 3D or Rect
Expected Image 'Dim' parameter to be not SubpassData
Expected Image 'Sampled Type' to be the same as
Expected Image 'Sampled Type' to be the same as Texel
Expected Image 'Sampled Type' to be the same as the Type pointed to by Result Type
Expected Image 'Sampled' parameter to be 0 or 1
Expected Image 'Sampled' parameter to be 0 or 2
Expected Image 'Sampled' parameter to be 1
Expected Image Operand Bias to be float scalar
Expected Image Operand ConstOffset to be a const object
Expected Image Operand ConstOffset to be int scalar or
Expected Image Operand ConstOffset to have
Expected Image Operand ConstOffsets array componenets to be int vectors of size 2
Expected Image Operand ConstOffsets to be a const object
Expected Image Operand ConstOffsets to be an array of size 4
Expected Image Operand Grad dx to have
Expected Image Operand Grad dy to have
Expected Image Operand Lod to be float scalar when used
Expected Image Operand Lod to be int scalar when used with
Expected Image Operand MinLod to be float scalar
Expected Image Operand Offset to be int scalar or
Expected Image Operand Offset to have
Expected Image Operand Sample to be int scalar
Expected Image operand to be of type OpTypeSampledImage
Expected Image to be OpTypePointer
Expected Image to be OpTypePointer with Type OpTypeImage
Expected Image to be of type OpTypeImage
Expected Index to be int scalar
Expected Insert Type to be equal to Result Type
Expected Level of Detail to be int scalar
Expected Matrix to be of type OpTypeMatrix
Expected Offset Type to be int scalar
Expected P type and Result Type to be the same
Expected Resident Code to be int scalar
Expected Result Type and Operand type to be the same
Expected Result Type struct member types to be identical
Expected Result Type struct member types to be integer scalar
Expected Result Type struct member types to be unsigned
Expected Result Type struct to have two members
Expected Result Type to be OpTypeImage
Expected Result Type to be OpTypePointer
Expected Result Type to be OpTypePointer whose Storage Class operand is Image
Expected Result Type to be OpTypePointer whose Type operand must be a scalar numerical type or OpTypeVoid
Expected Result Type to be OpTypeSampledImage
Expected Result Type to be OpTypeStruct
Expected Result Type to be OpTypeVector
Expected Result Type to be a composite type
Expected Result Type to be a matrix type
Expected Result Type to be a pointer
Expected Result Type to be a pointer or int or float vector
Expected Result Type to be a scalar type
Expected Result Type to be a struct containing an int scalar and a texel
Expected Result Type to be an unsigned integer type scalar
Expected Result Type to be bool scalar type
Expected Result Type to be float scalar or vector type
Expected Result Type to be float vector type
Expected Result Type to be int scalar or vector type
Expected Result Type to be int scalar type
Expected Result Type to be of target storage class
Expected Result Type to have 2 components
Expected Result Type to have storage class Generic
Expected Result Type to have storage class Workgroup
Expected Sample Image image type to be equal to Result Type
Expected Sample Image to be of type OpTypeSampleImage
Expected Sample for Image with MS 0 to be a valid <id> for the value 0
Expected Sample to be integer scalar
Expected Sampled Image to be of type OpTypeSampledImage
Expected Sampled Type to be a 32-bit int or float scalar type for Vulkan environment
Expected Sampled Type to be either void or
Expected Sampler to be of type OpTypeSampler
Expected Shift to be int scalar or vector
Expected Shift to have the same dimension
Expected Texel to be int or float vector or scalar
Expected Value to be a vector of four components of integer type scalar
Expected Value to be a vector of two components of unsigned integer or 64bit unsigned integer
Expected Vector component type to be equal to Result Type
Expected Vector type to be OpTypeVector
Expected Vector type to be equal to Result Type
Expected a struct as Result Type
Expected arithmetic operands to be of Result Type
Expected arithmetic operands to have the same bit width
Expected arithmetic operands to have the same dimension
Expected at least one index to Op
Expected bool scalar or vector type as Result Type
Expected bool scalar or vector type as condition
Expected bool scalar type as Result Type
Expected both Image Operand Grad ids to be float scalars or
Expected both objects to be of Result Type
Expected both operands to be of Result Type
Expected both operands to be of Result Type member type
Expected both operands to have the same component bit width
Expected column type of Result Type to be equal to the type
Expected column type of the matrix to be equal to Result Type
Expected column types of Result Type and left matrix to be
Expected columns of Matrix type and Result Type to be
Expected component type to be equal to Result Type
Expected component types of Matrix and Result Type to be
Expected component types of Result Type and matrix to be
Expected component types of Result Type and right matrix to be
Expected component types of Result Type and vector to be
Expected component types of the operands to be equal
Expected cooperative matrix type as A Type
Expected cooperative matrix type as B Type
Expected cooperative matrix type as C Type
Expected cooperative matrix type as Result Type
Expected cooperative matrix types
Expected float matrix type as Result Type
Expected float matrix type as left operand
Expected float matrix type as right operand
Expected float scalar or vector type as Result Type
Expected float scalar type as Result Type
Expected float vector as operand
Expected float vector type as Result Type
Expected float vector type as left operand
Expected float vector type as right operand
Expected floating scalar or vector type as Result Type
Expected hex value in escape sequence
Expected input and Result Type to point to the same type
Expected input to be a pointer
Expected input to be a pointer or int or float vector
Expected input to be a pointer or int scalar if Result Type is pointer
Expected input to be a pointer, int scalar or 32-bit int vector if Result Type is pointer
Expected input to be float scalar or vector
Expected input to be int scalar or vector
Expected input to have a type
Expected input to have different bit width from Result Type
Expected input to have storage class Generic
Expected input to have storage class Workgroup
Expected input to have the same dimension as Result Type
Expected input to have the same total bit width as
Expected input type to be equal to Result Type
Expected int scalar as input
Expected int scalar or vector as input
Expected int scalar or vector as operand
Expected int scalar or vector type as Result Type
Expected int scalar or vector type as operand
Expected left and right operands to have the same type
Expected matrix operand type to be equal to Result Type
Expected number of columns and the column size of Matrix
Expected number of columns of Result Type and right matrix to
Expected number of columns of left matrix and number of rows
Expected number of columns of the matrix to be equal to
Expected number of columns of the matrix to be equal to the
Expected number of constituents to be at least 2
Expected number of rows of the matrix to be equal to the
Expected operand to be of Result Type
Expected operand to be of type OpTypeImage
Expected operand to be scalar or vector float
Expected operand to be vector bool
Expected operands to be scalar or vector float
Expected operands to be scalar or vector int
Expected operands to have the same bit width
Expected operands to have the same dimension
Expected operands to have the same number of componenets
Expected rows of Matrix type and Result Type to be
Expected scalar operand type to be equal to the component
Expected scalar or
Expected scopes of Matrix and Result Type to be
Expected single constituent
Expected target storage class to be Workgroup
Expected total number of Constituents to be equal
Expected total number of given components to be equal
Expected unsigned int scalar or vector type as Result Type
Expected unsigned int scalar type as Result Type
Expected vector operand type to be equal to Result Type
Expected vector sizes of Result Type and the condition to be equal
Expected vector sizes of Result Type and the operand to be equal
Expected vector sizes of Result Type and the operands to be
Expected vector sizes of Result Type and the operands to be equal
Expecting %s
ExplicitInterpAMD
Exposes backend queries
Expression
Expression Parser
Expression in render state cannot use 'this
ExtInst
ExtInstImport
ExtendPath@CBufferString@@QEAAPEBDPEBDD@Z
Extended instruction GLSLstd450IMix is not supported
Extension
External2DY2YEXT
ExternalDescSet
ExternalDescriptorSet
ExternalOES
Extraneous input
Extraneous input - expected %s
Extraneous input - expected <EOF
Extraneous token
F"2$d"r
F$Mc|$ I
F(H+F H
F(H;F0r
F(I+F H
F(I9F H
F(I;F0r
F(X,P.x284
F,I;nPu
F-A8v,t
F-D8f,t
F-D8n,t
F-D8v,t
F-E8n,t
F0A;FXu
F0H+F(L
F0H9F(t
F0H9F8u
F0I+F(H
F16IMAGE1D
F16IMAGE1DARRAY
F16IMAGE2D
F16IMAGE2DARRAY
F16IMAGE2DMS
F16IMAGE2DMSARRAY
F16IMAGE2DRECT
F16IMAGE3D
F16IMAGEBUFFER
F16IMAGECUBE
F16IMAGECUBEARRAY
F16MAT2
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3
F16MAT3X2
F16MAT3X3
F16MAT3X4
F16MAT4
F16MAT4X2
F16MAT4X3
F16MAT4X4
F16SAMPLER1D
F16SAMPLER1DARRAY
F16SAMPLER1DARRAYSHADOW
F16SAMPLER1DSHADOW
F16SAMPLER2D
F16SAMPLER2DARRAY
F16SAMPLER2DARRAYSHADOW
F16SAMPLER2DMS
F16SAMPLER2DMSARRAY
F16SAMPLER2DRECT
F16SAMPLER2DRECTSHADOW
F16SAMPLER2DSHADOW
F16SAMPLER3D
F16SAMPLERBUFFER
F16SAMPLERCUBE
F16SAMPLERCUBEARRAY
F16SAMPLERCUBEARRAYSHADOW
F16SAMPLERCUBESHADOW
F16SUBPASSINPUT
F16SUBPASSINPUTMS
F16TEXTURE1D
F16TEXTURE1DARRAY
F16TEXTURE2D
F16TEXTURE2DARRAY
F16TEXTURE2DMS
F16TEXTURE2DMSARRAY
F16TEXTURE2DRECT
F16TEXTURE3D
F16TEXTUREBUFFER
F16TEXTURECUBE
F16TEXTURECUBEARRAY
F16VEC2
F16VEC3
F16VEC4
F32MAT2
F32MAT2X2
F32MAT2X3
F32MAT2X4
F32MAT3
F32MAT3X2
F32MAT3X3
F32MAT3X4
F32MAT4
F32MAT4X2
F32MAT4X3
F32MAT4X4
F32VEC2
F32VEC3
F32VEC4
F64MAT2
F64MAT2X2
F64MAT2X3
F64MAT2X4
F64MAT3
F64MAT3X2
F64MAT3X3
F64MAT3X4
F64MAT4
F64MAT4X2
F64MAT4X3
F64MAT4X4
F64VEC2
F64VEC3
F64VEC4
F6HPJ6f
F6HlJ6N
F8H+F0H
F8H9F@u
F8H;F@r
F8I;F@r
F8L;}Ht
F@H9D$8
FCOOPMATNV
FConvert
FEATURES
FHH9BHtDL
FIU,I,I
FIU,I,I,I
FIU,S,F
FIU,S,F,,I
FIU,S,F,I
FIU,S,F,I,U
FIU,s,F
FIU,s,F,,I
FIU,s,F,,I,U
FIU,s,F,F
FIU,s,F,F,I
FLOAT16CONSTANT
FLOAT16_T
FLOAT32_T
FLOAT64_T
FLOATCONSTANT
FLOATLITERAL
FLOATSUFFIX
FMax3AMD
FMid3AMD
FMin3AMD
FNegate
FOrdEqual
FOrdGreaterThan
FOrdGreaterThanEqual
FOrdLessThan
FOrdLessThanEqual
FOrdNotEqual
FP Fast Math Mode
FP Rounding Mode
FPD8ohu)H
FPD9}Tu
FPFastMathMode
FPH9FHu
FPRoundingMode
FPRoundingMode decoration can be applied only to a width-only conversion instruction for floating-point object
FPRoundingMode decoration can be applied only to the Object operand of an OpStore
FPRoundingMode decoration can be applied only to the Object operand of an OpStore in the StorageBuffer, PhysicalStorageBufferEXT, Uniform, PushConstant, Input, or Output Storage Classes
FPRoundingMode decoration can be applied only to the Object operand of an OpStore storing through a pointer to a 16-bit floating-point scalar or vector object
FUI,F,F,F
FUI,S,F
FUI,U,F
FUnordEqual
FUnordGreaterThan
FUnordGreaterThanEqual
FUnordLessThan
FUnordLessThanEqual
FUnordNotEqual
FXD90u
FXH9FXu
F\Mcf`E
FaceForward
Failed to add global variable, see previous warning
Failed to create dxc compiler instance, error 0x%x
Failed to optimize shader
Failed to translate partitioning or outputtoplogy HLSL attributes
Failed to translate semantic '%s' BuildMetaDataComments(2139
FakeBindlessTexture2D
False Label
Fast-Math Mode
Feature combo %s referenced in expression doesn't exist
Feature source "%s" on bool variable "%s" must stay in the range 0..1
Feature source "%s" on variable "%s" can only be set to an int, bool or float
FeatureToBool
FeatureToFloat
FeatureToInt
Features
February
FhH9F`t
File exists
File has not been opened
File to append -stats and -timer output to
File too large
Filename too long
FillMode
Finalizer
Find@CUtlSymbolTable@@QEBA?AVCUtlSymbol@@PEBD@Z
FindClose
FindFirstFileExW
FindILsb
FindNextFileW
FindSMsb
FindUMsb
First block
FixSlashes@CBufferString@@QEAAPEBDD@Z
FixupPathName@CBufferString@@QEAAPEBDD@Z
FlagArtificial
FlagExplicit
FlagFwdDecl
FlagIndirectVariable
FlagIsDefinition
FlagIsEnumClass
FlagIsLocal
FlagIsOptimized
FlagIsPrivate
FlagIsProtected
FlagIsPublic
FlagLValueReference
FlagObjectPointer
FlagPrototyped
FlagRValueReference
FlagStaticMember
FlagTypePassByReference
FlagTypePassByValue
Flatten
Flatten conditional assignments into select instructions
Float Value
Float16
Float16Buffer
Float16ImageAMD
Float64
Floating-Point Rounding Mode
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
FlushFileBuffers
FlushProcessWriteBuffers
FogFragCoord
For OpExecutionModeId all Extra Operand ids must be constant instructions
For Vulkan OpTypeRuntimeArray can only
For Vulkan with RuntimeDescriptorArrayEXT, a variable
For Vulkan, OpTypeStruct variables containing
For Vulkan, an OpTypeStruct variable containing an
For WebGPU Memory no bits may be set for Memory Semantics of OpAtomic* instructions
For WebGPU OpTypeRuntimeArray can only
For WebGPU only ImageMemory may be set for Memory Semantics of OpMemoryBarrier
For WebGPU only WorkgroupMemory and AcquireRelease may be set for Memory Semantics of OpControlBarrier
For WebGPU, AcquireRelease must be set for Memory Semantics of OpControlBarrier
For WebGPU, ImageMemory must be set for Memory Semantics of OpMemoryBarrier
For WebGPU, OpTypeStruct variables containing
For WebGPU, WorkgroupMemory must be set for Memory Semantics of OpControlBarrier
For WebGPU, all blocks must be reachable, unless they are
For WebGPU, an OpTypeStruct variable containing an
For WebGPU, functions need to be defined before being called
For WebGPU, the only valid parameter to OpExtInstImport is "GLSL.std.450
For WebGPU, the only valid parameter to OpExtension is
For WebGPU, unreachable continue-target cannot be the target of a branch
For WebGPU, unreachable continue-target must be referenced by a loop instruction
For WebGPU, unreachable continue-target must be referenced by a reachable loop instruction
For WebGPU, unreachable continue-target must only contain an OpLabel and an OpBranch instruction
For WebGPU, unreachable continue-target must only have a back edge to a single reachable loop instruction
For WebGPU, unreachable continue-target must terminate with OpBranch
For WebGPU, unreachable merge-blocks cannot be the target of a branch
For WebGPU, unreachable merge-blocks must be referenced by a reachable merge instruction
For WebGPU, unreachable merge-blocks must only contain an OpLabel and OpUnreachable instruction
For WebGPU, unreachable merge-blocks must terminate with OpUnreachable
Format@CBufferString@@QEAAHPEBDZZ
Format@CUtlString@@QEAAHPEBDZZ
FormatMessageA
Forward pointers must point to a structure
Found result <id
Found size %d
Found unrecognized extension
Fraction
FragColor
FragCoord
FragData
FragDepth
FragFullyCoveredNV
FragInvocationCountEXT
FragSizeEXT
FragStencilRef
FragStencilRefEXT
Fragment
Fragment Index
Fragment execution model entry points can only specify one of OriginUpperLeft or OriginLowerLeft execution modes
Fragment execution model entry points can specify at most one fragment shader interlock execution mode
Fragment execution model entry points can specify at most one of DepthGreater, DepthLess or DepthUnchanged execution modes
Fragment execution model entry points require either an OriginUpperLeft or OriginLowerLeft execution mode
FragmentBarycentricNV
FragmentDensityEXT
FragmentFetchAMD
FragmentFullyCoveredEXT
FragmentMaskAMD
FragmentMaskFetchAMD
FragmentShaderPixelInterlockEXT
FragmentShaderSampleInterlockEXT
FragmentShaderShadingRateInterlockEXT
FragmentSizeNV
Free these instances
FreeEnvironmentStringsW
FreeLibrary
FreeLibraryWhenCallbackReturns
FreeMemoryBlock@CUtlString@@AEAAXXZ
Freeing Pass
FrexpStruct
From ARB_gl_spirv extension
From SPIR-V spec, section 3.32.8 on OpVariable
From Vulkan spec, section 14.5.1
From Vulkan spec, section 14.5.2
From WebGPU execution environment spec
FrontColor
FrontFacing
FrontSecondaryColor
Fu(M9xHu"H
Fu0H;^Hu
Fu8L9fHu2L
FullyCoveredEXT
FuncParamAttr
Function
Function %s() expects %d arguments. Found %d
Function Attrs
Function Call
Function Definition
Function Parameter Attribute
Function Parameters
Function Pass Manager
Function Type
Function declaration (id
Function declarations must appear before function definitions
Function definition (id
Function end cannot be called in blocks
Function end instructions must be in a function body
Function not implemented
Function parameter cannot be the first instruction
Function parameter instructions must be in a function body
Function parameter must be preceded by a function
Function parameters must only appear immediately after the function definition
Function storage class forbidden when the Shader capability is declared
FunctionCall
FunctionEnd
FunctionParameter
FunctionPass Manager
FwidthCoarse
FwidthFine
G 9C t H
G 9C un
G 9F vT
G(@80tEH
G(H+G H
G,9C,u!H
G-@8w,t
G-A8w,t
G-D8g,t
G-D8o,t
G-E8o,t
G090u"H
G09C0u
G0A9@0s
G0A;GXu
G8H;G@r
G8H;HHt
G8H;T$0t:A
G8I+G0H
G8I9G@H
G8I9G@u
G8I9G@u@A
G8I;G@r
G8L;@8uO
G@L;EHt
GHH9CHu
GHH9O0t
GHIJKLgMNggggggggOPQRSTggggggg7UgVgggggggggWXYgZ[\]^g_ggggggggggggggggggggggg`ab
GLCompute
GLES_30
GLES_31
GLSL back end gep missing value->string mapping
GLSL back end phi alias of non-mapped source
GLSL does not support multi-dimensional arrays (until GLSL v4.30 with GL_ARB_arrays_of_arrays). Currently only GLSL v4.00 + extensions is required
GLSL optimization: attempting to optimize uninitialized shader
GLSL optimization: failed to generate optimized shader
GLSL optimization: failed to get intermediate representation
GLSL to SPIR-V: attempting to get SPIR-V for uninitialized shader
GLSL to SPIR-V: failed to get intermediate representation
GLSL.std.450
GLSL450
GLSLPacked
GLSLShared
GL_3DL_array_objects
GL_AMD_gcn_shader
GL_AMD_gpu_shader_half_float
GL_AMD_gpu_shader_half_float_fetch
GL_AMD_gpu_shader_int16
GL_AMD_shader_ballot
GL_AMD_shader_explicit_vertex_parameter
GL_AMD_shader_fragment_mask
GL_AMD_shader_image_load_store_lod
GL_AMD_shader_trinary_minmax
GL_AMD_texture_gather_bias_lod
GL_ANDROID_extension_pack_es31a
GL_ARB_compute_shader
GL_ARB_derivative_control
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_shader_interlock
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_gpu_shader_int64
GL_ARB_post_depth_coverage
GL_ARB_sample_shading
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_clock
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_stencil_export
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_420pack
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_tessellation_shader
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_multisample
GL_ARB_texture_rectangle
GL_ARB_uniform_buffer_object
GL_ARB_viewport_array
GL_EXT_YUV_target
GL_EXT_buffer_reference
GL_EXT_buffer_reference2
GL_EXT_buffer_reference_uvec2
GL_EXT_control_flow_attributes
GL_EXT_debug_printf
GL_EXT_demote_to_helper_invocation
GL_EXT_device_group
GL_EXT_frag_depth
GL_EXT_fragment_invocation_density
GL_EXT_geometry_point_size
GL_EXT_geometry_shader
GL_EXT_gpu_shader5
GL_EXT_multiview
GL_EXT_nonuniform_qualifier
GL_EXT_post_depth_coverage
GL_EXT_primitive_bounding_box
GL_EXT_ray_query
GL_EXT_ray_tracing
GL_EXT_samplerless_texture_functions
GL_EXT_scalar_block_layout
GL_EXT_shader_16bit_storage
GL_EXT_shader_8bit_storage
GL_EXT_shader_atomic_int64
GL_EXT_shader_explicit_arithmetic_types
GL_EXT_shader_explicit_arithmetic_types_float16
GL_EXT_shader_explicit_arithmetic_types_float32
GL_EXT_shader_explicit_arithmetic_types_float64
GL_EXT_shader_explicit_arithmetic_types_int16
GL_EXT_shader_explicit_arithmetic_types_int32
GL_EXT_shader_explicit_arithmetic_types_int64
GL_EXT_shader_explicit_arithmetic_types_int8
GL_EXT_shader_image_load_formatted
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_realtime_clock
GL_EXT_shader_subgroup_extended_types_float16
GL_EXT_shader_subgroup_extended_types_int16
GL_EXT_shader_subgroup_extended_types_int64
GL_EXT_shader_subgroup_extended_types_int8
GL_EXT_shader_texture_lod
GL_EXT_shadow_samplers
GL_EXT_tessellation_point_size
GL_EXT_tessellation_shader
GL_EXT_texture_buffer
GL_EXT_texture_cube_map_array
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
GL_INTEL_shader_integer_functions2
GL_KHR_blend_equation_advanced
GL_KHR_memory_scope_semantics
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_vote
GL_NVX_multiview_per_view_attributes
GL_NV_compute_shader_derivatives
GL_NV_conservative_raster_underestimation
GL_NV_cooperative_matrix
GL_NV_fragment_shader_barycentric
GL_NV_geometry_shader_passthrough
GL_NV_integer_cooperative_matrix
GL_NV_mesh_shader
GL_NV_ray_tracing
GL_NV_sample_mask_override_coverage
GL_NV_shader_atomic_int64
GL_NV_shader_noperspective_interpolation
GL_NV_shader_sm_builtins
GL_NV_shader_subgroup_partitioned
GL_NV_shader_texture_footprint
GL_NV_shading_rate_image
GL_NV_stereo_view_rendering
GL_NV_viewport_array2
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_geometry_point_size
GL_OES_geometry_shader
GL_OES_gpu_shader5
GL_OES_primitive_bounding_box
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_standard_derivatives
GL_OES_tessellation_point_size
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_buffer
GL_OES_texture_cube_map_array
GL_OES_texture_storage_multisample_2d_array
GL_OVR_multiview
GL_OVR_multiview2
GPL;C(u
GREATER
GREATER_EQUAL
GXH9CXu
G`H9C`t
G`I;Ghr
Gather instructions for LunarGLASS
GatherAlL9
GatherAlpha
GatherBlL9
GatherBlue
GatherCmH
GatherCmp
GatherCmpAlpha
GatherCmpBlue
GatherCmpGreen
GatherCmpRed
GatherGrL9
GatherGreen
GatherReL9
GatherRed
General options
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
Generating variable pointers requires capability
Generator
Generic
GenericCastToPtr
GenericCastToPtrExplicit
GenericPointer
GenericPtrMemSemantics
GenuineIA
Geometry
Geometry Shader
Geometry execution model entry points must specify exactly one of InputPoints, InputLines, InputLinesAdjacency, Triangles or InputTrianglesAdjacency execution modes
Geometry execution model entry points must specify exactly one of OutputPoints, OutputLineStrip or OutputTriangleStrip execution modes
GeometryIndexEXT
GeometryPointSize
GeometryShaderPassthroughNV
GeometryStreams
Get@CUtlBuffer@@QEAA_NPEAXH@Z
GetCPInfo
GetCPUInformation
GetCommandLineA
GetCommandLineW
GetConsoleCP
GetConsoleMode
GetConsoleScreenBufferInfo
GetCurrentPackageId
GetCurrentProcess
GetCurrentProcessId
GetCurrentProcessorNumber
GetCurrentThreadId
GetDateFormatEx
GetDefaultMiniDumpTypeFlags
GetDefaultQueue
GetDimenH9
GetDimensions
GetEnvironmentStringsW
GetFileAttributesW
GetFileInformationByHandle
GetFileInformationByHandleEx
GetFileSizeEx
GetFileType
GetKernelLocalSizeForSubgroupCount
GetKernelMaxNumSubgroups
GetKernelNDrangeMaxSubGroupSize
GetKernelNDrangeSubGroupCount
GetKernelPreferredWorkGroupSizeMultiple
GetKernelWorkGroupSize
GetLastError
GetLocaleInfoEx
GetLocaleInfoW
GetMaxPipePackets
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetNumPipePackets
GetOEMCP
GetProcAddress
GetProcessHeap
GetProcessTimes
GetRenderTargetSampleCount
GetRenderTargetSamplePosition
GetSamplePosition
GetStartupInfoW
GetStdHandle
GetString@CUtlBuffer@@QEAAXPEADH@Z
GetStringTypeW
GetSystemTimeAsFileTime
GetSystemTimePreciseAsFileTime
GetTickCount64
GetTimeFormatEx
GetUserDefaultLCID
GetUserDefaultLocaleName
Global
Global Value Numbering
Global Variable Optimizer
GlobalInvocationID
GlobalInvocationId
GlobalLinearId
GlobalOffset
GlobalSize
GlobalWorkOffset
GlobalWorkSize
Globals
Glslang
Glslang Reference Front End
Google Clspv
Google MLIR SPIR-V Serializer
Google Shaderc over Glslang
Google rspirv
Google spiregg
GpI;Gxr
Granularity
GroupAll
GroupAny
GroupAsyncCopy
GroupBroadcast
GroupCommitReadPipe
GroupCommitWritePipe
GroupDecorate
GroupFAdd
GroupFAddNonUniformAMD
GroupFMax
GroupFMaxNonUniformAMD
GroupFMin
GroupFMinNonUniformAMD
GroupIAdd
GroupIAddNonUniformAMD
GroupMemberDecorate
GroupMemoryBarrier
GroupMemoryBarrierWithGroupSync
GroupNonUniform
GroupNonUniformAll
GroupNonUniformAllEqual
GroupNonUniformAny
GroupNonUniformArithmetic
GroupNonUniformBallot
GroupNonUniformBallotBitCount
GroupNonUniformBallotBitExtract
GroupNonUniformBallotFindLSB
GroupNonUniformBallotFindMSB
GroupNonUniformBitwiseAnd
GroupNonUniformBitwiseOr
GroupNonUniformBitwiseXor
GroupNonUniformBroadcast
GroupNonUniformBroadcastFirst
GroupNonUniformClustered
GroupNonUniformElect
GroupNonUniformFAdd
GroupNonUniformFMax
GroupNonUniformFMin
GroupNonUniformFMul
GroupNonUniformIAdd
GroupNonUniformIMul
GroupNonUniformInverseBallot
GroupNonUniformLogicalAnd
GroupNonUniformLogicalOr
GroupNonUniformLogicalXor
GroupNonUniformPartitionNV
GroupNonUniformPartitionedNV
GroupNonUniformQuad
GroupNonUniformQuadBroadcast
GroupNonUniformQuadSwap
GroupNonUniformSMax
GroupNonUniformSMin
GroupNonUniformShuffle
GroupNonUniformShuffleDown
GroupNonUniformShuffleRelative
GroupNonUniformShuffleUp
GroupNonUniformShuffleXor
GroupNonUniformUMax
GroupNonUniformUMin
GroupNonUniformVote
GroupReserveReadPipePackets
GroupReserveWritePipePackets
GroupSMax
GroupSMaxNonUniformAMD
GroupSMin
GroupSMinNonUniformAMD
GroupUMax
GroupUMaxNonUniformAMD
GroupUMin
GroupUMinNonUniformAMD
GroupWaitEvents
H A;I r
H H9)uPH
H I9J u
H L;9uJH
H SUVWATAUAVAWH
H UATAUAVAWH
H UVAUAWH
H WAUAVAWH
H(H9H u8
H(L99t!H
H(L;H t
H+KhH+{hH
H+L$ xFH
H+U@L+u@H
H+|$pE2
H-@8x,t
H-D8x,t
H0;K0u?H
H0D;J0uL3
H0H9K0u}H
H0H;K0u
H0I+H(H
H3A(L3I0H
H3E H3E
H8H9H@u
H8H9H@uj
H8H9K8usH
H9C@uiH
H9D$8u
H9D$@u
H9D$Xu'H
H9D$Xu+H
H9D$pt)E
H9Eos.H
H9G t!H
H9L$(u
H9L$8r2M
H9L$8t
H9L$8t5
H9L$@r:H
H9L$Ht?H
H9WHuFH9PHt
H9Y(uwI
H9h@u'H
H9hHuOH
H9i@vuL
H9kxtgH
H9t$@tYH
H9z(t`E
H9|$(un
H9|$Hu
H9|$xt
H;CHtgI
H;D$8t'H
H;D$XuVH
H;D$ht#H
H;D$htbH
H;D$xtuH
H;EwtGH
H;FXt!H
H;J s2I
H;L$Pr"A
H;L$ht[fff
H;Q s_H
H;Q snH
H;Q soH
H;WHu4H
H;Y sNH
H;Y sTL9E
H;Y tWL
H;YXt]H
H;Z sXH
H;\$huBH
H;]Xt=H
H;k u<L
H;k(u<L
H;y s8L
H;y s>I
H;|$ t I
H;|$Ht5
H;}Xt2L
H@H+H8H
H@I+H8H
HA^A]A
HA_A^A]A
HCUtlString@@QEBA?AV0@AEBV0@@Z
HEXINTEGERLITERAL
HEX_DIGIT
HH9H@u6
HH9J@u
HH:mm:ss
HH;D$`r
HH;|$Pr
HHH9HPu
HI9H@u#A
HI9O@u$A
HIGH_PRECISION
HITATTREXT
HITATTRNV
HLSL lexer encountered %d %s
HLSL parser encountered %d %s
HLSL parsing failed
HM;OHt
HR><y5
HalfFloat
HangWatchdogInternal_BeginScope
HangWatchdogInternal_EndScope
Having
HcD$pLce
HcL$4H
HcS LcK
HcT$0E3
HcT$4E3
Header block
HelperInvocation
HighPrecisionBlendEnable
Hit Kind
Hit Parameter
HitAttributeKHR
HitAttributeNV
HitKindKHR
HitKindNV
HitTKHR
HkD$0pI
HlslCounterBufferGOOGLE
HlslSemanticGOOGLE
Hoist conditional stores if an unconditional store preceeds
Host CPU
Hull Shader
I A9H r
I could not work out what I was expecting, like so many of us these days
I(H;H t8H
I(H;H tRH
I(H;H t_H
I(H;J t
I0L+I(I
I16VEC2
I16VEC3
I16VEC4
I32VEC2
I32VEC3
I32VEC4
I64VEC2
I64VEC3
I64VEC4
I8H+H0H
I94$t$I
I9L$@u(A
I9NHtcI
I9}(tiH
I;7uPI;h r
I;FHuFH
I;F`t'H
I;^(t2J
I;^Ht$D
I;_(tzH
I;_HtBL
IAddCarry
IAddSatINTEL
IAverageINTEL
IAverageRoundedINTEL
ICOOPMATNV
ID already mapped
ID already used in module
ID bound
ID not found
ID out of range
ID overflow. Try running compact-ids
ID unused in module
IDENTIFIER
IDxcCompiler3::Compile failed with error 0x%x
IDxcResult::GetResult() returned error 0x%x
IDxcResult::GetStatus gave error 0x%x
IIMAGE1D
IIMAGE1DARRAY
IIMAGE2D
IIMAGE2DARRAY
IIMAGE2DMS
IIMAGE2DMSARRAY
IIMAGE2DRECT
IIMAGE3D
IIMAGEBUFFER
IIMAGECUBE
IIMAGECUBEARRAY
IMAGE1D
IMAGE1DARRAY
IMAGE2D
IMAGE2DARRAY
IMAGE2DMS
IMAGE2DMSARRAY
IMAGE2DRECT
IMAGE3D
IMAGEBUFFER
IMAGECUBE
IMAGECUBEARRAY
IMul32x16INTEL
INCLUDE_BINDLESS_CONSTANTS
INCR_SAT
IND)ind
INFINITY
INT16CONSTANT
INT16_T
INT32CONSTANT
INT32_T
INT64CONSTANT
INT64_T
INTCONSTANT
INTEGERLITERAL
INTERNAL ERROR
INVARIANT
INV_DEST_ALPHA
INV_DEST_COLOR
INV_SRC1_ALPHA
INV_SRC1_COLOR
INV_SRC_ALPHA
INV_SRC_COLOR
INotEqual
IO Intrinsic
IO failure on output stream
IO metadata for type
IOS_VULKAN
IOS_VULKAN_4_0
IO_getc
IO_putc
IR Dump After
IR Dump Before
IR after last pass
IR before pass
ISAMPLER1D
ISAMPLER1DARRAY
ISAMPLER2D
ISAMPLER2DARRAY
ISAMPLER2DMS
ISAMPLER2DMSARRAY
ISAMPLER2DRECT
ISAMPLER3D
ISAMPLERBUFFER
ISAMPLERCUBE
ISAMPLERCUBEARRAY
ISUBPASSINPUT
ISUBPASSINPUTMS
ISubBorrow
ISubSatINTEL
ITEXTURE1D
ITEXTURE1DARRAY
ITEXTURE2D
ITEXTURE2DARRAY
ITEXTURE2DMS
ITEXTURE2DMSARRAY
ITEXTURE2DRECT
ITEXTURE3D
ITEXTUREBUFFER
ITEXTURECUBE
ITEXTURECUBEARRAY
IV Users for loop
IV.S.next
IVfxShaderValidator::GetActiveUniforms failed
IVfxShaderValidator::GetActiveUniformsBlocks failed
IXH;OHr
Id is 0
Identify the structures in a structured-cfg
If OpTypeBool is stored in conjunction with OpVariable, it
IgnoreIntersectionKHR
IgnoreIntersectionNV
Il?333333c
Illegal byte sequence
Illegal number of components
Illegal to have non-comment, non-whitespace tokens before #version
Image 'Dim' cannot be Cube
Image 'Dim' cannot be SubpassData
Image 'Dim' must be 1D, 2D, 3D or Cube
Image 'Dim' must be 1D, Buffer, 2D, Cube, 3D or Rect
Image 'Dim' must be 2D
Image 'MS' must be 0
Image 'MS' must be 1
Image Dim SubpassData cannot be used with ImageSparseRead
Image Dim SubpassData cannot be used with OpImageTexelPointer
Image Image 'MS' parameter to be 0
Image Image 'arrayed' parameter to be 0
Image Operand Bias can only be used with ImplicitLod opcodes
Image Operand Bias requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand Bias requires 'MS' parameter to be 0
Image Operand ConstOffset cannot be used with Cube Image 'Dim
Image Operand ConstOffsets can only be used with OpImageGather and OpImageDrefGather
Image Operand ConstOffsets cannot be used with Cube Image 'Dim
Image Operand Grad can only be used with ExplicitLod opcodes
Image Operand Grad requires 'MS' parameter to be 0
Image Operand Lod can only be used with ExplicitLod opcodes
Image Operand Lod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand Lod requires 'MS' parameter to be 0
Image Operand MakeTexelAvailableKHR can only be used with Op
Image Operand MakeTexelAvailableKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MakeTexelVisibleKHR can only be used with Op
Image Operand MakeTexelVisibleKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MinLod can only be used with ImplicitLod
Image Operand MinLod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand MinLod requires 'MS' parameter to be 0
Image Operand Offset cannot be used with Cube Image 'Dim
Image Operand Sample can only be used with OpImageFetch
Image Operand Sample requires non-zero 'MS' parameter
Image Operand bits Lod and Grad cannot be set at the same time
Image Operands Offset, ConstOffset, ConstOffsets cannot be used
Image Type
Image must have either 'MS'=1 or 'Sampled'=0 or 'Sampled'=2
Image1D
ImageBasic
ImageBuffer
ImageCubeArray
ImageDrefGather
ImageFetch
ImageFootprintNV
ImageGather
ImageGatherBiasLodAMD
ImageGatherExtended
ImageMSArray
ImageMemory
ImageMipmap
ImageQuery
ImageQueryFormat
ImageQueryLevels
ImageQueryLod
ImageQueryOrder
ImageQuerySamples
ImageQuerySize
ImageQuerySizeLod
ImageRead
ImageReadWrite
ImageReadWriteLodAMD
ImageRect
ImageSampleDrefExplicitLod
ImageSampleDrefImplicitLod
ImageSampleExplicitLod
ImageSampleFootprintNV
ImageSampleImplicitLod
ImageSampleProjDrefExplicitLod
ImageSampleProjDrefImplicitLod
ImageSampleProjExplicitLod
ImageSampleProjImplicitLod
ImageSparseDrefGather
ImageSparseFetch
ImageSparseGather
ImageSparseRead
ImageSparseSampleDrefExplicitLod
ImageSparseSampleDrefImplicitLod
ImageSparseSampleExplicitLod
ImageSparseSampleImplicitLod
ImageSparseSampleProjDrefExplicitLod
ImageSparseSampleProjDrefImplicitLod
ImageSparseSampleProjExplicitLod
ImageSparseSampleProjImplicitLod
ImageSparseTexelsResident
ImageTexelPointer
ImageWrite
Imagination
ImplicitLod instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
ImplicitLod instructions require Fragment or GLCompute execution model
ImportedDeclaration
ImportedModule
Improper link
In Logical addressing with variable pointers, variables
In Logical addressing, variables may not allocate a pointer
In OpPhi instruction
In Vulkan, BufferBlock is disallowed on variables in the StorageBuffer storage class
In the OpenCL environment, Arrayed may only be set to 1
In the OpenCL environment, the optional Access Qualifier
In the Vulkan environment, GLCompute execution model entry points require either the LocalSize execution mode or an object decorated with WorkgroupSize must be specified
In the Vulkan environment, cannot store to Uniform Blocks
In the Vulkan environment, the OriginLowerLeft execution mode must not be used
In the Vulkan environment, the PixelCenterInteger execution mode must not be used
InBoundsAccessChain
InBoundsPtrAccessChain
Inappropriate I/O control operation
InclusiveScan
IncomingCallableDataKHR
IncomingCallableDataNV
IncomingRayFlagsKHR
IncomingRayFlagsNV
IncomingRayPayloadKHR
IncomingRayPayloadNV
IncremenH9
IncrementCounter
IndependentBlendEnable
Index Offset
Index is out of bounds
Index is out of bounds, can not find index
Indexes
Indexes passed to
Induction Variable Simplification
Induction Variable Users
InitEmpty@CStrAutoEncode@@AEAAXXZ
InitOnceExecuteOnce
InitializeConditionVariable
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeSListHead
InitializeSRWLock
Initializer
Initializer type must match the type pointed to by the Result Type
Initializers must match
Inline Cost Analysis
Inlined At
Inorder Dominator Tree
Inorder PostDominator Tree
Input/output error
InputAttachment
InputAttachmentArrayDynamicIndexing
InputAttachmentArrayDynamicIndexingEXT
InputAttachmentArrayNonUniformIndexing
InputAttachmentArrayNonUniformIndexingEXT
InputAttachmentIndex
InputLines
InputLinesAdjacency
InputPatch
InputPoints
InputTrianglesAdjacency
Insert
Insert@CBufferString@@QEAAPEBDHPEBDH_N@Z
InstanceCustomIndexKHR
InstanceCustomIndexNV
InstanceId
InstanceIndex
Instruction
Instruction cannot be used without a variable pointers capability
Instruction reserved for future use, use of this instruction
Int64Atomics
Integer Value
IntegerFunctions2INTEL
Intensity
Intentionally vague touch behavior for %p
Interface
Interface variable id
Interfaces passed to OpEntryPoint must be of type OpTypeVariable. Found Op
InterlocH
InterlockedAdd
InterlockedAnd
InterlockedCompareExchange
InterlockedCompareStore
InterlockedExchange
InterlockedFlushSList
InterlockedMax
InterlockedMin
InterlockedOr
InterlockedXor
Internal Error
Internal error: Unhandled operand type
Internal error: empty execution models for function id
Internal error: missing function id
Internal error: unhandled header parse failure
InterpolateAtCentroid
InterpolateAtOffset
InterpolateAtSample
InterpolateAtVertexAMD
Interpolation and auxiliary storage qualifiers must match
InterpolationFunction
Interprocedural Sparse Conditional Constant Propagation
Interrupted function call
IntersectionKHR
IntersectionNV
Intrinsic in Bottom IR
InvTextureDim
InvViewportSize
Invalid
Invalid Arrayed
Invalid Depth
Invalid MS
Invalid OpSwitch: selector id
Invalid Opcode name 'Op
Invalid SPIR-V binary version
Invalid SPIR-V header
Invalid SPIR-V magic number
Invalid SPIR-V.  The id bound is larger than the max id bound
Invalid Sampled
Invalid argument
Invalid binding
Invalid character '%c' in swizzle operation. Only xyzw or rgba are allowed
Invalid descriptor set name used in layout specifier
Invalid escape sequence
Invalid extended instruction import
Invalid extended instruction number
Invalid initializer for spec onstant
Invalid instruction Op
Invalid instruction word count
Invalid member count in texture template structure
Invalid number of bits
Invalid opcode
Invalid operator
Invalid pointer storage class
Invalid scope value
Invalid seek
Invalid semantics value
Invalid shader In/Out variable
Invalid shader In/Out variable semantic
Invalid shader program CVfxGL::CompileShaderAndGetVariables(2480
Invalid shader program for CVfxGL::GetAllShaderVariables
Invalid storage class for pointer operand
Invalid storage class for target environment
Invalid storage class semantics value
Invalid texture template struct member type
Invalid texture template type
Invalid use of 8- or 16-bit result
Invalid use of function result id
Invalid use of function type result id
Invalid value data type for annotation %s
Invalid variable index to flattened array
Invalid word count: Op
Invariant
InverseSqrt
Invocation
InvocationID
InvocationId
Invocations
InvocationsPerPixelNV
Invoke
InvokeMiniDumpHandler
Is a directory
IsDebuggerPresent
IsEqual_CaseSensitive@CUtlString@@QEBA_NPEBD@Z
IsFinite
IsHelperInvocation
IsHelperInvocationEXT
IsNormal
IsProcessorFeaturePresent
IsValidCodePage
IsValidEvent
IsValidLocale
IsValidLocaleName
IsValidReserveId
Isolines
IterationMultiple
IterationMultiple loop control operand must be greater than zero
Its Storage Class operand must be the same as the Storage Class
J&b(b*b,b.b0b2b4b6b8b:b<b>b@bBbDbFbHbJbLbNbPbRbTbVbXbZb\b^b`bb,d2
J&b(b*b,b.b0b2b4b6b8b:b<b>b@bBbDbFbHbJbLbNbPbRbTbVbXbZb\b^b`bbbd*f2
J&b(b*b,b.b0b2b4b6b8b:b<b>b@bBbDbFbHbJbLbNbPbRbTbVbXbZb\b^b`bbbdbfbh*j2
J(A;N A
J0E+J(t
J943v"H
J@H+J8H
JJJJ;;;;JJJJUD
JJJJJJJ
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J
January
K D;H r
K WATAUAVAWH
K WAUAVAWH
K(HcS I
K(L91t!H
K-@8s,t
K-D8k,t
K0H9K8u
K0L+K(I
K8H9K0u
K8H;^Ht
K@H+K8H
K@H+K8I
K@I;MHt
KERNEL32.dll
K`H+KXH
Kernel32.dll
Khronos
Khronos Glslang Reference Front End
Khronos LLVM/SPIR-V Translator
Khronos SPIR-V Tools Assembler
Khronos SPIR-V Tools Linker
L#D$8E3
L#D$HE3
L$ H9L$(u
L$ H;L
L$ H;L$(t
L$ L#I0M
L$ SUVWATAUAWH
L$ SUVWATAWH
L$ SUVWH
L$ SVWH
L$ SWAVAWH
L$ UATAUAVAWH
L$ UAUAVAWH
L$ USVWAUAVAWH
L$ USWH
L$ UVWATAUAVAWH
L$ UVWH
L$ VWAVH
L$ WATAUAVAWH
L$ WAVAWH
L$(9ADu*H
L$(H+L$ H
L$(H;L$0r
L$0H+L$(H
L$0H9L$8u
L$0H9i r
L$0H;L$8
L$0H;L$8H
L$0H;L$8t
L$0L;L$ t
L$4+L$8
L$8D8t$0
L$8H+L$0H
L$8H;L$@r
L$8f9A:u*H
L$@H9Y r
L$H9L$0u
L$HD8t$0
L$HH9L
L$HH;L$P
L$HH;L$X
L$Hu-H
L$PH9L$Xuq
L$PH;L$XupL
L$TH;T$pt
L$XH;L$`r
L$XH;Mwu!H
L$`wVf
L$hH9F t
L$hL9t$pu
L$hN;4
L$pH9L$xu
L$pH;L$xumH
L9A@v4E3
L9CHu M
L9D$Hu
L9G0uuH
L9HHuGL
L9O0t6I
L9a(t\H
L9d$ t3L
L9d$`u
L9d$hu
L9eg}JH
L9s r$w
L9t$Ht2H
L9t$Ht]H
L9t$Pv#H
L9x(r L
L9x(uBH
L9}ptJH
L9~ t3H
L;0uGH
L;8uoD
L;A sXH
L;I@sKK
L;L$Xt3A
L;a syM
L;a }TH
L;q sfI9T
L;q soH
L;q spH
L;t$8txH
L;{ u?M
L?UUUUUUU
LCIDToLocaleName
LCMapStringEx
LCMapStringW
LC_COLLATE
LC_CTYPE
LC_MONETARY
LC_NUMERIC
LC_TIME
LEFT_ANGLE
LEFT_ASSIGN
LEFT_BRACE
LEFT_BRACKET
LEFT_OP
LEFT_PAREN
LESS_EQUAL
LE_BGRA8888
LE_BGRX8888
LINEAR_ABGR8888
LINEAR_ARGB8888
LINEAR_BGR888
LINEAR_BGRA8888
LINEAR_BGRX5551
LINEAR_BGRX8888
LINEAR_D24S8
LINEAR_I8
LINEAR_RGB888
LINEAR_RGBA16161616
LINEAR_RGBA8888
LLVM (http://llvm.org
LLVM ERROR
LLVM/SPIR-V Translator
LOG_GENERAL
LOW_PRECISION
Label instructions must be in a function body
LaunchIdKHR
LaunchIdNV
LaunchSizeKHR
LaunchSizeNV
LayerPerViewNV
Layout qualification must match
Lazy Value Information Analysis
LcC LcK
LcC LcS
LcJ LcR
LcK Lc
Lct$hLce
Lct$lLce
LeaveCriticalSection
Left@CUtlString@@QEBA?AV1@H@Z
LeftMatrix
Length
Length is not defined
LessOrGreater
Level of Detail
LifetimeStart
LifetimeStop
LinePos
LineStream
Link failed; no code produced.  Log string from glslang
Linkage
Linkage Attributes
Linkage Name
Linkage Type
LinkageAttributes
Linked
Linker Objects
Linking
Literal String
Literal string is longer than
LiteralSampler
Load cooperative matrix
LoadLibraryExW
Loading cached shader: %s
Local Size
Local Variable
LocalFree
LocalId
LocalInvocationID
LocalInvocationId
LocalInvocationIndex
LocalSize
LocalSizeHint
LocalSizeHintId
LocalSizeId
LocalWorkSize
LocaleNameToLCID
Location
Lock@CThreadFastMutex@@AECAXPEBDHII@Z
Lock@CThreadMutex@@QEAAXPEBDH@Z
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@AEBULeafCodeInfo_t@@PEBDZZ
LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@VColor@@PEBDZZ
LoggingSystem_RegisterLoggingChannel
Logical
Logical addressing not supported
LogicalAnd
LogicalEqual
LogicalNot
LogicalNotEqual
LogicalOr
Loop Body
Loop Condition
Loop Invariant Code Motion
Loop Pass Manager
Loop Strength Reduction
Loop Terminal Expression
Loop at depth
Loop header
Loop with condition
Loop-Closed SSA Form Pass
LoopMerge
Luminance
LunarGLASS bottom translator pass
LunarGLASS unsupported functionality: %s
LunarGOO output
M(H+M H
M(H9C t
M-@8u,t
M8H+M0H
M8I9M@u:A
M9P@u(A
M9f t1A
M9fptm
M9l$HtFI
M@H;MHr
M@I+M8H
M@I+M8I
MATRIX_TYPE
MD5Final
MD5Init
MD5Update
MD9HDu
MEDIUM_PRECISION
MHH;QPtSH
MHI9MPu"A
MIN_LINEAR_MAG_MIP_POINT
MIN_LINEAR_MAG_POINT_MIP_LINEAR
MIN_MAG_LINEAR_MIP_POINT
MIN_MAG_MIP_LINEAR
MIN_MAG_MIP_POINT
MIN_MAG_POINT_MIP_LINEAR
MIN_POINT_MAG_LINEAR_MIP_POINT
MIN_POINT_MAG_MIP_LINEAR
MIRROR_ONCE
MLIR SPIR-V Serializer
MM/dd/yy
MOBILE_GLES_3_0
MOBILE_GLES_3_1
MOD_ASSIGN
MPI;MXr
MS must be 0 in the OpenCL environement
MUL_ASSIGN
MXH+MPH
Macro redefined; different argument names
Macro redefined; different number of arguments
Macro redefined; different substitutions
Macro redefined; function-like versus object-like
Made Modification
Make the -lowerinvoke pass insert expensive, but correct, EH code
MakeAvailable
MakeAvailableKHR
MakeAvailableKHR Memory Semantics also requires either Release or AcquireRelease Memory Semantics
MakePointerAvailable
MakePointerAvailableKHR
MakePointerAvailableKHR cannot be used with OpLoad
MakePointerVisible
MakePointerVisibleKHR
MakePointerVisibleKHR cannot be used with OpStore
MakePointerVisibleKHR is specified
MakeTexelAvailable
MakeTexelAvailableKHR
MakeTexelVisible
MakeTexelVisibleKHR
MakeVisible
MakeVisibleKHR
MakeVisibleKHR Memory Semantics also requires either Acquire or AcquireRelease Memory Semantics
Materializable
MathLib_Init
Matrix
Matrix Stride
Matrix access is out of bounds, matrix has
Matrix types can only be parameterized as having only 2, 3, or 4 columns
Matrix types can only be parameterized with floating-point types
MatrixInverse
MatrixStride
MatrixTimesMatrix
MatrixTimesScalar
MatrixTimesVector
Max recurse depth (default = 1000
MaxAniso
MaxByteOffset
MaxByteOffsetId
MaxIterations
Maximum CGSCCPassMgr iterations on one SCC
Maximum Control Flow nesting depth exceeded
Maximum number of iterations SCEV will symbolically execute a constant derived loop
MbcntAMD
McA McQ
MemAlloc_AllocFunc
MemAlloc_CallocFunc
MemAlloc_FreeFunc
MemAlloc_ReallocFunc
MemAlloc_StrDupWrapperFunc
Member
Member 0 type
MemberDecorate
MemberDecorateString
MemberDecorateStringGOOGLE
MemberName
Memory
Memory Access
Memory Dependence Analysis
Memory Scope QueueFamilyKHR requires capability
Memory Semantics Acquire and AcquireRelease cannot be used with
Memory Semantics MakeAvailableKHR requires capability
Memory Semantics MakeVisibleKHR requires capability
Memory Semantics OutputMemoryKHR requires capability
Memory Semantics Release and AcquireRelease cannot be used for operand Unequal
Memory Semantics UniformMemory requires capability Shader
Memory Semantics Volatile can only be used with atomic instructions
Memory Semantics Volatile requires capability VulkanMemoryModelKHR
Memory Semantics can have at most one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
Memory Semantics ids must be OpConstant when Shader capability is present
Memory Semantics must be a constant instruction when CooperativeMatrixNV capability is present
Memory accesses with PhysicalStorageBufferEXT must use Aligned
Memory model must be OpenCL in the OpenCL environment
Memory model must be VulkanKHR for WebGPU environment
Memory qualifiers must match
MemoryBarrier
MemoryBarrierAtomicCounter
MemoryBarrierBuffer
MemoryBarrierImage
MemoryBarrierShared
MemoryModel
MemoryNamedBarrier
Merge Block
Merge Block and Continue Target must be different ids
Merge Block may not be the block containing the OpLoopMerge
Merge Duplicate Global Constants
Mesa-IR/SPIR-V Translator
MeshShadingNV
MeshViewCountNV
MeshViewIndicesNV
Metadata
MhH;Mpr
MinIterations
MipBias
Mismatched Token Exception
Mismatched set
Miss Index
MissKHR
Missing %s
Missing <EOF
Missing OpFunctionEnd at end of module
Missing SourceArg() annotation for variable %s with source type TextureDim
Missing argument
Missing entry point: Each stage requires one entry point
Missing function type definition
Missing module
Missing required OpMemoryModel instruction
Missing token
Missing token (%d
Mobile SM 3.0 (GLES 3.0
Mobile SM 3.0 (GLES 3.1
ModfStruct
Module Pass Manager
Module contains unreachable blocks during merge return.  Run dead branch elimination before merge return
Module has incomplete header: only
ModuleID
ModulePass Manager
ModuleProcessed
MpH9Mxu
MulAdd cooperative matrices
MultiByteToWideChar
MultiTexCoord0
MultiTexCoord1
MultiTexCoord2
MultiTexCoord3
MultiTexCoord4
MultiTexCoord5
MultiTexCoord6
MultiTexCoord7
MultiView
MultiViewport
Multiple case constructs have branches to the case construct that targets
Multiple function bodies in multiple compilation units for the same signature in the same stage
MultiplyH
MultisampleEnable
MurmurHash2
MurmurHash2LowerCase@@YAIPEBDI@Z
N H9T$ rCw
N H9T$(r
N H9T$@r
N-A8~,t
N0A9vlu
N0H9N(t
N0H9N8u
N0I+N(H
N0I9N8u$A
N8I9N@u4A
N8M;uHt
N@H+N8H
N@H+N8I
N@H;OHt
N@I+N8H
N@I;HHt
N@L9v t
NAN(IND
NAN(SNAN
ND Range
NEAREST
NHH;NPr
NHM;N@t
NONPRIVATE
NONUNIFORM
NOPERSPECTIVE
NOT_EQUAL
NPH;NXr
NPI;NXt
NULL ALIASEE
NV Acceleration Structure
NV_DST16
NV_DST24
NV_INTZ
NV_NULL
NV_RAWZ
NXI9N`u
N]TUUU
NamedBarrier
NamedBarrierInitialize
Natural Loop Information
Nearest
Negate conditional
Negate value
NegativeH
Neither a front-end constant nor a spec constant
Next token is
No Alias Analysis (always returns 'may' alias
No OpEntryPoint instruction was found. This is only allowed if the Linkage capability is being used
No child processes
No error
No errors.  No code generation or linking was requested
No function definition (body) found
No locks available
No loop body
No loop condition
No predecessors
No space left on device
No such device
No such device or address
No such file or directory
No such process
No target information
NoAlias
NoCapture
NoContraction
NoOpaqueKHR
NoPerspective
NoReadWrite
NoSignedWrap
NoUnsignedWrap
NoWrite
Non-L-value cannot be passed for 'out' or 'inout' parameters
Non-OpFunctionParameter (opcode: %d) found inside function but outside basic block
Non-constant-index-expression
Non-semantic OpExtInst must not appear before types
Non-semantic OpExtInst within function definition must appear in a block
Non-supported terminator
Non-unique OpEntryPoint interface
NonPrivatePointer
NonPrivatePointerKHR
NonPrivatePointerKHR must be specified if
NonPrivatePointerKHR must be specified if MakePointerAvailableKHR is specified
NonPrivatePointerKHR requires a pointer in Uniform
NonPrivateTexel
NonPrivateTexelKHR
NonReadable
NonSemantic
NonSemantic extended instruction sets cannot be declared without SPV_KHR_non_semantic_info
NonSemantic.DebugPrintf
NonUniform
NonUniformEXT
NonWritable
NoneKHR
Nontemporal
Normalize
Not a directory
Not enough space
NotEqual
November
Now at end of input
NpH;M@t
Num Elements
Num Events
Num Packets
NumEnqueuedSubgroups
NumSubgroups
NumWorkGroups
NumWorkgroups
Number of (literal, label) pairs in OpSwitch
Number of <<Invocation,invocations
Number of Global Variables (Storage Class other than 'Function') exceeded the valid limit
Number of OpTypeStruct members
Number of constructor parameters does not match the number of structure fields
Number of image operand ids doesn't correspond to the bit mask
Number of local variables ('Function' Storage Class) exceeded the valid limit
Number of redundant instructions removed
O0D+O(t
O8H+O0H
O8H+O0I
O8H9O@u
O8H;O@r
O8H;{Ht
O8I9O@u)A
O8I;}Ht
O@H+O8H
O@H+O8I
O@I+O8H
O@I;L$Ht
OCTAL_ESC
OPENGL32.dll
OPTIONS
OR_ASSIGN
OVERVIEW
O`H9Ohu
O`I+OXH
O`M;OXt
Object
Object 1
Object 2
ObjectRayDirectionKHR
ObjectRayDirectionNV
ObjectRayOriginKHR
ObjectRayOriginNV
ObjectRayTmaxNV
ObjectRayTminNV
ObjectToWorldKHR
ObjectToWorldNV
October
Offset
Offsets
Only one push_constant block is allowed per stage
Only one shaderRecordNV buffer block is allowed per stage
Only one taskNV interface block is allowed per shader
OpAccessChain
OpArrayLength
OpAtomicAnd
OpAtomicCompareExchange
OpAtomicCompareExchangeWeak
OpAtomicExchange
OpAtomicFlagClear
OpAtomicFlagTestAndSet
OpAtomicIAdd
OpAtomicIDecrement
OpAtomicIIncrement
OpAtomicISub
OpAtomicLoad
OpAtomicOr
OpAtomicSMax
OpAtomicSMin
OpAtomicStore
OpAtomicUMax
OpAtomicUMin
OpAtomicXor
OpBeginInvocationInterlockEXT
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require Fragment execution model
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require a fragment shader interlock execution mode
OpBitCount
OpBitFieldInsert
OpBitFieldSExtract
OpBitFieldUExtract
OpBitReverse
OpBitcast
OpBitwiseAnd
OpBitwiseOr
OpBitwiseXor
OpBranch
OpBranch or OpBranchConditional instruction
OpBranchConditional
OpBranchConditional or OpSwitch instruction
OpBranchConditional requires either 3 or 5 parameters
OpBuildNDRange
OpCapability
OpCaptureEventProfilingInfo
OpCommitReadPipe
OpCommitWritePipe
OpCompositeConstruct
OpCompositeExtract
OpCompositeInsert
OpConstant
OpConstantComposite
OpConstantFalse
OpConstantNull
OpConstantNull Result Type <id
OpConstantSampler
OpConstantSampler Result Type <id
OpConstantTrue
OpControlBarrier
OpControlBarrier requires one of the following Execution Models: TessellationControl, GLCompute or Kernel
OpConvertFToS
OpConvertFToU
OpConvertPtrToU
OpConvertSToF
OpConvertUToF
OpConvertUToPtr
OpCooperativeMatrixLengthNV
OpCooperativeMatrixLoadNV
OpCooperativeMatrixMulAddNV
OpCooperativeMatrixStoreNV
OpCopyLogical
OpCopyMemory
OpCopyMemorySized
OpCopyObject
OpCreateUserEvent
OpDPdxCoarse
OpDPdxFine
OpDPdyCoarse
OpDPdyFine
OpDecorate
OpDecorate SpecId decoration target <id
OpDecorate decoration
OpDecorate, OpDecorateId, and OpGroupMemberDecorate
OpDecorateId
OpDecorateStringGOOGLE
OpDecorationGroup
OpDecorationGroup is not allowed in the WebGPU execution
OpDemoteToHelperInvocationEXT
OpDemoteToHelperInvocationEXT requires Fragment execution model
OpEmitStreamVertex
OpEmitVertex
OpEndInvocationInterlockEXT
OpEndPrimitive
OpEndStreamPrimitive
OpEnqueueKernel
OpEnqueueMarker
OpEntryPoint
OpEntryPoint Entry Point <id
OpEntryPoint interfaces must be OpVariables with Storage Class of Input(1) or Output(3). Found Storage Class
OpEntryPoint interfaces should only list global variables
OpExecuteCallableKHR
OpExecutionMode
OpExecutionMode Entry Point <id
OpExecutionMode is only valid when the Mode operand is an execution mode that takes no Extra Operands, or takes Extra Operands that are not id operands
OpExecutionModeId is only valid when the Mode operand is an execution mode that takes Extra Operands that are id operands
OpExtInst
OpExtInst set Id
OpExtInstImport
OpExtension
OpFConvert
OpFNegate
OpFOrdEqual
OpFOrdGreaterThan
OpFOrdGreaterThanEqual
OpFOrdLessThan
OpFOrdLessThanEqual
OpFOrdNotEqual
OpFUnordEqual
OpFUnordGreaterThan
OpFUnordGreaterThanEqual
OpFUnordLessThan
OpFUnordLessThanEqual
OpFUnordNotEqual
OpFragmentFetchAMD
OpFragmentMaskFetchAMD
OpFunction
OpFunction Function Type <id
OpFunction Result Type <id
OpFunctionCall
OpFunctionCall Argument <id
OpFunctionCall Function <id
OpFunctionCall Function <id>'s parameter count does not match the argument count
OpFunctionCall Result Type <id
OpFunctionEnd
OpFunctionEnd inside basic block
OpFunctionEnd without corresponding OpFunction
OpFunctionParameter
OpFunctionParameter Result Type <id
OpFwidth
OpFwidthCoarse
OpFwidthFine
OpGenericCastToPtr
OpGenericCastToPtrExplicit
OpGenericPtrMemSemantics
OpGetDefaultQueue
OpGetKernelNDrangeMaxSubGroupSize
OpGetKernelNDrangeSubGroupCount
OpGetKernelPreferredWorkGroupSizeMultiple
OpGetKernelWorkGroupSize
OpGetMaxPipePackets
OpGetNumPipePackets
OpGroupAll
OpGroupAny
OpGroupAsyncCopy
OpGroupBroadcast
OpGroupCommitReadPipe
OpGroupCommitWritePipe
OpGroupDecorate
OpGroupDecorate Decoration group <id
OpGroupDecorate is not allowed in the WebGPU execution
OpGroupDecorate may not target OpDecorationGroup <id
OpGroupFAdd
OpGroupFAddNonUniformAMD
OpGroupFMax
OpGroupFMaxNonUniformAMD
OpGroupFMin
OpGroupFMinNonUniformAMD
OpGroupIAdd
OpGroupIAddNonUniformAMD
OpGroupMemberDecorate
OpGroupMemberDecorate Decoration group <id
OpGroupMemberDecorate Structure type <id
OpGroupMemberDecorate is not allowed in the WebGPU execution
OpGroupNonUniformAll
OpGroupNonUniformAllEqual
OpGroupNonUniformAny
OpGroupNonUniformBallot
OpGroupNonUniformBallotBitCount
OpGroupNonUniformBallotBitExtract
OpGroupNonUniformBallotFindLSB
OpGroupNonUniformBallotFindMSB
OpGroupNonUniformBitwiseAnd
OpGroupNonUniformBitwiseOr
OpGroupNonUniformBitwiseXor
OpGroupNonUniformBroadcast
OpGroupNonUniformBroadcastFirst
OpGroupNonUniformElect
OpGroupNonUniformFAdd
OpGroupNonUniformFMax
OpGroupNonUniformFMin
OpGroupNonUniformFMul
OpGroupNonUniformIAdd
OpGroupNonUniformIMul
OpGroupNonUniformInverseBallot
OpGroupNonUniformLogicalAnd
OpGroupNonUniformLogicalOr
OpGroupNonUniformLogicalXor
OpGroupNonUniformPartitionNV
OpGroupNonUniformQuadBroadcast
OpGroupNonUniformQuadSwap
OpGroupNonUniformSMax
OpGroupNonUniformSMin
OpGroupNonUniformShuffle
OpGroupNonUniformShuffleDown
OpGroupNonUniformShuffleUp
OpGroupNonUniformShuffleXor
OpGroupNonUniformUMax
OpGroupNonUniformUMin
OpGroupReserveReadPipePackets
OpGroupReserveWritePipePackets
OpGroupSMax
OpGroupSMaxNonUniformAMD
OpGroupSMin
OpGroupSMinNonUniformAMD
OpGroupUMax
OpGroupUMaxNonUniformAMD
OpGroupUMin
OpGroupUMinNonUniformAMD
OpGroupWaitEvents
OpIAddCarry
OpIEqual
OpINotEqual
OpISubBorrow
OpIgnoreIntersectionKHR
OpImage
OpImageDrefGather
OpImageFetch
OpImageGather
OpImageQueryFormat
OpImageQueryLevels
OpImageQueryLod
OpImageQueryLod requires DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
OpImageQueryLod requires Fragment or GLCompute execution model
OpImageQueryOrder
OpImageQuerySamples
OpImageQuerySize
OpImageQuerySizeLod
OpImageRead
OpImageRead, OpImageWrite, OpImageSparseFetch and
OpImageSampleDrefExplicitLod
OpImageSampleDrefImplicitLod
OpImageSampleExplicitLod
OpImageSampleFootprintNV
OpImageSampleImplicitLod
OpImageSampleProjDrefExplicitLod
OpImageSampleProjDrefImplicitLod
OpImageSampleProjExplicitLod
OpImageSampleProjImplicitLod
OpImageSparseDrefGather
OpImageSparseFetch
OpImageSparseGather
OpImageSparseRead
OpImageSparseSampleDrefExplicitLod
OpImageSparseSampleDrefImplicitLod
OpImageSparseSampleExplicitLod
OpImageSparseSampleImplicitLod
OpImageSparseSampleProjDrefExplicitLod
OpImageSparseSampleProjDrefImplicitLod
OpImageSparseSampleProjExplicitLod
OpImageSparseSampleProjImplicitLod
OpImageSparseTexelsResident
OpImageTexelPointer
OpImageWrite
OpInBoundsAccessChain
OpInBoundsPtrAccessChain
OpIsFinite
OpIsHelperInvocationEXT
OpIsHelperInvocationEXT requires Fragment execution model
OpIsInf
OpIsNan
OpIsNormal
OpIsValidEvent
OpIsValidReserveId
OpKill requires Fragment execution model
OpLabel
OpLabel inside basic block
OpLabel outside function
OpLessOrGreater
OpLifetimeStart
OpLifetimeStop
OpLine Target <id
OpLoad Pointer <id
OpLoad Result Type <id
OpLoad type for pointer <id
OpLogicalAnd
OpLogicalEqual
OpLogicalNot
OpLogicalNotEqual
OpLogicalOr
OpLoopMerge
OpLoopMerge must be the second-to-last instruction in
OpLoopMerge must immediately precede either an
OpMatrixTimesMatrix
OpMatrixTimesScalar
OpMatrixTimesVector
OpMemberDecorate
OpMemberDecorate Structure type <id
OpMemberDecorate decoration
OpMemberDecorateStringGOOGLE
OpMemberName
OpMemberName Member <id
OpMemberName Type <id
OpMemoryBarrier
OpMemoryModel
OpMemoryModel should only be provided once
OpModuleProcessed
OpNoLine
OpOrdered
OpOuterProduct
OpPhi does not have an equal number of incoming values and basic blocks
OpPhi must appear within a non-entry block before all
OpPhi's incoming basic block <id
OpPhi's number of incoming blocks
OpPhi's result type <id
OpPtrAccessChain
OpPtrCastToGeneric
OpQuantizeToF16
OpRayQueryConfirmIntersectionKHR
OpRayQueryGenerateIntersectionKHR
OpRayQueryGetIntersectionBarycentricsKHR
OpRayQueryGetIntersectionCandidateAABBOpaqueKHR
OpRayQueryGetIntersectionFrontFaceKHR
OpRayQueryGetIntersectionGeometryIndexKHR
OpRayQueryGetIntersectionInstanceCustomIndexKHR
OpRayQueryGetIntersectionInstanceIdKHR
OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR
OpRayQueryGetIntersectionObjectRayDirectionKHR
OpRayQueryGetIntersectionObjectRayOriginKHR
OpRayQueryGetIntersectionObjectToWorldKHR
OpRayQueryGetIntersectionPrimitiveIndexKHR
OpRayQueryGetIntersectionTKHR
OpRayQueryGetIntersectionTypeKHR
OpRayQueryGetIntersectionWorldToObjectKHR
OpRayQueryGetRayFlagsKHR
OpRayQueryGetRayTMinKHR
OpRayQueryGetWorldRayDirectionKHR
OpRayQueryGetWorldRayOriginKHR
OpRayQueryInitializeKHR
OpRayQueryProceedKHR
OpRayQueryTerminateKHR
OpReadClockKHR
OpReadPipe
OpReleaseEvent
OpReportIntersectionKHR
OpReserveReadPipePackets
OpReserveWritePipePackets
OpReservedReadPipe
OpReservedWritePipe
OpRetainEvent
OpReturn
OpReturn can only be called from a function with void
OpReturnValue
OpReturnValue Value <id
OpReturnValue value's type <id
OpSConvert
OpSGreaterThan
OpSGreaterThanEqual
OpSLessThan
OpSLessThanEqual
OpSMulExtended
OpSNegate
OpSampledImage
OpSatConvertSToU
OpSatConvertUToS
OpSelect
OpSelectionMerge
OpSelectionMerge must be the second-to-last
OpSelectionMerge must immediately precede either an
OpSetUserEventStatus
OpShiftLeftLogical
OpShiftRightArithmetic
OpShiftRightLogical
OpSignBitSet
OpSource
OpSourceContinued
OpSourceExtension
OpSpecConstant
OpSpecConstant opcode table out of sync
OpSpecConstantComposite
OpSpecConstantFalse
OpSpecConstantOp
OpSpecConstantOp opcode
OpSpecConstantTrue
OpStore
OpStore Object <id
OpStore Pointer <id
OpStore type for pointer <id
OpString
OpSubgroupAllEqualKHR
OpSubgroupAllKHR
OpSubgroupAnyKHR
OpSubgroupBallotKHR
OpSubgroupFirstInvocationKHR
OpSubgroupReadInvocationKHR
OpSwitch
OpTerminateRayKHR
OpTraceRayKHR
OpTranspose
OpTypeAccelerationStructureKHR
OpTypeArray
OpTypeArray Element Type <id
OpTypeArray Length <id
OpTypeBool
OpTypeCooperativeMatrixNV
OpTypeCooperativeMatrixNV Cols <id
OpTypeCooperativeMatrixNV Component Type <id
OpTypeCooperativeMatrixNV Rows <id
OpTypeCooperativeMatrixNV Scope <id
OpTypeDeviceEvent
OpTypeEvent
OpTypeFloat
OpTypeForwardPointer
OpTypeFunction
OpTypeFunction Parameter Type <id
OpTypeFunction Return Type <id
OpTypeFunction may not take more than
OpTypeImage
OpTypeInt
OpTypeInt has invalid signedness
OpTypeMatrix
OpTypeOpaque
OpTypePipe
OpTypePointer
OpTypePointer Type <id
OpTypeQueue
OpTypeRayQueryProvisionalKHR
OpTypeReserveId
OpTypeRuntimeArray
OpTypeRuntimeArray Element Type <id
OpTypeRuntimeArray must be decorated with Block if it
OpTypeRuntimeArray must be decorated with BufferBlock
OpTypeRuntimeArray must only be used for the last member of an OpTypeStruct
OpTypeSampledImage
OpTypeSampledImage, OpTypeAccelerationStructureNV, OpTypeAccelerationStructureKHR, OpTypeRayQueryProvisionalKHR
OpTypeSampler
OpTypeStruct
OpTypeStruct Member Type <id
OpTypeStruct must not contain an opaque type
OpTypeVector
OpTypeVector Component Type <id
OpTypeVector. Found Op
OpTypeVoid
OpUConvert
OpUGreaterThan
OpUGreaterThanEqual
OpULessThan
OpULessThanEqual
OpUMulExtended
OpUndef
OpUndef is disallowed
OpUnordered
OpUnreachable
OpVariable
OpVariable Initializer <id
OpVariable Result Type <id
OpVariable storage class cannot be Generic
OpVariable, <id
OpVectorExtractDynamic
OpVectorInsertDynamic
OpVectorShuffle
OpVectorShuffle component literals count does not match Result Type <id
OpVectorTimesMatrix
OpVectorTimesScalar
OpWritePackedPrimitiveIndices4x8NV
OpWritePipe
Opaque
OpaqueKHR
Opcode
Opcode in Bottom IR
OpenCL.DebugInfo.100
OpenCL.DebugInfo.100 debug base type encoding
OpenCL.DebugInfo.100 debug composite type
OpenCL.DebugInfo.100 debug imported entity
OpenCL.DebugInfo.100 debug info flags
OpenCL.DebugInfo.100 debug operation
OpenCL.DebugInfo.100 debug type qualifier
OpenCL.std
OpenCL_C
OpenCL_CPP
OpenGL: Compiling GLSL Shader
Operand
Operand 1
Operand 2
Operand type must be a pointer
Operands
Operation
Operation not permitted
Optional Image Operands are not allowed in the OpenCL
Ordered
Ordered constructor wrapped type has no default constructor
Origin
OriginLowerLeft
OriginUpperLeft
Other warnings have been suppressed
OuterProduct
OutputLineStrip
OutputLinesNV
OutputMemory
OutputMemoryKHR
OutputPatch
OutputPoints
OutputPrimitivesNV
OutputTriangleStrip
OutputTrianglesNV
OutputVertices
OverrideCoverageNV
P H;D$pt%L
P(H+P H
P,2.20 2
P08@HR
P0A+P(t
P6A?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
P6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@23@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@Z
P6APEBVConstant@analysis@opt@spvtools@@PEBVType@123@PEBV0123@1PEAVConstantManager@123@@Z
P6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
P6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@12@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@Z
PACK_OFFSET
PAYLOADEXT
PAYLOADINEXT
PAYLOADINNV
PAYLOADNV
PA_A]A
PA_A^A
PA_A^A]A
PC SM 3.0
PC SM 3.0 (GLSL
PC SM 4.0 (D3D10
PC SM 4.0 (GLSL
PC SM 4.0 (VULKAN
PC SM 4.1 (D3D10.1
PC SM 4.1 (GLSL
PC SM 4.1 (VULKAN
PC SM 5.0 (D3D11
PC SM 5.0 (GLSL
PC SM 5.0 (VULKAN
PC SM 6.0 (VULKAN
PC_SM_3_0
PC_SM_3_0_GL
PC_SM_4_0
PC_SM_4_0_GL
PC_SM_4_0_VULKAN
PC_SM_4_1
PC_SM_4_1_GL
PC_SM_4_1_VULKAN
PC_SM_5_0
PC_SM_5_0_GL
PC_SM_5_0_VULKAN
PC_SM_6_0_VULKAN
PERCENT
PERPRIMITIVENV
PERTASKNV
PERVERTEXNV
PERVIEWNV
PH;\$Xt^H
PHH;SHt9I
PHL9}0t
PI9GPuJH
PJ;I:qE
PL+}HI
PM94$t$I
POSITION
POSITIONT
PPPPPPP
PRECISE
PRECISION
PROGRAM
PS_RENDER_STATE
PX2Z0\j^&`A
P\RrPRR
P`E8u+t
PackDouble2x32
PackHalf2x16
PackSnorm2x16
PackSnorm4x8
PackUnorm2x16
PackUnorm4x8
Packed Indices
Packet Alignment
Packet Size
Param Align
Param Size
Parameter 0 Type
Parameter 1 Type
Parameter Types
PartialCount
PartialCount and DontUnroll loop controls must not both be specified
Partially defined aggregate type
PartitionedExclusiveScanNV
PartitionedInclusiveScanNV
PartitionedReduceNV
Pass Arguments
Pass execution timing report
Pass misconfiguration (e.g.: missing macros
Pass::print not implemented for pass
PassthroughNV
PatchVertices
Payload
PeelCount
PeelCount and DontUnroll loop controls must not both be specified
PerPrimitiveNV
PerTaskNV
PerVertexNV
PerViewAttributesNV
PerViewNV
Permission denied
Physical32
Physical64
PhysicalStorageBuffer
PhysicalStorageBuffer64
PhysicalStorageBuffer64EXT
PhysicalStorageBufferAddresses
PhysicalStorageBufferAddressesEXT
PhysicalStorageBufferEXT
PhysicalStorageBufferEXT must not be used with OpVariable
PhysicalStorageBufferEXT pointer
PipeStorage
Pipeline write using non-integer index
Pixel Shader
Pixel Shader Render State
PixelCenterInteger
PixelFragment
PixelInterlockOrderedEXT
PixelInterlockUnorderedEXT
PixelShader
Plat_DebugPrint
Plat_ExitProcess
Plat_FloatTime
Plat_GetModuleFilename
Plat_GetModuleProcAddress
Plat_GetTime
Plat_IsInDebugSession
Plat_LoadInterface
Plat_LoadModule
Plat_SetDenormalsAreZero
Plat_ShouldCollectMiniDumpsForFatalErrors
Plat_UnloadModule
PlusUconst
PointCoord
PointMode
PointSize
PointStream
Pointer
Pointer <id
Pointer Type
Pointer can only be converted to another pointer or int scalar
Pointer can only be converted to another pointer, int scalar or 32-bit int vector
Pointer operand
Pointer storage class must be PhysicalStorageBufferEXT
Pointer type in OpTypeForwardPointer is not a pointer type
PontStream
PopulateUTF16@CStrAutoEncode@@AEBAXXZ
Position
PositionPerViewNV
Possible extensions include
Post-Decrement
Post-Dominator Tree Construction
Post-Increment
PostDepthCoverage
PpH;Pxt
Pre-Decrement
Pre-Increment
Precision qualifiers must match
Predicate
Preprocessed HLSL code
Presence of invariant qualifier must match
Presence of precise qualifier must match
Preserved
PrimitiveCountNV
PrimitiveID
PrimitiveId
PrimitiveIndicesNV
Print IR after each pass
Print IR after specified passes
Print IR before each pass
Print IR before specified passes
Print PassManager debugging information
Print all option values after command line parsing
Print non-default options after command line parsing
Printf@CUtlBuffer@@QEAAXPEBDZZ
Prior to SPIR-V 1.4, specialization constant operation UConvert requires Kernel capability or extension SPV_AMD_gpu_shader_int16
Private
Process2DQuadTessFactorsAvg
Process2DQuadTessFactorsMax
Process2DQuadTessFactorsMin
ProcessIsolineTessFactors
ProcessQuadTessFactorsAvg
ProcessQuadTessFactorsMax
ProcessQuadTessFactorsMin
ProcessTriTessFactorsAvg
ProcessTriTessFactorsMax
ProcessTriTessFactorsMin
Profile specification
Profiling Info
Promote Memory to Register
PtrAccessChain
PtrCastToGeneric
PtrDiff
PtrEqual
PtrNotEqual
PushConstant
PushConstant OpVariable <id
PushConstant id
Put@CUtlBuffer@@QEAAXPEBXH@Z
PutString@CUtlBuffer@@QEAAXPEBD@Z
Q srL9d$X
Q(A;V A
Q0;P0rJw
Q0H;Q8t
Q0H;Q8t3H
QJxy6z
QRTSVWXYZUP
QUESTION
QUEUEFAMILYCOHERENT
QXfA9r
QuadReadAcrossDiagonal
QuadReadAcrossX
QuadReadAcrossY
QuadReadLaneAt
Qualcomm
Qualifier
QuantizeToF16
QueryPerformanceCounter
QueueFamily
QueueFamilyKHR
QueueFamilyKHR for OpAtomic* operations
R&2(d&X
R11_EAC
R11fG11fB10f
R16F_EXPAND
R16Snorm
R32_UINT
R8G8B8A8_ETC2_EAC
R8G8B8_ETC2
R8Snorm
RAYQUERYEXT
READONLY
REPLACE
RESOURCE
RESTRICT
REV_SUBTRACT
RFmFmFmFmFdFmF[FmFmFmFmFmFmFRFdF[F
RG11_EAC
RG1616F
RG1616F_EXPAND
RG3232F
RGB323232F
RGB888_BLUESCREEN
RGBA1010102
RGBA1010102F_EDRAM
RGBA16161616
RGBA16161616F
RGBA16161616F_EDRAM_RGBA1010102F
RGBA16161616F_EXPAND
RGBA16161616F_EXPAND_EDRAM_RGBA1010102F
RGBA16161616_EDRAM
RGBA16161616_EDRAM_RGBA16161616
RGBA32323232F
RGBA8888
RGBA8888_LINEAR
RGBX555
RGBX8888
RIGHT_ANGLE
RIGHT_ASSIGN
RIGHT_BRACE
RIGHT_BRACKET
RIGHT_OP
RIGHT_PAREN
RWBuffer
RWByteAddressBuffer
RWStructuredBuffer
RWTexture
RWTexture1D
RWTexture1DArray
RWTexture2D
RWTexture2DArray
RWTexture3D
RX@8rXt
Radians
RaiseException
RandomFloat
Ray Direction
Ray Flags
Ray Origin
RayFlags
RayGenerationKHR
RayGenerationNV
RayGeometryIndexKHR
RayPayloadKHR
RayPayloadNV
RayQuery
RayQueryCandidateIntersectionAABBKHR
RayQueryCandidateIntersectionKHR
RayQueryCandidateIntersectionTriangleKHR
RayQueryCommittedIntersectionGeneratedKHR
RayQueryCommittedIntersectionKHR
RayQueryCommittedIntersectionNoneKHR
RayQueryCommittedIntersectionTriangleKHR
RayQueryConfirmIntersectionKHR
RayQueryGenerateIntersectionKHR
RayQueryGetIntersectionBarycentricsKHR
RayQueryGetIntersectionCandidateAABBOpaqueKHR
RayQueryGetIntersectionFrontFaceKHR
RayQueryGetIntersectionGeometryIndexKHR
RayQueryGetIntersectionInstanceCustomIndexKHR
RayQueryGetIntersectionInstanceIdKHR
RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR
RayQueryGetIntersectionObjectRayDirectionKHR
RayQueryGetIntersectionObjectRayOriginKHR
RayQueryGetIntersectionObjectToWorldKHR
RayQueryGetIntersectionPrimitiveIndexKHR
RayQueryGetIntersectionTKHR
RayQueryGetIntersectionTypeKHR
RayQueryGetIntersectionWorldToObjectKHR
RayQueryGetRayFlagsKHR
RayQueryGetRayTMinKHR
RayQueryGetWorldRayDirectionKHR
RayQueryGetWorldRayOriginKHR
RayQueryInitializeKHR
RayQueryProceedKHR
RayQueryProvisionalKHR
RayQueryTerminateKHR
RayTmaxKHR
RayTmaxNV
RayTminKHR
RayTminNV
RayTracingNV
RayTracingProvisionalKHR
RayTraversalPrimitiveCullingProvisionalKHR
Reached non-composite type while indexes still remain to be traversed
Read-only file system
ReadClockKHR
ReadConsoleW
ReadFile
ReadOnly
ReadPipe
ReadWrite
Reading a token
Reassociate expressions
Recognition Exception
RecurrentAddExpr
Recursion detected
Reducing stack by rule %d (line %lu
Reflect
Refract
RegisterStringToken
Relaxed
RelaxedPrecision
Release
ReleaseEvent
ReleaseMutex
ReleaseSRWLockExclusive
ReleaseSRWLockShared
Releasing pass
Remap I/O failed on HLSL -> SPIR-V of linked program
Remapping Consts & Types
Remapping remainder
Remove redundant instructions
RemoveDirectoryW
Removing Dead Functions
RenderStateLiteral
RepeatMirrored
Replace@CUtlString@@QEBA?AV1@PEBD0_N@Z
ReportIntersectionKHR
ReportIntersectionNV
Requested
Required
Required Passes
ResType
Reserve Id
ReserveId
ReserveReadPipePackets
ReserveWritePipePackets
Reserved word
ReservedReadPipe
ReservedWritePipe
ResetEvent
Resident Code
Resource deadlock avoided
Resource device
Resource temporarily unavailable
Resources '%s' and '%s' share the same descriptor and binding number (Set = %d, Binding = %d
RestartSH9
RestartStrip
Restrict
RestrictPointer
RestrictPointerEXT
RestrictPointerEXT for PhysicalStorageBufferEXT pointer
RestrictType
Result <id
Result <id> from OpSampledImage instruction must not appear as operand for Op
Result <id> from OpSampledImage instruction must not appear as operands of Op
Result Type
Result Type <id
Result Type does not logically match the Operand type
Result Type has
Result Type must be OpTypeBool
Result Type must be an integer scalar
Result Type must not equal the Operand type
Result Type struct
Result Type vector size
Result Type's second member
Result id of OpDecorationGroup can only
Result too large
Result type (Op
Result type cannot be Op
Result type component width must be 32 bits
Result type is not defined
Ret Event
RetainEvent
Return Type
ReturnValue
Rg16Snorm
Rg8Snorm
Rgb10A2
Rgb10a2ui
Rgba16Snorm
Rgba16f
Rgba16i
Rgba16ui
Rgba32f
Rgba32i
Rgba32ui
Rgba8Snorm
Rgba8ui
RhV*XbV
Right@CUtlString@@QEBA?AV1@H@Z
RightMatrix
Rotate Loops
RoundEven
RoundingModeRTE
RoundingModeRTZ
RowMajor
RowMajorH
RtlCaptureContext
RtlLookupFunctionEntry
RtlPcToFileHeader
RtlUnwind
RtlUnwindEx
RtlVirtualUnwind
Running pass
RuntimeDescriptorArray
RuntimeDescriptorArrayEXT
S,S,V1
S,V,S,V
S,V2,V4
S8H;HHt
S>$hkDh$h>[2
S@H;SHt
S@M+S8H
SAMPLER
SAMPLER1D
SAMPLER1DARRAY
SAMPLER1DARRAYSHADOW
SAMPLER1DSHADOW
SAMPLER2D
SAMPLER2DARRAY
SAMPLER2DARRAYSHADOW
SAMPLER2DMS
SAMPLER2DMSARRAY
SAMPLER2DRECT
SAMPLER2DRECTSHADOW
SAMPLER2DSHADOW
SAMPLER3D
SAMPLERBUFFER
SAMPLERCUBE
SAMPLERCUBEARRAY
SAMPLERCUBEARRAYSHADOW
SAMPLERCUBESHADOW
SAMPLEREXTERNAL2DY2YEXT
SAMPLEREXTERNALOES
SAMPLERSHADOW
SATAUAVAWH
SATAUAVH
SATAUAWH
SATAWH
SAUAWH
SAVAWH
SBT Record Index
SBT Record Offset
SBT Record Stride
SCALAR_TYPE
SCCP: Don't know how to handle
SCEVValidator: SCEV for loop
SConvert
SDL2.dll
SDL_CreateWindow
SDL_DestroyWindow
SDL_GL_CreateContext
SDL_GL_DeleteContext
SDL_GL_GetProcAddress
SDL_GL_MakeCurrent
SDL_GL_SetAttribute
SDL_InitSubSystem
SDL_QuitSubSystem
SDL_WasInit
SEMICOLON
SGreaterThan
SGreaterThanEqual
SHADERCALLCOHERENT
SHADER_MODEL
SHADER_SOURCE
SLessThan
SLessThanEqual
SMCountNV
SMax3AMD
SMid3AMD
SMin3AMD
SMulExtended
SNegate
SPIR-V
SPIR-V 1.0
SPIR-V 1.0 (under OpenCL 1.2 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 1.2 Full Profile semantics
SPIR-V 1.0 (under OpenCL 2.0 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 2.0 Full Profile semantics
SPIR-V 1.0 (under OpenCL 2.1 Embedded Profile semantics
SPIR-V 1.0 (under OpenCL 2.1 Full Profile semantics
SPIR-V 1.0 (under OpenGL 4.0 semantics
SPIR-V 1.0 (under OpenGL 4.1 semantics
SPIR-V 1.0 (under OpenGL 4.2 semantics
SPIR-V 1.0 (under OpenGL 4.3 semantics
SPIR-V 1.0 (under OpenGL 4.5 semantics
SPIR-V 1.0 (under Vulkan 1.0 semantics
SPIR-V 1.1
SPIR-V 1.2
SPIR-V 1.2 (under OpenCL 2.2 Embedded Profile semantics
SPIR-V 1.2 (under OpenCL 2.2 Full Profile semantics
SPIR-V 1.3
SPIR-V 1.3 (under Vulkan 1.1 semantics
SPIR-V 1.3 (under WIP WebGPU semantics
SPIR-V 1.4
SPIR-V 1.4 (under Vulkan 1.1 semantics
SPIR-V 1.5
SPIR-V 1.5 (under Vulkan 1.2 semantics
SPIR-V Tools Assembler
SPIR-V Tools Linker
SPIR-V requires location for user input/output
SPIRV-Tools %s (%s:%d): %s
SPIRV-Tools UNKNOWN (%s:%d): %s
SPIRV-Tools Validation Errors
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_gpu_shader_half_float_fetch
SPV_AMD_gpu_shader_int16
SPV_AMD_shader_ballot
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_AMD_shader_trinary_minmax
SPV_AMD_texture_gather_bias_lod
SPV_EXT_demote_to_helper_invocation
SPV_EXT_descriptor_indexing
SPV_EXT_fragment_fully_covered
SPV_EXT_fragment_invocation_density
SPV_EXT_fragment_shader_interlock
SPV_EXT_physical_storage_buffer
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_GOOGLE_decorate_string
SPV_GOOGLE_hlsl_functionality1
SPV_GOOGLE_user_type
SPV_INTEL_device_side_avc_motion_estimation
SPV_INTEL_media_block_io
SPV_INTEL_shader_integer_functions2
SPV_INTEL_subgroups
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_device_group
SPV_KHR_float_controls
SPV_KHR_multiview
SPV_KHR_no_integer_wrap_decoration
SPV_KHR_non_semantic_info
SPV_KHR_physical_storage_buffer
SPV_KHR_post_depth_coverage
SPV_KHR_ray_query
SPV_KHR_ray_tracing
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_clock
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_vote
SPV_KHR_variable_pointers
SPV_KHR_vulkan_memory_model
SPV_NVX_multiview_per_view_attributes
SPV_NV_compute_shader_derivatives
SPV_NV_cooperative_matrix
SPV_NV_fragment_shader_barycentric
SPV_NV_geometry_shader_passthrough
SPV_NV_mesh_shader
SPV_NV_ray_tracing
SPV_NV_sample_mask_override_coverage
SPV_NV_shader_image_footprint
SPV_NV_shader_sm_builtins
SPV_NV_shader_subgroup_partitioned
SPV_NV_shading_rate
SPV_NV_stereo_view_rendering
SPV_NV_viewport_array2
SPV_VALIDATOR_ignore_type_decl_unique
SPVremapper error: %s
SRC1_ALPHA
SRC1_COLOR
SRC_ALPHA
SRC_ALPHA_SAT
SRC_COLOR
SSE and SSE2 are required
STRINGLITERAL
STRING_LITERAL
SUATAUAVAWH
SUATAUH
SUATAVAWH
SUATAVH
SUAUAVAWH
SUAUAVH
SUAUAWH
SUAVAWH
SUBGROUPCOHERENT
SUBPASSINPUT
SUBPASSINPUTMS
SUBROUTINE
SUBTRACT
SUB_ASSIGN
SUVATAUH
SUVATAVAWH
SUVATH
SUVAUAVH
SUVAUAWH
SUVAUH
SUVAVAWH
SUVAVH
SUVWATAUAVAWH
SUVWATAUAVH
SUVWATAUAWH
SUVWATAVAWH
SUVWATAVH
SUVWATH
SUVWAUAVAWH
SUVWAUAVH
SUVWAUAWH
SUVWAUH
SUVWAVAWH
SUVWAVH
SUVWAWH
SUWATAUAVAWH
SUWATAUH
SUWATAVAWH
SUWATAVH
SUWATAWH
SUWAUAVH
SUWAVAWH
SVATAUAVH
SVATAUAWH
SVATAUH
SVATAVAWH
SVATAVH
SVATAWH
SVAUAVH
SVAVAWH
SVWATAUAVAWH
SVWATAUAVH
SVWATAUAWH
SVWATAUH
SVWATAVAWH
SVWATAWH
SVWAUAVAWH
SVWAUAVH
SVWAUAWH
SVWAUH
SVWAVAWH
SVWAVH
SV_CLIPDISTANCE
SV_COVERAGE
SV_CULLDISTANCE
SV_ClipDistance
SV_ClipDistance0
SV_ClipDistance1
SV_Coverage
SV_DEPTH
SV_DEPTHGREATEREQUAL
SV_DEPTHLESSEQUAL
SV_DISPATCHTHREADID
SV_DOMAINLOCATION
SV_Depth
SV_DomainLocation
SV_GROUPID
SV_GROUPINDEX
SV_GROUPTHREADID
SV_GSINSTANCEID
SV_INSIDETESSFACTOR
SV_INSTANCEID
SV_ISFRONTFACE
SV_InsideTessFactor
SV_InstanceID
SV_IsFrontFace
SV_OUTPUTCONTROLPOINTID
SV_OutputControlPointID
SV_POSITION
SV_PRIMITIVEID
SV_Position
SV_PrimitiveID
SV_RENDERTARGETARRAYINDEX
SV_RenderTargetArrayIndex
SV_SAMPLEINDEX
SV_STENCILREF
SV_SampleIndex
SV_TARGET
SV_TESSFACTOR
SV_TessFactor
SV_VERTEXID
SV_VIEWPORTARRAYINDEX
SV_VertexID
SV_ViewportArrayIndex
SWATAUAWH
SWATAUH
SWATAVAWH
SWATAWH
SWAUAVAWH
SWAVAWH
SX@8jXt
SX@8rXt
S`H;Sht
Sample
SampleBiL9
SampleBias
SampleCmI
SampleCmp
SampleCmpLevelZero
SampleGrL9
SampleGrad
SampleId
SampleInterlockOrderedEXT
SampleInterlockUnorderedEXT
SampleLeH9
SampleLevel
SampleMask
SampleMaskIn
SampleMaskOverrideCoverageNV
SampleMaskPostDepthCoverage
SamplePosition
SampleRateShading
Sampled
Sampled Image
Sampled Type
Sampled Type must be OpTypeVoid in the OpenCL environment
Sampled must be 0 in the OpenCL environment
Sampled1D
SampledBuffer
SampledCubeArray
SampledImage
SampledImageArrayDynamicIndexing
SampledImageArrayNonUniformIndexing
SampledImageArrayNonUniformIndexingEXT
SampledRect
Sampler
Sampler1D
Sampler2D
Sampler2DArray
Sampler3D
SamplerComparisonState
SamplerCube
SamplerCubeArray
SamplerState
SatConvertSToU
SatConvertUToS
SaturatedConversion
Saturday
Scalar
Scalar Evolution Analysis
Scalar Replacement of Aggregates (DT
Scalar Replacement of Aggregates (SSAUp
Scalarize instruction on a non-per-component intrinsic
Scalarize the IR
Scalarizing stores/geps
Scalarizing struct/array ops
Schema
Scope ids must be OpConstant when Shader capability is
Scope ids must be constant or specialization constant when
Scope must be Subgroup or Device
SecondaryColor
SecondaryPositionNV
SecondaryViewportMaskNV
SecondaryViewportRelativeNV
See <<BuiltIn,*BuiltIn
See <<Decoration,'Decoration
See <<Execution_Mode,Execution Mode
SeekGet@CUtlBuffer@@QEAAXW4SeekType_t@1@H@Z
SeekPut@CUtlBuffer@@QEAAXW4SeekType_t@1@H@Z
Selection header
Selection must be structured
SelectionMerge
Selector
Semantics
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Sep 10 2020
September
Sequence
Sequence of components starting with
SequentiallyConsistent
SequentiallyConsistent memory semantics cannot be used with the VulkanKHR memory model
Set@CUtlString@@QEAAXPEBD@Z
SetByArtist
SetByArtistAndExpression
SetConsoleTextAttribute
SetDirect@CUtlString@@QEAAXPEBDH@Z
SetEvent
SetFileInformationByHandle
SetFilePointerEx
SetLastError
SetOverflowFuncs@CUtlBuffer@@IEAAXP81@EAA_NH@Z0@Z
SetStdHandle
SetThreadpoolTimer
SetThreadpoolWait
SetUnhandledExceptionFilter
SetUnusable@CBufferString@@QEAAXXZ
SetUserEventStatus
ShH;X@t
Shader contains too many images (RWTextures).  Has: %d Maximum: %d
Shader contains too many samplers.  Has: %d Maximum: %d
Shader contains too many storage buffers (RWStructureBuffers).  Has: %d Maximum: %d
Shader contains too many storage texel buffers (RWBuffers).  Has: %d Maximum: %d
Shader contains too many textures.  Has: %d Maximum: %d
Shader contains too many uniform buffers.  Has: %d Maximum: %d
Shader contains too many uniform texel buffers (Buffers).  Has: %d Maximum: %d
Shader file version mismatch.  Expected (%d), Got (%d
Shader variable %s is illegal to use in expression. Only artist-editable variables are usable
Shader version
ShaderCallKHR
ShaderClockKHR
ShaderIDColor
ShaderLayer
ShaderNonUniform
ShaderNonUniformEXT
ShaderRecordBufferKHR
ShaderRecordBufferNV
ShaderSMBuiltinsNV
ShaderStereoViewNV
ShaderViewportIndex
ShaderViewportIndexLayerEXT
ShaderViewportIndexLayerNV
ShaderViewportMaskNV
Shaderc over Glslang
ShadingComplexity
ShadingRateInterlockOrderedEXT
ShadingRateInterlockUnorderedEXT
ShadingRateNV
ShiftLeftLogical
ShiftRightArithmetic
ShiftRightLogical
Shifting
ShortenPath@CBufferString@@QEAAPEBD_N@Z
ShuffleXor
SignBitSet
SignExtend
Signed Value
Signed addCarry
Signed subBorrow
SignedChar
SignedInt16
SignedInt32
SignedInt8
SignedZeroInfNanPreserve
Signedness
Simplify the CFG
Sink common instructions down to the end block
Size operand <id
SizetRH
SkipAABBsKHR
SkipClosestHitShaderKHR
SkipTrianglesKHR
SleepConditionVariableCS
SleepConditionVariableSRW
SlopeScaleDepthBias
SmoothStep
SnormInt16
SnormInt8
SoA in middle end
Source
Source entry point must be "main
Source memory access must not include MakePointerAvailableKHR
Source operand <id
SourceContinued
SourceExtension
SpacingEqual
SpacingFractionalEven
SpacingFractionalOdd
Sparse Conditional Constant Propagation
SparseResidency
SpecConstant
SpecConstantComposite
SpecConstantFalse
SpecConstantOp
SpecConstantTrue
Specialization Constant ID
Specialization constant must be an integer or floating-point number
Specialization constant operation
SpvOpCooperativeMatrixLoadNV
SpvOpCooperativeMatrixLoadNV Result Type <id
SpvOpCooperativeMatrixStoreNV
SpvOpCooperativeMatrixStoreNV Object type <id
SrcBlend
SrcBlendAlpha
SrgbGammaToLinear
SrgbLinearToGamma
SrgbRead
SrgbWriteEnable0
SrgbWriteEnable1
SrgbWriteEnable2
SrgbWriteEnable3
StO9>T
Stack now
Stack size increased to %lu
StackValue
Starting parse
Static combo %s referenced in expression doesn't exist
Status
StencilDepthFailOp
StencilEnable
StencilExportEXT
StencilFailOp
StencilFunc
StencilPassOp
StencilReadMask
StencilRef
StencilRefReplacingEXT
StencilWriteMask
Storage
Storage Buffer
Storage buffer id
Storage class cannot be Generic in OpenCL 1.2 environment
Storage class in OpTypeForwardPointer does not match the
Storage class semantics must not be zero
Storage qualifiers must match
StorageBuffer
StorageBuffer OpVariable <id
StorageBuffer id
StorageBuffer or Uniform
StorageBuffer pointer operand
StorageBuffer, Uniform, or UniformConstant
StorageBuffer16BitAccess
StorageBuffer8BitAccess
StorageBufferArrayDynamicIndexing
StorageBufferArrayNonUniformIndexing
StorageBufferArrayNonUniformIndexingEXT
StorageClass
StorageImageArrayDynamicIndexing
StorageImageArrayNonUniformIndexing
StorageImageArrayNonUniformIndexingEXT
StorageImageExtendedFormats
StorageImageMultisample
StorageImageReadWithoutFormat
StorageImageWriteWithoutFormat
StorageInputOutput16
StoragePushConstant16
StoragePushConstant8
StorageTexelBufferArrayDynamicIndexing
StorageTexelBufferArrayDynamicIndexingEXT
StorageTexelBufferArrayNonUniformIndexing
StorageTexelBufferArrayNonUniformIndexingEXT
StorageUniform16
StorageUniformBufferBlock16
Store cooperative matrix
Stream
Stream Number
Stride
Stride operand <id
String
String@CUtlSymbolTable@@QEBAPEBDVCUtlSymbol@@@Z
Strip Unused Function Prototypes
StripTrailingSlash@CBufferString@@QEAAPEBDXZ
Structure
Structure <id
Structure Nesting Depth may not be larger than
Structure Type
Structure id
Structure members may not be self references
StructuredBuffer
Structures cannot contain a void type
SubGroupEqMask
SubGroupGeMask
SubGroupGtMask
SubGroupInvocation
SubGroupLeMask
SubGroupLtMask
SubGroupSize
Subgroup
SubgroupAllEqualKHR
SubgroupAllKHR
SubgroupAnyKHR
SubgroupAvcBmeInitializeINTEL
SubgroupAvcFmeInitializeINTEL
SubgroupAvcImeAdjustRefOffsetINTEL
SubgroupAvcImeConvertToMcePayloadINTEL
SubgroupAvcImeConvertToMceResultINTEL
SubgroupAvcImeEvaluateWithDualReferenceINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL
SubgroupAvcImeGetBorderReachedINTEL
SubgroupAvcImeGetDualReferenceStreaminINTEL
SubgroupAvcImeGetSingleReferenceStreaminINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetTruncatedSearchIndicationINTEL
SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL
SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL
SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL
SubgroupAvcImeInitializeINTEL
SubgroupAvcImeRefWindowSizeINTEL
SubgroupAvcImeSetDualReferenceINTEL
SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL
SubgroupAvcImeSetMaxMotionVectorCountINTEL
SubgroupAvcImeSetSingleReferenceINTEL
SubgroupAvcImeSetUnidirectionalMixDisableINTEL
SubgroupAvcImeSetWeightedSadINTEL
SubgroupAvcImeStripDualReferenceStreamoutINTEL
SubgroupAvcImeStripSingleReferenceStreamoutINTEL
SubgroupAvcMceConvertToImePayloadINTEL
SubgroupAvcMceConvertToImeResultINTEL
SubgroupAvcMceConvertToRefPayloadINTEL
SubgroupAvcMceConvertToRefResultINTEL
SubgroupAvcMceConvertToSicPayloadINTEL
SubgroupAvcMceConvertToSicResultINTEL
SubgroupAvcMceGetBestInterDistortionsINTEL
SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL
SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL
SubgroupAvcMceGetDefaultInterShapePenaltyINTEL
SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL
SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL
SubgroupAvcMceGetInterDirectionsINTEL
SubgroupAvcMceGetInterDistortionsINTEL
SubgroupAvcMceGetInterMajorShapeINTEL
SubgroupAvcMceGetInterMinorShapeINTEL
SubgroupAvcMceGetInterMotionVectorCountINTEL
SubgroupAvcMceGetInterReferenceIdsINTEL
SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceGetMotionVectorsINTEL
SubgroupAvcMceSetAcOnlyHaarINTEL
SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceSetInterDirectionPenaltyINTEL
SubgroupAvcMceSetInterShapePenaltyINTEL
SubgroupAvcMceSetMotionVectorCostFunctionINTEL
SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL
SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL
SubgroupAvcMotionEstimationChromaINTEL
SubgroupAvcMotionEstimationINTEL
SubgroupAvcMotionEstimationIntraINTEL
SubgroupAvcRefConvertToMcePayloadINTEL
SubgroupAvcRefConvertToMceResultINTEL
SubgroupAvcRefEvaluateWithDualReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcRefEvaluateWithSingleReferenceINTEL
SubgroupAvcRefSetBidirectionalMixDisableINTEL
SubgroupAvcRefSetBilinearFilterEnableINTEL
SubgroupAvcSicConfigureIpeLumaChromaINTEL
SubgroupAvcSicConfigureIpeLumaINTEL
SubgroupAvcSicConfigureSkcINTEL
SubgroupAvcSicConvertToMcePayloadINTEL
SubgroupAvcSicConvertToMceResultINTEL
SubgroupAvcSicEvaluateIpeINTEL
SubgroupAvcSicEvaluateWithDualReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcSicEvaluateWithSingleReferenceINTEL
SubgroupAvcSicGetBestIpeChromaDistortionINTEL
SubgroupAvcSicGetBestIpeLumaDistortionINTEL
SubgroupAvcSicGetInterRawSadsINTEL
SubgroupAvcSicGetIpeChromaModeINTEL
SubgroupAvcSicGetIpeLumaShapeINTEL
SubgroupAvcSicGetMotionVectorMaskINTEL
SubgroupAvcSicGetPackedIpeLumaModesINTEL
SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL
SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL
SubgroupAvcSicInitializeINTEL
SubgroupAvcSicSetBilinearFilterEnableINTEL
SubgroupAvcSicSetBlockBasedRawSkipSadINTEL
SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaShapePenaltyINTEL
SubgroupAvcSicSetSkcForwardTransformEnableINTEL
SubgroupBallotKHR
SubgroupBlockReadINTEL
SubgroupBlockWriteINTEL
SubgroupBufferBlockIOINTEL
SubgroupDispatch
SubgroupEqMask
SubgroupEqMaskKHR
SubgroupFirstInvocationKHR
SubgroupGeMask
SubgroupGeMaskKHR
SubgroupGtMask
SubgroupGtMaskKHR
SubgroupID
SubgroupId
SubgroupImageBlockIOINTEL
SubgroupImageBlockReadINTEL
SubgroupImageBlockWriteINTEL
SubgroupImageMediaBlockIOINTEL
SubgroupImageMediaBlockReadINTEL
SubgroupImageMediaBlockWriteINTEL
SubgroupInvocationID
SubgroupLeMask
SubgroupLeMaskKHR
SubgroupLocalInvocationId
SubgroupLtMask
SubgroupLtMaskKHR
SubgroupMaxSize
SubgroupMemory
SubgroupReadInvocationKHR
SubgroupShuffleDownINTEL
SubgroupShuffleINTEL
SubgroupShuffleUpINTEL
SubgroupShuffleXorINTEL
SubgroupSize
SubgroupVoteKHR
SubgroupsPerWorkgroup
SubgroupsPerWorkgroupId
SubmitThreadpoolWork
SubpassData
SubpassInput
SubpassInputMS
SubpassLoad
Such variables must be identified with a Block decoration
Such variables must be identified with a Block or BufferBlock decoration
Such variables must be typed as OpTypeStruct
Swizzle operation only supports up to four channels
SwizzleInvocationsAMD
SwizzleInvocationsMaskedAMD
System Time
T$ +C$A
T$ +E,A
T$ +F$A
T$ I;T$(t
T$(H;T$0t
T$(H;T$0tDA
T$0H;T$8t
T$0H;T$8t:A
T$0H;T$8tAA
T$8+G$A
T$8+G$H
T$8H+T$0H
T$8H9T$0
T$8H;T$@t
T$8H;T$@t2A
T$8H;T$@tAA
T$@H;T$Ht
T$@H;T$Ht2A
T$@L;mp
T$BfA;U
T$H+G$A
T$HD#\$PD
T$HH;T$P
T$HH;T$Pt
T$PH+T$HH
T$PH;T$Xt
T$XH#T$8
T$XH#T$H
T$XH;T$`t
T$`H;T$ht
T$`ugH
T$hH;C(r
T$hH;T$pt
T$pI#J0H
T<2uPfA
TANGENT
TEXCOORD
TEXTURE1D
TEXTURE1DARRAY
TEXTURE2D
TEXTURE2DARRAY
TEXTURE2DMS
TEXTURE2DMSARRAY
TEXTURE2DRECT
TEXTURE3D
TEXTUREBUFFER
TEXTURECUBE
TEXTURECUBEARRAY
TRILINEAR
TYPE_NAME
Target
Target <id
Target Information
Target Label
Target Label' operands for OpBranch must be the ID of an OpLabel instruction
Target Label' operands for OpSwitch must be IDs of an OpLabel instruction
Target Library Information
Target memory access must not include MakePointerVisibleKHR
Target of Component decoration is invalid: must point to a Storage Class of Input(1) or Output(3). Found Storage Class
Target of Component decoration must be a memory object declaration (a variable or a function parameter
Target of NonWritable decoration is invalid: must point to a storage image, uniform block
Target of NonWritable decoration must be a memory object declaration (a variable or a function parameter
Target operand <id
Target version for SPIRV-Tools validator
Targets
TaskCountNV
TerminateOnFirstHitKHR
TerminateProcess
TerminateRayKHR
TerminateRayNV
TessCoord
TessLevelInner
TessLevelOuter
Tessellation
Tessellation execution model entry points can specify at most one of SpacingEqual, SpacingFractionalOdd or SpacingFractionalEven execution modes
Tessellation execution model entry points can specify at most one of Triangles, Quads or Isolines execution modes
Tessellation execution model entry points can specify at most one of VertexOrderCw or VertexOrderCcw execution modes
TessellationControl
TessellationEvaluation
TessellationPointSize
TessellationState_PatchSize
Test condition and select
TexCoord
Texture
Texture intrinsic
Texture query intrinsic
Texture template struct return slots exceeded
Texture template structure members must same basic type
Texture1D
Texture1DArray
Texture2D
Texture2DArray
Texture2DMS
Texture2DMSArray
Texture3D
Texture3DArray
TextureBuffer
TextureCube
TextureCubeArray
TextureDim
TextureDimLog2
TextureSheetData
TextureSize
Texturing in Bottom IR
The 'False Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The 'True Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The <id> passed to
The Base <id
The Component Type of Vector 1 must be the same as ResultType
The Component Type of Vector 2 must be the same as ResultType
The LinkageAttributes Decoration (Linkage name
The Object type (Op
The Result Type must be the same as Composite type in Op
The Result Type of
The Result Type of OpVectorShuffle must be
The Signedness in OpTypeInt must always be 0 when Kernel capability is used
The Struture's last member in
The Struture's type in
The array member in
The cut-off point for automatic loop unrolling
The following extension must be enabled to use this feature
The following forward referenced IDs have not been defined
The high-order bits of a literal number in instruction <id
The lexer was matching from line %d, offset %d, which
The name of the opaque type
The number of indexes in
The number of indexes in Op
The result pointer storage class and base pointer storage class in
The type in
The type of Vector 1 must be OpTypeVector
The type of Vector 2 must be OpTypeVector
The types of Operand 1 and Operand 2 must match
There must be at most one object per Storage Class that can contain a structure type containing members decorated with BuiltIn, consumed per entry-point. Entry Point id
There must be no more than one push constant block
These variables must have DescriptorSet and Binding decorations specified
This indicates a poorly specified lexer RULE
This may be a bug in the validator
This option category has no options
This structure has
Threshold for inlining functions with inline hint
Thursday
Time each pass, printing elapsed time for each on exit
TimeAMD
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
Too few args in Macro
Too manu uniform blocks in shader.  Max (%d), Active (%d
Too many OpFunctionParameters for
Too many args in macro
Too many components in texture template structure type
Too many links
Too many open files
Too many open files in system
Total Execution Time: %5.4f seconds (%5.4f wall clock
TraceNV
TraceRayKHR
TransformFeedback
Transpose
Treat error-reporting calls as cold
TriangleStream
Triangles
Trim@CUtlString@@QEAAXPEBD@Z
True Label
Try to delinearize array references
TryAcquireSRWLockExclusive
Tuesday
Two external descriptor sets have the same slot '%s' and '%s
Two passes with the same argument
Type Descriptor
Type Id
Type-Based Alias Analysis
TypeAccelerationStructureKHR
TypeAccelerationStructureNV
TypeArray
TypeAvcImeDualReferenceStreaminINTEL
TypeAvcImePayloadINTEL
TypeAvcImeResultDualReferenceStreamoutINTEL
TypeAvcImeResultINTEL
TypeAvcImeResultSingleReferenceStreamoutINTEL
TypeAvcImeSingleReferenceStreaminINTEL
TypeAvcMcePayloadINTEL
TypeAvcMceResultINTEL
TypeAvcRefPayloadINTEL
TypeAvcRefResultINTEL
TypeAvcSicPayloadINTEL
TypeAvcSicResultINTEL
TypeBool
TypeCooperativeMatrixNV
TypeDeviceEvent
TypeEvent
TypeFloat
TypeForwardPointer
TypeFunction
TypeImage
TypeInt
TypeMatrix
TypeNamedBarrier
TypeOpaque
TypePipe
TypePipeStorage
TypePointer
TypeQueue
TypeRayQueryProvisionalKHR
TypeReserveId
TypeRuntimeArray
TypeRuntimeArray must have storage class of
TypeSampledImage
TypeSampler
TypeStruct
TypeVector
TypeVmeImageINTEL
TypeVoid
Types must match
U I;U(t
U0A;UXu
U0H;U8t
U16VEC2
U16VEC3
U16VEC4
U32VEC2
U32VEC3
U32VEC4
U64VEC2
U64VEC3
U64VEC4
U8H+U0H
U8I+U0H
U8I;U@t
U@I;UHt
UA>N0Wl
UATAUAVAWH
UATAUAVAWI
UATAUAVH
UATAUAWH
UATAUH
UATAVAWH
UATAVH
UATAWH
UAUAVAWH
UAUAVAWI
UAUAVH
UAUAWH
UAVAWH
UAddSatINTEL
UAverageINTEL
UAverageRoundedINTEL
UCOOPMATNV
UConvert
UCountLeadingZerosINTEL
UCountTrailingZerosINTEL
UGreaterThan
UGreaterThanEqual
UIMAGE1D
UIMAGE1DARRAY
UIMAGE2D
UIMAGE2DARRAY
UIMAGE2DMS
UIMAGE2DMSARRAY
UIMAGE2DRECT
UIMAGE3D
UIMAGEBUFFER
UIMAGECUBE
UIMAGECUBEARRAY
UINT16CONSTANT
UINT16_T
UINT32CONSTANT
UINT32_T
UINT64CONSTANT
UINT64_T
UINT8_T
UINTCONSTANT
ULessThan
ULessThanEqual
UMax3AMD
UMid3AMD
UMin3AMD
UMul32x16INTEL
UMulExtended
UNICODE_ESC
UNIFORM
UNIMPLEMENTED
UNKNOWN
UNKNOWN ERROR
UNKNOWN_DIMENSION
UNKNOWN_SAMPLER
UNKNOWN_TYPE
UNSUPPORTED
USAMPLER1D
USAMPLER1DARRAY
USAMPLER2D
USAMPLER2DARRAY
USAMPLER2DMS
USAMPLER2DMSARRAY
USAMPLER2DRECT
USAMPLER3D
USAMPLERBUFFER
USAMPLERCUBE
USAMPLERCUBEARRAY
USATAUAVAWH
USATAUAVI
USATAUAWH
USATAVAWH
USATAVH
USATAWH
USAUAVAWH
USAUAVAWI
USAUAVH
USAUAWH
USAUAWI
USAVAWH
USER_CONFIG
USUBPASSINPUT
USUBPASSINPUTMS
USVATAUAVAWH
USVATAUAVH
USVATAUAWH
USVATAWH
USVATH
USVAUAVAWH
USVAUAVH
USVAUAWH
USVAUAWI
USVAUH
USVAVAWH
USVAWH
USVWATAUAVAWH
USVWATAUAVH
USVWATAUAWH
USVWATAUH
USVWATAUI
USVWATAVAWH
USVWATAVH
USVWATAWH
USVWAUAVAWH
USVWAUAVH
USVWAUAWH
USVWAUH
USVWAVAWH
USVWAVH
USVWAVI
USVWAWH
USWATAUAVAWH
USWATAUAVH
USWATAUH
USWATAVAWH
USWATAWH
USWATH
USWAUAVAWH
USWAUAVAWI
USWAUAVH
USWAUAVI
USWAUH
USWAVAWH
USWAWH
USubSatINTEL
UTEXTURE1D
UTEXTURE1DARRAY
UTEXTURE2D
UTEXTURE2DARRAY
UTEXTURE2DMS
UTEXTURE2DMSARRAY
UTEXTURE2DRECT
UTEXTURE3D
UTEXTUREBUFFER
UTEXTURECUBE
UTEXTURECUBEARRAY
UUUUUU
UUUUUUU
UUUUUUUU
UUUUUUUUH
UUUUUUUUI
UVATAUAVAWH
UVATAUAVH
UVATAUAWH
UVATAUH
UVATAVAW
UVATAVAWH
UVATAVH
UVATAWH
UVAUAVAWH
UVAUAVH
UVAUAVI
UVAUAWH
UVAUAWI
UVAVAWH
UVLX8888
UVWATAUAVAWH
UVWATAUAVAWI
UVWATAUAVI
UVWATAUAWH
UVWATAUH
UVWATAVAWH
UVWATAVH
UVWATAWH
UVWATH
UVWAUAVAWH
UVWAUAVH
UVWAUAWH
UVWAUH
UVWAVAWH
UVWAVH
UVWAWH
UVWQ8888
UWATAUAVAWH
UWATAUAVH
UWATAUAWH
UWATAUH
UWATAVAWH
UWATAWH
UWAUAVAWH
UWAUAVH
UWAVAWH
Unable to determine source language
Unable to parse built-ins
Unable to translate Geometry Shader input primitive type '%s
Unable to translate Geometry Shader output primitive type '%s
Underlying Types
Unequal
Unexpected character
Unexpected node
Unexpected token
Unhandled inst type (opcode: %d) found outside function definition
Unhandled intrinsic
Unhandled tex op
UnhandledExceptionFilter
Uniform
Uniform OpVariable <id
Uniform and shader storage block variables must
Uniform id
UniformAndStorageBuffer16BitAccess
UniformAndStorageBuffer8BitAccess
UniformBufferArrayDynamicIndexing
UniformBufferArrayNonUniformIndexing
UniformBufferArrayNonUniformIndexingEXT
UniformConstant
UniformConstant OpVariable <id
UniformConstant id
UniformId
UniformMemory
UniformTexelBufferArrayDynamicIndexing
UniformTexelBufferArrayDynamicIndexingEXT
UniformTexelBufferArrayNonUniformIndexing
UniformTexelBufferArrayNonUniformIndexingEXT
Unimplemented
Unimplemented: structure template type in subpass input
Uninitialized Pass
Universal
Unknown
Unknown EVariableQualifier
Unknown ExtInst
Unknown Stage
Unknown constant
Unknown error
Unknown exception
Unknown glslang keyword
Unknown source "%s" on variable "%s
Unknown type to take reciprocal of
Unknown variable name %s
Unlock@CThreadMutex@@QEAAXPEBDH@Z
Unnamed pass: implement Pass::getPassName
Unordered
UnormInt101010
UnormInt101010_2
UnormInt16
UnormInt24
UnormInt8
UnormShort555
UnormShort565
UnpackDouble2x32
UnpackHalf2x16
UnpackSnorm2x16
UnpackSnorm4x8
UnpackUnorm2x16
UnpackUnorm4x8
Unpredictable backedge-taken count
Unpredictable max backedge-taken count
Unreachable
Unroll
Unroll and DontUnroll loop controls must not both be specified
Unroll loops
Unroll loops with run-time trip counts
Unsigned
Unsigned Value
UnsignedChar
UnsignedInt16
UnsignedInt32
UnsignedInt8
Unspecified
Unsupported annotation data type
Unsupported functionality
Unsupported render state type
Untyped
Use of device scope with VulkanKHR memory model requires the
Use this unroll count for all loops, for testing purposes
User Time
User+System
UserSemantic
UserTypeGOOGLE
Using BuiltIn
Using a 16-bit floating point
Using a 16-bit integer type requires the Int16 capability, or an extension that explicitly enables 16-bit integers
Using a 64-bit floating point
Using a 64-bit integer type requires the Int64 capability
Using an 8-bit integer type requires the Int8 capability, or an extension that explicitly enables 8-bit integers
Using pointers with OpPhi requires capability
Using pointers with OpSelect requires capability
UtlMemory_Alloc
UtlMemory_CalcNewAllocationCount
UvScaleVar
V H;V(t
V I;V(t
V(H+V H
V4,S,>V4,>V2
V4,V2,>V4,>V2
V8H;V@t
V@H;VHt
VARYING
VATAUAVAWH
VATAUAVH
VATAVAWH
VATAVH
VATAWH
VAUAVH
VAVAWH
VCRT_isdigit
VCRT_isprint
VCRT_toupper
VECTOR_TYPE
VERSION
VERTICAL_BAR
VFXGL: D3D shader preprocessor DLL not initialized properly. Can't compile shader
VFXGL: OpenGL missing required entrypoints. Can't GetActiveUniforms
VFX_DLL_001
VFX_PROGRAM_MAX
VFileSystem017
VH;|$xt
VKD3D Shader Compiler
VOLATILE
VS_INPUT
VWATAUAVH
VWATAUAWH
VWATAVAW
VWATAVAWH
VWAUAVAWH
V_AppearsToBeANumber
V_Get_stderr
V_IsAbsolutePath
V_SplitString2@@YAXPEBDPEAPEBDHAEAV?$CUtlVector@PEADV?$CUtlMemory@PEADH@@@@@Z
V_SplitString@@YAXPEBD0AEAV?$CUtlVector@PEADV?$CUtlMemory@PEADH@@@@@Z
V_StringAfterPrefixCaseSensitive
V_atofloat32
V_exp2f
V_fprintf
V_log10f
V_log2f
V_sincosf
V_snprintf
V_sscanf
V_strcspn
V_stricmp_fast
V_stristr_fast@@YAPEBDPEBD0@Z
V_strncat
V_strncmp
V_strncpy
V_strspn
V_strtod
V_strtoi64
V_strtoui64
V_vsnprintf
Validation failed after pass
Value Propagation
Value Unknown
Variable
Variable %s with variable source TextureDim is referencing unknown texture %s
Variable declarations that include initializers must have
Variable, Parent
VariablePointers
VariablePointers or VariablePointersStorageBuffer
VariablePointersStorageBuffer
Variables can not have a function[7] storage class outside of a function
Variables identified with the StorageBuffer storage class are used to access transparent buffer backed resources. Such variables must be typed as OpTypeStruct, or an array of this type
Variables identified with the Uniform storage class are
Variables identified with the UniformConstant storage class
Variables must have a function[7] storage class inside of a function
Variably referenced vector components
VecTypeHint
Vector
Vector 1
Vector 2
Vector access is out of bounds, vector size is
Vector shuffle with all don't-care values
Vector type
Vector16
VectorExtractDynamic
VectorInsertDynamic
VectorShuffle
VectorText
VectorTimesMatrix
VectorTimesScalar
Verify ScalarEvolution's backedge taken counts (slow
Verify dominator info (time consuming
Verify if there is a pass dependency cycle
Verify loop info (time consuming
Verify the ScalarEvolution result after running indvars
Version
Vertex Shader
Vertex count
VertexFragment
VertexId
VertexIndex
VertexOrderCcw
VertexOrderCw
VertexShader
Vfx Error: attribute type does not exist or does not support attribute literals
Vfx Error: attribute unsupported or requires a parameter binding
VfxParseAndCompileExpression(413): : Failed to create input stream from "%s
VfxParseAndCompileExpression(421): : Failed to create lexer from "%s
VfxParseAndCompileExpression(429): : Failed to create token stream from "%s
VfxParseAndCompileExpression(437): : Failed to create parser from "%s
VfxReadAndPrepForDynamicShaderCompileMaterialEditor(1025): Error opening file "%s
VfxReadAndPrepForDynamicShaderCompileMaterialEditor(1035): Error masking unused parts for "%s
ViewIndex
Viewport
ViewportIndex
ViewportMaskNV
ViewportMaskPerViewNV
ViewportRelativeNV
VmeImageINTEL
Volatile
Volatile mask setting must match for Equal and Unequal memory semantics
VolatileTexel
VolatileTexelKHR
VolatileType
VpH;Q@t
Vulkan spec allows BuiltIn
Vulkan spec allows BuiltIn HelperInvocation to be only used for variables with Input storage class
Vulkan spec allows BuiltIn HelperInvocation to be used only with Fragment execution model
Vulkan spec allows BuiltIn InstanceId to be used only with IntersectionNV, ClosestHitNV and AnyHitNV execution models
Vulkan spec allows BuiltIn InvocationId to be only used for variables with Input storage class
Vulkan spec allows BuiltIn InvocationId to be used only with TessellationControl or Geometry execution models
Vulkan spec allows BuiltIn PatchVertices to be only used for variables with Input storage class
Vulkan spec allows BuiltIn PatchVertices to be used only with TessellationControl or TessellationEvaluation execution models
Vulkan spec allows BuiltIn PointCoord to be only used for variables with Input storage class
Vulkan spec allows BuiltIn PointCoord to be used only with Fragment execution model
Vulkan spec allows BuiltIn PointSize to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn PointSize to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models
Vulkan spec allows BuiltIn Position to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn Position to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models
Vulkan spec allows BuiltIn PrimitiveId to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn PrimitiveId to be used only with Fragment, TessellationControl, TessellationEvaluation or Geometry execution models
Vulkan spec allows BuiltIn SampleId to be only used for variables with Input storage class
Vulkan spec allows BuiltIn SampleId to be used only with Fragment execution model
Vulkan spec allows BuiltIn SampleMask to be only used for variables with Input or Output storage class
Vulkan spec allows BuiltIn SampleMask to be used only with Fragment execution model
Vulkan spec allows BuiltIn SamplePosition to be only used for variables with Input storage class
Vulkan spec allows BuiltIn SamplePosition to be used only with Fragment execution model
Vulkan spec allows BuiltIn TessCoord to be only used for variables with Input storage class
Vulkan spec allows BuiltIn TessCoord to be used only with TessellationEvaluation execution model
Vulkan spec disallows OpAtomicLoad with Memory Semantics Release, AcquireRelease and SequentiallyConsistent
Vulkan spec disallows OpAtomicStore with Memory Semantics Acquire, AcquireRelease and SequentiallyConsistent
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is Vertex
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Output storage class if execution model is Fragment
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Input storage class if execution model is Vertex, TessellationEvaluation, or Geometry
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Output storage class if execution model is Fragment
Vulkan spec doesn't allow BuiltIn PointSize to be used for variables with Input storage class if execution model is Vertex
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is Vertex
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is Fragment
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationControl
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationEvaluation
Vulkan spec doesn't allow BuiltIn VertexId/InstanceId to be used
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Input storage class if execution model is TessellationControl
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Output storage class if execution model is TessellationEvaluation
Vulkan spec requires BuiltIn WorkgroupSize to be a constant
Vulkan specification requires Memory Semantics to have one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
VulkanKHR
VulkanMemoryModel
VulkanMemoryModelDeviceScope
VulkanMemoryModelDeviceScopeKHR
VulkanMemoryModelDeviceScopeKHR capability
VulkanMemoryModelKHR
VulkanMemoryModelKHR capability must only be specified if the VulkanKHR memory model is used
W H;W(t
W I;W(t
W3C WebGPU Group
W3C WebGPU Group WHLSL Shader Translator
W8I;|$Ht
W@I;WHt
WARNING
WARNING: AST will form illegal SPIR-V; need to transform to legalize
WATAUAVAWH
WATAUAVH
WATAUAWH
WATAUH
WATAVAWH
WATAWH
WAVAWH
WHLSL Shader Translator
WIREFRAME
WORKGROUPCOHERENT
WRITEONLY
WUUUUU
Wait Events
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitKernel
WaitWorkGroup
WakeAllConditionVariable
WakeConditionVariable
Wall Time
Warning
Warning, (version, profile) forced to be
WarpIDNV
WarpsPerSMNV
WaveActiveAllEqual
WaveActiveAllEqualBool
WaveActiveAllTrue
WaveActiveAnyTrue
WaveActiveBallot
WaveActiveBitAnd
WaveActiveBitOr
WaveActiveBitXor
WaveActiveCountBits
WaveActiveMax
WaveActiveMin
WaveActiveProduct
WaveActiveSum
WaveGetLaneCount
WaveGetLaneIndex
WaveIsFirstLane
WavePrefixCountBits
WavePrefixProduct
WavePrefixSum
WaveReadLaneAt
WaveReadLaneFirst
WebGPU does not allow BuiltIn
WebGPU requires SPIR-V to be little endian
WebGPU spec allows BuiltIn LocalInvocationIndex to be only used for variables with Input storage class
WebGPU spec allows BuiltIn Position to be only used for variables with Output storage class
WebGPU spec allows BuiltIn Position to be used only with the Vertex execution model
WebGPU spec allows BuiltIn VertexIndex to be used only with GLCompute execution model
Wednesday
When BuiltIn decoration is applied to a structure-type member
WideCharToMultiByte
Wine VKD3D Shader Compiler
Wno-effects-syntax
WorkDim
WorkGroupID
WorkGroupSize
Workgroup
Workgroup and Subgroup
Workgroup for OpControlBarrier
Workgroup for OpMemoryBarrier
Workgroup storage class pointer requires VariablePointers capability to be specified
Workgroup, CrossWorkgroup, Generic, Image or StorageBuffer
Workgroup, Invocation, and QueueFamilyKHR
WorkgroupId
WorkgroupMemory
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
WorkgroupSize
WorldRayDirectionKHR
WorldRayDirectionNV
WorldRayOriginKHR
WorldRayOriginNV
WorldToObjectKHR
WorldToObjectNV
WriteConsoleW
WriteFile
WriteInvocationAMD
WriteOnly
WritePackedPrimitiveIndices4x8NV
WritePipe
Wrong number of items in value for annotation %s. Ignoring annotation
X UVWATAUAVAWH
X UVWATAUH
X VWAWH
X WATAUAVAWH
X-LEGEND
X-LEGEND Mesa-IR/SPIR-V Translator
X0H+X(H
X360InstanceCount
X360TileOffset
X360_DST16
X360_DST24
X360_DST24F
XA_A]A
XA_A^A
XA_A^A]A
XFB Buffer Number
XFB Stride
XH+\$PI
XH9{`u
XHI9H@u
XOR_ASSIGN
XfbBuffer
XfbStride
Y0H;Y8t
YCUtlString@@QEAAAEAV0@AEBV0@@Z
YCUtlString@@QEAAAEAV0@D@Z
YCUtlString@@QEAAAEAV0@PEBD@Z
YVFXGL: OpenGL missing required entrypoints. Can't compile shader
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYYY;;;;JJJJ
YYYY;;;;JJJJU
YYYY;;;;JJJJU99
YYYYZZZZ
You must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function
Yv{2-+Rj
Z2\dZX
ZdaPvRKSt9nothrow_t
ZdlPvRKSt9nothrow_t
ZeroExtend
ZnajRKSt9nothrow_t
ZnamRKSt9nothrow_t
ZnwjRKSt9nothrow_t
ZnwmRKSt9nothrow_t
a(M+a I
a.extrq
a256msg
a256rnds2
a_start
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
absoluteDifference
ac.sat
ac.up.s1.sat
accelerationStructureEXT
accelerationStructureNV
accelerationStructureNV can only be used in uniform variables or function parameters
accept
access qualifier
according to the Vulkan spec atomic Result Type needs to be a 32-bit int scalar type
ackrl.ph
acksave
acq_rel
acq_relH
acquire
acquireH
adcyclecounter
add second child into first child
add.ub.sw
add.with.overflow
addCarry
addInvocations
addInvocationsAMD
addInvocationsExclusiveScan
addInvocationsExclusiveScanAMD
addInvocationsExclusiveScanNonUniform
addInvocationsExclusiveScanNonUniformAMD
addInvocationsInclusiveScan
addInvocationsInclusiveScanAMD
addInvocationsInclusiveScanNonUniform
addInvocationsInclusiveScanNonUniformAMD
addInvocationsNonUniform
addInvocationsNonUniformAMD
addSaturate
addconv
additive_expression
address family not supported
address in use
address not available
addressing model
addressu
addressv
addressw
addrspace
addrspacecast
addsub.p
addu.w.qb
adub.acc
advapi32
aggShadow
aggregate
aggregate in vector constructor
aggregate metadata for type
agment_tH9P
agment_tH9Q
agressive_dce_pass
agressive_dce_pass2
agressive_dce_pass3
align A
align H
align L
alignof
alignstack
all default precisions are highp; use precision statements to quiet warning, e.g
all members of that structure type must also be decorated with
all redeclarations must use the same depth layout on
all stride settings must match for xfb buffer
all() on a scalar
allInvocations
allInvocationsARB
allInvocationsEqual
allInvocationsEqualARB
allow_uav_condition
already connected
also be decorated with a *Binding
always-inline
alwaysinline
ambiguous best function under implicit type conversion
ambiguous function signature match: multiple signatures match under implicit type conversion
ambiguous patch constant function
amdfam10
america
american
american english
american-english
and OpImageFetch
and ending with
and second child into first child
and.cond
and.shrunk
and_expression
anonymous member
anonymous namespace
antlr3BaseRecognizerNew
antlr3BitsetCopy
antlr3BitsetList
antlr3BitsetLoad
antlr3BitsetNew
antlr3BitsetOf
antlr3BitsetSetAPI
antlr3CommonTokenDebugStreamSourceNew
antlr3CommonTokenNew
antlr3CommonTokenStreamNew
antlr3CommonTokenStreamSourceNew
antlr3EnumNew
antlr3ExceptionNew
antlr3Hash
antlr3HashTableNew
antlr3IntStreamNew
antlr3IntTrieNew
antlr3LexerNew
antlr3LexerNewStream
antlr3ListNew
antlr3MTExceptionNew
antlr3NewAsciiStringCopyStream
antlr3NewAsciiStringInPlaceStream
antlr3NewUCS2StringInPlaceStream
antlr3ParserNew
antlr3ParserNewStream
antlr3ParserNewStreamDbg
antlr3RecognitionExceptionNew
antlr3SetTokenAPI
antlr3SetVectorApi
antlr3StackNew
antlr3StringFactoryNew
antlr3TokenFactoryNew
antlr3TokenStreamNew
antlr3UCS2StringFactoryNew
antlr3VectorFactoryNew
antlr3VectorNew
antlr3dfapredict
antlr3dfaspecialStateTransition
antlr3dfaspecialTransition
any() on a scalar
any-hit
anyInvocation
anyInvocationARB
anyregcc
anyregccH
api-ms
api-ms-win-appmodel-runtime-l1-1-2
api-ms-win-core-datetime-l1-1-1
api-ms-win-core-fibers-l1-1-1
api-ms-win-core-file-l1-2-2
api-ms-win-core-localization-l1-2-1
api-ms-win-core-localization-obsolete-l1-2-0
api-ms-win-core-processthreads-l1-1-2
api-ms-win-core-string-l1-1-0
api-ms-win-core-synch-l1-2-0
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-2-1
api-ms-win-core-winrt-l1-1-0
api-ms-win-core-xstate-l2-1-0
api-ms-win-rtcore-ntuser-window-l1-1-0
api-ms-win-security-systemfunctions-l1-1-0
appear as the final member of an OpTypeStruct, thus cannot
appears in the binary before its dominator
appending
appendstructuredbuffer
aq.s.w.ph
aq.sa.w.ph
ar.annotation
ar.sync
arc cosine
arc hyp. cosine
arc hyp. sine
arc hyp. tangent
arc sine
arc tangent
arch64.neon.fcvtas
arch64.neon.fcvtau
arch64.neon.fcvtms
arch64.neon.fcvtmu
arch64.neon.fcvtns
arch64.neon.fcvtnu
arch64.neon.fcvtps
arch64.neon.fcvtpu
arch64.neon.fcvtxn
arch64.neon.fcvtzs
arch64.neon.fcvtzu
arch64.neon.frintn
arch64.neon.fsqrt
arch64.neon.rbit
arch64.neon.saddlv
arch64.neon.smaxv
arch64.neon.sminv
arch64.neon.suqadd
arch64.neon.uaddlv
arch64.neon.umaxv
arch64.neon.uminv
arch64.neon.usqadd
arch64.neon.v
arch64.neon.vabd
arch64.neon.vaddv
arch64.neon.vcage
arch64.neon.vcagt
arch64.neon.vceq
arch64.neon.vcge
arch64.neon.vcgt
arch64.neon.vchi
arch64.neon.vchs
arch64.neon.vclez
arch64.neon.vcltz
arch64.neon.vcvt
arch64.neon.vcvtf
arch64.neon.vld1x2
arch64.neon.vld1x3
arch64.neon.vld1x4
arch64.neon.vmaxnm
arch64.neon.vmaxnmv
arch64.neon.vmaxv
arch64.neon.vminnm
arch64.neon.vminnmv
arch64.neon.vminv
arch64.neon.vmulx
arch64.neon.vpmaxnm
arch64.neon.vpminnm
arch64.neon.vqdmlal
arch64.neon.vqdmlsl
arch64.neon.vqrshls
arch64.neon.vqrshlu
arch64.neon.vqshls
arch64.neon.vqshls.n
arch64.neon.vqshlu
arch64.neon.vqshlu.n
arch64.neon.vqshlus.n
arch64.neon.vrecpx
arch64.neon.vrshrn
arch64.neon.vsli
arch64.neon.vsqadd
arch64.neon.vsqrshrn
arch64.neon.vsqrshrun
arch64.neon.vsqshlu
arch64.neon.vsqshrn
arch64.neon.vsqshrun
arch64.neon.vsri
arch64.neon.vsrshr
arch64.neon.vst1x2
arch64.neon.vst1x3
arch64.neon.vst1x4
arch64.neon.vtbl1
arch64.neon.vtbl2
arch64.neon.vtbl3
arch64.neon.vtbl4
arch64.neon.vtbx1
arch64.neon.vtbx2
arch64.neon.vtbx3
arch64.neon.vtbx4
arch64.neon.vtstd
arch64.neon.vuqadd
arch64.neon.vuqrshrn
arch64.neon.vuqshrn
arch64.neon.vurshr
arch64.neon.xtn
are referenced but not defined in function
are used only as handles to refer to opaque resources. Such
argument cannot drop memory qualifier when passed to formal parameter
argument list too long
argument must be a power of 2
argument must be at least 1
argument must be compile-time constant
argument must be qualified as __explicitInterpAMD in
argument out of domain
arguments
arguments. OpTypeFunction <id
ariant.start
arm_aapcs_vfpcc
arm_aapcscc
arm_apcscc
arpsize
array argument must be sized
array assignment
array comparison
array constructor argument not correct type to construct array element
array constructor must have at least one argument
array constructor needs one argument per array element
array in function return type
array index out of range '%d
array initializer
array initializer must be sized
array length
array must be declared with a size before using this method
array must be explicitly sized
array must be redeclared with a size before being indexed with a variable
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must first be sized by a redeclaration or layout qualifier
array of void
array size
array size must be a constant integer expression
array size must be a positive integer
array size required
array variable name expected
array-of-array of block
array_specifier
arrayed IO in physical IO mode (use logical IO instead
arrayed constructor
arrayed type
arrays of arrays
arrier0
arrier0.popc
artificial
as Result Type
as an operand of <id
asdouble
asfloat
ask2int.v16i1
askload
askload.p
askmov.dqu
askstore
askstore.p
asrhub.sat
assignment expression
assignment expression in initializer list
assignment_expression
assignment_operator
assuming binding count of one for compile-time checking of binding numbers for unsized array
at <EOF
at minimum
at minimum or one of the following extensions
at offset
at offset %d
at.rnd
atan2pi
athlon-fx
athlon-mp
athlon-tbird
athlon-xp
athlon64
atomic
atomic counter types
atomic counters can only be highp
atomic counters offset should align based on 4
atomic counters sharing the same offset
atomicAdd
atomicAnd
atomicCompSwap
atomicCounter
atomicCounterAdd
atomicCounterAnd
atomicCounterCompSwap
atomicCounterDecrement
atomicCounterExchange
atomicCounterIncrement
atomicCounterMax
atomicCounterMin
atomicCounterOr
atomicCounterSubtract
atomicCounterXor
atomicExchange
atomicLoad
atomicMax
atomicMin
atomicOr
atomicStore
atomicXor
atomic_uint
atomic_uint binding is too large
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
atomic_uints can only be used in uniform variables or function parameters
atomicrmw
attachment index is too large
attempted to be registered
attribute
attribute does not apply to a loop
attribute does not apply to a selection
attribute does not apply to a switch
attribute does not apply to a type
attribute does not apply to entry point
attribute identifier
attribute requires a SPIR-V 1.4 target-env
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord
attribute with arguments not recognized, skipping
attribute_list
attributes
attributes don't apply to control declaration
aturate
aturate.ftz.f
auroraux
aurorauxH
australian
auto-map-bindings
available_externally
average
averageRounded
az-AZ-Cyrl
az-AZ-Latn
az-az-cyrl
az-az-latn
b.nopack
b0ddbN
back-edge block
back-edge blocks but the standard requires exactly one
back-end-pointer
backedge
backedge-taken count is
bad address
bad allocation
bad argument
bad array new length
bad cast
bad character in float exponent
bad digit in hexadecimal literal
bad exception
bad expression
bad file descriptor
bad function call
bad locale name
bad magic number
bad message
bad ordering
bad profile name; use es, core, or compatibility
bad schema, must be 0
bad token
bad tokens following profile -- expected newline
bad_blend
badref
badref>H
ballotARB
barrier
base type of sampler
base type of sampler return type
based on the function's type
basic block
basic type
basic type in subpass input
basic type in texture
basic type: double
basicaa
basiccg
be equal
be instantiated via OpVariable
be targeted by OpName, OpGroupDecorate
because it is targeted by an OpEntryPoint instruction
beginInvocationInterlockARB
beginInvocationInterlockARB() cannot be placed after a return from main
beginInvocationInterlockARB() cannot be placed within flow control
beginInvocationInterlockARB() must be called before endInvocationInterlockARB
beginInvocationInterlockARB() must be in a fragment shader
beginInvocationInterlockARB() must be in main
beginInvocationInterlockARB() must only be called once
behavior for extension not specified
behavior not supported
belgian
bg.declare
binding
binding = %d
binding is too large
bit integer for the addressing model used in the module
bit shift left
bit shift right
bit-shift left assign
bit-shift right assign
bit-wise AND in version
bit-wise OR in version
bitCount
bitFieldReverse
bitcast
bitfield
bitfieldExtract
bitfieldInsert
bitfieldReverse
bitsclri
bitselect
bitwise and
bitwise exclusive or
bitwise inclusive or
bitwise not
bitwise-and assign
bitwise-or assign
bitwise-xor assign
bjectsize
blend equation
blend_support
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_screen
blend_support_softlight
block <ID
block declaration
block initializer
block instance name redefinition
block name cannot be redefined
block name cannot redefine a non-block name
block redeclaration has extra members
block storage qualification
block without member remapping
block_merge_pass
block_merge_pass2
block_structure
blockaddress
bm.bextri.u
bool   subgroupAllEqual(%s
bool   subgroupAny(bool
bool   subgroupBallotBitExtract(uvec4, uint
bool   subgroupInverseBallot(uvec4
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer
bool helperInvocationEXT
bool reportIntersectionNV(float, uint);bool reportIntersectionEXT(float, uint
bool sparseTexelsResidentARB(int code
bool1x1
bool1x2
bool1x3
bool1x4
bool2x1
bool2x2
bool2x3
bool2x4
bool3x1
bool3x2
bool3x3
bool3x4
bool4x1
bool4x2
bool4x3
bool4x4
boolean expression expected
bordercolor
bottom-transl
branch type
branch_weights
branches to the
break statement only allowed in switch and loops
break-crit-edges
britain
brmerge
broadcast
broadcast.s
broadcasti128
broken pipe
bs-BA-Latn
bs-ba-latn
bs.ftz.f
buffer aliasing not yet supported
buffer block
buffer is too large
buffer reference indexing
buffer_rH9
buffer_reference
buffer_reference_align
buffers can be declared only as blocks
bugtrap
build local maps
built in unary operator function.  Type: %s
built in variable
built-in
built-in block redeclaration
built-in function
builtin
but access index is
but does not immediately precede it in the OpSwitch's target list
but is not listed as an interface
but its merge block
but not via a structured exit
but with an element size of
byteAddrTemp
byteaddressbuffer
c [1>H
c.altivec
c.altivec.v
c.s0.sat
c.up.s1.sat
c?FA@s
cS? C[H
c[subcomponent][.component
call argument
callable
callable data number
callableDataEXT
callableDataInEXT
callableDataInNV
callableDataInNV block
callableDataNV
callableDataNV block
called with execution model
calling
calling user function from global scope
calls H
can not find index
can only apply depth layout to gl_FragDepth
can only apply highp to atomic_uint
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply to 'in
can only apply to 'out
can only apply to a standalone qualifier
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage
can only apply to uniform, buffer, in, or out storage qualifiers
can only be applied to 'const'-qualified scalar
can only be applied to a scalar
can only be applied to a standalone 'out
can only be followed by a single macro name
can only be formed between a block and a loop header
can only be used on an output
can only be used on variable declaration
can only be used with a block
can only be used with a buffer
can only be used with a subpass
can only be used with a uniform
can only be used with an explicit location
can only be used with buffer
can only be used with non-externally visible shader Storage
can only be used with physical addressing models
can only be used with std140, std430, or scalar layout packing
can only change layout qualification of
can only have one auxiliary qualifier (centroid, patch, and sample
can only have one interpolation qualifier (flat, smooth, noperspective, __explicitInterpAMD
can only redeclare a built-in block once, and before any use
can only specify on a buffer block
can only specify on a uniform block
can only use in an in/out block
can only use on input blocks in mesh shader
can only use on input in tessellation-evaluation shader
can only use on output in tessellation-control shader
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
can't convert
can't evaluate expression
can't find function
can't handle multiple entry points per stage
can't have an initializer
can't link compilation units from different source languages
can't modify a const
can't modify a readonly buffer
can't modify a sampler
can't modify a shaderrecordnv qualified buffer
can't modify a uniform
can't modify accelerationStructureNV
can't modify an atomic_uint
can't modify gl_FragCoord
can't modify gl_FragDepth if using early_fragment_tests
can't modify gl_FrontFace
can't modify gl_InstanceID
can't modify gl_PointCoord
can't modify gl_VertexID
can't modify rayQueryEXT
can't modify shader input
can't modify void
can't read from explicitly-interpolated object
can't read from writeonly object
can't specify both Aliased and Restrict for PhysicalStorageBufferEXT pointer
can't specify both AliasedPointerEXT and
can't specify both AliasedPointerEXT and RestrictPointerEXT for PhysicalStorageBufferEXT pointer
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
can't swizzle types containing float16
can't use auxiliary qualifier on a fragment output
can't use function syntax on variable
can't use interpolation qualifier on a fragment output
can't use variable in patch constant function
can't use with arrays containing float16
can't use with arrays containing int16
can't use with arrays containing int8
can't use with arrays containing uint16
can't use with arrays containing uint8
can't use with reference types
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with structs containing int16
can't use with structs containing int8
can't use with structs containing uint16
can't use with structs containing uint8
can't use with types containing arrays sized with a specialization constant
canadian
cannot access member variables (static member function
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
cannot add perprimitiveNV qualifier to redeclared block member
cannot add perviewNV qualifier to redeclared block member
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot appear before the memory model instruction
cannot appear in a function declaration
cannot appear outside switch statement
cannot apply layout qualifier to
cannot apply layout qualifiers to a shared variable
cannot apply layout qualifiers to hitAttributeNV variable
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
cannot apply to
cannot apply to 'in
cannot apply to 'out
cannot apply to a block
cannot apply to a cooperative matrix type
cannot apply to a matrix, structure, or block
cannot apply to an array
cannot apply to input
cannot apply to taskNV in/out blocks
cannot apply to uniform or buffer block
cannot be 0xFFFFFFFF in WebGPU execution environment
cannot be OpTypeVoid
cannot be a constant zero
cannot be a matrix
cannot be a structure
cannot be a structure or array
cannot be a type
cannot be a void pointer
cannot be an argument type except for '(void
cannot be applied to function id
cannot be applied to this type
cannot be bool
cannot be both specified
cannot be greater than 3 for pervertexNV
cannot be negative
cannot be nested inside control flow
cannot be used (maybe an instance name is needed
cannot be used as a member decoration
cannot be used with push_constant
cannot be used with shaderRecordNV
cannot change array size of redeclared block
cannot change array size of redeclared block member
cannot change arrayness of redeclared block
cannot change arrayness of redeclared block member
cannot change input storage qualification of
cannot change interpolation qualification of
cannot change output storage qualification of
cannot change previously set domain
cannot change previously set fragment shader interlock ordering
cannot change previously set input primitive
cannot change previously set layout value
cannot change previously set maxvertexcount attribute
cannot change previously set output primitive
cannot change previously set outputcontrolpoints attribute
cannot change previously set outputtopology
cannot change previously set partitioning
cannot change previously set size
cannot change previously set vertex order
cannot change previously set vertex spacing
cannot change qualification after use
cannot change qualification of
cannot change storage, memory, or auxiliary qualification of
cannot change the type of
cannot compose log message
cannot construct this type
cannot construct with these arguments
cannot contain a double, int64, or uint64
cannot convert a sampler
cannot convert a void
cannot convert an atomic_uint
cannot convert from '%s' to '%s
cannot convert input argument, argument
cannot convert parameter %d from '%s' to '%s
cannot convert return value to function return type
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot declare a default, include a type or full declaration
cannot declare a default, use a full declaration
cannot have a null value
cannot have any Location or Component decorations
cannot have statements before first case/default label
cannot have the sign bit set to 1
cannot implicitly initialize opaque members
cannot initialize this type of qualifier
cannot lie in previous members
cannot match to any predicted input
cannot modify hitAttributeNV in this stage
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
cannot print option value
cannot re-qualify a function name
cannot redeclare a built-in block with a user name
cannot redeclare a non block as a block
cannot redeclare a user-block member array
cannot redeclare after use
cannot redeclare block
cannot redeclare block member with a different type
cannot redeclare with different qualification
cannot specify matrix layout on a variable declaration
cannot specify on a variable declaration
cannot specify packing on a variable declaration
cannot use 'inout' at global scope
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type
cannot use centroid qualifier on an interface block
cannot use in a block array where new locations are needed for each block element
cannot use in preprocessor expression when expanded from macros
cannot use interpolation qualifiers on an interface block
cannot use interpolation qualifiers with patch
cannot use invariant qualifier on a function parameter
cannot use invariant qualifier on an interface block
cannot use invariant qualifier on structure members
cannot use layout qualifiers on a function parameter
cannot use layout qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type
cannot use sample qualifier on an interface block
cannot use storage or interpolation qualifiers on structure members
canonicalize-cfg
canonicalize-insts
capability
case entry block
case exit block
case expression
case_label
catter
cbuffer
cbuffer %s
cc.sat
ccccccccc
ccp_pass
centroid
centroid/sample/patch
cfg-cleanup
cfg_cleanup_pass
cggg56Gdeggggggggg`ab
cggg56ff
cgscc-passmgr
changed from
channel
channelMipAlgorithm
channelOutputColorSpace_%s
character literals not supported
chardiff
chinese
chinese-hongkong
chinese-simplified
chinese-singapore
chinese-traditional
cleanup
clearerr
client opengl100
client vulkan100
clmulqdq
clock2x32ARB
clockARB
clockRealtime2x32EXT
clockRealtimeEXT
closedir
closest-hit
clrcall
cluster size
cmpbeq.any
cmpxchg
cmpys.acc.s1
coalesce-inserts
coherent
coherent volatile
column_mL9
column_major
columns, but access index is
combination
combined (Vector1 + Vector2) size of
combined token is invalid
combined tokens are too long
comineq.sd
comineq.ss
comment
committed
common
compatibility
compilation errors.  No code generated
compilation terminated
compiletargetexprLexerNew
compiletargetexprLexerNewSSD
compiletargetexprParserNew
compiletargetexprParserNewSSD
complex I/O type; use new glslang C++ interface
complex loop exits (shared exit block
complex loop exits (two exit branches from same block
componenH9
component
component argument
component is too large
component type
component type does not match Result Type <id
component vector of
component-wise multiply
components
components (1/4 stride) needed are
components < 4 in matrix buffer type
components are not float scalar
components are not int scalar
components as the first member
components for
components must be in the range [0, 3
components must be in the range [0, 31
components, but given
components, but given only
composite
compound_statement
compound_statement_no_new_scope
compute
compute shader derivatives
compute shaders
condition
condition must be a scalar integer expression
conditional expression
conditional_expression
conditionopt
connection aborted
connection already in progress
connection refused
connection reset
const (read only
const array
const bool
const int
const int  gl_MaxClipPlanes = %d
const int  gl_MaxCombinedTextureImageUnits = %d
const int  gl_MaxDrawBuffers = %d
const int  gl_MaxFragmentUniformComponents = %d
const int  gl_MaxFragmentUniformVectors = %d
const int  gl_MaxLights = %d
const int  gl_MaxTextureCoords = %d
const int  gl_MaxTextureImageUnits = %d
const int  gl_MaxTextureUnits = %d
const int  gl_MaxVaryingFloats = %d
const int  gl_MaxVertexAttribs = %d
const int  gl_MaxVertexTextureImageUnits = %d
const int  gl_MaxVertexUniformComponents = %d
const int  gl_MaxVertexUniformVectors = %d
const int gl_MaxAtomicCounterBindings = %d
const int gl_MaxAtomicCounterBufferSize = %d
const int gl_MaxClipDistances = %d
const int gl_MaxCombinedAtomicCounterBuffers = %d
const int gl_MaxCombinedAtomicCounters = %d
const int gl_MaxCombinedClipAndCullDistances = %d
const int gl_MaxCombinedImageUniforms = %d
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d
const int gl_MaxCombinedShaderOutputResources = %d
const int gl_MaxComputeAtomicCounterBuffers = %d
const int gl_MaxComputeAtomicCounters = %d
const int gl_MaxComputeImageUniforms = %d
const int gl_MaxComputeTextureImageUnits = %d
const int gl_MaxComputeUniformComponents = %d
const int gl_MaxCullDistances = %d
const int gl_MaxFragmentAtomicCounterBuffers = %d
const int gl_MaxFragmentAtomicCounters = %d
const int gl_MaxFragmentImageUniforms = %d
const int gl_MaxFragmentInputComponents = %d
const int gl_MaxGeometryAtomicCounterBuffers = %d
const int gl_MaxGeometryAtomicCounters = %d
const int gl_MaxGeometryImageUniforms = %d
const int gl_MaxGeometryInputComponents = %d
const int gl_MaxGeometryOutputComponents = %d
const int gl_MaxGeometryOutputVertices = %d
const int gl_MaxGeometryTextureImageUnits = %d
const int gl_MaxGeometryTotalOutputComponents = %d
const int gl_MaxGeometryUniformComponents = %d
const int gl_MaxGeometryVaryingComponents = %d
const int gl_MaxImageSamples = %d
const int gl_MaxImageUnits = %d
const int gl_MaxMeshOutputPrimitivesNV = %d
const int gl_MaxMeshOutputVerticesNV = %d
const int gl_MaxMeshViewCountNV = %d
const int gl_MaxPatchVertices = %d
const int gl_MaxSamples = %d
const int gl_MaxTessControlAtomicCounterBuffers = %d
const int gl_MaxTessControlAtomicCounters = %d
const int gl_MaxTessControlImageUniforms = %d
const int gl_MaxTessControlInputComponents = %d
const int gl_MaxTessControlOutputComponents = %d
const int gl_MaxTessControlTextureImageUnits = %d
const int gl_MaxTessControlTotalOutputComponents = %d
const int gl_MaxTessControlUniformComponents = %d
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d
const int gl_MaxTessEvaluationAtomicCounters = %d
const int gl_MaxTessEvaluationImageUniforms = %d
const int gl_MaxTessEvaluationInputComponents = %d
const int gl_MaxTessEvaluationOutputComponents = %d
const int gl_MaxTessEvaluationTextureImageUnits = %d
const int gl_MaxTessEvaluationUniformComponents = %d
const int gl_MaxTessGenLevel = %d
const int gl_MaxTessPatchComponents = %d
const int gl_MaxTransformFeedbackBuffers = %d
const int gl_MaxTransformFeedbackInterleavedComponents = %d
const int gl_MaxVaryingComponents = %d
const int gl_MaxVertexAtomicCounterBuffers = %d
const int gl_MaxVertexAtomicCounters = %d
const int gl_MaxVertexImageUniforms = %d
const int gl_MaxVertexOutputComponents = %d
const int gl_MaxViewports = %d
const int gl_ScopeDevice      = 1
const int gl_ScopeInvocation  = 4
const int gl_ScopeQueueFamily = 5
const int gl_ScopeShaderCallEXT = 6
const int gl_ScopeSubgroup    = 3
const int gl_ScopeWorkgroup   = 2
const int gl_SemanticsAcquire         = 0x2
const int gl_SemanticsAcquireRelease  = 0x8
const int gl_SemanticsMakeAvailable   = 0x2000
const int gl_SemanticsMakeVisible     = 0x4000
const int gl_SemanticsRelaxed         = 0x0
const int gl_SemanticsRelease         = 0x4
const int gl_SemanticsVolatile        = 0x8000
const int gl_StorageSemanticsBuffer   = 0x40
const int gl_StorageSemanticsImage    = 0x800
const int gl_StorageSemanticsNone     = 0x0
const int gl_StorageSemanticsOutput   = 0x1000
const int gl_StorageSemanticsShared   = 0x100
const int16_t
const int64_t
const int8_t
const ivec2[4
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d
const ivec3 gl_MaxMeshWorkGroupSizeNV = ivec3(%d,%d,%d
const ivec3 gl_MaxTaskWorkGroupSizeNV = ivec3(%d,%d,%d
const mediump int  gl_MaxCombinedTextureImageUnits = %d
const mediump int  gl_MaxDrawBuffers = %d
const mediump int  gl_MaxFragmentInputVectors = %d
const mediump int  gl_MaxFragmentUniformVectors = %d
const mediump int  gl_MaxProgramTexelOffset = %d
const mediump int  gl_MaxTextureImageUnits = %d
const mediump int  gl_MaxVaryingVectors = %d
const mediump int  gl_MaxVertexAttribs = %d
const mediump int  gl_MaxVertexOutputVectors = %d
const mediump int  gl_MaxVertexTextureImageUnits = %d
const mediump int  gl_MaxVertexUniformVectors = %d
const mediump int  gl_MinProgramTexelOffset = %d
const uint
const uint gl_RayFlagsNoneNV = 0U;const uint gl_RayFlagsNoneEXT = 0U;const uint gl_RayFlagsOpaqueNV = 1U;const uint gl_RayFlagsOpaqueEXT = 1U;const uint gl_RayFlagsNoOpaqueNV = 2U;const uint gl_RayFlagsNoOpaqueEXT = 2U;const uint gl_RayFlagsTerminateOnFirstHitNV = 4U;const uint gl_RayFlagsTerminateOnFirstHitEXT = 4U;const uint gl_RayFlagsSkipClosestHitShaderNV = 8U;const uint gl_RayFlagsSkipClosestHitShaderEXT = 8U;const uint gl_RayFlagsCullBackFacingTrianglesNV = 16U;const uint gl_RayFlagsCullBackFacingTrianglesEXT = 16U;const uint gl_RayFlagsCullFrontFacingTrianglesNV = 32U;const uint gl_RayFlagsCullFrontFacingTrianglesEXT = 32U;const uint gl_RayFlagsCullOpaqueNV = 64U;const uint gl_RayFlagsCullOpaqueEXT = 64U;const uint gl_RayFlagsCullNoOpaqueNV = 128U;const uint gl_RayFlagsCullNoOpaqueEXT = 128U;const uint gl_HitKindFrontFacingTriangleEXT = 254U;const uint gl_HitKindBackFacingTriangleEXT = 255U
const uint gl_RayQueryCandidateIntersectionEXT = 0U;const uint gl_RayQueryCommittedIntersectionEXT = 1U;const uint gl_RayQueryCommittedIntersectionNoneEXT = 0U;const uint gl_RayQueryCommittedIntersectionTriangleEXT = 1U;const uint gl_RayQueryCommittedIntersectionGeneratedEXT = 2U;const uint gl_RayQueryCandidateIntersectionTriangleEXT = 0U;const uint gl_RayQueryCandidateIntersectionAABBEXT = 1U
const uint16_t
const uint64_t
const uint8_t
const_cast
constant
constant expression required
constantH9
constant_expression
constant_id
constmerge
construct headed by
construct with the
construct, but not to the
constructed
constructing matrix from matrix
constructing non-array constituent from array argument
constructor
constructor argument does not have a type
consumestructuredbuffer
containing
containing OpTypeRuntimeArray must have storage class of
contains an array with stride
contains an array with stride 0
contains members with BuiltIn decoration. Therefore this
contains structure <id
context-insensitive value
continue
continue statement only allowed in loops
continue target
continueH
control flow: exitBlock handled before multi-pred loopMerge
control flow: not all blocks were translated
controlBarrier
conversion wrapper
convert-local-access-chains
convert-to-half-pass
convert_to_half
coopMatLoadNV
coopMatMulAddNV
coopMatStoreNV
coordTemp
copy constructor closure
copy object
copy-propagate-arrays
copy_propagate_pass
copysign
copysignf
copysignl
core-avx-i
core-avx2
core.chkct
core.eeu
core.endin
core.freer
core.getr
core.getst
core.getts
core.in
core.inct
core.initcp
core.initdp
core.initlr
core.initpc
core.initsp
core.inshr
core.int
core.mjoin
core.msync
core.out
core.outct
core.outshr
core.outt
core.peek
core.setc
core.setclk
core.setd
core.setev
core.setpsc
core.setpt
core.setrdy
core.settw
core.setv
core.syncr
core.testct
core.testwct
corei7-avx
correlated-propagation
corresponding member type of Result Type struct
cospif
could not create assignment
could not start LunarGLASS in multi-threaded mode
couldn't get metadata for input instruction
count does not match Result Type <id
count must be one
countLeadingZeros
countTrailingZeros
countbits
coveragH9H
cp.approx.ftz.d
cp.ps.256
crc32.32.8
crit_edge
cross device link
cross-product
crotate
crt_strtox::floating_point_value::as_double
crt_strtox::floating_point_value::as_float
ctermid
cubeFaceCoord
cubeFaceCoordAMD
cubeFaceIndex
cubeFaceIndexAMD
cxa_atexit
cxa_guard_abort
cxa_guard_acquire
cxa_guard_release
cy_lengtH9H
d$ ;D$P
d$ UAVAWH
d$(E8u
d$09YPv1H
d$0D8b,t
d$DD;d$@t
d$HD;d$L
d$P@8t
d$PL9f
d$dD;d$lt
d.v16i1
d3dcompiler_43.dll
d?000000
dFdxCoarse
dFdxFine
dFdyCoarse
dFdyFine
dPdxCoarse
dPdxFine
dPdyCoarse
dPdyFine
da-delinearize
daryColoH9H
dasl.rrri
data$r
datalayout
dd.sw.128
ddb.map
dddd, MMMM dd, yyyy
ddsub.p
ddsubhr
ddub.acc
ddx_coarse
ddx_fine
ddy_coarse
ddy_fine
dead_branch_elim_pass
dead_branch_elim_pass2
dead_branch_elim_pass3
dead_insert_elim_pass
debug base type encoding
debug composite type
debug info flags
debug operation
debug pragma syntax is incorrect
debug type qualifier
debug-pass
debugPriH9
debugPrintfEXT
declaration
declaration in annotation
declaration list
declaration_statement
declarations
declare
declare H
decompose-insts
decomposition of gla_Fma
decomposition of gla_fACosh
decomposition of gla_fASinh
decomposition of gla_fATanh
decomposition of gla_fAsin
decomposition of gla_fAtan
decomposition of gla_fAtan2
decomposition of gla_fCosh
decomposition of gla_fFaceForward
decomposition of gla_fFixedTransform
decomposition of gla_fFraction
decomposition of gla_fIsNan
decomposition of gla_fLit
decomposition of gla_fModF
decomposition of gla_fPackDouble2x32
decomposition of gla_fPackSnorm4x8
decomposition of gla_fPackUnorm2x16
decomposition of gla_fPackUnorm4x8
decomposition of gla_fPowi
decomposition of gla_fRefract
decomposition of gla_fSign
decomposition of gla_fSinh
decomposition of gla_fTanh
decomposition of gla_fUnpackDouble2x32
decomposition of gla_fUnpackSnorm4x8
decomposition of gla_fUnpackUnorm2x16
decomposition of gla_fUnpackUnorm4x8
decorated as
decorated with
decorated with both
decoration
decoration applied to a non-object
decoration applied to a value with void type
decoration applied to an object with invalid type
decoration may not be applied to
decoration targeting
default
default constructor closure
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
default value must be at least 1
default value must be at least 1: found
default%d
defaultFile
define
define %s (%s.%s
define E_GL_EXT_ray_query 1
define E_GL_EXT_ray_tracing 1
define E_GL_EXT_shader_atomic_int64 1
define E_GL_EXT_shader_realtime_clock 1
define GL_AMD_gcn_shader 1
define GL_AMD_gpu_shader_half_float 1
define GL_AMD_gpu_shader_half_float_fetch 1
define GL_AMD_gpu_shader_int16 1
define GL_AMD_shader_ballot 1
define GL_AMD_shader_explicit_vertex_parameter 1
define GL_AMD_shader_fragment_mask 1
define GL_AMD_shader_image_load_store_lod 1
define GL_AMD_shader_trinary_minmax 1
define GL_AMD_texture_gather_bias_lod 1
define GL_ANDROID_extension_pack_es31a 1
define GL_ARB_compute_shader 1
define GL_ARB_derivative_control 1
define GL_ARB_enhanced_layouts 1
define GL_ARB_explicit_attrib_location 1
define GL_ARB_explicit_uniform_location 1
define GL_ARB_fragment_shader_interlock 1
define GL_ARB_gpu_shader5 1
define GL_ARB_gpu_shader_fp64 1
define GL_ARB_gpu_shader_int64 1
define GL_ARB_post_depth_coverage 1
define GL_ARB_sample_shading 1
define GL_ARB_separate_shader_objects 1
define GL_ARB_shader_atomic_counters 1
define GL_ARB_shader_ballot 1
define GL_ARB_shader_draw_parameters 1
define GL_ARB_shader_group_vote 1
define GL_ARB_shader_image_load_store 1
define GL_ARB_shader_stencil_export 1
define GL_ARB_shader_texture_image_samples 1
define GL_ARB_shader_texture_lod 1
define GL_ARB_shading_language_420pack 1
define GL_ARB_sparse_texture2 1
define GL_ARB_sparse_texture_clamp 1
define GL_ARB_tessellation_shader 1
define GL_ARB_texture_cube_map_array 1
define GL_ARB_texture_gather 1
define GL_ARB_texture_multisample 1
define GL_ARB_texture_rectangle 1
define GL_ARB_uniform_buffer_object 1
define GL_ARB_viewport_array 1
define GL_ES 1
define GL_EXT_YUV_target 1
define GL_EXT_buffer_reference 1
define GL_EXT_buffer_reference2 1
define GL_EXT_buffer_reference_uvec2 1
define GL_EXT_control_flow_attributes 1
define GL_EXT_debug_printf 1
define GL_EXT_demote_to_helper_invocation 1
define GL_EXT_device_group 1
define GL_EXT_frag_depth 1
define GL_EXT_fragment_invocation_density 1
define GL_EXT_geometry_point_size 1
define GL_EXT_geometry_shader 1
define GL_EXT_gpu_shader5 1
define GL_EXT_multiview 1
define GL_EXT_nonuniform_qualifier 1
define GL_EXT_post_depth_coverage 1
define GL_EXT_primitive_bounding_box 1
define GL_EXT_samplerless_texture_functions 1
define GL_EXT_scalar_block_layout 1
define GL_EXT_shader_16bit_storage 1
define GL_EXT_shader_8bit_storage 1
define GL_EXT_shader_explicit_arithmetic_types 1
define GL_EXT_shader_explicit_arithmetic_types_float16 1
define GL_EXT_shader_explicit_arithmetic_types_float32 1
define GL_EXT_shader_explicit_arithmetic_types_float64 1
define GL_EXT_shader_explicit_arithmetic_types_int16 1
define GL_EXT_shader_explicit_arithmetic_types_int32 1
define GL_EXT_shader_explicit_arithmetic_types_int64 1
define GL_EXT_shader_explicit_arithmetic_types_int8 1
define GL_EXT_shader_image_load_formatted 1
define GL_EXT_shader_io_blocks 1
define GL_EXT_shader_non_constant_global_initializers 1
define GL_EXT_shader_subgroup_extended_types_float16 1
define GL_EXT_shader_subgroup_extended_types_int16 1
define GL_EXT_shader_subgroup_extended_types_int64 1
define GL_EXT_shader_subgroup_extended_types_int8 1
define GL_EXT_shader_texture_lod 1
define GL_EXT_shadow_samplers 1
define GL_EXT_tessellation_point_size 1
define GL_EXT_tessellation_shader 1
define GL_EXT_texture_buffer 1
define GL_EXT_texture_cube_map_array 1
define GL_FRAGMENT_PRECISION_HIGH 1
define GL_GOOGLE_cpp_style_line_directive 1
define GL_GOOGLE_include_directive 1
define GL_INTEL_shader_integer_functions2 1
define GL_KHR_blend_equation_advanced 1
define GL_KHR_shader_subgroup_arithmetic 1
define GL_KHR_shader_subgroup_ballot 1
define GL_KHR_shader_subgroup_basic 1
define GL_KHR_shader_subgroup_clustered 1
define GL_KHR_shader_subgroup_quad 1
define GL_KHR_shader_subgroup_shuffle 1
define GL_KHR_shader_subgroup_shuffle_relative 1
define GL_KHR_shader_subgroup_vote 1
define GL_NV_compute_shader_derivatives 1
define GL_NV_conservative_raster_underestimation 1
define GL_NV_cooperative_matrix 1
define GL_NV_fragment_shader_barycentric 1
define GL_NV_geometry_shader_passthrough 1
define GL_NV_integer_cooperative_matrix 1
define GL_NV_mesh_shader 1
define GL_NV_ray_tracing 1
define GL_NV_sample_mask_override_coverage 1
define GL_NV_shader_atomic_int64 1
define GL_NV_shader_noperspective_interpolation 1
define GL_NV_shader_sm_builtins 1
define GL_NV_shader_subgroup_partitioned 1
define GL_NV_shader_texture_footprint 1
define GL_NV_shading_rate_image 1
define GL_NV_viewport_array2 1
define GL_OES_EGL_image_external 1
define GL_OES_EGL_image_external_essl3 1
define GL_OES_geometry_point_size 1
define GL_OES_geometry_shader 1
define GL_OES_gpu_shader5 1
define GL_OES_primitive_bounding_box 1
define GL_OES_sample_variables 1
define GL_OES_shader_image_atomic 1
define GL_OES_shader_io_blocks 1
define GL_OES_shader_multisample_interpolation 1
define GL_OES_standard_derivatives 1
define GL_OES_tessellation_point_size 1
define GL_OES_tessellation_shader 1
define GL_OES_texture_3D 1
define GL_OES_texture_buffer 1
define GL_OES_texture_cube_map_array 1
define GL_OES_texture_storage_multisample_2d_array 1
define GL_OVR_multiview 1
define GL_OVR_multiview2 1
define GL_SPIRV
define GL_compatibility_profile 1
define GL_core_profile 1
define GSAppendVertex( streamName, v
define VULKAN
define float2
define float2x3
define float2x4
define float3
define float3x2
define float3x3
define float3x4
define float4
define float4x2
define float4x3
define float4x4
define int2
define int3
define int4
define lerp(a, b, c) mix(a, b, c
define mad(a,b,c) fma(a, b, c
define mul(a, b) ((b) * (a
define uint2
define uint3
define uint4
defined
defined in block
defined more than once
defined" can't be (un)defined
defined( FORCE_MEDIUM_PRECISION
definition
definition does not dominate its parent
degenerate cases of merge-block or continue-target
degrees
delete
deleted
demorgan
demote_statement
denominator
dependenH9
dependency_infinite
dependency_length
depends on
deprecated in version
deprecated, may be removed in future release
depth layout qualifier
depth_any
depth_greater
depth_less
depth_unchanged
deque<T> too long
derivatiH9
derivative_group
derivative_group_linearNV
derivative_group_linearnv
derivative_group_quadsNV
derivative_group_quadsNV and derivative_group_linearNV
descriptor set
destination address required
determinant
device or resource busy
device_event
devicecoherent
did not find an member index to get underlying data type for struct type
diff.neg
dimensionality
direct index
direct index for structure
direct index without a constant node
directive must end with a newline
directory not empty
disable
disable debug output
disable-cgp-branch-opts
disable-cgp-select2branch
disable-debug-info-verifier
disable-licm-promotion
disable_array_flattening
disable_array_flattening]] Texture2D %s[ %d ] : layout( set = %d, binding = %d
disable_force_mediump
disable_optimize_glsl
discard
discard from non-main function with no discard op in back end
distance
divide second child into first child
division by 0
dllexport
dllimport
dmat2x2
dmat2x3
dmat2x4
dmat3x2
dmat3x3
dmat3x4
dmat4x2
dmat4x3
dmat4x4
do not match
do sub-statement
do-while loops not available
does not apply to floating point images
does not apply to signed integer images
does not apply to this type
does not apply to unsigned integer images
does not dominate
does not dominate its case construct
does not dominate its use in block
does not have a
does not match Pointer <id
does not match block's predecessor count
does not match incoming value <id
does not match the Function Type's return type <id
does not match the OpTypeFunction parameter type of the same index
does not match the type that results from indexing into the Composite (Op
does not match the type that results from indexing into the base <id> (Op
does not match the type that results from indexing into the composite (Op
does not meet this requirement
does not operate on this type
does not operate on types containing (u)int16
does not operate on types containing (u)int8
does not operate on types containing float16
does not reference an OpExtInstImport result Id
does not represent a value
does not strictly dominate
domfrontier
domtree
dont_flaH9
dont_unrH9
dont_unroll
dot-product
dotProduct
double
double conversion
double floating-point suffix
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double
double literal
double matrix
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   outerProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4
double vector
double1
double1x1
double1x2
double1x3
double1x4
double2
double2 conversion not implemented
double2x1
double2x2
double2x3
double2x4
double3
double3x1
double3x2
double3x3
double3x4
double4
double4x1
double4x2
double4x3
double4x4
doubleBitsToInt64
doubleBitsToUint64
doubles cannot start on an odd-numbered component
dragonflH
dragonfly
du.dq.256
dummyReturn
dup-merge
duplicate label
duplicate macro parameter
duplicate member name
duplicated value
dutch-belgian
dwc_#Ri
dxcompiler.dll
dyn.offset
dynamic atexit destructor for
dynamic initializer for
e <"uLH9w
e L9d$(t
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64
e0A_A^A]A
e3.pabs
e@A_A^A
earbyint
early-cse
early-return-elim
early_frH9
early_fragment_tests
earlydepH9
earlyretbool
earlyretval
earlyretval.load
ecrement
eferenceH9H
egeru!H
eh vector constructor iterator
eh vector copy constructor iterator
eh vector destructor iterator
eh vector vbase constructor iterator
eh vector vbase copy constructor iterator
eh.lpad-body
eil.ftz.f
einterleave
either the block needs a location, or all members need a location, or no members have a location
element
element array of
element1
element2
elements
elif after #else
eliminate-dead-branches
eliminate-dead-code-aggressive
eliminate-dead-functions
eliminate-dead-inserts
eliminate-dead-members
eliminate-local-single-block
eliminate-local-single-store
eliminate_dead_functions_pass
eliminate_dead_members
else after #else
else statement
emmove
emoryBarrierImage
empty name
enable
enable-correct-eh-support
enable-double-float-shrink
enable-load-pre
enable-lsr-phielim
enable-pre
enable-tbaa
end of input
endInvocationInterlockARB
endInvocationInterlockARB() cannot be placed after a return from main
endInvocationInterlockARB() cannot be placed within flow control
endInvocationInterlockARB() must be in a fragment shader
endInvocationInterlockARB() must be in main
endInvocationInterlockARB() must only be called once
england
english-american
english-aus
english-belize
english-can
english-caribbean
english-ire
english-jamaica
english-nz
english-south africa
english-trinidad y tobago
english-uk
english-us
english-usa
entry point cannot return a value
entry point must return a value for use with patch constant function
entry-point
entryPointOutput
environment
environments
eon.vcvt
equal_spacing
equality_expression
er for always_inline functions
erVertexL9
erViewNVH9A
erleave
ermilvar.p
error %d : %s
error at column
error-reporting-is-cold
ertp.rp
estsu^H
et.fpscr
eturn.i
eturnaddress
exagon
exagon.M2.mpy
exagon.S2.asr.i
exagon.S2.tableidx
exagon.S5.asrhub.rnd.sat.goodsyntax
exagon.S5.vasrhrnd.goodsyntax
exceeds the limit
except for OpLine, which can be mixed with OpPhi
exclusive or second child into first child
exclusive-or
exclusive_or_expression
executable format error
executeCallableEXT
executeCallableNV
execution mode
execution model
exists
exit node
exitcond
exiting
exits the
expected
expected %s
expected 'INF
expected 'c
expected 16, 32, or 64 bits for first type parameter
expected 8 or 32 bits for first type parameter
expected <EOF
expected Aliased or Restrict for PhysicalStorageBufferEXT pointer
expected AliasedPointerEXT or RestrictPointerEXT for
expected AliasedPointerEXT or RestrictPointerEXT for PhysicalStorageBufferEXT pointer
expected Comparator to be of type Result Type
expected Data to be a 32 or 64-bit float scalar
expected Data to be a 32 or 64-bit float vector
expected Data to be an int or float vector
expected Data to have 2, 3, 4, 8 or 16 components
expected Format data type to be 8-bit int
expected Format storage class to be UniformConstant
expected Hi and Lo operands to have the same number of components as Result Type
expected Hi and Lo operands to have the same type
expected Interpolant data type to be equal to Result Type
expected Interpolant storage class to be Input
expected Interpolant to be a pointer
expected Memory Semantics to be a 32-bit int
expected Memory Semantics to include a Vulkan-supported storage class
expected Memory Semantics to include a storage class
expected Named Barrier to be of type OpTypeNamedBarrier
expected Nancode to be an int scalar or vector type
expected Nancode to have the same bit width as Result Type
expected Nancode to have the same number of components as Result Type
expected Offset to be a vector of 2 32-bit floats
expected Pointer to be a pointer to int or float
expected Pointer to be of type OpTypePointer
expected Pointer to point to a value of 32-bit int type
expected Pointer to point to a value of type Result Type
expected Ptr data type to be int or float scalar or vector
expected Result Type to be 32-bit int scalar type
expected Result Type to be 64-bit float scalar type
expected Result Type to be OpTypeNamedBarrier
expected Result Type to be a 16 or 32-bit scalar or vector float type
expected Result Type to be a 32-bit float scalar
expected Result Type to be a 32-bit float vector of size 2
expected Result Type to be a 32-bit float vector of size 4
expected Result Type to be a 32-bit int scalar or vector type
expected Result Type to be a 32-bit int type
expected Result Type to be a 32-bit int vector of size 2
expected Result Type to be a float scalar or vector type
expected Result Type to be a float scalar type
expected Result Type to be a float vector type
expected Result Type to be a scalar or a vector with 2, 3, 4, 8 or 16 components
expected Result Type to be a scalar or vector float type
expected Result Type to be a square matrix
expected Result Type to be a struct with two identical
expected Result Type to be a struct with two members
expected Result Type to be an int or float scalar or vector type
expected Result Type to be an int or float vector type
expected Result Type to be an int scalar or vector type
expected Result Type to be bool scalar type
expected Result Type to be int or float scalar type
expected Result Type to be int scalar type
expected Result Type to be void
expected Result Type to have 2, 3, 4, 8 or 16 components
expected Result Type to have 2, 4, 8 or 16 components
expected Result Type to have 3 components
expected Result Type to have 3 or 4 components
expected Result Type to have no more than 4 components
expected Sample to be 32-bit integer
expected Stream to be constant instruction
expected Stream to be int scalar
expected Subgroup Count to be a 32-bit int
expected Value to be of type Result Type
expected Value type and the type pointed to by Pointer to be the same
expected a single integer argument
expected after 'debug' keyword
expected after 'optimize' keyword
expected all operands to be int scalars or vectors
expected all operands to have the same bit width as
expected all operands to have the same dimension as
expected bit width of Result Type components to be 16, 32 or 64
expected bit width of components of Hi and Lo operands to be half of the bit width of components of Result Type
expected data type of the pointer to be a 32-bit int scalar or vector type
expected data type of the pointer to be equal to Result Type
expected data type of the pointer to have the same number of components as Result Type
expected four type parameters
expected literal N to be equal to the number of components of Result Type
expected more operands after
expected newline after header name
expected no arguments
expected no more operands after
expected number after 'c
expected one of
expected operand
expected operand A type to be equal to Result Type
expected operand B type to be equal to Result Type
expected operand C to be an int scalar or vector
expected operand C to have the same bit width as Result Type
expected operand C to have the same number of components as Result Type
expected operand Child must be class or struct debug type
expected operand Eta to be a float scalar
expected operand Exp data type to be a
expected operand Exp data type to have the same component
expected operand Exp to be a 32-bit int scalar
expected operand Exp to be a pointer
expected operand Exp to have the same component
expected operand Format to be a pointer
expected operand I data type to be equal to Result Type
expected operand I to be a pointer
expected operand I to be of type equal to Result Type
expected operand Members
expected operand N to be of type equal to Result Type
expected operand Num Elements to be of type size_t
expected operand Offset to be of type size_t
expected operand P component type to be equal to Result Type
expected operand P data type to be 16-bit float scalar
expected operand P data type to be equal to component type of Result Type
expected operand P data type to be equal to the type of operand Data components
expected operand P storage class to be Generic, CrossWorkgroup, Workgroup or Function
expected operand P storage class to be UniformConstant, Generic, CrossWorkgroup, Workgroup or Function
expected operand P to be a 32-bit int scalar
expected operand P to be a float scalar or vector
expected operand P to be a pointer
expected operand P to have no more than 4 components
expected operand P type to be equal to Result Type
expected operand P0 component type to be equal to
expected operand P0 to be of float scalar or vector type
expected operand P0 to have no more than 4 components
expected operand P1 component type to be equal to
expected operand P1 to be of float scalar or vector type
expected operand Parent must be class or struct debug type
expected operand Ptr storage class to be CrossWorkgroup
expected operand Ptr to be a pointer
expected operand Shuffle Mask components to have the same bit width as Result Type components
expected operand Shuffle Mask to be an int vector
expected operand Shuffle Mask to have the same number of components as Result Type
expected operand Size is a
expected operand V to be a 32-bit float vector of size 2
expected operand V to be a 32-bit float vector of size 4
expected operand V to be a 32-bit int vector of size 2
expected operand V to be a 64-bit float scalar
expected operand Variable must be a result id of OpVariable or OpFunctionParameter
expected operand X and Result Type to have equal component types
expected operand X component type to be equal to
expected operand X component type to be equal to Result Type
expected operand X to be a float scalar or vector
expected operand X to be a square matrix
expected operand X to be an int or float vector
expected operand X to be of float scalar or vector type
expected operand X to have 2, 4, 8 or 16 components
expected operand X to have the same number of components as Result Type
expected operand X type to be equal to Result Type
expected operand X type to be equal to members of
expected operand X type to be equal to the first member
expected operand Y type to be equal to Result Type
expected operands P0 and P1 to be of the same type
expected operands P0 and P1 to have the same number of
expected operands X and Y to be of the same type
expected register number after register type
expected register type
expected result type must be a result id of
expected scope to be a 32-bit int
expected spaceN
expected storage class of the pointer to be Generic, CrossWorkgroup, Workgroup or Function
expected symbol, not user-defined type
expected the exponent to be a 32-bit int scalar or vector
expected the exponent to have the same number of components as Result Type
expected the last operand to be a pointer
expected to end 'debug' pragma
expected to end 'optimize' pragma
expected type name
expected type of operand X to be equal to Result Type
expected type of operand Y to be equal to Result Type
expected types of all operands to be equal to Result Type
expected {x, y, z, w} for component
expected: SamplerComparisonState
expected: mul arguments
expected: sampler type
expected: scalar or vector type in texture structure
explicit
explicit interpolation
explicit masking in middle end
explicitInterpAMD
expression
expression after
expression followed by
expression_statement
ext-ms
ext-ms-win-ntuser-dialogbox-l1-1-0
ext-ms-win-ntuser-windowstation-l1-1-0
extended binOp of a constant
extensiH9
extension
extension 'all' cannot have 'require' or 'enable' behavior
extension GL_ARB_explicit_attrib_location : enable
extension GL_ARB_gpu_shader5 : enable
extension GL_ARB_separate_shader_objects : enable
extension GL_ARB_shading_language_420pack : enable
extension GL_ARB_tessellation_shader : enable
extension GL_ARB_texture_cube_map_array : enable
extension GL_ARB_texture_gather : enable
extension GL_ARB_viewport_array : enable
extension GL_GOOGLE_cpp_style_line_directive
extension GL_GOOGLE_cpp_style_line_directive : enable
extension GL_NV_mesh_shader
extension instruction number
extension is only partially supported
extension name expected
extension name not specified
extension not supported
extension\s+GL_ARB_shading_language_420pack\s*:\s*enable
extern
extern_weak
external
external node
external_declaration
externaldescriptorset
externally_initialized
extra content after header name
extra tokens
extra tokens -- expected newline
extract
extract.t
extractelement
extractvalue
extraneous semicolon
extrqi
f16image1D
f16image1DArray
f16image2D
f16image2DArray
f16image2DMS
f16image2DMSArray
f16image2DRect
f16image3D
f16imageBuffer
f16imageCube
f16imageCubeArray
f16mat2
f16mat2x2
f16mat2x3
f16mat2x4
f16mat3
f16mat3x2
f16mat3x3
f16mat3x4
f16mat4
f16mat4x2
f16mat4x3
f16mat4x4
f16sampler1D
f16sampler1DArray
f16sampler1DArrayShadow
f16sampler1DShadow
f16sampler2D
f16sampler2DArray
f16sampler2DArrayShadow
f16sampler2DMS
f16sampler2DMSArray
f16sampler2DRect
f16sampler2DRectShadow
f16sampler2DShadow
f16sampler3D
f16samplerBuffer
f16samplerCube
f16samplerCubeArray
f16samplerCubeArrayShadow
f16samplerCubeShadow
f16subpassInput
f16subpassInputMS
f16texture1D
f16texture1DArray
f16texture2D
f16texture2DArray
f16texture2DMS
f16texture2DMSArray
f16texture2DRect
f16texture3D
f16textureBuffer
f16textureCube
f16textureCubeArray
f16tof32
f16vec
f16vec2
f16vec3
f16vec4
f32mat2
f32mat2x2
f32mat2x3
f32mat2x4
f32mat3
f32mat3x2
f32mat3x3
f32mat3x4
f32mat4
f32mat4x2
f32mat4x3
f32mat4x4
f32tof16
f32vec2
f32vec3
f32vec4
f64mat2
f64mat2x2
f64mat2x3
f64mat2x4
f64mat3
f64mat3x2
f64mat3x3
f64mat3x4
f64mat4
f64mat4x2
f64mat4x3
f64mat4x4
f64vec2
f64vec3
f64vec4
f9O:u?H
f;p:umH
fA;E:u9L
fA;u sE
fMax should get constant-folded
fMin should get constant-folded
face-forward
faceforward
failed to insert the global constant buffer
false case
fast_distance
fast_length
fast_normalize
fastcall
fastopt
fcoopmatNV
fcoopmatNV coopMatMulAddNV(fcoopmatNV A, fcoopmatNV B, fcoopmatNV C
feature not yet implemented
features
ffffff
fffffff
fgetpos
file exists
file too large
file too short
fileExt
filename
filename too long
filename-based #line
filename-based __FILE
fillBufferExt
filter
filter mode
findLSB
findMSB
finitetmp
fiprintf
first argument must be an interpolant, or interpolant-array element
first member a float scalar or vector, second member a
firstbithigh
firstbitlow
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;     out int  gl_SampleMask
flat in  int  gl_SampleMaskIn
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex
flat in highp uint gl_ViewID_OVR
flat in int gl_Layer;flat in int gl_ViewportIndex
flat in int gl_PrimitiveID
flat in ivec2 gl_FragSizeEXT;flat in int   gl_FragInvocationCountEXT
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV;in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;flat in highp   uint  gl_WarpsPerSMNV;flat in highp   uint  gl_SMCountNV;flat in highp   uint  gl_WarpIDNV;flat in highp   uint  gl_SMIDNV
flat/smooth/noperspective
flatten
flatten-conditional-assignments
flatten-uniform-arrays
flattenShadow
flattenTemp
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4
float __g_Padding_%d
float _dummyMemberToPreventEmptyStructForGlsl
float cubeFaceIndexAMD(vec3);vec2  cubeFaceCoordAMD(vec3);uint64_t timeAMD();in int gl_SIMDGroupSizeAMD
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4
float gl_ClipDistance[1
float gl_CullDistance
float gl_CullDistance[];int  gl_ViewportMask[];vec4 gl_SecondaryPositionNV;int  gl_SecondaryViewportMaskNV[];vec4 gl_PositionPerViewNV[];int  gl_ViewportMaskPerViewNV
float gl_CullDistance[];vec4 gl_SecondaryPositionNV;vec4 gl_PositionPerViewNV
float imageAtomicExchange(volatile coherent
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2
float interpolateAtVertexAMD(float, uint);vec2  interpolateAtVertexAMD(vec2,  uint);vec3  interpolateAtVertexAMD(vec3,  uint);vec4  interpolateAtVertexAMD(vec4,  uint);int   interpolateAtVertexAMD(int,   uint);ivec2 interpolateAtVertexAMD(ivec2, uint);ivec3 interpolateAtVertexAMD(ivec3, uint);ivec4 interpolateAtVertexAMD(ivec4, uint);uint  interpolateAtVertexAMD(uint,  uint);uvec2 interpolateAtVertexAMD(uvec2, uint);uvec3 interpolateAtVertexAMD(uvec3, uint);uvec4 interpolateAtVertexAMD(uvec4, uint);float16_t interpolateAtVertexAMD(float16_t, uint);f16vec2   interpolateAtVertexAMD(f16vec2,   uint);f16vec3   interpolateAtVertexAMD(f16vec3,   uint);f16vec4   interpolateAtVertexAMD(f16vec4,   uint
float literal needs a decimal point or exponent
float literal too long
float min3(float, float, float);vec2  min3(vec2,  vec2,  vec2);vec3  min3(vec3,  vec3,  vec3);vec4  min3(vec4,  vec4,  vec4);int   min3(int,   int,   int);ivec2 min3(ivec2, ivec2, ivec2);ivec3 min3(ivec3, ivec3, ivec3);ivec4 min3(ivec4, ivec4, ivec4);uint  min3(uint,  uint,  uint);uvec2 min3(uvec2, uvec2, uvec2);uvec3 min3(uvec3, uvec3, uvec3);uvec4 min3(uvec4, uvec4, uvec4);float max3(float, float, float);vec2  max3(vec2,  vec2,  vec2);vec3  max3(vec3,  vec3,  vec3);vec4  max3(vec4,  vec4,  vec4);int   max3(int,   int,   int);ivec2 max3(ivec2, ivec2, ivec2);ivec3 max3(ivec3, ivec3, ivec3);ivec4 max3(ivec4, ivec4, ivec4);uint  max3(uint,  uint,  uint);uvec2 max3(uvec2, uvec2, uvec2);uvec3 max3(uvec3, uvec3, uvec3);uvec4 max3(uvec4, uvec4, uvec4);float mid3(float, float, float);vec2  mid3(vec2,  vec2,  vec2);vec3  mid3(vec3,  vec3,  vec3);vec4  mid3(vec4,  vec4,  vec4);int   mid3(int,   int,   int);ivec2 mid3(ivec2, ivec2, ivec2);ivec3 mid3(ivec3, ivec3, ivec3);ivec4 mid3(ivec4, ivec4, ivec4);uint  mid3(uint,  uint,  uint);uvec2 mid3(uvec2, uvec2, uvec2);uvec3 mid3(uvec3, uvec3, uvec3);uvec4 mid3(uvec4, uvec4, uvec4);float16_t min3(float16_t, float16_t, float16_t);f16vec2   min3(f16vec2,   f16vec2,   f16vec2);f16vec3   min3(f16vec3,   f16vec3,   f16vec3);f16vec4   min3(f16vec4,   f16vec4,   f16vec4);float16_t max3(float16_t, float16_t, float16_t);f16vec2   max3(f16vec2,   f16vec2,   f16vec2);f16vec3   max3(f16vec3,   f16vec3,   f16vec3);f16vec4   max3(f16vec4,   f16vec4,   f16vec4);float16_t mid3(float16_t, float16_t, float16_t);f16vec2   mid3(f16vec2,   f16vec2,   f16vec2);f16vec3   mid3(f16vec3,   f16vec3,   f16vec3);f16vec4   mid3(f16vec4,   f16vec4,   f16vec4);int16_t   min3(int16_t,   int16_t,   int16_t);i16vec2   min3(i16vec2,   i16vec2,   i16vec2);i16vec3   min3(i16vec3,   i16vec3,   i16vec3);i16vec4   min3(i16vec4,   i16vec4,   i16vec4);int16_t   max3(int16_t,   int16_t,   int16_t);i16vec2   max3(i16vec2,   i16vec2,   i16vec2);i16vec3   max3(i16vec3,   i16vec3,   i16vec3);i16vec4   max3(i16vec4,   i16vec4,   i16vec4);int16_t   mid3(int16_t,   int16_t,   int16_t);i16vec2   mid3(i16vec2,   i16vec2,   i16vec2);i16vec3   mid3(i16vec3,   i16vec3,   i16vec3);i16vec4   mid3(i16vec4,   i16vec4,   i16vec4);uint16_t  min3(uint16_t,  uint16_t,  uint16_t);u16vec2   min3(u16vec2,   u16vec2,   u16vec2);u16vec3   min3(u16vec3,   u16vec3,   u16vec3);u16vec4   min3(u16vec4,   u16vec4,   u16vec4);uint16_t  max3(uint16_t,  uint16_t,  uint16_t);u16vec2   max3(u16vec2,   u16vec2,   u16vec2);u16vec3   max3(u16vec3,   u16vec3,   u16vec3);u16vec4   max3(u16vec4,   u16vec4,   u16vec4);uint16_t  mid3(uint16_t,  uint16_t,  uint16_t);u16vec2   mid3(u16vec2,   u16vec2,   u16vec2);u16vec3   mid3(u16vec3,   u16vec3,   u16vec3);u16vec4   mid3(u16vec4,   u16vec4,   u16vec4
float minInvocationsAMD(float);vec2  minInvocationsAMD(vec2);vec3  minInvocationsAMD(vec3);vec4  minInvocationsAMD(vec4);int   minInvocationsAMD(int);ivec2 minInvocationsAMD(ivec2);ivec3 minInvocationsAMD(ivec3);ivec4 minInvocationsAMD(ivec4);uint  minInvocationsAMD(uint);uvec2 minInvocationsAMD(uvec2);uvec3 minInvocationsAMD(uvec3);uvec4 minInvocationsAMD(uvec4);double minInvocationsAMD(double);dvec2  minInvocationsAMD(dvec2);dvec3  minInvocationsAMD(dvec3);dvec4  minInvocationsAMD(dvec4);int64_t minInvocationsAMD(int64_t);i64vec2 minInvocationsAMD(i64vec2);i64vec3 minInvocationsAMD(i64vec3);i64vec4 minInvocationsAMD(i64vec4);uint64_t minInvocationsAMD(uint64_t);u64vec2  minInvocationsAMD(u64vec2);u64vec3  minInvocationsAMD(u64vec3);u64vec4  minInvocationsAMD(u64vec4);float16_t minInvocationsAMD(float16_t);f16vec2   minInvocationsAMD(f16vec2);f16vec3   minInvocationsAMD(f16vec3);f16vec4   minInvocationsAMD(f16vec4);int16_t minInvocationsAMD(int16_t);i16vec2 minInvocationsAMD(i16vec2);i16vec3 minInvocationsAMD(i16vec3);i16vec4 minInvocationsAMD(i16vec4);uint16_t minInvocationsAMD(uint16_t);u16vec2  minInvocationsAMD(u16vec2);u16vec3  minInvocationsAMD(u16vec3);u16vec4  minInvocationsAMD(u16vec4);float minInvocationsInclusiveScanAMD(float);vec2  minInvocationsInclusiveScanAMD(vec2);vec3  minInvocationsInclusiveScanAMD(vec3);vec4  minInvocationsInclusiveScanAMD(vec4);int   minInvocationsInclusiveScanAMD(int);ivec2 minInvocationsInclusiveScanAMD(ivec2);ivec3 minInvocationsInclusiveScanAMD(ivec3);ivec4 minInvocationsInclusiveScanAMD(ivec4);uint  minInvocationsInclusiveScanAMD(uint);uvec2 minInvocationsInclusiveScanAMD(uvec2);uvec3 minInvocationsInclusiveScanAMD(uvec3);uvec4 minInvocationsInclusiveScanAMD(uvec4);double minInvocationsInclusiveScanAMD(double);dvec2  minInvocationsInclusiveScanAMD(dvec2);dvec3  minInvocationsInclusiveScanAMD(dvec3);dvec4  minInvocationsInclusiveScanAMD(dvec4);int64_t minInvocationsInclusiveScanAMD(int64_t);i64vec2 minInvocationsInclusiveScanAMD(i64vec2);i64vec3 minInvocationsInclusiveScanAMD(i64vec3);i64vec4 minInvocationsInclusiveScanAMD(i64vec4);uint64_t minInvocationsInclusiveScanAMD(uint64_t);u64vec2  minInvocationsInclusiveScanAMD(u64vec2);u64vec3  minInvocationsInclusiveScanAMD(u64vec3);u64vec4  minInvocationsInclusiveScanAMD(u64vec4);float16_t minInvocationsInclusiveScanAMD(float16_t);f16vec2   minInvocationsInclusiveScanAMD(f16vec2);f16vec3   minInvocationsInclusiveScanAMD(f16vec3);f16vec4   minInvocationsInclusiveScanAMD(f16vec4);int16_t minInvocationsInclusiveScanAMD(int16_t);i16vec2 minInvocationsInclusiveScanAMD(i16vec2);i16vec3 minInvocationsInclusiveScanAMD(i16vec3);i16vec4 minInvocationsInclusiveScanAMD(i16vec4);uint16_t minInvocationsInclusiveScanAMD(uint16_t);u16vec2  minInvocationsInclusiveScanAMD(u16vec2);u16vec3  minInvocationsInclusiveScanAMD(u16vec3);u16vec4  minInvocationsInclusiveScanAMD(u16vec4);float minInvocationsExclusiveScanAMD(float);vec2  minInvocationsExclusiveScanAMD(vec2);vec3  minInvocationsExclusiveScanAMD(vec3);vec4  minInvocationsExclusiveScanAMD(vec4);int   minInvocationsExclusiveScanAMD(int);ivec2 minInvocationsExclusiveScanAMD(ivec2);ivec3 minInvocationsExclusiveScanAMD(ivec3);ivec4 minInvocationsExclusiveScanAMD(ivec4);uint  minInvocationsExclusiveScanAMD(uint);uvec2 minInvocationsExclusiveScanAMD(uvec2);uvec3 minInvocationsExclusiveScanAMD(uvec3);uvec4 minInvocationsExclusiveScanAMD(uvec4);double minInvocationsExclusiveScanAMD(double);dvec2  minInvocationsExclusiveScanAMD(dvec2);dvec3  minInvocationsExclusiveScanAMD(dvec3);dvec4  minInvocationsExclusiveScanAMD(dvec4);int64_t minInvocationsExclusiveScanAMD(int64_t);i64vec2 minInvocationsExclusiveScanAMD(i64vec2);i64vec3 minInvocationsExclusiveScanAMD(i64vec3);i64vec4 minInvocationsExclusiveScanAMD(i64vec4);uint64_t minInvocationsExclusiveScanAMD(uint64_t);u64vec2  minInvocationsExclusiveScanAMD(u64vec2);u64vec3  minInvocationsExclusiveScanAMD(u64vec3);u64vec4  minInvocationsExclusiveScanAMD(u64vec4);float16_t minInvocationsExclusiveScanAMD(float16_t);f16vec2   minInvocationsExclusiveScanAMD(f16vec2);f16vec3   minInvocationsExclusiveScanAMD(f16vec3);f16vec4   minInvocationsExclusiveScanAMD(f16vec4);int16_t minInvocationsExclusiveScanAMD(int16_t);i16vec2 minInvocationsExclusiveScanAMD(i16vec2);i16vec3 minInvocationsExclusiveScanAMD(i16vec3);i16vec4 minInvocationsExclusiveScanAMD(i16vec4);uint16_t minInvocationsExclusiveScanAMD(uint16_t);u16vec2  minInvocationsExclusiveScanAMD(u16vec2);u16vec3  minInvocationsExclusiveScanAMD(u16vec3);u16vec4  minInvocationsExclusiveScanAMD(u16vec4);float maxInvocationsAMD(float);vec2  maxInvocationsAMD(vec2);vec3  maxInvocationsAMD(vec3);vec4  maxInvocationsAMD(vec4);int   maxInvocationsAMD(int);ivec2 maxInvocationsAMD(ivec2);ivec3 maxInvocationsAMD(ivec3);ivec4 maxInvocationsAMD(ivec4);uint  maxInvocationsAMD(uint);uvec2 maxInvocationsAMD(uvec2);uvec3 maxInvocationsAMD(uvec3);uvec4 maxInvocationsAMD(uvec4);double maxInvocationsAMD(double);dvec2  maxInvocationsAMD(dvec2);dvec3  maxInvocationsAMD(dvec3);dvec4  maxInvocationsAMD(dvec4);int64_t maxInvocationsAMD(int64_t);i64vec2 maxInvocationsAMD(i64vec2);i64vec3 maxInvocationsAMD(i64vec3);i64vec4 maxInvocationsAMD(i64vec4);uint64_t maxInvocationsAMD(uint64_t);u64vec2  maxInvocationsAMD(u64vec2);u64vec3  maxInvocationsAMD(u64vec3);u64vec4  maxInvocationsAMD(u64vec4);float16_t maxInvocationsAMD(float16_t);f16vec2   maxInvocationsAMD(f16vec2);f16vec3   maxInvocationsAMD(f16vec3);f16vec4   maxInvocationsAMD(f16vec4);int16_t maxInvocationsAMD(int16_t);i16vec2 maxInvocationsAMD(i16vec2);i16vec3 maxInvocationsAMD(i16vec3);i16vec4 maxInvocationsAMD(i16vec4);uint16_t maxInvocationsAMD(uint16_t);u16vec2  maxInvocationsAMD(u16vec2);u16vec3  maxInvocationsAMD(u16vec3);u16vec4  maxInvocationsAMD(u16vec4);float maxInvocationsInclusiveScanAMD(float);vec2  maxInvocationsInclusiveScanAMD(vec2);vec3  maxInvocationsInclusiveScanAMD(vec3);vec4  maxInvocationsInclusiveScanAMD(vec4);int   maxInvocationsInclusiveScanAMD(int);ivec2 maxInvocationsInclusiveScanAMD(ivec2);ivec3 maxInvocationsInclusiveScanAMD(ivec3);ivec4 maxInvocationsInclusiveScanAMD(ivec4);uint  maxInvocationsInclusiveScanAMD(uint);uvec2 maxInvocationsInclusiveScanAMD(uvec2);uvec3 maxInvocationsInclusiveScanAMD(uvec3);uvec4 maxInvocationsInclusiveScanAMD(uvec4);double maxInvocationsInclusiveScanAMD(double);dvec2  maxInvocationsInclusiveScanAMD(dvec2);dvec3  maxInvocationsInclusiveScanAMD(dvec3);dvec4  maxInvocationsInclusiveScanAMD(dvec4);int64_t maxInvocationsInclusiveScanAMD(int64_t);i64vec2 maxInvocationsInclusiveScanAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanAMD(i64vec4);uint64_t maxInvocationsInclusiveScanAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanAMD(u64vec4);float16_t maxInvocationsInclusiveScanAMD(float16_t);f16vec2   maxInvocationsInclusiveScanAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanAMD(f16vec4);int16_t maxInvocationsInclusiveScanAMD(int16_t);i16vec2 maxInvocationsInclusiveScanAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanAMD(i16vec4);uint16_t maxInvocationsInclusiveScanAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanAMD(u16vec4);float maxInvocationsExclusiveScanAMD(float);vec2  maxInvocationsExclusiveScanAMD(vec2);vec3  maxInvocationsExclusiveScanAMD(vec3);vec4  maxInvocationsExclusiveScanAMD(vec4);int   maxInvocationsExclusiveScanAMD(int);ivec2 maxInvocationsExclusiveScanAMD(ivec2);ivec3 maxInvocationsExclusiveScanAMD(ivec3);ivec4 maxInvocationsExclusiveScanAMD(ivec4);uint  maxInvocationsExclusiveScanAMD(uint);uvec2 maxInvocationsExclusiveScanAMD(uvec2);uvec3 maxInvocationsExclusiveScanAMD(uvec3);uvec4 maxInvocationsExclusiveScanAMD(uvec4);double maxInvocationsExclusiveScanAMD(double);dvec2  maxInvocationsExclusiveScanAMD(dvec2);dvec3  maxInvocationsExclusiveScanAMD(dvec3);dvec4  maxInvocationsExclusiveScanAMD(dvec4);int64_t maxInvocationsExclusiveScanAMD(int64_t);i64vec2 maxInvocationsExclusiveScanAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanAMD(i64vec4);uint64_t maxInvocationsExclusiveScanAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanAMD(u64vec4);float16_t maxInvocationsExclusiveScanAMD(float16_t);f16vec2   maxInvocationsExclusiveScanAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanAMD(f16vec4);int16_t maxInvocationsExclusiveScanAMD(int16_t);i16vec2 maxInvocationsExclusiveScanAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanAMD(i16vec4);uint16_t maxInvocationsExclusiveScanAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanAMD(u16vec4);float addInvocationsAMD(float);vec2  addInvocationsAMD(vec2);vec3  addInvocationsAMD(vec3);vec4  addInvocationsAMD(vec4);int   addInvocationsAMD(int);ivec2 addInvocationsAMD(ivec2);ivec3 addInvocationsAMD(ivec3);ivec4 addInvocationsAMD(ivec4);uint  addInvocationsAMD(uint);uvec2 addInvocationsAMD(uvec2);uvec3 addInvocationsAMD(uvec3);uvec4 addInvocationsAMD(uvec4);double  addInvocationsAMD(double);dvec2   addInvocationsAMD(dvec2);dvec3   addInvocationsAMD(dvec3);dvec4   addInvocationsAMD(dvec4);int64_t addInvocationsAMD(int64_t);i64vec2 addInvocationsAMD(i64vec2);i64vec3 addInvocationsAMD(i64vec3);i64vec4 addInvocationsAMD(i64vec4);uint64_t addInvocationsAMD(uint64_t);u64vec2  addInvocationsAMD(u64vec2);u64vec3  addInvocationsAMD(u64vec3);u64vec4  addInvocationsAMD(u64vec4);float16_t addInvocationsAMD(float16_t);f16vec2   addInvocationsAMD(f16vec2);f16vec3   addInvocationsAMD(f16vec3);f16vec4   addInvocationsAMD(f16vec4);int16_t addInvocationsAMD(int16_t);i16vec2 addInvocationsAMD(i16vec2);i16vec3 addInvocationsAMD(i16vec3);i16vec4 addInvocationsAMD(i16vec4);uint16_t addInvocationsAMD(uint16_t);u16vec2  addInvocationsAMD(u16vec2);u16vec3  addInvocationsAMD(u16vec3);u16vec4  addInvocationsAMD(u16vec4);float addInvocationsInclusiveScanAMD(float);vec2  addInvocationsInclusiveScanAMD(vec2);vec3  addInvocationsInclusiveScanAMD(vec3);vec4  addInvocationsInclusiveScanAMD(vec4);int   addInvocationsInclusiveScanAMD(int);ivec2 addInvocationsInclusiveScanAMD(ivec2);ivec3 addInvocationsInclusiveScanAMD(ivec3);ivec4 addInvocationsInclusiveScanAMD(ivec4);uint  addInvocationsInclusiveScanAMD(uint);uvec2 addInvocationsInclusiveScanAMD(uvec2);uvec3 addInvocationsInclusiveScanAMD(uvec3);uvec4 addInvocationsInclusiveScanAMD(uvec4);double  addInvocationsInclusiveScanAMD(double);dvec2   addInvocationsInclusiveScanAMD(dvec2);dvec3   addInvocationsInclusiveScanAMD(dvec3);dvec4   addInvocationsInclusiveScanAMD(dvec4);int64_t addInvocationsInclusiveScanAMD(int64_t);i64vec2 addInvocationsInclusiveScanAMD(i64vec2);i64vec3 addInvocationsInclusiveScanAMD(i64vec3);i64vec4 addInvocationsInclusiveScanAMD(i64vec4);uint64_t addInvocationsInclusiveScanAMD(uint64_t);u64vec2  addInvocationsInclusiveScanAMD(u64vec2);u64vec3  addInvocationsInclusiveScanAMD(u64vec3);u64vec4  addInvocationsInclusiveScanAMD(u64vec4);float16_t addInvocationsInclusiveScanAMD(float16_t);f16vec2   addInvocationsInclusiveScanAMD(f16vec2);f16vec3   addInvocationsInclusiveScanAMD(f16vec3);f16vec4   addInvocationsInclusiveScanAMD(f16vec4);int16_t addInvocationsInclusiveScanAMD(int16_t);i16vec2 addInvocationsInclusiveScanAMD(i16vec2);i16vec3 addInvocationsInclusiveScanAMD(i16vec3);i16vec4 addInvocationsInclusiveScanAMD(i16vec4);uint16_t addInvocationsInclusiveScanAMD(uint16_t);u16vec2  addInvocationsInclusiveScanAMD(u16vec2);u16vec3  addInvocationsInclusiveScanAMD(u16vec3);u16vec4  addInvocationsInclusiveScanAMD(u16vec4);float addInvocationsExclusiveScanAMD(float);vec2  addInvocationsExclusiveScanAMD(vec2);vec3  addInvocationsExclusiveScanAMD(vec3);vec4  addInvocationsExclusiveScanAMD(vec4);int   addInvocationsExclusiveScanAMD(int);ivec2 addInvocationsExclusiveScanAMD(ivec2);ivec3 addInvocationsExclusiveScanAMD(ivec3);ivec4 addInvocationsExclusiveScanAMD(ivec4);uint  addInvocationsExclusiveScanAMD(uint);uvec2 addInvocationsExclusiveScanAMD(uvec2);uvec3 addInvocationsExclusiveScanAMD(uvec3);uvec4 addInvocationsExclusiveScanAMD(uvec4);double  addInvocationsExclusiveScanAMD(double);dvec2   addInvocationsExclusiveScanAMD(dvec2);dvec3   addInvocationsExclusiveScanAMD(dvec3);dvec4   addInvocationsExclusiveScanAMD(dvec4);int64_t addInvocationsExclusiveScanAMD(int64_t);i64vec2 addInvocationsExclusiveScanAMD(i64vec2);i64vec3 addInvocationsExclusiveScanAMD(i64vec3);i64vec4 addInvocationsExclusiveScanAMD(i64vec4);uint64_t addInvocationsExclusiveScanAMD(uint64_t);u64vec2  addInvocationsExclusiveScanAMD(u64vec2);u64vec3  addInvocationsExclusiveScanAMD(u64vec3);u64vec4  addInvocationsExclusiveScanAMD(u64vec4);float16_t addInvocationsExclusiveScanAMD(float16_t);f16vec2   addInvocationsExclusiveScanAMD(f16vec2);f16vec3   addInvocationsExclusiveScanAMD(f16vec3);f16vec4   addInvocationsExclusiveScanAMD(f16vec4);int16_t addInvocationsExclusiveScanAMD(int16_t);i16vec2 addInvocationsExclusiveScanAMD(i16vec2);i16vec3 addInvocationsExclusiveScanAMD(i16vec3);i16vec4 addInvocationsExclusiveScanAMD(i16vec4);uint16_t addInvocationsExclusiveScanAMD(uint16_t);u16vec2  addInvocationsExclusiveScanAMD(u16vec2);u16vec3  addInvocationsExclusiveScanAMD(u16vec3);u16vec4  addInvocationsExclusiveScanAMD(u16vec4);float minInvocationsNonUniformAMD(float);vec2  minInvocationsNonUniformAMD(vec2);vec3  minInvocationsNonUniformAMD(vec3);vec4  minInvocationsNonUniformAMD(vec4);int   minInvocationsNonUniformAMD(int);ivec2 minInvocationsNonUniformAMD(ivec2);ivec3 minInvocationsNonUniformAMD(ivec3);ivec4 minInvocationsNonUniformAMD(ivec4);uint  minInvocationsNonUniformAMD(uint);uvec2 minInvocationsNonUniformAMD(uvec2);uvec3 minInvocationsNonUniformAMD(uvec3);uvec4 minInvocationsNonUniformAMD(uvec4);double minInvocationsNonUniformAMD(double);dvec2  minInvocationsNonUniformAMD(dvec2);dvec3  minInvocationsNonUniformAMD(dvec3);dvec4  minInvocationsNonUniformAMD(dvec4);int64_t minInvocationsNonUniformAMD(int64_t);i64vec2 minInvocationsNonUniformAMD(i64vec2);i64vec3 minInvocationsNonUniformAMD(i64vec3);i64vec4 minInvocationsNonUniformAMD(i64vec4);uint64_t minInvocationsNonUniformAMD(uint64_t);u64vec2  minInvocationsNonUniformAMD(u64vec2);u64vec3  minInvocationsNonUniformAMD(u64vec3);u64vec4  minInvocationsNonUniformAMD(u64vec4);float16_t minInvocationsNonUniformAMD(float16_t);f16vec2   minInvocationsNonUniformAMD(f16vec2);f16vec3   minInvocationsNonUniformAMD(f16vec3);f16vec4   minInvocationsNonUniformAMD(f16vec4);int16_t minInvocationsNonUniformAMD(int16_t);i16vec2 minInvocationsNonUniformAMD(i16vec2);i16vec3 minInvocationsNonUniformAMD(i16vec3);i16vec4 minInvocationsNonUniformAMD(i16vec4);uint16_t minInvocationsNonUniformAMD(uint16_t);u16vec2  minInvocationsNonUniformAMD(u16vec2);u16vec3  minInvocationsNonUniformAMD(u16vec3);u16vec4  minInvocationsNonUniformAMD(u16vec4);float minInvocationsInclusiveScanNonUniformAMD(float);vec2  minInvocationsInclusiveScanNonUniformAMD(vec2);vec3  minInvocationsInclusiveScanNonUniformAMD(vec3);vec4  minInvocationsInclusiveScanNonUniformAMD(vec4);int   minInvocationsInclusiveScanNonUniformAMD(int);ivec2 minInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsInclusiveScanNonUniformAMD(ivec4);uint  minInvocationsInclusiveScanNonUniformAMD(uint);uvec2 minInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsInclusiveScanNonUniformAMD(uvec4);double minInvocationsInclusiveScanNonUniformAMD(double);dvec2  minInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsInclusiveScanNonUniformAMD(u16vec4);float minInvocationsExclusiveScanNonUniformAMD(float);vec2  minInvocationsExclusiveScanNonUniformAMD(vec2);vec3  minInvocationsExclusiveScanNonUniformAMD(vec3);vec4  minInvocationsExclusiveScanNonUniformAMD(vec4);int   minInvocationsExclusiveScanNonUniformAMD(int);ivec2 minInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsExclusiveScanNonUniformAMD(ivec4);uint  minInvocationsExclusiveScanNonUniformAMD(uint);uvec2 minInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsExclusiveScanNonUniformAMD(uvec4);double minInvocationsExclusiveScanNonUniformAMD(double);dvec2  minInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsExclusiveScanNonUniformAMD(u16vec4);float maxInvocationsNonUniformAMD(float);vec2  maxInvocationsNonUniformAMD(vec2);vec3  maxInvocationsNonUniformAMD(vec3);vec4  maxInvocationsNonUniformAMD(vec4);int   maxInvocationsNonUniformAMD(int);ivec2 maxInvocationsNonUniformAMD(ivec2);ivec3 maxInvocationsNonUniformAMD(ivec3);ivec4 maxInvocationsNonUniformAMD(ivec4);uint  maxInvocationsNonUniformAMD(uint);uvec2 maxInvocationsNonUniformAMD(uvec2);uvec3 maxInvocationsNonUniformAMD(uvec3);uvec4 maxInvocationsNonUniformAMD(uvec4);double maxInvocationsNonUniformAMD(double);dvec2  maxInvocationsNonUniformAMD(dvec2);dvec3  maxInvocationsNonUniformAMD(dvec3);dvec4  maxInvocationsNonUniformAMD(dvec4);int64_t maxInvocationsNonUniformAMD(int64_t);i64vec2 maxInvocationsNonUniformAMD(i64vec2);i64vec3 maxInvocationsNonUniformAMD(i64vec3);i64vec4 maxInvocationsNonUniformAMD(i64vec4);uint64_t maxInvocationsNonUniformAMD(uint64_t);u64vec2  maxInvocationsNonUniformAMD(u64vec2);u64vec3  maxInvocationsNonUniformAMD(u64vec3);u64vec4  maxInvocationsNonUniformAMD(u64vec4);float16_t maxInvocationsNonUniformAMD(float16_t);f16vec2   maxInvocationsNonUniformAMD(f16vec2);f16vec3   maxInvocationsNonUniformAMD(f16vec3);f16vec4   maxInvocationsNonUniformAMD(f16vec4);int16_t maxInvocationsNonUniformAMD(int16_t);i16vec2 maxInvocationsNonUniformAMD(i16vec2);i16vec3 maxInvocationsNonUniformAMD(i16vec3);i16vec4 maxInvocationsNonUniformAMD(i16vec4);uint16_t maxInvocationsNonUniformAMD(uint16_t);u16vec2  maxInvocationsNonUniformAMD(u16vec2);u16vec3  maxInvocationsNonUniformAMD(u16vec3);u16vec4  maxInvocationsNonUniformAMD(u16vec4);float maxInvocationsInclusiveScanNonUniformAMD(float);vec2  maxInvocationsInclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsInclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsInclusiveScanNonUniformAMD(vec4);int   maxInvocationsInclusiveScanNonUniformAMD(int);ivec2 maxInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsInclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsInclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsInclusiveScanNonUniformAMD(uvec4);double maxInvocationsInclusiveScanNonUniformAMD(double);dvec2  maxInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanNonUniformAMD(u16vec4);float maxInvocationsExclusiveScanNonUniformAMD(float);vec2  maxInvocationsExclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsExclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsExclusiveScanNonUniformAMD(vec4);int   maxInvocationsExclusiveScanNonUniformAMD(int);ivec2 maxInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsExclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsExclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsExclusiveScanNonUniformAMD(uvec4);double maxInvocationsExclusiveScanNonUniformAMD(double);dvec2  maxInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanNonUniformAMD(u16vec4);float addInvocationsNonUniformAMD(float);vec2  addInvocationsNonUniformAMD(vec2);vec3  addInvocationsNonUniformAMD(vec3);vec4  addInvocationsNonUniformAMD(vec4);int   addInvocationsNonUniformAMD(int);ivec2 addInvocationsNonUniformAMD(ivec2);ivec3 addInvocationsNonUniformAMD(ivec3);ivec4 addInvocationsNonUniformAMD(ivec4);uint  addInvocationsNonUniformAMD(uint);uvec2 addInvocationsNonUniformAMD(uvec2);uvec3 addInvocationsNonUniformAMD(uvec3);uvec4 addInvocationsNonUniformAMD(uvec4);double addInvocationsNonUniformAMD(double);dvec2  addInvocationsNonUniformAMD(dvec2);dvec3  addInvocationsNonUniformAMD(dvec3);dvec4  addInvocationsNonUniformAMD(dvec4);int64_t addInvocationsNonUniformAMD(int64_t);i64vec2 addInvocationsNonUniformAMD(i64vec2);i64vec3 addInvocationsNonUniformAMD(i64vec3);i64vec4 addInvocationsNonUniformAMD(i64vec4);uint64_t addInvocationsNonUniformAMD(uint64_t);u64vec2  addInvocationsNonUniformAMD(u64vec2);u64vec3  addInvocationsNonUniformAMD(u64vec3);u64vec4  addInvocationsNonUniformAMD(u64vec4);float16_t addInvocationsNonUniformAMD(float16_t);f16vec2   addInvocationsNonUniformAMD(f16vec2);f16vec3   addInvocationsNonUniformAMD(f16vec3);f16vec4   addInvocationsNonUniformAMD(f16vec4);int16_t addInvocationsNonUniformAMD(int16_t);i16vec2 addInvocationsNonUniformAMD(i16vec2);i16vec3 addInvocationsNonUniformAMD(i16vec3);i16vec4 addInvocationsNonUniformAMD(i16vec4);uint16_t addInvocationsNonUniformAMD(uint16_t);u16vec2  addInvocationsNonUniformAMD(u16vec2);u16vec3  addInvocationsNonUniformAMD(u16vec3);u16vec4  addInvocationsNonUniformAMD(u16vec4);float addInvocationsInclusiveScanNonUniformAMD(float);vec2  addInvocationsInclusiveScanNonUniformAMD(vec2);vec3  addInvocationsInclusiveScanNonUniformAMD(vec3);vec4  addInvocationsInclusiveScanNonUniformAMD(vec4);int   addInvocationsInclusiveScanNonUniformAMD(int);ivec2 addInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsInclusiveScanNonUniformAMD(ivec4);uint  addInvocationsInclusiveScanNonUniformAMD(uint);uvec2 addInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsInclusiveScanNonUniformAMD(uvec4);double addInvocationsInclusiveScanNonUniformAMD(double);dvec2  addInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsInclusiveScanNonUniformAMD(u16vec4);float addInvocationsExclusiveScanNonUniformAMD(float);vec2  addInvocationsExclusiveScanNonUniformAMD(vec2);vec3  addInvocationsExclusiveScanNonUniformAMD(vec3);vec4  addInvocationsExclusiveScanNonUniformAMD(vec4);int   addInvocationsExclusiveScanNonUniformAMD(int);ivec2 addInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsExclusiveScanNonUniformAMD(ivec4);uint  addInvocationsExclusiveScanNonUniformAMD(uint);uvec2 addInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsExclusiveScanNonUniformAMD(uvec4);double addInvocationsExclusiveScanNonUniformAMD(double);dvec2  addInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsExclusiveScanNonUniformAMD(u16vec4);float swizzleInvocationsAMD(float, uvec4);vec2  swizzleInvocationsAMD(vec2,  uvec4);vec3  swizzleInvocationsAMD(vec3,  uvec4);vec4  swizzleInvocationsAMD(vec4,  uvec4);int   swizzleInvocationsAMD(int,   uvec4);ivec2 swizzleInvocationsAMD(ivec2, uvec4);ivec3 swizzleInvocationsAMD(ivec3, uvec4);ivec4 swizzleInvocationsAMD(ivec4, uvec4);uint  swizzleInvocationsAMD(uint,  uvec4);uvec2 swizzleInvocationsAMD(uvec2, uvec4);uvec3 swizzleInvocationsAMD(uvec3, uvec4);uvec4 swizzleInvocationsAMD(uvec4, uvec4);float swizzleInvocationsMaskedAMD(float, uvec3);vec2  swizzleInvocationsMaskedAMD(vec2,  uvec3);vec3  swizzleInvocationsMaskedAMD(vec3,  uvec3);vec4  swizzleInvocationsMaskedAMD(vec4,  uvec3);int   swizzleInvocationsMaskedAMD(int,   uvec3);ivec2 swizzleInvocationsMaskedAMD(ivec2, uvec3);ivec3 swizzleInvocationsMaskedAMD(ivec3, uvec3);ivec4 swizzleInvocationsMaskedAMD(ivec4, uvec3);uint  swizzleInvocationsMaskedAMD(uint,  uvec3);uvec2 swizzleInvocationsMaskedAMD(uvec2, uvec3);uvec3 swizzleInvocationsMaskedAMD(uvec3, uvec3);uvec4 swizzleInvocationsMaskedAMD(uvec4, uvec3);float writeInvocationAMD(float, float, uint);vec2  writeInvocationAMD(vec2,  vec2,  uint);vec3  writeInvocationAMD(vec3,  vec3,  uint);vec4  writeInvocationAMD(vec4,  vec4,  uint);int   writeInvocationAMD(int,   int,   uint);ivec2 writeInvocationAMD(ivec2, ivec2, uint);ivec3 writeInvocationAMD(ivec3, ivec3, uint);ivec4 writeInvocationAMD(ivec4, ivec4, uint);uint  writeInvocationAMD(uint,  uint,  uint);uvec2 writeInvocationAMD(uvec2, uvec2, uint);uvec3 writeInvocationAMD(uvec3, uvec3, uint);uvec4 writeInvocationAMD(uvec4, uvec4, uint);uint mbcntAMD(uint64_t
float near;float far;float diff
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x
float%d
float%dx%d
float,float
float16 types can only be in uniform block or buffer storage
float16BitsToInt16
float16BitsToUint16
float16_t
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4
float16_t interpolateAtCentroid(float16_t);f16vec2   interpolateAtCentroid(f16vec2);f16vec3   interpolateAtCentroid(f16vec3);f16vec4   interpolateAtCentroid(f16vec4);float16_t interpolateAtSample(float16_t, int);f16vec2   interpolateAtSample(f16vec2,   int);f16vec3   interpolateAtSample(f16vec3,   int);f16vec4   interpolateAtSample(f16vec4,   int);float16_t interpolateAtOffset(float16_t, f16vec2);f16vec2   interpolateAtOffset(f16vec2,   f16vec2);f16vec3   interpolateAtOffset(f16vec3,   f16vec2);f16vec4   interpolateAtOffset(f16vec4,   f16vec2
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f16vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 transpose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4
float16_t,float16_t
float1x1
float1x2
float1x3
float1x4
float2x1
float2x2
float2x3
float2x4
float32_t
float32_t matrix
float32_t vector
float3x1
float3x2
float3x3
float3x4
float4 %s: register( c%d
float4x1
float4x2
float4x3
float4x4
float64_t
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2
float64_t matrix
float64_t vector
floatBitsToInt
floatBitsToUint
floating-point fast math mode
floating-point rounding mode
floating-point suffix
flockfile
fmax_common
fmin_common
fopen64
for Entry Point id
for Vulkan environment
for appending
for header name: %s
for non-parameter, can only apply to 'in' or no storage qualifier
for sub-statement
for target environment
for the
for variable in
for-loop initializer statement
for_init_statement
for_rest_statement
forcecasH9
forcecase
forcing 32-bit vector type to non 64-bit scalar
forcing non 32-bit vector type
format requires readonly or writeonly memory qualifier
format_r11fg11fb10f
format_r16snorm
format_rH
format_rg8snorm
format_rgba16ui
format_rgba32ui
forward_pointer
fprintf
fptrunc
fputs$UNIX2003
fr2tdrL
fractional_even
fractional_even_spacing
fractional_odd
fractional_odd_spacing
fragColor
fragment
fragment input block
fragment outputs sharing the same location must be the same basic type
fragment shader barycentric
fragment shader interlock layout qualifier
fragment shader output
fragment-shader array-of-array input
fragment-shader array-of-array output
fragment-shader array-of-struct input
fragment-shader struct input
fragment-shader struct input containing an array
fragment-shader struct input containing structure
fragmentFetchAMD
fragmentMaskFetchAMD
free_it
freebsd
french-belgian
french-canadian
french-luxembourg
french-swiss
fseeko64
fsetpos
fstat64
fstatvfs
fstatvfs64
ftello64
ftransform
ftrylockfile
fully_specified_type
function
function already has a body
function body can't be in a declarator list
function body can't be in a typedef
function call arguments
function call, method, or subroutine call expected
function cannot take any parameter(s
function control
function does not return a value
function end without function start
function inside function
function name is redeclaration of existing name
function not supported
function parameter attribute
function parameter list
function parameter requires array size
function parameters
function typedefs not implemented
functionH
function_call
function_call_generic
function_call_header
function_call_header_no_parameters
function_call_header_with_parameters
function_call_or_method
function_declarator
function_definition
function_header
function_header_with_parameters
function_identifier
function_prototype
funlockfile
future reserved word in ES 300 and keyword in GLSL
fvk-b-shift
fvk-invert-y
fvk-s-shift
fvk-t-shift
fvk-u-shift
fwidthCoarse
fwidthFine
fwrite$UNIX2003
g%&'g()*+,gg-./012gg3g4gggggggggggg5678g9g:;<=>?@ggggggggggggggggggAggggggggBCDEFg
g.value
g16snormH9H
g2.approx
g2.approx.ftz.f
g_bUpdateStringTokenDatabase
g_boolAttr
g_constants
g_constants[ g_nDataIdx ].%s
g_float2Attr
g_float3Attr
g_float4Attr
g_floatAttr
g_inputTexture
g_inputTexture2D
g_inputTexture2D_%s
g_inputTexture3D
g_inputTexture3D_%s
g_inputTextureCube
g_inputTextureCube_%s
g_intAttr
g_pMemAlloc
g_renderState
g_texAttr
g_vShared
gather-instructions
gb10a2uiH9H
gba16snoH9H
gba8snorH9H
general-case cross edges (requires artificial loop
generic
geometry
geometry input primitive
geometry output primitive
geometry shader passthrough
geometry shaders
german-austrian
german-lichtenstein
german-luxembourg
german-swiss
getc_unlocked
getchar
getelementptr
getitimer
getlogin_r
getpwnam
gets larger than 3
gettimeofday
gfffffffE3
gfffffffH
gfffffffH+M M
gfffffffI
gfffffffL
gfffffffM
glAttachShader
glCompileShader
glCreateProgram
glCreateShader
glCreateShaderProgramv
glDeleteProgram
glDeleteProgramPipelines
glDeleteShader
glDetachShader
glGenProgramPipelines
glGetActiveUniform
glGetActiveUniformBlockName
glGetActiveUniformBlockiv
glGetActiveUniformsiv
glGetProgramBinary
glGetProgramInfoLog
glGetProgramResourceiv
glGetProgramiv
glGetShaderInfoLog
glGetShaderiv
glGetString
glGetStringi
glGetUniformBlockIndex
glGetUniformIndices
glGetUniformLocation
glIsProgram
glLinkProgram
glProgramBinary
glProgramParameteri
glShaderSource
glUseProgramStages
gl_BackCH9
gl_BackColor
gl_BackSecondaryColor
gl_BaryCoordNV
gl_BaryCoordNoPerspAMD
gl_BaryCoordNoPerspCentroidAMD
gl_BaryCoordNoPerspNV
gl_BaryCoordNoPerspSampleAMD
gl_BaryCoordPullModelAMD
gl_BaryCoordSmoothAMD
gl_BaryCoordSmoothCentroidAMD
gl_BaryCoordSmoothSampleAMD
gl_BaseInstance
gl_BaseInstanceARB
gl_BaseVertex
gl_BaseVertexARB
gl_BoundingBox
gl_BoundingBoxEXT
gl_BoundingBoxOES
gl_ClipDistance
gl_ClipDistance array size
gl_ClipDistancePerViewNV
gl_ClipDistancePerViewNV array size
gl_ClipDistance[%d] = %s.%s.%s
gl_ClipDistance[%d] = streamName.%s.%s
gl_ClipDistance[0
gl_ClipDistance[0] = 0.0
gl_ClipDistance[0] = 0.0; // Initialize in case the shader does not write to it to avoid relying on undefined behavior
gl_ClipDistance[0] = gl_in[0].gl_ClipDistance[0] * gl_TessCoord.x + gl_in[1].gl_ClipDistance[0] * gl_TessCoord.y +  gl_in[2].gl_ClipDistance[0] * gl_TessCoord.z
gl_ClipDistance[0] = streamName.%s
gl_ClipDistance[1
gl_ClipDistance[2
gl_ClipDistance[3
gl_ClipDistance[4
gl_ClipDistance[5
gl_ClipDistance[6
gl_ClipDistance[7
gl_ClipVH9
gl_ClipVertex
gl_Color
gl_ColorH9
gl_CullDistance
gl_CullDistance array size
gl_CullDistancePerViewNV
gl_CullDistancePerViewNV array size
gl_DeviceIndex
gl_DrawID
gl_DrawIDARB
gl_EmbBackColor
gl_EmbBackSecondaryColor
gl_EmbFogFragCoord
gl_EmbFrontColor
gl_EmbFrontSecondaryColor
gl_EmbMultiTexCoord0
gl_EmbMultiTexCoord1
gl_EmbMultiTexCoord2
gl_EmbMultiTexCoord3
gl_EmbMultiTexCoord4
gl_EmbMultiTexCoord5
gl_EmbMultiTexCoord6
gl_EmbMultiTexCoord7
gl_EmbNormal
gl_EmbTexCoord
gl_EmbVertex
gl_FogCoord
gl_FogFragCoord
gl_FragC
gl_FragCH9
gl_FragCI
gl_FragColor
gl_FragCoord
gl_FragCoord origin is upper left
gl_FragCoord pixel center is integer
gl_FragCoord redeclarations must match across shaders
gl_FragD
gl_FragDH9
gl_FragDM
gl_FragData
gl_FragDepth
gl_FragDepthEXT
gl_FragFullyCoveredNV
gl_FragInvocationCountEXT
gl_FragSH9
gl_FragSizeEXT
gl_FragStencilRefARB
gl_FragmentSizeNV
gl_FrontColor
gl_FrontFacing
gl_FrontH9
gl_FrontSecondaryColor
gl_GeometryIndexEXT
gl_GlobalInvocationID
gl_HelperInvocation
gl_HitKindEXT
gl_HitKindNV
gl_HitTEXT
gl_HitTNV
gl_IncomingRayFlagsEXT
gl_IncomingRayFlagsNV
gl_InstanceCustomIndexEXT
gl_InstanceCustomIndexNV
gl_InstanceID
gl_InstanceId
gl_InstanceIndex
gl_InvocationID
gl_InvocationsPerPixelNV
gl_LaunchIDEXT
gl_LaunchIDNV
gl_LaunchSizeEXT
gl_LaunchSizeNV
gl_Layer
gl_Layer = int( streamName.%s
gl_LayerH9
gl_LayerPerViewNV
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_MaxClipDistances
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxComputeWorkGroupSize
gl_MaxCullDistances
gl_MaxMeshOutputPrimitivesNV
gl_MaxMeshOutputVerticesNV
gl_MaxMeshViewCountNV
gl_MaxMeshWorkGroupSizeNV
gl_MaxProgramTexelOffset
gl_MaxTaskWorkGroupSizeNV
gl_MaxTextureCoords
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackBuffers is %d
gl_MaxTransformFeedbackInterleavedComponents
gl_MaxTransformFeedbackInterleavedComponents is
gl_MaxTransformFeedbackInterleavedComponents is %d
gl_MaxViewports
gl_MeshPL9
gl_MeshPerPrimitiveNV
gl_MeshPrimitivesNV
gl_MeshVerticesNV
gl_MeshViewCountNV
gl_MeshViewIndicesNV
gl_MinProgramTexelOffset
gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset
gl_ModelViewProjectionMatrix_sim
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_Normal
gl_NumSamples
gl_NumSubgroups
gl_NumWorkGroups
gl_ObjectRayDirectionEXT
gl_ObjectRayDirectionNV
gl_ObjectRayOriginEXT
gl_ObjectRayOriginNV
gl_ObjectToWorld3x4EXT
gl_ObjectToWorldEXT
gl_ObjectToWorldNV
gl_PatchVertices
gl_PatchVerticesIn
gl_PerFrL9
gl_PerVeL9
gl_PointCoord
gl_PointH9
gl_PointSize
gl_PosiH9H
gl_PositH9
gl_Position
gl_Position = streamName.%s
gl_Position.y = -gl_Position.y; %s
gl_Position.z =  gl_Position.z * 2.0 - gl_Position.w; %s
gl_PositionPerViewNV
gl_PrimitiveCountNV
gl_PrimitiveID
gl_PrimitiveID = int( streamName.%s
gl_PrimitiveIDIn
gl_PrimitiveIndicesNV
gl_RayTmaxEXT
gl_RayTmaxNV
gl_RayTminEXT
gl_RayTminNV
gl_SIMDGroupSizeAMD
gl_SMCountNV
gl_SMIDNV
gl_SamplH9
gl_SampleID
gl_SampleMask
gl_SampleMaskIn
gl_SampleMask[0
gl_SamplePosition
gl_ScopeDevice
gl_ScopeInvocation
gl_ScopeSubgroup
gl_ScopeWorkgroup
gl_SeconH9
gl_SecondaryColor
gl_SecondaryPositionNV
gl_SecondaryViewportMaskNV
gl_SemanticsAcquire
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsAcquireRelease
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
gl_SemanticsMakeAvailable
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
gl_SemanticsRelaxed
gl_SemanticsRelease
gl_SemanticsRelease must not be used with (image) atomic load
gl_SemanticsVolatile
gl_SemanticsVolatile must not be used with memoryBarrier or controlBarrier
gl_StorageSemanticsBuffer
gl_StorageSemanticsImage
gl_StorageSemanticsNone
gl_StorageSemanticsOutput
gl_StorageSemanticsShared
gl_SubGroupEqMaskARB
gl_SubGroupGeMaskARB
gl_SubGroupGtMaskARB
gl_SubGroupInvocationARB
gl_SubGroupLeMaskARB
gl_SubGroupLtMaskARB
gl_SubGroupSizeARB
gl_SubgroupEqMask
gl_SubgroupGeMask
gl_SubgroupGtMask
gl_SubgroupID
gl_SubgroupInvocationID
gl_SubgroupLeMask
gl_SubgroupLtMask
gl_SubgroupSize
gl_TaskCountNV
gl_TessCoord
gl_TessLevelInner
gl_TessLevelOuter
gl_TexCo
gl_TexCoH9
gl_TexCoord
gl_TexCoord array size
gl_Vertex
gl_VertexID
gl_VertexId
gl_VertexIndex
gl_Vertex_sim
gl_ViewID_OVR
gl_ViewIndex
gl_ViewpH9
gl_ViewportIndex
gl_ViewportIndex = int( streamName.%s
gl_ViewportMask
gl_ViewportMaskPerViewNV
gl_WarpIDNV
gl_WarpsPerSMNV
gl_WorkGroupID
gl_WorkGroupSize
gl_WorldRayDirectionEXT
gl_WorldRayDirectionNV
gl_WorldRayOriginEXT
gl_WorldRayOriginNV
gl_WorldToObject3x4EXT
gl_WorldToObjectEXT
gl_WorldToObjectNV
gl_disable_optimize_glsl
gl_driver_validate
gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
gl_in[gl_MaxPatchVertices
gl_out
gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2
gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];patch out highp vec4 gl_BoundingBoxEXT[2
gl_out[gl_InvocationID].gl_ClipDistance[%d] = %s.%s.%s
gl_out[gl_InvocationID].gl_ClipDistance[0] = gl_in[gl_InvocationID].gl_ClipDistance[0
gl_shader_hash_d3d
gla.blendEquations
gla.entrypoint
gla.input
gla.inputPrimitive
gla.inputs
gla.invariant
gla.invocations
gla.localSize
gla.noStaticUse
gla.numVertices
gla.originUpperLeft
gla.output
gla.outputPrimitive
gla.outputs
gla.pixelCenterInteger
gla.pointMode
gla.precision
gla.shared
gla.uniform
gla.uniforms
gla.vertexOrder
gla.vertexSpacing
gla.xfbMode
gla_constGEP
gla_globalAgg
global
global binding
global const initializers must be constant
global storage input qualifier cannot be used in a compute shader
global storage output qualifier cannot be used in a compute shader
global variables) and section 10 (function
global_cbuffer_binding
globallycoherent
globalopt
glsl_to_spirv
glslang aggregate
glslang binary operation
glslang failed to build reflection information
glslang function call
glslang qualifier
glslang unary
glslang_binary_double_output
gnat_eh_personality
gnueabihH
goodsyntax
great britain
greaterThan
greaterThanEqual
group operation
groupMemoryBarrier
groupshared
gsetjmp
gxx_peH
g~{<itd<ntY<ot7<pt
h.acc.s
h.nopack
h.sjlj.callsite
h.sjlj.functioncontext
h.sjlj.longjmp
hA_A]A
hA_A^A
hA_A^A]A
hH9]`u
h`H9h0t
half float image
half float literal
half float matrix
half float sampler
half float subpass input
half float texture
half float vector
half floating-point suffix
half1x1
half1x2
half1x3
half1x4
half2x1
half2x2
half2x3
half2x4
half3x1
half3x2
half3x3
half3x4
half4x1
half4x2
half4x3
half4x4
halfBitsToInt16
halfBitsToUint16
half_cos
half_divide
half_exp
half_exp10
half_exp2
half_log
half_log10
half_log2
half_powr
half_recip
half_rsqrt
half_sin
half_sqrt
half_tan
has a consumer in a different basic block. The consumer instruction <id> is
has a disallowed initializer & storage class
has bit width
has branches to multiple other case construct targets
has branches to the case construct that targets
has components with bit width
has exceeded the limit
has illegal type
has invalid branch to block
has invalid mask component
has no type
has not been defined
has storage class StorageBuffer
headed by <ID
header
header name too long
header>E
header>H
header>I
header>L
help-hidden
help-list
help-list-hidden
helperInvocationEXT
hexadecimal literal too big
hexadecimal literal too long
hidden
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth
highp   vec4  gl_Position;mediump float gl_PointSize
highp float gl_FragDepthEXT
highp float near;highp float far;highp float diff
highp int
highp ivec2 textureSize(__samplerExternal2DY2YEXT, int lod);vec4 texture(__samplerExternal2DY2YEXT, vec2);vec4 texture(__samplerExternal2DY2YEXT, vec2, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec3);vec4 textureProj(__samplerExternal2DY2YEXT, vec3, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec4);vec4 textureProj(__samplerExternal2DY2YEXT, vec4, float bias);vec4 texelFetch(__samplerExternal2DY2YEXT sampler, ivec2, int lod
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod
highp precision qualifier
highp uint
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint
highp vec4  gl_Position;highp float gl_PointSize
hitAttributeEXT
hitAttributeNV
hitAttributeNV block
hkDh$h
hlsl-iomap
hlsl-offsets
hlslvariablesLexerNew
hlslvariablesLexerNewSSD
hlslvariablesParserNew
hlslvariablesParserNewSSD
holland
hong-kong
host unreachable
hraddshs
hread.pointer
htl<jt\<lt4<tt$<wt
http://crl3.digicert.com/sha2-assured-cs-g1.crl05
http://crl3.digicert.com/sha2-assured-ts.crl02
http://crl4.digicert.com/sha2-assured-cs-g1.crl0L
http://crl4.digicert.com/sha2-assured-ts.crl0
http://ocsp.digicert.com0C
http://ocsp.digicert.com0N
http://ocsp.digicert.com0O
http://www.digicert.com/CPS0
https://www.digicert.com/CPS0
hyp. cosine
hyp. sine
hyp. tangent
i16vec2
i16vec3
i16vec4
i32.512
i32vec2
i32vec3
i32vec4
i64.512
i64vec2
i64vec3
i64vec4
iHI9F8uaA
iMulExtended
iOS SM 4.0 (VULKAN
icesu*A
icesuGH
icesuJH
icoopmatNV
icoopmatNV coopMatMulAddNV(icoopmatNV A, icoopmatNV B, icoopmatNV C
idata$2
idata$3
idata$4
idata$5
idata$6
identical
identifier
identifier after
identifier not previously declared
identifier removed
identifier_list
identifiers containing consecutive underscores ("__") are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version < 300
identifiers starting with "gl_" are reserved
identify-structures
if ( gl_InvocationID == 0
if defined( GL_FRAGMENT_PRECISION_HIGH
if it has storage class Uniform
if-conversion
if/#ifdef/#ifndef
if_conversion_pass
ifetime.end
ifetime.start
ifmerge
ifndef
iglongjmp
ignoreIntersectionEXT
ignoreIntersectionNV
ignored
ignoring shader_profile
ignoring unrecognized register type
iimage1D
iimage1DArray
iimage2D
iimage2DArray
iimage2DMS
iimage2DMSArray
iimage2DRect
iimage3D
iimageBuffer
iimageCube
iimageCubeArray
illegal byte sequence
illegal use of escape character
illegal use of type 'void
image access
image channel data type
image channel order
image format
image formats must match
image load store
image load-store format
image variables not declared 'writeonly' and without a format layout qualifier
image1D
image1DArray
image2D
image2DArray
image2DMS
image2DMSArray
image2DRect
image3D
imageAlgorithm
imageAtomic
imageAtomicAdd
imageAtomicAdd(volatile coherent
imageAtomicAnd
imageAtomicAnd(volatile coherent
imageAtomicCompSwap
imageAtomicCompSwap(volatile coherent
imageAtomicExchange
imageAtomicExchange(volatile coherent
imageAtomicLoad
imageAtomicLoad(volatile coherent
imageAtomicMax
imageAtomicMax(volatile coherent
imageAtomicMin
imageAtomicMin(volatile coherent
imageAtomicOr
imageAtomicOr(volatile coherent
imageAtomicStore
imageAtomicXor
imageAtomicXor(volatile coherent
imageBuffer
imageCube
imageCubeArray
imageLoad
imageLoadLod
imageLoadLodAMD
imageQuerySamples
imageQuerySize
imageSampleFootprintClampNV
imageSampleFootprintGradNV
imageSampleFootprintLodNV
imageSampleFootprintNV
imageSamples
imageSamples(readonly writeonly volatile coherent
imageSize
imageSize(readonly writeonly volatile coherent
imageStore
imageStoreLod
imageStoreLodAMD
immediate sampler state
implicitly-sized array
imulExtended
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in     int   gl_InstanceCustomIndexEXT;in     int   gl_GeometryIndexEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayOriginEXT;in    vec3   gl_ObjectRayDirectionNV;in    vec3   gl_ObjectRayDirectionEXT;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    float  gl_HitTNV;in    float  gl_HitTEXT;in    uint   gl_HitKindNV;in    uint   gl_HitKindEXT;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_ObjectToWorldEXT;in    mat3x4 gl_ObjectToWorld3x4EXT;in    mat4x3 gl_WorldToObjectNV;in    mat4x3 gl_WorldToObjectEXT;in    mat3x4 gl_WorldToObject3x4EXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in     int   gl_InstanceCustomIndexEXT;in     int   gl_GeometryIndexEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayOriginEXT;in    vec3   gl_ObjectRayDirectionNV;in    vec3   gl_ObjectRayDirectionEXT;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_ObjectToWorldEXT;in    mat3x4 gl_ObjectToWorld3x4EXT;in    mat4x3 gl_WorldToObjectNV;in    mat4x3 gl_WorldToObjectEXT;in    mat3x4 gl_WorldToObject3x4EXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchIDEXT;in    uvec3  gl_LaunchSizeNV;in    uvec3  gl_LaunchSizeEXT;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayOriginEXT;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_WorldRayDirectionEXT;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTminEXT;in    float  gl_RayTmaxNV;in    float  gl_RayTmaxEXT;in    uint   gl_IncomingRayFlagsNV;in    uint   gl_IncomingRayFlagsEXT
in Function or Private storage classes or as function parameters
in Vertex or Tessellation execution model requires the ShaderViewportIndexLayerEXT capability
in Vulkan 1.0 environment Memory Scope is limited to
in Vulkan 1.1 and 1.2 environment Memory Scope is limited
in Vulkan environment Execution Scope is limited to
in Vulkan environment Execution scope is limited to
in Vulkan environment, Memory Scope cannot be CrossDevice
in Vulkan evironment, OpControlBarrier execution scope must be Subgroup for Fragment, Vertex, Geometry and TessellationEvaluation execution models
in WebGPU environment Execution Scope is limited to
in WebGPU environment Memory Scope is limited to
in WebGPU environment, Workgroup Execution Scope is limited to GLCompute execution model
in WebGPU environment, Workgroup Memory Scope is limited to GLCompute execution model
in bool gl_FragFullyCoveredNV
in float gl_ClipDistance
in float gl_CullDistance[];bool gl_HelperInvocation
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor
in for stage inputs
in function
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;highp vec4 gl_SecondaryPositionNV;highp vec4 gl_PositionPerViewNV[];} gl_in[gl_MaxPatchVertices
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in highp   uint  gl_NumSubgroups;in highp   uint  gl_SubgroupID
in highp int gl_DeviceIndex
in highp int gl_DeviceIndex;in highp int gl_ViewIndex
in highp int gl_DeviceIndex;in int gl_DrawIDARB
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
in highp int gl_PrimitiveIDIn;in highp int gl_InvocationID
in highp int gl_VertexID;in highp int gl_InstanceID
in highp int gl_VertexIndex;in highp int gl_InstanceIndex
in highp uint gl_ViewID_OVR
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB
in int gl_DrawID
in int gl_InvocationID
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
in int gl_VertexIndex;in int gl_InstanceIndex
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;in highp   uint  gl_WarpsPerSMNV;in highp   uint  gl_SMCountNV;in highp   uint  gl_WarpIDNV;in highp   uint  gl_SMIDNV
in semantic instruction cannot be a non-semantic instruction
in the OpenCL environment
in the structure <id
in vec2 gl_BaryCoordNoPerspAMD;in vec2 gl_BaryCoordNoPerspCentroidAMD;in vec2 gl_BaryCoordNoPerspSampleAMD;in vec2 gl_BaryCoordSmoothAMD;in vec2 gl_BaryCoordSmoothCentroidAMD;in vec2 gl_BaryCoordSmoothSampleAMD;in vec3 gl_BaryCoordPullModelAMD
in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord
in xfb mode
in.approx.f
in.approx.ftz.f
in/out block layout
in/out must appear before const
inappropriate io control operation
inbounds
include
inclusive-or
inclusive_or_expression
incomplete method syntax
inconsistent input primitive for array size of
inconsistent output array size of
inconsistent output number of vertices for array size of
incorrect directive, expected identifier
index is larger than Type <id
index layout qualifier on fragment output
index out of range '%d
indexable
indexes
indirect index
indirectbr
inductive loop index modified
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression
indvar.conv
indvar.next
indvars
infinity
infloop
info-output-file
init_declarator_list
initialized declaration
initializer
initializer list
initializer requires a variable, not a member
initializer: Output, Private, or Function
initializer_list
inline-cost
inline-entry-points-exhaustive
inline-threshold
inline_exhaustive_pass
inlinehint
inlinehint-threshold
input attachment
input block
input blocks cannot be used in a mesh shader
input primitive
input primitive geometry redefinition
inputColorSpace
input_attachment_index
insertelement
inserti128
insertq
insertvalue
instanceH9
instcombine
instruction
instruction in its block
instruction must be a pointer
instructions require Geometry execution model
instsimplify
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value
int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4
int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int
int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4
int gl_InstanceID
int gl_VertexID
int scalar or vector type
int scalar or vector with the same number of
int sparseImageLoadARB(readonly volatile coherent
int sparseImageLoadLodAMD(readonly volatile coherent
int textureQueryLevels
int(uint
int, int, int
int, int, int, int, int
int16BitsToFloat16
int16BitsToHalf
int16_t
int32_t
int64BitsToDouble
int64_t
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(double);i64vec2 doubleBitsToInt64(dvec2);i64vec3 doubleBitsToInt64(dvec3);i64vec4 doubleBitsToInt64(dvec4);uint64_t doubleBitsToUint64(double);u64vec2  doubleBitsToUint64(dvec2);u64vec3  doubleBitsToUint64(dvec3);u64vec4  doubleBitsToUint64(dvec4);double int64BitsToDouble(int64_t);dvec2  int64BitsToDouble(i64vec2);dvec3  int64BitsToDouble(i64vec3);dvec4  int64BitsToDouble(i64vec4);double uint64BitsToDouble(uint64_t);dvec2  uint64BitsToDouble(u64vec2);dvec3  uint64BitsToDouble(u64vec3);dvec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int64_t findLSB(int64_t);i64vec2 findLSB(i64vec2);i64vec3 findLSB(i64vec3);i64vec4 findLSB(i64vec4);int64_t findLSB(uint64_t);i64vec2 findLSB(u64vec2);i64vec3 findLSB(u64vec3);i64vec4 findLSB(u64vec4);int64_t findMSB(int64_t);i64vec2 findMSB(i64vec2);i64vec3 findMSB(i64vec3);i64vec4 findMSB(i64vec4);int64_t findMSB(uint64_t);i64vec2 findMSB(u64vec2);i64vec3 findMSB(u64vec3);i64vec4 findMSB(u64vec4
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3   uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);float64_t radians(float64_t);f64vec2   radians(f64vec2);f64vec3   radians(f64vec3);f64vec4   radians(f64vec4);float64_t degrees(float64_t);f64vec2   degrees(f64vec2);f64vec3   degrees(f64vec3);f64vec4   degrees(f64vec4);float64_t sin(float64_t);f64vec2   sin(f64vec2);f64vec3   sin(f64vec3);f64vec4   sin(f64vec4);float64_t cos(float64_t);f64vec2   cos(f64vec2);f64vec3   cos(f64vec3);f64vec4   cos(f64vec4);float64_t tan(float64_t);f64vec2   tan(f64vec2);f64vec3   tan(f64vec3);f64vec4   tan(f64vec4);float64_t asin(float64_t);f64vec2   asin(f64vec2);f64vec3   asin(f64vec3);f64vec4   asin(f64vec4);float64_t acos(float64_t);f64vec2   acos(f64vec2);f64vec3   acos(f64vec3);f64vec4   acos(f64vec4);float64_t atan(float64_t, float64_t);f64vec2   atan(f64vec2,   f64vec2);f64vec3   atan(f64vec3,   f64vec3);f64vec4   atan(f64vec4,   f64vec4);float64_t atan(float64_t);f64vec2   atan(f64vec2);f64vec3   atan(f64vec3);f64vec4   atan(f64vec4);float64_t sinh(float64_t);f64vec2   sinh(f64vec2);f64vec3   sinh(f64vec3);f64vec4   sinh(f64vec4);float64_t cosh(float64_t);f64vec2   cosh(f64vec2);f64vec3   cosh(f64vec3);f64vec4   cosh(f64vec4);float64_t tanh(float64_t);f64vec2   tanh(f64vec2);f64vec3   tanh(f64vec3);f64vec4   tanh(f64vec4);float64_t asinh(float64_t);f64vec2   asinh(f64vec2);f64vec3   asinh(f64vec3);f64vec4   asinh(f64vec4);float64_t acosh(float64_t);f64vec2   acosh(f64vec2);f64vec3   acosh(f64vec3);f64vec4   acosh(f64vec4);float64_t atanh(float64_t);f64vec2   atanh(f64vec2);f64vec3   atanh(f64vec3);f64vec4   atanh(f64vec4);float64_t pow(float64_t, float64_t);f64vec2   pow(f64vec2,   f64vec2);f64vec3   pow(f64vec3,   f64vec3);f64vec4   pow(f64vec4,   f64vec4);float64_t exp(float64_t);f64vec2   exp(f64vec2);f64vec3   exp(f64vec3);f64vec4   exp(f64vec4);float64_t log(float64_t);f64vec2   log(f64vec2);f64vec3   log(f64vec3);f64vec4   log(f64vec4);float64_t exp2(float64_t);f64vec2   exp2(f64vec2);f64vec3   exp2(f64vec3);f64vec4   exp2(f64vec4);float64_t log2(float64_t);f64vec2   log2(f64vec2);f64vec3   log2(f64vec3);f64vec4   log2(f64vec4
intBitsToFloat
integer
integer less than or equal to 4
integer scalar or vector
integer_expression
intel_ocl_bicc
inteldialect
interface
interlock ordering
intermVec
internal
internal max is %d
interpolant
interpolateAtCentroid
interpolateAtOffset
interpolateAtSample
interpolateAtVertex
interpolateAtVertexAMD
interpolation qualifiers must appear before storage and precision qualifiers
interpolation_qualifier
interrupted
intersection
into the structure <id
intrinsic without valid intrinsic ID
intrinsic-combine
inttoptr
invalid
invalid argument
invalid bitset position
invalid clip semantic
invalid cull semantic
invalid default parameter value
invalid directive
invalid domain
invalid hash bucket count
invalid map<K, T> key
invalid maxvertexcount
invalid outputcontrolpoints
invalid outputtopology
invalid parameter after default value parameters
invalid partitioning
invalid patch constant function
invalid preprocessor command
invalid seek
invalid string position
invalid unordered_map<K, T> key
invalid vector subscript
invalid_parameter
invariant
invariant qualifier must appear before interpolation, storage, and precision qualifiers
invariant.load
invariant_qualifier
inverse
inverse sqrt
inversesqrt
invert-yH
invocatiH9
invocation operation
invocations
io error
ionPerViH9A
ios_base::badbit set
ios_base::eofbit set
ios_base::failbit set
iostream
iostream stream error
iprintf
ips.prec
ips.precr.sra.r.ph.w
irc.ldd
irish-english
is a directory
is a matrix with stride
is a pointer, which is invalid in the Logical addressing model
is a type, not a value
is a void type
is already a merge block for another header
is also the end of the line, so you must check your lexer rules
is an improperly straddling vector at offset
is attempting to create memory for an illegal type
is banned when using the Vulkan memory model
is being used for
is contained in the
is decorated with BuiltIn. BuiltIn decoration should only be applied to struct types, variables and constants
is defined more than once
is disallowed
is invalid
is invalid value for boolean argument! Try 0 or 1
is later referenced by
is missing Binding decoration
is missing Block decoration
is missing Block or BufferBlock decoration
is missing DescriptorSet decoration
is missing an Offset decoration
is missing or void
is not
is not Workgroup or StorageBuffer
is not a bool scalar
is not a boolean type
is not a composite type
is not a constant
is not a constant instruction with scalar integer type
is not a constant integer type
is not a constant or module-scope variable
is not a constant or undef
is not a cooperative matrix type
is not a decoration group
is not a float scalar
is not a float vector
is not a function
is not a function type
is not a logical pointer
is not a pointer
is not a pointer type
is not a predecessor of <id
is not a sampler type
is not a scalar constant type
is not a scalar integer
is not a scalar numeric type
is not a scalar numerical type
is not a scalar specialization constant
is not a scalar type
is not a struct type
is not a type
is not a type id
is not a valid debug type
is not aligned to
is not aligned to scalar element size
is not allowed
is not allowed by OpenCL 1.2
is not allowed by OpenCL 2.0/2.1
is not allowed by OpenCL 2.2
is not allowed by Vulkan 1.0 specification
is not allowed by Vulkan 1.1 specification
is not allowed by Vulkan 1.2 specification
is not allowed by WebGPU specification
is not an OpLabel
is not an OpString
is not an array
is not an int scalar
is not an int vector
is not an object
is not defined
is not initialized
is not pointer type
is not post dominated by
is not preserving
is not the Entry Point operand of an OpEntryPoint
is not unique, which is not allow in WebGPU env
is not valid for the WebGPU execution environment
is not valid in
is out of bounds for
is out of bounds. The structure has
is referencing
is reserved for future use
is targeted by
is targeted by block
is the last user of following pass instances
is used by entry point
is used outside of it's defining function
is_double
isampler1D
isampler1DArray
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler2DRect
isampler3D
isamplerBuffer
isamplerCube
isamplerCubeArray
isascii
isdigit
isdigittmp
isfinite
isoc99_scanf
isoc99_sscanf
isoline
isolines
isubpassInput
isubpassInputMS
italian-swiss
iteratioH9
iteration_multiple
iteration_statement
iteration_statement_nonattributed
itexture1D
itexture1DArray
itexture2D
itexture2DArray
itexture2DMS
itexture2DMSArray
itexture2DRect
itexture3D
itextureBuffer
itextureCube
itextureCubeArray
itivuRf
its block
itsplit
itspliti
iv-users
iv.approx.ftz.f
iv.next
ivec2(uvec2
ivec2[4
ivec3(uvec3
ivec4(uvec4
j`H9j0t
jlj.lsda
jlj.setjmp
jump_statement
just.trampoline
k VWATAVAWH
k VWAUAVAWH
k8-sse3
keep-uncalled
kernel enqeue flags
kernel profiling info
kernel32
kernel32.dll
kfreebsd
kfreebsdH
kind of sampler
l$ ATAVAWH
l$ UAVAWH
l$ VATAUAVAWH
l$ VATAVH
l$ VAVAWH
l$ VWATAUAV
l$ VWATAUAWH
l$ VWATAVAWH
l$ VWATH
l$ VWAUAVAWH
l$ VWAUH
l$ VWAVH
l$ VWAWH
l$ WATAUAVAWH
l$ WATAVH
l$ WAVAWH
l$4L+"A
l$8D8j-t
l$PE8o t
l$PHcC H
l$ptn8Y-t
l-value of swizzle cannot have duplicate components
l-value required
l.dq.bs
la.abs
la.addCarry
la.all
la.any
la.arraylength
la.atomicAdd
la.atomicAnd
la.atomicCompExchange
la.atomicCounter
la.atomicCounterLoad
la.atomicExchange
la.atomicOr
la.atomicXor
la.bitCount
la.bitFieldInsert
la.bitReverse
la.discardConditional
la.emitStreamVertex
la.emitVertex
la.endPrimitive
la.fAbs
la.fAcos
la.fAcosh
la.fAsin
la.fAsinh
la.fAtan
la.fAtan2
la.fAtanh
la.fCeiling
la.fClamp
la.fCos
la.fCosh
la.fCross
la.fDFdx
la.fDFdy
la.fDegrees
la.fDistance
la.fDot2
la.fDot3
la.fDot4
la.fExp
la.fExp10
la.fExp2
la.fFaceForward
la.fFilterWidth
la.fFixedTransform
la.fFloatBitsToInt
la.fFloor
la.fFma
la.fFraction
la.fFrexp
la.fImageAtomicExchange
la.fImageLoad
la.fIntBitsTofloat
la.fInverseSqrt
la.fIsInf
la.fIsNan
la.fLdexp
la.fLength
la.fLit
la.fLoadComponent
la.fLog
la.fLog10
la.fLog2
la.fMatrix2TimesMatrix2
la.fMatrix2TimesMatrix3
la.fMatrix2TimesMatrix4
la.fMatrix2TimesVector
la.fMatrix3TimesMatrix2
la.fMatrix3TimesMatrix3
la.fMatrix3TimesMatrix4
la.fMatrix3TimesVector
la.fMatrix4TimesMatrix2
la.fMatrix4TimesMatrix3
la.fMatrix4TimesMatrix4
la.fMatrix4TimesVector
la.fMax
la.fMin
la.fMix
la.fModF
la.fMultiInsert
la.fNormalize
la.fNormalize3D
la.fPackDouble2x32
la.fPackHalf2x16
la.fPackSnorm2x16
la.fPackSnorm4x8
la.fPackUnorm2x16
la.fPackUnorm4x8
la.fPow
la.fPowi
la.fQueryTextureLod
la.fRTextureSample1
la.fRTextureSample2
la.fRTextureSample3
la.fRTextureSample4
la.fRTextureSampleLodRefZ1
la.fRTextureSampleLodRefZ2
la.fRTextureSampleLodRefZ3
la.fRTextureSampleLodRefZ4
la.fRTextureSampleLodRefZOffset1
la.fRTextureSampleLodRefZOffset2
la.fRTextureSampleLodRefZOffset3
la.fRTextureSampleLodRefZOffset4
la.fRTextureSampleLodRefZOffsetGrad1
la.fRTextureSampleLodRefZOffsetGrad2
la.fRTextureSampleLodRefZOffsetGrad3
la.fRTextureSampleLodRefZOffsetGrad4
la.fRadians
la.fReadComponent
la.fReadData
la.fReadInterpolant
la.fReadInterpolantComponent
la.fReadInterpolantOffset
la.fReadInterpolantOffsetComponent
la.fReadInterpolantSample
la.fReadInterpolantSampleComponent
la.fReflect
la.fRefract
la.fRoundEven
la.fRoundFast
la.fRoundZero
la.fSamplePosition
la.fSaturate
la.fSign
la.fSin
la.fSinh
la.fSmoothStep
la.fSqrt
la.fStep
la.fSwizzle
la.fTan
la.fTanh
la.fTexelFetchOffset
la.fTexelGather
la.fTexelGatherOffset
la.fTexelGatherOffsets
la.fTextureSample
la.fTextureSampleLodRefZ
la.fTextureSampleLodRefZOffset
la.fTextureSampleLodRefZOffsetGrad
la.fUnpackDouble2x32
la.fUnpackHalf2x16
la.fUnpackSnorm2x16
la.fUnpackSnorm4x8
la.fUnpackUnorm2x16
la.fUnpackUnorm4x8
la.fVectorTimesMatrix2
la.fVectorTimesMatrix3
la.fVectorTimesMatrix4
la.fWriteComponent
la.fWriteData
la.fWriteInterpolant
la.fWriteInterpolantComponent
la.fbMix
la.findLSB
la.getInterpolant
la.iImageAtomicExchange
la.imageAtomicAdd
la.imageAtomicAnd
la.imageAtomicCompExchange
la.imageAtomicOr
la.imageAtomicXor
la.imageLoad
la.imageStoreF
la.imageStoreI
la.interpolateAtCentroid
la.interpolateAtOffset
la.interpolateAtSample
la.loadComponent
la.memoryBarrier
la.memoryBarrierAtomicCounter
la.multiInsert
la.not
la.queryImageSamples
la.queryImageSize
la.queryTextureSize
la.queryTextureSizeNoLod
la.rTextureSample1
la.rTextureSample2
la.rTextureSample3
la.rTextureSample4
la.rTextureSampleLodRefZ1
la.rTextureSampleLodRefZ2
la.rTextureSampleLodRefZ3
la.rTextureSampleLodRefZ4
la.rTextureSampleLodRefZOffset1
la.rTextureSampleLodRefZOffset2
la.rTextureSampleLodRefZOffset3
la.rTextureSampleLodRefZOffset4
la.rTextureSampleLodRefZOffsetGrad1
la.rTextureSampleLodRefZOffsetGrad2
la.rTextureSampleLodRefZOffsetGrad3
la.rTextureSampleLodRefZOffsetGrad4
la.readComponent
la.readData
la.readInterpolantComponent
la.sAtomicMax
la.sAtomicMin
la.sBitFieldExtract
la.sClamp
la.sFindMSB
la.sFma
la.sImageAtomicMax
la.sImageAtomicMin
la.sMax
la.sMin
la.sign
la.smulExtended
la.subBorrow
la.swizzle
la.texelFetchOffset
la.texelGather
la.texelGatherOffset
la.texelGatherOffsets
la.textureSample
la.textureSampleLodRefZ
la.textureSampleLodRefZOffset
la.textureSampleLodRefZOffsetGrad
la.uAtomicMax
la.uAtomicMin
la.uBitFieldExtract
la.uClamp
la.uFindMSB
la.uFma
la.uImageAtomicMax
la.uImageAtomicMin
la.uMax
la.uMin
la.umulExtended
la.writeComponent
la.writeData
landingpad
lang 0x
last case/default label not followed by statements
layout
layout qualifier
layout rules: member
layout( %s ) in
layout( %s, %s ) in
layout( %s, %s, %s ) in
layout( %s, max_vertices = %d ) out
layout( binding = %d
layout( location = %d ) %s
layout( std140, row_major ) uniform %s
layout( std140, row_major, binding=%d ) uniform %s
layout( vertices = %d ) out
layout(binding=X) is required
layout(invocations
layout(local_size_x
layout(max_vertices
layout(origin_upper_left) in
layout(pixel_center_integer) in
layout(point_mode) in
layout(std140, row_major) uniform _Globals
layout(vertices
layout, semantic, packoffset, or register
layout-id value
layoutSecondaryViewportRelativeOffset
layoutViewportRelative
layout\s*\(.*\)\s+uniform\s+(highp|mediump|lowp)?\s+sampler[A-za-z0-9]+\s+[A-Za-z0-9
layout_qualifier
layout_qualifier_id
layout_qualifier_id_list
lazy-value-info
lbmatch
lcolumn
ldu.dq
left angle bracket
left of '[' is not of type array, matrix, or vector
left shift second child into first child
left-shift
leftColumn
leftComp
lendv.p
length
length() on vectors and matrices
lessThan
lessThanEqual
lessThanH
lexer error %d
lexer->mTokens(): Error: No lexer rules were added to the lexer yet
lftr.limit
lftr.wideiv
lgamma_r
lhi.ull
lignr.b
limitation
limitations
line 1
line continuation
line_strip
lineadj
linear
lines_adjacency
linkage type
linker_private
linker_private_weak
linkonce
linkonce_odr
list too long
literal integer
literal number
literal string
lld (%s
llu (%s
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.frintn
llvm.aarch64.neon.fsqrt
llvm.aarch64.neon.rbit
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.sha1c
llvm.aarch64.neon.sha1m
llvm.aarch64.neon.sha1p
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.sminv
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.uminv
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vabd
llvm.aarch64.neon.vabs
llvm.aarch64.neon.vacgeq
llvm.aarch64.neon.vacgtq
llvm.aarch64.neon.vaddds
llvm.aarch64.neon.vadddu
llvm.aarch64.neon.vaddv
llvm.aarch64.neon.vcage
llvm.aarch64.neon.vcagt
llvm.aarch64.neon.vceq
llvm.aarch64.neon.vcge
llvm.aarch64.neon.vcgt
llvm.aarch64.neon.vchi
llvm.aarch64.neon.vchs
llvm.aarch64.neon.vclez
llvm.aarch64.neon.vcltz
llvm.aarch64.neon.vcvtd.n.s64.f64
llvm.aarch64.neon.vcvtd.n.u64.f64
llvm.aarch64.neon.vcvtf32.n.s32
llvm.aarch64.neon.vcvtf32.n.u32
llvm.aarch64.neon.vcvtf32.s32
llvm.aarch64.neon.vcvtf32.u32
llvm.aarch64.neon.vcvtf64.n.s64
llvm.aarch64.neon.vcvtf64.n.u64
llvm.aarch64.neon.vcvtf64.s64
llvm.aarch64.neon.vcvtf64.u64
llvm.aarch64.neon.vcvts.n.s32.f32
llvm.aarch64.neon.vcvts.n.u32.f32
llvm.aarch64.neon.vld1x2
llvm.aarch64.neon.vld1x3
llvm.aarch64.neon.vld1x4
llvm.aarch64.neon.vmaxnm
llvm.aarch64.neon.vmaxnmv
llvm.aarch64.neon.vmaxv
llvm.aarch64.neon.vminnm
llvm.aarch64.neon.vminnmv
llvm.aarch64.neon.vminv
llvm.aarch64.neon.vmulx
llvm.aarch64.neon.vneg
llvm.aarch64.neon.vpadd
llvm.aarch64.neon.vpfadd
llvm.aarch64.neon.vpfaddq
llvm.aarch64.neon.vpfmaxnm
llvm.aarch64.neon.vpfmaxnmq
llvm.aarch64.neon.vpfminnm
llvm.aarch64.neon.vpfminnmq
llvm.aarch64.neon.vpmax
llvm.aarch64.neon.vpmaxnm
llvm.aarch64.neon.vpmaxq
llvm.aarch64.neon.vpmin
llvm.aarch64.neon.vpminnm
llvm.aarch64.neon.vpminq
llvm.aarch64.neon.vqdmlal
llvm.aarch64.neon.vqdmlsl
llvm.aarch64.neon.vqrshls
llvm.aarch64.neon.vqrshlu
llvm.aarch64.neon.vqshls
llvm.aarch64.neon.vqshls.n
llvm.aarch64.neon.vqshlu
llvm.aarch64.neon.vqshlu.n
llvm.aarch64.neon.vqshlus.n
llvm.aarch64.neon.vrecpx
llvm.aarch64.neon.vrshlds
llvm.aarch64.neon.vrshldu
llvm.aarch64.neon.vrshrn
llvm.aarch64.neon.vrsrads.n
llvm.aarch64.neon.vrsradu.n
llvm.aarch64.neon.vshld.n
llvm.aarch64.neon.vshlds
llvm.aarch64.neon.vshldu
llvm.aarch64.neon.vshrds.n
llvm.aarch64.neon.vshrdu.n
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsqadd
llvm.aarch64.neon.vsqrshrn
llvm.aarch64.neon.vsqrshrun
llvm.aarch64.neon.vsqshlu
llvm.aarch64.neon.vsqshrn
llvm.aarch64.neon.vsqshrun
llvm.aarch64.neon.vsrads.n
llvm.aarch64.neon.vsradu.n
llvm.aarch64.neon.vsri
llvm.aarch64.neon.vsrshr
llvm.aarch64.neon.vst1x2
llvm.aarch64.neon.vst1x3
llvm.aarch64.neon.vst1x4
llvm.aarch64.neon.vsubds
llvm.aarch64.neon.vsubdu
llvm.aarch64.neon.vtbl1
llvm.aarch64.neon.vtbl2
llvm.aarch64.neon.vtbl3
llvm.aarch64.neon.vtbl4
llvm.aarch64.neon.vtbx1
llvm.aarch64.neon.vtbx2
llvm.aarch64.neon.vtbx3
llvm.aarch64.neon.vtbx4
llvm.aarch64.neon.vtstd
llvm.aarch64.neon.vuqadd
llvm.aarch64.neon.vuqrshrn
llvm.aarch64.neon.vuqshrn
llvm.aarch64.neon.vurshr
llvm.aarch64.neon.xtn
llvm.adjust.trampoline
llvm.annotation
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacged
llvm.arm.neon.vacgeq
llvm.arm.neon.vacgtd
llvm.arm.neon.vacgtq
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vclz
llvm.arm.neon.vcnt
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld2
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshiftls
llvm.arm.neon.vshiftlu
llvm.arm.neon.vshiftn
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qsub
llvm.arm.set.fpscr
llvm.arm.sevl
llvm.arm.ssat
llvm.arm.strex
llvm.arm.strexd
llvm.arm.thread.pointer
llvm.arm.usat
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bswap
llvm.ceil
llvm.compiler.used
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.convertff
llvm.convertfsi
llvm.convertfui
llvm.convertsif
llvm.convertss
llvm.convertsu
llvm.convertuif
llvm.convertus
llvm.convertuu
llvm.copysign
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.cuda.syncthreads
llvm.dbg.declare
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.gla.abs
llvm.gla.addCarry
llvm.gla.all
llvm.gla.any
llvm.gla.arraylength
llvm.gla.atomicAdd
llvm.gla.atomicAnd
llvm.gla.atomicCompExchange
llvm.gla.atomicCounterDecrement
llvm.gla.atomicCounterIncrement
llvm.gla.atomicCounterLoad
llvm.gla.atomicExchange
llvm.gla.atomicOr
llvm.gla.atomicXor
llvm.gla.barrier
llvm.gla.bitCount
llvm.gla.bitFieldInsert
llvm.gla.bitReverse
llvm.gla.discard
llvm.gla.discardConditional
llvm.gla.emitStreamVertex
llvm.gla.emitVertex
llvm.gla.endPrimitive
llvm.gla.endStreamPrimitive
llvm.gla.fAbs
llvm.gla.fAcos
llvm.gla.fAcosh
llvm.gla.fAsin
llvm.gla.fAsinh
llvm.gla.fAtan
llvm.gla.fAtan2
llvm.gla.fAtanh
llvm.gla.fCeiling
llvm.gla.fClamp
llvm.gla.fCos
llvm.gla.fCosh
llvm.gla.fCross
llvm.gla.fDFdx
llvm.gla.fDFdy
llvm.gla.fDegrees
llvm.gla.fDistance
llvm.gla.fDot2
llvm.gla.fDot3
llvm.gla.fDot4
llvm.gla.fExp
llvm.gla.fExp10
llvm.gla.fExp2
llvm.gla.fFaceForward
llvm.gla.fFilterWidth
llvm.gla.fFixedTransform
llvm.gla.fFloatBitsToInt
llvm.gla.fFloor
llvm.gla.fFma
llvm.gla.fFraction
llvm.gla.fFrexp
llvm.gla.fImageAtomicExchange
llvm.gla.fImageLoad
llvm.gla.fIntBitsTofloat
llvm.gla.fInverseSqrt
llvm.gla.fIsInf
llvm.gla.fIsNan
llvm.gla.fLdexp
llvm.gla.fLength
llvm.gla.fLit
llvm.gla.fLoadComponent
llvm.gla.fLog
llvm.gla.fLog10
llvm.gla.fLog2
llvm.gla.fMatrix2TimesMatrix2
llvm.gla.fMatrix2TimesMatrix3
llvm.gla.fMatrix2TimesMatrix4
llvm.gla.fMatrix2TimesVector
llvm.gla.fMatrix3TimesMatrix2
llvm.gla.fMatrix3TimesMatrix3
llvm.gla.fMatrix3TimesMatrix4
llvm.gla.fMatrix3TimesVector
llvm.gla.fMatrix4TimesMatrix2
llvm.gla.fMatrix4TimesMatrix3
llvm.gla.fMatrix4TimesMatrix4
llvm.gla.fMatrix4TimesVector
llvm.gla.fMax
llvm.gla.fMin
llvm.gla.fMix
llvm.gla.fModF
llvm.gla.fMultiInsert
llvm.gla.fNormalize
llvm.gla.fNormalize3D
llvm.gla.fPackDouble2x32
llvm.gla.fPackHalf2x16
llvm.gla.fPackSnorm2x16
llvm.gla.fPackSnorm4x8
llvm.gla.fPackUnorm2x16
llvm.gla.fPackUnorm4x8
llvm.gla.fPow
llvm.gla.fPowi
llvm.gla.fQueryTextureLod
llvm.gla.fRTextureSample1
llvm.gla.fRTextureSample2
llvm.gla.fRTextureSample3
llvm.gla.fRTextureSample4
llvm.gla.fRTextureSampleLodRefZ1
llvm.gla.fRTextureSampleLodRefZ2
llvm.gla.fRTextureSampleLodRefZ3
llvm.gla.fRTextureSampleLodRefZ4
llvm.gla.fRTextureSampleLodRefZOffset1
llvm.gla.fRTextureSampleLodRefZOffset2
llvm.gla.fRTextureSampleLodRefZOffset3
llvm.gla.fRTextureSampleLodRefZOffset4
llvm.gla.fRTextureSampleLodRefZOffsetGrad1
llvm.gla.fRTextureSampleLodRefZOffsetGrad2
llvm.gla.fRTextureSampleLodRefZOffsetGrad3
llvm.gla.fRTextureSampleLodRefZOffsetGrad4
llvm.gla.fRadians
llvm.gla.fReadComponent
llvm.gla.fReadData
llvm.gla.fReadInterpolant
llvm.gla.fReadInterpolantComponent
llvm.gla.fReadInterpolantOffset
llvm.gla.fReadInterpolantOffsetComponent
llvm.gla.fReadInterpolantSample
llvm.gla.fReadInterpolantSampleComponent
llvm.gla.fReflect
llvm.gla.fRefract
llvm.gla.fRoundEven
llvm.gla.fRoundFast
llvm.gla.fRoundZero
llvm.gla.fSamplePosition
llvm.gla.fSaturate
llvm.gla.fSign
llvm.gla.fSin
llvm.gla.fSinh
llvm.gla.fSmoothStep
llvm.gla.fSqrt
llvm.gla.fStep
llvm.gla.fSwizzle
llvm.gla.fTan
llvm.gla.fTanh
llvm.gla.fTexelFetchOffset
llvm.gla.fTexelGather
llvm.gla.fTexelGatherOffset
llvm.gla.fTexelGatherOffsets
llvm.gla.fTextureSample
llvm.gla.fTextureSampleLodRefZ
llvm.gla.fTextureSampleLodRefZOffset
llvm.gla.fTextureSampleLodRefZOffsetGrad
llvm.gla.fUnpackDouble2x32
llvm.gla.fUnpackHalf2x16
llvm.gla.fUnpackSnorm2x16
llvm.gla.fUnpackSnorm4x8
llvm.gla.fUnpackUnorm2x16
llvm.gla.fUnpackUnorm4x8
llvm.gla.fVectorTimesMatrix2
llvm.gla.fVectorTimesMatrix3
llvm.gla.fVectorTimesMatrix4
llvm.gla.fWriteComponent
llvm.gla.fWriteData
llvm.gla.fWriteInterpolant
llvm.gla.fWriteInterpolantComponent
llvm.gla.fbMix
llvm.gla.findLSB
llvm.gla.getInterpolant
llvm.gla.groupMemoryBarrier
llvm.gla.iImageAtomicExchange
llvm.gla.imageAtomicAdd
llvm.gla.imageAtomicAnd
llvm.gla.imageAtomicCompExchange
llvm.gla.imageAtomicOr
llvm.gla.imageAtomicXor
llvm.gla.imageLoad
llvm.gla.imageStoreF
llvm.gla.imageStoreI
llvm.gla.interpolateAtCentroid
llvm.gla.interpolateAtOffset
llvm.gla.interpolateAtSample
llvm.gla.loadComponent
llvm.gla.memoryBarrier
llvm.gla.memoryBarrierAtomicCounter
llvm.gla.memoryBarrierBuffer
llvm.gla.memoryBarrierImage
llvm.gla.memoryBarrierShared
llvm.gla.multiInsert
llvm.gla.not
llvm.gla.queryImageSamples
llvm.gla.queryImageSize
llvm.gla.queryTextureSize
llvm.gla.queryTextureSizeNoLod
llvm.gla.rTextureSample1
llvm.gla.rTextureSample2
llvm.gla.rTextureSample3
llvm.gla.rTextureSample4
llvm.gla.rTextureSampleLodRefZ1
llvm.gla.rTextureSampleLodRefZ2
llvm.gla.rTextureSampleLodRefZ3
llvm.gla.rTextureSampleLodRefZ4
llvm.gla.rTextureSampleLodRefZOffset1
llvm.gla.rTextureSampleLodRefZOffset2
llvm.gla.rTextureSampleLodRefZOffset3
llvm.gla.rTextureSampleLodRefZOffset4
llvm.gla.rTextureSampleLodRefZOffsetGrad1
llvm.gla.rTextureSampleLodRefZOffsetGrad2
llvm.gla.rTextureSampleLodRefZOffsetGrad3
llvm.gla.rTextureSampleLodRefZOffsetGrad4
llvm.gla.readComponent
llvm.gla.readData
llvm.gla.readInterpolantComponent
llvm.gla.sAtomicMax
llvm.gla.sAtomicMin
llvm.gla.sBitFieldExtract
llvm.gla.sClamp
llvm.gla.sFindMSB
llvm.gla.sFma
llvm.gla.sImageAtomicMax
llvm.gla.sImageAtomicMin
llvm.gla.sMax
llvm.gla.sMin
llvm.gla.sign
llvm.gla.smulExtended
llvm.gla.subBorrow
llvm.gla.swizzle
llvm.gla.texelFetchOffset
llvm.gla.texelGather
llvm.gla.texelGatherOffset
llvm.gla.texelGatherOffsets
llvm.gla.textureSample
llvm.gla.textureSampleLodRefZ
llvm.gla.textureSampleLodRefZOffset
llvm.gla.textureSampleLodRefZOffsetGrad
llvm.gla.uAtomicMax
llvm.gla.uAtomicMin
llvm.gla.uBitFieldExtract
llvm.gla.uClamp
llvm.gla.uFindMSB
llvm.gla.uFma
llvm.gla.uImageAtomicMax
llvm.gla.uImageAtomicMin
llvm.gla.uMax
llvm.gla.uMin
llvm.gla.umulExtended
llvm.gla.writeComponent
llvm.gla.writeData
llvm.global_ctors
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dffixupd
llvm.hexagon.F2.dffixupn
llvm.hexagon.F2.dffixupr
llvm.hexagon.F2.dffma
llvm.hexagon.F2.dffma.lib
llvm.hexagon.F2.dffma.sc
llvm.hexagon.F2.dffms
llvm.hexagon.F2.dffms.lib
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpy
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.SI.to.SXTHI.asrh
llvm.hexagon.circ.ldd
llvm.init.trampoline
llvm.invariant.end
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.memcpy
llvm.memmove
llvm.memset
llvm.metadata
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nearbyint
llvm.nvvm.abs.i
llvm.nvvm.abs.ll
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.brev32
llvm.nvvm.brev64
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.clz.i
llvm.nvvm.clz.ll
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.h2f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.max.i
llvm.nvvm.max.ll
llvm.nvvm.max.ui
llvm.nvvm.max.ull
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.min.i
llvm.nvvm.min.ll
llvm.nvvm.min.ui
llvm.nvvm.min.ull
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.popc.i
llvm.nvvm.popc.ll
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.mtctr
llvm.ppc.sync
llvm.prefetch
llvm.ptr.annotation
llvm.ptx.bar.sync
llvm.ptx.read.clock
llvm.ptx.read.clock64
llvm.ptx.read.ctaid.w
llvm.ptx.read.ctaid.x
llvm.ptx.read.ctaid.y
llvm.ptx.read.ctaid.z
llvm.ptx.read.gridid
llvm.ptx.read.laneid
llvm.ptx.read.lanemask.eq
llvm.ptx.read.lanemask.ge
llvm.ptx.read.lanemask.gt
llvm.ptx.read.lanemask.le
llvm.ptx.read.lanemask.lt
llvm.ptx.read.nctaid.w
llvm.ptx.read.nctaid.x
llvm.ptx.read.nctaid.y
llvm.ptx.read.nctaid.z
llvm.ptx.read.nsmid
llvm.ptx.read.ntid.w
llvm.ptx.read.ntid.x
llvm.ptx.read.ntid.y
llvm.ptx.read.ntid.z
llvm.ptx.read.nwarpid
llvm.ptx.read.pm0
llvm.ptx.read.pm1
llvm.ptx.read.pm2
llvm.ptx.read.pm3
llvm.ptx.read.smid
llvm.ptx.read.tid.w
llvm.ptx.read.tid.x
llvm.ptx.read.tid.y
llvm.ptx.read.tid.z
llvm.ptx.read.warpid
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssub.with.overflow
llvm.stackprotector
llvm.stackprotectorcheck
llvm.stackrestore
llvm.stacksave
llvm.trap
llvm.trunc
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.used
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blend.pd.256
llvm.x86.avx.blend.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2.pd.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.pd.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.storeu.dq.256
llvm.x86.avx.storeu.pd.256
llvm.x86.avx.storeu.ps.256
llvm.x86.avx.vbroadcast.sd.256
llvm.x86.avx.vbroadcast.ss
llvm.x86.avx.vbroadcast.ss.256
llvm.x86.avx.vbroadcastf128.pd.256
llvm.x86.avx.vbroadcastf128.ps.256
llvm.x86.avx.vextractf128.pd.256
llvm.x86.avx.vextractf128.ps.256
llvm.x86.avx.vextractf128.si.256
llvm.x86.avx.vinsertf128.pd.256
llvm.x86.avx.vinsertf128.ps.256
llvm.x86.avx.vinsertf128.si.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.movntdqa
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendd.128
llvm.x86.avx2.pblendd.256
llvm.x86.avx2.pblendvb
llvm.x86.avx2.pblendw
llvm.x86.avx2.pbroadcastb.128
llvm.x86.avx2.pbroadcastb.256
llvm.x86.avx2.pbroadcastd.128
llvm.x86.avx2.pbroadcastd.256
llvm.x86.avx2.pbroadcastq.128
llvm.x86.avx2.pbroadcastq.256
llvm.x86.avx2.pbroadcastw.128
llvm.x86.avx2.pbroadcastw.256
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmaxs.b
llvm.x86.avx2.pmaxs.d
llvm.x86.avx2.pmaxs.w
llvm.x86.avx2.pmaxu.b
llvm.x86.avx2.pmaxu.d
llvm.x86.avx2.pmaxu.w
llvm.x86.avx2.pmins.b
llvm.x86.avx2.pmins.d
llvm.x86.avx2.pmins.w
llvm.x86.avx2.pminu.b
llvm.x86.avx2.pminu.d
llvm.x86.avx2.pminu.w
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmovsxbd
llvm.x86.avx2.pmovsxbq
llvm.x86.avx2.pmovsxbw
llvm.x86.avx2.pmovsxdq
llvm.x86.avx2.pmovsxwd
llvm.x86.avx2.pmovsxwq
llvm.x86.avx2.pmovzxbd
llvm.x86.avx2.pmovzxbq
llvm.x86.avx2.pmovzxbw
llvm.x86.avx2.pmovzxdq
llvm.x86.avx2.pmovzxwd
llvm.x86.avx2.pmovzxwq
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.dq
llvm.x86.avx2.psll.dq.bs
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.dq
llvm.x86.avx2.psrl.dq.bs
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vbroadcast.sd.pd.256
llvm.x86.avx2.vbroadcast.ss.ps
llvm.x86.avx2.vbroadcast.ss.ps.256
llvm.x86.avx2.vbroadcasti128
llvm.x86.avx2.vextracti128
llvm.x86.avx2.vinserti128
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.and.pi
llvm.x86.avx512.cmpeq.pi.512
llvm.x86.avx512.conflict.d.512
llvm.x86.avx512.conflict.d.mask.512
llvm.x86.avx512.conflict.d.maskz.512
llvm.x86.avx512.conflict.q.512
llvm.x86.avx512.conflict.q.mask.512
llvm.x86.avx512.conflict.q.maskz.512
llvm.x86.avx512.cvt.ps2dq.512
llvm.x86.avx512.cvtdq2.ps.512
llvm.x86.avx512.cvtsd2usi
llvm.x86.avx512.cvtsd2usi64
llvm.x86.avx512.cvtss2usi
llvm.x86.avx512.cvtss2usi64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpd.mask.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpi.mask.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dpq.mask.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.dps.mask.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpd.mask.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpi.mask.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qpq.mask.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather.qps.mask.512
llvm.x86.avx512.kortestc
llvm.x86.avx512.kortestz
llvm.x86.avx512.max.pd.512
llvm.x86.avx512.max.ps.512
llvm.x86.avx512.min.pd.512
llvm.x86.avx512.min.ps.512
llvm.x86.avx512.mskblend.d.512
llvm.x86.avx512.mskblend.pd.512
llvm.x86.avx512.mskblend.ps.512
llvm.x86.avx512.mskblend.q.512
llvm.x86.avx512.pbroadcastd.512
llvm.x86.avx512.pbroadcastd.i32.512
llvm.x86.avx512.pbroadcastq.512
llvm.x86.avx512.pbroadcastq.i64.512
llvm.x86.avx512.pmaxs.d
llvm.x86.avx512.pmaxs.q
llvm.x86.avx512.pmaxu.d
llvm.x86.avx512.pmaxu.q
llvm.x86.avx512.pmins.d
llvm.x86.avx512.pmins.q
llvm.x86.avx512.pminu.d
llvm.x86.avx512.pminu.q
llvm.x86.avx512.pmovzxbd
llvm.x86.avx512.pmovzxbq
llvm.x86.avx512.pmovzxdq
llvm.x86.avx512.pmovzxwd
llvm.x86.avx512.pmovzxwq
llvm.x86.avx512.psll.dq
llvm.x86.avx512.psll.dq.bs
llvm.x86.avx512.psrl.dq
llvm.x86.avx512.psrl.dq.bs
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd.512
llvm.x86.avx512.rcp28.ps.512
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rndscale.pd.512
llvm.x86.avx512.rndscale.ps.512
llvm.x86.avx512.rndscale.sd
llvm.x86.avx512.rndscale.ss
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd.512
llvm.x86.avx512.rsqrt28.ps.512
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpd.mask.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpi.mask.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dpq.mask.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.dps.mask.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpd.mask.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpi.mask.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qpq.mask.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatter.qps.mask.512
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sqrt.sd
llvm.x86.avx512.sqrt.ss
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.sd.pd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vbroadcast.ss.ps.512
llvm.x86.avx512.vcvtph2ps.512
llvm.x86.avx512.vcvtps2ph.512
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.pd.512
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.ps.512
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.pd.512
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmaddsub.ps.512
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.pd.512
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.ps.512
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.pd.512
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfmsubadd.ps.512
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.pd.512
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.ps.512
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.pd.512
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.ps.512
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.int
llvm.x86.int2mask.v16i1
llvm.x86.kadd.v16i1
llvm.x86.kand.v16i1
llvm.x86.kandn.v16i1
llvm.x86.knot.v16i1
llvm.x86.kor.v16i1
llvm.x86.kunpck.v16i1
llvm.x86.kxnor.v16i1
llvm.x86.kxor.v16i1
llvm.x86.mask2int.v16i1
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.sse.add.ss
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.div.ss
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.mul.ss
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.storeu.ps
llvm.x86.sse.sub.ss
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.add.sd
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2pd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtps2pd
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.div.sd
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.mul.sd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmaxs.w
llvm.x86.sse2.pmaxu.b
llvm.x86.sse2.pmins.w
llvm.x86.sse2.pminu.b
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.dq
llvm.x86.sse2.psll.dq.bs
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.dq
llvm.x86.sse2.psrl.dq.bs
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.storel.dq
llvm.x86.sse2.storeu.dq
llvm.x86.sse2.storeu.pd
llvm.x86.sse2.sub.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendpd
llvm.x86.sse41.blendps
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.extractps
llvm.x86.sse41.insertps
llvm.x86.sse41.movntdqa
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.pblendw
llvm.x86.sse41.pextrb
llvm.x86.sse41.pextrd
llvm.x86.sse41.pextrq
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmaxsb
llvm.x86.sse41.pmaxsd
llvm.x86.sse41.pmaxud
llvm.x86.sse41.pmaxuw
llvm.x86.sse41.pminsb
llvm.x86.sse41.pminsd
llvm.x86.sse41.pminud
llvm.x86.sse41.pminuw
llvm.x86.sse41.pmovsxbd
llvm.x86.sse41.pmovsxbq
llvm.x86.sse41.pmovsxbw
llvm.x86.sse41.pmovsxdq
llvm.x86.sse41.pmovsxwd
llvm.x86.sse41.pmovsxwq
llvm.x86.sse41.pmovzxbd
llvm.x86.sse41.pmovzxbq
llvm.x86.sse41.pmovzxbw
llvm.x86.sse41.pmovzxdq
llvm.x86.sse41.pmovzxwd
llvm.x86.sse41.pmovzxwq
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.sse4a.movnt.sd
llvm.x86.sse4a.movnt.ss
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcmov
llvm.x86.xop.vpcmov.256
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
loadret
local function declaration
local static guard
local static thread guard
local vftable
local vftable constructor closure
local]H
local_access_chain_convert_pass
local_multi_store_elim_pass
local_multi_store_elim_pass2
local_siI
local_single_block_load_store_elim_pass
local_single_store_elim_pass
local_single_store_elim_pass2
local_size
local_size id
local_size ids
local_size_x_id
local_size_y
local_size_y_id
local_size_z
local_size_z_id
location
location is too large
location on block member
location qualifier on in/out block
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
location/component/index
locationH9
lod bias
logical-and
logical-or
logical-xor
logical_and_expression
logical_or_expression
logical_xor_expression
looks like this
loop control
loop header
loop or switch
loop predicate
loop-body
loop-header
loop-merge
loop-reduce
loop-rotate
loop-simplify
loop-test
loop-unroll
loopexit
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4
lowp precision qualifier
lpad-body
lpad.phi
lsr.chain
lstat64
lt.rounds
ma.vfnm
macro expansion
mageSampleFootprintGradClampNV
mainBody
mainIn[%d
mainOut
mainOut = %s( mainIn
mainOut = %s( mainIn, uint( gl_InvocationID
mainOut = %s( patchIn, mainIn, gl_TessCoord
malloc_cont
malloc_ret_null
malloccall
mallocsize
managed vector constructor iterator
managed vector copy constructor iterator
managed vector destructor iterator
map/set too long
mapped binding out of range
mapped set out of range
mask.512
masked
maskstore.p
maskz.512
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y
mat2vec
mat3vec
mat4vec
matrix
matrix column component out of range
matrix component swizzle has too many components
matrix component swizzle missing
matrix constructed from matrix can only have one argument
matrix index out of range '%d
matrix mult second child into first child
matrix of
matrix or packing qualifiers can only be used on a uniform or buffer
matrix row component out of range
matrix scale second child into first child
matrix size
matrix swizzle
matrix type in buffer
matrix-multiply
matrix-scale
matrix-times-vector
matrixCompMult
max backedge-taken count is
max-cg-scc-iterations
max-recurse-depth
maxInvocations
maxInvocationsAMD
maxInvocationsExclusiveScan
maxInvocationsExclusiveScanAMD
maxInvocationsExclusiveScanNonUniform
maxInvocationsExclusiveScanNonUniformAMD
maxInvocationsInclusiveScan
maxInvocationsInclusiveScanAMD
maxInvocationsInclusiveScanNonUniform
maxInvocationsInclusiveScanNonUniformAMD
maxInvocationsNonUniform
maxInvocationsNonUniformAMD
max_iterH9
max_iterations
max_primH9
max_primitives
max_vertH9
max_vertices
maxanisotropy
maximum nesting depth exceeded
maxtessfH9
maxverteH9
maxvertexcount
may be removed in future release
may not be decorated with Import Linkage type
may not be targeted by both an OpEntryPoint instruction and an OpFunctionCall instruction
may not exceed
mbar.gl
mbcntAMD
mediump
mediump precision qualifier
mediump vec2 unpackHalf2x16(highp uint
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint
mem2reg
memalign
member
member 1 type
member cannot contradict block
member cannot contradict block (or what block inherited from global
member index
member name
member of block cannot be or contain a cooperative matrix type
member of block cannot be or contain a sampler, image, or atomic_uint type
member of block cannot have a packing layout qualifier
member of nameless block was not redeclared
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
member storage qualifier cannot contradict block storage qualifier
member type
member-function definition
member0
member1
memberColumn
members. Largest valid index is
memccpy
memcpy_chk
memmove
memmove_chk
memory
memory access
memory exhausted
memory model
memory qualifiers cannot be used on this type
memory semantics ID
memoryBarrier
memoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
memrchr
memset_chk
memset_pattern16
merge block
merge-blocks
merge-return
merge_return_pass
mesh shaders
mesh view output array size must be gl_MaxMeshViewCountNV or implicitly sized
message size
metadata
metadataH
method does not accept any arguments
mi.bextr
min10float
min10float1
min10float2
min10float3
min10float4
min12int
min12int1
min12int2
min12int3
min12int4
min16float
min16float1
min16float2
min16float3
min16float4
min16int
min16int1
min16int2
min16int3
min16int4
min16uint
min16uint1
min16uint2
min16uint3
min16uint4
minInvocations
minInvocationsAMD
minInvocationsExclusiveScan
minInvocationsExclusiveScanAMD
minInvocationsExclusiveScanNonUniform
minInvocationsExclusiveScanNonUniformAMD
minInvocationsInclusiveScan
minInvocationsInclusiveScanAMD
minInvocationsInclusiveScanNonUniform
minInvocationsInclusiveScanNonUniformAMD
minInvocationsNonUniform
minInvocationsNonUniformAMD
minPrecision
min_iterH9
min_iterations
mineq.sd
mineq.ss
mingw32
minimum stride needed
minkernel\crts\ucrt\inc\corecrt_internal_strtox.h
minsize
miplodbias
mips64ebH
mips64elH
mipsalleH
mismatched statements
missing
missing #endif
missing after extension name
missing base expression for uniform makePointerExpression
missing elements
missing metadata for makePointerExpression
missing name in aggregate
missing parenthesis
missing perprimitiveNV qualifier to redeclared block member
missing perviewNV qualifier to redeclared block member
missing sampler base type
missing space after macro name
missing user function; linker needs to catch that
mod second child into first child
module asm
monotonic
mov.256
move second child to first child
mpbfp.p
mplteui
mpy2s.s
mpyh.acc
mpyrs.s
mpyrsc.s
mpyw.acc
mscoree.dll
msp430_intrcc
mul() matrix size mismatch
mul.with.overflow
muladd
multiInsert with a non-scalar non-vector source
multiple exits
multiple post-dominance frontier entries for a discarding block
multiple prototypes for same function
multiple times is not allowed
multiplicative_expression
multiply second child into first child
multiply32x16
multisample count
must appear between section 9 (types, constants
must appear in a block
must be 0 for a floating-point type
must be 0 or 1
must be 0, 1 or 2
must be 0, 1, 2, or 3
must be DebugTypeMember, DebugFunction, or DebugTypeInheritance
must be OpTypeCooperativeMatrixNV
must be OpTypeInt with width 32 and signedness 0
must be OpTypePointer. Found Op
must be a boolean constant instruction
must be a compile-time constant
must be a constant integer expression
must be a memory object declaration
must be a multiple of size of first component
must be a multiple of the member's alignment
must be a pointer to an OpTypeStruct
must be a positive integer
must be a power of 2
must be a result id of
must be a result id of a lexical scope
must be a scalar integer type
must be an OpLabel
must be an OpTypeRuntimeArray
must be an the last member of the struct
must be at least 1
must be explicitly laid out with ArrayStride decorations
must be explicitly laid out with MatrixStride decorations
must be explicitly laid out with Offset decorations
must be followed by a header name
must be followed by macro name
must be followed by version number
must be greater than 0
must be greater than or equal to 1
must be in the range [0, 2
must be less than or equal to
must be less than the ID bound
must be of type integer
must be positive
must be present
must be qualified as flat
must by followed by an integral literal
must have a LinkageAttributes decoration with the Import Linkage type
must have an initializer
must not use GLSLPacked decoration
must not use GLSLShared decoration
must occur first in shader
must specify 'location' to use 'component
mutable
n.ftz.f
n2pdnX
n_multipH9H
name already defined
name too long
named_barrier
nameless
nameless block contains a member that already has a name at global scope
names beginning with "GL_" can't be (un)defined
names containing consecutive underscores are reserved
names containing consecutive underscores are reserved, and an error if version < 300
namespace
namespace name
namespace or attribute identifier
nan(ind
nan(snan
native_cos
native_divide
native_exp
native_exp10
native_exp2
native_log
native_log10
native_log2
native_powr
native_recip
native_rsqrt
native_sin
native_sqrt
native_tan
nbitsclri
ncd>TQ
ncrement
nd.andn
ndStreamPrimitive
ndn.v16i1
ndscale.p
ndscale.s
near %s
near '%c
near char(%#02X
nearbyint
nearbyintf
nearbyintl
needs a literal integer
nested function found
network down
network reset
network unreachable
new-zealand
nextafter
nnotation
no buffer space
no child process
no declaration found for redeclaration
no default
no link
no lock available
no longer supported in
no matching overloaded function found
no message
no message available
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion
no protocol option
no qualifiers allowed for function return
no shortcircuit
no space on device
no stream resources
no such device
no such device or address
no such field in structure
no such file or directory
no such process
no text for the token
no-storage-format
noContraction
no_storage_format
noalias
nobuiltin
nocapture
node is still EOpNull
noduplicate
noimplicitfloat
noinline
nointerpolation
non-OpPhi instructions
non-built-in variables within a single structure). Structure id
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers
non-constant initializer
non-constant offset argument
non-literal layout-id value
non-matching or non-convertible constant type for const initializer
non-opaque uniform variables need a layout(location=L
non-opaque uniforms outside a block
non-pointer in setActiveOutput
non-simple constant
non-structure type in ConstantBuffer
non-uniform struct contains a sampler or image
non-uniform struct contains an accelerationStructureNV
non-uniform struct contains an atomic_uint
non-void function must return a value
non_uniform_qualifier
nonlazybind
nonloopexit
nonportable when expanded from macros for preprocessor expression
nonprivate
nonreadaH9
nonuniform
nonuniformEXT
nonwritaH9
noperspective
nor.v16i1
noredzone
noreturn
normalizL9
normalize
norwegian
norwegian-bokmal
norwegian-nynorsk
not a directory
not a socket
not a stream
not allowed in nested scope
not allowed in this version
not allowed on block or structure members
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
not another case construct, corresponding merge, outer loop merge or outer loop continue
not connected
not enough data provided for construction
not enough mdAggregate operands
not enough memory
not implemented
not satisfying alignment to
not supported
not supported for these tokens
not supported for this version or the enabled extensions
not supported in this stage
not supported with this profile
not() on a scalar
not.cond
notEqual
notEqualH
notEqualI
not_intrinsic
nothing
notinit
nounwind
npB9\%Lt
npr,t(v
nsert.rp
nsertps
nsertqi
nt2mask.v16i1
nter_intH9P
nter_intH9Q
null Type
null function: 0x
null operand
num_viewH9
num_views
number as Result Type
number of invocations must match between compilation units
numerator
numeric literal too big
numeric literal too long
numerical scalar type
numthreaH9
nvariant.end
nwind.init
o0H+o(H
o`@8z,t
objc_personality_v0
obuscated
octal and hex sequences not supported
octal literal digit too large
octal literal too big
odwrapu
of Result Type struct
of debug info extension must appear in a function
of function
of right matrix to be equal
of struct ID
of the left operand
offset
offset %d in buffer %d
offset is too large
offset on block member
offset/align
offset/align can only be used on a uniform or buffer
offsetof
offsets argument
offsets_H
ogglebit
ohi.i2d
old ID not mapped
ombineii
ombinew
omni callsig
on BasicBlock
on Call Graph Nodes
on Function
on Loop
on Module
on Region
on module
on" or "off" expected after '(' for 'debug' pragma
on" or "off" expected after '(' for 'optimize' pragma
one of the following storage classes: Output, Private, or
one or more arguments
onflict
only allowed when generating SPIR-V
only allowed when using GLSL for Vulkan
only applies to block members, not blocks
only apply to images
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent/shadercallcoherent qualifier allowed
only one precision qualifier allowed
only outermost dimension of an array of arrays can be a specialization constant
only outermost dimension of an array of arrays can be implicitly sized
only simple assignment to non-simple matrix swizzle is supported
only supported on image with format r32f
only supported on image with format r32i or r32ui
only supported on integer images
only uniform, buffer, in, or out blocks are supported
onvert.from.fp16
onvert.to.fp16
onvertff
onvertfsi
onvertfui
onvertsif
onvertss
onvertsu
onvertuif
onvertus
onvertuu
oor.ftz.f
op.vfrcz.p
op.vpermil2p
opaque
opcodes or together with Image Operand Grad
openbsd
opencl1.2
opencl1.2embedded
opencl2.0
opencl2.0embedded
opencl2.1
opencl2.1embedded
opencl2.2
opencl2.2embedded
opendir
opengl4.0
opengl4.1
opengl4.2
opengl4.3
opengl4.5
operand
operand at word offset
operand index
operand of
operand of the result type
operation at
operation canceled
operation in progress
operation not permitted
operation not supported
operation would block
operator
operator co_await
operator[] on a non-RW texture must be an r-value
opteron
optimize
optimize pragma syntax is incorrect
option
options
optnone
optsize
opysign
or 0 for an integer type with Signedness of 0
or an array of one of these types
or an array of this type
or earlier
or later
or requires extension
or requires extension or capability
or scalar
or scalar type
or second child into first child
or sign extended when Signedness is 1
or storage buffer
or unterminated input element such as: "STRING
or vector
or vector type
or.cond
or.v16i1
or.xacc
ore.bitrev
ore.checkevent
ore.waitevent
origin_uH9
origin_upper_left
ortMaskPH9A
os.approx.f
os.approx.ftz.f
ot.v16i1
ound.ftz.f
oundsat
oundscheck
out float gl_ClipDistance
out float gl_ClipDistance[1
out float4 gl_Position
out for stage outputs
out gl_MeshPerVertexNV {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];float gl_CullDistance[];perviewNV vec4 gl_PositionPerViewNV[];perviewNV float gl_ClipDistancePerViewNV[][];perviewNV float gl_CullDistancePerViewNV[][];} gl_MeshVerticesNV
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize
out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize
out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance
out highp int gl_PrimitiveID;out highp int gl_Layer
out int  gl_ViewportMask[];out vec4 gl_SecondaryPositionNV;out int  gl_SecondaryViewportMaskNV[];out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV
out int gl_FragStencilRefARB
out int gl_PrimitiveID;out int gl_Layer
out int gl_ViewportIndex
out int gl_ViewportIndex;out int gl_Layer
out int gl_ViewportMask[];out int gl_SecondaryViewportMaskNV[];out vec4 gl_SecondaryPositionNV;out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV
out uint gl_PrimitiveCountNV;out uint gl_PrimitiveIndicesNV[];in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex
out uint gl_TaskCountNV;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4
out vec4 gl_ClipVertex
out vec4H9
outer product
outerProduct
output block
output blocks cannot be used in a task shader
output primitive
output primitive geometry redefinition
outputFormat
outputPatch[%d] = %s( mainIn, %d
outputcontrolpoints
outputtoH9
outputtopology
ove.double
overlapping offsets at
overlapping use of location
overlaps previous member ending at offset
overloaded functions must have the same parameter precision qualifiers for argument
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same return type
overrideH9
ovmsk.p
ovmsk.pd
ovmsk.ps
ovmskb.128
ovntdqa
owner dead
p UWAVH
p WATAUAVAWH
p WAVAWH
p(H+p H
p(L+p I
p.ps.256
p.s1.sat
pA^A]A
pA_A^A
pA_A^A]A
pH;|$xt
pHH;uwt@L
pHI9L$@u
pLevelZe
pRedtvH
packDouble2x32
packFloat2x16
packHalf2x16
packInt2x16
packInt2x32
packInt4x16
packSnorm2x16
packSnorm4x8
packUint2x16
packUint2x32
packUint4x16
packUnorm2x16
packUnorm4x8
pack_matrix
packoffset
packoffset( c%d.%c
packu2f
parameter_declaration
parameter_declarator
parameter_type_specifier
parenthesized array constructor not allowed
partial_H9
partial_count
partitioH9
partition
partitioning
pascal
passthroH9
passthrough
patch constant function not found
patch out highp vec4 gl_BoundingBox[2
patchConstantOutput
patchConstantResult
patchIn
patchOut
patchOut = %s( mainIn
patchOut = %s( outputPatch
patchconH9
patchconstantfunc
payload number
pc.altivec
pc.altivec.v
pc.dcbtst
pc.is.decremented.ctr.nonzero
pc.mtctr
pd.256
pd.512
peel_couH9
peel_count
pentium
pentium-m
pentium-mmx
pentium2H
pentium3H
pentium4
pentiumpro
peq.pi.512
perm2i128
permission denied
permitted by WebGPU: got
perprimitiveNV
perprimitiveNV out gl_MeshPerPrimitiveNV {int gl_PrimitiveID;int gl_Layer;int gl_ViewportIndex;int gl_ViewportMask[];perviewNV int gl_LayerPerViewNV[];perviewNV int gl_ViewportMaskPerViewNV[][];} gl_MeshPrimitivesNV
personality
pervertexNV
perviewNV
pfpnacc
phi-node-folding-threshold
phi.trans.insert
phminposuw
pipe_storage
pixel_ceH9
pixel_center_integer
pixel_interlock_ordered
pixel_interlock_unordered
placeholder or erroneous Constant
placement delete closure
placement delete[] closure
point_moH9
point_mode
pointer definition
popcount
popcountp
portuguese-brazilian
position
positive integer
posix_memalign
possibly multi-word literal integer
possibly multi-word literal number
post depth coverage
post-discard
post-inc with loop
post-loop-break
post-loop-continue
post-return
post-switch-break
post_coverage_coverage
post_depth_coverage
post_depth_coverage requires early_fragment_tests
postdomtree
postfix_expression
powerpc6H
powrecip
ppc_fp128
ppcf128
pper_lefH9P
pper_lefH9Q
pprox.f
pr china
pr-china
pragma
pragma once
pragma use_variable_pointers
pre-phi
precise
precise qualifier must appear first
precise_qualifier
precision
precision highp float
precision mediump float
precision mediump float; // this will be almost entirely overridden by individual declarations
precision mediump int; precision highp float
precision qualifier must appear as last qualifier
precision statement
precision_qualifier
predefined names can't be (un)defined
prefetch
prefix
prefix H
preheader
premain
preprocessor directive cannot be preceded by another token
preprocessor evaluation
prescott
present
primary_expression
print pass arguments to pass to 'opt
print pass details when it is executed
print pass name before it is executed
print pass structure before run
print-after
print-after-all
print-all-options
print-before
print-before-all
print-options
printing a <null> value
private
private H
private-to-local
private_to_local_pass
process
product
profile
projection with arrayed sampler
projection with cube sampler
promoted
propagate-lines
propagate_line_info_pass
properties
protected
protocol error
protocol not supported
provided in OpGroupMemberDecorate for struct <id
provided in OpMemberDecorate for struct <id
ps.256
ps.512
ps2dq.512
ptrtoint
ptx_device
ptx_kernel
puerto-rico
purecall
push_conH9
push_constant
putchar
pxfer.map
q.qb.ph
q.s.w.ph
q2.ps.512
qS>g?h3
qrt.ps.256
qu.ph.qb
qu.s.qb.ph
quadsnvH9H
qualifier
qualifier has no effect on non-output parameters
queuefamilycoherent
quotient
qx.s.w.ph
qx.sa.w.ph
r*<1u"I
r.andix
r11f_g11f_b10f
r16_snorm
r4L9E(r
r8_snorm
r<<1u$M
r<t\v<xPz6|P~6
rU<?uQI
r_<3u[A
radians
rameaddress
range%d
ray flags
ray query candidate intersection type
ray query committed intersection type
ray query intersection
ray-generation
rayPayloadEXT
rayPayloadInEXT
rayPayloadInNV
rayPayloadInNV block
rayPayloadNV
rayPayloadNV block
rayQueryConfirmIntersectionEXT
rayQueryEXT
rayQueryGenerateIntersectionEXT
rayQueryGetIntersectionBarycentricsEXT
rayQueryGetIntersectionCandidateAABBOpaqueEXT
rayQueryGetIntersectionFrontFaceEXT
rayQueryGetIntersectionGeometryIndexEXT
rayQueryGetIntersectionInstanceCustomIndexEXT
rayQueryGetIntersectionInstanceIdEXT
rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT
rayQueryGetIntersectionObjectRayDirectionEXT
rayQueryGetIntersectionObjectRayOriginEXT
rayQueryGetIntersectionObjectToWorldEXT
rayQueryGetIntersectionPrimitiveIndexEXT
rayQueryGetIntersectionTEXT
rayQueryGetIntersectionTypeEXT
rayQueryGetIntersectionWorldToObjectEXT
rayQueryGetRayFlagsEXT
rayQueryGetRayTMinEXT
rayQueryGetWorldRayDirectionEXT
rayQueryGetWorldRayOriginEXT
rayQueryInitializeEXT
rayQueryProceedEXT
rayQueryProvisionalKHR
rayQueryTerminateEXT
rb<?u^A
rch64.neon
rch64.neon.v
rcolumn
rdata$T
rdata$r
rdata$zzzdbg
reached non-composite type while indexes still remain to be traversed
read only file system
read storage image
readFirstInvocation
readFirstInvocationARB
readInvocation
readInvocationARB
readlink
readnone
readonly
realloc
reallocf
realpath
reassociate
receu.ph.qb
redeclaration
redeclaration of array with a different array dimensions or sizes
redeclaration of array with a different element type
redeclaration of array with size
redeclaration only allowed for override_coverage layout
redeclaration only allowed for viewport_relative or secondary_view_offset layout
redeclaring non-array as array
redefinition
redefinition of built-in function
redundancy-elimination
redundancy_elim_pass
redundant_line_info_elim_pass
reference
reference conversion to uvec2
reflect
refract
reg2mem
reg2mem alloca point
regex_error
regex_error(error_backref): The expression contained an invalid back reference
regex_error(error_badbrace): The expression contained an invalid range in a { expression
regex_error(error_badrepeat): One of *?+{ was not preceded by a valid regular expression
regex_error(error_brace): The expression contained mismatched { and
regex_error(error_brack): The expression contained mismatched [ and
regex_error(error_collate): The expression contained an invalid collating element name
regex_error(error_complexity): The complexity of an attempted match against a regular expression exceeded a pre-set level
regex_error(error_ctype): The expression contained an invalid character class name
regex_error(error_escape): The expression contained an invalid escaped character, or a trailing escape
regex_error(error_paren): The expression contained mismatched ( and
regex_error(error_parse
regex_error(error_range): The expression contained an invalid character range, such as [b-a] in most encodings
regex_error(error_space): There was insufficient memory to convert the expression into a finite state machine
regex_error(error_stack): There was insufficient memory to determine whether the regular expression could match the specified character sequence
regex_error(error_syntax
register
register number description
register( c%d
reinterpret_cast
relational_expression
relativH9H
relax_float_ops
relaxed
relaxed-errors
release
releaseH
reload
remainder
replicated qualifiers
reportIntersectionEXT
reportIntersectionNV
require
required extension not requested
requires
requires Fragment execution model
requires Kernel capability
requires SPIR-V 1.3
requires SPIR-V version
requires Shader capability
requires a previous definition
requires a scalar
requires a type
requires a variable pointers capability
requires a view array dimension
requires an input_attachment_index layout qualifier
requires block, or sampler/image, or atomic-counter type
requires capability InterpolationFunction
requires local_size_x and local_size_y to be multiple of two
requires one of the following extensions
requires one of these capabilities
requires one of these extensions
requires the Vector16 capability
requires total group size to be multiple of four
requires uniform or buffer storage qualifier
reserve_id
resource
resource deadlock would occur
resource unavailable try again
restrict
result ID
result out of range
result type (Op
resultMatrix
return
return type
return value from main
return.split
returned
returns_twice
reversebits
rg16_snorm
rg8_snorm
rgb10_a2
rgb10_a2ui
rgba16_snorm
rgba16f
rgba16i
rgba16ui
rgba32f
rgba32i
rgba32ui
rgba8_snorm
rgba8ui
right angle bracket
right shift second child into first child
right-shift
rightColumn
rightComp
rm.crc32c
rm.ldrex
rm.neon.aesd
rm.neon.aese
rm.neon.aesimc
rm.neon.aesmc
rm.neon.sha1c
rm.neon.sha1h
rm.neon.sha1m
rm.neon.sha1p
rm.neon.sha1su0
rm.neon.sha1su1
rm.neon.sha256h
rm.neon.sha256h2
rm.neon.sha256su0
rm.neon.sha256su1
rm.neon.vabds
rm.neon.vabdu
rm.neon.vabs
rm.neon.vacg
rm.neon.vbsl
rm.neon.vcls
rm.neon.vclz
rm.neon.vcnt
rm.neon.vcvtas
rm.neon.vcvtau
rm.neon.vcvtfp2fxs
rm.neon.vcvtfp2fxu
rm.neon.vcvtfxs2fp
rm.neon.vcvtfxu2fp
rm.neon.vcvtms
rm.neon.vcvtmu
rm.neon.vcvtns
rm.neon.vcvtnu
rm.neon.vcvtps
rm.neon.vcvtpu
rm.neon.vhadds
rm.neon.vhaddu
rm.neon.vhsubs
rm.neon.vhsubu
rm.neon.vld1
rm.neon.vld2
rm.neon.vld2lane
rm.neon.vld3
rm.neon.vld3lane
rm.neon.vld4
rm.neon.vld4lane
rm.neon.vmaxnm
rm.neon.vmaxs
rm.neon.vmaxu
rm.neon.vminnm
rm.neon.vmins
rm.neon.vminu
rm.neon.vmullp
rm.neon.vmulls
rm.neon.vmullu
rm.neon.vmulp
rm.neon.vpadals
rm.neon.vpadalu
rm.neon.vpadd
rm.neon.vpaddls
rm.neon.vpaddlu
rm.neon.vpmaxs
rm.neon.vpmaxu
rm.neon.vpmins
rm.neon.vpminu
rm.neon.vqabs
rm.neon.vqadds
rm.neon.vqaddu
rm.neon.vqdmulh
rm.neon.vqdmull
rm.neon.vqmovns
rm.neon.vqmovnsu
rm.neon.vqmovnu
rm.neon.vqneg
rm.neon.vqrdmulh
rm.neon.vqrshiftns
rm.neon.vqrshiftnsu
rm.neon.vqrshiftnu
rm.neon.vqrshifts
rm.neon.vqrshiftu
rm.neon.vqshiftns
rm.neon.vqshiftnsu
rm.neon.vqshiftnu
rm.neon.vqshifts
rm.neon.vqshiftsu
rm.neon.vqshiftu
rm.neon.vqsubs
rm.neon.vqsubu
rm.neon.vraddhn
rm.neon.vrecpe
rm.neon.vrecps
rm.neon.vrhadds
rm.neon.vrhaddu
rm.neon.vrinta
rm.neon.vrintm
rm.neon.vrintn
rm.neon.vrintp
rm.neon.vrintx
rm.neon.vrintz
rm.neon.vrshiftn
rm.neon.vrshifts
rm.neon.vrshiftu
rm.neon.vrsqrte
rm.neon.vrsqrts
rm.neon.vrsubhn
rm.neon.vshiftins
rm.neon.vshiftls
rm.neon.vshiftlu
rm.neon.vshiftn
rm.neon.vshifts
rm.neon.vshiftu
rm.neon.vst1
rm.neon.vst2
rm.neon.vst2lane
rm.neon.vst3
rm.neon.vst3lane
rm.neon.vst4
rm.neon.vst4lane
rm.neon.vtb
rm.strex
rm.vcvtr
rm.vcvtru
rn.ftz
rnd.goodsyntax
rndpackwh
rndpackwhs
roadcast.s
roadcast.ss
rotate2d
rotation2d
roundEven
roupMemoryBarrier
row_majoL9
row_major
rrier0.and
rrier0.or
rs.ph.w
rsonalitH;H
rtc$IAA
rtc$IZZ
rtc$TAA
rtc$TZZ
rules: A Block or BufferBlock cannot be nested within another Block or BufferBlock
runc.ftz.f
runtime-sized array of
runtimearr
rwbuffer
rwbyteaddressbuffer
rwstructuredbuffer
rwstructuredbufferwithcounter
rwtexture1d
rwtexture1darray
rwtexture2d
rwtexture2darray
rwtexture3d
s     subgroupAdd(%s
s     subgroupAnd(%s
s     subgroupBroadcast(%s, uint
s     subgroupBroadcastFirst(%s
s     subgroupClusteredAdd(%s, uint
s     subgroupClusteredAnd(%s, uint
s     subgroupClusteredMax(%s, uint
s     subgroupClusteredMin(%s, uint
s     subgroupClusteredMul(%s, uint
s     subgroupClusteredOr(%s, uint
s     subgroupClusteredXor(%s, uint
s     subgroupExclusiveAdd(%s
s     subgroupExclusiveAnd(%s
s     subgroupExclusiveMax(%s
s     subgroupExclusiveMin(%s
s     subgroupExclusiveMul(%s
s     subgroupExclusiveOr(%s
s     subgroupExclusiveXor(%s
s     subgroupInclusiveAdd(%s
s     subgroupInclusiveAnd(%s
s     subgroupInclusiveMax(%s
s     subgroupInclusiveMin(%s
s     subgroupInclusiveMul(%s
s     subgroupInclusiveOr(%s
s     subgroupInclusiveXor(%s
s     subgroupMax(%s
s     subgroupMin(%s
s     subgroupMul(%s
s     subgroupOr(%s
s     subgroupPartitionedAddNV(%s, uvec4 ballot
s     subgroupPartitionedAndNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveAddNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveAndNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveMaxNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveMinNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveMulNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveOrNV(%s, uvec4 ballot
s     subgroupPartitionedExclusiveXorNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveAddNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveAndNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveMaxNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveMinNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveMulNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveOrNV(%s, uvec4 ballot
s     subgroupPartitionedInclusiveXorNV(%s, uvec4 ballot
s     subgroupPartitionedMaxNV(%s, uvec4 ballot
s     subgroupPartitionedMinNV(%s, uvec4 ballot
s     subgroupPartitionedMulNV(%s, uvec4 ballot
s     subgroupPartitionedOrNV(%s, uvec4 ballot
s     subgroupPartitionedXorNV(%s, uvec4 ballot
s     subgroupQuadBroadcast(%s, uint
s     subgroupQuadSwapDiagonal(%s
s     subgroupQuadSwapHorizontal(%s
s     subgroupQuadSwapVertical(%s
s     subgroupShuffle(%s, uint
s     subgroupShuffleDown(%s, uint delta
s     subgroupShuffleUp(%s, uint delta
s     subgroupShuffleXor(%s, uint
s     subgroupXor(%s
s %s%s : register( c%d
s %s[ %d
s = %s.%s
s Type must be a scalar or vector type
s WATAUAVAWH
s allocation count overflow
s allocation count overflow( %llu > %llu
s array element type
s array length
s at offset %d
s callgraph contains function <id
s component type
s function parameter count is not zero
s function return type is not void
s gl_PerVertex
s layout
s layout does not match Object <id
s mainIn
s mainIn[%d
s mainOut
s matrix column component type
s matrix column count
s matrix column type
s member count
s member type
s outputPatch[%d
s parameter type
s patchIn
s patchOut
s profile; removed in version %d
s return type
s struct member count
s type
s type does not match Function <id
s type does not match Object <id
s type does not match OpFunction's return type
s type does not match Result Type <id
s type does not match Source <id
s type is void
s vector component count
s vector element type
s( mainIn , mainOut
s() isn't a known function
s(D9f t
s(LcC LcS
s*layout\s*\(\s*binding\s*=\s*[0-9]+\s*\)\s*uniform\s+sampler
s*uniform\s+sampler
s.%s = %s
s.%s.%s = gl_in[%d].gl_ClipDistance[%d
s1I;uPr
s2I;\$Pr
sCHcL$4H
s[line %d:%d
s\%s_%08X%08X%08X%08X.vshadercache
s_%s = streamName.%s
s_%s[gl_InvocationID] = %s.%s
s_abs_diff
s_add_sat
s_clamp
s_gl_builtin
s_mad24
s_mad_hi
s_mad_sat
s_mul24
s_mul_hi
s_rhadd
s_sub_sat
s_upsample
s`H+sXH
sadd.overflow
sadd.result
sample
sample mask override coverage
sampleCount
sampleResultShadow
sampleStructTemp
sample_interlock_ordered
sample_interlock_unordered
sampled_image
sampler
sampler addressing mode
sampler binding not less than gl_MaxCombinedTextureImageUnits
sampler constructor must appear at point of use
sampler filter mode
sampler metadata
sampler type
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a scalar textureXXX type
sampler-constructor first argument must match type and dimensionality of constructor type
sampler-constructor requires two arguments
sampler-constructor second argument must be a scalar type 'sampler
sampler/image
sampler/image types can only be used in uniform variables or function parameters
sampler/texture/image requires layout(binding=X
sampler1D
sampler1DARRAY
sampler1DArray
sampler1DArrayShadow
sampler1DShadow
sampler2D
sampler2DARRAY
sampler2DArray
sampler2DArrayShadow
sampler2DMS
sampler2DMSArray
sampler2DRect
sampler2DRectShadow
sampler2DShadow
sampler3D
sampler3DARRAY
sampler3DRect
samplerBuffer
samplerCUBE
samplerCUBEARRAY
samplerCube
samplerCubeArray
samplerCubeArrayShadow
samplerCubeShadow
samplerExternal2DY2YEXT
samplerExternalOES
samplerShadow
sampler_state
sampler_typeProxy
samplers and atomic_uints cannot be output parameters
sanitize_address
sanitize_memory
sanitize_thread
saturate
savedstack
says it has
scalar
scalar block layout
scalar deleting destructor
scalar expected one element
scalar integer expression required
scalar or vector element type
scalar or vector float type members
scalar or vector type
scalar swizzle
scalar type
scalar, vector, or struct type
scalar-evolution
scalar-evolution-max-iterations
scalar-replacement
scalarCopy
scalar_replacement_pass
scalar_replacement_pass2
scalarize
scalarrepl
scalarrepl-ssa
scevgep
scope H
scope ID
se42.pcmp
secondary_view_offset
section
selecting output stream
selection
selection control
selection header
selection_rest_statement
selection_statement
selection_statement_nonattributed
semEqual and semUnequal must either both include gl_SemanticsVolatile or neither
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
semantic
semicolon
seq_cst
seq_cstH
set is too large
setitimer
setvbuf
shader input/output
shader record EXT
shader record NV
shader stage
shaderRecordNV
shadercache
shadercallcoherent
shaderreI
shaderrecordext
shading_rate_interlock_ordered
shading_rate_interlock_unordered
shadow
shadow1D
shadow1DGradARB
shadow1DLod
shadow1DProj
shadow1DProjGradARB
shadow1DProjLod
shadow2D
shadow2DEXT
shadow2DGradARB
shadow2DLod
shadow2DProj
shadow2DProjEXT
shadow2DProjGradARB
shadow2DProjLod
shadow2DRect
shadow2DRectGradARB
shadow2DRectProj
shadow2DRectProjGradARB
shared
shift for version
shift-UBO-binding
shift-image-binding
shift-sampler-binding
shift-ssbo-binding
shift-texture-binding
shift-uav-binding
shift_expression
shuffle
shuffle2
shufflevector
sideeffect
signext
simple_statement
simplification_pass
simplification_pass2
simplification_pass3
simplify-instructions
simplifycfg
simplifycfg-dup-ret
simplifycfg-hoist-cond-stores
simplifycfg-sink-common
since it is not specificed as taking an
sincospi
sincospi_stret
sincospi_stretf
single_attribute
single_declaration
single_type_qualifier
singlethread
sinpif
siprintf
size exceeds max value
sizeQueryTemp
sizeof
skblend
skblend.p
slow queries
smooth
smoothstep
sni.aes
sni.aeskeygenassist
snprintf
solaris
source language
source-entrypoint
sourceArg
south africa
south korea
south-africa
south-korea
space identifier
spanish-argentina
spanish-bolivia
spanish-chile
spanish-colombia
spanish-costa rica
spanish-dominican republic
spanish-ecuador
spanish-el salvador
spanish-guatemala
spanish-honduras
spanish-mexican
spanish-modern
spanish-nicaragua
spanish-panama
spanish-paraguay
spanish-peru
spanish-puerto rico
spanish-uruguay
spanish-venezuela
sparseImageLoad
sparseImageLoadARB
sparseImageLoadLod
sparseImageLoadLodAMD
sparseTexel
sparseTexelFetch
sparseTexelFetchARB
sparseTexelFetchOffset
sparseTexelFetchOffsetARB
sparseTexelsResident
sparseTexelsResidentARB
sparseTexture
sparseTextureARB
sparseTextureClamp
sparseTextureClampARB
sparseTextureGather
sparseTextureGatherARB
sparseTextureGatherLod
sparseTextureGatherLodAMD
sparseTextureGatherLodOffset
sparseTextureGatherLodOffsetAMD
sparseTextureGatherLodOffsets
sparseTextureGatherLodOffsetsAMD
sparseTextureGatherOffset
sparseTextureGatherOffsetARB
sparseTextureGatherOffsets
sparseTextureGatherOffsetsARB
sparseTextureGrad
sparseTextureGradARB
sparseTextureGradClamp
sparseTextureGradClampARB
sparseTextureGradOffset
sparseTextureGradOffsetARB
sparseTextureGradOffsetClam
sparseTextureGradOffsetClampARB
sparseTextureLod
sparseTextureLodARB
sparseTextureLodOffset
sparseTextureLodOffsetARB
sparseTextureOffset
sparseTextureOffsetARB
sparseTextureOffsetClamp
sparseTextureOffsetClampARB
spec BuiltIn
spec BuiltIn FragCoord variable needs to be a 4-component 32-bit float vector
spec BuiltIn FragDepth variable needs to be a 32-bit float scalar
spec BuiltIn FrontFacing variable needs to be a bool scalar
spec BuiltIn InstanceIndex variable needs to be a 32-bit int scalar
spec BuiltIn VertexIndex variable needs to be a 32-bit int scalar
spec BuiltIn WorkgroupSize variable needs to be a 3-component 32-bit int vector
spec allows BuiltIn
spec allows BuiltIn FragCoord to be only used for variables with Input storage class
spec allows BuiltIn FragCoord to be used only with Fragment execution model
spec allows BuiltIn FragDepth to be only used for variables with Output storage class
spec allows BuiltIn FragDepth to be used only with Fragment execution model
spec allows BuiltIn FrontFacing to be only used for variables with Input storage class
spec allows BuiltIn FrontFacing to be used only with Fragment execution model
spec allows BuiltIn InstanceIndex to be only used for variables with Input storage class
spec allows BuiltIn InstanceIndex to be used only with Vertex execution model
spec allows BuiltIn VertexIndex to be only used for variables with Input storage class
spec allows BuiltIn VertexIndex to be used only with Vertex execution model
spec requires DepthReplacing execution mode to be declared when using BuiltIn FragDepth
specialization-constant
specialization-constant id already used
specialization-constant id is too large
spir instruction terminated too early
spiregg
split-lp
split1
split2
sprintf
spvopt_disable
spvopt_disable_%s
sqrt.approx
sqrt_finite
sqrtefp
sqrtf_finite
sqrtfcall
sqrtl_finite
sr-BA-Cyrl
sr-BA-Latn
sr-SP-Cyrl
sr-SP-Latn
sr-ba-cyrl
sr-ba-latn
sr-sp-cyrl
sr-sp-latn
sra.ph.w
src\shaders
sroa.load.elt
sroa.store.elt
ssa-rewrite
sse3.pmadd.ub.sw.128
sse3.pmul.hr.sw.128
sspstrong
stage-epilogue
stage-exit
stages must match when linking into a single stage
standard
stantfunH9H
starting at word
state not recoverable
statement
statement_list
statement_no_new_scope
statement_scoped
static
static_cast
statically used per shader entry point
statvfs
statvfs64
std430 requires the buffer storage qualifier
stdcall
stereo view rendering
storage buffer
storage buffer, or variable in Private or Function storage class
storage class
storage class for pointer type <id
storage class forbidden by universal validation rules
storage class is read-only
storage class must be Function, Workgroup, CrossWorkGroup or Generic in the OpenCL environment
storage class must follow
storage class requires an additional capability
storage classes
storage image
storage qualifier not allowed on function parameter
storage_qualifier
storeTemp
storeTempPost
storeTempPre
storemerge
stpcpy_chk
stpncpy
stpncpy_chk
strcasecmp
strcmpload
strcoll
strcpy_chk
strcspn
strdup
stream
stream output type
stream timeout
streamName = v
stride is too large
string
string literal
string too long
strip-dead-prototypes
strlenfirst
strncasecmp
strncat
strncmp
strncpy
strncpy_chk
strndup
strnlen
strpbrk
strrchr
strtok_r
strtold
strtoll
strtoul
strtoull
struct
struct BindlessConstants_t
struct DS_INPUT
struct DS_PATCH_CONSTANT_INPUT
struct GS_INPUT
struct HS_INPUT
struct HS_OUTPUT
struct HS_PATCH_CONSTANTS
struct PS_INPUT
struct VS_INPUT
struct gl_DepthRangeParameters
struct gl_TextureFootprint2DNV {uvec2 anchor;uvec2 offset;uvec2 mask;uint lod;uint granularity;};struct gl_TextureFootprint3DNV {uvec3 anchor;uvec3 offset;uvec2 mask;uint lod;uint granularity;};bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintLodNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintLodNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintGradNV(sampler2D, vec2, vec2, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintGradClampNV(sampler2D, vec2, vec2, vec2, float, int, bool, out gl_TextureFootprint2DNV
struct member declarations
struct-member initializers ignored
struct_declaration
struct_declaration_list
struct_declarator
struct_declarator_list
struct_specifier
structure
structure may not be contained as a member of another
structuredbuffer
strxfrm
style initializers
sub.with.overflow
subBorrow
subgroup op
subgroupAdd
subgroupAll
subgroupAllEqual
subgroupAnd
subgroupAny
subgroupBallot
subgroupBallotBitCount
subgroupBallotBitExtract
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupBallotInclusiveBitCount
subgroupBarrier
subgroupBroadcast
subgroupBroadcastFirst
subgroupClusteredAdd
subgroupClusteredAnd
subgroupClusteredMax
subgroupClusteredMin
subgroupClusteredMul
subgroupClusteredOr
subgroupClusteredXor
subgroupElect
subgroupExclusiveAdd
subgroupExclusiveAnd
subgroupExclusiveMax
subgroupExclusiveMin
subgroupExclusiveMul
subgroupExclusiveOr
subgroupExclusiveXor
subgroupInclusiveAdd
subgroupInclusiveAnd
subgroupInclusiveMax
subgroupInclusiveMin
subgroupInclusiveMul
subgroupInclusiveOr
subgroupInclusiveXor
subgroupInverseBallot
subgroupMax
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
subgroupMin
subgroupMul
subgroupOr
subgroupPartitionNV
subgroupPartitionedAddNV
subgroupPartitionedAndNV
subgroupPartitionedExclusiveAddNV
subgroupPartitionedExclusiveAndNV
subgroupPartitionedExclusiveMaxNV
subgroupPartitionedExclusiveMinNV
subgroupPartitionedExclusiveMulNV
subgroupPartitionedExclusiveOrNV
subgroupPartitionedExclusiveXorNV
subgroupPartitionedInclusiveAddNV
subgroupPartitionedInclusiveAndNV
subgroupPartitionedInclusiveMaxNV
subgroupPartitionedInclusiveMinNV
subgroupPartitionedInclusiveMulNV
subgroupPartitionedInclusiveOrNV
subgroupPartitionedInclusiveXorNV
subgroupPartitionedMaxNV
subgroupPartitionedMinNV
subgroupPartitionedMulNV
subgroupPartitionedOrNV
subgroupPartitionedXorNV
subgroupQuadBroadcast
subgroupQuadSwapDiagonal
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
subgroupShuffle
subgroupShuffleDown
subgroupShuffleUp
subgroupShuffleXor
subgroupXor
subgroupcoherent
subpass
subpass input
subpassInput
subpassInputMS
subpassLoad
subpassLoadMS
subroutine
substituting 'mediump
subtract
subtract second child into first child
subtractSaturate
suppress-warnings
svw.trun
swb.128
swedish-finland
swift_1
swift_2
switch
switch statements
switch topology
switch-merge
switch-segment
switch.cast
switch.downshift
switch.gep
switch.load
switch.lookup
switch.masked
switch.shiftamt
switch.table
switch.tableidx
switch_statement
switch_statement_list
switch_statement_nonattributed
swizzle or member
swizzleInvocations
swizzleInvocationsAMD
swizzleInvocationsMasked
swizzleInvocationsMaskedAMD
swizzleInvocationsWithPatternAMD
swizzleTemp
syntax error
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
syntax not recognized
system.fxc
t H90tUH
t H98t+H
t H98tMH
t!H91t3H
t!H98t)H
t!H98tVH
t!H99tHH
t"H91t@H
t"H99tIH
t"L91t*H
t"L91tIH
t$ ATAVAWH
t$ L;l$8
t$ UATAUAVAWH
t$ UWATAUAVH
t$ UWATAUAWH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAW
t$ WATAUAVAWH
t$ WATAVAWL
t$ WATAVH
t$ WATAWH
t$ WAUAVH
t$ WAUAWH
t$ WAVAWH
t$(A9m
t$(D9t
t$0@8y,t
t$0I9uH
t$0I;UH
t$0L;t$8
t$0L;t$8t
t$1t;E3
t$8;Upr4I
t$8@8q tUH
t$8L+t$0I
t$<D9d$DtW
t$@D9d$p
t$@H97t
t$@H;Eo
t$@I9N@u!A
t$H91t`H
t$HA_A^A]A
t$HHcv@H
t$HL9w0
t$HL; u
t$L;AhH
t$L;ApH
t$P;t$T
t$PE8n,t
t$`fD9+t$I
t$`fff
t$hH+t$`M
t$hI;O(t
t$p9q4v$3
t$tfD;s
t$xL9t$p
t%D;A4s
t'9Y4v"3
t';Q4s
t'D8d$8t
t'H90t
t(H;C8r
t(H;N8r
t(L9 t#I
t)9y4v$3
t,H;D$8u
t,L9s t
t-H9:t5H
t.fD;x:u
t.trampoline
t09{4v%3
t2D8't
t2D9~Tu
t2H92t!H
t2L92t!L
t2M91t!M
t3D8;t
t3H;U8t
t3L9{ t
t4D8;t
t4H;D$0
t4H;D$8
t5H9{(t
t79z u
t7L;d$(t
t8@8{-t
t8L9{ t
t:L9fHu4H
t;H9^Ht5
t<fD9g
t?9{4v'3
t@L9nHu:L
tB@87t
tBH;h v
tC9{4v'3
tCounterH
tDL9/u?L
tE9L$$t?M
tE9{4v'3
tEH9QHu
tEH;h v
tEL;p v
tGL9#uBH;L$Xr
tH9L$$tBM
tHL;|$0u
tKL97uF
tKfD;p:uDH
tMD9>w1
tMH91t^H
tPD9d$`v
tPH9k uAL
tQ9X uLA
tQL9>t!H
tQfD9 tK
tR9q4v$3
tSL9e0t
tSf91tNH
tTH;F8r
tU;\$0tH
tZD9d$`v
t\I9X uVI
t\L9 uWA
t_H9kxtYH
tackprotector
tackprotectorcheck
tackrestore
tangent
target datalayout
target triple
target-env opengl
target-env spirv1.1
target-env spirv1.2
target-env spirv1.3
target-env spirv1.4
target-env spirv1.5
target-env spirvUnknown
target-env vulkan1.0
target-env vulkan1.1
target-env vulkan1.2
target-env vulkanUnknown
targetlibinfo
task shaders
taskNV
taskNV variables can be declared only as blocks
tbaa.struct
tbuffer
tc9{4v'3
tcH;T$pt
tempArg
tempColumn
tempReturn
template
tencilReH9H
termcond
terminateRayEXT
terminateRayNV
terminator instruction outside basic block
terminator instruction outside function
ternary
tess eval input ordering
tess eval input primitive
tess eval vertex spacing
tessellation control
tessellation control barrier() cannot be placed after a return from main
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main
tessellation evaluation
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
tessellation patch type
tessellation shaders
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
tested first
testnzc.256
testnzc.p
tex1Dbias
tex1Dgrad
tex1Dlod
tex1Dproj
tex2Dbias
tex2Dgrad
tex2Dlod
tex2Dproj
tex3Dbias
tex3Dgrad
tex3Dlod
tex3Dproj
texCUBE
texCUBEbias
texCUBEgrad
texCUBElod
texCUBEproj
texel offset
texelFetch
texelFetchOffset
text file busy
text$di
text$mn
text$mn$00
text$x
text$yd
texture
texture address mode
texture state
texture type for multisample
texture-rectangle sampler keyword
texture/image query
texture1D
texture1DArray
texture1DGradARB
texture1DLod
texture1DProj
texture1DProjGradARB
texture1DProjLod
texture2D
texture2DArray
texture2DGradARB
texture2DGradEXT
texture2DLod
texture2DLodEXT
texture2DMS
texture2DMSArray
texture2DProj
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjLod
texture2DProjLodEXT
texture2DRect
texture2DRectGradARB
texture2DRectProj
texture2DRectProjGradARB
texture3D
texture3DGradARB
texture3DLod
texture3DProj
texture3DProjGradARB
texture3DProjLod
textureBuffer
textureCUBE
textureClamp
textureClampARB
textureCube
textureCubeArray
textureCubeGradARB
textureCubeGradEXT
textureCubeLod
textureCubeLodEXT
textureFetch
textureFetchOffset
textureFootprintClampNV
textureFootprintGradClampNV
textureFootprintGradNV
textureFootprintLodNV
textureFootprintNV
textureGather
textureGatherLod
textureGatherLodAMD
textureGatherLodOffset
textureGatherLodOffsetAMD
textureGatherLodOffsets
textureGatherLodOffsetsAMD
textureGatherOffset
textureGatherOffsets
textureGrad
textureGradClamp
textureGradClampARB
textureGradOffset
textureGradOffsetClamp
textureGradOffsetClampARB
textureLod
textureLodOffset
textureOffset
textureOffsetClamp
textureOffsetClampARB
textureProj
textureProjGrad
textureProjGradOffset
textureProjLod
textureProjLodOffset
textureProjOffset
textureQueryLevels
textureQueryLod
textureSamples
textureSamples and imageSamples
textureSize
tgA9?w
thL9;uZH
that allocate pointers must be in Function or Private
that is not a scalar or vector
the same type as Result Type components
then statement
there is no such layout identifier for this stage taking an assigned value
this instruction is currently limited to 32-bit width
this type
thiscall
thread_local
thread_local(initialexec
thread_local(localdynamic
thread_local(localexec
thstenciH9H
tier0.dll
time-passes
timeAMD
timed out
tl9{4v%3
tls$ZZZ
tmL9H0ugI
tmpcast
tmpfile
tmpfile64
tnH9r thM
to Device, Workgroup and Invocation
to be int or float scalar or vector type
to be int or float scalar type
to be int or float vector type
to be only used for variables with Input or Output storage class
to be only used for variables with Input storage class
to be the reverse of those of Result Type
to be used only with Fragment, Vertex, TessellationControl, TessellationEvaluation or Geometry execution models
to be used only with GLCompute execution model
to be used only with TessellationControl or TessellationEvaluation execution models
to be used only with Vertex, TessellationEvaluation, Geometry, or Fragment execution models
to have 4 components
to index into a structure must be an OpConstant
to storage image
to the number of columns of Result Type matrix
to the number of elements of Result Type array
to the number of members of Result Type struct
to the size of Result Type vector
to.SXTHI.asrh
toD9l$h
toascii
together
token pasting
too large for fragment output
too large, must be less than gl_MaxGeometryOutputVertices
too large, must be less than gl_MaxMeshOutputPrimitivesNV
too large, must be less than gl_MaxMeshOutputVerticesNV
too large; see gl_MaxComputeWorkGroupSize
too large; see gl_MaxMeshWorkGroupSizeNV
too large; see gl_MaxTaskWorkGroupSizeNV
too many arguments
too many files open
too many files open in system
too many links
too many storage qualifiers
too many symbolic link levels
toreu.ps
tpL9{ t
tr.annotation
trHcD$h
trL9#uiH
traceNV
traceRayEXT
track-memory
transform feedback qualifier
translation_unit
transpose
triangle
triangle order
triangle_ccw
triangle_cw
triangle_strip
triangleadj
triangles
triangles_adjacency
trinidad & tobago
true case
true case is null
truncated
tstbit
tuf9O:uR
tv@8w,t
tx-struct
tx.read
tx.read.smid
txH9s urH
tyfD9 tsH
type <id
type E
type H
type ID
type Result Type array
type Result Type matrix
type as Result Type
type cannot have precision qualifier
type contains double or 64-bit integer; xfb_offset must be a multiple of 8
type contains half float or 16-bit integer; xfb_offset must be a multiple of 2
type conversion on return values was not explicitly allowed until version 420
type definition
type does not match Result Type <id
type does not match the Result Type <id
type does not match, or is not convertible to, the function's return type
type for RWTexture/RWBuffer
type for pointer <id
type must be an array
type of the matrix operand
type of the vector operand
type overflows the available 4 components
type parameter
type requires declaration of default precision qualifier
type requires the Float16 or Float16Buffer capability, or an extension that explicitly enables 16-bit floating point
type requires the Float64 capability
type size for ID not found
type that can be constructed
type. Structure <id
typeProxy
type_name_list
type_parameter_specifier
type_parameter_specifier_list
type_parameter_specifier_opt
type_qualifier
type_specifier
type_specifier_nonarray
typedef
typename
typeof
t{H9L$hut
t|L9c0uvH
u H9h r
u H;B r
u HcA<H
u!D;Chr
u!D;Cpr
u!H;Q r
u"HcMHH
u%;Q r I
u%;Q | I
u%D8c,t
u%L90u H
u&;X r!w
u&D;B r I
u&HcC H
u&L9+u
u&M;l$ r
u(H;j r"w
u(HcC H
u)9x4v$3
u);Q r$I
u)I;6t$9nHu
u)int16 types can only be in uniform block or buffer storage
u)int8 types can only be in uniform block or buffer storage
u*A;P r$M
u*D;A r$I
u*E9<$w
u+H9s r
u-D8+t(H
u-H;w r'w
u-I;o r'w
u.8T$xu
u.H;D$ t
u.ph.qb
u0H;D$ t
u1!D$0H
u16vec2
u16vec3
u16vec4
u2@8.t-H
u32vec2
u32vec3
u32vec4
u3HcH<H
u4L;B r.I
u64vec2
u64vec3
u64vec4
u89x4v33
u:H;D$`u3H
u:L9uou
u:L9~ t4H
u>M9u t8
u?@8s-t
u@I9H@u%A
uB;_ r=H
uE;G |@H
uG8D$ u
uHD;t$X
uID8D$AtBf
uMulExtended
uNH;Q rHI
uPD9d$`v
uPD;D$PsjB
uQH9L$Xu
uSD8d$xt+H
uTA8v,t
uWA9?w
u[H9L$ptgH
u_abs_diff
u_add_sat
u_clamp
u_mad24
u_mad_hi
u_mad_sat
u_mul24
u_mul_hi
u_rhadd
u_sub_sat
u_upsample
uadd.overflow
uaddCarry
ub.nopack
ub.sw.128
ubH9L$Xu
ubadd.p
ubaddhr
ubb.map
ucoopmatNV
ucoopmatNV coopMatMulAddNV(ucoopmatNV A, ucoopmatNV B, ucoopmatNV C
uda.syncthreads
udt returning
ue!T$(H!T
uf.b.128
ufA9w8w
ugH9L$Xu
uglygep
uh.nopack
uiH9x0ucH
uigroup
uimage1D
uimage1DArray
uimage2D
uimage2DArray
uimage2DMS
uimage2DMSArray
uimage2DRect
uimage3D
uimageBuffer
uimageCube
uimageCubeArray
uint   subgroupBallotBitCount(uvec4
uint   subgroupBallotExclusiveBitCount(uvec4
uint   subgroupBallotFindLSB(uvec4
uint   subgroupBallotFindMSB(uvec4
uint   subgroupBallotInclusiveBitCount(uvec4
uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint
uint countLeadingZeros(uint);uvec2 countLeadingZeros(uvec2);uvec3 countLeadingZeros(uvec3);uvec4 countLeadingZeros(uvec4);uint countTrailingZeros(uint);uvec2 countTrailingZeros(uvec2);uvec3 countTrailingZeros(uvec3);uvec4 countTrailingZeros(uvec4);uint absoluteDifference(int, int);uvec2 absoluteDifference(ivec2, ivec2);uvec3 absoluteDifference(ivec3, ivec3);uvec4 absoluteDifference(ivec4, ivec4);uint16_t absoluteDifference(int16_t, int16_t);u16vec2 absoluteDifference(i16vec2, i16vec2);u16vec3 absoluteDifference(i16vec3, i16vec3);u16vec4 absoluteDifference(i16vec4, i16vec4);uint64_t absoluteDifference(int64_t, int64_t);u64vec2 absoluteDifference(i64vec2, i64vec2);u64vec3 absoluteDifference(i64vec3, i64vec3);u64vec4 absoluteDifference(i64vec4, i64vec4);uint absoluteDifference(uint, uint);uvec2 absoluteDifference(uvec2, uvec2);uvec3 absoluteDifference(uvec3, uvec3);uvec4 absoluteDifference(uvec4, uvec4);uint16_t absoluteDifference(uint16_t, uint16_t);u16vec2 absoluteDifference(u16vec2, u16vec2);u16vec3 absoluteDifference(u16vec3, u16vec3);u16vec4 absoluteDifference(u16vec4, u16vec4);uint64_t absoluteDifference(uint64_t, uint64_t);u64vec2 absoluteDifference(u64vec2, u64vec2);u64vec3 absoluteDifference(u64vec3, u64vec3);u64vec4 absoluteDifference(u64vec4, u64vec4);int addSaturate(int, int);ivec2 addSaturate(ivec2, ivec2);ivec3 addSaturate(ivec3, ivec3);ivec4 addSaturate(ivec4, ivec4);int16_t addSaturate(int16_t, int16_t);i16vec2 addSaturate(i16vec2, i16vec2);i16vec3 addSaturate(i16vec3, i16vec3);i16vec4 addSaturate(i16vec4, i16vec4);int64_t addSaturate(int64_t, int64_t);i64vec2 addSaturate(i64vec2, i64vec2);i64vec3 addSaturate(i64vec3, i64vec3);i64vec4 addSaturate(i64vec4, i64vec4);uint addSaturate(uint, uint);uvec2 addSaturate(uvec2, uvec2);uvec3 addSaturate(uvec3, uvec3);uvec4 addSaturate(uvec4, uvec4);uint16_t addSaturate(uint16_t, uint16_t);u16vec2 addSaturate(u16vec2, u16vec2);u16vec3 addSaturate(u16vec3, u16vec3);u16vec4 addSaturate(u16vec4, u16vec4);uint64_t addSaturate(uint64_t, uint64_t);u64vec2 addSaturate(u64vec2, u64vec2);u64vec3 addSaturate(u64vec3, u64vec3);u64vec4 addSaturate(u64vec4, u64vec4);int subtractSaturate(int, int);ivec2 subtractSaturate(ivec2, ivec2);ivec3 subtractSaturate(ivec3, ivec3);ivec4 subtractSaturate(ivec4, ivec4);int16_t subtractSaturate(int16_t, int16_t);i16vec2 subtractSaturate(i16vec2, i16vec2);i16vec3 subtractSaturate(i16vec3, i16vec3);i16vec4 subtractSaturate(i16vec4, i16vec4);int64_t subtractSaturate(int64_t, int64_t);i64vec2 subtractSaturate(i64vec2, i64vec2);i64vec3 subtractSaturate(i64vec3, i64vec3);i64vec4 subtractSaturate(i64vec4, i64vec4);uint subtractSaturate(uint, uint);uvec2 subtractSaturate(uvec2, uvec2);uvec3 subtractSaturate(uvec3, uvec3);uvec4 subtractSaturate(uvec4, uvec4);uint16_t subtractSaturate(uint16_t, uint16_t);u16vec2 subtractSaturate(u16vec2, u16vec2);u16vec3 subtractSaturate(u16vec3, u16vec3);u16vec4 subtractSaturate(u16vec4, u16vec4);uint64_t subtractSaturate(uint64_t, uint64_t);u64vec2 subtractSaturate(u64vec2, u64vec2);u64vec3 subtractSaturate(u64vec3, u64vec3);u64vec4 subtractSaturate(u64vec4, u64vec4);int average(int, int);ivec2 average(ivec2, ivec2);ivec3 average(ivec3, ivec3);ivec4 average(ivec4, ivec4);int16_t average(int16_t, int16_t);i16vec2 average(i16vec2, i16vec2);i16vec3 average(i16vec3, i16vec3);i16vec4 average(i16vec4, i16vec4);int64_t average(int64_t, int64_t);i64vec2 average(i64vec2, i64vec2);i64vec3 average(i64vec3, i64vec3);i64vec4 average(i64vec4, i64vec4);uint average(uint, uint);uvec2 average(uvec2, uvec2);uvec3 average(uvec3, uvec3);uvec4 average(uvec4, uvec4);uint16_t average(uint16_t, uint16_t);u16vec2 average(u16vec2, u16vec2);u16vec3 average(u16vec3, u16vec3);u16vec4 average(u16vec4, u16vec4);uint64_t average(uint64_t, uint64_t);u64vec2 average(u64vec2, u64vec2);u64vec3 average(u64vec3, u64vec3);u64vec4 average(u64vec4, u64vec4);int averageRounded(int, int);ivec2 averageRounded(ivec2, ivec2);ivec3 averageRounded(ivec3, ivec3);ivec4 averageRounded(ivec4, ivec4);int16_t averageRounded(int16_t, int16_t);i16vec2 averageRounded(i16vec2, i16vec2);i16vec3 averageRounded(i16vec3, i16vec3);i16vec4 averageRounded(i16vec4, i16vec4);int64_t averageRounded(int64_t, int64_t);i64vec2 averageRounded(i64vec2, i64vec2);i64vec3 averageRounded(i64vec3, i64vec3);i64vec4 averageRounded(i64vec4, i64vec4);uint averageRounded(uint, uint);uvec2 averageRounded(uvec2, uvec2);uvec3 averageRounded(uvec3, uvec3);uvec4 averageRounded(uvec4, uvec4);uint16_t averageRounded(uint16_t, uint16_t);u16vec2 averageRounded(u16vec2, u16vec2);u16vec3 averageRounded(u16vec3, u16vec3);u16vec4 averageRounded(u16vec4, u16vec4);uint64_t averageRounded(uint64_t, uint64_t);u64vec2 averageRounded(u64vec2, u64vec2);u64vec3 averageRounded(u64vec3, u64vec3);u64vec4 averageRounded(u64vec4, u64vec4);int multiply32x16(int, int);ivec2 multiply32x16(ivec2, ivec2);ivec3 multiply32x16(ivec3, ivec3);ivec4 multiply32x16(ivec4, ivec4);uint multiply32x16(uint, uint);uvec2 multiply32x16(uvec2, uvec2);uvec3 multiply32x16(uvec3, uvec3);uvec4 multiply32x16(uvec4, uvec4
uint fragmentMaskFetchAMD(sampler2DMS,       ivec2);uint fragmentMaskFetchAMD(isampler2DMS,      ivec2);uint fragmentMaskFetchAMD(usampler2DMS,      ivec2);uint fragmentMaskFetchAMD(sampler2DMSArray,  ivec3);uint fragmentMaskFetchAMD(isampler2DMSArray, ivec3);uint fragmentMaskFetchAMD(usampler2DMSArray, ivec3);vec4  fragmentFetchAMD(sampler2DMS,       ivec2, uint);ivec4 fragmentFetchAMD(isampler2DMS,      ivec2, uint);uvec4 fragmentFetchAMD(usampler2DMS,      ivec2, uint);vec4  fragmentFetchAMD(sampler2DMSArray,  ivec3, uint);ivec4 fragmentFetchAMD(isampler2DMSArray, ivec3, uint);uvec4 fragmentFetchAMD(usampler2DMSArray, ivec3, uint
uint fragmentMaskFetchAMD(subpassInputMS);uint fragmentMaskFetchAMD(isubpassInputMS);uint fragmentMaskFetchAMD(usubpassInputMS);vec4  fragmentFetchAMD(subpassInputMS,  uint);ivec4 fragmentFetchAMD(isubpassInputMS, uint);uvec4 fragmentFetchAMD(usubpassInputMS, uint
uint gl_InstanceID
uint gl_InstanceIndex
uint gl_PrimitiveID
uint gl_VertexID
uint gl_VertexIndex
uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4
uint( gl_InstanceID
uint( gl_InstanceIndex
uint( gl_PrimitiveID
uint( gl_VertexID
uint( gl_VertexIndex
uint16BitsToFloat16
uint16BitsToHalf
uint16_t
uint1x1
uint1x2
uint1x3
uint1x4
uint2x1
uint2x2
uint2x3
uint2x4
uint32_t
uint3x1
uint3x2
uint3x3
uint3x4
uint4x1
uint4x2
uint4x3
uint4x4
uint64BitsToDouble
uint64_t
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t atomicLoad(coherent volatile in  int64_t, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4
uint8_t
uintBitsToFloat
uioptions
uj9L$@ud
ukD9`0ueH
ul.hr.sw
uleu.s.ph.qb
umD9`0ugH
umH9L$Xu
umulExtended
umul_with_overflow
unable to declare patch constant function interface variable
unable to find output symbol for Append
unable to find patch constant function built-in variable
unable to find texture symbol
unable to locate patch function parameter name
unable to remove the dup-merge block
unaligned
unary intrinsic
unary op for simple conditional loops
unary operator
unary_expression
unary_operator
unbounded
undeclared identifier
undefined
undefined macro in expression not allowed in es profile
unexpected
unexpected initializer-list type
unexpected input
unexpected location
unexpected location; end of argument
unexpected location; end of replacement list
unexpected operator on texture type
unexpected texture type for .mips[][] operator
unexpected token
unexpected tokens following #ifdef directive - expected a newline
unexpected tokens following directive
unexpected type parameters
unexpected use of
unexpected use of .length
unhandled texture constructor
uniform
uniform _Globals
uniform block
uniform block layout
uniform buffer
uniform buffer-member align
uniform gl_DepthRangeParameters gl_DepthRange
uniform initializers must be constant
uniform int gl_NumSamples
uniform lowp int gl_NumSamples
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB
uniform/buffer blocks require layout(binding=X
unimplemented
unimplemented constant type
unimplemented: OpMemberDecorate non-struct type
unimplemented: PCF input patch without entry point input patch parameter
unimplemented: clip/cull not currently implemented for this stage
unimplemented: component-level gather compare
unimplemented: entry point outputs in patch constant function invocation
unimplemented: multiple output patches in patch constant function
unimplemented: partial image updates
unimplemented: residency status
unimplemented: structure type in image or buffer
unimplemented: unhandled type
unimplemented; need ARB_shader_stencil_export
united-kingdom
united-states
unknown
unknown atomic operation
unknown basic type in image format
unknown blend equation
unknown built-in variable
unknown error
unknown glslang aggregate
unknown glslang binary operation
unknown glslang unary
unknown image format
unknown image type in atomic operation
unknown index type
unknown interpolation method
unknown kind
unknown op
unknown op to invert
unknown operation
unknown operation with no arguments
unknown option value
unknown pack_matrix pragma value
unknown precision qualifier
unknown profile
unknown qualifier
unknown requalification
unknown sampler dimension
unknown source
unknown stage
unknown swizzle selection
unknown type
unknown type in inductive variable
unknown type opcode
unknown variable
unknownIntrinsic
unnamed_addr
unordered
unordered_map/set too long
unorm and snorm only valid in floating point domain
unpack16
unpack32
unpack8
unpackDouble2x32
unpackFloat2x16
unpackHalf2x16
unpackInt2x16
unpackInt2x32
unpackInt4x16
unpackSnorm2x16
unpackSnorm4x8
unpackUint2x16
unpackUint2x32
unpackUint4x16
unpackUnorm2x16
unpackUnorm4x8
unpck.v16i1
unr-lcssa
unr.cmp
unr1-lcssa
unr2-lcssa
unreachable
unrecognized attribute
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4
unrecognized-type
unroll-allow-partial
unroll-count
unroll-runtime
unroll-threshold
unsetenv
unshifted
unsigned
unsigned integer
unsigned integer vector
unsigned literal
unsized
unsupported construction
unsupported domain type
unsupported outputtopology type
unsupported partitioning type
unterminated mips operator
unwind
unwind A
upH;~ uj
usampler1D
usampler1DArray
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler2DRect
usampler3D
usamplerBuffer
usamplerCube
usamplerCubeArray
use-storage-buffer
use-variable-pointers
use-vulkan-memory-model
use_storage_buffer
use_variable_pointers
use_vulkan_memory_model
used at end of comment, but this version does not provide line continuation
used at end of comment; the following line is still part of the comment
used for OpTypeFloat
used for OpTypeInt
used in function
used to access transparent buffer backed resources. Such
useless application of layout qualifier
uses more than one PushConstant interface
uses storage class
using ES precision qualifier keyword
using array
using early_fragment_tests
using future keyword
using future non-square matrix type keyword
using future reserved keyword
using future type keyword
using point mode
using post_depth_coverage
usubBorrow
usubpassInput
usubpassInputMS
utexture1D
utexture1DArray
utexture2D
utexture2DArray
utexture2DMS
utexture2DMSArray
utexture2DRect
utexture3D
utextureBuffer
utextureCube
utextureCubeArray
uvD9D$PuoE
uvec2 clock2x32ARB();uint64_t clockARB();uvec2 clockRealtime2x32EXT();uint64_t clockRealtimeEXT
uvec2 conversion to reference
uvec4  subgroupBallot(bool
uvec4  subgroupPartitionNV(%s
uwtable
uxM;S urA
uz-UZ-Cyrl
uz-UZ-Latn
uz-uz-cyrl
uz-uz-latn
v'H+M@H
v'H+M`H
v+L+t$ H
v.d.256
v0H9W`u
vF6HlJ6p
vTL9D$Hu
vaddhubs
validating
value invalid for integer argument
value invalid for uint argument
value is out of range
value must be 0 or 1
value too large
variable declaration qualifier
variable index
variable indexing buffer block array
variable indexing fragment shader output array
variable indexing sampler array
variable indexing uniform block array
variable name expected
variable needs to be a 3-component 32-bit int vector
variable needs to be a 32-bit float array
variable needs to be a 32-bit int
variable needs to be a 32-bit int scalar
variable needs to be a 32-bit int vector
variable needs to be a 4-component 32-bit int vector
variable with qualifier 'const' not initialized; zero initializing
variable_identifier
variables must be typed as OpTypeImage, OpTypeSampler
variables must be typed as OpTypeStruct, or an array of
variables with qualifier 'const' must be initialized
variables with reference type can't have qualifier 'const
varying
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord
vb'vb'v
vbase destructor
vbroadcast.s
vbroadcast.ss.ps
vbroadcastf128.p
vbtable
ve.float
ve_groupH9H
vec2 gl_PointCoord
vec2 textureQueryLod
vec2 unpackHalf2x16(highp uint
vec2mat
vec3mat
vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord
vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth
vec4 ftransform
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord
vec4 gl_FragColor
vec4 gl_Position;float gl_PointSize
vec4 imageLoad(readonly volatile coherent
vec4 imageLoadLodAMD(readonly volatile coherent
vec4 subpassLoad
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint
vec4mat
vector
vector component count does not match Result Type <id
vector constructor iterator
vector copy constructor iterator
vector deleting destructor
vector destructor iterator
vector index out of range '%d
vector operand size
vector scale second child into first child
vector size
vector size of the right operand
vector swizzle
vector swizzle selection out of range
vector swizzle selectors not from the same set
vector swizzle too long
vector too long
vector vbase constructor iterator
vector vbase copy constructor iterator
vector-dce
vector-scale
vector-times-matrix
vector<bool> too long
vector_dce_pass
vectorcall
vectors
verify-dom-info
verify-indvars
verify-loop-info
verify-scev
version
version 140
version 300 es
version 310 es
version 330
version 410
version not supported
version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
version: ES shaders for SPIR-V require version 310 or higher
version: compilation for SPIR-V does not support the compatibility profile
version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
version: mesh/task shaders require es profile with version 320 or above, or non-es profile with version 450 or above
version: only version 300, 310, and 320 support the es profile
version: ray tracing shaders require non-es profile with version 460 or above
version: statement must appear first in es-profile shader; before comments or newlines
version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
version: versions 300, 310, and 320 require specifying the 'es' profile
version: versions 300, 310, and 320 support only the es profile
version: versions before 150 do not allow a profile token
versionH9
versus
vertex index
vertex input arrays
vertex input cannot be further qualified
vertex output block
vertex spacing
vertex-shader `double` type input
vertex-shader array-of-array output
vertex-shader array-of-struct output
vertex-shader struct output
vertex-shader struct output containing an array
vertex-shader struct output containing structure
vertices
verticesH
verticesH9
vextracti128
vfprintf
vfscanf
vftable
vfx_dx11
vfx_dx9
vfx_gl.dll
vfx_opengl
vfxexprLexerNew
vfxexprLexerNewSSD
vfxexprParserNew
vfxexprParserNewSSD
view port array2
viewportH9
vinsertf128
virtual
virtual displacement map
vload_half
vload_halfn
vloada_halfn
void EmitStreamVertex(int);void EndStreamPrimitive(int
void EmitVertex();void EndPrimitive
void barrier
void beginInvocationInterlockARB(void);void endInvocationInterlockARB(void
void controlBarrier(int, int, int, int
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent float64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor
void debugPrintfEXT
void executeCallableNV(uint, int);void executeCallableEXT(uint, int
void function cannot return a value
void ignoreIntersectionNV();void ignoreIntersectionEXT();void terminateRayNV();void terminateRayEXT
void imageAtomicStore(volatile coherent
void imageStore(writeonly volatile coherent
void imageStoreLodAMD(writeonly volatile coherent
void main
void memoryBarrier
void memoryBarrier(int, int, int
void memoryBarrierAtomicCounter
void memoryBarrierBuffer
void memoryBarrierImage
void memoryBarrierShared();void groupMemoryBarrier
void rayQueryInitializeEXT(rayQueryEXT, accelerationStructureEXT, uint, uint, vec3, float, vec3, float);void rayQueryTerminateEXT(rayQueryEXT);void rayQueryGenerateIntersectionEXT(rayQueryEXT, float);void rayQueryConfirmIntersectionEXT(rayQueryEXT);bool rayQueryProceedEXT(rayQueryEXT);uint rayQueryGetIntersectionTypeEXT(rayQueryEXT, bool);float rayQueryGetRayTMinEXT(rayQueryEXT);uint rayQueryGetRayFlagsEXT(rayQueryEXT);vec3 rayQueryGetWorldRayOriginEXT(rayQueryEXT);vec3 rayQueryGetWorldRayDirectionEXT(rayQueryEXT);float rayQueryGetIntersectionTEXT(rayQueryEXT, bool);int rayQueryGetIntersectionInstanceCustomIndexEXT(rayQueryEXT, bool);int rayQueryGetIntersectionInstanceIdEXT(rayQueryEXT, bool);uint rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT(rayQueryEXT, bool);int rayQueryGetIntersectionGeometryIndexEXT(rayQueryEXT, bool);int rayQueryGetIntersectionPrimitiveIndexEXT(rayQueryEXT, bool);vec2 rayQueryGetIntersectionBarycentricsEXT(rayQueryEXT, bool);bool rayQueryGetIntersectionFrontFaceEXT(rayQueryEXT, bool);bool rayQueryGetIntersectionCandidateAABBOpaqueEXT(rayQueryEXT);vec3 rayQueryGetIntersectionObjectRayDirectionEXT(rayQueryEXT, bool);vec3 rayQueryGetIntersectionObjectRayOriginEXT(rayQueryEXT, bool);mat4x3 rayQueryGetIntersectionObjectToWorldEXT(rayQueryEXT, bool);mat4x3 rayQueryGetIntersectionWorldToObjectEXT(rayQueryEXT, bool
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool
void subgroupMemoryBarrierShared
void traceNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void traceRayEXT(accelerationStructureEXT,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void executeCallableNV(uint, int);void executeCallableEXT(uint, int
void writePackedPrimitiveIndices4x8NV(uint, uint
volatile
vpL9w t
vprintf
vrcrotate.acc
vshadercache
vsnprintf
vsprintf
vsscanf
vstore_half
vstore_half_r
vstore_halfn
vstore_halfn_r
vstorea_halfn
vstorea_halfn_r
vstoren
vttsd2si64
vttss2si64
vulkan1.0
vulkan1.1
vulkan1.1spv1.4
vulkan1.2
vulkan_disable_convert_to_half
vulkan_disable_spvopt
vulkan_disable_spvremapper
vulkan_force_enable_spvremapper
vvm.atomic.load.add.f32
vvm.atomic.load.dec.32
vvm.atomic.load.inc.32
vvm.compiler.error
vvm.compiler.warn
vvm.h2f
vvm.ldg.global.f
vvm.ldg.global.i
vvm.ldg.global.p
vvm.ldu.global.f
vvm.ldu.global.i
vvm.ldu.global.p
vvm.move.ptr
vvm.prmt
vvm.ptr.constant.to.gen
vvm.ptr.gen.to.constant
vvm.ptr.gen.to.global
vvm.ptr.gen.to.local
vvm.ptr.gen.to.param
vvm.ptr.gen.to.shared
vvm.ptr.global.to.gen
vvm.ptr.local.to.gen
vvm.ptr.shared.to.gen
vvm.read.ptx.sreg
vvm.read.ptx.sreg.ctaid
vvm.read.ptx.sreg.ntid
vvm.read.ptx.sreg.tid
vvm.rsqrt.approx.ftz.f
vvm.sqrt.approx.ftz.f
vx2.permd
vzeroall
w H9|$h
w HcD$lH
w HcD$tH
w HcD$|H
w'H9L$ s I
w+HcD$,H
w@H;wHtlH
wPI;wXtDL
warf.cfa
warning
weak_odr
webgpu0
webkit_jscc
wfM;}(s`H
when Dim is either 1D or 2D
when more than one fragment shader output, all must have location qualifiers
which cannot be used with the current execution model
which cannot be used with the current execution modes
which is called with execution model
which is decorated with BuiltIn
which is dependent on
while (true
while in source code it is
while loops not available
while sub-statement
with ExplicitLod
with backedge-taken count
with bias argument
with expression
with two memory access operands requires SPIR-V 1.4 or later
words instead
words instead of
words long
words, but found
words, but stated word count is
workgroupcoherent
wrap-opkill
wrap_op_kill_pass
writeInvocation
writeInvocationAMD
writePackedPrimitiveIndices4x8NV
writeonly
wrong number of arguments
wrong number of matrix columns
wrong number of structure members
wrong operand type
wrong operand types
wrong protocol type
wrong vector size (or rows in a matrix column
www.digicert.com1$0
www.digicert.com110
x ATAVAWH
x AUAVAWH
x UATAUAVAWH
x UAVAWH
x size
x$>&x*>,x0.2H4R6
x$@&x*H.R0x486d8x<m
x( uW8X,t)8X-t
x.ftz.f
x.read
x.read.lanemask
x.read.nctaid
x2.approx
x2.approx.ftz.f
x86_64-pc-win32
x86_64_sysvcc
x86_64_win64cc
x86_fastcallcc
x86_fp80
x86_fp80H
x86_mmx
x86_stdcallcc
x86_thiscallcc
xA_A^A
xA_A^A]A
xHI9O@u%A
xHL;|$Pt
xL+|$pI
xdata$x
xfb layout qualifier
xfb_buffH9
xfb_buffer
xfb_offsH9
xfb_offset
xfb_stream
xfb_striH9
xfb_stride
xfb_stride is too large
xfb_stride is too small to hold all buffer entries
xfb_stride must be multiple of 2 for buffer holding a half float or 16-bit integer
xfb_stride must be multiple of 4
xfb_stride must be multiple of 8 for buffer holding a double or 64-bit integer
xperimental.patchpoint.i64
xperimental.patchpoint.void
xperimental.stackmap
xtr.rs.w
xtract.rp
xtractp
xtractp.rp
xtractu
xtractu.rp
xtractup
xtractup.rp
xtraiter
y size
y0L+y(H
yHH9F8u
yielding Result Id
ypeid.for
yri.addr.u2
yxxxxxxxA
yxxxxxxxE
yxxxxxxxH
yxxxxxxxI
yxxxxxxxL
z size
zY;>u:m
zero found
zeroext
zeroinitializer
zeroupper
zzzzJJJ,;JJ
zzzzzzz
