
 DOTAHUDFacelessVoidArcana{

     width: 100%;
     height: 100%;
     background-color: #00000000;
     visibility: visible;
 }



 .ShowArcanaProgressPanel.ToggledOff #ArcanaProgressPanel{

     transform: translateY(-610px);
 }

 .ShowArcanaProgressPanel #ArcanaProgressPanel{

     opacity: 1;
     transform: translateY(0);
     sound: "ui_friends_slide_in";
 }

 .SlideoutPanel > Label{

     vertical-align: center;
 }

 .SlideoutPanel{

     opacity: 0;
     vertical-align: top;
     horizontal-align: center;
     margin-top: 45px;
     max-height: 175px;
     width: fit-children;
     transform: translateY(-700px);
     transition-duration: 0.45s;
     transition-property: transform, opacity;
     transition-timing-function: ease-in-out;
 }

 .CloseButton{

     visibility: collapse;
     vertical-align: top;
     horizontal-align: right;
     wash-color: white;
     width: 20%;
     height: 20%;
     z-index: 1;
 }

 @define kGlowTranslation:  32px;
 @define kGlyphContainerDimension: 150px;

 .Glow{

     opacity: 0;
     transition-property: opacity;
     transition-duration: 0.25s;
     transition-timing-function: ease-in-out;
 }

 .ShowGlow1 #Glow1,.ShowGlow2 #Glow2,.ShowGlow3 #Glow3,.ShowGlow4 #Glow4,.ShowGlow5 #Glow5,.ShowGlow6 #Glow6{






     sound: "Tower.Fire.Attack";
     opacity: 1;
 }


 #GlowOnCompletion{

     width: 400px;
     height: 400px;
 }

 #GlyphForegroundOnCompletion,#GlowOnCompletion{

     visibility: collapse;
 }



     .ShowGlow6 #GlyphForegroundOnCompletion,.ShowGlow6 #GlowOnCompletion{

         visibility: visible;
     }


 #GlyphContainer{

     width: kGlyphContainerDimension;
     height: kGlyphContainerDimension;
     margin: 10px;
     width: 200px;
     height: 200px;
 }
     #GlyphContainer #GlyphBackground,#GlyphContainer #Glyph,#GlyphContainer #GlyphForegroundOnCompletion{

         vertical-align: center;
         horizontal-align: center;
     }

     #GlyphContainer #GlyphBackground,#GlyphContainer #GlyphForegroundOnCompletion{

         width: 150px;
         height: 150px;
         background-position: center;
         background-size: cover;
         background-repeat: no-repeat;
     }

     #GlyphContainer #GlyphBackground{

         background-image: url( "s2r://panorama/images/leaf_pages/debut_arcana_faceless_void/arcana_faceless_void_glyph_bg1_psd.vtex");
     }

     #GlyphContainer #GlyphForegroundOnCompletion{

         background-image: url( "s2r://panorama/images/leaf_pages/debut_arcana_faceless_void/arcana_faceless_void_glyph1_complete_psd.vtex");
     }

     #GlyphContainer #Glyph{

         width: 130px;
         height: 130px;
         background-position: center;
         background-image: url( "s2r://panorama/images/leaf_pages/debut_arcana_faceless_void/arcana_faceless_void_glyph1_psd.vtex");
         background-size: cover;
         background-repeat: no-repeat;
     }

     #GlyphContainer .Glow{

         width: 25%;
         height: 25%;
         background-size: cover;
         vertical-align: center;
         horizontal-align: center;
     }

     #GlyphContainer .FacelessVoidArcanaProgressSmoke{

         width: 300px;
         height: 300px;
     }

     #GlyphContainer #Glow1{

         transform: translateY( kGlowTranslation ) rotateZ( 0deg );
     }

     #GlyphContainer #Glow2{

         transform: translateY( kGlowTranslation ) rotateZ( 60deg );
     }

     #GlyphContainer #Glow3{

         transform: translateY( kGlowTranslation ) rotateZ( 120deg );
     }

     #GlyphContainer #Glow4{

         transform: translateY( kGlowTranslation ) rotateZ( 180deg );
     }

     #GlyphContainer #Glow5{

         transform: translateY( kGlowTranslation ) rotateZ( 240deg );
     }

     #GlyphContainer #Glow6{

         transform: translateY( kGlowTranslation ) rotateZ( 300deg );
     }



 #SwordIcon{

     background-image: url( "s2r://panorama/images/hud/reborn/ping_icon_attack_psd.vtex");
     background-position: center;
     background-size: cover;
     width: 22px;
     height: 22px;
 }

 .Hidden{

     visibility: collapse;
 }

 #DamageDetails{

     visibility: collapse;
     horizontal-align: center;
     padding: 2px;
 }

 .ProgressPanelContent{

     horizontal-align: left;
     vertical-align: center;
     padding: 12px;
     background-color: #000000;
     border-radius: 0px 0px 10px 10px;
     opacity-brush: gradient( linear, 0% 0%, 100% 0%, from( #ffffffff ), color-stop( 0.5, #ffffffff ), color-stop( 0.9, #ffffffcc ), to( #ffffffaa ) );
     z-index: 1;
 }

 #DetailsContainer{

     visibility: collapse;
 }

 #DamageTotal{

     horizontal-align: center;
 }

 #CircularProgressBarContainer{

     height: 80px;
     width: 80px;
     vertical-align: center;
     horizontal-align: center;
 }

 .CircularProgressBarChip{

     width: 100%;
     height: 100%;
 }

     .CircularProgressBarChip .CircularProgressBarFG{

         width: 100%;
         height: 100%;
         border-radius: 50%;
         vertical-align: center;
         horizontal-align: center;
     }

 #CircularProgressBarChip1_FG{

     background-color: red;
 }

 #CircularProgressBarChip2_FG{

     transform: rotateZ(72deg);
     background-color: orange;
 }

 #CircularProgressBarChip3_FG{

     transform: rotateZ(144deg);
     background-color: yellow;
 }

 #CircularProgressBarChip4_FG{

     transform: rotateZ(216deg);
     background-color: green;
 }

 #CircularProgressBarChip5_FG{

     transform: rotateZ(288deg);
     background-color: white;
 }

 #CircularProgressBarMask{

     width: 70px;
     height: 70px;
     border-radius: 50%;
     vertical-align: center;
     horizontal-align: center;
 }

 #CircularProgressBarMask_FG,#CircularProgressBarMask_BG{


     width: 100%;
     height: 100%;
     color: black;
     background-color: black;
 }

 #NumPoints{

     vertical-align: center;
     horizontal-align: center;
 }

 .MaxPointsReached #GlyphContainer{

     transform: scaleX(1) scaleY(1);
     transition-duration: 1.65s;
     transition-property: transform, brightness, blur;
     transition-timing-function: ease-in-out;
  animation-name: OnMaxPointsReachedAnimation;
  animation-duration: 1.5s;
  animation-delay: 0s;
  animation-timing-function: linear;
  animation-iteration-count: 1;
 }

 .MaxPointsReached .Glow{

     transition-duration: 1.0s;
     transition-property: brightness, blur;
     transition-timing-function: ease-in-out;
  animation-name: OnMaxPointsReachedGlowAnimation;
  animation-duration: 0.5s;
  animation-delay: 0s;
  animation-timing-function: linear;
  animation-iteration-count: 2;
 }

 @keyframes 'OnMaxPointsReachedAnimation'{

     0%{

         brightness: 1;
     }

     20%{

         brightness: 0.6;
     }

     40%{

         brightness: 2.1;
     }

     80%{

         brightness: 2.2;
     }

     99%{

         brightness: 1;
     }
 }

 @keyframes 'OnMaxPointsReachedGlowAnimation'{

  0%{

   brightness: 1;
  }

  20%{

         brightness: 0.6;
  }

     40%{

         brightness: 2.0;
     }

     80%{

         brightness: 2.0;
     }

  99%{

   brightness: 1;
  }
}