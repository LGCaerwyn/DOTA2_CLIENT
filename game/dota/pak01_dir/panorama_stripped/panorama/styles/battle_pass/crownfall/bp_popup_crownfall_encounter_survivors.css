               

@define HudHeight: 110px;
@define BossFadeDuration: 1.5s;

@define UISoundSelect: ui_select_md;
@define UISoundBack: ui_settings_out_multi;


.PopupPanel.Survivors {
	flow-children: none;
	background-color: none;
	animation: none;
	border: 0px solid transparent;
	padding: 0px;
	box-shadow: none;
	width: 100%;
	height: 100%;
}

.MainContentsWrapperContainer {
	flow-children: down;
	horizontal-align: center;
	vertical-align: center;
	margin-top: 32px;
}

.MainContentsWrapper {
	
}

.PopupPanel .MainContents {
	width: 1560px;
	height: width-percentage( 56.25% );           
	height: width-percentage( 62.5% );            

	background-color: black;
	                                                                                             
}

.PopupPanel.Maximized {
	width: 1920px;
	height: 1080px;

	.AspectRatio16x10 &
	{
		width: 100%;
		height: 90%;
	}

	.MainContentsWrapperContainer {
		width: fill-parent-flow(1);
		height: fill-parent-flow(1);
		margin: 0px;
	}

	.MainContentsWrapper {
		width: 100%;
		height: 100%;
		margin: 0px;
		border: 0px;
		padding: 0px;
		ui-scale: 100%;
	}

	.MainContents {
		ui-scale: 100%;
		border: 0px;
		width: 1920px;
		height: 1080px;
	}

	.DebugContainer {
		visibility: collapse;
	}

	.DebugTimelineControlsContainer {
		visibility: collapse;
	}

	#ResizeButtonContainer,
	#CloseButtonContainer {
		margin: 0px;
	}
}

.FadeCover {
	width: 100%;
	height: 100%;
	background-color: black;
	opacity: 0;

	transition-property: opacity;
	transition-duration: BossFadeDuration;
}

.BossFadeIn {
	.FadeCover {
		opacity: 0;
	}
}

.BossFadeOut {
	.FadeCover {
		opacity: 1;
	}
}

.PlayerDamageContainer {
	width: 100%;
	height: 100%;
	background-color: gradient( linear, 0% 0%, 0% 100%, from( red ), color-stop( 0.4, rgba(255, 0, 0, 0) ), color-stop( 0.6, rgba(255, 0, 0, 0) ), to( red ) ) );
	opacity-brush: gradient( linear, 0% 0%, 100% 0%, from( white ), color-stop( 0.5, rgba(255, 255, 255, 0.5) ), color-stop( 0.5, rgba(255, 255, 255, 0.5) ), to( white ) );
	opacity: 0;
	.PlayerTookDamage &	{
		animation-name: PlayerTookDamageAnim;
		animation-duration: 0.8s;
		animation-iteration-count: 1;
	}
}

@keyframes 'PlayerTookDamageAnim' {
    0% {
        opacity: 0;
    }
	20% {
		opacity: 0.8;
	}
	100% {
        opacity: 0;
    }
}

.GameUI {
	width: 100%;
	height: 100%;

	.GameState_Setup &,
	.GameState_Finished &,
	.DebugFinishedScreen & {
		visibility: collapse;
	}
}

.TimerContainer {
	horizontal-align: center;
	margin-top: -5.5px;
	opacity-brush: gradient( linear, 0% 0%, 0% 5%, from(rgba(255, 255, 255, 0) ), to( #ffffff ) );
	
	                            
	height: 100px;

	                      
	                      
	                        
		                     
	    
	
	transform: none;
	opacity: 1;

	transition-property: transform, opacity;
	transition-duration: 0.2s;
	transition-delay: 0s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);                

	.GameState_Setup &,
	.GameState_Finished &,
	.GameState_ShowingDialogue &,
	.DebugFinishedScreen & {
		transform: translateY( -24px );
		opacity: 0;

		transition-duration: 0.4s;
		transition-delay: 0.5s;
	}

	.ScoreBackground,
	.ScoreBorder {
		width: 310px;
		transform: scaleY( -1.0 );
	}

	.ScoreBackground {
		wash-color: #685d47;
	}

	.ScoreBorder {
		wash-color: #f0ce92;
	}

	.TimerInfoContainer {
		flow-children: right;
		horizontal-align: center;
		margin-top: 4px;
	}

	.DifficultyContainer {
		horizontal-align: center;
		margin-top: 45px;

		.EchelonBadge {
			height: 22px;
			img-shadow: 0px 2px 12px black;
		}

		.DifficultyText {
			vertical-align: center;
			horizontal-align: center;
			font-size: 12px;
			color: rgba(245, 245, 245, 0.7);
			width: 100%;
			height: 16px;
			text-align: center;
			margin: 0px 8px;
			text-overflow: shrink;
			text-shadow: 0px 2px 8px black;

			& b {
				color: white;
			}
		}
	}

	.ScoreData {
		flow-children: down;
		horizontal-align: center;
		vertical-align: center;
		width: 120px;

		.ScoreLabel {
			horizontal-align: center;
			color: rgba(255, 255, 255, 0.5);
			text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.6);
			margin-bottom: -5px;
		}

		.ScoreHUD {
			horizontal-align: center;
			font-weight: bold;
			color: white;
			font-size: 21px;
			text-shadow: 0px 0px 12px 0.5 #ffd05a31;
			padding: 0px 12px;

			transition-duration: 0.1s;
			transition-property: transform, brightness, text-shadow;

			.IsAnimatingScore & {
				brightness: 1.5;
				transform: scale3d( 1.08, 1.08, 1 );
				text-shadow: 0px 0px 12px 0.5 #ffd05a99;
				transition-duration: 0.3s;
			}
		}
	}

	.Dash {
		height: 40px;
		width: 1px;
		background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0) ), color-stop( 0.3, rgba(255, 255, 255, 0.1) ), color-stop( 0.7, rgba(255, 255, 255, 0.1) ), to( rgba(255, 255, 255, 0) ) );
		vertical-align: center;

		visibility: visible;

		                
			                    
		    
	}

	.GoldData {
		flow-children: down;
		horizontal-align: center;
		vertical-align: center;
		width: 120px;

		visibility: visible;

		                
			                    
		    

		.GoldLabel {
			horizontal-align: center;
			color: rgba(255, 255, 255, 0.5);
			text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.6);
			margin-bottom: -5px;
		}

		.GoldDataContainer {
			flow-children: right;
			horizontal-align: center;
			
			.GoldHUD {
				horizontal-align: center;
				font-weight: bold;
				font-size: 21px;
				text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
			}

			.GoldIcon {
				width: 22px;
				height: width-percentage(100%);
				img-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
				vertical-align: center;
				opacity-brush: gradient( linear, 0% 10%, 0% 90%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
				                      
				padding: 2px;
				margin-left: -1px;
			}
		}

	}
}

                   
	                     
	                       
	                 
	                 

	                     

	             
		                    
	 

	          
		                  
		                       
		               
		                
		                      
		                                       
	 
    

.BossHealthContainer {
	opacity: 0;
	horizontal-align: center;
	vertical-align: top;
	margin-top: 64px;

	.IsInBossStage:not(.GameState_GoingToBoss) & {
		opacity: 1;
	}

	.BossLabel {
		vertical-align: top;
		horizontal-align: center;
		text-align: center;
		color: white;
		text-shadow: 0px 2px 16px black;
		font-family: titleFont;
		margin-bottom: 8px;
	}

	#BossHealthProgressBar {
		border-radius: 3px;
		height: 20px;
		border: 1px solid rgb(0, 0, 0);
		box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.02);
		width: 600px;
		background-color: rgba(0, 0, 0, 0.96);
		margin-top: 30px;

		.ProgressBarLeft {
			background-color: gradient( linear, 0% 0%, 0% 100%, from( #5CA33C ), to( #3E5F23 ) );
		}
	}

	 .ProgressBarLabel {
		font-size: 14px;
		vertical-align: center;
		horizontal-align: center;
		text-align: center;
		color: white;
		text-shadow: 0px 2px 12px black;
		font-weight: bold;
		letter-spacing: 1px;
		margin-top: 28px;
	}
}

#ArenaSceneContainer {
	width: 100%;
	height: 100%;

	brightness: 1;
	blur: gaussian( 0px );

	opacity: 1;

	.GameState_Setup & {
		opacity: 0;
		transition-duration: 0.5s;
	}

	transition-property: opacity, brightness, blur;
	transition-duration: 0.1s;

	.ShowPowerUpChoices &,
	.GameState_Finished &,
	.DebugFinishedScreen &,
	.IsPaused.UserPaused & {
		brightness: 0.1;
		blur: gaussian( 1px );

		transition-duration: 0.5s;
	}

	#ArenaScene {
		width: 100%;
		height: 100%;
	}
}

.PlayerHudContainer {
	vertical-align: bottom;
	horizontal-align: center;
	flow-children: right;
	height: 200px;
	padding-top: 20px;

	transform: none;
	opacity: 1;
	
	transition-property: transform, opacity;
	transition-duration: 0.7s;
	transition-delay: 0.3s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);                

	.GameState_Setup & {
		transform: translateY(120px);
		                 
	}

	.GameState_Active &, .GameState_ChoosingPowerUp & {
		transform: none;
	}

	transform: translateY(120px);

	                        
		                
	    

	.HudEndCapImage {
		height: HudHeight;
		hue-rotation: -15deg;
		vertical-align: bottom;

		&.Right {
			transform: scaleX( -1 );
		}
	}

	.PlayerExp {
		horizontal-align: center;
		vertical-align: bottom;
		padding-bottom: 8px;
		                         
		margin-right: -34px;
		z-index: 1;

		.GemImage {
			width: 44px;
			height: 44px;
			background-image: url( "file://{images}/events/crownfall/survivors/gem.png" );
			background-size: cover;
			vertical-align: bottom;
			horizontal-align: center;
			transform: translateY( 14px );
		}
	}

	.PlayerExpContainer {
		width: 80px;
		height: width-percentage( 100% );
		padding: 2px;

		                           

		background-color: gradient( linear, 0% 0%, 0% 100%, from( rgb(0, 0, 0) ), to( rgb(23, 30, 37) ) );
		border-radius: 50%;
		box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.4);

		border: 1px solid rgba(255, 255, 255, 0.03);
		border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), to( rgb(255, 255, 255) ) );
	
		#PlayerExpProgressBar {
			border-radius: 3px;
			height: 14px;
			border: 1px solid rgb(0, 0, 0);
			box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.02);
			width: 100px;
			background-color: rgba(0, 0, 0, 0.96);

			visibility: collapse;
		}

		.PlayerExpProgressCircle {
			width: 100%;
			height: 100%;
			border-radius: 50%;
			border: 3px solid rgba(255, 255, 255, 0.03);
		}

		#PlayerExpProgressCircleFilled {
			width: 100%;
			height: 100%;
			border-radius: 50%;
			border: 3px solid white;
			border-brush: gradient( linear, 0% 0%, 0% 100%, from( #ffe89c ), to( #856d20 ) );
		}

		.PlayerExpLevelLabelsContainer {
			flow-children: down;
			horizontal-align: center;
			vertical-align: center;			

			.LevelText {
				horizontal-align: center;
				text-align: center;
				margin-top: -4px;
				margin-bottom: -3px;
				font-size: 20px;
			}

			.GemCounter {
				flow-children: down;
				horizontal-align: center;

				.ExpText {
					horizontal-align: center;
					visibility: collapse;
					text-align: center;
					letter-spacing: 0px;
					vertical-align: center;
					letter-spacing: 0px;
					color: rgba(255, 255, 255, 0.6);
					text-shadow: 0px 2px 8px black;
					                                                        
				}				
			}			
		}
		
		.ExpGemModel {
			width: 80px;
			height: 80px;
		}
	}

	.PlayerHeroPortraitContainer {
		width: HudHeight;
		height: HudHeight;
		vertical-align: bottom;
		background-color: gradient( radial, 50% 50%, 0% 0%, 80% 80%, from( rgb(73, 69, 122) ), to( rgb(6, 7, 30) ) );
		box-shadow: inset 0px 1px 3px rgba(255, 255, 255, 0.01);
		border-top: 1px solid rgba(255, 255, 255, 0.1);

		#HeroPortrait {
			width: 100%;
			height: width-percentage( 133% );
			overflow: noclip;
			margin-top: -10%;
		}

		.WIPLabel {
			horizontal-align: center;
			vertical-align: bottom;
		}
	}

	.PlayerAbilitiesContainer {
		padding: 0px 12px;
		height: 100%;		
		
		.PlayerAbilitiesBackground {
			width: 100%;
			margin-left: -12px;
			margin-right: -12px;
			height: HudHeight;
			vertical-align: bottom;
			background-color: rgba(38, 37, 49, 0.2);
			background-image: url( "file://{images}/events/crownfall/survivors/ability_bg.png" );
			background-size: cover;
			background-position: top;
			box-shadow: inset -1px 0px 0px rgba(255, 255, 255, 0.01);
		}

		.PlayerInnatesAndActiveContainer {
			flow-children: right;
			vertical-align: bottom;
		}

		#PlayerInnateContainer {
			vertical-align: bottom;
			flow-children: right;
			margin-right: -8px;
			margin-bottom: 40px;
			overflow: noclip;
	
			.PlayerInventorySlot {				
				
				margin-right: 8px;
				margin-bottom: 4px;
				padding-bottom: 8px;
				
				tooltip-position: top;
				overflow: noclip;

				.PowerUpLevel {
					opacity: 0;
				}
				
				.PowerUpImageContainer {
					width: 40px;
					height: 41px;
					margin-right: 10px;
					padding: 3px;
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0.7) ), to( rgba(0, 0, 0, 0.6) ) );
					border-radius: 80px;
					border-bottom: 1px solid rgba(255, 255, 255, 0.04);
					
					.PowerUpCooldownContainer {
						width: 100%;
						height: 100%;

						visibility: collapse;

						#PowerUpCooldownProgress {
							width: 100%;
							height: 100%;
							background-color: rgba(0, 0, 0, 0.9);
						}

						.PowerupCooldownLabel {
							horizontal-align: center;
							vertical-align: center;
							color: white;
							text-shadow: 0px 2px 6px 3 black;
							font-size: 25px;
							margin-bottom: 2px;
						}
					}

					.PowerUpImageBorder {
						width: 100%;
						height: 100%;
						border: 0px solid rgba(212, 229, 255, 0.06);
					}
				}

				&.OnCooldown {
					.PowerUpCooldownContainer {
						visibility: visible;
					}
				}
	
				&.EmptySlot {
					#PowerUpImage {
						visibility: collapse;
					}

					.PowerUpLevel {
						visibility: collapse;
					}
				}

				.PowerUpLevel {
					font-size: 12px;
					background-color: gradient( linear, 0% 0%, 0% 100%, from( #00000000 ), to( #000000 ) );
					color: gradient( linear, 0% 35%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #ffc56f ) );
					text-shadow: 0px 1px 4px 3.0 #000000;
					vertical-align: center;
					horizontal-align: center;
					text-align: center;
					padding-top: 3px;
					transform: translate3d(20px, 20px, 0px);
					width: 25px;
					height: 25px;
					z-index: 10;
					background-color: gradient( linear, 0% 70%, 0% 100%, from( rgb(0, 0, 0) ), to( rgb(32, 41, 48) ) );
					border: 2px solid white;
					border-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.4, #ebc386 ), color-stop( 0.6, #BA8C47 ), to( #8d6c3a ) );
					border-radius: 50%;
					overflow: noclip;
				}
			}
		}

		#PlayerActiveContainer {
			vertical-align: bottom;
			flow-children: right;
			margin-right: -8px;
			margin-bottom: 40px;
			overflow: noclip;
	
			.PlayerInventorySlot {				
				
				margin-right: 8px;
				margin-bottom: 4px;
				                          
				padding-top: 10px;
				
				tooltip-position: top;
				overflow: noclip;
				
				.PowerUpImageContainer {
					width: 56px;
					height: 56px;
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0.7) ), to( rgba(0, 0, 0, 0.6) ) );
					border-bottom: 1px solid rgba(255, 255, 255, 0.04);
					box-shadow: inset 0px 1px 6px rgba(0, 0, 0, 0.6);
					padding: 3px;
					
					#PowerUpImage {
						                                
						                                
						                                   
						box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);						
					}

					.PowerUpCooldownContainer {
						width: 100%;
						height: 100%;

						visibility: collapse;

						#PowerUpCooldownProgress {
							width: 100%;
							height: 100%;
							background-color: rgba(0, 0, 0, 0.9);
						}

						.PowerupCooldownLabel {
							horizontal-align: center;
							vertical-align: center;
							color: white;
							text-shadow: 0px 2px 6px 3 black;
							font-size: 20px;
							margin-bottom: 3px;
						}
					}

					.PowerUpImageBorder {
						width: 100%;
						height: 100%;
						border: 1px solid rgba(212, 229, 255, 0.06);
						border-brush: gradient( linear, 0% 0%, 0% 100%, from( #ffffff ), to( #ffffff22 ) );
					}

					.ActiveImageBorder {
						width: 100%;
						height: 100%;
						border: 1px solid rgba(212, 229, 255, 0.06);
						border-brush: gradient( linear, 0% 0%, 0% 100%, from( #ffffff ), to( #ffffff22 ) );
						background-image: url( "file://{images}/hud/reborn/autocastable_ability_border.psd" );
						background-size: 100%;
						visibility: collapse;
					}

					#AutoCasting {
						width: 56px;
						height: 56px;
						transform: scale3d(1.15, 1.15, 1);
						horizontal-align: center;
						vertical-align: center;
						                       
						opacity: 0;

						transition-property: opacity, transform;
						transition-duration: 0.25s;
					}
				}

				.ShardScepterImageContainer {
					horizontal-align: center;
					margin-top: -20px;

					.ShardScepterBackground {
						horizontal-align: center;
						vertical-align: center;
						width: 26px;
						height: width-percentage(100%);
						border-radius: 50%;
						background-color: gradient( linear, 0% 0%, 0% 60%, from( #293542be ), to( #090c10db ) );
						border: 0.5px solid rgba(192, 225, 255, 0.2);
						border-brush: gradient( linear, 0% 0%, 0% 50%, from( white ), to( rgba(255, 255, 255, 0) ) );
						box-shadow: 0px 2px 8px -1px rgba(0, 0, 0, 0.6);

						visibility: collapse;
					}
					
					.AbilityShardScepterImage {
						horizontal-align: center;
						vertical-align: center;
						width: 36px;
						height: width-percentage(100%);
						background-size: cover;
						margin-left: -0.2px;
						img-shadow: 0px 2px 16px black;
					}
					
					visibility: collapse;
				}
				
				&.ScepterUpgrade {
					.ShardScepterImageContainer {
						visibility: visible;

						.AbilityShardScepterImage {
							background-image: url( "file://{images}/hud/reborn/aghs_on_scepter_large.png" );
						}
					}
				}

				&.ShardUpgrade {
					.ShardScepterImageContainer {
						visibility: visible;

						.AbilityShardScepterImage {
							background-image: url( "file://{images}/hud/reborn/aghs_on_shard_large.png" );
						}
					}
				}

				&.ScepterUpgrade.ShardUpgrade {
					.ShardScepterImageContainer {
						visibility: visible;

						.AbilityShardScepterImage {
							background-image: url( "file://{images}/hud/reborn/aghs_on_large.png" );
						}
					}
				}

				&.OnCooldown {
					.PowerUpCooldownContainer {
						visibility: visible;
					}
				}

				&.AbilityActive {
					#AutoCasting {
						opacity: 1;
					}
				}
	
				&.EmptySlot {
					#PowerUpImage {
						visibility: collapse;
					}

					.PowerUpLevel {
						visibility: collapse;
					}
				}

				.PowerUpLevel {
					vertical-align: center;
					horizontal-align: center;
					padding-top: 2px;
					transform: translate3d(20px, 20px, 0px);
					width: 20px;
					height: 20px;
					z-index: 10;

					background-color: gradient( linear, 0% 70%, 0% 100%, from( rgb(0, 0, 0) ), to( rgb(32, 41, 48) ) );
					border: 1px solid rgba(255, 255, 255, 0.6);
					border-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.4, #ebc386 ), color-stop( 0.6, #BA8C47 ), to( #8d6c3a ) );
					border-radius: 50%;
					box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
					
					color: gradient( linear, 0% 35%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #ffc56f ) );
					font-size: 12px;
					text-align: center;
					text-shadow: 0px 1px 4px 3.0 #000000;
				}
			}
		}
	
		.PlayerHealthContainer {
			horizontal-align: center;
			vertical-align: bottom;
			margin-bottom: 12px;
			width: 100%;
		
			#PlayerHealthProgressBar {
				border-radius: 3px;
				height: 24px;
				border: 1px solid rgb(0, 0, 0);
				box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.02);
				width: 100%;
				background-color: rgba(0, 0, 0, 0.94);
		
				.ProgressBarLeft {
					background-color: gradient( linear, 0% 0%, 0% 100%, from( #5CA33C ), to( #3E5F23 ) );

					.DotaSceneContainer {
						width: 100%;
						height: 100%;
						overflow: noclip;

						#HealthBurner {
							width: 100%;
							height: 100%;
						}
					}
				}

				.ProgressBarRight {
					background-color: gradient( linear, 0% 0%, 0% 100%, from( #17200d  ), color-stop( 0.2, #222e13 ), color-stop( .5, #1e2911), to( #17200d) );
				}
			}
		
			 .PlayerHealth {
				vertical-align: center;
				horizontal-align: center;
				text-align: center;
				color: white;
				text-shadow: 0px 1px 8px 2 black;
				font-weight: semi-bold;
				letter-spacing: 1px;
				font-size: 16px;
				transform: translateY( 1px );
			}

			.PlayerHealthRegen {
				color: #5cea57;
				vertical-align: center;
				horizontal-align: right;
				text-align: right;
				font-family: monospaceNumbersFont;
				text-shadow: 0px 1px 8px 2 black;
				font-weight: semi-bold;
				letter-spacing: 1px;
				font-size: 14px;
				margin-right: 8px;
				transform: translateY( 1px );
			}
		}

		.EdgeShadow {
			height: HudHeight;
			width: 12px;
			vertical-align: bottom;
			background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(0, 0, 0, 0.4) ), to( #00000000 ) );
			ignore-parent-flow: true;
			margin-left: -12px;
			border-left: 1px solid rgba(0, 0, 0, 0.3);
		}
	}

	.PlayerItemsContainer {
		width: 200px;
		height: HudHeight;
		vertical-align: bottom;
		background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(22, 27, 37, 0.8) ), to( rgba(0, 0, 0, 1) ) );
		background-image: url( "file://{images}/events/crownfall/survivors/inventory_bg.png" );
		background-size: cover;
		background-position: top;
		background-img-opacity: 0.8;

		#PlayerPassiveContainer {
			flow-children: right-wrap;
			horizontal-align: center;
			vertical-align: center;
	
			.PlayerInventorySlot {
				width: 62px;
				height: width-percentage( 75% );
				tooltip-position: top;
				
				.PowerUpImageContainer {
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0.7) ), to( rgba(0, 0, 0, 0.6) ) );
					box-shadow: inset 0px 1px 0px 2px rgba(0, 0, 0, 0.3);
					border: 1px solid black;
					margin: 3px;
					width: 100%;
					height: 100%;
				}

				&.EmptySlot {
					.PowerUpImageContainer {
						                           
					}

					.PowerUpLevel {
						visibility: collapse;
					}
				}

				.PowerUpLevel {
					vertical-align: bottom;
					horizontal-align: right;
					padding-top: 2px;
					width: 20px;
					height: 20px;
					z-index: 10;

					background-color: gradient( linear, 0% 70%, 0% 100%, from( rgb(0, 0, 0) ), to( rgb(32, 41, 48) ) );
					border: 1px solid rgba(255, 255, 255, 0.6);
					border-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.4, #ebc386 ), color-stop( 0.6, #BA8C47 ), to( #8d6c3a ) );
					border-radius: 50%;
					box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
					
					color: gradient( linear, 0% 35%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #ffc56f ) );
					font-size: 12px;
					text-align: center;
					text-shadow: 0px 1px 4px 3.0 #000000;
				}

				.PowerUpCooldownContainer {
					visibility: collapse;
				}
			}
		}

		.EdgeShadow {
			height: 100%;
			width: 12px;
			background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(0, 0, 0, 0.6) ), to( #00000000 ) );
			border-left: 1px solid rgba(0, 0, 0, 0.6);
		}
	}
}

#AbilityCombinationItemsContainer
{
	width: fit-children;
	height: fit-children;
	flow-children: right;
	horizontal-align: center;
	visibility: collapse;
	margin-bottom: 8px;

	.LabelSmall
	{
		vertical-align: center;
	}

	#AbilityCombinationItems
	{
		height: fit-children;
		width: fit-children;
		flow-children: right;
		margin-left: 8px;

		.RecipeItemImage
		{
			height: 32px;
			width: height-percentage( 125% );
			box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
			margin: 3px;
		}
	}
}

#ItemAffectedAbilitiesOuter
{
	width: 100%;
	height: fit-children;
	flow-children: down;
	horizontal-align: center;
	visibility: collapse;
	margin-top: 12px;
	margin-bottom: 78px;
	ignore-parent-flow: true;
	vertical-align: bottom;
	
	                                                   
	                                                                                                                                               
	background-color: gradient( radial, 50% 0%, 0% 0%, 50% 100%, from( rgba(0, 0, 0, 0.5) ), color-stop( 0.5, rgba(0, 0, 0, 0.3) ), to( rgba(0, 0, 0, 0) ) );

	.ItemAffectedHolder
	{
		flow-children: down;
		horizontal-align: center;
	}

	.BodySmall
	{
		horizontal-align: center;
		color: rgba(239, 246, 255, 0.35);
		opacity: 0.9;
		font-size: 14px;
		                        
		margin: 2px 0px -2px;
		text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
	}

	#ItemAffectedAbilities
	{
		width: fit-children;
		max-width: 95%;
		flow-children: right;
		horizontal-align: center;
		overflow: squish;

		.AbilitySynergyImage
		{
			height: 28px;
			width: height-percentage( 100% );
			box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
			margin: 6px 2px;
		}

		.ItemSynergyImage
		{
			height: 28px;
			width: height-percentage( 125% );
			box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
			margin: 6px 3px;
		}
	}
}

.PowerupExisting #ItemAffectedAbilitiesOuter
{
	margin-bottom: 78px;
}

.ItemCombination #AbilityCombinationItemsContainer
{
	visibility: visible;
}

.HasSynergies #ItemAffectedAbilitiesOuter
{
	visibility: visible;
}

.PlayerLevelUpChoiceWrapper #PlayerLevelUpChoiceContainer .PowerUpChoice.HasSynergies .PowerUpContainer .PowerUpDescription
{
	margin-bottom: 0px;
	ignore-parent-flow: false;
}

.WIPLabel {
	color: magenta;
	font-size: 14px;
	text-shadow: 0px 1px 4px 4 black;
	text-transform: uppercase;
}

.PowerUpBackground {
	           
	.SurvivorsPowerUp_10 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/faceless_void.psd" ); }

	              
	.SurvivorsPowerUp_11 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/storm_spirit.psd" ); }

	         
	.SurvivorsPowerUp_12 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/prophet.psd" ); }

	         
	.SurvivorsPowerUp_13 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/axe.psd" ); }

	           
	.SurvivorsPowerUp_14 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/venomancer.psd" ); }

	            
	.SurvivorsPowerUp_15 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/vengeful_spirit.psd" ); }

	                    
	.SurvivorsPowerUp_16 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/ancient_apparition.psd" ); }

	          
	.SurvivorsPowerUp_17 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/lina.psd" ); }

	            
	.SurvivorsPowerUp_18 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/tinker.psd" ); }

	            
	.SurvivorsPowerUp_19 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/beastmaster.psd" ); }

	           
	.SurvivorsPowerUp_120 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/queenofpain.psd" ); }

	            
	.SurvivorsPowerUp_21 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/batrider.psd" ); }

	             
	.SurvivorsPowerUp_210 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/nightstalker.psd" ); }

	                
	.SurvivorsPowerUp_102 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/antimage_persona.psd" ); }

	             
	.SurvivorsPowerUp_130 & { background-image: url( "file://materials/portraits_card/portrait_backgrounds/huskar.psd" ); }
}

.PlayerLevelUpChoiceWrapper {
	horizontal-align: center;
	vertical-align: middle;
	flow-children: down;
	margin-bottom: 100px;

	transition-property: opacity, transform;
	transition-duration: 0.25s;

	opacity: 0;	
	transform: scale3d( 1.1, 1.1, 1 );
	transition-timing-function: ease-out, cubic-bezier(0, 0.9, 0, 0.9);                

	.ShowPowerUpChoices & {
		transform: none;
		opacity: 1;

		transition-duration: 0.1s;
		transition-timing-function: ease-in;
	}

	.LevelUpTitle {
		width: 100%;
		color: white;
		text-shadow: 0px 3px 12px black;
		text-align: center;
		z-index: 1;
		visibility: collapse;
	}
	
	.RerollButton {
		.RerollButtonActive & {
			brightness: 2.0;
		}
	}

	#PlayerLevelUpChoiceContainer {	
		flow-children: right;
		padding: 0px 48px;

		#PowerUp1 {
			.PowerUpChoiceRerolling & {
				animation-name: RerollPowerup1, RerollPowerupFade;
			}
		}

		#PowerUp2 {
			.PowerUpChoiceRerolling & {
				animation-name: RerollPowerup2, RerollPowerupFade;
			}
		}
	
		.PowerUpChoice {
			padding: 20px 24px 0px;
			margin: 0px -4px;

			.PowerUpChoiceRerolling & {
				animation-name: RerollPowerup0, RerollPowerupFade;
				animation-duration: 0.6s, 0.3s;
				animation-iteration-count: 1;
			}

			.HeroImageContainer {
				visibility: collapse;
				horizontal-align: center;
				width: 132px;
				z-index: 1;

				transition-property: transform;
				transition-duration: 0.1s;
				transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                

				.ActorShadow {
					horizontal-align: center;
					vertical-align: bottom;
					transform: translateY( 15% );
					opacity: 0.4;
				}

				.ActorBackground {
					width: 50%;
					height: width-percentage( 100% );
					background-color: rgb(6, 10, 15);
					horizontal-align: center;
					vertical-align: bottom;
					transform: rotateZ( 45deg ) translateY( -16px );
				}

				.ActorBorderUnder,
				.ActorBorderOver {
					width: 100%;
					vertical-align: bottom;
				}

				#HeroImage {
					width: 100%;
					height: width-percentage( 112.5% );
					opacity-mask: url( "file://{images}/events/crownfall/visual_novel/portrait_mask.png" );
				}
			}

			.ShardScepterImageContainer {
				horizontal-align: center;
				margin-top: -38px;
				margin-bottom: -8px;
				z-index: 1;
				overflow: noclip;
				ui-scale: 130%;

				.ShardScepterParticles {
					width: 240%;
					height: 240%;
					overflow: noclip;
					horizontal-align: center;
					vertical-align: center;
					opacity-mask: url( "file://{images}/masks/sun_burst.png" );
				}

				.AbilityShardScepterImage {
					horizontal-align: center;
					vertical-align: center;

					width: 72px;
					height: width-percentage( 100% );
					background-size: cover;
					img-shadow: 0px 4px 16px rgba(0, 0, 0, 0.6);
					margin-right: 1px;
				}

				visibility: collapse;
			}
			
			.PowerUpContainer {
				width: 100%;		
				width: 250px;
				height: 480px;
				margin: 92px 0px 45px;
				flow-children: down;
				horizontal-align: center;				
	
				background-color: gradient( linear, 0% 0%, 0% 100%, from( #977b51 ), to( #2e261b ) );
				box-shadow: 0px 8px 80px -6px rgba(0, 0, 0, 0.6);

				transition-property: background-color, box-shadow;
				transition-duration: 0.2s;
				transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                
	
				.HeroName {
					visibility: collapse;
				}

				.PowerUpBackground {
					width: 100%;
					height: 100%;
					transform: scale3d( 1.1, 1.1, 1 );
					ignore-parent-flow: true;
					blur: gaussian( 12px );
					opacity: 0.15;
					saturation: 1.1;
					background-size: cover;
					background-position: center;
				}

				.PowerupLabel {
					width: 100%;
					background-color: rgba(0, 0, 0, 0.4);
					padding: 24px 8px 8px;
					border-bottom: 1px solid rgba(0, 0, 0, 0.2);
					color: rgba(236, 246, 255, 0.8);
					text-shadow: 0px 1px 6px black;
					font-size: 18px;
					font-weight: semi-bold;

					text-align: center;
				}

				.ScepterLabel,
				.ShardLabel {
					width: 100%;
					
					background-color: rgba(0, 0, 0, 0.7);
					padding: 16px 8px 40px;
					border-bottom: 1px solid rgba(0, 0, 0, 0.2);
					color: rgb(181, 214, 243);
					font-weight: semi-bold;
					font-family: titleFont;
					font-size: 12px;
					text-shadow: 0px 1px 6px black;
					text-align: center;

					visibility: collapse;
				}

				.PowerupTexture {
					ignore-parent-flow: true;
					width: 100%;
					height: 100%;
					-s2-mix-blend-mode: multiply;
				}
	
				.AbilityImageContainer {
					margin-top: 16px;

					horizontal-align: center;
					padding: 5px;
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0.6) ), to( rgba(0, 0, 0, 0.4) ) );
					border-bottom: 1px solid rgba(255, 255, 255, 0.02);
					box-shadow: inset 0px 1px 6px rgba(0, 0, 0, 0.6);

					#AbilityImage {
						height: 92px;
						width: height-percentage( 125% );
						box-shadow: 0px 2px 8px -1px rgba(0, 0, 0, 0.6);
					}

					.AbilityImageShine {
						width: 100%;
						height: 100%;
						background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0.01) ), to( rgba(255, 255, 255, 0) ) );
						border: 1px solid white;
						border-brush: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0.04) ), to( rgba(255, 255, 255, 0.02) ) );
					}
				}
	
				.AbilityName {
					margin: 12px 0px 10px;
					horizontal-align: center;

					text-align: center;
					color: rgba(245, 245, 245, 0.96);
					font-family: titleFont;
					text-transform: uppercase;
					font-weight: semi-bold;
					font-size: 18px;
					line-height: 1.3;
					letter-spacing: 1px;
					text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
				}
	
				.PowerUpDescription {
					width: 100%;
					horizontal-align: center;
					padding: 0px 12px;
					ignore-parent-flow: true;
					vertical-align: bottom;
					margin-bottom: 80px;
					margin-top: 8px;
					line-height: 1.2;
					max-height: 66px;
					text-overflow: shrink;

					color: rgba(239, 246, 255, 0.35);
					text-align: center;
					font-size: 14px;
					text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.8);
				}
		
				.MajorUpgrade {
					horizontal-align: center;
					width: 100%;
					text-align: center;
		
					visibility: collapse;
				}

				.LevelUpgradeInfo {
					horizontal-align: center;
					vertical-align: bottom;
					text-align: center;
					ignore-parent-flow: true;
					width: 100%;
					padding: 12px 12px 36px;
					margin: 0px 16px;

					color: gradient( linear, 0% 50%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
					font-family: titleFont;
					font-size: 26px;
					text-shadow: 0px 2px 12px rgba(0, 0, 0, 1);
					text-overflow: shrink;

					visibility: collapse;
				}

				.NewPowerup {
					horizontal-align: center;
					vertical-align: bottom;
					ignore-parent-flow: true;
					margin-bottom: 32px;
					height: fit-children;
					width: fit-children;

					visibility: collapse;
					
					.NewPowerupBadge {
						height: 46px;
						horizontal-align: center;
						vertical-align: center;
						padding: 12px;
						img-shadow: 0px 2px 12px black;
					}
					
					Label {
						width: 64px;
						horizontal-align: center;
						vertical-align: center;
						margin-bottom: 3px;
						
						letter-spacing: 0.5px;
						font-weight: bold;
						text-overflow: shrink;
						text-align: center;
						color: black;
						text-shadow: 0px 1px 1px rgba(255, 255, 255, 0.1);
					}
				}
		
				#TooltipVariableLines {
					flow-children: down;
					horizontal-align: center;
					width: 100%;
					border-bottom: 1px solid rgba(255, 255, 255, 0.02);
					border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.2, white ), color-stop( 0.8, white ), to( rgba(255, 255, 255, 0) ) );
					
					.TooltipVariableLine {
						width: 100%;
						horizontal-align: left;
						padding: 2.5px 16px 3.5px;
						margin-bottom: -1px;
						border-top: 1px solid rgba(255, 255, 255, 0.02);
						border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.2, white ), color-stop( 0.8, white ), to( rgba(255, 255, 255, 0) ) );

						.TooltipVariable {
							horizontal-align: center;
							text-align: center;
							color: rgba(239, 246, 255, 0.7);
							font-family: titleFont;
							font-size: 15px;
							text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.8);
							height: 21.5px;
							text-overflow: shrink;

							b {
								color: cf_brightgreen;
							}
						}

						&.PhysicalDamage {
							background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, rgba(192, 23, 40, 0.3) ), to( rgba(255, 255, 255, 0) ) );
						}

						&.MagicalDamage {
							background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, rgba(82, 118, 248, 0.3) ), to( rgba(255, 255, 255, 0) ) );
						}
					}
				}

				#AttributeDescriptionLines {
					flow-children: down;
					horizontal-align: center;
					width: 100%;
					border-bottom: 1px solid rgba(255, 255, 255, 0.02);
					border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.2, white ), color-stop( 0.8, white ), to( rgba(255, 255, 255, 0) ) );
					
					visibility: collapse;

					.AttributeDescriptionLine {
						width: 100%;
						horizontal-align: center;
						flow-children: down;
						border-top: 1px solid rgba(255, 255, 255, 0.02);
						padding: 4px 32px 5px;
						margin-bottom: -1px;
						border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.2, white ), color-stop( 0.8, white ), to( rgba(255, 255, 255, 0) ) );
						
						#AttributeDetails {
							horizontal-align: center;
							text-align: center;
							color: rgba(239, 246, 255, 0.8);
							font-family: titleFont;
							font-size: 15px;
							text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.8);
							text-overflow: shrink;

							b {
								color: cf_brightgreen;
								                   
							}
						}

						&.PhysicalDamage {
							background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, rgba(192, 23, 40, 0.3) ), to( rgba(255, 255, 255, 0) ) );
						}

						&.MagicalDamage {
							background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, rgba(82, 118, 248, 0.3) ), to( rgba(255, 255, 255, 0) ) );
						}
					}
				}
			}

			.PowerUpContainerBorder {
				width: 100%;
				height: 100%;
				margin: 92px 0px 45px;
				border: 1px solid rgba(255, 255, 255, 0.8);
				border-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #DDAF6B ), color-stop( 0.52, #674108 ), to( #A27531 ) );

				transition-property: border, transform;
				transition-duration: 0.1s;
				transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                
			}
	
			#ChooseButton {
				ui-scale: 85%;
				width: 78%;
				horizontal-align: center;
				vertical-align: bottom;
			}

			.ControlKey {
				vertical-align: top;
				horizontal-align: right;
				ignore-parent-flow: true;
				margin: 8px;
				box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.484);
			}
		}

		.PowerUpChoice.PowerupExisting {
			.LevelUpgradeInfo {
				visibility: visible;
			}

			#TooltipVariableLines {
				visibility: collapse;
			}

			#AttributeDescriptionLines {
				visibility: visible;
			}
		}

		.PowerUpChoice.PowerupNew {
			.NewPowerup {
				visibility: visible;
			}
		}
	
		.PowerUpChoice.HasHero {
			.HeroImageContainer {
				visibility: visible;
			}

			.PowerUpContainer {
				height: 600px;
			}

			.PowerupLabel {				
				padding: 56px 8px 8px;
				color: rgba(236, 246, 255, 0.5);
				font-size: 14px;
				font-weight: normal;

				text-align: center;

				visibility: collapse;
			}

			.AbilityImageContainer {
				margin-top: 64px;
			}

			.PowerUpContainer {
				background-color: gradient( linear, 0% 0%, 0% 100%, from( #2b3a4b ), to( #0d1321 ) );

				#AbilityImage {
					height: 88px;
					width: height-percentage( 100% );
				}
			}
		}

		.PowerUpChoice.ScepterUpgrade,
		.PowerUpChoice.ShardUpgrade {
			padding: 20px 12px 0px;

			.PowerUpContainer {
				background-color: gradient( linear, 0% 20%, 0% 100%, from( #1b2230 ), to( #245f9e ) );
			}

			.PowerUpContainerBorder {
				border-brush: gradient( linear, 0% 0%, 0% 100%, from( #c2e8ff ), color-stop( 0.48, #6ca1f5 ), color-stop( 0.52, #1148a7 ), to( #2e67b1 ) );
			}

			.AbilityImageContainer {
				margin-top: 16px;
			}

			.PowerUpBackground {
				visibility: collapse;
			}

			.PowerUpContainer {
				width: 220px;
				height: 480px;

				#AbilityImage {
					height: 64px;
				}
			}

			.AbilityName {
				margin: 8px 0px 4px;
				font-size: 16px;
			}

			#ItemAffectedAbilitiesOuter {
				margin-bottom: 36px;
			}

			.LevelUpgradeInfo,
			.HeroImageContainer,
			.PowerupLabel {
				visibility: collapse;
			}

			.PowerUpDescription {
				ignore-parent-flow: false;
				margin-bottom: 0px;
				color: rgba(239, 246, 255, 0.6);
				font-family: titleFont;
				font-size: 14px;
				line-height: 1.3;
				text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.8);

				& b {
					color: cf_brightgreen;
				}
			}

			.ShardScepterImageContainer {
				visibility: visible;
			}
		}

		.PowerUpChoice.ScepterUpgrade {
			.AbilityShardScepterImage {
				background-image: url( "file://{images}/hud/reborn/aghs_on_scepter_large.png" );
			}
			.ScepterLabel {
				visibility: visible;
			}
		}

		.PowerUpChoice.ShardUpgrade {
			.AbilityShardScepterImage {
				background-image: url( "file://{images}/hud/reborn/aghs_on_shard_large.png" );
			}
			.ShardLabel {
				visibility: visible;
			}
		}
	
		.PowerUpChoice.PowerUpSelected {
			.PowerUpContainer {
				                                                                                           

				animation-name: BounceFocusPowerup;
				animation-duration: 0.2s;
				animation-iteration-count: 1;
			}

			.PowerUpContainerBorder {
				width: 100%;
				height: 100%;
				border: 4px solid white;
				transform: scale3d( 1.03, 1.01, 1 );

				animation-name: BounceFocusPowerup;
				animation-duration: 0.2s;
				animation-iteration-count: 1;

				.RerollButtonActive & {
					border: 1px solid rgba(255, 255, 255, 0.8);
					transform: scale3d( 1, 1, 1 );
				}
			}

			.HeroImageContainer {
				transform: translateY( -2px );
			}			
		}
	}
	
	#PlayerLevelUpActionsContainer {
		horizontal-align: center;	
		opacity: 0;
		margin-top: 4px;
	
		.ShowPowerUpChoices.HasRerollsLeft & {
			opacity: 1;
		}
	}
}

@keyframes 'BounceFocusPowerup' {
    0% {
        pre-transform-scale2d: 1;
    }
    20% {
		pre-transform-scale2d: 1.03;
    }
	100% {
        pre-transform-scale2d: 1;
    }
}

@keyframes 'RerollPowerup0' {
    0% {
		                                   
		transform: translateY( -24px );
    }
	30% {
		                                  
		transform: translateY( 12px );
    }
	60% {
        transform: none;
    }
}

@keyframes 'RerollPowerup1' {
    20% {
		                                   
		transform: translateY( -24px );
    }
	50% {
		                                  
		transform: translateY( 12px );
    }
	80% {
        transform: none;
    }
}

@keyframes 'RerollPowerup2' {
    40% {
		                                   
		transform: translateY( -24px );
    }
	70% {
		                                  
		transform: translateY( 12px );
    }
	100% {
        transform: none;
    }
}

@keyframes 'RerollPowerupFade' {
    0% {
		opacity: 0;
    }
	100% {
		opacity: 1;
    }
}

@keyframes 'GlowPowerup' {
    0% {
		box-shadow: 0px 0px 48px #FFDA8F00;
	}
    100% {
		box-shadow: 0px 0px 48px #FFDA8F11;
    }
}

.PlayerAttributesGroup {
	vertical-align: center;
	height: 100%;

	transition-property: opacity, transform;
	transition-duration: 0.25s;
	transition-delay: 0.3s;
	
	opacity: 0;	
	                                     
	transition-timing-function: ease-out, cubic-bezier(0, 0.9, 0, 0.9);                

	horizontal-align: right;

	.MinimapRight & {
		horizontal-align: left;
	}
	
	.ShowPowerUpChoices &,
	.IsPaused:not(.ShowVisualNovel) & {
		transform: none;
		opacity: 0.9;

		transition-duration: 0.1s;
		transition-timing-function: ease-in;
		transition-delay: 0s;
	}

	.AttributesShadow {
		width: 400px;
		height: 100%;
		vertical-align: center;
		ignore-parent-flow: true;
		overflow: noclip;
		z-index: -1;
		background-color: gradient( radial, 0% 50%, 0% 0%, 100% 50%, from( rgba(0, 0, 0, 0.9) ), color-stop( 0.6, rgba(0, 0, 0, 0.75) ), to( rgba(0, 0, 0, 0) ) );
		blur: gaussian( 12px );
		opacity: 0.5;

		transform: scaleX( -1 );

		.MinimapRight & {
			transform: scaleX( 1 );
		}
	}

	#PlayerAttributesContainer {
		flow-children: down;
		vertical-align: center;
		horizontal-align: right;
		margin: 0px 40px;
		                         

		visibility: collapse;                                                    

		.MinimapRight & {
			horizontal-align: left;
		}
		
		.PlayerAttribute {
			margin-bottom: 3px;
			flow-children: right;

			Label {
				font-size: 14px;
				color: rgba(255, 255, 255, 0.8);
				text-shadow: 0px 2px 6px black;
				vertical-align: center;
			}
				
			.LeftSide {
				flow-children: right;
				width: 170px;
				height: 28px;
				background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), to( rgba(255, 255, 255, 0.018) ) );
				border: 1px solid rgba(255, 255, 255, 0.04);
				border-right: 0px;
				border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), to( white ) );
				
				.AttributeIcon {
					width: 14px;
					height: 14px;
					padding: 1px;
					margin-right: 3px;
					vertical-align: center;
					
					visibility: collapse;
				}
				
				.AttributeName {
					width: fill-parent-flow(1);
					                             
					                        
					height: 16px;
					letter-spacing: -0.2px;
				}
	
				.AttributeValue {
					text-align: right;
					margin-right: 6px;
					letter-spacing: 1px;
				}
			}
	
			.ItemContainer {
				height: 28px;
				width: height-percentage( 150% );
				background-color: rgba(0, 0, 0, 0.1);
				border: 1px solid rgba(255, 255, 255, 0.2);
				border-brush: gradient( linear, 0% 0%, 0% 100%, from( white ), to( rgba(255, 255, 255, 0.7) ) );
				box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.112);
			}

			.AttributeBuffContainer {
				height: 100%;
				width: 60px;
				background-color: gradient( linear, 0% 0%, 100% 0%, from( cf_brightgreen&09 ), to( cf_brightgreen&00 ) );
				border: 1px solid cf_brightgreen&44;
				border-brush: gradient( linear, 0% 0%, 100% 0%, from( white ), to( rgba(255, 255, 255, 0) ) );
				border-left: 0px;
				visibility: collapse; 

				.AttributeBuffValue {
					margin-left: 8px;
					color: cf_brightgreen;
				}
			}
	
			&.HasBonus  {
				.AttributeBuffContainer {
					visibility: visible;
				}
			}
		}
	}
}

.DebugContainer {
	visibility: collapse;
	horizontal-align: right;
	vertical-align: center;
	padding: 8px;
	ignore-parent-flow: true;

	background-color: rgba(113, 138, 163, 0.938);
	flow-children: down;

	max-width: 160px;

	.DebugSection {
		border: 1px solid black;
		padding: 4px;
		margin-top: 4px;
	}

	.DebugColumn {
		flow-children: down;
	}

	.DebugRow {
		flow-children: down;
		margin-top: 6px;
		width: 100%;
	}

	.ShowCheats & {
		visibility: visible;
	}

	Button {
		padding: 4px;
		background-color: darkslategray;
		margin: 2px;

		Label {
			font-size: 12px;
		}
	}

	DOTASettingsCheckbox {
		Label {
			font-size: 13px;
			color: whitesmoke;
		}
	}

	DropDown {
		height: 26px;
		width: 150px;
		padding: 2px;
		border-width: 1px;
		margin-bottom: 4px;

		Label {
			font-size: 12px;
		}
	}

	#TotalEnemiesDebugLabel, #TotalSpawnersDebugLabel {
		font-size: 12px;
		margin: 4px;
		color: white;
	}
}

.DebugTimelineControlsContainer {
	width: 1100px;
	height: 40px;
	border: 1px solid black;
	background-color: #651d72;
	horizontal-align: center;
	vertical-align: bottom;
	margin:10px;
	flow-children: down;

	.TimelineContainer {
		horizontal-align: center;
		width: 1000px;

		.HorizontalSlider {
			margin:2px;
			vertical-align: top;
			margin-top: 0;
			width: 100%;
		}
	}

	.Row {
		width: 100%;
		flow-children: right;
		.RowRight {
			horizontal-align: right;
			flow-children: right;
		}
	}

	.DebugButton {
		background-color: #b263df;
		border: 1px solid white;
		margin: 2px;
		padding: 2px;
		padding-left: 5px;
		padding-right: 5px;

		Label {
			color: black;
			letter-spacing: 1px;
		}

		&:hover {
			brightness: 1.5;
		}

		&:active {
			brightness: 0.3;
		}
	}
}

           
	                        
	                    
	                    
	                
	                    

	                                        
	                          
	                       
	                                                     

	           
	                              
	
	                     
		           
		                
	 

	                 
	              
		             
	 

	                  
		                    
	 

	              
		                    
	 

	            
		                         
		                       
		                    
		                

		       
			                         
			                   
			             
		 
		
		             
			                    
			                                
		 
		
		             
			                      
			                
			                                                 
		 
	 
    

.KeyArtContainer {
	width: 100%;
	height: 100%;
	margin: 1px;
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #2C1E5A ), to( #060724 ) ) );
	
	.KeyArtTempLabel {
		margin: 16px;
		color: magenta;
		
		visibility: collapse;
	}
	
	.KeyArtImage {
		width: 100%;
		height: 100%;
		opacity-brush: gradient( linear, 80% 0%, 100% 0%, from( white ), to( #FFFFFF00 ) ) );

		transition-property: blur, opacity, transform;
		transition-duration: 0.4s;
		transition-timing-function: ease-in-out;

		.ShowHeroScreen & {
			blur: gaussian( 5px );
			transform: translateX( -24px );
		}

		.ShowDifficultyScreen & {
			blur: gaussian( 5px );
			transform: translateX( -48px );
		}
	}

	transition-property: opacity, brightness;
	transition-duration: 0.4s;

	opacity: 0;

	.ShowHeroScreen & {
		brightness: 0.3;
	}

	.GameState_Setup & {
		opacity: 1;
	}
}

.SetupScreenInnerBorder {
	border: 1px solid rgba(255, 255, 255, 0.02);
	width: 100%;
	height: fill-parent-flow(1);
	ignore-parent-flow: true;
}

.SetupScreen {
	width: 100%;
	height: 100%;

	opacity: 0;
	transform: none;

	transition-property: transform, opacity;
    transition-duration: 0.15s;
    transition-delay: 0s;
    transition-timing-function: cubic-bezier(1, 0, 1, 1);               

	.GameState_Setup & {
		opacity: 1;
	}

	.ShowHeroScreen & {
		opacity: 0;
		transform: translateX( -160px );

        transition-duration: 0.4s;
        transition-delay: 0.2s;
        transition-timing-function: cubic-bezier(0, 1, 0, 1);                

        sound: "ui_loadout_slide_in";
	}

	.GameState_Active & {
		opacity: 0;
	}

	.SetupScreenLeftCol {
		width: 56%;
		height: 100%;
	}

	.SetupScreenMenu {
		flow-children: down;
		vertical-align: middle;
		horizontal-align: right;
		width: 780px;
		margin-bottom: 140px;
		
		.Maximized & {
			margin-right: 6%;			
		}

		.MinigameLogoEn,
		.MinigameLogoCn {
			horizontal-align: center;
			margin-bottom: -30px;
			width: 100%;
		}
		
		.MinigameLogoCn {
			visibility: collapse;
			width: 90%;
		}
		
		.Language_schinese & {
			.MinigameLogoEn {
				visibility: collapse;
			}
			.MinigameLogoCn {
				visibility: visible;
			}
		}

		.PlaySectionContent {
			margin: 0px 18%;
			flow-children: right;
		
			.GameIntroDescription {
				width: 100%;
				text-align: center;
				margin-bottom: 32px;
				color: whitesmoke;
				text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.6);
			}
		
			.PlaySectionHeader {
				width: 100%;
				margin-bottom: 8px;
			}
		
			.PlaySectionCol {
				width: fill-parent-flow( 1 );
				flow-children: down;
	
				&.Left {
					margin-right: 8px;
				}
	
				&.Right {
					margin-left: 8px;
				}
			}			
		
			.HowToPlaySection {
				width: 100%;
				flow-children: down;
				margin-bottom: 12px;
				padding-bottom: 12px;
		
				                                                      
				                                                                                                                           
		
				.HowToPlayDescription {
					font-size: 16px;
					line-height: 1.2;
		
					b {
						font-weight: bold;
						font-size: 16px;
					}
				}
		
				.DescriptionContainer {
					flow-children: down;
					vertical-align: center;
					margin-bottom: 8px;
					padding-right: 16px;
		
					.SubHeader {
						color: LightestGrey;
						text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.5);
					}
				
					.Details {
						color: LightGrey;
						text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.5);
					}
				}
			}
		
			.LeaderboardContainer {
				margin: 0px;
		
				.LeaderListHeader {
					flow-children: right;
		
					.LeaderListHeaderLabel {
						width: fill-parent-flow( 1 );
					}
		
					.LeaderListHeaderLabel,
					.LeaderListHeaderScore {
						color: rgba(241, 249, 255, 0.5);
						text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
					}
				}
			}
		
			.RewardsSection {
				visibility: collapse;
				flow-children: down;
				width: 100%;
				margin-bottom: 12px;
				visibility: collapse;
		
				.RewardRow {
					flow-children: right;
					width: 100%;
					margin-bottom: 2px;
					visibility: collapse;

					&.HasReward
					{
						visibility: visible;
					}
		
					&.Unlocked {
						brightness: 0.1;
					}
		
					.RewardScore {
						width: 80px;
						vertical-align: middle;
						text-align: left;
						font-weight: bold;
					}
		
					.RewardValue {
						flow-children: right;
						width: 100%;
						vertical-align: middle;
		
						DOTACrownfallToken {
							width: 38px;
							                    
						}
					}
				}
			}
		}
	}

	.BottomButtons {
		flow-children: right;
		horizontal-align: center;
		vertical-align: bottom;


		padding-bottom: 40px;

		.Loading {
			flow-children: right;
			vertical-align: bottom;
			margin-bottom: 38px;
			margin-right: 8px;
			margin-left: 8px;

			visibility: collapse;

			.IsLoading & {
				visibility: visible;
			}

			.Spinner {
				vertical-align: middle;
				margin-right: 8px;
			}

			> Label {
				vertical-align: middle;
				text-transform: uppercase;
				color: white;
				letter-spacing: 2px;
				font-size: 20px;
			}
		}

		DOTACrownfallButton {
			min-width: 300px;
		}

		.IsLoading & .StartGameButton {
			visibility: collapse;
		}
	}

	.ExitButton {
		visibility: collapse;

		ignore-parent-flow: true;
		horizontal-align: center;
		vertical-align: bottom;
		width: 460px;
		padding: 10px 0px 16px;
		text-align: center;
		border-top: 1px solid rgba(255, 255, 255, 0.1);
		border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, white ), to( rgba(255, 255, 255, 0) ) );
		background-color: gradient( radial, 50% 0%, 0% 0%, 50% 100%, from( rgb(13, 11, 33) ), to( rgba(0, 0, 0, 0) ) );

		transition-property: brightness;
		transition-duration: 0.1s;

		&:hover {
			brightness: 2;
		}

		.PlayedOnce & {
			visibility: visible;
		}
	}
}

.ControlKey {
	horizontal-align: center;
	margin: 3px;
	animation-name: none;
	ui-scale: 84%;
	
	                
	.Up {
		background-image: url("file://{images}/control_icons/24px/arrow_up.svg");
	}
	.Down {
		background-image: url("file://{images}/control_icons/24px/arrow_down.svg");
	}
	.Forward {
		background-image: url("file://{images}/control_icons/24px/arrow_right.svg");
	}
	.Back {
		background-image: url("file://{images}/control_icons/24px/arrow_left.svg");
	}
	.Space {
		background-image: url("file://{images}/control_icons/24px/space.svg");
	}
}

.ControlDescriptionBlock {
	width: 100%;
	flow-children: right;
	padding-right: 16px;

	.OrSeparator {
		vertical-align: center;
		margin: 0px 12px;
		color: LightGrey;
		text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.5);
	}

	.SubHeader {
		color: LightestGrey;
		text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.5);
	}

	.Details {
		color: LightGrey;
		text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.5);
	}

	.KeysColumn {
		flow-children: down;		
	}

	.KeysRow {
		flow-children: right;		
	}

	.ControlMouse {
		vertical-align: center;

		.MouseButton {
			vertical-align: center;
			horizontal-align: center;
			min-width: 60px;
			min-height: 60px;
		}
		.MOUSE1,
		.MOUSE2,
		.MOUSE3
		{
			height: 45px;
			width: 45px;
			vertical-align: middle;
			background-size: contain;
			background-position: center;
			background-repeat: no-repeat;	
		}
		.MOUSE1 {
			background-image: url( "file://{images}/events/crownfall/shmup/mouse_leftclick.png" );
		} 
		.MOUSE2 {
			background-image: url( "file://{images}/events/crownfall/shmup/mouse_rightclick.png" );
		}
		.MOUSE3 {
			background-image: url( "file://{images}/events/crownfall/shmup/mouse_middleclick.png" );
		}
	}

	
}

.GamepadContainer {
	flow-children: right;
	tooltip-position: top;
	margin-top: 16px;

	.GamepadIcon {
		height: 24px;
		width: 24px;
		opacity-brush: gradient( linear, 0% 10%, 0% 90%, from( white ),to( rgb(45, 59, 79) ) );
		img-shadow: 0px 1px 4px rgba(0, 0, 0, 0.8);
		vertical-align: center;
	}
	
	.GamepadLabel {
		color: LightGrey;
		margin-left: 6px;
		vertical-align: center;
		text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.5);
		margin-bottom: 2px;
	}
}

.GoldHeader {
	text-transform: uppercase;
	text-overflow: shrink;
	letter-spacing: 2px;
	color: gradient( linear, 0% 20%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
	text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.6);
	margin-bottom: 4px;
	font-weight: semi-bold;
	font-size: 22px;
}

.PatchNotesButtonContainer {
	flow-children: right;
	tooltip-position: top;
	margin-top: 16px;
	.PatchNotesButton {
		.PatchNotesButtonLabel {
			font-size: 14px;
		}
	}
}

.PatchNotesMenu {
	flow-children: down;
	vertical-align: middle;
	horizontal-align: left;
	width: 780px;
	margin-bottom: 140px;
	margin-left: 40px;
	opacity: 0;
	background-color: #000000ee;
	padding: 12px;
	overflow: clip scroll;

	.LabelLarge {
		color: white;
		margin-top: 12px;
	}

	.LabelMedium {
		color: white;
		margin-top: 8px;
	}

	.LabelSmall {
		margin-top: 4px;
		text-transform: none;
	}
}

.ShowPatchNotes {
	.PatchNotesMenu {
		opacity: 1;
	}
}

.MetaProgressionSelection {	
	.UpgradesSection {
		width: 100%;
		height: 100%;
		flow-children: down;
		background-color: gradient( linear, 0% 0%, 0% 100%, from( charcoalLight ), to( charcoalDark ) );
	
		#MetaUpgradesContainer {
			flow-children: down;
			width: 100%;
			overflow: clip scroll;
			height: fill-parent-flow(1);
			padding: 20px 0px;
	
			.MetaUpgradeAttributeRow {
				width: fill-parent-flow(1);
				horizontal-align: center;
				flow-children: right;
				margin: 0px 20px;
			}
	
			.MetaUpgradeAttribute {
				width: fill-parent-flow(4);
				flow-children: down;
				min-height: 200px;

				background-color: #0008;
				background-color: gradient( linear, 0% 0%, 0% 100%, from( rgb(61, 73, 90) ), to( rgb(38, 50, 67) ) );
				border: 1px solid rgba(194, 224, 255, 0.06);
				box-shadow: 0px 3px 12px -1px rgba(0, 0, 0, 0.3);
		
				transition-property: background-color;
				transition-duration: 0.1s;
				margin: 4px;

				#FilterTokenIcon {
					flow-children: right;
					height: 14px;

					horizontal-align: center;
					
					.LabelSmall {
						letter-spacing: normal;
						font-size: 11px;
						vertical-align: middle;
					}

					.Checkbox {
						width: 14px;
						height: 14px;
						border: 1px solid rgba(194, 224, 255, 0.1);
						margin-left: 2px;
					}

					&.Filtered
					{
						.Checkbox {
							background-image: url('file://{images}/control_icons/check_shadow.png');
							background-repeat: no-repeat;
							background-position: 45% 55%;
							background-size: 75% 75%;

							wash-color: rgba(194, 224, 255, 0.8);
						}
					}
				}

				.MetaUpgradeAttributeContainer {
					padding: 8px 8px;
					height: 100%;
					width: 100%;
					flow-children: down;

					#UpgradePipsContainer {
						width: 55%;
						flow-children: right;
						horizontal-align: center;
						margin-top: 3px;

						.UpgradePipOuter {
							width: fill-parent-flow(1);

							.UpgradePip {
								horizontal-align: center;
								background-color: gradient( linear, 0% 0%, 0% 100%, from( charcoalDark ), to( charcoalDark&99 ) );
								box-shadow: inset 0px 1px 4px rgba(0, 0, 0, 0.2);
								width: 10px;
								height: 10px;
							}

							&.Upgraded .UpgradePip {
								background-color: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #ffc56f ) );
								box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);
							}

							&.Focused .UpgradePip {
								background-color: cf_brightgreen;
								border: 1px solid rgba(255, 255, 255, 0.1);						

								animation-name: UpgradePipGlow;
								animation-duration: 0.5s;
								animation-iteration-count: infinite;
								animation-direction:alternate;
							}
						}
					}

					.AttributeName {
						text-overflow: shrink;
						text-align: center;
						width: fill-parent-flow(1);
						height: 25px;
						margin-bottom: 4px;
						font-family: titleFont;
						color: whitesmoke;
						text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
					}
		
					.AttributeValue {
						margin-top: 7px;
						text-overflow: shrink;
						text-align: center;
						width: fill-parent-flow(1);
						text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
						height: 20px;
						color: LighterGrey;

						b {
							color: cf_brightgreen;
						}
					}
		
					.UpgradeButton {
						width: 100%;
						tooltip-position: top;
					}


					#CompletionProgress {
						height: 8px;
						overflow: clip;
						border-radius: 2px;
						vertical-align: center;
						margin-top: 7px;
						background-color: rgba(0, 0, 0, 0.8);
						
						.ProgressBarLeft {
							background-color: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
							border: 1px solid black;
							border-radius: 1px;
							box-shadow: 0px 2px 8px black;
						}
						
						.ProgressBarRight {
							box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.6);
						}
					}

					.CostLabelContainer {
						flow-children: right;
						margin-top: 10px;
						width: 100%;

						.LineBreak {
							width: fill-parent-flow(1);
							vertical-align: center;
							horizontal-align: center;
							border-top: 1px solid rgba(212, 229, 255, 0.1);
							border-brush: gradient( linear, 100% 0%, 0% 0%, from( rgba(255, 255, 255, 1) ), to( rgba(255, 255, 255, 0)) );

							&.Right {
								transform: scaleX( -1 );
							}
						}

						.CostLabel {
							vertical-align: center;
							margin: 0px 2px 0px 4px;
						}
					}				
	
					.CostContainer {
						flow-children: right;
						horizontal-align: center;
						margin-top: -6px;
		
						.TokenCost {
							vertical-align: top;
							horizontal-align: left;
							flow-children: left;
							padding-right: 24px;
							margin-left: -16px;
		
							DOTACrownfallToken {
								margin-right: -32px;
								margin-left: 4px;
								ui-scale: 80%;
							}
						}

						.CurrencyPlus {
							vertical-align: center;
						}
		
						.CurrencyCost {
							vertical-align: center;
							text-align: left;
							text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
							text-overflow: shrink;
							letter-spacing: 0.4px;
							font-size: 18px;
						}

						.GoldIcon {
							width: 18px;
							height: width-percentage(100%);
							img-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
							vertical-align: center;
							opacity-brush: gradient( linear, 0% 10%, 0% 90%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
							margin-top: 2px;
							padding: 2px;
							margin-left: -1px;
						}
					}

					#UpgradeButton {
						vertical-align: bottom;
						margin-bottom: 5px;
						margin-top: 10px;
					}
				}

				&.NoTokenCost {
					.TokensContainer {
						visibility: collapse;
					}

					.CurrencyPlus {
						visibility: collapse;
					}

					.CostContainer {
						padding-top: 10px;
					}

					#FilterTokenIcon {
						visibility: collapse;
					}
				}

				&.CantAffordUpgrade {
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgb(41, 48, 59) ), to( rgb(21, 28, 37) ) );
				}

				.SelectedDifficultyBorder {
					width: 100%;
					height: 100%;
					border: 3px solid white;
					border-brush: gradient( linear, 0% 0%, 100% 0%, from( gold2 ), color-stop( 0.5, gold1 ), to( gold2 ) );
					ignore-parent-flow: true;
						
					transition-property: border;
					transition-duration: 0.1s;
					opacity: 0.0;
				}

				&.UpgradesAvailable {
					.SelectedDifficultyBorder {
						opacity: 1.0;
					}
				}
	
				&.GamepadSelected {
					.SelectedDifficultyBorder {
						opacity: 1;
						animation-name: OpacityPulse;
						animation-duration: 0.5s;
						animation-iteration-count: infinite;
						animation-direction:alternate;
					}
				}

				&.MaxLevel {
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgb(41, 48, 59) ), to( rgb(21, 28, 37) ) );

					.UpgradeButton {
						opacity: 0;
					}

					.CostLabelContainer {
						visibility: collapse;
					}

					.CostContainer {
						margin: 0px;
						height: 100%;
					}

					.CostContainer .TokenCost {
						visibility: collapse;
					}
	
					.CostContainer .CurrencyCost {
						font-size: 50px;
						text-align: center;
						margin: 0px;
						padding: 0px;
					}

					.GoldIcon {
						visibility: collapse;
					}

					.CurrencyPlus {
						visibility: collapse;
					}

					.CostLabelContainer {
						visibility: collapse;
					}
				}
			}
		}
		
		.ResourceContainer {
			flow-children: right;
			horizontal-align: center;
			width: 80%;

			.TotalGoldContainer {
				flow-children: down;
				horizontal-align: center;
				padding: 16px 0px;
				width: fill-parent-flow(1);
				border-top: 1px solid rgba(194, 224, 255, 0.08);
				border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.3, white ), color-stop( 0.7, white ), to( rgba(255, 255, 255, 0) ) );
		
				Label {
					text-align: center;
					horizontal-align: center;
				}
		
				.TotalGoldLabel {
					margin-bottom: -4px;
					text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
				}
		
				.TotalGoldValue {
					text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.6);
				}

				.GoldIcon {
					width: 34px;
					height: width-percentage(100%);
					vertical-align: center;
					margin-left: 4px;
					img-shadow: 0px 3px 12px black;
					opacity-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
				}
			}

			.TokensButtonContainer {
				horizontal-align: center;
				width: fill-parent-flow(1);
				height: 100%;

				.TokensButton {
					horizontal-align: center;
					vertical-align: center;
					min-width: 250px;
					                       
				}
			}
		}
	
	
		.DebugButtons {
			flow-children: right;
			horizontal-align: center;
			margin-bottom: 12px;
	
			opacity: 0;

			.Dota2Main & {
				opacity: 1;
			}
	
			.DebugButton {
				padding: 4px;
				background-color: darkslategray;
				margin: 2px;
		
				Label {
					font-size: 12px;
				}
		
				&:hover {
					brightness: 1.5;
				}
		
				&:active {
					brightness: 0.5;
				}
			}
		}
		
		.PointsAvailable {
			horizontal-align: center;
			margin: 10px;
			font-family: titleFont;
			color: gold;
		}	
	}
}

.SurvivorsGameTabs {
    horizontal-align: center;

    .SurvivorsTabsBackground {
        ignore-parent-flow: true;
        width: 100%;
        height: 56px;
        border-width: 56px 56px 0px 56px;
        border-image-slice: 100% 112px 0px 112px;
        border-image-repeat: stretch;
        border-image-source: url( "file://{images}/events/crownfall/buttons/tabs_background.png" );
    }

    .TabsContainer {
        flow-children: right;
        margin: 0px 9.5px;
        vertical-align: center;

        .TabItem {
            min-width: 220px;
            margin: 0px -4px;
            height: 42px;

            transition-property: brightness, transform;
            transition-duration: 0.1s;

            &:hover {
                brightness: 2;
            }

            &:active {
                transform: scale3d( 0.98, 0.98, 1 );
                sound: "ui_generic_button_click";
            }

            Label {
                text-transform: uppercase;
                font-weight: normal;
                letter-spacing: 1.5px;
                text-align: center;
                color: gradient( linear, 0% 0%, 0% 100%, from( white ), to( #B0BCC2 ) );
                text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
                horizontal-align: center;
                vertical-align: center;
            }                

            .TabItemBg {
                width: 100%;
                border-width: 42px 42px 0px 42px;
                border-image-slice: 100% 84px 0px 84px;
                border-image-repeat: stretch;
                border-image-source: url( "file://{images}/events/crownfall/buttons/tab_background.png" );

                opacity: 0;
                transform: scale3d( 0.95, 0.95, 1 );

                transition-property: opacity, transform;
                transition-duration: 0.15s;
                transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                
            }
        }
    }  

    #PlayTab {
        .SelectedTab0 & {
            .TabItemBg {
                opacity: 1;
                transform: none;
            }
        }
    }

    #UpgradesTab {
        .SelectedTab1 & {
            .TabItemBg {
                opacity: 1;
                transform: none;
            }
        }
    }
}

.PauseScreen {
	flow-children: down;
	margin-bottom: 80px;
	horizontal-align: center;
	vertical-align: center;

	.PauseScreenContent {
		padding: 48px;
		horizontal-align: center;
		vertical-align: center;
		flow-children: down;
	
		padding: 48px 160px;
		background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(11, 12, 15, 0) ), 
															color-stop( 0.1, rgba(11, 12, 15, 0.4),
															color-stop( 0.2, rgba(11, 12, 15, 0.7),
															color-stop( 0.5, rgba(11, 12, 15, 0.9),
															color-stop( 0.8, rgba(11, 12, 15, 0.7),
															color-stop( 0.9, rgba(11, 12, 15, 0.4),
															to( rgba(11, 12, 15, 0) ) );
		border: 1px solid white;
		border-brush: gradient( linear, 0% 0%, 100% 0%, from( gold2&00 ), color-stop( 0.5, gold1 ), to( gold2&00 ) );
	}
	

	opacity: 0.0;
	transform: scale3d( 1.3, 1.3, 1 );

	transition-property: opacity, transform;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                

	                                                                 
	transition-delay: 0.1s;

	.IsPaused.UserPaused & {
		opacity: 1.0;
		transform: none;
		transition-duration: 0.15s;
		transition-timing-function: cubic-bezier(1, 0, 1, 1);               
	}

	.PauseText {
		font-size: 32px;
		font-family: titleFont;
		color: gradient( linear, 0% 00%, 0% 100%, from( #f9e7cd ), to( gold2 ) );
		text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.8);
		font-weight: semi-bold;
		text-transform: uppercase;
		horizontal-align: center;
		text-align: center;
		letter-spacing: 1px;
		margin-bottom: 24px;
	}

	DOTACrownfallButton {
		horizontal-align: center;
	}
	
	.ResumeButton {
		min-width: 360px;
		ui-scale: 90%;

		.LeaveButtonActive & {
			                
			brightness: 0.5;
		}
	}

	.LeaveButton {
		horizontal-align: center;
		min-width: 220px;
		margin-top: -24px;

		.LeaveButtonActive & {
			brightness: 3;
		}

		&.Secondary {
			margin-left: 0px;
			margin-right: 0px;
		}
	}
}

.FinishedScreen {
	horizontal-align: center;
	vertical-align: center;
	flow-children: down;
	width: 100%;
	
	transform: translateY( 40px );

	visibility: collapse;

	.GameState_Finished &,
	.DebugFinishedScreen & {
		visibility: visible;
	}

	.Title {
		font-size: 40px;
		font-family: titleFont;
		color: white;
		text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.8);
		font-weight: bold;
		text-transform: uppercase;
		horizontal-align: center;
		text-align: center;
		letter-spacing: 2px;
		z-index: 1;
	}

	.FinalScreenBackground {
		width: 100%;
		height: 100%;
		ignore-parent-flow: true;
		margin-top: 100px;

		opacity: 0.8;

		border-top: 1px solid rgba(255, 255, 255, 0.1);
		border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.3, white ), color-stop( 0.7, white ), to( rgba(255, 255, 255, 0) ) );
		background-color: gradient( radial, 50% 0%, 0% 0%, 50% 100%, from( rgba(0, 0, 0, 0.9) ), color-stop( 0.5, rgba(0, 0, 0, 0.8) ), to( rgba(0, 0, 0, 0) ) );

		                           
	}

	.FinalHeroContainer {
		width: 360px;
		height: width-percentage( 100% );
		horizontal-align: center;
		margin-top: -32px;
		overflow: noclip;
		
		.FinalHeroBackground {
			width: 100%;
			height: 100%;
			border-radius: 50%;
			background-color: rgb(30, 30, 30);
			background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( rgb(21, 48, 81) ), to( rgb(6, 8, 14) ) );
		}

		#PostGameHeroModel {
			overflow: noclip;
			width: 900px;
			height: 900px;
			horizontal-align: center;
			vertical-align: center;
		}

		.FinalHeroBorder {
			width: 100%;
			height: 100%;
			border-radius: 50%;
			border: 10px solid white;
			border-brush: gradient( linear, 0% 00%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #DDAF6B ), color-stop( 0.52, #BA8C47 ), to( #785C32 ) );

			&.Under {
				opacity-brush: gradient( linear, 0% 0%, 0% 100%, from( white ), color-stop( 0.8, white ), color-stop( 0.8, rgba(255, 255, 255, 0) ), to( rgba(255, 255, 255, 0) ) );
			}

			&.Over {
				opacity-brush: gradient( linear, 0% 100%, 0% 0%, from( white ), color-stop( 0.2, white ), color-stop( 0.2, rgba(255, 255, 255, 0) ), to( rgba(255, 255, 255, 0) ) );
			}
		}	
	}	

	&.SurvivorsHeroID_1 #PostGameHeroModel {
		transform: translateX( -10px ) translateY( 30px );
		opacity-brush: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0) ), color-stop( 0.25, white ), color-stop( 0.55, white ), color-stop( 0.65, rgba(255, 255, 255, 0) ), to( rgba(255, 255, 255, 0) ) );
	}

	&.SurvivorsHeroID_2 #PostGameHeroModel {
		transform: translateX( 16px ) translateY( 30px );
		opacity-brush: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0) ), color-stop( 0.25, white ), color-stop( 0.55, white ), color-stop( 0.65, rgba(255, 255, 255, 0) ), to( rgba(255, 255, 255, 0) ) );
	}

	&.SurvivorsHeroID_3 #PostGameHeroModel {
		transform: translateX( 0px ) translateY( 0px ) scale3d( 0.85, 0.85, 1 );
		opacity-brush: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0) ), color-stop( 0.25, white ), color-stop( 0.58, white ), color-stop( 0.68, rgba(255, 255, 255, 0) ), to( rgba(255, 255, 255, 0) ) );
	}

	.Message {
		horizontal-align: center;
		text-align: center;
	}

	.CheatWarning {
		margin-top: 8px;
		font-size: 16px;
		horizontal-align: center;
		text-align: center;
		width: 400px;
		color: loserRed;
		visibility: collapse;

		.CheatDetected & {
			visibility: visible;
		}
	}

	.FinalMainContainer {
		width: 90%;
		horizontal-align: center;
		                    
		margin-top: 60px;
	}

	.PlayButtonContainer {
		width: 60%;
		horizontal-align: center;
		margin-top: 14px;
		padding: 16px;

		                                                     
		                                                                                                                                                                         
		                                                                                                                                                                                   

		.PlayAgainButton {
			horizontal-align: center;
			min-width: 340px;
		}
	}

	.PostGameButtonsContainer {
		margin-top: 16px;
		horizontal-align: center;
		flow-children: right;

		DOTACrownfallButton {
			min-width: 300px;
		}
	}

	&.GoToHeroButtonSelected {
		.HeroSelectButton {
			brightness: 3.0;
		}

		.PlayAgainButton {
			brightness: 0.5;
		}
	}

	&.GoToDifficultyButtonSelected {
		.UpgradesButton {
			brightness: 3.0;
		}

		.PlayAgainButton {
			brightness: 0.5;
		}
	}

	.HeroSelectButton:not(.Secondary) {
		                           
		width: 390px;
	}

	.UpgradesButton:not(.Secondary) {
		                           
		width: 390px;
	}


	.FinalAbilitiesContainer {
		flow-children: down;
 
		.AbilityStatLabel {
			font-family: titleFont;
			vertical-align: center;
			color: whitesmoke;
			font-size: 20px;
			text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.8);
			height: 29px;
			text-overflow: shrink;
		}

		.HeaderLabel {
			text-transform: uppercase;
		}

		.AbilityName {
			visibility: collapse;
		}
	
		.AbilityLevel {
			width: 80px;
			text-align: center;
		}
	
		.AbilityTimeHeld {
			width: 80px;
			text-align: center;
		}
	
		.AbilityDamage {
			width: 120px;
			text-align: center;
		}
	
		.AbilityDPS {
			width: 80px;
			text-align: center;
		}

		.AbilitiesStatsHeading {
			flow-children: right;
			horizontal-align: right;
			padding-bottom: 8px;
			padding-right: 6px;

			Label {
				vertical-align: center;
			}
		}
	
		#AbilitiesStatsContainer {
			flow-children: down;
			width: 480px;

			.AbilityStats {
				width: 100%;
				flow-children: right;
				padding: 2px 6px;
				margin-bottom: 3px;
				background-color: white;
				background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.4, rgba(255, 255, 255, 0.018) ), color-stop( 0.5, rgba(255, 255, 255, 0.02) ), color-stop( 0.6, rgba(255, 255, 255, 0.018) ), to( rgba(255, 255, 255, 0) ) );
				border: 1px solid white;
				border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, rgba(255, 255, 255, 0.1) ), to( rgba(255, 255, 255, 0) ) );
				border-left: 0px;
				border-right: 0px;

				.AbilityName {
					visibility: collapse;
				}
	
				.AbilityImageContainer {
					horizontal-align: center;
					padding: 3px;
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0.5) ), to( rgba(0, 0, 0, 0.3) ) );
					border-bottom: 1px solid rgba(255, 255, 255, 0.02);
					box-shadow: inset 0px 1px 6px rgba(0, 0, 0, 0.6);

					#AbilityImage {
						width: 40px;
						height: width-percentage( 100% );
						box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
						background-color: gradient( linear, 0% 0%, 0% 100%, from( rgb(20, 22, 23) ), to( rgb(31, 34, 37) ) );
					}
				}

				.AbilityLevelContainer {
					margin: 0px 26px;
				}

				.AbilityShardScepterImage {
					width: 40px;
					height: width-percentage( 100% );
					vertical-align: center;
					background-size: cover;
					img-shadow: 0px 4px 16px rgba(0, 0, 0, 0.6);
					                        

					&.Empty {
						background-image: url( "file://{images}/hud/reborn/aghs_off_large.png" );
					}
					
					&.Shard {
						background-image: url( "file://{images}/hud/reborn/aghs_on_shard_large.png" );
					}
					
					&.Scepter {
						background-image: url( "file://{images}/hud/reborn/aghs_on_scepter_large.png" );
					}

					&.ShardScepter {
						background-image: url( "file://{images}/hud/reborn/aghs_on_large.png" );
					}
				}
			}
	
			.AbilityStats.EmptySlot {
				opacity: 0.5;

				.AbilityLevelContainer {
					visibility: collapse;
				}

				.AbilityShardScepterImage {
					opacity: 0.5;
				}

				.AbilityStatLabel {
					opacity: 0;
				}

				.AbilityLevelContainer {
					border-brush: none;
					opacity: 0.4;
				}
			}
		}
	}

	.FinalItemsContainer {
		horizontal-align: right;
		flow-children: down;
		                                
		width: 460px;

		.ItemLevel {
			width: 100px;
			text-align: center;
		}

		.ItemTimeHeld {
			width: 100px;
			text-align: center;
		}

		.ItemName {
			width: fill-parent-flow(1);
			text-align: left;
		}

		.ItemsStatsHeading {
			flow-children: right;
			padding: 0px 4px 8px;
		}

		#ItemsStatsContainer {
			flow-children: down;
			
			.ItemStats {
				width: 480px;
				flow-children: right;
				padding: 2px 4px;
				margin-bottom: 3px;

				background-color: white;
				background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.4, rgba(255, 255, 255, 0.018) ), color-stop( 0.5, rgba(255, 255, 255, 0.02) ), color-stop( 0.6, rgba(255, 255, 255, 0.018) ), to( rgba(255, 255, 255, 0) ) );
				border: 1px solid white;
				border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, rgba(255, 255, 255, 0.1) ), to( rgba(255, 255, 255, 0) ) );

				Label {
					vertical-align: center;
				}

				.ItemName {
					color: rgba(245, 245, 245, 0.6);
					text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.8);
					margin-left: 8px;
					font-size: 15px;
				}

				.AbilityLevelContainer {
					margin: 0px 32px;
				}

				.ItemLevel,
				.ItemTimeHeld {
					font-family: titleFont;
					color: whitesmoke;
					font-size: 20px;
					text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.8);
					height: 29px;
					text-overflow: shrink;
				}
	
				#ItemImage {
					height: 38px;
					width: height-percentage(133.33%);
					box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.2);
				}
			}
	
			.ItemStats.EmptySlot {
				opacity: 0.5;

				Label,
				.AbilityLevelContainer {
					visibility: collapse;
				}

				#ItemImage {
					background-color: black;
					box-shadow: 0px 0px 0px #00000000;
					box-shadow: inset 0px 0px 0px 1px rgba(255, 255, 255, 0.025);
				}
			}
		}
	}	

	.AbilityLevelContainer {
		width: 28px;
		height: width-percentage( 100% );
		vertical-align: center;
		border-radius: 50%;
		border: 2px solid white;
		border-brush: gradient( linear, 0% 35%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
		background-color: rgba(0, 0, 0, 0.8);
		box-shadow: 0px 2px 8px -1px rgba(0, 0, 0, 0.2);

		Label {
			font-size: 14px;
			text-align: center;
			vertical-align: center;
			horizontal-align: center;
			font-weight: semi-bold;
			color: gradient( linear, 0% 35%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
			text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
		}
	}

	.FinalEnemyStatsContainer {
		horizontal-align: center;
		flow-children: down;
		margin: 12px 0px 16px;
		visibility: collapse;
		
		.EnemiesDefeatedTitle {
			horizontal-align: center;
			margin-bottom: 8px;
		}

		#EnemiesStatsContainer {
			flow-children: right;
			horizontal-align: center;
			
			.EnemyStats {
				flow-children: down;
				margin: 0px 4px;
				
				.EnemyStatImageContainer {
					tooltip-position: top;
					width: 52px;
					height: width-percentage(100%);
					background-color: gradient( linear, 0% 0%, 0% 100%, from( #313721 ), to( #58572b ) );
					box-shadow: 0px 4px 12px -2px rgba(0, 0, 0, 0.4);
				}

				.EnemyKilled {
					text-align: center;
					horizontal-align: center;
					color: whitesmoke;
					margin-top: 4px;
					max-width: 56px;
					font-family: titleFont;
					text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
				}
			}
		}
	}

	.FinalStatsContainer {
		horizontal-align: center;
		flow-children: down;
		width: 80%;
		margin-top: 16px;
		z-index: 1;

		.FinalScoreLabel {
			margin: 0px 12px;
			text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.8);
			color: whitesmoke;
			text-align: center;
		}

		.FinalStats {
			horizontal-align: center;
			flow-children: right;
			margin: 2px 0px;
	
			.VerticalDash {
				height: 100%;
				width: 1px;
				background-color: rgba(255, 255, 255, 0.05);
				margin: 2px 0px;
			}
	
			.FinalStatBlock {
				width: 170px;
				flow-children: down;
	
				Label {
					horizontal-align: center;
				}
	
				.FinalStatValue {
					font-family: titleFont;
					vertical-align: center;
					color: whitesmoke;
					font-size: 24px;
					text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.8);
					max-width: 170px;
					height: 35px;

					&.FinalStatGold {
						font-weight: semi-bold;
						color: gradient( linear, 0% 40%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
					}
				}

				&.FinalScoreBlock {
					width: fit-children;

					.FinalStatValue {
						font-size: 36px;
						font-weight: semi-bold;
						margin: 0px 10px;
						margin-top: -2px;
						height: fit-children;
						width: 170px;
						text-align: center;
						text-overflow: shrink;
					}	
				}
			}
		
			                        
			                     
				                         
				                    
				            
	
				       
					                         
					            
					                  
					             
						                
					 
				 
	
				             
					                         
					                       
					                                    
					                              
				 
			    
		}
	}

	.DifficultyContainer {
		margin: 0px -3px;

		.EchelonBadge {
			height: 26px;
			img-shadow: 0px 2px 12px black;
		}

		.DifficultyText {
			vertical-align: center;
			horizontal-align: center;
			font-size: 13px;
			color: rgba(245, 245, 245, 0.7);
			width: 100%;
			height: 16px;
			text-align: center;
			margin: 0px 8px;
			text-overflow: shrink;
			text-shadow: 0px 2px 8px black;

			& b {
				color: white;
			}
		}
	}

	.PostGameDifficultyContainer {
		flow-children: right;
		horizontal-align: center;
		margin-top: -12px;
		padding: 8px 160px 32px;
		margin-bottom: -44px;

		visibility: collapse;

		background-color: gradient( radial, 50% 0%, 0% 0%, 50% 100%, from( rgba(255, 234, 195, 0.04) ), color-stop( 0.5, rgba(255, 234, 195, 0.02) ), to( rgba(255, 255, 255, 0) ) );

		Label {
			horizontal-align: center;
			text-align: center;
			color: white;
			padding: 16px;
			margin: 0px -6px;
			font-family: titleFont;

			animation-name: TextGlow;
			animation-duration: 0.6s;
			animation-iteration-count: infinite;
			animation-direction: alternate;
		}

		.DifficultyUnlockedLabel {
			visibility: collapse;
		}

		.UpgradesAvailableLabel {
			visibility: collapse;
		}
	}


	&.UnlockedNewDifficulty {
		.DifficultyUnlockedLabel {
			visibility: visible;
		}
		.PostGameDifficultyContainer {
			visibility: visible;
		}
	}	

	&.UpgradesAvailable {
		.UpgradesAvailableLabel {
			visibility: visible;
		}
		.PostGameDifficultyContainer {
			visibility: visible;
		}
	}

	.FinalTimeRangeContainer {
		flow-children: down;
		horizontal-align: center;
		visibility: collapse;

		Label {
			horizontal-align: center;
		}

		RangeSlider {
			margin-bottom: -4px;
		}
	}
}

@keyframes 'UpgradePipGlow'
{
	0% {
		brightness: 4;
		box-shadow: 0px 0px 20px rgba(57, 255, 103, 0.2);
	}
	100% {
		brightness: 1;
		box-shadow: 0px 0px 16px rgba(57, 255, 103, 0.1);
	}	
}

@keyframes 'GoldGlow'
{
	0% { brightness: 1; }
	100% { brightness: 2.0; }
}

@keyframes 'OpacityPulse'
{
	0% { opacity: 0.0; }
	100% { opacity: 1.0; }
}

@keyframes 'TextGlow'
{
	0% {
		brightness: 1;
		text-shadow: 0px 0px 20px rgba(255, 212, 148, 0.2);
	}
	100% {
		brightness: 1.2;
		text-shadow: 0px 0px 20px rgba(255, 212, 148, 0.8);
	}
}


@keyframes 'NewBadgeGlow'
{
	0% {
		brightness: 1;
		img-shadow: 0px 0px 16px rgba(255, 255, 255, 0.1);

	}
	100% {
		brightness: 2.0;
		img-shadow: 0px 0px 16px rgba(255, 255, 255, 0.3);
	}
}

@define scoreEventDuration: 0.7s;

@keyframes 'ScoreEventAnimation'
{
	0%		{ transform: scale3d( 1.2, 1.2, 1.0 ); }
	10%		{ transform: scale3d( 1.5, 1.5, 1.0 ); }
	100%	{ transform: translateY( -30px); }
}

@define defaultDamageEventDuration: 0.7s;

@keyframes 'DefaultDamageEventAnimation'
{
	0%		{ transform: scale3d( 1.2, 1.2, 1.0 ); }
	10%		{ transform: scale3d( 1.5, 1.5, 1.0 ); }
	100%	{ transform: translateY( -30px); }
}

@define critDamageEventDuration: 1.5s;

@keyframes 'CritDamageEventAnimation'
{
	0%		{ transform: scale3d( 1.2, 1.2, 1.0 ); }
	10%		{ transform: scale3d( 2.0, 2.0, 1.0 ); }
	100%	{ transform: translateY( -60px); }
}

@define magicDamageEventDuration: 0.7s;

@keyframes 'MagicDamageEventAnimation'
{
	0%		{ transform: scale3d( 1.2, 1.2, 1.0 ); }
	10%		{ transform: scale3d( 1.5, 1.5, 1.0 ); }
	100%	{ transform: translateY( -30px); }
}

#EventsOverlay {
	width: 100%;
	height: 100%;
	overflow: clip;

	.ScoreEvent {
		width: 300px;
		height: 200px;
		overflow: noclip;
		transform: translate3d( -150px, -100px, 0px );

		.Contents {
			width: 100%;
			vertical-align: middle;
			flow-children: down;

			animation-name: ScoreEventAnimation;
			animation-duration: scoreEventDuration;
			animation-fill-mode: forwards;

			.EventTitle {
				horizontal-align: center;
				text-align: center;
				text-transform: uppercase;
				font-size: 24px;
				color: white;
				text-shadow: 2px 2px 4px black;
			}

			.ScoreAmount {
				horizontal-align: center;
				text-align: center;
				font-size: 32px;
				color: yellow;
				text-shadow: 2px 2px 4px black;
			}

		}
	}

	.DamageEvent {
		width: 300px;
		height: 200px;
		overflow: noclip;
		transform: translate3d( -150px, -100px, 0px );

		&.DefaultDamageEvent {

			.DamageAmount {
				horizontal-align: center;
				vertical-align: middle;

				text-align: center;
				color: white;
				font-size: 36px;
				font-weight: bold;
				text-shadow: 2px 2px 4px black;

				animation-name: DefaultDamageEventAnimation;
				animation-duration: defaultDamageEventDuration;
				animation-fill-mode: forwards;
			}
		}

		&.CritDamageEvent {

			.Contents {
				horizontal-align: center;
				vertical-align: middle;
				flow-children: right;

				animation-name: CritDamageEventAnimation;
				animation-duration: critDamageEventDuration;
				animation-fill-mode: forwards;
			}

			.Icon {
				width: 32px;
				height: 32px;
				margin-right: 4px;
				vertical-align: middle;

				wash-color: rgb( 255, 0, 0 );

				background-image: url( "file://{images}/control_icons/crit_damage.png" );
				background-size: contain;
				background-repeat: no-repeat;
				background-position: center;

			}

			.DamageAmount {
				color: rgb( 255, 0, 0 );
				font-size: 48px;
				font-weight: bold;
				text-shadow: 2px 2px 4px black;
			}
		}

		&.MagicDamageEvent{

			.Contents {
				horizontal-align: center;
				vertical-align: middle;
				flow-children: right;

				animation-name: MagicDamageEventAnimation;
				animation-duration: magicDamageEventDuration;
				animation-fill-mode: forwards;
			}

			.Icon {
				width: 32px;
				height: 32px;
				margin-right: 4px;
				vertical-align: middle;

				wash-color: rgb( 163, 38, 228 );

				background-image: url( "file://{images}/control_icons/magic_damage.png" );
				background-size: contain;
				background-repeat: no-repeat;
				background-position: center;
			}

			.DamageAmount {
				color: rgb( 163, 38, 228 );
				font-size: 48px;
				font-weight: bold;
				text-shadow: 2px 2px 4px black;
			}
		}
	}
}

.PauseHint {
	horizontal-align: right;
	vertical-align: bottom;
	flow-children: right;
	margin-top: 12px;

	transition-property: transform, opacity, brightness;
	transition-duration: 0.3s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);                

	opacity: 0;
	transform: translateY( 24px );

	.GameState_Active & {
		opacity: 1;
		transform: none;
		transition-timing-function: cubic-bezier(1, 0, 1, 1);               
	}

	&:hover {
		brightness: 2.0;
	}
	&:active {
		brightness: 1.5;
	}

	.PauseLabelContainer {
		vertical-align: center;
		margin-right: 8px;
		margin-top: -2px;
	}

	.PauseLabel,
	.UnPauseLabel {
		horizontal-align: right;
		opacity: 0;

		transition-property: transform, opacity;
		transition-duration: 0.2s;
		transition-timing-function: ease-out;
	}

	.PauseLabel {
		transition-duration: 0.05s;
		opacity: 1;
		transform: none;
		transition-delay: 0s;
		
		.IsPaused & {
			transition-duration: 0.2s;
			opacity: 0;
			transform: translateY( -8px );
			transition-delay: 0.05s;
		}
	}

	.UnPauseLabel {
		transition-duration: 0.2s;
		opacity: 0;
		transform: translateY( 8px );
		transition-delay: 0.05s;

		.IsPaused & {
			transition-duration: 0.05s;
			opacity: 1;
			transform: none;
			transition-delay: 0s;
		}
	}
}




                
@keyframes 'PlayerExpLevelProgressAnimation'
{
	0% {
		clip: radial( 50% 50%, 0deg, 0deg );
	}

	50% {
		clip: radial( 50% 50%, 0deg, 180deg );
	}

	100% {
		clip: radial( 50% 50%, 0deg, 360deg );
	}
}

@keyframes 'PowerupCooldownProgress'
{
	0% {
		clip: radial( 50% 50%, 0deg, 0deg );
	}
	
	50% {
		clip: radial( 50% 50%, 0deg, 180deg );
	}
	
	100% {
		clip: radial( 50% 50%, 0deg, 360deg );
	}
}

.MinimapWrapper {
	vertical-align: bottom;
	margin: 24px;
	horizontal-align: left;

	width: 240px;
	height: width-percentage(100%);
	
	transition-property: transform, opacity;
	transition-duration: 0.7s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);                

	transform: scale3d( 0.7, 0.7, 1 );
	opacity: 0;
	overflow: noclip;

	.GameState_Active:not(.IsInBossStage) &,
	.GameState_ChoosingPowerUp:not(.IsInBossStage) & {
		transform: none;
		opacity: 1;

		animation-name: BounceMinimap;
		animation-duration: 0.4s;
		animation-iteration-count: 3;

		sound: "ui_topmenu_activate";
	}

	.MinimapRight & {
		horizontal-align: right;
	}

	.MinimapBackgroundNight {
		                                  

		width: 100%;
		height: 100%;
		overflow: noclip;

		horizontal-align: center;
		vertical-align: center;
		border-radius: 50%;
		background-color: #0F0F15;
		opacity-brush: gradient( radial, 50% 50%, 0% 0%, 100% 100%, from( #ffffff ), color-stop( .3,  #ffffff ), color-stop( .4,  #888888 ), color-stop( .48,  #000000 ) );
		box-shadow: 0px 4px 64px 0px rgba(0, 0, 0, 0.6);
	}

	.MinimapContainer {

		                                      
		width: 100%;
		height: 100%;
		horizontal-align: center;
		vertical-align: center;
	}

	.MinimapBorder,
	.MinimapBorderShine,
	.MinimapBorderShadow {
		width: 100%;
		height: 100%;
		border-radius: 50%;
	}

	.MinimapBorderShadow {
		border: 5px solid rgba(0, 0, 0, 0.7);
	}

	.MinimapBorder {
		border: 4px solid white;
		border-brush: gradient( linear, 0% 0%, 0% 100%, from( #3F464A ), to( #242527 ) );
	}

	.MinimapBorderShine {
		border: 0.8px solid rgba(255, 255, 255, 0.2);
		border-brush: gradient( linear, 0% 0%, 0% 100%, from( #ffffff ), to( #ffffff00 ) );
		box-shadow: inset 0px 1px 2px rgba(255, 255, 255, 0.05);
	}
}

@keyframes 'GlowMinimapHeroIcon' {
	0% {
		
	}

	100% {
		pre-transform-scale2d: 1.1;
		brightness: 3;
	}
}

@keyframes 'TestRotation' {
	0% {
		
	}

	100% {
		transform: rotateZ( -180deg );
	}
}

#Minimap {
	width: 100%;
	height: 100%;
	overflow: noclip;

	                              

	horizontal-align: center;
	vertical-align: center;

	.MinimapPlayerIcon {
		width: 50px;
		height: 50px;

		z-index: 1;
		transform: scaleX( -1 );
		
		.MinimapPlayerIconGlow {
			width: 70%;
			height: width-percentage(110%);
			margin-top: 1px;

			horizontal-align: center;
			vertical-align: center;

			background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( rgb(6, 255, 43) ), color-stop( 0.4, rgba(48, 255, 6, 0.8) ), to( rgba(29, 86, 179, 0) ) );
			border-radius: 80px;
			-s2-mix-blend-mode: screen;
			brightness: 2;

			animation-name: GlowMinimapHeroIcon;
			animation-duration: 0.6s;
			animation-iteration-count: infinite;
			animation-direction: alternate;

			visibility: collapse;
		}

		.MinimapPlayerIconImage {
			width: 50%;
			height: 50%;

			horizontal-align: center;
			vertical-align: center;
	
			background-size: cover;
			background-repeat: no-repeat;
			background-position: center;
	
			texture-sampling: point;
		}
		
		#MinimapPlayerIconCompassContainer {
			horizontal-align: center;
			vertical-align: center;
			

			
			width: 100%;
			height: width-percentage(100%);
			margin-top: 6px;

			.MinimapPlayerIconCompass {
				width: 65%;
				height: width-percentage(100%);
				horizontal-align: center;
				vertical-align: center;

				background-image: url( "file://{images}/events/crownfall/survivors/minimap/compass_icon.png" );
				background-size: cover;
				background-position: center;
			}
		}

		&.PlayerHero_1 {
			.MinimapPlayerIconImage {
				background-image: url( "file://{images}/heroes/icons/npc_dota_hero_vengefulspirit_alt2.png" );
			}
		}

		&.PlayerHero_2 {
			.MinimapPlayerIconImage {
				background-image: url( "file://{images}/heroes/icons/npc_dota_hero_skywrath_mage_alt1.png" );
			}
		}

		&.PlayerHero_3 {
			.MinimapPlayerIconImage {
				background-image: url( "file://{images}/heroes/icons/npc_dota_hero_kez.png" );
			}
		}
	}

	.MinimapSmallMinibossIcon {
		width: 56px;
		height: 56px;
		
		.MinimapSmallMinibossPin {
			width: 70%;
			height: 70%;
			horizontal-align: center;
			vertical-align: bottom;
			background-size: contain;
			background-repeat: no-repeat;
			background-image: url( "file://{images}/events/crownfall/survivors/minimap/pin.png" );
			margin-bottom: 1px;
		}
		
		.MinimapSmallMinibossImage {
			width: 35%;
			height: 35%;
			horizontal-align: center;
			vertical-align: center;
			margin-top: 4px;

			background-size: contain;
			background-repeat: no-repeat;

			texture-sampling: point;
		}
	}

	.MinimapResurrectorIcon .MinimapSmallMinibossImage {
		background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_resurrector.png" );
	}

	.MinimapGolemIcon .MinimapSmallMinibossImage {
		background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_golem.png" );
	}

	.MinimapAbsorberIcon .MinimapSmallMinibossImage {
		background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_defender.png" );
	}

	.MinimapArcherIcon .MinimapSmallMinibossImage {
		background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivors_archer.png" );
	}

	.MinimapTowerIcon .MinimapSmallMinibossImage {
		background-image: url( "file://{images}/hud/icon_roshan.psd" );
	}

	.MinimapMagnetIcon {
		width: 20px;
		height: 20px;
		background-size: contain;
		background-repeat: no-repeat;

		background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_magnet.png" );
	}

	.MinimapTreasureIcon {
		width: 30px;
		height: 30px;

		.MinimapTreasureGlow {
			width: 70%;
			height: 30%;
			horizontal-align: center;
			vertical-align: center;
			background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( rgba(255, 238, 6, .5) ), color-stop( 0.5, rgba(255, 238, 6, .5) ), to( rgba(255, 247, 137, 0) ) );
			border-radius: 80px;
			-s2-mix-blend-mode: screen;
			brightness: 2;

			animation-name: ActiveLabelGlow;
			animation-duration: 0.5s;
			animation-iteration-count: infinite;
			animation-direction: alternate;

		}

		.MinimapTreasureIconImage {
			width: 30px;
			height: 30px;
			horizontal-align: center;
			vertical-align: center;
	
			background-size: cover;
			background-image: url( "file://{images}/events/crownfall/survivors/minimap/treasure_icon.png" );
			background-repeat: no-repeat;
			background-position: center;
		}

		.MinimapTreasureIconAlert {
			width: 16px;
			height: 16px;
			background-color: gradient( linear, 0% 0%, 0% 100%, from( #e9aa2c ), to( rgb(203, 93, 15) ) );
			border: 0.3px solid black;
			border-radius: 50%;
			margin-top: 10%;

			vertical-align: top;
			horizontal-align: center;

			background-size: 70%;
			background-image: url( "file://{images}/events/crownfall/survivors/minimap/exclaimation_point.png" );
			background-repeat: no-repeat;
			background-position: center;

			animation-name: BobItem;
			animation-duration: 0.6s;
			animation-iteration-count: infinite;
			animation-direction: alternate;

			visibility: collapse;
		}
	}
}

.ParentDifficultyLevelsContainer {
	width: 100%;
	height: 100%;
	                          

	background-color: gradient( linear, 0% 0%, 0% 100%, from( charcoalLight ), to( charcoalDark ) );

	.TableHeader {
		flow-children: right;
		padding: 20px 12px 6px 24px;
		margin-right: 12px;
		background-color: charcoalLight;
		opacity-brush: gradient( linear, 0% 90%, 0% 100%, from( white ), to( #FFFFFF00 ) );

		.DifficultyHeaderLabel {
			width: fill-parent-flow(1);
		}
	}
}

.DifficultySelectScreen {
	horizontal-align: center;
	vertical-align: middle;
	
	width: 100%;
	height: 100%;
	flow-children: down;

	opacity: 0;
	transform: scale3d( 1.1, 1.1, 1 );
	transition-property: transform, opacity;
	transition-duration: 0.4s;
	transition-delay: 0.2s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);                

	.GameState_Setup & {
		transform: translateX( 160px );
	}

	.GameState_Setup.ShowDifficultyScreen & {
		opacity: 1;
		transform: none;

		transition-duration: 0.15s;
		transition-delay: 0s;
		transition-timing-function: cubic-bezier(1, 0, 1, 1);               

		sound: "ui_loadout_slide_in";
	}

    .ChooseHeroTitle {
        horizontal-align: center;
        text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.4);
        color: gradient( linear, 0% 0%, 0% 100%, from( #dee1e3 ), to( white ) );
        margin-top: 80px;
		margin-bottom: 10px;
        font-size: 48px;
    }

    .DifficultySelectActions {
        ignore-parent-flow: true;
        horizontal-align: center;
        vertical-align: bottom;
        width: 520px;
        padding: 0px 40px 40px;
    }

	.Container {
		width: 100%;
		Height: 78%;
		margin: 45px 80px 0px;
		flow-children: right;

		.MetaProgressionSelection,
		.DifficultySelectionContainer {
			width: fill-parent-flow(1);
			height: 100%;
			margin: 0 12px;
			flow-children: down;

			.TopGoldDash {
				width: 100%;
				height: 2px;
				ignore-parent-flow: true;
			}
	
			.TopGoldDash.Bottom {
				vertical-align: bottom;
			}
		}

		.UpgradesTitle,
		.DifficultyTitle {
			width: 100%;
			text-align: center;
			color: whitesmoke;
			text-shadow: 0px 4px 24px rgba(0, 0, 0, 0.6);
		}

		.DifficultyIntroDescription {
			horizontal-align: center;
			color: LighterGrey;
			margin-top: -6px;
			margin-bottom: 16px;
			text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
			height: 22px;
			width: 100%;
			text-align: center;
			text-overflow: shrink;
		}

		.MetaProgressionSelection {
			
		}

		.DifficultySelectionContainer
		{

			.DifficultyLevelsContainer
			{
				width: 100%;
				height: 100%;
				flow-children: down;
				horizontal-align: center;
				overflow: clip scroll;
				padding: 44px 24px 24px;

				.DifficultyLevelItem {					
					background-color: gradient( linear, 0% 0%, 0% 140%, from( rgb(61, 73, 90) ), to( rgb(38, 50, 67) ) );
					width: fill-parent-flow(1);
					margin-bottom: 6px;
					box-shadow: 0px 3px 12px -1px rgba(0, 0, 0, 0.3);
					height: 92px;

					transition-property: background-color, brightness, transform;
					transition-duration: 0.1s, 0.1s, 0.05s;

					&:hover {
						brightness: 1.3;
					}

					.DifficultyLevelItemContent {
						width: 100%;
						height: 100%;
						flow-children: right;
						padding-left: 4px;
					}

					.DifficultyBorder {
						width: 100%;
						height: 100%;
						border: 1px solid rgba(194, 224, 255, 0.06);
					}

					.SelectedDifficultyBorder {
						width: 100%;
						height: 100%;
						border: 0px solid white;
						border-brush: gradient( linear, 0% 0%, 100% 0%, from( gold2 ), color-stop( 0.5, gold1 ), to( gold2 ) );
						
						transition-property: border;
						transition-duration: 0.1s;
					}

					.EchelonContainer {
						vertical-align: center;
						width: 120px;
						height: 100%;
						
						.EchelonContent {
							flow-children: down;
							vertical-align: center;
							horizontal-align: center;

							Label {
								text-shadow: 0px 1px 6px rgba(0, 0, 0, 0.6);
							}

							.RankLabel {
								horizontal-align: center;
								color: whitesmoke;
								font-size: 12px;
								margin-bottom: -3px;
								font-weight: semi-bold;
	
								transition-property: color;
								transition-duration: 0.1s;
							}
	
							.RankValue {
								horizontal-align: center;
								color: whitesmoke;
								font-size: 24px;
								font-weight: semi-bold;
								font-family: titleFont;
							}
						}

						.EchelonBadge {
							horizontal-align: center;
							vertical-align: center;
							width: 48px;
							height: width-percentage( 100% );
							ignore-parent-flow: true;
							border: 1px solid gold2;
							transform: rotateZ(  45deg );
							background-color: #00000022;
							opacity-brush: gradient( linear, 0% 0%, 100% 100%, from( white ), color-stop( 0.2, #FFFFFF00 ), color-stop( 0.35, #FFFFFF00 ), color-stop( 0.55, white ), to( #FFFFFF22 ) );
							box-shadow: 0px 0px 0px 1px #00000011;
						}
					}

					.VerticalDivider {
						width: 1px;
						height: 100%;
						background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0) ), color-stop( 0.4, white ), color-stop( 0.6, white ), to( rgba(255, 255, 255, 0)) );
						opacity: 0.1;
					}

					.LockIcon {
						visibility: collapse;
						vertical-align: center;
						width: 15px;
						margin-right: 4px;
						opacity-brush: gradient( linear, 0% 0%, 0% 100%, from( LighterGrey ), to( Grey ) );
						opacity: 0;
						margin-top: -1px;
					}

					.LockedPattern {
						width: 100%;
						height: 100%;
						background-image: url( "file://{images}/events/crownfall/survivors/locked_pattern.png" );
						background-size: 16px;
						opacity: 0.02;
						visibility: collapse;
						wash-color: LightGrey;
					}

					.RewardContainer {
						width: 105px;
						height: 70px;
						horizontal-align: right;
						vertical-align: center;
						margin-right: 12px;
						background-color: rgba(0, 0, 0, 0.3);
						                                           
						
						#RewardSnippetContainer {
							horizontal-align: center;
							vertical-align: center;
						}
						
						.EmoticonReward {
							ui-scale: 150%;
						}
						
						#ItemImage {							
							box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.3);
							horizontal-align: right;
							vertical-align: center;
						}
					}

					.DifficultyDescriptionContainer {
						flow-children: down;
						vertical-align: center;
						margin-left: 24px;
						width: fill-parent-flow( 1 );
						margin-right: 24px;

						.DifficultyName	{
							text-align: center;
							vertical-align: center;
							font-family: titleFont;
							color: whitesmoke;
							text-transform: uppercase;
							font-weight: semi-bold;
							letter-spacing: 0.5px;
							text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
						}
	
						.DifficultyDescription {
							vertical-align: center;
							font-size: 16px;
							color: rgba(192, 204, 223, 0.7);
							text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
	
							b {
								color: LightestGrey;
								font-weight: semi-bold;
							}
						}
					}
					
					&.Locked {
						background-color: rgb(18, 21, 28);	
						opacity: 0.4;
						box-shadow: none;

						.DifficultyName {
							color: LighterGrey;
						}

						.LockIcon {
							visibility: visible;
							opacity: 1;
						}

						.LockedPattern {
							visibility: visible;
						}

						&:hover {
							brightness: 1;
						}
					}

					&.PreviousDifficulty {
						background-color: gradient( linear, 0% 0%, 100% 0%, from( rgb(81, 67, 48) ), to( #584C32 ) );

						.RewardContainer .RewardLabel {
							color: white;
						}
					}

					&:active, &:selected {
						background-color: gradient( linear, 0% 0%, 100% 0%, from( #7E6941 ), to( #584C32 ) );

						.SelectedDifficultyBorder {
							border-width: 2px;
						}

						.DifficultyName	{
							color: white;
						}
	
						.DifficultyDescription {
							opacity: 1;
						}

						.RankLabel {
							color: white;
						}

						.SelectedDifficultyBorder {							
							animation-name: GoldGlow;
							animation-duration: 0.5s;
							animation-iteration-count: infinite;
							animation-direction: alternate;
						}

						.RewardContainer .RewardLabel {
							color: white;
						}

						&:hover {
							brightness: 1;
						}

						&:active {
							brightness: 0.5;
							transform: scale3d( 0.99, 0.97, 1 );
						}
					}

					&.GamepadSelected {
						.SelectedDifficultyBorder {
							animation-name: OpacityPulse;
							animation-duration: 0.5s;
							animation-iteration-count: infinite;
							animation-direction:alternate;
						}
						
						.DifficultyBorder {
							brightness: 3.0;
							border: 3px solid white;

							animation-name: OpacityPulse;
							animation-duration: 0.5s;
							animation-iteration-count: infinite;
							animation-direction:alternate;
						}
						
					}

					&.NoReward {
						.RewardContainer {
							visibility: collapse;
						}
					}
				}
			}
		}
	}

	.HeroSelectActions {
		horizontal-align: center;
		vertical-align: bottom;
		width: 520px;
		padding: 0px 40px 40px;
	}

	.FinishHeroSelectButton {
		horizontal-align: center;
		vertical-align: bottom;
		min-width: 300px;
		margin-top: 24px;

		.GamePadSelectionActive & {
			animation-name: none;
			brightness: 0.2;
		}
	}

	.BackArrowButton {
		horizontal-align: left;
		vertical-align: center;
		border: 1px solid rgb(255, 255, 255);
		border-brush: gradient( linear, 0% 0%, 0% 100%, from( gold1 ), to( gold3 ) );
		background-color: gradient( linear, 0% 0%, 0% 100%, from( #30385a ), to( #111422 ) );
		border-radius: 50%;
		margin-top: 4px;
		box-shadow: 0px 6px 24px rgba(0, 0, 0, 0.4);
	
		transition-property: border, background-color, transform, brightness;
		transition-duration: 0.1s;
		transition-timing-function: ease-out, cubic-bezier(0, 0.9, 0, 0.9);                
	
		&:hover {
			border: 1px solid rgba(255, 255, 255, 1);
			background-color: rgba(0, 0, 0, 0.8);
			transform: scale3d( 1.08, 1.08, 1 );
			background-color: gradient( linear, 0% 0%, 0% 100%, from( #3e4871 ), to( #1a1e33 ) );
			brightness: 1.2;
		}
	
		&:active {
			transform: scale3d( 0.9, 0.9, 1 );
			brightness: 0.5;
			sound: "ui_preview_button_click";
		}
	
		.LocalMultiplayer & {
			margin-bottom: 0;
		}
	
		Image {
			width: 22px;
			height: width-percentage(100%);
			margin: 16px;
			img-shadow: 0px 2px 12px black;
		}
	}
}

@keyframes 'BobItem'
	{
		0% {
		transform: translateY( 0px );
	}

	100% {
		transform: translateY( 1px );
	}
}

.HeroSelectScreen {
	horizontal-align: center;
	vertical-align: middle;
	width: 100%;
	height: 100%;
	                          

	opacity: 0;
	transform: scale3d( 1.1, 1.1, 1 );	

	transition-property: transform, opacity;
	transition-duration: 0.4s;
	transition-delay: 0.2s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);                

	.GameState_Setup & {
		transform: translateX( 160px );
	}

	.GameState_Setup.ShowHeroScreen & {
		opacity: 1;
		transform: none;

		transition-duration: 0.15s;
		transition-delay: 0s;
		transition-timing-function: cubic-bezier(1, 0, 1, 1);               

		sound: "ui_loadout_slide_in";

	}

	.GameState_Setup.ShowHeroScreen.ShowDifficultyScreen & {
        opacity: 0;
        transform: translateX( -160px );
		
		transition-duration: 0.4s;
		transition-delay: 0.2s;
		transition-timing-function: cubic-bezier(0, 1, 0, 1);                

		sound: "ui_loadout_slide_in";
    }

	.ChooseHeroTitle {
		horizontal-align: center;
		text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.4);
		color: gradient( linear, 0% 0%, 0% 100%, from( #dee1e3 ), to( white ) );
		margin-top: 80px;
		font-size: 48px;
	}

	#HeroSelect {
		horizontal-align: center;
		vertical-align: center;
		flow-children: right;
		padding: 48px;
		margin-bottom: 24px;

		.ChooseHeroButton {
			height: 600px;
			width: 280px;
			margin: 12px 16px;
			box-shadow: 0px 12px 120px -6px rgba(0, 0, 0, 0.7);

			transition-property: transform, brightness;
			transition-duration: 0.15s, 0.05s;
			transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                

			transform: scale3d( 0.96, 0.96, 1 );

			.ChooseHeroBackground {
				width: 100%;
				height: 100%;
				background-color: gradient( linear, 0% 0%, 0% 100%, from( #0d1321 ), to( #2b3a4b ) );

				transition-property: background-color;
				transition-duration: 0.2s;
				transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                
			}

			.ChooseHeroTexture {
				width: 100%;
				height: 100%;
				-s2-mix-blend-mode: multiply;
			}

			.ChooseHeroCustomBackground {
				width: 100%;
				height: 100%;
				background-size: cover;
				background-position: center;
				opacity: 0.4;
				transform: scale3d( 1.1, 1.1, 1 );

				transition-property: opacity;
				transition-duration: 0.2s;
				transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                
			}

			.ChooseHeroBorder {
				width: 100%;
				height: 100%;
				border: 1px solid #FFFFFF11;
				border-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );

				transition-property: border;
				transition-duration: 0.2s;
				transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);                
			}

			.TickBox {
				visibility: collapse;
			}			

			#HeroModel {
				height: 180%;
				width: height-percentage(100%);
				vertical-align: center;
				horizontal-align: center;
				overflow: noclip;
				opacity-brush: gradient( linear, 0% 50%, 0% 70%, from( white ), to( rgba(255, 255, 255, 0) ) );

				transition-property: opacity;
				transition-duration: 0.2s;
				transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);
			}			

			&.SurvivorsHero_1 #HeroModel {
				transform: translateX( 0px ) translateY( 0px );
			}

			&.SurvivorsHero_2 #HeroModel {
				transform: translateX( 0px ) translateY( 0px );
			}

			&.SurvivorsHero_3 #HeroModel {
				transform: translateX( 0px ) translateY( -30px ) scale3d( 0.8, 0.8, 1 );
			}

			&.SurvivorsHero_1 { .ChooseHeroCustomBackground {background-image: url( "file://materials/portraits_card/portrait_backgrounds/faceless_void.psd" ); }}
			&.SurvivorsHero_2 { .ChooseHeroCustomBackground {background-image: url( "file://materials/portraits_card/portrait_backgrounds/lich.psd" ); }}
			&.SurvivorsHero_3 { .ChooseHeroCustomBackground {background-image: url( "file://materials/portraits_card/portrait_backgrounds/slardar.psd" ); hue-rotation: -20deg; }}

			.HeroDetails {
				flow-children: down;
				horizontal-align: center;
				vertical-align: bottom;
				padding-bottom: 32px;
				padding-top: 16px;

				width: 100%;

				.HeroName {
					horizontal-align: center;
					margin-bottom: 8px;
					padding-bottom: 8px;
					width: 100%;
					border-bottom: 1px solid rgba(255, 255, 255, 0.103);
					border-brush: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.5, white ), to( rgba(255, 255, 255, 0) ) );

					color: white;
					text-shadow: 0px 2px 12px rgba(0, 0, 0, 0.8);
					text-align: center;
					font-weight: semi-bold;
				}

				.StartingAbilityLabel {
					horizontal-align: center;
					color: rgba(255, 255, 255, 0.6);
					text-shadow: 0px 2px 12px rgba(0, 0, 0, 0.8);
					margin-bottom: 8px;
				}

				.LeftRightFlow {
					horizontal-align: center;
				}

				.InnateImageContainer {
					width: 56px;
					height: width-percentage( 100% );
					margin-right: 10px;
					horizontal-align: right;
					vertical-align: center;
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0.7) ), to( rgba(0, 0, 0, 0.5) ) );
					box-shadow: inset 0px 1px 6px rgba(0, 0, 0, 0.2);
					border-radius: 100px;
					img-shadow: 0px 2px 16px black;
					padding: 4px;

					#InnateImage {
						tooltip-position: top;
					}
				}

				.AbilityImageContainer {
					horizontal-align: center;
					padding: 4px;
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0.7) ), to( rgba(0, 0, 0, 0.5) ) );
					box-shadow: inset 0px 1px 6px rgba(0, 0, 0, 0.2);
						
					#AbilityImage {
						background-color: black;
						height: 64px;
						width: height-percentage( 100% );
						box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.8);
						tooltip-position: top;
					}
	
					.AbilityImageShine {
						width: 100%;
						height: 100%;
						background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0.01) ), to( rgba(255, 255, 255, 0) ) );
						border: 1px solid white;
						border-brush: gradient( linear, 0% 0%, 0% 100%, from( rgba(255, 255, 255, 0.04) ), to( rgba(255, 255, 255, 0.02) ) );
					}
				}
			}			

			&:hover {
				.ChooseHeroBackground {
					background-color: gradient( linear, 0% 0%, 0% 100%, from( #32436b ), to( #2b3a4b ) );
				}

				.ChooseHeroCustomBackground {
					opacity: 0.4;
				}
			}

			&:active {
				transform: scale3d( 0.94, 0.94, 1 );
				brightness: 0.4;
				sound: "ui.pick_repick";
			}
			
			&:selected {
				transform: none;
				                                          
				z-index: 1;

				.ChooseHeroBorder {
					border: 6px solid white;
					border-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #8d6c3a ) );
				}

				#HeroModel {
					opacity: 1;
				}
			}
		}
	}

	.HeroSelectActions {
		ignore-parent-flow: true;
		horizontal-align: center;
		vertical-align: bottom;
		width: 520px;
		padding: 0px 40px 40px;
		                        
	}

	.BackArrowButton {
		vertical-align: center;
		border: 1px solid rgb(255, 255, 255);
		border-brush: gradient( linear, 0% 0%, 0% 100%, from( gold1 ), to( gold3 ) );
		background-color: gradient( linear, 0% 0%, 0% 100%, from( #30385a ), to( #111422 ) );
		border-radius: 50%;
		margin-top: 4px;
		box-shadow: 0px 6px 24px rgba(0, 0, 0, 0.4);
	
		transition-property: border, background-color, transform, brightness;
		transition-duration: 0.1s;
		transition-timing-function: ease-out, cubic-bezier(0, 0.9, 0, 0.9);                

		.FirstTimeIntro & {
			visibility: collapse;
		}
	
		&:hover {
			border: 1px solid rgba(255, 255, 255, 1);
			background-color: rgba(0, 0, 0, 0.8);
			transform: scale3d( 1.08, 1.08, 1 );
			background-color: gradient( linear, 0% 0%, 0% 100%, from( #3e4871 ), to( #1a1e33 ) );
			brightness: 1.2;
		}
	
		&:active {
			transform: scale3d( 0.9, 0.9, 1 );
			brightness: 0.5;
			sound: "ui_preview_button_click";
		}
	
		.LocalMultiplayer & {
			margin-bottom: 0;
		}
	
		Image {
			width: 22px;
			height: width-percentage(100%);
			margin: 16px;
			img-shadow: 0px 2px 12px black;
		}
	}

	.FinishHeroSelectButton {
		horizontal-align: center;
		vertical-align: bottom;
		min-width: 300px;
		margin-top: 24px;

		&:active {
			sound: "ui.pick_play";
		}

		.FirstTimeIntro & {
			visibility: collapse;
		}
	}
}

.HeroSelectFirstTimeIntroButtons {
	flow-children: right;
	horizontal-align: center;
	vertical-align: bottom;
	padding-bottom: 40px;
	visibility: collapse;

	.FirstTimeIntro & {
		visibility: visible;
	}

	.Loading {
		flow-children: right;
		vertical-align: bottom;
		margin-bottom: 38px;
		margin-right: 8px;
		margin-left: 8px;

		visibility: collapse;

		.IsLoading & {
			visibility: visible;
		}

		.Spinner {
			vertical-align: middle;
			margin-right: 8px;
		}

		> Label {
			vertical-align: middle;
			text-transform: uppercase;
			color: white;
			letter-spacing: 2px;
			font-size: 20px;
		}
	}

	DOTACrownfallButton {
		min-width: 300px;
	}

	.IsLoading & .StartGameButton {
		visibility: collapse;
	}
}

#HeroSelectPlayButtonFirstTimeIntro {
	visibility: collapse;

	.FirstTimeIntro & {
		visibility: visible;
	}

	.IsLoading & {
		visibility: collapse;
	}
}

#ChatterContainer {
	width: 100%;
	height: 100%;

	brightness: 1;
	blur: gaussian( 0px );

	opacity: 1;

	.GameState_Setup & {
		opacity: 0;
		transition-duration: 0.5s;
	}

	transition-property: opacity, brightness, blur;
	transition-duration: 0.1s;

	.ShowPowerUpChoices &,
	.GameState_Finished &,
	.DebugFinishedScreen &,
	.IsPaused.UserPaused & {
		brightness: 0.1;
		blur: gaussian( 1px );

		transition-duration: 0.5s;
	}

	
	#ChatterVisualNovel {
		ui-scale: 90%;
		vertical-align: top;
		margin-top: -20px;
	}
}

#VideoContainer {
	width: 100%;
	height: 100%;
	background-color: black;
	overflow: clip;

	opacity: 0.0;

	transition-property: opacity;
	transition-duration: 2.0s;

	.ShowVideoContainer & {
		opacity: 1.0;
		transition-duration: 0.3s;
	}

	#MoviePanel {
		width: height-percentage( 177.77% );
		height: 100%;
		horizontal-align: center;
		vertical-align: middle;

		.AspectRatio16x10 & {
			width: 100%;
			height: width-percentage( 56.25% );
		}
	}

	.CloseVideoButton {
		z-index: 1;
		opacity: 0.0;
		horizontal-align: right;
		margin: 16px;

		transition-property: opacity;
		transition-duration: 0.2s;

		.ShowVideoCloseButton & {
			opacity: 1.0;
		}
	}
}

.ObjectivesIntroContainer {
	horizontal-align: center;
	vertical-align: middle;
	margin-bottom: 100px;
	width: 1000px;
	height: 200px;
	background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(11, 12, 15, 0) ), color-stop( 0.1, rgba(11, 12, 15, 0.4), color-stop( 0.2, rgba(11, 12, 15, 0.7), color-stop( 0.5, rgba(11, 12, 15, 0.9), color-stop( 0.8, rgba(11, 12, 15, 0.7), color-stop( 0.9, rgba(11, 12, 15, 0.4), to( rgba(11, 12, 15, 0) ) );
	border: 1px solid white;
	border-brush: gradient( linear, 0% 0%, 100% 0%, from( gold2&00 ), color-stop( 0.5, gold1 ), to( gold2&00 ) );
	opacity: 0; 

	.ObjectivesIntro & {
		animation-name: ObjectivesIntroBackground;
		animation-duration: 4s;
		animation-iteration-count: 1;
	}
	

	#SurviveTitle {
		width: 100%;
		color: rgba(255, 255, 255, 0.8);
		text-transform: uppercase;
		text-shadow: 0px 2px 12px rgba(0, 0, 0, 0.8);
		horizontal-align: center;
		vertical-align: center;
		text-align: center;
		font-weight: semi-bold;
		font-size: 48px;
		text-overflow: shrink;
		font-family: titleFont;
		opacity: 0;

		.ObjectivesIntroLabel & {
			animation-name: ObjectivesIntro;
			animation-duration: 2s;
			animation-iteration-count: 1;
		}
	}

	#DefeatImperiaTitle {
		width: 100%;
		color: rgba(255, 255, 255, 0.8);
		text-transform: uppercase;
		text-shadow: 0px 2px 12px rgba(0, 0, 0, 0.8);
		horizontal-align: center;
		vertical-align: center;
		text-align: center;
		font-weight: semi-bold;
		font-size: 76px;
		text-overflow: shrink;
		margin-bottom: 2px;
		font-family: titleFont;
		opacity: 0;

		.ObjectivesIntroLabel & {
			animation-name: ObjectivesIntro;
			animation-duration: 2s;
			animation-delay: 2s;
			animation-iteration-count: 1;
		}
	}
}


@keyframes 'ObjectivesIntro'
{
	0% {
		opacity: 0;
		transform: scale3d(2, 2, 1);
	}

	8% {
		opacity: 1;
		transform: scale3d(1.2, 1.2, 1);
	}

	92% {
		opacity: 1;
		transform: scale3d(1.1, 1.1, 1);
	}

	100% {
		opacity: 0;
		transform: scale3d(0.9, 0.9, 1);
	}
}

@keyframes 'ObjectivesIntroBackground'
{
	0% {
		opacity: 0;
		transform: scale3d(2, 2, 1);
	}

	8% {
		opacity: 1;
		transform: scale3d(1.2, 1.2, 1);
	}

	92% {
		opacity: 1;
		transform: scale3d(1.1, 1.1, 1);
	}

	100% {
		opacity: 0;
		transform: scale3d(0.9, 0.9, 1);
	}
}

.MinibossIntroContainer {
	horizontal-align: center;
	vertical-align: center;
	width: 1000px;
	padding: 24px 80px;
	background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(11, 12, 15, 0) ), color-stop( 0.1, rgba(11, 12, 15, 0.4), color-stop( 0.2, rgba(11, 12, 15, 0.7), color-stop( 0.5, rgba(11, 12, 15, 0.9), color-stop( 0.8, rgba(11, 12, 15, 0.7), color-stop( 0.9, rgba(11, 12, 15, 0.4), to( rgba(11, 12, 15, 0) ) );
	border: 1px solid white;
	border-brush: gradient( linear, 0% 0%, 100% 0%, from( gold2&00 ), color-stop( 0.5, gold1 ), to( gold2&00 ) );
	margin-bottom: 400px;

	opacity: 0;

	.MinibossArrived & {
		animation-name: MinibossArrived;
		animation-duration: 3s;
		animation-iteration-count: 1;

		sound: "survivors.miniboss.arrived";
	}

	#MinibossArrivedTitle {
		width: 100%;
		color: rgba(255, 255, 255, 0.8);
		text-transform: uppercase;
		text-shadow: 0px 2px 12px rgba(0, 0, 0, 0.8);
		horizontal-align: center;
		font-family: titleFont;
		text-align: center;
		font-weight: semi-bold;
		font-size: 48px;
		text-overflow: shrink;
	}
}

@keyframes 'MinibossArrived'
{
	0% {
		opacity: 0;
		transform: scale3d(2, 2, 1);
	}

	8% {
		opacity: 1;
		transform: scale3d(1.2, 1.2, 1);
	}

	92% {
		opacity: 1;
		transform: scale3d(1.1, 1.1, 1);
	}

	100% {
		opacity: 0;
		transform: scale3d(0.9, 0.9, 1);
	}
}

@keyframes 'BounceObjectives'
{
	0% {
		transform: translateY( 0px );
	}

	20% {
		transform: translateY( -16px );
		brightness: 3;
	}

	100% {
		transform: translateY( 0px );
	}
}

@keyframes 'BounceMinimap'
{
	0% {
		transform: none;
	}

	20% {
		transform: scale3d( 1.1, 1.1, 1 );
		brightness: 3;
	}

	100% {
		transform: none;
	}
}

.ObjectivesLogShadow {
	vertical-align: bottom;
	width: 400px;
	height: 800px;
	background-color: gradient( radial, 100% 100%, 0% 0%, 100% 100%, from( rgba(19, 21, 23, 0.9) ), color-stop( 0.6, rgba(19, 24, 19, 0.75) ), to( rgba(0, 0, 0, 0) ) );
	opacity: 0.7;
	horizontal-align: left;
	transform: scaleX( -1 );
	.MinimapRight & {
		horizontal-align: right;
		transform: scaleX( 1 );
	}
}

.ObjectivesLogContainer {
	horizontal-align: left;
	vertical-align: bottom;
	flow-children: down;
	width: 210px;
	margin: 40px;
	margin-bottom: 280px;

	transition-property: transform, opacity;
	transition-duration: 0.4s;
	transition-delay: 0.6s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);                

	opacity: 0;

	.GameState_Active:not(.IsInBossStage) &,
	.GameState_ChoosingPowerUp:not(.IsInBossStage) & {
		&.Revealed {
			opacity: 1;
			
			animation-name: BounceObjectives;
			animation-duration: 0.4s;
			animation-iteration-count: 3;
			
		}
	}

	.MinimapRight & {
		horizontal-align: right;
	}

	.Emblem {
		transform: scaleY( -1 );
		width: 80%;
		horizontal-align: center;
		margin-top: 8px;
		margin-right: 12px;
		opacity: 0.6;

		visibility: collapse;
	}

	.ObjectivesTitleContainer {
		width: 100%;
		flow-children: down;
		padding: 0px 8px;
		margin-bottom: 6px;

		.ObjectivesHeading {
			width: 100%;
			color: rgba(255, 255, 255, 0.8);
			text-shadow: 0px 2px 12px rgba(0, 0, 0, 0.8);
			horizontal-align: center;
			text-align: center;
			font-weight: semi-bold;
			margin-bottom: 2px;
		}
	
		.ObjectivesDescription {
			width: 100%;
			text-align: center;
			font-size: 13px;
			text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.8);
			color: rgba(245, 245, 245, 0.5);
		}
	}

	#MandatoryObjectivesContainer,
	#OptionalObjectivesContainer {
		flow-children: down;
		margin-top: 8px;
	}

	.Objective {
		flow-children: right;
		width: fill-parent-flow(1);
		padding: 3px 4px 3px 4px;

		border: 1px solid white;
		background-color: gradient( linear, 50% 0%, 0% 0%, from( rgba(11, 12, 15, 0.5) ), to( rgba(0, 0, 0, 0) ) );
		border-brush: gradient( linear, 50% 0%, 0% 0%, from( rgba(0, 0, 0, 0.5) ), to( rgba(0, 0, 0, 0) ) );
		border-radius: 0px 80px 80px 0px;

		margin-bottom: 3px;
		visibility: collapse;

		.MinimapRight & {
			background-color: gradient( linear, 50% 0%, 100% 0%, from( rgba(11, 12, 15, 0.5) ), to( rgba(0, 0, 0, 0) ) );
			border-brush: gradient( linear, 50% 0%, 100% 0%, from( rgba(0, 0, 0, 0.5) ), to( rgba(0, 0, 0, 0) ) );
			border-radius: 80px 0px 0px 80px;
		}

		.ObjectiveImage {
			vertical-align: center;
			width: 32px;
			height: width-percentage( 100% );
			border-brush: gradient( linear, 0% 0%, 0% 80%, from( rgb(181, 189, 196) ), color-stop( 0.5, rgb(50, 55, 59) ), to( rgb(71, 80, 94) ) );
			border-brush: gradient( linear, 0% 0%, 0% 100%, from( rgb(255, 232, 182) ), color-stop( 0.5, rgb(67, 56, 38) ), to( rgb(118, 90, 39) ) );
			background-position: center;
			background-repeat: no-repeat;
		}

		.ObjectiveTextContainer {
			vertical-align: center;
			flow-children: down;
			margin-left: 6px;
			width: fill-parent-flow(1);
			margin-bottom: 3px;
			
			.ObjectiveName {
				font-size: 14px;
				color: rgba(245, 245, 245, 0.8);
				text-shadow: 0px 2px 6px black;
				font-family: titleFont;
				text-overflow: shrink;
			}

			.ObjectiveStatusLabel {
				font-size: 12px;
				color: rgba(245, 245, 245, 0.8);
				text-shadow: 0px 0px 12px rgba(115, 180, 255, 0.3);
				margin-top: -2px;
				margin-left: -12px;
				padding: 0px 12px 4px;

				visibility: collapse;

				animation-name: ActiveLabelGlow;
				animation-duration: 1s;
				animation-iteration-count: infinite;
				animation-direction:alternate;
			}
		}

		.ObjectiveRewardIcon {
			width: 32px;
			height: 100%;
			vertical-align: center;
			background-size: contain;
			background-image: url( "file://{images}/hud/reborn/aghs_off_large.png" );
		}

		&.Mandatory {

		}

		&.Optional {

		}

		&.Complete {
			text-decoration: line-through;

			.ObjectiveRewardIcon {
				background-image: url( "file://{images}/hud/reborn/aghs_on_scepter_large.png" );
			}
		}

		&.Revealed {
			visibility: visible;
		}

		&.MinimapArcherIcon {
			.ObjectiveImage {
				background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivors_archer.png" );
			}
		}

		&.MinimapResurrectorIcon {
			.ObjectiveImage {
				background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_resurrector.png" );
			}
		}

		&.MinimapGolemIcon {
			.ObjectiveImage {
				background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_golem.png" );
			}
		}

		&.MinimapAbsorberIcon {
			.ObjectiveImage {
				background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_defender.png" );
			}
		}
	}

	#DefeatImperiaLabel {
		visibility: collapse;
	}
}

@keyframes 'ActiveLabelGlow'
{
	0% {
		brightness: 1;
		text-shadow: 0px 0px 12px rgba(115, 180, 255, 0.2);

	}
	100% {
		brightness: 2.0;
		text-shadow: 0px 0px 12px rgba(115, 180, 255, 0.8);
	}
}

#VisualNovel {
	                  
}

.VisualNovelOuterContainer {

	.FirstTimeIntroDialogue & {
		padding-top: 300px;
		background-color: #000000;
		background-image: url("file://{images}/events/crownfall/survivors/survivors_keyart.psd");
		background-size: cover;
		background-img-opacity: 0.2;
	}
}


.MinibossWarningAlertContainer {
	flow-children: down;
	horizontal-align: center;

	opacity: 0;

	.MiniBossWarning & {
		opacity: 1;

		sound: "survivors.miniboss.incoming";
	}
	
	.WarningDarkness {
		width: 1600px;
		height: 360px;
		ignore-parent-flow: true;
		background-color: gradient( radial, 50% 0%, 0% 0%, 50% 100%, from( black ), color-stop( 0.5, rgba(0,0,0,0.8) ), to( #00000000 ) );
	}
	
	.WarningContainer {
		margin-top: 72px;
		flow-children: right;
		horizontal-align: center;
		
		.Emblem {
			vertical-align: center;
			margin-top: 5px;
			wash-color: #f0ce92;
			height: 20px;
			
			&.Left {
				transform: scaleX( -1 );
			}
		}
		
		.WarningBadge {
			margin: 0px -32px;
			padding: 0px 32px;

			.WarningBadgeBackground {
				width: 100%;
				border-width: 48px 24px 0px 24px;
				border-image-slice: 100% 48px 0px 48px;
				border-image-source: url( "file://{images}/events/crownfall/survivors/warning_badge.png" );

				horizontal-align: center;
				vertical-align: center;

				animation-name: PulseWarningBadge;
				animation-duration: 0.3s;
				animation-iteration-count: infinite;
				animation-timing-function: ease-in-out;
				animation-direction: alternate-reverse;
			}

			.WarningLabel {
				horizontal-align: center;
				vertical-align: center;
				color: white;
				text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
				margin: 0px 24px 3px;
			}

			.WarningRed {
				horizontal-align: center;
				vertical-align: center;
				border-radius: 20px;
				width: 100%;
				height: 100%;
				ignore-parent-flow: true;
				background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( #F81A25 ), color-stop( 0.3, #F81A2599 ), to( #F81A2500 ) );
				-s2-mix-blend-mode: screen;
				overflow: noclip;
		
				animation-name: GlowWarningBadge;
				animation-duration: 0.3s;
				animation-iteration-count: infinite;
				animation-timing-function: ease-in-out;
				animation-direction: alternate-reverse;
			}
		}
	}

	.WarningTitleContainer {
		flow-children: right;
		horizontal-align: center;
		margin: -5px 0px;

		.MultiDash {
			vertical-align: center;
			height: 16px;
			margin-bottom: 2px;
			wash-color: loserRed;

			&.Left {
				transform: scaleX( -1 );
			}
		}

		.WarningTitle {
			vertical-align: center;
			color: whitesmoke;
			font-size: 22px;
			text-shadow: 0px 2px 16px black;
			margin: 0px 6px;
		}
	}

	.BottomEmblem {
		horizontal-align: center;
		wash-color: #f0ce92;
		height: 10px;
		margin-top: 8px;
	}
}

@keyframes 'GlowWarningBadge' {
    0% {
		opacity: 0;
	}
    100% {
		opacity: 1;
    }
}

@keyframes 'PulseWarningBadge' {
    0% {
		
	}
    100% {
		transform: scale3d( 1.04, 1.08, 1 );
		brightness: 3;
    }
}


                     
	                         
	                       
	             
	                                
	              


	                     
		            
		             
		                       
		                                                                                                   
		                   
		                 
		                                             
		                                                                                                                                            
		                                                

		                 
			                         
			                       
			                
			                       
			                               
			                    
		 
	 

	                         
		                     
		                         
		                       

		           
			            
			             
			                       
			                   
			                                                              
			                                                                              
			                       
		 

		                
			                       
			                                
			                
			                       
			                                  
		 
	 

	                     
    




#HealthBarsContainer {
	height: 100%;
	width: 100%;

	visibility: collapse;
	
	.GameState_Active & {
		visibility: visible;
	}

	brightness: 1;
	blur: gaussian( 0px );

	opacity: 1;

	.GameState_Setup & {
		opacity: 0;
		transition-duration: 0.5s;
	}

	transition-property: opacity, brightness, blur;
	transition-duration: 0.1s;

	.ShowPowerUpChoices &,
	.GameState_Finished &,
	.DebugFinishedScreen &,
	.IsPaused.UserPaused & {
		brightness: 0.1;
		blur: gaussian( 1px );

		transition-duration: 0.5s;
	}

	.HealthBar {
		flow-children: right;
		transform: translateX(-30px) translateY(-60px);		
		padding: 8px;
		
		.HealthBarContainer {
			vertical-align: center;
			box-shadow: 0px 4px 10px -2px rgba(0, 0, 0, 0.4);

			#HealthBar {
				width: 60px;
				height: 8px;
	
				border-radius: 2px;
				border: 1.5px solid rgb(0, 0, 0);
				box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.02);
				background-color: rgba(0, 0, 0, 1);
	
				.ProgressBarLeft {
					background-color: gradient( linear, 0% 0%, 0% 100%, from( rgb(236, 54, 54) ), to( darkred ) );
					border-radius: 1px;

					transition-property: opacity, background-color;
					transition-duration: 0.3s;
				}
			}
		}

		.PlayerHealthBarExpContainer {
			z-index: 1;
			transform: translateX( 17px );
			visibility: collapse;
		}
	}

	.HealthBar.PlayerFriendly {
		transform: translateX(-110px) translateY(-90px);
		
		.HealthBarContainer {
			background-color: gradient( linear, 0% 0%, 50% 0%, from( #335f4c ), to( #2a3c37 ) );

			transition-property: background-color;
			transition-duration: 0.3s;
			
			padding: 3px 3px 3px 12px;
			border-radius: 2px;

			.PlayerTookDamage &	{
				animation-name: FlashHealthBarDamageBorder;
				animation-duration: 0.6s;
				animation-iteration-count: 1;
			}

			#HealthBar {
				width: 120px;
	
				.ProgressBarLeft {
					background-color: gradient( linear, 0% 0%, 0% 80%, from( #75E533 ), to( #316812 ) );

					.PlayerTookDamage &	{
						animation-name: FlashHealthBarDamage;
						animation-duration: 0.6s;
						animation-iteration-count: 1;
					}
				}
			}
		}	
		
		.PlayerHealthBarExpContainer {
			margin: 8px;
			width: 26px;
			height: 26px;
			vertical-align: center;
			border-radius: 50%;
			border: 1px solid rgb(0, 0, 0);	
			horizontal-align: left;
			background-color: gradient( linear, 0% 70%, 0% 30%, from( rgb(0, 0, 0) ), to( rgb(32, 41, 48) ) );
			box-shadow: 0px 4px 12px -2px rgba(0, 0, 0, 0.6);
			
			.GameState_Active & {
				visibility: visible;
			}
		
			Label {
				horizontal-align: center;
				vertical-align: center;
				text-align: center;
				font-size: 13px;
				font-weight: semi-bold;
				text-shadow: 0px 2px 8px black;
				letter-spacing: 0px;
				margin-top: -1px;
			}
		
			.PlayerExpProgressCircle {
				width: 100%;
				height: 100%;
				border-radius: 50%;
				border: 2px solid rgba(215, 227, 255, 0.06);
			}
		
			#PlayerExpProgressCircleFilled {
				width: 100%;
				height: 100%;
				border-radius: 50%;
				border: 2px solid white;
				border-brush: gradient( linear, 0% 0%, 0% 100%, from( #FFF2DF ), color-stop( 0.4, #ebc386 ), color-stop( 0.6, #BA8C47 ), to( #8d6c3a ) );
			}
		}
	}

	.HealthBar.PlayerFriendly.Invulnerable {
		animation-name: PulseHealthBar;
		animation-duration: 0.3s;
		animation-iteration-count: 1;

		.HealthBarContainer {
			background-color: gradient( linear, 0% 0%, 50% 0%, from( #257594 ), to( #24445e ) );

			#HealthBar {
				.ProgressBarLeft {
					background-color: gradient( linear, 0% 0%, 0% 80%, from( #33d9e5 ), to( #20338d ) );
	
					animation-name: InvulnerableHealthBarPlayer_Animation;
					animation-duration: 0.18s;
					animation-iteration-count: infinite;
					animation-timing-function: ease-in-out;
					animation-direction: alternate-reverse;
				}
			}
		}
	}

	.HealthBar.Invulnerable {
		#HealthBar {
			.ProgressBarLeft {
				background-color: gradient( linear, 0% 0%, 0% 80%, from( #33d9e5 ), to( #20338d ) );

				animation-name: InvulnerableHealthBarPlayer_Animation;
				animation-duration: 0.3s;
				animation-iteration-count: infinite;
				animation-timing-function: ease-in-out;
				animation-direction: alternate-reverse;
			}
		}
	}
}

@keyframes 'PulseHealthBar' {
    0% {
		
    }
	20% {
		pre-transform-scale2d: 1.2;
		brightness: 5;
	}
	100% {
		
	}
}

@keyframes 'InvulnerableHealthBarPlayer_Animation' {
    0% {
		opacity: 1;
		brightness: 1.7;
    }
	100% {
		opacity: 0.1;
		brightness: 1;
	}
}

@keyframes 'FlashHealthBarDamage' {
    0% {

    }
	20% {
		background-color: gradient( linear, 0% 0%, 0% 80%, from( white ), to( white ) );
	}
	100% {
		
    }
}

@keyframes 'FlashHealthBarDamageBorder' {
    0% {

    }
	20% {
		background-color: gradient( linear, 0% 0%, 50% 0%, from( rgb(236, 54, 54) ), to( darkred ) );
	}
	100% {
		
    }
}

.HighlightTarget
{
	ignore-parent-flow: true;
	width: 100%;
	height: 100%;
	z-index: 2;
	opacity: .4;
	visibility: collapse;
}

.DoHighlight_Attr1 .TooltipHighlight_Attr1 .HighlightTarget,
.DoHighlight_Attr3 .TooltipHighlight_Attr3 .HighlightTarget,
.DoHighlight_Attr4 .TooltipHighlight_Attr4 .HighlightTarget,
.DoHighlight_Attr6 .TooltipHighlight_Attr6 .HighlightTarget,
.DoHighlight_Attr8 .TooltipHighlight_Attr8 .HighlightTarget,
.DoHighlight_Attr26 .TooltipHighlight_Attr26 .HighlightTarget,
.DoHighlight_Attr27 .TooltipHighlight_Attr27 .HighlightTarget,
.DoHighlight_Attr28 .TooltipHighlight_Attr28 .HighlightTarget,
.DoHighlight_Attr29 .TooltipHighlight_Attr29 .HighlightTarget,
.DoHighlight_Attr31 .TooltipHighlight_Attr31 .HighlightTarget,
.DoHighlight_Attr32 .TooltipHighlight_Attr32 .HighlightTarget,
.DoHighlight_Attr37 .TooltipHighlight_Attr37 .HighlightTarget,
.DoHighlight_Attr38 .TooltipHighlight_Attr38 .HighlightTarget,
.DoHighlight_Attr58 .TooltipHighlight_Attr58 .HighlightTarget,
.DoHighlight_Attr59 .TooltipHighlight_Attr59 .HighlightTarget,
.DoHighlight_Attr60 .TooltipHighlight_Attr60 .HighlightTarget,
.DoHighlight_Attr61 .TooltipHighlight_Attr61 .HighlightTarget,
.DoHighlight_Attr69 .TooltipHighlight_Attr69 .HighlightTarget,
.HighlightActive.DoHighlight_Everything .PlayerInventorySlot:not(.EmptySlot) .HighlightTarget,
.HighlightActive .TooltipHighlight_Everything .HighlightTarget 
{
	visibility: visible;
	animation-name: syngery_highlight;	
  	animation-duration: 2.0s;
  	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite;
}

@keyframes 'syngery_highlight'
{
	0%
	{
		background-color: #e38f1200;
	}

	50%
	{
		background-color: #e38f1299;
	}

	100%
	{
		background-color: #e38f1200;
	}
}

.TimelineBackground {
	width: 90%;
	height: 360px;
	horizontal-align: center;
	background-color: gradient( radial, 50% 0%, 0% 0%, 50% 50%, from( rgba(0, 0, 0, 0.9) ), color-stop( 0.5, rgba(0, 0, 0, 0.75) ), to( rgba(0, 0, 0, 0) ) );
}

.TimelineContainer {
	horizontal-align: center;
	vertical-align: top;
	margin-top: 64px;
	flow-children: right;
	padding: 0px 16px;
	
	.IsInBossStage &,
	.ShowVisualNovel & {
		opacity: 0;
	}	

	brightness: 1;
	blur: gaussian( 0px );

	transition-property: opacity, brightness, blur;
	transition-duration: 0.2s, 0.1s;

	.ShowPowerUpChoices &,
	.GameState_Finished &,
	.DebugFinishedScreen &,
	.IsPaused.UserPaused & {
		brightness: 0.1;
		blur: gaussian( 1px );

		transition-duration: 0.5s;
	}

	.TimerHUD {
		color: whitesmoke;
		margin-bottom: 1px;
		vertical-align: center;
		text-shadow: 0px 2px 12px black;
		font-size: 20px;
	}	

	.Timeline {
		padding: 0px 8px;
		vertical-align: center;

		#TimelineBar {
			width: 480px;
			height: 6px;
			vertical-align: center;
			border-radius: 2px;
			border: 1px solid black;
			background-color: gradient( linear, 0% 0%, 0% 100%, from( #2A1E0C ), to( #463f31 ) );
			background-color: gradient( linear, 0% 0%, 0% 100%, from( #242527 ), to( #3F464A ) );

			.ProgressBarLeft {
				background-color: gradient( linear, 0% 0%, 0% 70%, from( #FFF2DF ), color-stop( 0.48, #ebc386 ), color-stop( 0.52, #BA8C47 ), to( #785C32 ) );
				border-radius: 1px;
			}
		}
	
		.MinibossTimelineIcon {
			width: 24px;
			height: 24px;
			vertical-align: center;
			
			background-image: url( "file://{images}/control_icons/24px/help_diamond.svg" );
			opacity-brush: gradient( linear, 0% 0%, 0% 100%, from( LighterGrey ), to( DarkGrey ) );
			img-shadow: 0px 2px 16px black;
			background-size: 80%;
			background-position: center;
			background-repeat: no-repeat;
			
			&.Revealed {
				texture-sampling: point;
				background-size: cover;
				img-shadow: none;
				opacity-brush: white;

				&.MinimapResurrectorIcon {
					background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_resurrector.png" );
				}

				&.MinimapGolemIcon {
					background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_golem.png" );
				}

				&.MinimapAbsorberIcon {
					background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivor_defender.png" );
				}

				&.MinimapArcherIcon {
					background-image: url( "file://{images}/events/crownfall/survivors/minimap/npc_dota_survivors_archer.png" );
				}
			}
		}

		.BossTimelineIcon {
			width: 32px;
			height: 32px;
			horizontal-align: right;
			vertical-align: center;
			margin-right: -16px;
			texture-sampling: point;
			margin-bottom: 6px;

			background-size: cover;
			background-image: url( "file://{images}/heroes/icons/npc_dota_hero_vengefulspirit_alt3.png" );
		}
	}
} 

#ResizeButtonContainer {
	horizontal-align: left;
	transform: scaleX( -1 );
	margin: 1px;
}

.ChatWheelMessage
{
	flow-children: right;
	height: 100px;
	vertical-align: center;
	                           
}

.ChatWheelMessage.ChatWheelMessageIsSpray
{
    height: 200px;
    width: 220px;
    padding-left: 6px;
    padding-right: 0px;
}

.ChatWheelMessageIcon
{
	width: 20px;
	height: 20px;
	background-image: url( "file://{images}/control_icons/chat_wheel_icon.png" );
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
    wash-color: #FA98E8;
}

.ChatWheelMessageSoundIcon {
	width: 30px;
	height: 30px;
	vertical-align: center;
	horizontal-align: center;

	background-image: url( "file://{images}/hud/reborn/icon_scoreboard_mute_sound.psd" );
	background-repeat: no-repeat;
	background-size: contain;

	wash-color: white;

}

.ChatWheelMessage.ChatWheelMessageHasSound:not(.ChatWheelMessageIsSpray) #ChatWheelMessageSoundButton
{
	visibility: visible;
}

#ChatWheelMessageSoundButton
{
	ui-scale: 70%;

	visibility: collapse;
	vertical-align: center;
	flow-children: down;

	Label {
		horizontal-align: center;
		vertical-align: center;
		text-align: center;
		color: LighterGrey;
		text-shadow: 0px 2px 8px black;
		max-height: 43px;
		margin: 0px 4px;
	}

	.ChatWheelMessageContainer {
		margin-top: 4px;
		flow-children: right;
		horizontal-align: center;		
	}
}

#dota_survivors_disable_dialogue {
	margin-top: 4px;
	vertical-align: middle;

	Label {
		font-size: 16px;
	}
}