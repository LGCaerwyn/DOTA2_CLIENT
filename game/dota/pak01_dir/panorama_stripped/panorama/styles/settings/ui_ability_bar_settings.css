@import url("file://{resources}/styles/popups/popup_settings_reborn.css");

#AbilitiesHotkeysSection {
	margin: 6px 0px 12px;
	width: 100%;
	flow-children: down;
	border: 1px solid black;
	overflow: clip;
	box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.01);

	.SettingsSectionSubtitle {
		vertical-align: center;
		margin: 0px;
		margin-left: 16px;
		max-width: 250px;
		height: 30px;
		text-overflow: shrink;
	}

	.AbilityHotkey {
		background-color: DarkerGrey;
		min-width: 24px;
		height: 24px;
		max-width: 72px;
		font-size: 15px;
		text-overflow: shrink;
		text-align: center;
		text-transform: uppercase;
		color: LightestGrey;
		border-radius: 3px;
		border: 1px solid black;
		box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.5);
		padding: 2px 4px 0px 4px;

		transition-property: brighness, border, border-brush, box-shadow;
		transition-duration: 0.05s;
	}

	.AbilityHotkey.Alt {
		margin-top: 23px;
		height: 17px;
		font-size: 12px;
		padding: 0px 2px 0px 2px;
		color: LighterGrey;
		visibility: collapse;
	}

	& .HasModifier	{
		.AbilityHotkey.Alt {
			visibility: visible;
		}
	}

	.QuickCastCheckBoxContainer
	{
		horizontal-align: right;
		vertical-align: bottom;
		margin-right: -4px;
		margin-bottom: -4px;

		#QuickcastDropdown {
			visibility: collapse;

			&.ShowQuickCastCheckBox
			{
				visibility: visible;
			}
		}

		.HasQuickcast &
		{
			visibility: visible;
		}
	}

	.QuickCastControl,
	.QuickCastControl:enabled:hover:not(:parentdisabled) {
		flow-children: none;
		horizontal-align: right;
		
		background-color: none;
		background-image: none;
		width: 300px;

		box-shadow: none;
		padding: 0px;
		background-size: 0px;
		background-position: 50% 50%;
		width: fit-children;

		border: 0px;

		font-size: 24px;
		height: 25px;
		z-index: 1;

		transition-property: brightness, transform;
		transition-duration: 0.05s;
	}

	.QuickCastControl:hover	{
		brightness: 2;
	}

	.QuickCastControl:active	{
		brightness: 0.5;
		transform: translateY( 1px );
	}

	.AbilityHotkeysBackground {
		ignore-parent-flow: true;
		width: 100%;
		height: 100%;
		background-image: url( "file://{images}/hud/reborn/settings_ability_bar_background.png" );
		background-position: 30% 10%;
		background-repeat: no-repeat;
		blur: gaussian( 10px );
		brightness: 0.2;
	}

	.HotkeyUnitSelectorButtonsContainer {
		width: 100%;
		height: 72px;

		#UnitSpecificHotkeysCheckbox {
			vertical-align: center;
			margin-left: 12px;
			margin-bottom: 4px;
		}

		#DirectCastBindingCheckBox {
			horizontal-align: right;
			vertical-align: center;
			margin-right: 12px;
			flow-children: left;
			margin-bottom: 3px;

			Label {
				padding-left: 0px;
				padding-right: 6px;
				font-size: 16px;
				margin-bottom: 4px;
			}
		}
	}

	.HotkeyUnitSelectorButtons {
		horizontal-align: center;
		vertical-align: center;
		flow-children: right;
		padding: 6px;
	}

	#AbilityBar {
		horizontal-align: center;
		flow-children: right;
		height: 140px;

		.left_flare {
			height: 100%;
		}

		#center_bg {
			height: 145px;
			background-image: url( "file://{images}/events/crownfall/survivors/ability_bg.png" );
			background-size: 100%;
			vertical-align: bottom;
		}

		#PortraitContainer {
			height: 100%;
			width: height-percentage(100%);
			overflow: clip;
			z-index: 2;
			box-shadow: inset 0px 1px 2px -1px rgba(255, 255, 255, 0.1);

			#PortraitHUD {
				width: 100%;
				height: 100%;

				transition-property: brightness, transform;
				transition-duration: 0.2s;

				&.HoverPortrait {
					.ShowHeroSelector & {
						brightness: 1.5;
						transform: scale3d( 1.05, 1.05, 1 );
					}
				}
			}

			.PortraitGradient {
				width: 100%;
				height: 100%;
				background-color: gradient( linear, 0% 50%, 0% 100%, from( #00000000 ), to( #000000 ) );
				opacity: 0.9;
			}
		}

		#Abilities {
			vertical-align: top;
			horizontal-align: center;
			
			height: 100%;
			background-image: url( "file://{images}/events/crownfall/survivors/ability_bg.png" );
			background-position: center;
			background-size: 102%;
			background-color: rgba(0, 0, 0, 0.8);
			box-shadow: inset 0px 1px 2px -1px rgba(255, 255, 255, 0.1);

			.AbilitiesEdgeShadow {
				ignore-parent-flow: true;
				width: 10px;
				height: 100%;
				background-color: gradient( linear, 0% 0%, 100% 0%, from( #000000 ), to( #00000000 ) );
				opacity: 0.4;

				&.Right {
					horizontal-align: right;
					transform: scaleX( -1 );
				}
			}

			.AbilitiesContainerDash {
				width: 100%;
				height: 1px;
				margin: -1px 12px 0px;
				opacity: 0.01;
				background-color: gradient( linear, 0% 0%, 100% 0%, from( rgba(255, 255, 255, 0) ), color-stop( 0.1, white ), color-stop( 0.9, white ), to( rgba(255, 255, 255, 0) ) );
			}
			
			.AbilitiesContainer {
				vertical-align: center;
				horizontal-align: center;
				margin: 0px 14px;
				height: fill-parent-flow(1);

				.Ability {
					width: 74px;
					height: width-percentage(100%);
					margin: 0px 2px;
					vertical-align: center;

					visibility: collapse;

					.AbilityGroup {
						width: 100%;
						height: 100%;

						&:hover {
							.AbilityHotkey {
								border-color: white;
								border-brush: gradient( linear, 0% 0%, 0% 100%, from( settingsBlue ), to( settingsBlueDark ) );
								brightness: 1.5;
								box-shadow: 0px 0px 16px settingsBlue&33;
							}

							.AbilityImage {
								brightness: 1.75;
							}
						}
					}
					
					.AbilityContainer {
						margin: 3px;
						width: 100%;
						height: 100%;
						background-color: rgba(0, 0, 0, 0.9);
						padding: 2px;
						border: 1px solid black;
						box-shadow: 0px 1px 1px rgba(255, 255, 255, 0.01);

						.AbilityImageContainer {
							border: 2px solid #3B434B;
							border-top-color: #798188;
							border-bottom-color: #232A31;
							height: 100%;
							width: 100%;

							.AbilityImage {
								transition-property: brightness;
								transition-duration: 0.1s;
								visibility: collapse;
							}

							.AbilityDefaultText {
								horizontal-align: center;
								vertical-align: center;
								font-size: 20px;
								visibility: collapse;
							}
						}
					}

					&.Autocast {
						.AbilityContainer {
							padding: 5px;
						}
					}

					&.Passive {
						.AbilityContainer {
							background-color: rgba(0, 0, 0, 0);
							padding: 0px;
							margin: 5px;
						}

						.AbilityImageContainer {
							border: 2px solid #22262b;
							border-bottom-color: #363a3e;
							border-top-color: #0a0c0e;
							box-shadow: inset 0px 3px 24px -2px rgba(0, 0, 0, 0.9);
						}

						&:hover {
							.AbilityImage {
								brightness: 1;
							}
						}
					}

					&.ShowImage {
						.AbilityImageContainer {
							.AbilityImage {
								visibility: visible;
							}
						}
					}

					&.ShowDefaultText {
						.AbilityImageContainer {
							.AbilityDefaultText {
								visibility: visible;
							}
						}
					}
				}

				.HasAbility {
					visibility: visible;
				}
			}
		}

		#Inventory {
			flow-children: down;
			vertical-align: bottom;
			horizontal-align: right;
			height: 100%;
			padding: 6px;
			padding-bottom: 0px;

			background-image: url( "file://{images}/hud/reborn/inventory_bg.psd" );
			background-size: 100%;
			background-repeat: no-repeat;

			.InventoryRow {
				flow-children: right;
				horizontal-align: center;

				.Item {						
					.ItemContainer {
						width: 58px;
						height: 40px;						
						background-size: cover;
						overflow: noclip;
						background-color: #000000b6;
						margin: 4px;
						border: 1px solid black;
						box-shadow: inset 0px 2px 5px rgba(0, 0, 0, 0.4);
					}

					&:hover {
						.AbilityHotkey {
							border-color: white;
							border-brush: gradient( linear, 0% 0%, 0% 100%, from( settingsBlue ), to( settingsBlueDark ) );
							brightness: 1.5;
							box-shadow: 0px 0px 16px settingsBlue&33;
						}
					}
				}
			}
		}

		                
			                
				                     
			 
		    

		#TeleportAndNeutralSlot	{
			height: 100%;
			vertical-align: bottom;
			horizontal-align: right;
			flow-children: down;
			margin-right: 12px;

			.right_flare {
				height: 100%;
				ignore-parent-flow: true;
			}

			#InventoryTP,
			#InventoryNeutral {		
				margin-left: 6px;
				margin-top: 6px;
				
				.TeleportAndNeutralSlotContainer {
					height: 42px;
					width: 42px;
					margin: 3px;
					margin-left: 5px;
					border-radius: 50%;
					border: 1px solid #000000;
					background-size: 100%;
					box-shadow: inset #000000b6 0px 2px 8px -2px;
					background-color: rgba(0, 0, 0, 0.7);
				}

				&:hover {
					.AbilityHotkey {
						border-color: white;
						border-brush: gradient( linear, 0% 0%, 0% 100%, from( settingsBlue ), to( settingsBlueDark ) );
						brightness: 1.5;
						box-shadow: 0px 0px 16px settingsBlue&33;
					}
				}
			}

			#InventoryTP {
				.TeleportAndNeutralSlotContainer {
					background-image: url("file://{images}/items/tpscroll.png");
					background-size: cover;
					background-position: center;
				}
			}

			#InventoryNeutral {
				margin-top: 26px;
			}
		}
	}
}

.AbilityBarHeroSelectorContainer {
	width: 100%;
	height: fill-parent-flow(1);
	horizontal-align: center;
	vertical-align: bottom;

	&:hover	{
		#AbilityBarHeroSelector {
			background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0) ), to( rgba(0, 0, 0, 0.9) ) );

			.AbilityBarHeroSelectorLabel {
				color: white;
			}
	
			.AbilityBindingsHeroSelectorArrow {
				opacity: 1;
			}
		}
	}
	
	#AbilityBarHeroSelector	{
		width: 100%;
		flow-children: down;
		vertical-align: bottom;
		padding: 8px 6px;
		border-radius: 3px;
		background-color: gradient( linear, 0% 0%, 0% 100%, from( rgba(0, 0, 0, 0) ), to( rgba(0, 0, 0, 0.8) ) );

		transition-property: background-color, border;
		transition-duration: 0.1s;

		visibility: collapse;

		.AbilityBarHeroSelectorLabel {
			horizontal-align: center;
			text-transform: uppercase;
			text-align: center;
			color: rgba(255, 255, 255, 0.6);
			letter-spacing: 1.5px;
			font-size: 14px;
			line-height: 1;
			text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);
			height: 17px;
			width: 100%;
			text-overflow: shrink;

			transition-property: color;
			transition-duration: 0.1s;
		}

		.AbilityBindingsHeroSelectorArrow {
			width: 12px;
			margin-top: -2px;
			horizontal-align: center;
			opacity: 0.6;

			transition-property: opacity;
			transition-duration: 0.1s;
		}

		.ShowHeroSelector & {
			visibility: visible;
		}
	}
}

.HeroAbilityActionsContainer {
	margin: 0px 20px;
	padding: 8px 0px 10px;
	horizontal-align: center;
	flow-children: right;

	.UnitAbilityQuickcastButton {
		visibility: visible;
		height: 24px;
		
		.InfoIcon {
			margin: 0px;
			width: 16px;
			height: 16px;
			margin-bottom: -3px;
		}
		
		#DefaultAbilityQuickcastCheckBox {
			horizontal-align: center;

			Label {
				font-size: 16px;
				margin-top: -3px;
				text-shadow: 0px 1px 6px rgba(0, 0, 0, 0.8);
			}

			.TickBox {
				margin: 0px;
			}
		}

		.DirectCastEnabled & {
			visibility: collapse;
		}
	}

	.DirectCastSelectorButtons {
		height: 24px;
		margin-left: -4px;
		visibility: collapse;

		RadioButton {
			padding: 1px 4px;
			vertical-align: center;

			Label {
				color: LightGrey;
				font-size: 16px;
			}

			.RadioBox {
				min-width: 18px;
				min-height: 18px;
			}

			&:selected {
				Label {
					color: whitesmoke;
					font-size: 16px;
					max-width: 88px;
					text-overflow: shrink;
				}
			}
		}

		.DirectCastEnabled & {
			visibility: visible;
		}
	}
}

.ItemSpecificBindsContainer {
	width: 100%;
	flow-children: right;
	padding-bottom: 8px;
	border-bottom: 1px solid #FFFFFF06;
	margin-top: -4px;
	margin-bottom: 12px;
	                               

	                           

	.QuickcastItemsEnabled & {
		visibility: visible;

		.ItemSpecificBindsDescription {
			opacity: 1;
		}
	}

	.ItemSpecificBindsDescription {
		color: LightGrey;
		font-size: 15px;
		margin-right: 12px;
		vertical-align: center;
		opacity: 0.4;
		max-width: 700px;
		height: 18px;
		text-overflow: shrink;

		transition-property: opacity;
		transition-duration: 0.15s;
	}
	
	#ItemSpecificBindsButton {
		vertical-align: center;
		max-width: 240px;

		Label {
			line-height: 1;
		}
	}
}

#ClearHeroAbilityBindings {
	horizontal-align: right;
	vertical-align: center;
	tooltip-position: top;
	margin-left: 8px;
	
	Label {
		color: LighterGrey;
	}

	visibility: collapse;

	.ShowClearButton & {
		visibility: visible;
	}
}

.ItemQuickcastContainer	{
	                  
	horizontal-align: center;
	vertical-align: bottom;
	flow-children: down;
	padding: 0px 0px 10px;

	.DefaultItemQuickcastCheckBoxContainer {
		horizontal-align: center;
		height: 24px;

		#DefaultItemQuickcastCheckBox {
			Label {
				font-size: 16px;
				margin-top: -3px;
				text-shadow: 0px 1px 6px rgba(0, 0, 0, 0.8);
			}

			.TickBox {
				margin: 0px;
			}
		}

		.DirectCastEnabled & {
			visibility: collapse;
		}
	}

	.ItemDirectCastButtons {
		flow-children: right;
		horizontal-align: center;
		height: 24px;
		visibility: collapse;

		.DirectCastEnabled & {
			visibility: visible;
		}

		RadioButton {
			padding: 1px 4px;
			vertical-align: center;

			Label {
				color: LightGrey;
				font-size: 16px;
				max-width: 80px;
				text-overflow: shrink;
			}

			.RadioBox {
				min-width: 18px;
				min-height: 18px;
			}

			&:selected {
				Label {
					color: whitesmoke;
					font-size: 16px;
				}
			}
		}
	}
	
	.ItemSpecificBindsButton {
		horizontal-align: center;
		margin-left: 6px;
	}
}

.QuickCastDropdownItem
{
	flow-children: right;
	min-height: 40px;
	width: fit-children;
}

.QuickCastDropdownItem Label
{
	padding: 0px 0px 0px 4px;
	vertical-align: center;
	border: 0px;

	background-color: #00000000;                              

	&:hover {
		background-color: #00000000;
	}
}

DropDownMenu
{
	box-shadow: 0px 8px 40px rgba(0, 0, 0, 0.4);
}

DropDownMenu .QuickCastDropdownItem
{
	width: 100%;
	padding-left: 4px;
	border-bottom: 1px solid black;

	&:hover {
		background-color: #585e62;
	}
}


.QuickCastDescription
{
	visibility: collapse;
}

DropDownMenu .QuickCastDescription
{
	visibility: visible;
}

.DirectQuickcastBind
{
	#Normal
	{
		visibility: collapse;
	}	
}