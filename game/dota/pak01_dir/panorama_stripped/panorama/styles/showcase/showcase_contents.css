@define ShowcaseContents_GizmoSize: 15px;

DOTAShowcaseContents
{
	#ShowcaseBackground {
		vertical-align: center;
		horizontal-align: center;

		DOTAShowcasePage & {
			margin-top: 60px;
		}
		
		&.DedicatedShowcaseBackground {
			DOTAShowcasePage & {
				margin-top: 0px;
			}
		}
	}

	&.ShowcaseType_Profile {
		#ShowcaseBackground {
			.AspectRatio21x9 & {
				opacity-mask: url( "file://{images}/masks/profile_background_mask.psd" );
			}
		}
	}

	#ShowcaseGridLines {
		width: 100%;
		height: 100%;
	}

	#ShowcaseForeground {
		width: 100%;
		height: 100%;
		overflow: clip;

		#ShowcaseCanvas {
			width: 1828px;
			height: 760px;
			border: 1px solid #ffffff;
			border-bottom: 0px;
			border-left: 0px;
			border-right: 0px;
			border-brush: gradient( linear, 20% 0%, 100% 0%, from( #FFFFFF00 ), color-stop( 0, #FFFFFF ), color-stop( 0.7, #FFFFFF ), to( #FFFFFF00 ) );

			transition-property: opacity, border, border-brush;
			transition-duration: 0.2s;

			opacity: 0.08;
			visibility: collapse;

			.IsEditing & {
				border: 1px solid #ffffff;
				border-brush: gradient( linear, 0% 0%, 100% 0%, from( #FFFFFF ), color-stop( 0.2, #FFFFFF ), color-stop( 0.8, #FFFFFF ), to( #FFFFFF ) );
				opacity: 0.2;
			}
		}

		#ShowcaseForegroundItemContainer {
			overflow: clip;
			width: 100%;
			height: 100%;
		}
	}

	&.ShowcaseType_Profile {
		#ShowcaseForeground {
			#ShowcaseCanvas {
				visibility: visible;
			}
		}
	}
}

.MiniShowcaseBorder {
	width: 100%;
	height: 100%;
	border: 3px solid white;
	border-brush: gradient( linear, 0% 0%, 0% 100%, from( LightestGrey ), to( LightGrey ) );
	visibility: collapse;

	opacity: 0;
	transition-property: opacity, border;
	transition-duration: 0.1s;
	transition-delay: 1.2s;

	.ShowcaseType_MiniProfile.IsEditing & {
		visibility: visible;
		opacity: 1;
	}
}

DOTAShowcasePage {
	.HeaderTopShadow {
		width: 100%;
		height: 380px;
		background-color: gradient(linear, 0% 0%, 0% 100%, from( black ), color-stop( 0.6, black ), to( DarkestGrey&00 ));
		blur: gaussian( 8px );
		opacity: 0.7;
	}
}

.ShowcaseItemWidget {
	ignore-parent-flow: true;
	overflow: noclip;
	.ShowcaseLayerListOpen & {
		&:not(.IsHighlightedShowcaseItem) {
			brightness: 0.4;
			opacity: 0.5;
		}
	}

	transition-property: brightness, transform;
	transition-duration: 0.15s;

	.IsEditing & {
		&.IsHighlightedShowcaseItem {
			box-shadow: hollow 0px 0px 0px 1px #327bff99;
			brightness: 1.4;
		}
	}

  	
	              
		                             
			                
			                                    
		 
	 
  

	              
	  	                                                                        
	   
	  
	                 
	  	                                                     
	   

	.IsEditing.GridSnap & {
		box-shadow: hollow 0px 0px 0px 1px #ffffff;
		brightness: 1.4;
	}
}

@keyframes 'SelectedGlow' {
    0% {
		brightness: 1.0;
    }
    100% {
		brightness: 3.0;
    }
}

@define gismoHighlightColor: #45A6FF;

#ShowcaseGizmos {
	visibility: collapse;
	
	width: 100%;
	height: 100%;
	overflow: clip;

	.IsEditing.HasShowcaseItemSelect:not(.ShowcaseLayerListOpen) & {
		visibility: visible;
	}

	#ShowcaseMoveGizmo {
		                               
		                           
		                                      
		                                 

		overflow: noclip;
		border: 1px solid gismoHighlightColor;
		                      
	}

	.ShowcaseResizeGizmo {
		border: 2px solid gismoHighlightColor;
		background-color: #FFFFFFFF;
		width: ShowcaseContents_GizmoSize;
		height: ShowcaseContents_GizmoSize;
		border-radius: 2px;
		box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.6);

		                                                    
		                                
		
		&:hover {
			border: 2px solid white;
			background-color: gismoHighlightColor;
			brightness: 1.5;
		}
	}

	#ShowcaseRotationGizmo {
		border: 1px solid gismoHighlightColor;
		background-color: #FFFFFFFF;
		width: ShowcaseContents_GizmoSize;
		height: ShowcaseContents_GizmoSize;
		border-radius: 50%;
		visibility: collapse;
	}
}

#ShowcaseGridLines 
{
	opacity: 0;
	transition-property: opacity;
	transition-duration: 0.1s;
	wash-color: #808080;
	background-color: black;

	.IsEditing.GridSnap & {
		opacity: 0.7;
	}
}