<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	dota_opvars = 
	{
		operators = 
		[
			
			{
				name = "opvars"
				operator = "util_null"
				operator_variables = 
				{
					dota_local_selected_entindex = 
					{
						data_type = "float"
						value = "0"
					}
					dota_random_wheel_speed = 
					{
						data_type = "float"
						value = "0"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
			display_group = "utility"
		}
	}
	dota_null_start = 
	{
		operators = 
		[
		]
		_system_properties = 
		{
			display_game = "dota2"
			display_group = "advanced"
		}
	}
	dota_update_default_multi = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_fade_in = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_fade_out = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_move_vel = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_move_vol = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_move_filter_vel = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_min = 
					{
						data_type = "float"
						value = "750.000000"
					}
					volume_falloff_max = 
					{
						data_type = "float"
						value = "4500.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundlevel = 
					{
						data_type = "float"
						value = "70"
					}
					soundlevel_rand_min = 
					{
						data_type = "float"
						value = "0"
					}
					soundlevel_rand_max = 
					{
						data_type = "float"
						value = "0"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					num_entities = 
					{
						data_type = "float"
						value = "10.000000"
					}
					entities = 
					{
						data_type = "float"
						value = 
						{
							value = "0.000000"
							value1 = "1.000000"
							value2 = "2.000000"
							value3 = "3.000000"
							value4 = "4.000000"
							value5 = "5.000000"
							value6 = "6.000000"
							value7 = "7.000000"
							value8 = "8.000000"
							value9 = "9.000000"
						}
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					spread_radius = 
					{
						data_type = "float"
						value = "300"
					}
					send_dsp = 
					{
						data_type = "float"
						value = "1.000000"
					}
					limiter_on = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_event_name = 
					{
						data_type = "string"
						value = "0"
					}
					limiter_max = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_type = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_entity = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_substring = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_stop_oldest = 
					{
						data_type = "bool"
						value = "true"
					}
					limiter_match_event_duration = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					stop_at_time = 
					{
						data_type = "float"
						value = "-1"
					}
					event_type = 
					{
						data_type = "float"
						value = "0.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					dont_stop_layers = 
					{
						data_type = "float"
						value = "1.000000"
					}
					soundevent_layer2_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer2 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					soundevent_layer3_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer3 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					block_duration = 
					{
						data_type = "float"
						value = "0"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
				}
			},
			
			{
				name = "test_soundevent_block"
				operator = "soundevent_block_test"
				execute_once = "true"
				input_execute = "@public.block_duration"
				match_this_event = "true"
			},
			
			{
				name = "set_soundevent_block"
				operator = "soundevent_block"
				execute_once = "true"
				input_execute = "@public.block_duration"
				input_duration = "@public.block_duration"
				match_this_event = "true"
			},
			
			{
				name = "soundevent_limit_type_switch"
				operator = "ctrl_switch_float"
				input_switch = "@public.limiter_match_type"
				input1 = "-1"
				input2 = "@public.event_type"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "@public.limiter_on"
				input_max_events = "@public.limiter_max"
				match_event_type = "@soundevent_limit_type_switch.output"
				match_entity = "@public.limiter_match_entity"
				match_substring = "@public.limiter_match_substring"
				match_event_name = "@public.limiter_event_name"
				stop_oldest = "@public.limiter_stop_oldest"
				match_duration_type = "greater_than_or_equal"
				match_event_duration = "@public.limiter_match_event_duration"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "level_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.soundlevel"
				input_rand_min = "@public.soundlevel_rand_min"
				input_rand_max = "@public.soundlevel_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				execute_once = "true"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "false"
				input_soundlevel = "@public.soundlevel"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "level_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_level"
				input2 = "@level_random.output"
			},
			
			{
				name = "delay_random"
				operator = "math_random_float"
				execute_once = "true"
				input_execute = "1.000000"
				input_min = "@public.rand_delay_min"
				input_max = "@public.rand_delay_max"
			},
			
			{
				name = "delay_total"
				operator = "math_float"
				execute_once = "true"
				apply = "add"
				input1 = "@public.delay"
				input2 = "@delay_random.output"
			},
			
			{
				name = "listener_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@globals.output_listener_position"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "get_entity"
				operator = "opvar_get_float"
				execute_once = "false"
				check_event_data = "false"
				input_index = "@goto_operator.output_goto_count"
				input_operator_name = "public"
				input_field_name = "entities"
				input_use_namespace = "false"
				array_selection_type = "index"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@get_entity.output"
				input_default_local_position = "@globals.output_listener_front"
			},
			
			{
				name = "source_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@get_entity_info.output_position"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@source_pos_xy.output"
				input_position2 = "@listener_pos_xy.output"
			},
			
			{
				name = "import_dist_limit"
				operator = "sos_import_stack"
				import_stack = "core_distance_limiter"
				execute_once = "true"
				operator_variables = 
				{
					distance = 
					{
						data_type = "float"
						value = "@distance_to_source.output"
					}
					distance_max = 
					{
						data_type = "float"
						value = "@public.distance_max"
					}
				}
			},
			
			{
				name = "volume_falloff_linear"
				operator = "math_remap_float"
				input = "@distance_to_source.output"
				input_min = "@public.volume_falloff_min"
				input_max = "@public.volume_falloff_max"
				input_map_min = "1.000000"
				input_map_max = "0.010000"
				default_to_max = "false"
			},
			
			{
				name = "volume_fade_in"
				operator = "math_remap_float"
				input = "@get_event_info.output_elapsed_time"
				input_min = "0.000000"
				input_max = "@public.volume_fade_in"
				input_map_min = "0.050000"
				input_map_max = "1.000000"
				default_to_max = "true"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@mixer.output_volume"
				input3 = "@public.volume"
				input4 = "@volume_falloff_linear.output"
				input5 = "@volume_fade_in.output"
				input6 = "@globals.output_snd_gain_convar"
				input7 = "1.000000"
				input8 = "1.000000"
				input9 = "@public.volume_atten"
				input10 = "@globals.output_snd_gamesound_convar"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				input_master_volume = "@volume_accumulate.output"
				input_radius = "@public.spread_radius"
				input_distance = "@distance_to_source.output"
				input_source_position = "@source_pos_xy.output"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
				input_rear_stereo_scale = "1.000000"
			},
			
			{
				name = "accumulate_speakers"
				operator = "accumulate_indexed_speakers"
				input_index = "@goto_operator.output_goto_count"
				input = "@speakers_spatialize.output"
			},
			
			{
				name = "goto_operator"
				operator = "sos_goto"
				input_execute = "1"
				input_goto_operator = "get_entity"
				input_max_loop_count = "@public.num_entities"
			},
			
			{
				name = "stop_time_off"
				operator = "math_float"
				apply = "less_than"
				input1 = "@public.stop_at_time"
				input2 = "0"
			},
			
			{
				name = "stop_time_not_elapsed"
				operator = "math_float"
				apply = "less_than"
				input1 = "@get_event_info.output_elapsed_time"
				input2 = "@public.stop_at_time"
			},
			
			{
				name = "stop_time_or"
				operator = "math_float"
				apply = "max"
				input2 = "@stop_time_off.output"
				input1 = "@stop_time_not_elapsed.output"
			},
			
			{
				name = "stop_time_and_unstopped"
				operator = "math_float"
				apply = "min"
				input2 = "@stop_time_or.output"
				input1 = "@get_event_info.output_unstopped"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@stop_time_and_unstopped.output"
				input_speaker_volumes = "@accumulate_speakers.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@delay_total.output"
				input_fade_out = "@public.volume_fade_out"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_default = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_fade_in = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_fade_out = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_move_vel = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_move_vol = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_move_filter_vel = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_min = 
					{
						data_type = "float"
						value = "750.000000"
					}
					volume_falloff_max = 
					{
						data_type = "float"
						value = "4500.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_use_FOW = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_FOW_filter_vel = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_FOW_radius = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_on_player_mult = 
					{
						data_type = "float"
						value = "1.250000"
					}
					max_gain_change_per_second = 
					{
						data_type = "float"
						value = "-1"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundlevel = 
					{
						data_type = "float"
						value = "70"
					}
					soundlevel_rand_min = 
					{
						data_type = "float"
						value = "0"
					}
					soundlevel_rand_max = 
					{
						data_type = "float"
						value = "0"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					use_entity_position = 
					{
						data_type = "float"
						value = "1.000000"
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					spread_radius = 
					{
						data_type = "float"
						value = "300"
					}
					send_dsp = 
					{
						data_type = "float"
						value = "1.000000"
					}
					limiter_on = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_event_name = 
					{
						data_type = "string"
						value = "0"
					}
					limiter_max = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_type = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_entity = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_substring = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_stop_oldest = 
					{
						data_type = "bool"
						value = "true"
					}
					limiter_match_event_duration = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					stop_at_time = 
					{
						data_type = "float"
						value = "-1"
					}
					event_type = 
					{
						data_type = "float"
						value = "0.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					dont_stop_layers = 
					{
						data_type = "float"
						value = "1.000000"
					}
					soundevent_layer2_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer2 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					soundevent_layer3_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer3 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					block_duration = 
					{
						data_type = "float"
						value = "0.050000"
					}
					block_distance = 
					{
						data_type = "float"
						value = "100"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					hrtf_enabled = 
					{
						data_type = "float"
						value = "0.000000"
					}
					voicegraph = 
					{
						data_type = "string"
						value = "dota.hrtf_basic"
					}
					voicegraph_track = 
					{
						data_type = "string"
						value = "track_01"
					}
				}
			},
			
			{
				name = "soundevent_limit_type_switch"
				operator = "ctrl_switch_float"
				input_switch = "@public.limiter_match_type"
				input1 = "-1"
				input2 = "@public.event_type"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "@public.limiter_on"
				input_max_events = "@public.limiter_max"
				match_event_type = "@soundevent_limit_type_switch.output"
				match_entity = "@public.limiter_match_entity"
				match_substring = "@public.limiter_match_substring"
				match_event_name = "@public.limiter_event_name"
				stop_oldest = "@public.limiter_stop_oldest"
				match_duration_type = "greater_than_or_equal"
				match_event_duration = "@public.limiter_match_event_duration"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
				input_default_world_position = "@public.position"
				input_default_local_position = "@globals.output_listener_front"
			},
			
			{
				name = "use_entity_success"
				operator = "math_float"
				apply = "min"
				input1 = "@public.use_entity_position"
				input2 = "@get_entity_info.output_success"
			},
			
			{
				name = "position_switch"
				operator = "ctrl_switch_float3"
				input_switch = "@use_entity_success.output"
				input1 = "@public.position"
				input2 = "@get_entity_info.output_position"
			},
			
			{
				name = "source_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@position_switch.output"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "listener_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@globals.output_listener_position"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@source_pos_xy.output"
				input_position2 = "@listener_pos_xy.output"
			},
			
			{
				name = "test_soundevent_block"
				operator = "soundevent_block_test"
				execute_once = "true"
				input_execute = "@public.block_duration"
				match_this_event = "true"
				input_position = "@position_switch.output"
			},
			
			{
				name = "set_soundevent_block"
				operator = "soundevent_block"
				execute_once = "true"
				input_execute = "@public.block_duration"
				input_duration = "@public.block_duration"
				input_distance = "@public.block_distance"
				match_this_event = "true"
				input_position = "@position_switch.output"
			},
			
			{
				name = "import_dist_limit"
				operator = "sos_import_stack"
				import_stack = "core_distance_limiter"
				operator_variables = 
				{
					distance = 
					{
						data_type = "float"
						value = "@distance_to_source.output"
					}
					distance_max = 
					{
						data_type = "float"
						value = "@public.distance_max"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "level_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.soundlevel"
				input_rand_min = "@public.soundlevel_rand_min"
				input_rand_max = "@public.soundlevel_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "delay_random"
				operator = "math_random_float"
				input_execute = "1.000000"
				input_min = "@public.rand_delay_min"
				input_max = "@public.rand_delay_max"
			},
			
			{
				name = "delay_total"
				operator = "math_float"
				apply = "add"
				input1 = "@public.delay"
				input2 = "@delay_random.output"
			},
			
			{
				name = "volume_adjust_local_player"
				operator = "math_float"
				apply = "mult"
				input1 = "@get_entity_info.output_is_selected_by_local_player"
				input2 = "0.300000"
			},
			
			{
				name = "volume_add_local_player"
				operator = "math_float"
				apply = "add"
				input1 = "@volume_adjust_local_player.output"
				input2 = "1.000000"
			},
			
			{
				name = "volume_on_player"
				operator = "ctrl_switch_float"
				input_switch = "@get_entity_info.output_entity_is_actual_player_entity"
				input1 = "1"
				input2 = "@public.volume_on_player_mult"
			},
			
			{
				name = "get_vsnd"
				execute_once = "true"
				operator = "opvar_get_vsnd"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "false"
				input_soundlevel = "@level_random.output"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "level_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_level"
				input2 = "@level_random.output"
			},
			
			{
				name = "volume_falloff_linear"
				operator = "math_remap_float"
				input = "@distance_to_source.output"
				input_min = "@public.volume_falloff_min"
				input_max = "@public.volume_falloff_max"
				input_map_min = "1.000000"
				input_map_max = "0.010000"
				default_to_max = "false"
			},
			
			{
				name = "volume_fade_in"
				operator = "math_remap_float"
				input = "@get_event_info.output_elapsed_time"
				input_min = "0.000000"
				input_max = "@public.volume_fade_in"
				input_map_min = "0.050000"
				input_map_max = "1.000000"
				default_to_max = "true"
			},
			
			{
				name = "volume_move"
				input_execute = "1"
				operator = "math_remap_float"
				input = "@get_entity_info.output_velocity"
				input_min = "0.000000"
				input_max = "@public.volume_move_vel"
				input_map_min = "@public.volume_move_vol"
				input_map_max = "1.000000"
				default_to_max = "true"
			},
			
			{
				name = "volume_move_filter"
				operator = "math_filter_float"
				input = "@volume_move.output"
				input_max_velocity = "@public.volume_move_filter_vel"
			},
			
			{
				name = "volume_FOW"
				input_execute = "@public.volume_use_FOW"
				operator = "calc_audibility"
				input_source_position = "@position_switch.output"
				input_radius = "@public.volume_FOW_radius"
			},
			
			{
				name = "volume_dormant_and_use_FOW"
				operator = "math_float"
				apply = "min"
				input1 = "@get_entity_info.output_ent_dormant"
				input2 = "@public.volume_use_FOW"
			},
			
			{
				name = "volume_dormant_inv"
				operator = "math_float"
				apply = "sub"
				input1 = "1.000000"
				input2 = "@volume_dormant_and_use_FOW.output"
			},
			
			{
				name = "volume_dormant_and_FOW"
				operator = "math_float"
				apply = "min"
				input1 = "@volume_dormant_inv.output"
				input2 = "@volume_FOW.output"
			},
			
			{
				name = "volume_FOW_filter"
				operator = "math_filter_float"
				input = "@volume_dormant_and_FOW.output"
				input_max_velocity = "@public.volume_FOW_filter_vel"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@mixer.output_volume"
				input3 = "@public.volume"
				input4 = "@volume_falloff_linear.output"
				input5 = "@volume_fade_in.output"
				input6 = "@globals.output_snd_gain_convar"
				input7 = "@volume_move_filter.output"
				input8 = "@volume_add_local_player.output"
				input9 = "@public.volume_atten"
				input10 = "@globals.output_snd_gamesound_convar"
				input11 = "@volume_FOW_filter.output"
				input12 = "@volume_on_player.output"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "dsp_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_dsp"
				input2 = "@public.send_dsp"
			},
			
			{
				name = "dsp_distantDSP"
				operator = "calc_distant_dsp"
				input_distance = "@distance_to_source.output"
				input_level = "@level_apply_mixer.output"
			},
			
			{
				name = "dsp_apply_distant"
				operator = "math_float"
				apply = "mult"
				input1 = "@dsp_distantDSP.output"
				input2 = "@dsp_apply_mixer.output"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				input_master_volume = "@volume_accumulate.output"
				input_radius = "@public.spread_radius"
				input_distance = "@distance_to_source.output"
				input_source_position = "@position_switch.output"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
				input_rear_stereo_scale = "1.000000"
			},
			
			{
				name = "stop_time_off"
				operator = "math_float"
				apply = "less_than"
				input1 = "@public.stop_at_time"
				input2 = "0"
			},
			
			{
				name = "stop_time_not_elapsed"
				operator = "math_float"
				apply = "less_than"
				input1 = "@get_event_info.output_elapsed_time"
				input2 = "@public.stop_at_time"
			},
			
			{
				name = "stop_time_or"
				operator = "math_float"
				apply = "max"
				input2 = "@stop_time_off.output"
				input1 = "@stop_time_not_elapsed.output"
			},
			
			{
				name = "stop_time_and_unstopped"
				operator = "math_float"
				apply = "min"
				input2 = "@stop_time_or.output"
				input1 = "@get_event_info.output_unstopped"
			},
			
			{
				name = "global_hrtf_enabled"
				operator = "convar_get"
				convar = "dota_enable_spatial_audio"
			},
			
			{
				name = "updated_hrtf_enabled"
				operator = "math_float"
				apply = "mult"
				input1 = "@global_hrtf_enabled.output"
				input2 = "@public.hrtf_enabled"
			},
			
			{
				name = "send_voicegraph_hrtf_enabled"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "HRTF Enabled"
				input = "@updated_hrtf_enabled.output"
			},
			
			{
				name = "global_hrtf_mix"
				operator = "convar_get"
				convar = "dota_spatial_audio_mix"
			},
			
			{
				name = "send_voicegraph_hrtf_mix"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "HRTF Mix"
				input = "@global_hrtf_mix.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@stop_time_and_unstopped.output"
				input_speaker_volumes = "@speakers_spatialize.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@delay_total.output"
				input_fade_out = "@public.volume_fade_out"
				input_memory_type = "@public.memory_type"
				input_max_gain_change_per_second = "@public.max_gain_change_per_second"
			},
			
			{
				name = "vsnd_playing_and_unstopped"
				operator = "math_float"
				apply = "min"
				input2 = "@start_vsnd.output_voice_playing"
				input1 = "@get_event_info.output_unstopped"
			},
			
			{
				name = "start_layer2"
				operator = "soundevent_start"
				input_spawn_oneshots = "@public.dont_stop_layers"
				execute_once = "@public.dont_stop_layers"
				input_execute = "@public.soundevent_layer2_on"
				input_start = "@vsnd_playing_and_unstopped.output"
				soundevent_name = "@public.soundevent_layer2"
				pass_opvar_args = "true"
				operator_variables = 
				{
					public.position = 
					{
						operator_arg_field = "true"
						data_type = "float3"
						value = "@public.position"
					}
				}
			},
			
			{
				name = "start_layer3"
				operator = "soundevent_start"
				input_spawn_oneshots = "@public.dont_stop_layers"
				execute_once = "@public.dont_stop_layers"
				input_execute = "@public.soundevent_layer3_on"
				input_start = "@vsnd_playing_and_unstopped.output"
				soundevent_name = "@public.soundevent_layer3"
				pass_opvar_args = "true"
				operator_variables = 
				{
					public.position = 
					{
						operator_arg_field = "true"
						data_type = "float3"
						value = "@public.position"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_src1_3d = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_fade_in = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_fade_out = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_use_FOW = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_FOW_filter_vel = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_FOW_radius = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_on_player_mult = 
					{
						data_type = "float"
						value = "1.250000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundlevel = 
					{
						data_type = "float"
						value = "70"
					}
					soundlevel_rand_min = 
					{
						data_type = "float"
						value = "0"
					}
					soundlevel_rand_max = 
					{
						data_type = "float"
						value = "0"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					limiter_on = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_this = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_event_name = 
					{
						data_type = "string"
						value = ""
					}
					limiter_max = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_type = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_entity = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_substring = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_stop_oldest = 
					{
						data_type = "bool"
						value = "true"
					}
					limiter_match_event_duration = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					stop_at_time = 
					{
						data_type = "float"
						value = "-1"
					}
					event_type = 
					{
						data_type = "float"
						value = "0.000000"
					}
					game_convar_index = 
					{
						data_type = "float"
						value = "0.000000"
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					dont_stop_layers = 
					{
						data_type = "float"
						value = "1.000000"
					}
					soundevent_layer2_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer2 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					soundevent_layer3_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					use_event_data = 
					{
						data_type = "float"
						value = "1.000000"
					}
					soundevent_layer3 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					block_multiple_instances = 
					{
						data_type = "float"
						value = "1.000000"
					}
					block_match_entity = 
					{
						data_type = "float"
						value = "0.000000"
					}
					block_duration = 
					{
						data_type = "float"
						value = "0.050000"
					}
					block_distance = 
					{
						data_type = "float"
						value = "100.000000"
					}
					hrtf_enabled = 
					{
						data_type = "float"
						value = "0.000000"
					}
					voicegraph = 
					{
						data_type = "string"
						value = "dota.hrtf_basic"
					}
					voicegraph_track = 
					{
						data_type = "string"
						value = "track_01"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "convar_switch"
				operator = "ctrl_switch3_float"
				input_index = "@public.game_convar_index"
				input0 = "@globals.output_snd_gamesound_convar"
				input1 = "@globals.output_snd_musicvolume_convar"
				input2 = "@globals.output_snd_gamevoice_convar"
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
				input_default_world_position = "@public.position"
				input_default_local_position = "@globals.output_listener_front"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@get_entity_info.output_position"
				input_position2 = "@globals.output_listener_position"
			},
			
			{
				name = "use_entity_for_block"
				operator = "ctrl_switch_float"
				execute_once = "true"
				input_switch = "@public.block_match_entity"
				input1 = "-1"
				input2 = "@source_info.output_entity_index"
			},
			
			{
				name = "test_soundevent_block"
				operator = "soundevent_block_test"
				execute_once = "true"
				input_execute = "@public.block_multiple_instances"
				input_entity_index = "@use_entity_for_block.output"
				match_this_event = "1"
				input_position = "@get_entity_info.output_position"
			},
			
			{
				name = "set_soundevent_block"
				operator = "soundevent_block"
				execute_once = "true"
				input_execute = "@public.block_multiple_instances"
				input_duration = "@public.block_duration"
				input_entity_index = "@use_entity_for_block.output"
				match_this_event = "1"
				input_position = "@get_entity_info.output_position"
				input_distance = "@public.block_distance"
			},
			
			{
				name = "import_dist_limit"
				operator = "sos_import_stack"
				import_stack = "core_distance_limiter"
				operator_variables = 
				{
					distance = 
					{
						value = "@distance_to_source.output"
					}
					distance_max = 
					{
						value = "@public.distance_max"
					}
				}
			},
			
			{
				name = "soundevent_limit_type_switch"
				operator = "ctrl_switch_float"
				input_switch = "@public.limiter_match_type"
				input1 = "-1"
				input2 = "@public.event_type"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "@public.limiter_on"
				input_max_events = "@public.limiter_max"
				match_event_type = "@soundevent_limit_type_switch.output"
				match_entity = "@public.limiter_match_entity"
				match_substring = "@public.limiter_match_substring"
				match_event_name = "@public.limiter_event_name"
				match_this_event = "@public.limiter_match_this"
				stop_oldest = "@public.limiter_stop_oldest"
				match_duration_type = "greater_than_or_equal"
				match_event_duration = "@public.limiter_match_event_duration"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "level_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.soundlevel"
				input_rand_min = "@public.soundlevel_rand_min"
				input_rand_max = "@public.soundlevel_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "delay_random"
				operator = "math_random_float"
				input_execute = "1.000000"
				input_min = "@public.rand_delay_min"
				input_max = "@public.rand_delay_max"
			},
			
			{
				name = "delay_total"
				operator = "math_float"
				apply = "add"
				input1 = "@public.delay"
				input2 = "@delay_random.output"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "@public.use_event_data"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "@get_entity_info.output_entity_is_player"
				input_soundlevel = "@level_random.output"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "occlusion"
				operator = "math_float"
				apply = "mult"
				input1 = "1.000000"
				input2 = "1.000000"
			},
			
			{
				name = "level_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_level"
				input2 = "@level_random.output"
			},
			
			{
				name = "volume_falloff"
				operator = "calc_falloff"
				input_distance = "@distance_to_source.output"
				input_level = "@level_apply_mixer.output"
				input_folliage_loss = "0.000000"
			},
			
			{
				name = "volume_fade_in"
				operator = "math_remap_float"
				input = "@get_event_info.output_elapsed_time"
				input_min = "0.000000"
				input_max = "@public.volume_fade_in"
				input_map_min = "0.050000"
				input_map_max = "1.000000"
				default_to_max = "true"
			},
			
			{
				name = "volume_FOW"
				input_execute = "@public.volume_use_FOW"
				operator = "calc_audibility"
				input_source_position = "@get_entity_info.output_position"
				input_radius = "@public.volume_FOW_radius"
			},
			
			{
				name = "volume_dormant_and_use_FOW"
				operator = "math_float"
				apply = "min"
				input1 = "@get_entity_info.output_ent_dormant"
				input2 = "@public.volume_use_FOW"
			},
			
			{
				name = "volume_dormant_inv"
				operator = "math_float"
				apply = "sub"
				input1 = "1.000000"
				input2 = "@volume_dormant_and_use_FOW.output"
			},
			
			{
				name = "volume_dormant_and_FOW"
				operator = "math_float"
				apply = "min"
				input1 = "@volume_dormant_inv.output"
				input2 = "@volume_FOW.output"
			},
			
			{
				name = "volume_FOW_filter"
				operator = "math_filter_float"
				input = "@volume_dormant_and_FOW.output"
				input_max_velocity = "@public.volume_FOW_filter_vel"
			},
			
			{
				name = "volume_on_player"
				operator = "ctrl_switch_float"
				input_switch = "@get_entity_info.output_entity_is_actual_player_entity"
				input1 = "1"
				input2 = "@public.volume_on_player_mult"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@volume_falloff.output"
				input3 = "@mixer.output_volume"
				input4 = "@globals.output_snd_gain_convar"
				input5 = "@occlusion.output"
				input6 = "@convar_switch.output"
				input7 = "@public.volume"
				input8 = "@volume_fade_in.output"
				input9 = "@public.volume_atten"
				input10 = "@volume_on_player.output"
				input11 = "@volume_FOW_filter.output"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "dsp_emitter"
				operator = "math_float"
				apply = "set"
				input1 = "1.000000"
			},
			
			{
				name = "dsp_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_dsp"
				input2 = "@dsp_emitter.output"
			},
			
			{
				name = "dsp_distantDSP"
				operator = "math_float"
				apply = "mult"
				input1 = "1.000000"
				input2 = "1.000000"
			},
			
			{
				name = "dsp_apply_distant"
				operator = "math_float"
				apply = "mult"
				input1 = "@dsp_distantDSP.output"
				input2 = "@dsp_apply_mixer.output"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				input_radius = "300"
				input_master_volume = "@volume_accumulate.output"
				input_distance = "@distance_to_source.output"
				input_source_position = "@get_entity_info.output_position"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
				input_rear_stereo_scale = "1.000000"
			},
			
			{
				name = "stop_time_off"
				operator = "math_float"
				apply = "less_than"
				input1 = "@public.stop_at_time"
				input2 = "0"
			},
			
			{
				name = "stop_time_not_elapsed"
				operator = "math_float"
				apply = "less_than"
				input1 = "@get_event_info.output_elapsed_time"
				input2 = "@public.stop_at_time"
			},
			
			{
				name = "stop_time_or"
				operator = "math_float"
				apply = "max"
				input2 = "@stop_time_off.output"
				input1 = "@stop_time_not_elapsed.output"
			},
			
			{
				name = "stop_time_and_unstopped"
				operator = "math_float"
				apply = "min"
				input2 = "@stop_time_or.output"
				input1 = "@get_event_info.output_unstopped"
			},
			
			{
				name = "global_hrtf_enabled"
				operator = "convar_get"
				convar = "dota_enable_spatial_audio"
			},
			
			{
				name = "updated_hrtf_enabled"
				operator = "math_float"
				apply = "mult"
				input1 = "@global_hrtf_enabled.output"
				input2 = "@public.hrtf_enabled"
			},
			
			{
				name = "send_voicegraph_hrtf_enabled"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "HRTF Enabled"
				input = "@updated_hrtf_enabled.output"
			},
			
			{
				name = "global_hrtf_mix"
				operator = "convar_get"
				convar = "dota_spatial_audio_mix"
			},
			
			{
				name = "send_voicegraph_hrtf_mix"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "HRTF Mix"
				input = "@global_hrtf_mix.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@stop_time_and_unstopped.output"
				input_speaker_volumes = "@speakers_spatialize.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@delay_total.output"
				input_fade_out = "@public.volume_fade_out"
				input_memory_type = "@public.memory_type"
				operator_variables = 
				{
					send_room_dsp = 
					{
						data_type = "float"
						value = "@dsp_apply_distant.output"
					}
				}
			},
			
			{
				name = "vsnd_playing_and_unstopped"
				operator = "math_float"
				apply = "min"
				input2 = "@start_vsnd.output_voice_playing"
				input1 = "@get_event_info.output_unstopped"
			},
			
			{
				name = "start_layer2"
				operator = "soundevent_start"
				input_spawn_oneshots = "@public.dont_stop_layers"
				execute_once = "@public.dont_stop_layers"
				input_execute = "@public.soundevent_layer2_on"
				input_start = "@vsnd_playing_and_unstopped.output"
				soundevent_name = "@public.soundevent_layer2"
				pass_opvar_args = "true"
				operator_variables = 
				{
					public.position = 
					{
						operator_arg_field = "true"
						data_type = "float3"
						value = "@public.position"
					}
				}
			},
			
			{
				name = "start_layer3"
				operator = "soundevent_start"
				input_spawn_oneshots = "@public.dont_stop_layers"
				execute_once = "@public.dont_stop_layers"
				input_execute = "@public.soundevent_layer2_on"
				input_start = "@vsnd_playing_and_unstopped.output"
				soundevent_name = "@public.soundevent_layer3"
				pass_opvar_args = "true"
				operator_variables = 
				{
					public.position = 
					{
						operator_arg_field = "true"
						data_type = "float3"
						value = "@public.position"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_src1_3d_footsteps = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundlevel = 
					{
						data_type = "float"
						value = "70"
					}
					soundlevel_rand_min = 
					{
						data_type = "float"
						value = "0"
					}
					soundlevel_rand_max = 
					{
						data_type = "float"
						value = "0"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					rand_delay_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					limiter_on = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_this = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_event_name = 
					{
						data_type = "string"
						value = ""
					}
					limiter_max = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_type = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_entity = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_substring = 
					{
						data_type = "float"
						value = "0"
					}
					event_type = 
					{
						data_type = "float"
						value = "0.000000"
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					soundevent_layer2_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer2 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					soundevent_layer3_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer3 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					hrtf_enabled = 
					{
						data_type = "float"
						value = "1.000000"
					}
					voicegraph = 
					{
						data_type = "string"
						value = "dota.hrtf_basic"
					}
					voicegraph_track = 
					{
						data_type = "string"
						value = "track_01"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
				input_default_world_position = "@public.position"
				input_default_local_position = "@globals.output_listener_front"
			},
			
			{
				name = "test_for_water"
				operator = "dota_ground_under_water"
				input_position = "@get_entity_info.output_position"
			},
			
			{
				name = "start_soundevent"
				operator = "soundevent_start"
				input_spawn_oneshots = "0.000000"
				input_start = "@test_for_water.output"
				soundevent_name = "Hero_Shared.WaterFootsteps"
			},
			
			{
				name = "water_exit"
				operator = "sos_goto"
				input_execute = "@test_for_water.output"
				input_goto_end = "true"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@get_entity_info.output_position"
				input_position2 = "@globals.output_listener_position"
			},
			
			{
				name = "import_dist_limit"
				operator = "sos_import_stack"
				import_stack = "core_distance_limiter"
				operator_variables = 
				{
					distance = 
					{
						value = "@distance_to_source.output"
					}
					distance_max = 
					{
						value = "@public.distance_max"
					}
				}
			},
			
			{
				name = "soundevent_limit_type_switch"
				operator = "ctrl_switch_float"
				input_switch = "@public.limiter_match_type"
				input1 = "-1"
				input2 = "@public.event_type"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "@public.limiter_on"
				input_max_events = "@public.limiter_max"
				match_event_type = "@soundevent_limit_type_switch.output"
				match_entity = "@public.limiter_match_entity"
				match_substring = "@public.limiter_match_substring"
				match_event_name = "@public.limiter_event_name"
				match_this_event = "@public.limiter_match_this"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "level_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.soundlevel"
				input_rand_min = "@public.soundlevel_rand_min"
				input_rand_max = "@public.soundlevel_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "delay_random"
				operator = "math_random_float"
				input_execute = "1.000000"
				input_min = "@public.rand_delay_min"
				input_max = "@public.rand_delay_max"
			},
			
			{
				name = "delay_total"
				operator = "math_float"
				apply = "add"
				input1 = "@public.delay"
				input2 = "@delay_random.output"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "@get_entity_info.output_entity_is_player"
				input_soundlevel = "@level_random.output"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "occlusion"
				operator = "math_float"
				apply = "mult"
				input1 = "1.000000"
				input2 = "1.000000"
			},
			
			{
				name = "level_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_level"
				input2 = "@level_random.output"
			},
			
			{
				name = "volume_falloff"
				operator = "calc_falloff"
				input_distance = "@distance_to_source.output"
				input_level = "@level_apply_mixer.output"
				input_folliage_loss = "0.000000"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@volume_falloff.output"
				input3 = "@mixer.output_volume"
				input4 = "@globals.output_snd_gain_convar"
				input5 = "@occlusion.output"
				input6 = "@globals.output_snd_gamesound_convar"
				input7 = "@public.volume"
				input8 = "1.000000"
				input9 = "@public.volume_atten"
				input10 = "1.000000"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "dsp_emitter"
				operator = "math_float"
				apply = "set"
				input1 = "1.000000"
			},
			
			{
				name = "dsp_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_dsp"
				input2 = "@dsp_emitter.output"
			},
			
			{
				name = "dsp_distantDSP"
				operator = "math_float"
				apply = "mult"
				input1 = "1.000000"
				input2 = "1.000000"
			},
			
			{
				name = "dsp_apply_distant"
				operator = "math_float"
				apply = "mult"
				input1 = "@dsp_distantDSP.output"
				input2 = "@dsp_apply_mixer.output"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				input_radius = "300"
				input_master_volume = "@volume_accumulate.output"
				input_distance = "@distance_to_source.output"
				input_source_position = "@get_entity_info.output_position"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
				input_rear_stereo_scale = "1.000000"
			},
			
			{
				name = "global_hrtf_enabled"
				operator = "convar_get"
				convar = "dota_enable_spatial_audio"
			},
			
			{
				name = "updated_hrtf_enabled"
				operator = "math_float"
				apply = "mult"
				input1 = "@global_hrtf_enabled.output"
				input2 = "@public.hrtf_enabled"
			},
			
			{
				name = "send_voicegraph_hrtf_enabled"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "HRTF Enabled"
				input = "@updated_hrtf_enabled.output"
			},
			
			{
				name = "global_hrtf_mix"
				operator = "convar_get"
				convar = "dota_spatial_audio_mix"
			},
			
			{
				name = "send_voicegraph_hrtf_mix"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "HRTF Mix"
				input = "@global_hrtf_mix.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speakers_spatialize.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@delay_total.output"
				input_memory_type = "@public.memory_type"
			},
			
			{
				name = "start_layer2"
				operator = "soundevent_start"
				input_spawn_oneshots = "1.000000"
				execute_once = "true"
				input_execute = "@public.soundevent_layer2_on"
				input_start = "1"
				soundevent_name = "@public.soundevent_layer2"
			},
			
			{
				name = "start_layer3"
				operator = "soundevent_start"
				input_spawn_oneshots = "1.000000"
				execute_once = "true"
				input_execute = "@public.soundevent_layer3_on"
				input_start = "1"
				soundevent_name = "@public.soundevent_layer3"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_src1_2d = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					start = 
					{
						data_type = "float"
						value = "1.000000"
					}
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_fade_in = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_fade_out = 
					{
						data_type = "float"
						value = "0.000000"
					}
					max_gain_change_per_second = 
					{
						data_type = "float"
						value = "-1"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					limiter_on = 
					{
						data_type = "float"
						value = "1.000000"
					}
					limiter_match_this = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_event_name = 
					{
						data_type = "string"
						value = ""
					}
					limiter_max = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_type = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_entity = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_substring = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_stop_oldest = 
					{
						data_type = "bool"
						value = "true"
					}
					limiter_match_event_duration = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					event_type = 
					{
						data_type = "float"
						value = "6.000000"
					}
					game_convar_index = 
					{
						data_type = "float"
						value = "0.000000"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					use_event_data = 
					{
						data_type = "float"
						value = "1.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					output_voice_finished = 
					{
						data_type = "float"
						value = "0"
					}
					soundevent_layer2_on = 
					{
						data_type = "float"
						value = "0.000000"
					}
					soundevent_layer2 = 
					{
						data_type = "string"
						value = "Default.Null"
					}
					voicegraph = 
					{
						data_type = "string"
						value = ""
						_system_properties = 
						{
							display_group = "advanced"
						}
					}
					voicegraph_track = 
					{
						data_type = "string"
						value = ""
					}
					use_voicegraph = 
					{
						data_type = "float"
						value = "0.000000"
					}
					graph_input1 = 
					{
						data_type = "float"
						value = "0.000000"
					}
				}
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "convar_switch"
				operator = "ctrl_switch3_float"
				input_index = "@public.game_convar_index"
				input0 = "@globals.output_snd_gamesound_convar"
				input1 = "@globals.output_snd_musicvolume_convar"
				input2 = "@globals.output_snd_gamevoice_convar"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "@public.use_event_data"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "soundevent_limit"
				operator = "soundevent_limiter"
				input_execute = "@public.limiter_on"
				execute_once = "true"
				input_max_events = "@public.limiter_max"
				match_event_type = "@public.event_type"
				match_entity = "@public.limiter_match_entity"
				match_substring = "@public.limiter_match_substring"
				match_event_name = "@public.limiter_event_name"
				stop_oldest = "@public.limiter_stop_oldest"
				match_duration_type = "greater_than_or_equal"
				match_event_duration = "@public.limiter_match_event_duration"
				match_this_event = "true"
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "0.000000"
				input_soundlevel = "65.000000"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "volume_fade_in"
				operator = "math_remap_float"
				input = "@get_event_info.output_elapsed_time"
				input_min = "0.000000"
				input_max = "@public.volume_fade_in"
				input_map_min = "0.000000"
				input_map_max = "1.000000"
				default_to_max = "true"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@public.volume"
				input3 = "@mixer.output_volume"
				input4 = "@globals.output_snd_gain_convar"
				input5 = "@convar_switch.output"
				input6 = "1.000000"
				input7 = "1.000000"
				input8 = "1.000000"
				input9 = "@public.volume_atten"
				input10 = "@volume_fade_in.output"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "volume_fan"
				operator = "util_float_to_speakers"
				execute_once = "false"
				input = "@volume_accumulate.output"
			},
			
			{
				name = "set_builtins"
				operator = "sos_set_builtins"
				input_voicegraph = "@public.voicegraph"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				input_track1 = "@public.voicegraph_track"
				execute_once = "false"
				input_execute = "@public.start"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@volume_fan.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@public.delay"
				input_fade_out = "@public.volume_fade_out"
				input_memory_type = "@public.memory_type"
				input_max_gain_change_per_second = "@public.max_gain_change_per_second"
			},
			
			{
				name = "send_voicegraph_input"
				input_execute = "@public.use_voicegraph"
				operator = "vmix_voicegraph_input"
				input_name = "input1"
				input = "@public.graph_input1"
			},
			
			{
				name = "set_vsnd_status"
				operator = "opvar_set_float"
				input = "@start_vsnd.output_voice_finished"
				input_stack_name = ""
				input_operator_name = "public"
				input_field_name = "output_voice_finished"
				input_use_namespace = "true"
			},
			
			{
				name = "start_layer2"
				operator = "soundevent_start"
				input_spawn_oneshots = "1.000000"
				execute_once = "true"
				input_execute = "@public.soundevent_layer2_on"
				input_start = "1"
				soundevent_name = "@public.soundevent_layer2"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_gamestart_horn = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@public.position"
				input_position2 = "@globals.output_listener_position"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "Ultimates"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "level_apply_mixer"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer.output_level"
				input2 = "96"
			},
			
			{
				name = "volume_falloff"
				operator = "calc_falloff"
				input_distance = "@distance_to_source.output"
				input_level = "@level_apply_mixer.output"
				input_folliage_loss = "0.000000"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "1.000000"
				input2 = "@volume_falloff.output"
				input3 = "@mixer.output_volume"
				input4 = "@globals.output_snd_gain_convar"
				input5 = "@globals.output_snd_gamesound_convar"
				input6 = "1.000000"
				input7 = "1.000000"
				input8 = "1.000000"
				input9 = "@public.volume_atten"
				input10 = "1.000000"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				input_radius = "12000"
				input_master_volume = "@volume_accumulate.output"
				input_distance = "@distance_to_source.output"
				input_source_position = "@public.position"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
				input_rear_stereo_scale = "1.000000"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speakers_spatialize.output"
				input_pitch = "1.000000"
				input_delay = "0.000000"
			},
			
			{
				name = "stop_prehorn_music"
				execute_once = "true"
				input_execute = "1.000000"
				operator = "soundevent_limiter"
				input_max_events = "0.000000"
				match_entity = "false"
				match_substring = "true"
				match_event_name = ".music.countdown"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_vo_default = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_falloff_remap_Y1 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y2 = 
					{
						data_type = "float"
						value = "0.500000"
					}
					volume_falloff_remap_Y3 = 
					{
						data_type = "float"
						value = "0.250000"
					}
					volume_falloff_remap_Y4 = 
					{
						data_type = "float"
						value = "0.000500"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					spread_radius = 
					{
						data_type = "float"
						value = "300"
					}
					event_type = 
					{
						data_type = "float"
						value = "2.000000"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
				input_default_world_position = "@public.position"
				input_default_local_position = "@globals.output_listener_front"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "1"
				input_max_events = "0"
				match_event_type = "@public.event_type"
				match_entity = "@source_info.output_entity_index"
			},
			
			{
				name = "source_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@get_entity_info.output_position"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "listener_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@globals.output_listener_position"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@source_pos_xy.output"
				input_position2 = "@listener_pos_xy.output"
			},
			
			{
				name = "import_dist_limit"
				operator = "sos_import_stack"
				import_stack = "core_distance_limiter"
				operator_variables = 
				{
					distance = 
					{
						data_type = "float"
						value = "@distance_to_source.output"
					}
					distance_max = 
					{
						data_type = "float"
						value = "@public.distance_max"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "false"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "distance_falloff_remap"
				operator = "math_curve_2d_4knot"
				curve_type = "linear"
				input = "@distance_to_source.output"
				input_X1 = "30.000000"
				input_Y1 = "@public.volume_falloff_remap_Y1"
				input_X2 = "1500.000000"
				input_Y2 = "@public.volume_falloff_remap_Y2"
				input_X3 = "2250.000000"
				input_Y3 = "@public.volume_falloff_remap_Y3"
				input_X4 = "2625.000000"
				input_Y4 = "@public.volume_falloff_remap_Y4"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@globals.output_snd_gain_convar"
				input3 = "@globals.output_snd_gamevoice_convar"
				input4 = "@distance_falloff_remap.output"
				input5 = "@mixer.output_volume"
				input6 = "@public.volume"
				input7 = "1.000000"
				input8 = "1.000000"
				input9 = "@public.volume_atten"
				input10 = "1.000000"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				input_radius = "@public.spread_radius"
				input_distance = "@distance_to_source.output"
				input_source_position = "@get_entity_info.output_position"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
				input_rear_stereo_scale = "1.000000"
			},
			
			{
				name = "distance_falloff_scale"
				operator = "math_float"
				apply = "sub"
				input1 = "1.000000"
				input2 = "@distance_falloff_remap.output"
			},
			
			{
				name = "distance_falloff_scale_fan"
				operator = "util_float_to_speakers"
				input = "@distance_falloff_scale.output"
			},
			
			{
				name = "distance_falloff_remap_fan"
				operator = "util_float_to_speakers"
				input = "@distance_falloff_remap.output"
			},
			
			{
				name = "speakers_falloff_scaled"
				operator = "math_speakers"
				apply = "mult"
				input1 = "@distance_falloff_scale_fan.output"
				input2 = "@speakers_spatialize.output"
			},
			
			{
				name = "speakers_scaled_plus_falloff"
				operator = "math_speakers"
				apply = "add"
				input1 = "@speakers_falloff_scaled.output"
				input2 = "@distance_falloff_remap_fan.output"
			},
			
			{
				name = "speaker_volume_fan"
				operator = "util_float_to_speakers"
				input = "@volume_accumulate.output"
			},
			
			{
				name = "speakers_apply_volume"
				operator = "math_speakers"
				apply = "mult"
				input1 = "@speakers_scaled_plus_falloff.output"
				input2 = "@speaker_volume_fan.output"
			},
			
			{
				name = "speakers_limit"
				operator = "math_speakers"
				apply = "mult"
				left_front = "1.000000"
				right_front = "1.000000"
				center = "1.000000"
				lfe = "1.000000"
				left_rear = "1.000000"
				right_rear = "1.000000"
				input2 = "@speakers_apply_volume.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speakers_limit.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@public.delay"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_vo_clamped = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_falloff_remap_Y1 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y2 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y3 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y4 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					spread_radius = 
					{
						data_type = "float"
						value = "300"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
			
			{
				name = "import_update_vo_default"
				operator = "sos_import_stack"
				import_stack = "dota_update_vo_default"
				operator_variables = 
				{
					mixgroup = 
					{
						value = "@public.mixgroup"
					}
					volume = 
					{
						value = "@public.volume"
					}
					volume_rand_min = 
					{
						value = "@public.volume_rand_min"
					}
					volume_rand_max = 
					{
						value = "@public.volume_rand_max"
					}
					volume_falloff_remap_Y1 = 
					{
						value = "@public.volume_falloff_remap_Y1"
					}
					volume_falloff_remap_Y2 = 
					{
						value = "@public.volume_falloff_remap_Y2"
					}
					volume_falloff_remap_Y3 = 
					{
						value = "@public.volume_falloff_remap_Y3"
					}
					volume_falloff_remap_Y4 = 
					{
						value = "@public.volume_falloff_remap_Y4"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					delay = 
					{
						value = "@public.delay"
					}
					position = 
					{
						value = "@public.position"
					}
					distance_max = 
					{
						value = "@public.distance_max"
					}
					spread_radius = 
					{
						value = "@public.spread_radius"
					}
					memory_type = 
					{
						value = "@public.memory_type"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_vo_clamped_panning = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_falloff_remap_Y1 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y2 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y3 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y4 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					spread_radius = 
					{
						data_type = "float"
						value = "300"
					}
					event_type = 
					{
						data_type = "float"
						value = "2.000000"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
				input_default_world_position = "@public.position"
				input_default_local_position = "@globals.output_listener_front"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "1"
				input_max_events = "0"
				match_event_type = "@public.event_type"
				match_entity = "@source_info.output_entity_index"
			},
			
			{
				name = "source_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@get_entity_info.output_position"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "listener_pos_xy"
				operator = "math_float3"
				apply = "mult"
				input1 = "@globals.output_listener_position"
				input2 = "[ 1.0, 1.0, 0.0]"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@source_pos_xy.output"
				input_position2 = "@listener_pos_xy.output"
			},
			
			{
				name = "import_dist_limit"
				operator = "sos_import_stack"
				import_stack = "core_distance_limiter"
				operator_variables = 
				{
					distance = 
					{
						data_type = "float"
						value = "@distance_to_source.output"
					}
					distance_max = 
					{
						data_type = "float"
						value = "@public.distance_max"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "false"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "distance_falloff_remap"
				operator = "math_curve_2d_4knot"
				curve_type = "linear"
				input = "@distance_to_source.output"
				input_X1 = "30.000000"
				input_Y1 = "@public.volume_falloff_remap_Y1"
				input_X2 = "1500.000000"
				input_Y2 = "@public.volume_falloff_remap_Y2"
				input_X3 = "2250.000000"
				input_Y3 = "@public.volume_falloff_remap_Y3"
				input_X4 = "2625.000000"
				input_Y4 = "@public.volume_falloff_remap_Y4"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@globals.output_snd_gain_convar"
				input3 = "@globals.output_snd_gamevoice_convar"
				input4 = "@distance_falloff_remap.output"
				input5 = "@mixer.output_volume"
				input6 = "@public.volume"
				input7 = "1.000000"
				input8 = "1.000000"
				input9 = "@public.volume_atten"
				input10 = "1.000000"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				input_radius = "@public.spread_radius"
				input_distance = "@distance_to_source.output"
				input_source_position = "@get_entity_info.output_position"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
				input_rear_stereo_scale = "1.000000"
			},
			
			{
				name = "speaker_volume_fan"
				operator = "util_float_to_speakers"
				input = "@volume_accumulate.output"
			},
			
			{
				name = "speakers_apply_volume"
				operator = "math_speakers"
				apply = "mult"
				input1 = "@speakers_spatialize.output"
				input2 = "@speaker_volume_fan.output"
			},
			
			{
				name = "speakers_limit"
				operator = "math_speakers"
				apply = "mult"
				left_front = "1.000000"
				right_front = "1.000000"
				center = "1.000000"
				lfe = "1.000000"
				left_rear = "1.000000"
				right_rear = "1.000000"
				input2 = "@speakers_apply_volume.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speakers_limit.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@public.delay"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_vo_spatial_stereo = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "USEPATHMATCH"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_falloff_remap_Y1 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y2 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y3 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_falloff_remap_Y4 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
					}
					distance_max = 
					{
						data_type = "float"
						value = "-1.000000"
					}
					spread_radius = 
					{
						data_type = "float"
						value = "300"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
			
			{
				name = "import_update_vo_default"
				operator = "sos_import_stack"
				import_stack = "dota_update_vo_default"
				operator_variables = 
				{
					mixgroup = 
					{
						value = "@public.mixgroup"
					}
					volume = 
					{
						value = "@public.volume"
					}
					volume_rand_min = 
					{
						value = "@public.volume_rand_min"
					}
					volume_rand_max = 
					{
						value = "@public.volume_rand_max"
					}
					volume_falloff_remap_Y1 = 
					{
						value = "@public.volume_falloff_remap_Y1"
					}
					volume_falloff_remap_Y2 = 
					{
						value = "@public.volume_falloff_remap_Y2"
					}
					volume_falloff_remap_Y3 = 
					{
						value = "@public.volume_falloff_remap_Y3"
					}
					volume_falloff_remap_Y4 = 
					{
						value = "@public.volume_falloff_remap_Y4"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					delay = 
					{
						value = "@public.delay"
					}
					position = 
					{
						value = "@public.position"
					}
					distance_max = 
					{
						value = "@public.distance_max"
					}
					spread_radius = 
					{
						value = "@public.spread_radius"
					}
					memory_type = 
					{
						value = "@public.memory_type"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_vo_announcer = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "Announcer"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					event_type = 
					{
						data_type = "float"
						value = "4.000000"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
			},
			
			{
				name = "get_entity_info"
				input_execute = "1"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "1"
				input_max_events = "0"
				match_event_type = "@public.event_type"
				match_entity = "@source_info.output_entity_index"
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "volume_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "1.000000"
				input_rand_min = "@public.volume_rand_min"
				input_rand_max = "@public.volume_rand_max"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
				input_vsnd = "@get_vsnd.output"
				input_class_name = "@source_info.output_entity_classname"
				input_is_player = "false"
				input_soundlevel = "0"
				input_event_type = "@public.event_type"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@volume_random.output"
				input2 = "@globals.output_snd_gain_convar"
				input3 = "@globals.output_snd_gamevoice_convar"
				input4 = "@public.volume"
				input5 = "@mixer.output_volume"
				input6 = "1.000000"
				input7 = "1.000000"
				input8 = "1.000000"
				input9 = "@public.volume_atten"
				input10 = "1.000000"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "speaker_volume_fan"
				operator = "util_float_to_speakers"
				input = "@volume_accumulate.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speaker_volume_fan.output"
				input_pitch = "@pitch_random.output"
				input_delay = "@public.delay"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_vo_switch = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					stack_index = 
					{
						data_type = "float"
						value = "1"
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					delay = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					event_type = 
					{
						data_type = "float"
						value = "2.000000"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
			
			{
				name = "is_vo_default"
				operator = "math_float"
				apply = "equal"
				input1 = "@public.stack_index"
				input2 = "1"
			},
			
			{
				name = "import_update_vo_default"
				operator = "sos_import_stack"
				import_stack = "dota_update_vo_default"
				input_execute = "@is_vo_default.output"
				operator_variables = 
				{
					volume = 
					{
						value = "@public.volume"
					}
					volume_rand_min = 
					{
						value = "@public.volume_rand_min"
					}
					volume_rand_max = 
					{
						value = "@public.volume_rand_max"
					}
					delay = 
					{
						value = "@public.delay"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					memory_type = 
					{
						value = "@public.memory_type"
					}
				}
			},
			
			{
				name = "is_vo_clamped"
				operator = "math_float"
				apply = "equal"
				input1 = "@public.stack_index"
				input2 = "2"
			},
			
			{
				name = "import_update_vo_clamped"
				operator = "sos_import_stack"
				import_stack = "dota_update_vo_clamped"
				input_execute = "@is_vo_clamped.output"
				operator_variables = 
				{
					volume = 
					{
						value = "@public.volume"
					}
					volume_rand_min = 
					{
						value = "@public.volume_rand_min"
					}
					volume_rand_max = 
					{
						value = "@public.volume_rand_max"
					}
					delay = 
					{
						value = "@public.delay"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					memory_type = 
					{
						value = "@public.memory_type"
					}
				}
			},
			
			{
				name = "is_vo_clamped_panning"
				operator = "math_float"
				apply = "equal"
				input1 = "@public.stack_index"
				input2 = "3"
			},
			
			{
				name = "import_update_vo_clamped_panning"
				operator = "sos_import_stack"
				import_stack = "dota_update_vo_clamped_panning"
				input_execute = "@is_vo_clamped_panning.output"
				operator_variables = 
				{
					volume = 
					{
						value = "@public.volume"
					}
					volume_rand_min = 
					{
						value = "@public.volume_rand_min"
					}
					volume_rand_max = 
					{
						value = "@public.volume_rand_max"
					}
					delay = 
					{
						value = "@public.delay"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					memory_type = 
					{
						value = "@public.memory_type"
					}
				}
			},
			
			{
				name = "is_vo_spatial_stereo"
				operator = "math_float"
				apply = "equal"
				input1 = "@public.stack_index"
				input2 = "4"
			},
			
			{
				name = "import_update_vo_spatial_stereo"
				operator = "sos_import_stack"
				import_stack = "dota_update_vo_spatial_stereo"
				input_execute = "@is_vo_spatial_stereo.output"
				operator_variables = 
				{
					volume = 
					{
						value = "@public.volume"
					}
					volume_rand_min = 
					{
						value = "@public.volume_rand_min"
					}
					volume_rand_max = 
					{
						value = "@public.volume_rand_max"
					}
					delay = 
					{
						value = "@public.delay"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					memory_type = 
					{
						value = "@public.memory_type"
					}
				}
			},
			
			{
				name = "is_vo_announcer"
				operator = "math_float"
				apply = "equal"
				input1 = "@public.stack_index"
				input2 = "5"
			},
			
			{
				name = "import_update_vo_announcer"
				operator = "sos_import_stack"
				import_stack = "dota_update_vo_announcer"
				input_execute = "@is_vo_announcer.output"
				operator_variables = 
				{
					volume = 
					{
						value = "@public.volume"
					}
					volume_rand_min = 
					{
						value = "@public.volume_rand_min"
					}
					volume_rand_max = 
					{
						value = "@public.volume_rand_max"
					}
					delay = 
					{
						value = "@public.delay"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					memory_type = 
					{
						value = "@public.memory_type"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_ui_start_multi = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					soundevent_01 = 
					{
						data_type = "string"
						value = ""
					}
					soundevent_02 = 
					{
						data_type = "string"
						value = ""
					}
					soundevent_03 = 
					{
						data_type = "string"
						value = ""
					}
					use_01 = 
					{
						data_type = "float"
						value = "0.000000"
					}
					use_02 = 
					{
						data_type = "float"
						value = "0.000000"
					}
					use_03 = 
					{
						data_type = "float"
						value = "0.000000"
					}
				}
			},
			
			{
				name = "soundevent_01"
				operator = "soundevent_start"
				execute_once = "true"
				input_spawn_oneshots = "0.000000"
				input_execute = "@public.use_01"
				input_start = "1"
				soundevent_name = "@public.soundevent_01"
			},
			
			{
				name = "soundevent_02"
				operator = "soundevent_start"
				execute_once = "true"
				input_spawn_oneshots = "0.000000"
				input_execute = "@public.use_02"
				input_start = "1"
				soundevent_name = "@public.soundevent_02"
			},
			
			{
				name = "soundevent_03"
				operator = "soundevent_start"
				execute_once = "true"
				input_spawn_oneshots = "0.000000"
				input_execute = "@public.use_03"
				input_start = "1"
				soundevent_name = "@public.soundevent_03"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_limit_speakers_ui = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					volume = 
					{
						data_type = "float"
						value = "0.400000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					volume_fade_out = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_magic = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					mixgroup = 
					{
						data_type = "string"
						value = "UI"
					}
				}
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "mult_by_secret_pitch"
				operator = "math_float"
				apply = "mult"
				input1 = "@public.pitch_magic"
				input2 = "@pitch_random.output"
			},
			
			{
				name = "mixer_ui"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer_ui.output_mixgroups"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@public.volume"
				input2 = "@public.volume_atten"
				input3 = "@mixer_ui.output_volume"
				input4 = "@globals.output_snd_gamesound_convar"
				input5 = "@globals.output_snd_gain_convar"
				input6 = "1.000000"
				input7 = "1.000000"
				input8 = "1.000000"
				input9 = "1.000000"
				input10 = "1.000000"
				input11 = "1.000000"
				input12 = "1.000000"
			},
			
			{
				name = "speaker_volume_fan"
				operator = "util_float_to_speakers"
				input = "@volume_accumulate.output"
			},
			
			{
				name = "speakers_limit_ui"
				operator = "math_speakers"
				apply = "mult"
				left_front = "0.700000"
				right_front = "0.700000"
				center = "0.000000"
				lfe = "0.000000"
				left_rear = "0.000000"
				right_rear = "0.000000"
				input2 = "@speaker_volume_fan.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speakers_limit_ui.output"
				input_pitch = "@mult_by_secret_pitch.output"
				input_fade_out = "@public.volume_fade_out"
				input_delay = "0.000000"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_ui_limit_time = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					volume = 
					{
						data_type = "float"
						value = "0.400000"
					}
					volume_atten = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					block_time = 
					{
						data_type = "float"
						value = "0.000000"
					}
					block_name = 
					{
						data_type = "string"
						value = ""
					}
					block_time2 = 
					{
						data_type = "float"
						value = "0.000000"
					}
					block_name2 = 
					{
						data_type = "string"
						value = ""
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					mixgroup = 
					{
						data_type = "string"
						value = "UI"
					}
				}
			},
			
			{
				name = "test_soundevent_block"
				operator = "soundevent_block_test"
				execute_once = "true"
				match_this_event = "true"
				input_execute = "1.000000"
			},
			
			{
				name = "block_ui_sound"
				operator = "soundevent_block"
				input_execute = "@public.block_time"
				input_duration = "@public.block_time"
				match_substring = "true"
				match_event_name = "@public.block_name"
			},
			
			{
				name = "block_ui_sound2"
				operator = "soundevent_block"
				input_execute = "@public.block_time2"
				input_duration = "@public.block_time2"
				match_substring = "true"
				match_event_name = "@public.block_name2"
			},
			
			{
				name = "import_ui_player"
				operator = "sos_import_stack"
				import_stack = "dota_limit_speakers_ui"
				operator_variables = 
				{
					volume = 
					{
						value = "@public.volume"
					}
					volume_atten = 
					{
						value = "@public.volume_atten"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					pitch_rand_min = 
					{
						value = "@public.pitch_rand_min"
					}
					pitch_rand_max = 
					{
						value = "@public.pitch_rand_max"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = "@public.vsnd_files"
					}
					mixgroup = 
					{
						value = "@public.mixgroup"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_limit_speakers_spectui = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					volume = 
					{
						data_type = "float"
						value = "0.500000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
					event_type = 
					{
						data_type = "float"
						value = "0.000000"
					}
					limiter_on = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_event_name = 
					{
						data_type = "string"
						value = "0"
					}
					limiter_max = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_match_type = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_entity = 
					{
						data_type = "float"
						value = "1"
					}
					limiter_match_substring = 
					{
						data_type = "float"
						value = "0"
					}
					limiter_stop_oldest = 
					{
						data_type = "bool"
						value = "true"
					}
					limiter_match_event_duration = 
					{
						data_type = "float"
						value = "-1.000000"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "soundevent_limit_type_switch"
				operator = "ctrl_switch_float"
				input_switch = "@public.limiter_match_type"
				input1 = "-1"
				input2 = "@public.event_type"
			},
			
			{
				name = "soundevent_limit"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_execute = "@public.limiter_on"
				input_max_events = "@public.limiter_max"
				match_event_type = "@soundevent_limit_type_switch.output"
				match_entity = "@public.limiter_match_entity"
				match_substring = "@public.limiter_match_substring"
				match_event_name = "@public.limiter_event_name"
				stop_oldest = "@public.limiter_stop_oldest"
				match_duration_type = "greater_than_or_equal"
				match_event_duration = "@public.limiter_match_event_duration"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "mixer_ui"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "UI"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer_ui.output_mixgroups"
			},
			
			{
				name = "level_apply_mixer_ui"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer_ui.output_volume"
				input2 = "@public.volume"
			},
			
			{
				name = "speaker_volume_fan"
				operator = "util_float_to_speakers"
				input = "@level_apply_mixer_ui.output"
			},
			
			{
				name = "speakers_limit_ui"
				operator = "math_speakers"
				apply = "mult"
				left_front = "0.800000"
				right_front = "0.800000"
				center = "0.000000"
				lfe = "0.000000"
				left_rear = "0.000000"
				right_rear = "0.000000"
				input2 = "@speaker_volume_fan.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speakers_limit_ui.output"
				input_pitch = "@pitch_random.output"
				input_delay = "0.000000"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_limit_speakers_inv = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					volume = 
					{
						data_type = "float"
						value = "0.200000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_rand_min = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_rand_max = 
					{
						data_type = "float"
						value = "0.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "get_vsnd"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
			},
			
			{
				name = "pitch_random"
				operator = "math_randomize_float"
				execute_once = "true"
				input = "@public.pitch"
				input_rand_min = "@public.pitch_rand_min"
				input_rand_max = "@public.pitch_rand_max"
			},
			
			{
				name = "mixer_ui"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "UI"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer_ui.output_mixgroups"
			},
			
			{
				name = "level_apply_mixer_ui"
				operator = "math_float"
				apply = "mult"
				input1 = "@mixer_ui.output_volume"
				input2 = "@public.volume"
			},
			
			{
				name = "speaker_volume_fan"
				operator = "util_float_to_speakers"
				input = "@level_apply_mixer_ui.output"
			},
			
			{
				name = "speakers_limit_ui"
				operator = "math_speakers"
				apply = "mult"
				left_front = "0.600000"
				right_front = "0.600000"
				center = "0.000000"
				lfe = "0.000000"
				left_rear = "0.000000"
				right_rear = "0.000000"
				input2 = "@speaker_volume_fan.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@get_vsnd.output"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@speakers_limit_ui.output"
				input_pitch = "@pitch_random.output"
				input_delay = "0.000000"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_block_n_start = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					block_duration = 
					{
						data_type = "float"
						value = "5.000000"
					}
					block_name = 
					{
						data_type = "string"
						value = "DOTAMusic_Hero.Reincarnate"
					}
					start_name = 
					{
						data_type = "string"
						value = "Hero_SkeletonKing.Reincarnate.Stinger"
					}
					start_delay = 
					{
						data_type = "float"
						value = "3.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						soundevent_data = "true"
						value = 
						{
							value0 = "sounds/weapons/hero/skeleton_king/reincarnate.vsnd"
						}
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					soundlevel = 
					{
						data_type = "float"
						value = "78.000000"
					}
					mixgroup = 
					{
						data_type = "string"
						value = "Ultimates"
					}
					spread_radius = 
					{
						data_type = "float"
						value = "300.000000"
					}
				}
			},
			
			{
				name = "source_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "block_sound"
				operator = "soundevent_block"
				input_execute = "@public.block_duration"
				input_duration = "@public.block_duration"
				match_substring = "true"
				match_event_name = "@public.block_name"
			},
			
			{
				name = "compare_elapsed_time"
				operator = "math_float"
				apply = "greater_than_or_equal"
				input1 = "@source_info.output_elapsed_time"
				input2 = "@public.start_delay"
			},
			
			{
				name = "start_event"
				operator = "soundevent_start"
				input_spawn_oneshots = "0.000000"
				input_execute = "@compare_elapsed_time.output"
				input_start = "1"
				soundevent_name = "@public.start_name"
			},
			
			{
				name = "import_update_default"
				operator = "sos_import_stack"
				import_stack = "dota_update_default"
				operator_variables = 
				{
					vsnd_files = 
					{
						value = "@public.vsnd_files"
					}
					volume = 
					{
						value = "@public.volume"
					}
					pitch = 
					{
						value = "@public.pitch"
					}
					soundlevel = 
					{
						value = "@public.soundlevel"
					}
					mixgroup = 
					{
						value = "@public.mixgroup"
					}
					spread_radius = 
					{
						value = "@public.spread_radius"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_update_opvar_track = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					opvar_stack_name = 
					{
						data_type = "string"
						value = "none"
					}
					opvar_operator_name = 
					{
						data_type = "string"
						value = "none"
					}
					opvar_field_name = 
					{
						data_type = "string"
						value = "none"
					}
					vsnd_files = 
					{
						soundevent_data = "true"
						data_type = "vsnd"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					fade_out = 
					{
						data_type = "float"
						value = "1.250000"
					}
					volume_remap_x1 = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_remap_x2 = 
					{
						data_type = "float"
						value = "0.000000"
					}
					volume_remap_x3 = 
					{
						data_type = "float"
						value = "3800"
					}
					volume_remap_x4 = 
					{
						data_type = "float"
						value = "3800"
					}
					volume_remap_y1 = 
					{
						data_type = "float"
						value = "0.250000"
					}
					volume_remap_y2 = 
					{
						data_type = "float"
						value = "0.500000"
					}
					volume_remap_y3 = 
					{
						data_type = "float"
						value = "0.750000"
					}
					volume_remap_y4 = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch = 
					{
						data_type = "float"
						value = "1.000000"
					}
					pitch_remap_x1 = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_remap_x2 = 
					{
						data_type = "float"
						value = "0.000000"
					}
					pitch_remap_x3 = 
					{
						data_type = "float"
						value = "3800"
					}
					pitch_remap_x4 = 
					{
						data_type = "float"
						value = "3800"
					}
					pitch_remap_y1 = 
					{
						data_type = "float"
						value = "0.500000"
					}
					pitch_remap_y2 = 
					{
						data_type = "float"
						value = "0.500000"
					}
					pitch_remap_y3 = 
					{
						data_type = "float"
						value = "2.000000"
					}
					pitch_remap_y4 = 
					{
						data_type = "float"
						value = "2.000000"
					}
					mixgroup = 
					{
						data_type = "string"
						value = "UI"
					}
				}
			},
			
			{
				name = "get_tracked_opvar"
				operator = "opvar_get_float"
				execute_once = "false"
				input_stack_name = "@public.opvar_stack_name"
				input_operator_name = "@public.opvar_operator_name"
				input_field_name = "@public.opvar_field_name"
				input_use_namespace = "false"
			},
			
			{
				name = "opvar_remap_pitch"
				operator = "math_curve_2d_4knot"
				curve_type = "linear"
				input = "@get_tracked_opvar.output"
				input_X1 = "@public.pitch_remap_x1"
				input_Y1 = "@public.pitch_remap_y1"
				input_X2 = "@public.pitch_remap_x2"
				input_Y2 = "@public.pitch_remap_y2"
				input_X3 = "@public.pitch_remap_x3"
				input_Y3 = "@public.pitch_remap_y3"
				input_X4 = "@public.pitch_remap_x4"
				input_Y4 = "@public.pitch_remap_y4"
			},
			
			{
				name = "pitch_remap_scale"
				operator = "math_float"
				apply = "mult"
				input1 = "@opvar_remap_pitch.output"
				input2 = "@public.pitch"
			},
			
			{
				name = "filter_pitch"
				operator = "math_filter_float"
				input = "@pitch_remap_scale.output"
				input_max_velocity = "0.120000"
			},
			
			{
				name = "opvar_remap_volume"
				operator = "math_curve_2d_4knot"
				curve_type = "linear"
				input = "@get_tracked_opvar.output"
				input_X1 = "@public.volume_remap_x1"
				input_Y1 = "@public.volume_remap_y1"
				input_X2 = "@public.volume_remap_x2"
				input_Y2 = "@public.volume_remap_y2"
				input_X3 = "@public.volume_remap_x3"
				input_Y3 = "@public.volume_remap_y3"
				input_X4 = "@public.volume_remap_x4"
				input_Y4 = "@public.volume_remap_y4"
			},
			
			{
				name = "volume_remap_scale"
				operator = "math_float"
				apply = "mult"
				input1 = "@opvar_remap_volume.output"
				input2 = "@public.volume"
			},
			
			{
				name = "import_ui_default_01"
				operator = "sos_import_stack"
				import_stack = "dota_limit_speakers_ui"
				operator_variables = 
				{
					vsnd_files = 
					{
						soundevent_data = "true"
						data_type = "vsnd"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					volume = 
					{
						value = "@volume_remap_scale.output"
					}
					pitch_magic = 
					{
						value = "@filter_pitch.output"
					}
					mixgroup = 
					{
						value = "@public.mixgroup"
					}
					volume_fade_out = 
					{
						value = "@public.fade_out"
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_stop_loop_ui = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					stop_entry_name = 
					{
						data_type = "string"
						value = "none"
					}
					vsnd_files = 
					{
						soundevent_data = "true"
						data_type = "vsnd"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
					volume = 
					{
						data_type = "float"
						value = "0.800000"
					}
				}
			},
			
			{
				name = "stop_sounds"
				input_execute = "1.000000"
				execute_once = "true"
				operator = "soundevent_limiter"
				input_max_events = "0.000000"
				match_entity = "false"
				match_substring = "true"
				match_event_name = "@public.stop_entry_name"
			},
			
			{
				name = "import_ui_default_01"
				operator = "sos_import_stack"
				import_stack = "dota_limit_speakers_ui"
				operator_variables = 
				{
					volume = 
					{
						value = "@public.volume"
					}
					vsnd_files = 
					{
						soundevent_data = "true"
						data_type = "vsnd"
						value = 
						{
							value0 = "sounds/common/null.vsnd"
						}
					}
				}
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
	dota_voip = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					volume = 
					{
						data_type = "float"
						value = "1.000000"
					}
					vsnd_files = 
					{
						data_type = "vsnd"
						value = "sounds/misc/null.vsnd"
					}
					memory_type = 
					{
						data_type = "float"
						value = "0"
					}
				}
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "voip"
			},
			
			{
				name = "mixer_mixgraph"
				operator = "soundmixer_set_vmix"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "volume_accumulate"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@mixer.output_volume"
				input2 = "@public.volume"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@volume_accumulate.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "submix_send"
				operator = "vmix_mixgraph_send"
				input_execute = "1.000000"
				submix_name = "VOIP"
				input = "1.000000"
				send_type = "named"
			},
			
			{
				name = "volume_fan"
				operator = "util_float_to_speakers"
				input = "@volume_accumulate.output"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				input_vsnd1 = "@public.vsnd_files"
				execute_once = "false"
				input_execute = "1.000000"
				input_start = "@get_event_info.output_unstopped"
				input_speaker_volumes = "@volume_fan.output"
				input_pitch = "1.000000"
				input_memory_type = "@public.memory_type"
			},
		]
		_system_properties = 
		{
			display_game = "dota2"
		}
	}
}