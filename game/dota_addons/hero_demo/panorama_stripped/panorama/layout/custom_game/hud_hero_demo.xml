<root>
	<styles>
		<include src="file://{resources}/styles/dotastyles.css"/>
		<include src="file://{resources}/styles/hud_hero_demo.css"/>
	</styles>

	<scripts>
		<include src="file://{resources}/scripts/hud_hero_demo.js" />
	</scripts>

	<Panel hittest="false" class="CustomHudRoot" >

		<Panel id="SelectHeroContainer" acceptsfocus="true" oncancel="EscapeHeroPickerSearch()">
			<DOTAUIHeroPicker id="HeroPicker" />
			<Button id="CancelButton" class="CloseButton" acceptsjoyfocus="true" onactivate="CloseHeroPicker()" />
		</Panel>

		<Panel class="ControlPanel">

			<Panel class="ControlPanelContainer">

				<Panel id="Header">
					<Panel class="HeroImageContainer">
						<DOTAHeroImage id="PlayerHeroImage" heroimagestyle="landscape" />
						<DOTAUIHeroFacetDropdown id="HeroFacetDropdown" class="Small" />
					</Panel>
					<Panel class="HeroDemoTextContainer">
						<Panel class="HeroDemoNameContainer">
							<Label id="HeroDemoHeroName" text="{s:hero_name}"/>
						</Panel>
						<TextButton class="ChangeLoadoutButton" acceptsjoyfocus="true" onactivate="DOTAShowDashboardPage( DOTAShowDemoHeroPage() )" text="#SelectCosmetics_Button" />						
					</Panel>
					<Button id="PlayerHeroPickerButton" class="HeroPickerArrow" onactivate="ToggleHeroPicker( true )" />
				</Panel>

				<Panel id="SpawnUnitsCategory" class="Category">
					<Label class="CategoryHeader" text="#SpawnUnits_ButtonCategory"/>
					<Panel class="CategoryButtonContainer">

						<Panel class="HeroDetailsContainer">
							<Panel id="SpawnHeroButton" class="Row DemoButton" onactivate="ToggleHeroPicker( false )" acceptsjoyfocus="true">
								<DOTAHeroImage id="HeroPickerImage" class="HeroImage" heroimagestyle="landscape" />
								<Label id="SpawnHeroName" text="{s:hero_name}"/>
								<Panel class="HeroPickerArrow" />
							</Panel>
							<DOTAUIHeroFacetPicker id="SpawnHeroFacetPicker" autoselect="true" class="Compact" />
						</Panel>

						<Panel class="Row">
							<Button id="SpawnAllyButton" class="DemoButton LeftButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( SpawnAllyButtonPressed )">
								<Label text="#Ally_Button"/>
							</Button>
							<Button id="SpawnEnemyButton" class="DemoButton RightButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( SpawnEnemyButtonPressed )">
								<Label text="#Enemy_Button"/>
							</Button>
						</Panel>

						<Panel class="HorizontalRule" />

						<Panel class="Row">
							<Button class="DemoButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( DummyTargetButtonPressed )">
								<Label text="#DummyTarget_Button"/>
							</Button>
						</Panel>

						<Panel class="Row">
							<Button class="RuneButton" acceptsjoyfocus="true" 
									onactivate="FireCustomGameEvent_Str( SpawnRuneDoubleDamagePressed )" 
									onmouseover="MouseOverRune( 'RuneEmoticonDoubleDamage', '#DOTA_HUD_Rune_DoubleDamage' )" onmouseout="MouseOutRune( 'RuneEmoticonDoubleDamage' )">
								<DOTAEmoticon id="RuneEmoticonDoubleDamage" alias="doubledamage" animating="false"/>
							</Button>
							<Panel class="FillWidth" />
							<Button class="RuneButton" acceptsjoyfocus="true" 
									onactivate="FireCustomGameEvent_Str( SpawnRuneHastePressed )"
									onmouseover="MouseOverRune( 'RuneEmoticonHaste', '#DOTA_HUD_Rune_Haste' )" onmouseout="MouseOutRune( 'RuneEmoticonHaste' )">
								<DOTAEmoticon id="RuneEmoticonHaste" alias="haste" animating="false"/>
							</Button>
							<Panel class="FillWidth" />
							<Button class="RuneButton" acceptsjoyfocus="true" 
									onactivate="FireCustomGameEvent_Str( SpawnRuneIllusionPressed )" 
									onmouseover="MouseOverRune( 'RuneEmoticonIllusion', '#DOTA_HUD_Rune_Illusion' )" onmouseout="MouseOutRune( 'RuneEmoticonIllusion' )">
								<DOTAEmoticon id="RuneEmoticonIllusion" alias="illusion" animating="false"/>
							</Button>
							<Panel class="FillWidth" />
							<Button class="RuneButton" acceptsjoyfocus="true" 
									onactivate="FireCustomGameEvent_Str( SpawnRuneInvisibilityPressed )" 
									onmouseover="MouseOverRune( 'RuneEmoticonInvisibility', '#DOTA_HUD_Rune_Invisibility' )" onmouseout="MouseOutRune( 'RuneEmoticonInvisibility' )">
								<DOTAEmoticon id="RuneEmoticonInvisibility" alias="invisibility" animating="false"/>
							</Button>
							<Panel class="FillWidth" />
							<Button class="RuneButton" acceptsjoyfocus="true" 
									onactivate="FireCustomGameEvent_Str( SpawnRuneRegenerationPressed )" 
									onmouseover="MouseOverRune( 'RuneEmoticonRegeneration', '#DOTA_HUD_Rune_Regeneration' )" onmouseout="MouseOutRune( 'RuneEmoticonRegeneration' )">
								<DOTAEmoticon id="RuneEmoticonRegeneration" alias="regeneration" animating="false"/>
							</Button>
							<Panel class="FillWidth" />
							<Button class="RuneButton" acceptsjoyfocus="true" 
									onactivate="FireCustomGameEvent_Str( SpawnRuneArcanePressed )" 
									onmouseover="MouseOverRune( 'RuneEmoticonArcane', '#DOTA_HUD_Rune_Arcane' )" onmouseout="MouseOutRune( 'RuneEmoticonArcane' )">
								<DOTAEmoticon id="RuneEmoticonArcane" alias="arcane_rune" animating="false"/>
							</Button>
							<Panel class="FillWidth" />
							<Button class="RuneButton" acceptsjoyfocus="true" 
									onactivate="FireCustomGameEvent_Str( SpawnRuneShieldPressed )" 
									onmouseover="MouseOverRune( 'RuneEmoticonShield', '#DOTA_HUD_Rune_Shield' )" onmouseout="MouseOutRune( 'RuneEmoticonShield' )">
								<DOTAEmoticon id="RuneEmoticonShield" alias="shield_rune" animating="false"/>
							</Button>
						</Panel>
					</Panel>
				</Panel>

				<Panel id="EditUnitsCategory" class="Category">
					<Label class="CategoryHeader" text="#EditUnits_ButtonCategory"/>
					<Panel class="CategoryButtonContainer">
						<Panel class="Row">
							<Button id="LevelUpSelectedHeroesButton" class="DemoButton LeftButton" acceptsjoyfocus="true" onactivate="LevelUpSelectedHeroes()">
								<Label text="#LevelUpSelectedHeroes_Button"/>
							</Button>
							<Button class="DemoButton RightButton" acceptsjoyfocus="true" onactivate="MaxLevelUpSelectedHeroes()">
								<Label text="#MaxLevelUpSelectedHeroes_Button"/>
							</Button>
						</Panel>

						<Panel class="Row">
							<Button class="DemoButton LeftButton" acceptsjoyfocus="true" onactivate="ScepterSelectedHeroes()">
								<Label text="#ScepterSelectedHeroes_Button"/>
							</Button>
							<Button class="DemoButton RightButton" acceptsjoyfocus="true" onactivate="ShardSelectedHeroes()">
								<Label text="#ShardSelectedHeroes_Button"/>
							</Button>
						</Panel>

						<Panel class="Row">
							<Button class="DemoButton LeftButton" acceptsjoyfocus="true" onactivate="InvulnerableOn()">
								<Label text="#InvulnOn_Button"/>
							</Button>
							<Button class="DemoButton RightButton" acceptsjoyfocus="true" onactivate="InvulnerableOff()">
								<Label text="#InvulnOff_Button"/>
							</Button>
						</Panel>

						<Panel class="Row">
							<Button class="DemoButton LeftButton" acceptsjoyfocus="true" onactivate="ResetSelectedHeroes()">
								<Label text="#Reset_Button"/>
							</Button>
							<Button class="DemoButton RightButton" acceptsjoyfocus="true" onactivate="RemoveSelectedHeroes()">
								<Label text="#RemoveSpawns_Button"/>
							</Button>
						</Panel>
					</Panel>
				</Panel>

				<Panel id="GlobalCategory" class="Category">
					<Label class="CategoryHeader" text="#Global_ButtonCategory"/>
					<Panel class="CategoryButtonContainer">
						<Panel class="Row">
							<ToggleButton id="FreeSpellsButton" class="DemoToggleButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( FreeSpellsButtonPressed )">
								<Label text="#FreeSpells_Button"/>
							</ToggleButton>
							<Button id="RefreshButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( RefreshButtonPressed )" onmouseover="UIShowTextTooltip( #Refresh_Button )" onmouseout="UIHideTextTooltip()">
								<Panel class="RefreshIcon" />
							</Button>
						</Panel>
						<Panel class="Row">
							<ToggleButton id="SpawnCreepsButton" class="DemoToggleButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( SpawnCreepsButtonPressed )">
								<Label text="#SpawnCreeps_Button"/>
							</ToggleButton>
							<Button id="SingleCreepWaveButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( SpawnSingleCreepWaveButtonPressed )" onmouseover="UIShowTextTooltip( #SpawnSingleCreepWave_Tooltip )" onmouseout="UIHideTextTooltip()">
								<Panel class="PlusIcon" />
							</Button>
						</Panel>
						<Panel class="Row">
							<ToggleButton id="TowersEnabledButton" class="DemoToggleButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( TowersEnabledButtonPressed )">
								<Label text="#TowersEnabled_Button"/>
							</ToggleButton>
						</Panel>
						<Panel class="Row">
							<ToggleButton id="NightEnabledButton" class="DemoToggleButton" acceptsjoyfocus="true" onactivate="FireCustomGameEvent_Str( ToggleDayNight )">
								<Label text="#NightEnable_Button"/>
							</ToggleButton>
						</Panel>

						    
						                   
							                                                                                                                                                                                                                                        
								                 
							         
							                                                                                                                                                                                                                                              
								                         
							         
							                                                                                                                                                                                                                                        
								                 
							         
						        
						   

					</Panel>
				</Panel>

				<Panel id="StateCategory" class="Category">
					<Label class="CategoryHeader" text="#GameState_ButtonCategory"/>
					<Panel class="CategoryButtonContainer">
						<Panel class="Row">
							<Button id="SaveStateButton" class="DemoButton LeftButton" acceptsjoyfocus="true" onactivate="SaveState()">
								<Label text="#SaveState_Button"/>
							</Button>
							<Button id="RestoreStateButton" class="DemoButton RightButton" acceptsjoyfocus="true" onactivate="RestoreState()">
								<Label text="#RestoreState_Button"/>
							</Button>
						</Panel>
					</Panel>
				</Panel>

				<Panel id="Footer">
					<TextButton class="DemoButton LeftButton PauseButton" acceptsjoyfocus="true" text="#PauseDemo_Button" onactivate="FireCustomGameEvent_Str( PauseButtonPressed )" />
					<TextButton class="DemoButton RightButton QuitButton" acceptsjoyfocus="true" text="#QuitDemo_Button" onactivate="FireCustomGameEvent_Str( LeaveButtonPressed )" />
				</Panel>

			</Panel>

			<Panel id="ControlPanelSlideThumbContainer" require-composition-layer="true">
				<Button id="ControlPanelSlideThumb" acceptsjoyfocus="true" onactivate="SlideThumbActivate()">
					<Panel class="RightArrowButtonIcon"/>
				</Button>
			</Panel>

		</Panel>

	</Panel>

</root>