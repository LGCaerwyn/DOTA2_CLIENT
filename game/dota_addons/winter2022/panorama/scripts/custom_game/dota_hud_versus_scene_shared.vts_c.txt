"use strict";
/// <reference path="../winter2022.d.ts" />
/// <reference path="util.ts" />
/// <reference path="sequence_actions.ts" />
// For debugging, allow turning off the fade out
let g_bFadeOutEnabled = true;
function IsFadeOutEnabled() {
    return g_bFadeOutEnabled;
}
function SetFadeOutEnabled(bEnabled) {
    g_bFadeOutEnabled = bEnabled;
    const toggleButton = $('#ToggleFadeOut');
    if (toggleButton) {
        toggleButton.SetSelected(bEnabled);
    }
}
function ToggleFadeOutEnabled() {
    SetFadeOutEnabled(!IsFadeOutEnabled());
}
/** Wait for any hero models to finish async loading */
class WaitForHeroModelsAction extends WaitForConditionAction {
    constructor() {
        super(() => $.GetContextPanel().AreHeroModelsLoaded());
    }
}
/** Action to wait until a set of scene panels has loaded */
class WaitForScenesToLoadAction {
    scenePanels;
    loadingSeq;
    uiSeq;
    constructor(...scenePanels) {
        this.scenePanels = scenePanels;
    }
    start() {
        // Setup a sequence to track the things that are loading
        this.loadingSeq = new RunSequentialActions();
        const par = new RunParallelActions();
        for (let i = 0; i < this.scenePanels.length; ++i) {
            par.actions.push(new WaitForClassAction(this.scenePanels[i], 'SceneLoaded'));
        }
        this.loadingSeq.actions.push(par);
        // Wait at least one frame before checking that hero models are loaded. This is to make
        // sure that the update that starts the spawning has a chance to run.
        this.loadingSeq.actions.push(new WaitOneFrameAction());
        this.loadingSeq.actions.push(new WaitForHeroModelsAction());
        // Setup a sequence to show loading state after a delay
        this.uiSeq = new RunSequentialActions();
        this.uiSeq.actions.push(new WaitAction(2.0));
        this.uiSeq.actions.push(new AddClassAction($.GetContextPanel(), 'LoadingVersusScreen'));
        // Start up both sequences
        this.loadingSeq.start();
        this.uiSeq.start();
    }
    update() {
        // Tick both sequences, but move on the minute the loading sequence is done
        this.uiSeq.update();
        return this.loadingSeq.update();
    }
    ;
    finish() {
        this.uiSeq.finish();
        this.loadingSeq.finish();
        $.GetContextPanel().RemoveClass('LoadingVersusScreen');
    }
    ;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG90YV9odWRfdmVyc3VzX3NjZW5lX3NoYXJlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2RvdGFfYWRkb25zL3dpbnRlcjIwMjIvcGFub3JhbWEvc2NyaXB0cy9jdXN0b21fZ2FtZS9kb3RhX2h1ZF92ZXJzdXNfc2NlbmVfc2hhcmVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwyQ0FBMkM7QUFDM0MsZ0NBQWdDO0FBQ2hDLDRDQUE0QztBQUU1QyxnREFBZ0Q7QUFDaEQsSUFBSSxpQkFBaUIsR0FBRyxJQUFJLENBQUM7QUFDN0IsU0FBUyxnQkFBZ0I7SUFFeEIsT0FBTyxpQkFBaUIsQ0FBQztBQUMxQixDQUFDO0FBQ0QsU0FBUyxpQkFBaUIsQ0FBRSxRQUFpQjtJQUU1QyxpQkFBaUIsR0FBRyxRQUFRLENBQUM7SUFFN0IsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUF5QixnQkFBZ0IsQ0FBRSxDQUFDO0lBQ2xFLElBQUssWUFBWSxFQUNqQjtRQUNDLFlBQVksQ0FBQyxXQUFXLENBQUUsUUFBUSxDQUFFLENBQUM7S0FDckM7QUFDRixDQUFDO0FBQ0QsU0FBUyxvQkFBb0I7SUFFNUIsaUJBQWlCLENBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFFLENBQUM7QUFDMUMsQ0FBQztBQUVELHVEQUF1RDtBQUN2RCxNQUFNLHVCQUF3QixTQUFRLHNCQUFzQjtJQUUzRDtRQUVDLEtBQUssQ0FBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsZUFBZSxFQUF3QixDQUFDLG1CQUFtQixFQUFFLENBQUUsQ0FBQztJQUNoRixDQUFDO0NBQ0Q7QUFFRCw0REFBNEQ7QUFDNUQsTUFBTSx5QkFBeUI7SUFFOUIsV0FBVyxDQUFZO0lBRXZCLFVBQVUsQ0FBd0I7SUFDbEMsS0FBSyxDQUF3QjtJQUU3QixZQUFhLEdBQUcsV0FBc0I7UUFFckMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7SUFDaEMsQ0FBQztJQUVELEtBQUs7UUFFSix3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLG9CQUFvQixFQUFFLENBQUM7UUFFN0MsTUFBTSxHQUFHLEdBQUcsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO1FBQ3JDLEtBQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFDakQ7WUFDQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLGtCQUFrQixDQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsYUFBYSxDQUFFLENBQUUsQ0FBQztTQUNqRjtRQUNELElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxHQUFHLENBQUUsQ0FBQztRQUVwQyx1RkFBdUY7UUFDdkYscUVBQXFFO1FBQ3JFLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLGtCQUFrQixFQUFFLENBQUUsQ0FBQztRQUN6RCxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSx1QkFBdUIsRUFBRSxDQUFFLENBQUM7UUFFOUQsdURBQXVEO1FBQ3ZELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxvQkFBb0IsRUFBRSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLFVBQVUsQ0FBRSxHQUFHLENBQUUsQ0FBRSxDQUFDO1FBQ2pELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLGNBQWMsQ0FBRSxDQUFDLENBQUMsZUFBZSxFQUF3QixFQUFFLHFCQUFxQixDQUFFLENBQUUsQ0FBQztRQUVsSCwwQkFBMEI7UUFDMUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxNQUFNO1FBRUwsMkVBQTJFO1FBQzNFLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDcEIsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTTtRQUVMLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUN6QixDQUFDLENBQUMsZUFBZSxFQUF3QixDQUFDLFdBQVcsQ0FBRSxxQkFBcUIsQ0FBRSxDQUFDO0lBQ2hGLENBQUM7SUFBQSxDQUFDO0NBQ0YifQ==