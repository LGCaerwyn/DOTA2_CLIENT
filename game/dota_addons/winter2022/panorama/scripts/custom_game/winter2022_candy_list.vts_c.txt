/// <reference path="../../../../../dota/panorama/scripts/dota.d.ts" />
/// <reference path="../../../../../dota/panorama/scripts/util.ts" />
/// <reference path="winter2022_shared.ts" />
const g_CandyState = SubscribeAllTableValues("candy_list", UpdateCandyList);
CustomNetTables.SubscribeNetTableListener("globals", UpdateCandyList);
let g_CandyPanels = {};
function Init() {
    $.GetContextPanel().RemoveAndDeleteChildren();
    g_CandyPanels = {};
    TrackAltPressed($.GetContextPanel());
    const nLocalTeam = Players.GetTeam(Players.GetLocalPlayer());
    $.GetContextPanel().SetHasClass("Spectating", nLocalTeam !== DOTATeam_t.DOTA_TEAM_BADGUYS && nLocalTeam !== DOTATeam_t.DOTA_TEAM_GOODGUYS);
    UpdateCandyList();
}
$.Schedule(1.0, Init);
function UpdateCandyList() {
    const nLocalTeam = Players.GetTeam(Players.GetLocalPlayer());
    const bLocalIsInGame = nLocalTeam === DOTATeam_t.DOTA_TEAM_BADGUYS || nLocalTeam === DOTATeam_t.DOTA_TEAM_GOODGUYS;
    const candyValues = {};
    Object.values(g_CandyState).forEach(state => {
        if (!state)
            return;
        const nPlayerID = Entities.GetPlayerOwnerID(state.entity_index);
        if (Players.IsValidPlayerID(nPlayerID))
            candyValues[nPlayerID] = (candyValues[nPlayerID] || 0) + state.candy_count;
    });
    GetValidPlayerIDs().forEach(nPlayerID => {
        const nCandyCount = candyValues[nPlayerID] || 0;
        const bShowCandy = nCandyCount !== 0 && (!bLocalIsInGame || nLocalTeam === Players.GetTeam(nPlayerID));
        if (bShowCandy) {
            const candyPanel = g_CandyPanels[nPlayerID] || CreatePlayerCandyPanel(nPlayerID);
            if (!candyPanel)
                return;
            candyPanel.SetDialogVariableInt("candy_count", nCandyCount);
            candyPanel.SetHasClass("Hidden", false);
        }
        else {
            const candyPanel = g_CandyPanels[nPlayerID];
            if (candyPanel) {
                candyPanel.SetDialogVariableInt("candy_count", 0);
                candyPanel.SetHasClass("Hidden", true);
            }
        }
    });
}
function CreatePlayerCandyPanel(nPlayerID) {
    if (g_CandyPanels[nPlayerID])
        return g_CandyPanels[nPlayerID];
    const bIsRadiant = Players.GetTeam(nPlayerID) == DOTATeam_t.DOTA_TEAM_GOODGUYS;
    const panelId = `${bIsRadiant ? "Radiant" : "Dire"}Player${nPlayerID}`;
    const hud = $.GetContextPanel().FindAncestor("HUDElements");
    if (!hud)
        return null;
    const playerPanel = hud.FindChildTraverse(panelId);
    if (!playerPanel)
        return null;
    const playerContainer = playerPanel.FindChildTraverse("SlantedContainerPanel");
    if (!playerContainer)
        return null;
    const playerRect = GetPanelRect(playerContainer);
    const candyPanel = $.CreatePanel("Panel", $.GetContextPanel(), `Player${nPlayerID}Candy`);
    candyPanel.BLoadLayoutSnippet("PlayerCandy");
    candyPanel.SwitchClass("team", bIsRadiant ? "PlayerCandyRadiant" : "PlayerCandyDire");
    candyPanel.SetPositionInPixels(playerRect.x, playerRect.height, 0);
    g_CandyPanels[nPlayerID] = candyPanel;
    return candyPanel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ludGVyMjAyMl9jYW5keV9saXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2ludGVyMjAyMl9jYW5keV9saXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVFQUF1RTtBQUN2RSxxRUFBcUU7QUFDckUsNkNBQTZDO0FBRzdDLE1BQU0sWUFBWSxHQUFHLHVCQUF1QixDQUFnQixZQUFZLEVBQUUsZUFBZSxDQUFFLENBQUM7QUFDNUYsZUFBZSxDQUFDLHlCQUF5QixDQUFFLFNBQVMsRUFBRSxlQUFlLENBQUUsQ0FBQztBQUV4RSxJQUFJLGFBQWEsR0FBd0IsRUFBRSxDQUFDO0FBQzVDLFNBQVMsSUFBSTtJQUVULENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO0lBQzlDLGFBQWEsR0FBRyxFQUFFLENBQUE7SUFFbEIsZUFBZSxDQUFFLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBRSxDQUFDO0lBRXZDLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUUsT0FBTyxDQUFDLGNBQWMsRUFBRSxDQUFFLENBQUM7SUFDL0QsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDLFdBQVcsQ0FBRSxZQUFZLEVBQUUsVUFBVSxLQUFLLFVBQVUsQ0FBQyxpQkFBaUIsSUFBSSxVQUFVLEtBQUssVUFBVSxDQUFDLGtCQUFrQixDQUFFLENBQUM7SUFFN0ksZUFBZSxFQUFFLENBQUM7QUFDdEIsQ0FBQztBQUNELENBQUMsQ0FBQyxRQUFRLENBQUUsR0FBRyxFQUFFLElBQUksQ0FBRSxDQUFDO0FBRXhCLFNBQVMsZUFBZTtJQUVwQixNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFFLE9BQU8sQ0FBQyxjQUFjLEVBQUUsQ0FBRSxDQUFDO0lBQy9ELE1BQU0sY0FBYyxHQUFHLFVBQVUsS0FBSyxVQUFVLENBQUMsaUJBQWlCLElBQUksVUFBVSxLQUFLLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQztJQUVuSCxNQUFNLFdB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