"use strict";
/// <reference path="../../../../../dota/panorama/scripts/dota.d.ts" />
/// <reference path="../../../../../dota/panorama/scripts/util.ts" />
/// <reference path="winter2022_shared.ts" />
let strCurrentInstanceMessageClass = "";
let nCurrentInstanceMessagePriority = 0;
let flCurrentInstanceMessageDieTime = -1;
let flRoundStartClearTime = -1;
// Show per-player candy carrying
// Call out "in the lead"
function OnRoshanHudLoaded() {
    $.Msg("OnRoshanHudLoaded");
    const contextPanel = $.GetContextPanel();
    const parent = contextPanel.GetParent();
    const customRoot = parent.GetParent();
    // Need to reparent this, to get layering correct.
    const hudRoot = customRoot.GetParent().FindChild('HUDElements');
    const topBar = hudRoot.FindChild('topbar');
    customRoot.SetParent(hudRoot);
    hudRoot.MoveChildAfter(customRoot, topBar);
    customRoot.GetParent().AddClass("Winter2022");
    // It is important to set all dialog variables here to reasonable defaults,
    // otherwise the first update of the UI will have a bunch of "missing variable" slugs in it.
    contextPanel.SetDialogVariableInt("radiant_total_candy", 0);
    contextPanel.SetDialogVariableInt("radiant_extra_candy", 0);
    contextPanel.SetDialogVariableInt("dire_total_candy", 0);
    contextPanel.SetDialogVariableInt("dire_extra_candy", 0);
    contextPanel.SetDialogVariableInt("roshan_candy", 0);
    contextPanel.SwitchClass("GameState", "WINTER2022_GAMESTATE_PREGAME");
    contextPanel.SetDialogVariable("timevalue", "");
}
let g_bDoneCameraSetup = false;
function DoInitialCameraSetup() {
    if (g_bDoneCameraSetup)
        return;
    const nLocalPlayer = Players.GetLocalPlayer();
    const nLocalTeam = Players.GetTeam(nLocalPlayer);
    let vLocalPlayerStarts = [];
    if (nLocalTeam == 2) {
        vLocalPlayerStarts = Entities.GetAllEntitiesByClassname('info_player_start_goodguys');
    }
    else {
        vLocalPlayerStarts = Entities.GetAllEntitiesByClassname('info_player_start_badguys');
    }
    if (vLocalPlayerStarts.length > 0) {
        GameUI.MoveCameraToEntity(vLocalPlayerStarts[0]);
        g_bDoneCameraSetup = true;
    }
}
function OnThink() {
    const contextPanel = $.GetContextPanel();
    const time = Game.GetDOTATime(false, true);
    const bAltPressed = IsDotaAltPressed();
    contextPanel.SetHasClass("AltPressed", bAltPressed == true);
    const bPaused = Game.IsGamePaused();
    contextPanel.SetHasClass("IsPaused", bPaused == true);
    if (flRoundStartClearTime != -1 && time >= flRoundStartClearTime) {
        flRoundStartClearTime = -1;
        ClearRoundStartPopup();
    }
    if (Globals.values !== undefined) {
        if (Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_PREGAME) {
            contextPanel.SwitchClass("GameState", "WINTER2022_GAMESTATE_PREGAME");
            contextPanel.SetDialogVariable("round_end_timer_prefix", "Spawning Heroes");
            DoInitialCameraSetup();
        }
        else if (Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_GAMEOVER) {
            ClearInstanceMessage();
            contextPanel.SwitchClass("GameState", "WINTER2022_GAMESTATE_GAMEOVER");
            contextPanel.SetDialogVariable("round_end_timer_prefix", "Game Over");
        }
        else if (Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_INTERSTITIAL_ROUND_PHASE || Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_PREP_TIME) {
            ClearInstanceMessage();
            contextPanel.SwitchClass("GameState", "WINTER2022_GAMESTATE_INTERSTITIAL_ROUND_PHASE");
            contextPanel.SetDialogVariable("round_end_timer_prefix", "Round Interstitial Time");
            const nSecondsRemaining = Globals.values.TimeRoundEnds - time;
            SetTimeValue(nSecondsRemaining);
            if (nSecondsRemaining < (Globals.constants.WINTER2022_INTERSTITIAL_TIME - 5)) {
                contextPanel.RemoveClass("ShowRoundEnd");
            }
        }
        else if (Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_GAME_IN_PROGRESS || Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_GAME_IN_PROGRESS_BETWEEN_ROUNDS) {
            TryExpireInstanceMessage();
            contextPanel.SwitchClass("GameState", "WINTER2022_GAMESTATE_GAME_IN_PROGRESS");
            contextPanel.SetDialogVariable("round_end_timer_prefix", "Game Time");
            const nSecondsElapsed = time - Globals.values.TimeGameStarted;
            SetTimeValue(nSecondsElapsed);
        }
        else if (Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_DISPLAY_FINAL_ROUND_RESULTS) {
            ClearInstanceMessage();
            contextPanel.SwitchClass("GameState", "WINTER2022_GAMESTATE_DISPLAY_FINAL_ROUND_RESULTS");
        }
        else if (Globals.values.GameState == Globals.constants.WINTER2022_GAMESTATE_ENDING_CINEMATIC) {
            contextPanel.SwitchClass("GameState", "WINTER2022_GAMESTATE_ENDING_CINEMATIC");
        }
        contextPanel.SetDialogVariableInt("dire_score", Globals.values.DireScore);
        contextPanel.SetDialogVariableInt("radiant_score", Globals.values.RadiantScore);
        contextPanel.SwitchClass("scoreDire", "ScoreDire" + Math.min(3, Globals.values.DireScore).toString());
        contextPanel.SwitchClass("scoreRadiant", "ScoreRadiant" + Math.min(3, Globals.values.RadiantScore).toString());
    }
    $.Schedule(0.1, OnThink);
}
$.Schedule(0.0, OnThink);
function OnCameraThink() {
    if (g_bInEndGameCamera) {
        g_flCurrentPitch = g_flCurrentPitch + g_flCameraPitchSpeed;
        if (g_flCurrentPitch < g_flFinalPitch) {
            g_flCurrentPitch = g_flFinalPitch;
        }
        GameUI.SetCameraPitchMin(g_flCurrentPitch);
        GameUI.SetCameraPitchMax(g_flCurrentPitch);
        //const vCameraLookAtPos = GameUI.GetCameraLookAtPosition();
        //GameUI.SetCameraPositionFromLateralLookAtPosition( vCameraLookAtPos[0], vCameraLookAtPos[1] );
    }
    $.Schedule(0.003, OnCameraThink);
}
$.Schedule(0.0, OnCameraThink);
function SetTimeValue(nSecondsRemaining) {
    if (nSecondsRemaining < 0) {
        nSecondsRemaining = 0;
    }
    const nMinutesRemaining = Math.floor(nSecondsRemaining / 60);
    nSecondsRemaining = Math.floor(nSecondsRemaining - nMinutesRemaining * 60);
    let resultString = nMinutesRemaining.toString() + ":";
    if (nSecondsRemaining < 10) {
        resultString = resultString + "0";
    }
    resultString = resultString + nSecondsRemaining.toString();
    const contextPanel = $.GetContextPanel();
    contextPanel.SetDialogVariable("timevalue", resultString);
    contextPanel.SetHasClass("Last30Seconds", (nMinutesRemaining == 0) && (nSecondsRemaining <= 30));
    contextPanel.SetHasClass("Last10Seconds", (nMinutesRemaining == 0) && (nSecondsRemaining <= 10));
}
GameEvents.Subscribe("round_start", function (e) {
    const contextPanel = $.GetContextPanel();
    contextPanel.AddClass("RoundNameTitleAnimation");
    contextPanel.SwitchClass("roundNumber", "Round" + e.round_number.toString());
    contextPanel.SetDialogVariableInt("round_number", e.round_number);
    contextPanel.SetDialogVariable("round_name", $.Localize(e.round_name));
    contextPanel.AddClass("ShowRoundStart");
    flRoundStartClearTime = Game.GetDOTATime(false, true) + 4.0;
});
function ClearRoundStartPopup() {
    $.GetContextPanel().RemoveClass("ShowRoundStart");
    $.GetContextPanel().RemoveClass("RoundNameTitleAnimation");
}
GameEvents.Subscribe("fade_to_black", function (e) {
    if (e.fade_down == 1) {
        $.GetContextPanel().AddClass("FadeToBlack");
    }
    else {
        $.GetContextPanel().RemoveClass("FadeToBlack");
    }
});
function TryUpdateInstanceMessage(flDuration, nPriority, strNewClass) {
    if (nPriority < nCurrentInstanceMessagePriority)
        return;
    if (strCurrentInstanceMessageClass != "") {
        $.GetContextPanel().RemoveClass(strCurrentInstanceMessageClass);
    }
    strCurrentInstanceMessageClass = strNewClass;
    if (strNewClass == "") {
        nCurrentInstanceMessagePriority = 0;
        flCurrentInstanceMessageDieTime = -1.0;
    }
    else {
        nCurrentInstanceMessagePriority = nPriority;
        $.GetContextPanel().AddClass(strNewClass);
        if (flDuration > 0) {
            flCurrentInstanceMessageDieTime = flDuration + Game.GetDOTATime(false, true);
        }
        else {
            flCurrentInstanceMessageDieTime = -1.0;
        }
    }
}
function TryExpireInstanceMessage() {
    if (flCurrentInstanceMessageDieTime > 0 && flCurrentInstanceMessageDieTime <= Game.GetDOTATime(false, true)) {
        ClearInstanceMessage();
    }
}
function ClearInstanceMessage() {
    if (flCurrentInstanceMessageDieTime > 0) {
        TryUpdateInstanceMessage(-1.0, 99999, "");
    }
}
GameEvents.Subscribe("team_cursed", function (e) {
    const nLocalTeam = Players.GetTeam(Players.GetLocalPlayer());
    if ((nLocalTeam != DOTATeam_t.DOTA_TEAM_GOODGUYS && nLocalTeam != DOTATeam_t.DOTA_TEAM_BADGUYS) || e.cursed_team < 0) {
        if (Math.abs(e.cursed_team) == DOTATeam_t.DOTA_TEAM_GOODGUYS) {
            $.GetContextPanel().SwitchClass("cursedTeam", "cursedTeamRadiant");
        }
        else {
            $.GetContextPanel().SwitchClass("cursedTeam", "cursedTeamDire");
        }
    }
    else {
        if (e.cursed_team == nLocalTeam) {
            $.GetContextPanel().SwitchClass("cursedTeam", "cursedTeamYou");
        }
        else {
            $.GetContextPanel().SwitchClass("cursedTeam", "cursedTeamThem");
        }
    }
    TryUpdateInstanceMessage(6.0, 10, "ShowCursePopup");
});
GameEvents.Subscribe("time_left", function (e) {
    $.GetContextPanel().SwitchClass("timeLeft", "timeLeft" + e.time_left);
    let flDuration = 1.0;
    if (e.time_left > 5) {
        flDuration = 2.0;
    }
    TryUpdateInstanceMessage(flDuration, 1, "ShowTimeLeftPopup");
});
GameEvents.Subscribe("roshan_target_switch", function (e) {
    const nLocalTeam = Players.GetTeam(Players.GetLocalPlayer());
    const nLocalHero = Players.GetPlayerHeroEntityIndex(Players.GetLocalPlayer());
    let nPriority = 30;
    if ((nLocalTeam != DOTATeam_t.DOTA_TEAM_GOODGUYS && nLocalTeam != DOTATeam_t.DOTA_TEAM_BADGUYS) || e.team < 0) {
        if (Math.abs(e.team) == DOTATeam_t.DOTA_TEAM_GOODGUYS) {
            $.GetContextPanel().SwitchClass("roshanTargeting", "roshanTargetingRadiant");
        }
        else {
            $.GetContextPanel().SwitchClass("roshanTargeting", "roshanTargetingDire");
        }
    }
    else {
        if (nLocalTeam == e.team || e.force_you == 1) {
            if (nLocalHero == e.ent_index || e.force_you == 1) {
                nPriority = 50;
                $.GetContextPanel().SwitchClass("roshanTargeting", "roshanTargetingYou");
            }
            else {
                //$.GetContextPanel().SwitchClass( "roshanTargeting", "roshanTargetingAlly" );
                return;
            }
        }
        else {
            //$.GetContextPanel().SwitchClass( "roshanTargeting", "roshanTargetingEnemy" );
            return;
        }
    }
    TryUpdateInstanceMessage(2.0, nPriority, "ShowRoshanTargetPopup");
});
GameEvents.Subscribe("candy_bucket_attacked", function (e) {
    const nLocalTeam = Players.GetTeam(Players.GetLocalPlayer());
    if (nLocalTeam == e.team) {
        TryUpdateInstanceMessage(2.0, 40, "ShowCandyBucketAttackedPopup");
    }
});
GameEvents.Subscribe("stash_respawn", function (e) {
    TryUpdateInstanceMessage(2.0, 20, "ShowStashRespawnPopup");
});
GameEvents.Subscribe("greevil_spawn", function (e) {
    Game.EmitSound("Greevil.Spawn.Announcement");
    Game.EmitSound("Greevil.Spawn.Laugh");
    TryUpdateInstanceMessage(2.0, 20, "ShowGreevilSpawnPopup");
});
GameEvents.Subscribe("roshan_released", function (e) {
    TryUpdateInstanceMessage(2.0, 20, "ShowRoshanReleasedPopup");
});
GameEvents.Subscribe("well_targeted", function (e) {
    const nLocalTeam = Players.GetTeam(Players.GetLocalPlayer());
    let nPriority = 30;
    if ((nLocalTeam != DOTATeam_t.DOTA_TEAM_GOODGUYS && nLocalTeam != DOTATeam_t.DOTA_TEAM_BADGUYS) || e.team < 0) {
        if (Math.abs(e.team) == DOTATeam_t.DOTA_TEAM_GOODGUYS) {
            $.GetContextPanel().SwitchClass("WellTargeted", "WellTargetedRadiant");
        }
        else {
            $.GetContextPanel().SwitchClass("WellTargeted", "WellTargetedRadiantDire");
        }
    }
    else {
        if (Math.abs(e.team) == nLocalTeam) {
            $.GetContextPanel().SwitchClass("WellTargeted", "WellTargetedAlly");
        }
        else {
            $.GetContextPanel().SwitchClass("WellTargeted", "WellTargetedEnemy");
        }
    }
    TryUpdateInstanceMessage(2.0, 20, "ShowWellTargetedPopup");
});
let g_bInEndGameCamera = false;
let g_flCurrentPitch = 0;
const g_flInitialPitch = 40;
const g_flFinalPitch = 30;
const g_flCameraPitchSpeed = -0.015;
GameEvents.Subscribe("begin_end_game_cinematic", function BeginEndGameCinematic(data) {
    GameUI.MoveCameraToEntity(data.ent_index);
    g_flCurrentPitch = g_flInitialPitch;
    GameUI.SetCameraPitchMin(g_flCurrentPitch);
    GameUI.SetCameraPitchMax(g_flCurrentPitch);
    GameUI.SetCameraDistance(650);
    GameUI.SetCameraLookAtPositionHeightOffset(250);
    GameUI.SetCameraTarget(data.ent_index);
    GameUI.SetCameraYaw(0);
    g_bInEndGameCamera = true;
    //const vAghanimAngles = Entities.GetAbsAngles( data[ "ent_index" ] );
    //GameUI.SetCameraYaw( vAghanimAngles[ 1 ] - 10 + 90 );                                
    //g_flCameraYawSpeed = 0.025;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ludGVyMjAyMl9odWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3aW50ZXIyMDIyX2h1ZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsdUVBQXVFO0FBQ3ZFLHFFQUFxRTtBQUNyRSw2Q0FBNkM7QUFFN0MsSUFBSSw4QkFBOEIsR0FBRyxFQUFFLENBQUM7QUFDeEMsSUFBSSwrQkFBK0IsR0FBRyxDQUFDLENBQUM7QUFDeEMsSUFBSSwrQkFBK0IsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUN6QyxJQUFJLHFCQUFxQixHQUFHLENBQUMsQ0FBQyxDQUFDO0FBRS9CLGlDQUFpQztBQUNqQyx5QkFBeUI7QUFFekIsU0FBUyxpQkFBaUI7SUFFdEIsQ0FBQyxDQUFDLEdBQUcsQ0FBRSxtQkFBbUIsQ0FBRSxDQUFDO0lBRTdCLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QyxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsU0FBUyxFQUFHLENBQUM7SUFDekMsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLFNBQVMsRUFBRyxDQUFDO0lBQ3ZDLGtEQUFrRDtJQUNsRCxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsU0FBUyxFQUFHLENBQUMsU0FBUyxDQUFFLGFBQWEsQ0FBRyxDQUFDO0lBQ3BFLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUUsUUFBUSxDQUFHLENBQUM7SUFDOUMsVUFBVSxDQUFDLFNBQVMsQ0FBRSxPQUFPLENBQUUsQ0FBQztJQUNoQyxPQUFPLENBQUMsY0FBYyxDQUFFLFVBQVUsRUFBRSxNQUFNLENBQUUsQ0FBQztJQUM3QyxVQUFVLENBQUMsU0FBUyxFQUFHLENBQUMsUUFBUSxDQUFFLFlBQVksQ0FBRSxDQUFDO0lBRWpELDJFQUEyRTtJQUMzRSw0RkFBNEY7SUFDNUYsWUFBWSxDQUFDLG9CQUFvQixDQUFFLHFCQUFxQixFQUFFLENBQUMsQ0FBRSxDQUFDO0lBQzlELFlBQVksQ0FB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