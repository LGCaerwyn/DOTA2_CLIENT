"use strict";
/// <reference path="../../../../../dota/panorama/scripts/dota.d.ts" />
/// <reference path="../../../../../dota/panorama/scripts/sequence_actions.ts" />
/// <reference path="../../../../../dota/panorama/scripts/dota_sequence_actions.ts" />
/// <reference path="../../../../../dota/panorama/scripts/hud/versus/dota_hud_versus_scene_shared.ts" />
// Called from C++ when the scene starts
function PlayScene() {
    const mainPanel = $.GetContextPanel();
    const scenePanel = $('#VersusScene');
    //$.Msg( "diretide2020_versus!" );
    // Initial Setup
    //	mainPanel.RemoveClass( 'RevealTeamDetails' );
    //	mainPanel.RemoveClass( 'RevealFeaturedHeroDetails' );
    // Wait for the fade-in, then reveal the scene
    const mainSeq = new RunSequentialActions();
    mainSeq.actions.push(new PlaySoundEffectAction('MatchBegin.Underscore'));
    mainSeq.actions.push(new WaitForScenesToLoadAction(scenePanel));
    /*
        mainSeq.actions.push( new RunFunctionAction( function ()
        {
            scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( 0 ), 'StartGestureOverride', 'ACT_DOTA_LOADOUT' );
            scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( 0 ), 'SetPlaybackRateOnAllLayers', 0.5 );
            for ( let i = 1; i < 5; ++i )
            {
                scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( i ), 'StartGestureOverride', 'ACT_DOTA_LOADOUT' );
                scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( i ), 'SetPlaybackRateOnAllLayers', 0.3 );
            }
        } ) );
    */
    mainSeq.actions.push(new WaitAction(0.5));
    mainSeq.actions.push(new AddClassAction(mainPanel, 'RevealScene'));
    //	mainSeq.actions.push( new PlaySoundEffectAction( 'versus_screen.radiant' ) );
    // The UI will appear in pieces
    const uiSeq = new RunSequentialActions();
    //	uiSeq.actions.push( new AddClassAction( mainPanel, 'RevealTeamDetails' ) );
    uiSeq.actions.push(new WaitAction(10));
    uiSeq.actions.push(new AddClassAction(mainPanel, "RevealTitleCard"));
    uiSeq.actions.push(new WaitAction(4.5));
    uiSeq.actions.push(new RemoveClassAction(mainPanel, "RevealScene"));
    //	uiSeq.actions.push( new AddClassAction( mainPanel, 'RevealFeaturedHeroDetails' ) );
    // Script the entities
    const entitySeq = new RunSequentialActions();
    entitySeq.actions.push(new FireEntityInputAction(scenePanel, 'intro_camera', 'SetAnimation', 'diretide_intro_cam3'));
    // Add an action
    entitySeq.actions.push(new WaitAction(16.0));
    // Script the shader effect with a little local action definition.
    class PostProcessFadeLerpAction extends LerpAction {
        applyProgress(progress) {
            scenePanel.SetPostProcessFade(progress * (0.85 - 0.2) + 0.2);
        }
    }
    // Run both the UI and Entity sequence in parallel
    const par = new RunParallelActions();
    par.actions.push(uiSeq);
    par.actions.push(entitySeq);
    //par.actions.push( new PostProcessFadeLerpAction( 4.6 ) );
    mainSeq.actions.push(par);
    // All done, fade to black
    mainSeq.actions.push(new RunFunctionAction(function () {
        if (IsFadeOutEnabled()) {
            //			PlaySoundEffect( 'versus_screen.whoosh' );
            mainPanel.RemoveClass('RevealScene');
        }
    }));
    // Now that the sequence is created, actually run the thing
    RunSingleAction(mainSeq);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ludGVyMjAyMl92ZXJzdXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3aW50ZXIyMDIyX3ZlcnN1cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsdUVBQXVFO0FBQ3ZFLGlGQUFpRjtBQUNqRixzRkFBc0Y7QUFDdEYsd0dBQXdHO0FBRXhHLHdDQUF3QztBQUN4QyxTQUFTLFNBQVM7SUFFakIsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLGVBQWUsRUFBd0IsQ0FBQztJQUM1RCxNQUFNLFVBQVUsR0FBRyxDQUFDLENBQW9CLGNBQWMsQ0FBRSxDQUFDO0lBRXpELGtDQUFrQztJQUVsQyxnQkFBZ0I7SUFDaEIsZ0RBQWdEO0lBQ2hELHdEQUF3RDtJQUV4RCw4Q0FBOEM7SUFDOUMsTUFBTSxPQUFPLEdBQUcsSUFBSSxvQkFBb0IsRUFBRSxDQUFDO0lBQzNDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLElBQUkscUJBQXFCLENBQUUsdUJBQXVCLENBQUUsQ0FBRSxDQUFDO0lBQzdFLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLElBQUkseUJBQXlCLENBQUUsVUFBVSxDQUFFLENBQUUsQ0FBQztJQUNwRTs7Ozs7Ozs7Ozs7TUFXRTtJQUNGLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLElBQUksVUFBVSxDQUFFLEdBQUcsQ0FBRSxDQUFFLENBQUM7SUFDOUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxjQUFjLENBQUUsU0FBUyxFQUFFLGFBQWEsQ0FBRSxDQUFFLENBQUM7SUFDdkUsZ0ZBQWdGO0lBRWhGLCtCQUErQjtJQUMvQixNQUFNLEtBQUssR0FBRyxJQUFJLG9CQUFvQixFQUFFLENBQUM7SUFDekMsOEVBQThFO0lBQzlFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLElBQUksVUFBVSxDQUFFLEVBQUUsQ0FBRSxDQUFFLENBQUM7SUFDM0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxjQUFjLENBQUUsU0FBUyxFQUFFLGlCQUFpQixDQUFFLENBQUUsQ0FBQztJQUN6RSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLFVBQVUsQ0FBRSxHQUFHLENBQUUsQ0FBRSxDQUFDO0lBQzVDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLElBQUksaUJBQWlCLENBQUUsU0FBUyxFQUFFLGFBQWEsQ0FBRSxDQUFFLENBQUM7SUFDeEUsc0ZBQXNGO0lBRXRGLHNCQUFzQjtJQUN0QixNQUFNLFNBQVMsR0FBRyxJQUFJLG9CQUFvQixFQUFFLENBQUM7SUFDN0MsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxxQkFBcUIsQ0FBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxxQkFBcUIsQ0FBRSxDQUFFLENBQUM7SUFDekgsZ0JBQWdCO0lBQ2hCLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLElBQUksVUFBVSxDQUFFLElBQUksQ0FBRSxDQUFFLENBQUM7SUFFakQsa0VBQWtFO0lBQ2xFLE1BQU0seUJBQTBCLFNBQVEsVUFBVTtRQUVqRCxhQUFhLENBQUUsUUFBZ0I7WUFFOUIsVUFBVSxDQUFDLGtCQUFrQixDQUFFLFFBQVEsR0FBRyxDQUFFLElBQUksR0FBRyxHQUFHLENBQUUsR0FBRyxHQUFHLENBQUUsQ0FBQztRQUNsRSxDQUFDO0tBQ0Q7SUFFRCxrREFBa0Q7SUFDbEQsTUFBTSxHQUFHLEdBQUcsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO0lBQ3JDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDO0lBQzFCLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLFNBQVMsQ0FBRSxDQUFDO0lBQzlCLDJEQUEyRDtJQUMzRCxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxHQUFHLENBQUUsQ0FBQztJQUU1QiwwQkFBMEI7SUFDMUIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxpQkFBaUIsQ0FBRTtRQUU1QyxJQUFLLGdCQUFnQixFQUFFLEVBQ3ZCO1lBQ0MsK0NBQStDO1lBQy9DLFNBQVMsQ0FBQyxXQUFXLENBQUUsYUFBYSxDQUFFLENBQUM7U0FDdkM7SUFDRixDQUFDLENBQUUsQ0FBRSxDQUFDO0lBRU4sMkRBQTJEO0lBQzNELGVBQWUsQ0FBRSxPQUFPLENBQUUsQ0FBQztBQUM1QixDQUFDIn0=