/// <reference path="../../../../../dota/panorama/scripts/dota.d.ts" />
/// <reference path="../../../../../dota/panorama/scripts/sequence_actions.ts" />
/// <reference path="../../../../../dota/panorama/scripts/dota_sequence_actions.ts" />
/// <reference path="../../../../../dota/panorama/scripts/hud/versus/dota_hud_versus_scene_shared.ts" />
// Called from C++ when the scene starts
function PlayScene() {
    const mainPanel = $.GetContextPanel();
    const scenePanel = $('#VersusScene');
    //$.Msg( "diretide2020_versus!" );
    // Initial Setup
    //	mainPanel.RemoveClass( 'RevealTeamDetails' );
    //	mainPanel.RemoveClass( 'RevealFeaturedHeroDetails' );
    // Wait for the fade-in, then reveal the scene
    const mainSeq = new RunSequentialActions();
    mainSeq.actions.push(new PlaySoundEffectAction('MatchBegin.Underscore'));
    mainSeq.actions.push(new WaitForScenesToLoadAction(scenePanel));
    /*
        mainSeq.actions.push( new RunFunctionAction( function ()
        {
            scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( 0 ), 'StartGestureOverride', 'ACT_DOTA_LOADOUT' );
            scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( 0 ), 'SetPlaybackRateOnAllLayers', 0.5 );
            for ( let i = 1; i < 5; ++i )
            {
                scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( i ), 'StartGestureOverride', 'ACT_DOTA_LOADOUT' );
                scenePanel.FireEntityInput( mainPanel.GetHeroEntityNameByHeroSlot( i ), 'SetPlaybackRateOnAllLayers', 0.3 );
            }
        } ) );
    */
    mainSeq.actions.push(new WaitAction(0.5));
    mainSeq.actions.push(new AddClassAction(mainPanel, 'RevealScene'));
    //	mainSeq.actions.push( new PlaySoundEffectAction( 'versus_screen.radiant' ) );
    // The UI will appear in pieces
    const uiSeq = new RunSequentialActions();
    //	uiSeq.actions.push( new AddClassAction( mainPanel, 'RevealTeamDetails' ) );
    uiSeq.actions.push(new WaitAction(10));
    uiSeq.actions.push(new AddClassAction(mainPanel, "RevealTitleCard"));
    uiSeq.actions.push(new WaitAction(4.5));
    uiSeq.actions.push(new RemoveClassAction(mainPanel, "RevealScene"));
    //	uiSeq.actions.push( new AddClassAction( mainPanel, 'RevealFeaturedHeroDetails' ) );
    // Script the entities
    const entitySeq = new RunSequentialActions();
    entitySeq.actions.push(new FireEntityInputAction(scenePanel, 'intro_camera', 'SetAnimation', 'diretide_intro_cam3'));
    // Add an action
    entitySeq.actions.push(new WaitAction(16.0));
    // Script the shader effect with a little local action definition.
    class PostProcessFadeLerpAction extends LerpAction {
        applyProgress(progress) {
            scenePanel.SetPostProcessFade(progress * (0.85 - 0.2) + 0.2);
        }
    }
    // Run both the UI and Entity sequence in parallel
    const par = new RunParallelActions();
    par.actions.push(uiSeq);
    par.actions.push(entitySeq);
    //par.actions.push( new PostProcessFadeLerpAction( 4.6 ) );
    mainSeq.actions.push(par);
    // All done, fade to black
    mainSeq.actions.push(new RunFunctionAction(function () {
        if (IsFadeOutEnabled()) {
            //			PlaySoundEffect( 'versus_screen.whoosh' );
            mainPanel.RemoveClass('RevealScene');
        }
    }));
    // Now that the sequence is created, actually run the thing
    RunSingleAction(mainSeq);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ludGVyMjAyMl92ZXJzdXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3aW50ZXIyMDIyX3ZlcnN1cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1RUFBdUU7QUFDdkUsaUZBQWlGO0FBQ2pGLHNGQUFzRjtBQUN0Rix3R0FBd0c7QUFFeEcsd0NBQXdDO0FBQ3hDLFNBQVMsU0FBUztJQUVqQixNQUFNLFNBQVMsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUF3QixDQUFDO0lBQzVELE1BQU0sVUFBVSxHQUFHLENBQUMsQ0FBb0IsY0FBYyxDQUFFLENBQUM7SUFFekQsa0NBQWtDO0lBRWxDLGdCQUFnQjtJQUNoQixnREFBZ0Q7SUFDaEQsd0RBQXdEO0lBRXhELDhDQUE4QztJQUM5QyxNQUFNLE9BQU8sR0FBRyxJQUFJLG9CQUFvQixFQUFFLENBQUM7SUFDM0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxxQkFBcUIsQ0FBRSx1QkFBdUIsQ0FBRSxDQUFFLENBQUM7SUFDN0UsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSx5QkFBeUIsQ0FBRSxVQUFVLENBQUUsQ0FBRSxDQUFDO0lBQ3BFOzs7Ozs7Ozs7OztNQVdFO0lBQ0YsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxVQUFVLENBQUUsR0FBRyxDQUFFLENBQUUsQ0FBQztJQUM5QyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLGNBQWMsQ0FBRSxTQUFTLEVBQUUsYUFBYSxDQUFFLENBQUUsQ0FBQztJQUN2RSxnRkFBZ0Y7SUFFaEYsK0JBQStCO0lBQy9CLE1BQU0sS0FBSyxHQUFHLElBQUksb0JBQW9CLEVBQUUsQ0FBQztJQUN6Qyw4RUFBOEU7SUFDOUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxVQUFVLENBQUUsRUFBRSxDQUFFLENBQUUsQ0FBQztJQUMzQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLGNBQWMsQ0FBRSxTQUFTLEVBQUUsaUJBQWlCLENBQUUsQ0FBRSxDQUFDO0lBQ3pFLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLElBQUksVUFBVSxDQUFFLEdBQUcsQ0FBRSxDQUFFLENBQUM7SUFDNUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxpQkFBaUIsQ0FBRSxTQUFTLEVBQUUsYUFBYSxDQUFFLENBQUUsQ0FBQztJQUN4RSxzRkFBc0Y7SUFFdEYsc0JBQXNCO0lBQ3RCLE1BQU0sU0FBUyxHQUFHLElBQUksb0JBQW9CLEVBQUUsQ0FBQztJQUM3QyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLHFCQUFxQixDQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixDQUFFLENBQUUsQ0FBQztJQUN6SCxnQkFBZ0I7SUFDaEIsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxVQUFVLENBQUUsSUFBSSxDQUFFLENBQUUsQ0FBQztJQUVqRCxrRUFBa0U7SUFDbEUsTUFBTSx5QkFBMEIsU0FBUSxVQUFVO1FBRWpELGFBQWEsQ0FBRSxRQUFnQjtZQUU5QixVQUFVLENBQUMsa0JBQWtCLENBQUUsUUFBUSxHQUFHLENBQUUsSUFBSSxHQUFHLEdBQUcsQ0FBRSxHQUFHLEdBQUcsQ0FBRSxDQUFDO1FBQ2xFLENBQUM7S0FDRDtJQUVELGtEQUFrRDtJQUNsRCxNQUFNLEdBQUcsR0FBRyxJQUFJLGtCQUFrQixFQUFFLENBQUM7SUFDckMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsS0FBSyxDQUFFLENBQUM7SUFDMUIsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsU0FBUyxDQUFFLENBQUM7SUFDOUIsMkRBQTJEO0lBQzNELE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFFLEdBQUcsQ0FBRSxDQUFDO0lBRTVCLDBCQUEwQjtJQUMxQixPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBRSxJQUFJLGlCQUFpQixDQUFFO1FBRTVDLElBQUssZ0JBQWdCLEVBQUUsRUFDdkI7WUFDQywrQ0FBK0M7WUFDL0MsU0FBUyxDQUFDLFdBQVcsQ0FBRSxhQUFhLENBQUUsQ0FBQztTQUN2QztJQUNGLENBQUMsQ0FBRSxDQUFFLENBQUM7SUFFTiwyREFBMkQ7SUFDM0QsZUFBZSxDQUFFLE9BQU8sQ0FBRSxDQUFDO0FBQzVCLENBQUMifQ==