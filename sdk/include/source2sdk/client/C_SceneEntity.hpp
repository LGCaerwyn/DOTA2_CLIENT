#pragma once

#include "source2sdk/source2gen/source2gen.hpp"
#include <cstddef>
#include <cstdint>
#include "source2sdk/client/C_PointEntity.hpp"
#include "source2sdk/client/C_SceneEntity_QueuedEvents_t.hpp"
namespace source2sdk
{
    namespace client
    {
        struct C_BaseFlex;
    };
};

// /////////////////////////////////////////////////////////////
// Module: client
// Created using source2gen - github.com/neverlosecc/source2gen
// /////////////////////////////////////////////////////////////

namespace source2sdk
{
    namespace client
    {
        // Registered alignment: 0x8
        // Alignment: 0x8
        // Standard-layout class: false
        // Size: 0x570
        // Has VTable
        // Construct allowed
        // MClassHasEntityLimitedDataDesc
        // 
        // static metadata: MNetworkVarNames "bool m_bIsPlayingBack"
        // static metadata: MNetworkVarNames "bool m_bPaused"
        // static metadata: MNetworkVarNames "bool m_bMultiplayer"
        // static metadata: MNetworkVarNames "bool m_bAutogenerated"
        // static metadata: MNetworkVarNames "float32 m_flForceClientTime"
        // static metadata: MNetworkVarNames "uint16 m_nSceneStringIndex"
        // static metadata: MNetworkVarNames "CHandle< C_BaseFlex > m_hActorList"
        #pragma pack(push, 1)
        class C_SceneEntity : public source2sdk::client::C_PointEntity
        {
        public:
            uint8_t _pad0510[0x8]; // 0x510
            // metadata: MNetworkEnable
            bool m_bIsPlayingBack; // 0x518            
            // metadata: MNetworkEnable
            bool m_bPaused; // 0x519            
            // metadata: MNetworkEnable
            bool m_bMultiplayer; // 0x51a            
            // metadata: MNetworkEnable
            bool m_bAutogenerated; // 0x51b            
            // metadata: MNetworkEnable
            // metadata: MNetworkChangeCallback "OnResetClientTime"
            float m_flForceClientTime; // 0x51c            
            // metadata: MNetworkEnable
            // metadata: MNetworkPriority "32"
            std::uint16_t m_nSceneStringIndex; // 0x520            
            bool m_bClientOnly; // 0x522            
            uint8_t _pad0523[0x1]; // 0x523
            // m_hOwner has a template type with potentially unknown template parameters. You can try uncommenting the field below.
            // CHandle<source2sdk::client::C_BaseFlex> m_hOwner;
            char m_hOwner[0x4]; // 0x524            
            // metadata: MNetworkEnable
            // metadata: MNetworkPriority "32"
            // m_hActorList has a template type with potentially unknown template parameters. You can try uncommenting the field below.
            // C_NetworkUtlVectorBase<CHandle<source2sdk::client::C_BaseFlex>> m_hActorList;
            char m_hActorList[0x18]; // 0x528            
            bool m_bWasPlaying; // 0x540            
            uint8_t _pad0541[0xf]; // 0x541
            // m_QueuedEvents has a template type with potentially unknown template parameters. You can try uncommenting the field below.
            // CUtlVector<source2sdk::client::C_SceneEntity_QueuedEvents_t> m_QueuedEvents;
            char m_QueuedEvents[0x18]; // 0x550            
            float m_flCurrentTime; // 0x568            
            uint8_t _pad056c[0x4];
        };
        #pragma pack(pop)
        
        // Cannot assert offsets of fields in C_SceneEntity because it is not a standard-layout class
        
        static_assert(sizeof(source2sdk::client::C_SceneEntity) == 0x570);
    };
};
